/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/anchor/plugin.js":
/*!*******************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/anchor/plugin.js ***!
  \*******************************************************************************/
/***/ (() => {

eval("/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.7 (2022-12-06)\r\n */\n(function () {\n  'use strict';\n\n  var global$2 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n  var global$1 = tinymce.util.Tools.resolve('tinymce.dom.RangeUtils');\n  var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n  var allowHtmlInNamedAnchor = function allowHtmlInNamedAnchor(editor) {\n    return editor.getParam('allow_html_in_named_anchor', false, 'boolean');\n  };\n  var namedAnchorSelector = 'a:not([href])';\n  var isEmptyString = function isEmptyString(str) {\n    return !str;\n  };\n  var getIdFromAnchor = function getIdFromAnchor(elm) {\n    var id = elm.getAttribute('id') || elm.getAttribute('name');\n    return id || '';\n  };\n  var isAnchor = function isAnchor(elm) {\n    return elm && elm.nodeName.toLowerCase() === 'a';\n  };\n  var isNamedAnchor = function isNamedAnchor(elm) {\n    return isAnchor(elm) && !elm.getAttribute('href') && getIdFromAnchor(elm) !== '';\n  };\n  var isEmptyNamedAnchor = function isEmptyNamedAnchor(elm) {\n    return isNamedAnchor(elm) && !elm.firstChild;\n  };\n  var removeEmptyNamedAnchorsInSelection = function removeEmptyNamedAnchorsInSelection(editor) {\n    var dom = editor.dom;\n    global$1(dom).walk(editor.selection.getRng(), function (nodes) {\n      global.each(nodes, function (node) {\n        if (isEmptyNamedAnchor(node)) {\n          dom.remove(node, false);\n        }\n      });\n    });\n  };\n  var isValidId = function isValidId(id) {\n    return /^[A-Za-z][A-Za-z0-9\\-:._]*$/.test(id);\n  };\n  var getNamedAnchor = function getNamedAnchor(editor) {\n    return editor.dom.getParent(editor.selection.getStart(), namedAnchorSelector);\n  };\n  var getId = function getId(editor) {\n    var anchor = getNamedAnchor(editor);\n    if (anchor) {\n      return getIdFromAnchor(anchor);\n    } else {\n      return '';\n    }\n  };\n  var createAnchor = function createAnchor(editor, id) {\n    editor.undoManager.transact(function () {\n      if (!allowHtmlInNamedAnchor(editor)) {\n        editor.selection.collapse(true);\n      }\n      if (editor.selection.isCollapsed()) {\n        editor.insertContent(editor.dom.createHTML('a', {\n          id: id\n        }));\n      } else {\n        removeEmptyNamedAnchorsInSelection(editor);\n        editor.formatter.remove('namedAnchor', null, null, true);\n        editor.formatter.apply('namedAnchor', {\n          value: id\n        });\n        editor.addVisual();\n      }\n    });\n  };\n  var updateAnchor = function updateAnchor(editor, id, anchorElement) {\n    anchorElement.removeAttribute('name');\n    anchorElement.id = id;\n    editor.addVisual();\n    editor.undoManager.add();\n  };\n  var insert = function insert(editor, id) {\n    var anchor = getNamedAnchor(editor);\n    if (anchor) {\n      updateAnchor(editor, id, anchor);\n    } else {\n      createAnchor(editor, id);\n    }\n    editor.focus();\n  };\n  var insertAnchor = function insertAnchor(editor, newId) {\n    if (!isValidId(newId)) {\n      editor.windowManager.alert('Id should start with a letter, followed only by letters, numbers, dashes, dots, colons or underscores.');\n      return false;\n    } else {\n      insert(editor, newId);\n      return true;\n    }\n  };\n  var open = function open(editor) {\n    var currentId = getId(editor);\n    editor.windowManager.open({\n      title: 'Anchor',\n      size: 'normal',\n      body: {\n        type: 'panel',\n        items: [{\n          name: 'id',\n          type: 'input',\n          label: 'ID',\n          placeholder: 'example'\n        }]\n      },\n      buttons: [{\n        type: 'cancel',\n        name: 'cancel',\n        text: 'Cancel'\n      }, {\n        type: 'submit',\n        name: 'save',\n        text: 'Save',\n        primary: true\n      }],\n      initialData: {\n        id: currentId\n      },\n      onSubmit: function onSubmit(api) {\n        if (insertAnchor(editor, api.getData().id)) {\n          api.close();\n        }\n      }\n    });\n  };\n  var register$1 = function register$1(editor) {\n    editor.addCommand('mceAnchor', function () {\n      open(editor);\n    });\n  };\n  var isNamedAnchorNode = function isNamedAnchorNode(node) {\n    return node && isEmptyString(node.attr('href')) && !isEmptyString(node.attr('id') || node.attr('name'));\n  };\n  var isEmptyNamedAnchorNode = function isEmptyNamedAnchorNode(node) {\n    return isNamedAnchorNode(node) && !node.firstChild;\n  };\n  var setContentEditable = function setContentEditable(state) {\n    return function (nodes) {\n      for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        if (isEmptyNamedAnchorNode(node)) {\n          node.attr('contenteditable', state);\n        }\n      }\n    };\n  };\n  var setup = function setup(editor) {\n    editor.on('PreInit', function () {\n      editor.parser.addNodeFilter('a', setContentEditable('false'));\n      editor.serializer.addNodeFilter('a', setContentEditable(null));\n    });\n  };\n  var registerFormats = function registerFormats(editor) {\n    editor.formatter.register('namedAnchor', {\n      inline: 'a',\n      selector: namedAnchorSelector,\n      remove: 'all',\n      split: true,\n      deep: true,\n      attributes: {\n        id: '%value'\n      },\n      onmatch: function onmatch(node, _fmt, _itemName) {\n        return isNamedAnchor(node);\n      }\n    });\n  };\n  var register = function register(editor) {\n    editor.ui.registry.addToggleButton('anchor', {\n      icon: 'bookmark',\n      tooltip: 'Anchor',\n      onAction: function onAction() {\n        return editor.execCommand('mceAnchor');\n      },\n      onSetup: function onSetup(buttonApi) {\n        return editor.selection.selectorChangedWithUnbind('a:not([href])', buttonApi.setActive).unbind;\n      }\n    });\n    editor.ui.registry.addMenuItem('anchor', {\n      icon: 'bookmark',\n      text: 'Anchor...',\n      onAction: function onAction() {\n        return editor.execCommand('mceAnchor');\n      }\n    });\n  };\n  function Plugin() {\n    global$2.add('anchor', function (editor) {\n      setup(editor);\n      register$1(editor);\n      register(editor);\n      editor.on('PreInit', function () {\n        registerFormats(editor);\n      });\n    });\n  }\n  Plugin();\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/anchor/plugin.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/plugins/anchor/plugin.js"]();
/******/ 	
/******/ })()
;
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/lists/plugin.min.js":
/*!**********************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/lists/plugin.min.js ***!
  \**********************************************************************************/
/***/ (() => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.7 (2022-12-06)\r\n */\n!function () {\n  \"use strict\";\n\n  function e(r) {\n    return function (e) {\n      return n = _typeof(t = e), (null === t ? \"null\" : \"object\" == n && (Array.prototype.isPrototypeOf(t) || t.constructor && \"Array\" === t.constructor.name) ? \"array\" : \"object\" == n && (String.prototype.isPrototypeOf(t) || t.constructor && \"String\" === t.constructor.name) ? \"string\" : n) === r;\n      var t, n;\n    };\n  }\n  function t(t) {\n    return function (e) {\n      return _typeof(e) === t;\n    };\n  }\n  function u() {}\n  function S(e) {\n    return function () {\n      return e;\n    };\n  }\n  function n(e) {\n    return e;\n  }\n  function r(e, t) {\n    return e === t;\n  }\n  function y(t) {\n    return function (e) {\n      return !t(e);\n    };\n  }\n  function o() {\n    return p;\n  }\n  var i = tinymce.util.Tools.resolve(\"tinymce.PluginManager\"),\n    a = e(\"string\"),\n    O = e(\"object\"),\n    s = e(\"array\"),\n    c = t(\"boolean\"),\n    f = t(\"function\"),\n    d = t(\"number\"),\n    l = S(!1),\n    m = S(!0),\n    p = {\n      fold: function fold(e, t) {\n        return e();\n      },\n      isSome: l,\n      isNone: m,\n      getOr: n,\n      getOrThunk: g,\n      getOrDie: function getOrDie(e) {\n        throw new Error(e || \"error: getOrDie called on none.\");\n      },\n      getOrNull: S(null),\n      getOrUndefined: S(void 0),\n      or: n,\n      orThunk: g,\n      map: o,\n      each: u,\n      bind: o,\n      exists: l,\n      forall: m,\n      filter: function filter() {\n        return p;\n      },\n      toArray: function toArray() {\n        return [];\n      },\n      toString: S(\"none()\")\n    };\n  function g(e) {\n    return e();\n  }\n  function C(e, t) {\n    for (var n = e.length, r = new Array(n), o = 0; o < n; o++) {\n      var i = e[o];\n      r[o] = t(i, o);\n    }\n    return r;\n  }\n  function b(e, t) {\n    for (var n = 0, r = e.length; n < r; n++) t(e[n], n);\n  }\n  function L(e, t) {\n    for (var n = [], r = 0, o = e.length; r < o; r++) {\n      var i = e[r];\n      t(i, r) && n.push(i);\n    }\n    return n;\n  }\n  function v(e, n, r) {\n    return b(e, function (e, t) {\n      r = n(r, e, t);\n    }), r;\n  }\n  function h(e, t, n) {\n    for (var r = 0, o = e.length; r < o; r++) {\n      var i = e[r];\n      if (t(i, r)) return E.some(i);\n      if (n(i, r)) break;\n    }\n    return E.none();\n  }\n  function N(e, t) {\n    return h(e, t, l);\n  }\n  function T(e, t) {\n    return function (e) {\n      for (var t = [], n = 0, r = e.length; n < r; ++n) {\n        if (!s(e[n])) throw new Error(\"Arr.flatten item \" + n + \" was not an array, input: \" + e);\n        P.apply(t, e[n]);\n      }\n      return t;\n    }(C(e, t));\n  }\n  function D(e) {\n    var t = I.call(e, 0);\n    return t.reverse(), t;\n  }\n  function x(e, t) {\n    return 0 <= t && t < e.length ? E.some(e[t]) : E.none();\n  }\n  function A(e) {\n    return x(e, 0);\n  }\n  function w(e) {\n    return x(e, e.length - 1);\n  }\n  var k = function k(n) {\n      function e() {\n        return o;\n      }\n      function t(e) {\n        return e(n);\n      }\n      var r = S(n),\n        o = {\n          fold: function fold(e, t) {\n            return t(n);\n          },\n          isSome: m,\n          isNone: l,\n          getOr: r,\n          getOrThunk: r,\n          getOrDie: r,\n          getOrNull: r,\n          getOrUndefined: r,\n          or: e,\n          orThunk: e,\n          map: function map(e) {\n            return k(e(n));\n          },\n          each: function each(e) {\n            e(n);\n          },\n          bind: t,\n          exists: t,\n          forall: t,\n          filter: function filter(e) {\n            return e(n) ? o : p;\n          },\n          toArray: function toArray() {\n            return [n];\n          },\n          toString: function toString() {\n            return \"some(\" + n + \")\";\n          }\n        };\n      return o;\n    },\n    E = {\n      some: k,\n      none: o,\n      from: function from(e) {\n        return null == e ? p : k(e);\n      }\n    },\n    I = Array.prototype.slice,\n    P = Array.prototype.push,\n    _B = function B() {\n      return (_B = Object.assign || function (e) {\n        for (var t, n = 1, r = arguments.length; n < r; n++) for (var o in t = arguments[n]) Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);\n        return e;\n      }).apply(this, arguments);\n    };\n  function R(r, e) {\n    return function (e) {\n      for (var t = 0; t < e.length; t++) {\n        var n = function (t) {\n          var n = t.brand.toLowerCase();\n          return N(r, function (e) {\n            var t;\n            return n === (null === (t = e.brand) || void 0 === t ? void 0 : t.toLowerCase());\n          }).map(function (e) {\n            return {\n              current: e.name,\n              version: G.nu(parseInt(t.version, 10), 0)\n            };\n          });\n        }(e[t]);\n        if (n.isSome()) return n;\n      }\n      return E.none();\n    }(e.brands);\n  }\n  function M(e, t) {\n    var n = String(t).toLowerCase();\n    return N(e, function (e) {\n      return e.search(n);\n    });\n  }\n  function U(e, t) {\n    return -1 !== e.indexOf(t);\n  }\n  function _(t) {\n    return function (e) {\n      return U(e, t);\n    };\n  }\n  function $(e) {\n    return window.matchMedia(e).matches;\n  }\n  function F(e, t) {\n    return e.dom === t.dom;\n  }\n  function H(e, t) {\n    return le().browser.isIE() ? (n = e.dom, r = t.dom, o = Node.DOCUMENT_POSITION_CONTAINED_BY, 0 != (n.compareDocumentPosition(r) & o)) : (i = e.dom) !== (a = t.dom) && i.contains(a);\n    var n, r, o, i, a;\n  }\n  function j(e, t) {\n    for (var n = ye(e), r = 0, o = n.length; r < o; r++) {\n      var i = n[r];\n      t(e[i], i);\n    }\n  }\n  function K() {\n    return Z(0, 0);\n  }\n  function V(e) {\n    function t(e) {\n      return function () {\n        return n === e;\n      };\n    }\n    var n = e.current,\n      r = e.version;\n    return {\n      current: n,\n      version: r,\n      isEdge: t(\"Edge\"),\n      isChrome: t(\"Chrome\"),\n      isIE: t(\"IE\"),\n      isOpera: t(\"Opera\"),\n      isFirefox: t(ne),\n      isSafari: t(\"Safari\")\n    };\n  }\n  function W(e) {\n    function t(e) {\n      return function () {\n        return n === e;\n      };\n    }\n    var n = e.current,\n      r = e.version;\n    return {\n      current: n,\n      version: r,\n      isWindows: t(ie),\n      isiOS: t(\"iOS\"),\n      isAndroid: t(ae),\n      isOSX: t(\"OSX\"),\n      isLinux: t(\"Linux\"),\n      isSolaris: t(se),\n      isFreeBSD: t(ue),\n      isChromeOS: t(ce)\n    };\n  }\n  function Q(e) {\n    if (null == e) throw new Error(\"Node cannot be null or undefined\");\n    return {\n      dom: e\n    };\n  }\n  var X,\n    q,\n    z,\n    Y,\n    Z = function Z(e, t) {\n      return {\n        major: e,\n        minor: t\n      };\n    },\n    G = {\n      nu: Z,\n      detect: function detect(e, t) {\n        var n,\n          r,\n          o = String(t).toLowerCase();\n        return 0 === e.length ? K() : (r = function (e, t) {\n          for (var n = 0; n < e.length; n++) {\n            var r = e[n];\n            if (r.test(t)) return r;\n          }\n        }(e, n = o)) ? Z(i(1), i(2)) : {\n          major: 0,\n          minor: 0\n        };\n        function i(e) {\n          return Number(n.replace(r, \"$\" + e));\n        }\n      },\n      unknown: K\n    },\n    J = (X = /^\\s+|\\s+$/g, function (e) {\n      return e.replace(X, \"\");\n    }),\n    ee = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n    te = {\n      browsers: S([{\n        name: \"Edge\",\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: function search(e) {\n          return U(e, \"edge/\") && U(e, \"chrome\") && U(e, \"safari\") && U(e, \"applewebkit\");\n        }\n      }, {\n        name: \"Chrome\",\n        brand: \"Chromium\",\n        versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/, ee],\n        search: function search(e) {\n          return U(e, \"chrome\") && !U(e, \"chromeframe\");\n        }\n      }, {\n        name: \"IE\",\n        versionRegexes: [/.*?msie\\ ?([0-9]+)\\.([0-9]+).*/, /.*?rv:([0-9]+)\\.([0-9]+).*/],\n        search: function search(e) {\n          return U(e, \"msie\") || U(e, \"trident\");\n        }\n      }, {\n        name: \"Opera\",\n        versionRegexes: [ee, /.*?opera\\/([0-9]+)\\.([0-9]+).*/],\n        search: _(\"opera\")\n      }, {\n        name: \"Firefox\",\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: _(\"firefox\")\n      }, {\n        name: \"Safari\",\n        versionRegexes: [ee, /.*?cpu os ([0-9]+)_([0-9]+).*/],\n        search: function search(e) {\n          return (U(e, \"safari\") || U(e, \"mobile/\")) && U(e, \"applewebkit\");\n        }\n      }]),\n      oses: S([{\n        name: \"Windows\",\n        search: _(\"win\"),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      }, {\n        name: \"iOS\",\n        search: function search(e) {\n          return U(e, \"iphone\") || U(e, \"ipad\");\n        },\n        versionRegexes: [/.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/, /.*cpu os ([0-9]+)_([0-9]+).*/, /.*cpu iphone os ([0-9]+)_([0-9]+).*/]\n      }, {\n        name: \"Android\",\n        search: _(\"android\"),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      }, {\n        name: \"OSX\",\n        search: _(\"mac os x\"),\n        versionRegexes: [/.*?mac\\ os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      }, {\n        name: \"Linux\",\n        search: _(\"linux\"),\n        versionRegexes: []\n      }, {\n        name: \"Solaris\",\n        search: _(\"sunos\"),\n        versionRegexes: []\n      }, {\n        name: \"FreeBSD\",\n        search: _(\"freebsd\"),\n        versionRegexes: []\n      }, {\n        name: \"ChromeOS\",\n        search: _(\"cros\"),\n        versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/]\n      }])\n    },\n    ne = \"Firefox\",\n    re = function re() {\n      return V({\n        current: void 0,\n        version: G.unknown()\n      });\n    },\n    oe = V,\n    ie = (S(\"Edge\"), S(\"Chrome\"), S(\"IE\"), S(\"Opera\"), S(ne), S(\"Safari\"), \"Windows\"),\n    ae = \"Android\",\n    se = \"Solaris\",\n    ue = \"FreeBSD\",\n    ce = \"ChromeOS\",\n    fe = function fe() {\n      return W({\n        current: void 0,\n        version: G.unknown()\n      });\n    },\n    de = W,\n    le = (S(ie), S(\"iOS\"), S(ae), S(\"Linux\"), S(\"OSX\"), S(se), S(ue), S(ce), Y = !(q = function q() {\n      return e = navigator.userAgent, t = E.from(navigator.userAgentData), n = $, g = te.browsers(), v = te.oses(), h = t.bind(function (e) {\n        return R(g, e);\n      }).orThunk(function () {\n        return M(g, n = e).map(function (e) {\n          var t = G.detect(e.versionRegexes, n);\n          return {\n            current: e.name,\n            version: t\n          };\n        });\n        var n;\n      }).fold(re, oe), y = M(v, r = e).map(function (e) {\n        var t = G.detect(e.versionRegexes, r);\n        return {\n          current: e.name,\n          version: t\n        };\n      }).fold(fe, de), {\n        browser: h,\n        os: y,\n        deviceType: (i = h, a = e, s = n, u = (o = y).isiOS() && !0 === /ipad/i.test(a), c = o.isiOS() && !u, d = (f = o.isiOS() || o.isAndroid()) || s(\"(pointer:coarse)\"), l = u || !c && f && s(\"(min-device-width:768px)\"), m = c || f && !l, p = i.isSafari() && o.isiOS() && !1 === /safari/i.test(a), {\n          isiPad: S(u),\n          isiPhone: S(c),\n          isTablet: S(l),\n          isPhone: S(m),\n          isTouch: S(d),\n          isAndroid: o.isAndroid,\n          isiOS: o.isiOS,\n          isWebView: S(p),\n          isDesktop: S(!m && !l && !p)\n        })\n      };\n      var e, t, n, r, o, i, a, s, u, c, f, d, l, m, p, g, v, h, y;\n    }), function () {\n      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];\n      return Y || (Y = !0, z = q.apply(null, e)), z;\n    }),\n    me = {\n      fromHtml: function fromHtml(e, t) {\n        var n = (t || document).createElement(\"div\");\n        if (n.innerHTML = e, !n.hasChildNodes() || 1 < n.childNodes.length) throw console.error(\"HTML does not have a single root node\", e), new Error(\"HTML must have a single root node\");\n        return Q(n.childNodes[0]);\n      },\n      fromTag: function fromTag(e, t) {\n        var n = (t || document).createElement(e);\n        return Q(n);\n      },\n      fromText: function fromText(e, t) {\n        var n = (t || document).createTextNode(e);\n        return Q(n);\n      },\n      fromDom: Q,\n      fromPoint: function fromPoint(e, t, n) {\n        return E.from(e.dom.elementFromPoint(t, n)).map(Q);\n      }\n    },\n    pe = function pe(e, t) {\n      var n = e.dom;\n      if (1 !== n.nodeType) return !1;\n      var r = n;\n      if (void 0 !== r.matches) return r.matches(t);\n      if (void 0 !== r.msMatchesSelector) return r.msMatchesSelector(t);\n      if (void 0 !== r.webkitMatchesSelector) return r.webkitMatchesSelector(t);\n      if (void 0 !== r.mozMatchesSelector) return r.mozMatchesSelector(t);\n      throw new Error(\"Browser lacks native selectors\");\n    },\n    ge = tinymce.util.Tools.resolve(\"tinymce.dom.RangeUtils\"),\n    ve = tinymce.util.Tools.resolve(\"tinymce.dom.TreeWalker\"),\n    he = tinymce.util.Tools.resolve(\"tinymce.util.VK\"),\n    ye = Object.keys;\n  function Se(e) {\n    return e.dom.nodeName.toLowerCase();\n  }\n  function Ce(t) {\n    return function (e) {\n      return Bt(e) && Se(e) === t;\n    };\n  }\n  function be(e, t) {\n    var n = e.dom;\n    j(t, function (e, t) {\n      !function (e, t, n) {\n        if (!(a(n) || c(n) || d(n))) throw console.error(\"Invalid call to Attribute.set. Key \", t, \":: Value \", n, \":: Element \", e), new Error(\"Attribute value was not simple\");\n        e.setAttribute(t, n + \"\");\n      }(n, t, e);\n    });\n  }\n  function Ne(e) {\n    return v(e.dom.attributes, function (e, t) {\n      return e[t.name] = t.value, e;\n    }, {});\n  }\n  function Oe(e) {\n    return E.from(e.dom.parentNode).map(me.fromDom);\n  }\n  function Le(e) {\n    return C(e.dom.childNodes, me.fromDom);\n  }\n  function Te(e, t) {\n    var n = e.dom.childNodes;\n    return E.from(n[t]).map(me.fromDom);\n  }\n  function De(e) {\n    return Te(e, 0);\n  }\n  function xe(e) {\n    return Te(e, e.dom.childNodes.length - 1);\n  }\n  function Ae(t, n) {\n    Oe(t).each(function (e) {\n      e.dom.insertBefore(n.dom, t.dom);\n    });\n  }\n  function we(e, t) {\n    e.dom.appendChild(t.dom);\n  }\n  function ke(t, e) {\n    b(e, function (e) {\n      we(t, e);\n    });\n  }\n  function Ee(e) {\n    var t = e.dom;\n    null !== t.parentNode && t.parentNode.removeChild(t);\n  }\n  function Ie(e) {\n    return me.fromDom(e.dom.cloneNode(!0));\n  }\n  function Pe(e, t) {\n    var n,\n      r,\n      o = (n = e, be(r = me.fromTag(t), Ne(n)), r);\n    return Ae(e, o), ke(o, Le(e)), Ee(e), o;\n  }\n  function Be(t) {\n    return function (e) {\n      return e && e.nodeName.toLowerCase() === t;\n    };\n  }\n  function Re(t) {\n    return function (e) {\n      return e && t.test(e.nodeName);\n    };\n  }\n  function Me(e) {\n    return e && 3 === e.nodeType;\n  }\n  function Ue(e, t) {\n    return t && e.schema.getTextBlockElements()[t.nodeName];\n  }\n  function _e(e, t) {\n    return e && e.nodeName in t;\n  }\n  function $e(e, t, n) {\n    var r = e.isEmpty(t);\n    return !(n && 0 < e.select(\"span[data-mce-type=bookmark]\", t).length) && r;\n  }\n  function Fe(e, t) {\n    return e.isChildOf(t, e.getRoot());\n  }\n  function He(e, t) {\n    var n,\n      r,\n      o,\n      i,\n      a = e.dom,\n      s = e.schema.getBlockElements(),\n      u = a.createFragment(),\n      c = !1 === (n = e.getParam(\"forced_root_block\", \"p\")) ? \"\" : !0 === n ? \"p\" : n;\n    if (c && ((o = a.create(c)).tagName === c.toUpperCase() && a.setAttribs(o, e.getParam(\"forced_root_block_attrs\", {})), _e(t.firstChild, s) || u.appendChild(o)), t) for (; r = t.firstChild;) {\n      var f = r.nodeName;\n      i || \"SPAN\" === f && \"bookmark\" === r.getAttribute(\"data-mce-type\") || (i = !0), _e(r, s) ? (u.appendChild(r), o = null) : c ? (o || (o = a.create(c), u.appendChild(o)), o.appendChild(r)) : u.appendChild(r);\n    }\n    return c ? i || o.appendChild(a.create(\"br\", {\n      \"data-mce-bogus\": \"1\"\n    })) : u.appendChild(a.create(\"br\")), u;\n  }\n  function je(e) {\n    Qt(e) && Pe(e, \"dd\");\n  }\n  function Ke(r, e, t) {\n    b(t, \"Indent\" === e ? je : function (e) {\n      return t = r, Wt(n = e) ? Pe(n, \"dt\") : Qt(n) && Oe(n).each(function (e) {\n        return function (e, t, n) {\n          var r = Vt.select('span[data-mce-type=\"bookmark\"]', t),\n            o = He(e, n),\n            i = Vt.createRng();\n          i.setStartAfter(n), i.setEndAfter(t);\n          for (var a, s = i.extractContents(), u = s.firstChild; u; u = u.firstChild) if (\"LI\" === u.nodeName && e.dom.isEmpty(u)) {\n            Vt.remove(u);\n            break;\n          }\n          e.dom.isEmpty(s) || Vt.insertAfter(s, t), Vt.insertAfter(o, t), $e(e.dom, n.parentNode) && (a = n.parentNode, Mt.each(r, function (e) {\n            a.parentNode.insertBefore(e, n.parentNode);\n          }), Vt.remove(a)), Vt.remove(n), $e(e.dom, t) && Vt.remove(t);\n        }(t, e.dom, n.dom);\n      }), 0;\n      var t, n;\n    });\n  }\n  function Ve(e, t) {\n    if (Me(e)) return {\n      container: e,\n      offset: t\n    };\n    var n = ge.getNode(e, t);\n    return Me(n) ? {\n      container: n,\n      offset: t >= e.childNodes.length ? n.data.length : 0\n    } : n.previousSibling && Me(n.previousSibling) ? {\n      container: n.previousSibling,\n      offset: n.previousSibling.data.length\n    } : n.nextSibling && Me(n.nextSibling) ? {\n      container: n.nextSibling,\n      offset: 0\n    } : {\n      container: e,\n      offset: t\n    };\n  }\n  function We(e) {\n    var t = e.cloneRange(),\n      n = Ve(e.startContainer, e.startOffset);\n    t.setStart(n.container, n.offset);\n    var r = Ve(e.endContainer, e.endOffset);\n    return t.setEnd(r.container, r.offset), t;\n  }\n  function Qe(e, t) {\n    var n = t || e.selection.getStart(!0);\n    return e.dom.getParent(n, \"OL,UL,DL\", qt(e, n));\n  }\n  function Xe(e) {\n    var t,\n      n,\n      r = e.selection.getSelectedBlocks();\n    return L((t = e, n = Mt.map(r, function (e) {\n      return t.dom.getParent(e, \"li,dd,dt\", qt(t, e)) || e;\n    }), Xt.unique(n)), Ft);\n  }\n  function qe(e, t) {\n    return w(e.dom.getParents(t, \"ol,ul\", qt(e, t)));\n  }\n  function ze(e, t, n) {\n    return void 0 === n && (n = r), e.exists(function (e) {\n      return n(e, t);\n    });\n  }\n  function Ye(e, t, n) {\n    return e.isSome() && t.isSome() ? E.some(n(e.getOrDie(), t.getOrDie())) : E.none();\n  }\n  function Ze(e, t, n) {\n    return e.fire(\"ListMutation\", {\n      action: t,\n      element: n\n    });\n  }\n  function Ge(e, t) {\n    we(e.item, t.list);\n  }\n  function Je(e, t) {\n    for (var n = 0; n < e.length - 1; n++) (function (e, t, n) {\n      if (!a(n)) throw console.error(\"Invalid call to CSS.set. Property \", t, \":: Value \", n, \":: Element \", e), new Error(\"CSS value must be a string: \" + n);\n      void 0 !== e.style && f(e.style.getPropertyValue) && e.style.setProperty(t, n);\n    })(e[n].item.dom, \"list-style-type\", \"none\");\n    w(e).each(function (e) {\n      be(e.list, t.listAttributes), be(e.item, t.itemAttributes), ke(e.item, t.content);\n    });\n  }\n  function et(u, e, c) {\n    var t = e.slice(0, c.depth);\n    return w(t).each(function (e) {\n      var t,\n        n,\n        r,\n        o,\n        i,\n        a,\n        s = (t = c.itemAttributes, n = c.content, be(r = me.fromTag(\"li\", u), t), ke(r, n), r);\n      we((o = e).list, s), o.item = s, a = c, Se((i = e).list) !== a.listType && (i.list = Pe(i.list, a.listType)), be(i.list, a.listAttributes);\n    }), t;\n  }\n  function tt(e, t, n) {\n    var r,\n      o = function (e, t, n) {\n        for (var r, o, i, a = [], s = 0; s < n; s++) a.push((o = t.listType, we((i = {\n          list: me.fromTag(o, r = e),\n          item: me.fromTag(\"li\", r)\n        }).list, i.item), i));\n        return a;\n      }(e, n, n.depth - t.length);\n    return function (e) {\n      for (var t = 1; t < e.length; t++) Ge(e[t - 1], e[t]);\n    }(o), Je(o, n), r = o, Ye(w(t), A(r), Ge), t.concat(o);\n  }\n  function nt(e) {\n    return pe(e, \"OL,UL\");\n  }\n  function rt(e) {\n    return De(e).exists(nt);\n  }\n  function ot(e) {\n    return 0 < e.depth;\n  }\n  function it(e) {\n    return e.isSelected;\n  }\n  function at(s) {\n    return b(s, function (a, e) {\n      function t(e) {\n        return e.depth === i && !e.dirty;\n      }\n      function n(e) {\n        return e.depth < i;\n      }\n      var r, o, i;\n      i = (r = s)[o = e].depth, h(D(r.slice(0, o)), t, n).orThunk(function () {\n        return h(r.slice(o + 1), t, n);\n      }).fold(function () {\n        var e, t, n, r, o, i;\n        a.dirty && (a.listAttributes = (e = a.listAttributes, n = function n(e, t) {\n          return \"start\" !== t;\n        }, r = t = {}, o = function o(e, t) {\n          r[t] = e;\n        }, i = u, j(e, function (e, t) {\n          (n(e, t) ? o : i)(e, t);\n        }), t));\n      }, function (e) {\n        var t = e;\n        a.listType = t.listType, a.listAttributes = _B({}, t.listAttributes);\n      });\n    }), s;\n  }\n  function st(n, a, s, u) {\n    return De(u).filter(nt).fold(function () {\n      a.each(function (e) {\n        F(e.start, u) && s.set(!0);\n      });\n      var r,\n        o,\n        i,\n        e = (r = u, o = n, i = s.get(), Oe(r).filter(Bt).map(function (e) {\n          return {\n            depth: o,\n            dirty: !1,\n            isSelected: i,\n            content: (n = Le(t = r), C(xe(t).exists(nt) ? n.slice(0, -1) : n, Ie)),\n            itemAttributes: Ne(r),\n            listAttributes: Ne(e),\n            listType: Se(e)\n          };\n          var t, n;\n        }));\n      a.each(function (e) {\n        F(e.end, u) && s.set(!1);\n      });\n      var t = xe(u).filter(nt).map(function (e) {\n        return Yt(n, a, s, e);\n      }).getOr([]);\n      return e.toArray().concat(t);\n    }, function (e) {\n      return Yt(n, a, s, e);\n    });\n  }\n  function ut(o, e) {\n    return C(at(e), function (e) {\n      var t,\n        n,\n        r = (t = e.content, n = document.createDocumentFragment(), b(t, function (e) {\n          n.appendChild(e.dom);\n        }), me.fromDom(n));\n      return me.fromDom(He(o, r.dom));\n    });\n  }\n  function ct(e, t) {\n    var n = at(t),\n      r = e.contentDocument;\n    return A(v(n, function (e, t) {\n      return (t.depth > e.length ? tt : et)(r, e, t);\n    }, [])).map(function (e) {\n      return e.list;\n    }).toArray();\n  }\n  function ft(e, t) {\n    b(L(e, it), function (e) {\n      return function (e) {\n        switch (t) {\n          case \"Indent\":\n            e.depth++;\n            break;\n          case \"Outdent\":\n            e.depth--;\n            break;\n          case \"Flatten\":\n            e.depth = 0;\n        }\n        e.dirty = !0;\n      }(e), 0;\n    });\n  }\n  function dt(e, t) {\n    var n,\n      r,\n      o,\n      i,\n      a,\n      s,\n      u,\n      c,\n      f,\n      d,\n      l,\n      m,\n      p,\n      g = C((i = qe(o = r = e, o.selection.getStart()), a = L(o.selection.getSelectedBlocks(), _t), s = i.toArray().concat(a), zt(r, s)), me.fromDom),\n      v = C(L(Xe(e), Ht), me.fromDom),\n      h = !1;\n    return (g.length || v.length) && (n = e.selection.getBookmark(), c = t, b((f = g, p = C(Xe(u = e), me.fromDom), d = Ye(N(p, y(rt)), N(D(p), y(rt)), function (e, t) {\n      return {\n        start: e,\n        end: t\n      };\n    }), l = !1, m = {\n      get: function get() {\n        return l;\n      },\n      set: function set(e) {\n        l = e;\n      }\n    }, C(f, function (e) {\n      return {\n        sourceList: e,\n        entries: Yt(0, d, m, e)\n      };\n    })), function (e) {\n      ft(e.entries, c);\n      var t,\n        n,\n        r = (t = u, T(function (e, t) {\n          if (0 === e.length) return [];\n          for (var n = t(e[0]), r = [], o = [], i = 0, a = e.length; i < a; i++) {\n            var s = e[i],\n              u = t(s);\n            u !== n && (r.push(o), o = []), n = u, o.push(s);\n          }\n          return 0 !== o.length && r.push(o), r;\n        }(e.entries, ot), function (e) {\n          return (A(e).exists(ot) ? ct : ut)(t, e);\n        }));\n      b(r, function (e) {\n        Ze(u, \"Indent\" === c ? \"IndentList\" : \"OutdentList\", e.dom);\n      }), n = e.sourceList, b(r, function (e) {\n        Ae(n, e);\n      }), Ee(e.sourceList);\n    }), Ke(e, t, v), e.selection.moveToBookmark(n), e.selection.setRng(We(e.selection.getRng())), e.nodeChanged(), h = !0), h;\n  }\n  function lt(e) {\n    return dt(e, \"Indent\");\n  }\n  function mt(e) {\n    return dt(e, \"Outdent\");\n  }\n  function pt(e) {\n    return dt(e, \"Flatten\");\n  }\n  function gt(o) {\n    function e(e) {\n      var t,\n        n = o[e ? \"startContainer\" : \"endContainer\"],\n        r = o[e ? \"startOffset\" : \"endOffset\"];\n      1 === n.nodeType && (t = Gt.create(\"span\", {\n        \"data-mce-type\": \"bookmark\"\n      }), n.hasChildNodes() ? (r = Math.min(r, n.childNodes.length - 1), e ? n.insertBefore(t, n.childNodes[r]) : Gt.insertAfter(t, n.childNodes[r])) : n.appendChild(t), n = t, r = 0), i[e ? \"startContainer\" : \"endContainer\"] = n, i[e ? \"startOffset\" : \"endOffset\"] = r;\n    }\n    var i = {};\n    return e(!0), o.collapsed || e(), i;\n  }\n  function vt(o) {\n    function e(e) {\n      var t,\n        n = t = o[e ? \"startContainer\" : \"endContainer\"],\n        r = o[e ? \"startOffset\" : \"endOffset\"];\n      n && (1 === n.nodeType && (r = function (e) {\n        for (var t = e.parentNode.firstChild, n = 0; t;) {\n          if (t === e) return n;\n          1 === t.nodeType && \"bookmark\" === t.getAttribute(\"data-mce-type\") || n++, t = t.nextSibling;\n        }\n        return -1;\n      }(n), n = n.parentNode, Gt.remove(t), !n.hasChildNodes() && Gt.isBlock(n) && n.appendChild(Gt.create(\"br\"))), o[e ? \"startContainer\" : \"endContainer\"] = n, o[e ? \"startOffset\" : \"endOffset\"] = r);\n    }\n    e(!0), e();\n    var t = Gt.createRng();\n    return t.setStart(o.startContainer, o.startOffset), o.endContainer && t.setEnd(o.endContainer, o.endOffset), We(t);\n  }\n  function ht(e) {\n    switch (e) {\n      case \"UL\":\n        return \"ToggleUlList\";\n      case \"OL\":\n        return \"ToggleOlList\";\n      case \"DL\":\n        return \"ToggleDLList\";\n    }\n  }\n  function yt(e) {\n    return /\\btox\\-/.test(e.className);\n  }\n  function St(e, n, r) {\n    function t(e) {\n      var t = h(e.parents, Ut, jt).filter(function (e) {\n        return e.nodeName === n && !yt(e);\n      }).isSome();\n      r(t);\n    }\n    return t({\n      parents: e.dom.getParents(e.selection.getNode())\n    }), e.on(\"NodeChange\", t), function () {\n      return e.off(\"NodeChange\", t);\n    };\n  }\n  function Ct(n, e) {\n    Mt.each(e, function (e, t) {\n      n.setAttribute(t, e);\n    });\n  }\n  function bt(e, t, n) {\n    var r,\n      o,\n      i,\n      a = n[\"list-style-type\"] || null;\n    e.setStyle(t, \"list-style-type\", a), r = e, Ct(o = t, (i = n)[\"list-attributes\"]), Mt.each(r.select(\"li\", o), function (e) {\n      Ct(e, i[\"list-item-attributes\"]);\n    });\n  }\n  function Nt(e, t, n, r) {\n    var o = t[n ? \"startContainer\" : \"endContainer\"],\n      i = t[n ? \"startOffset\" : \"endOffset\"];\n    for (1 === o.nodeType && (o = o.childNodes[Math.min(i, o.childNodes.length - 1)] || o), !n && Kt(o.nextSibling) && (o = o.nextSibling); o.parentNode !== r;) {\n      if (Ue(e, o)) return o;\n      if (/^(TD|TH)$/.test(o.parentNode.nodeName)) return o;\n      o = o.parentNode;\n    }\n    return o;\n  }\n  function Ot(u, c, f) {\n    var e,\n      t,\n      n = u.selection.getRng(),\n      d = \"LI\",\n      r = qt(u, u.selection.getStart(!0)),\n      l = u.dom;\n    \"false\" !== l.getContentEditable(u.selection.getNode()) && (\"DL\" === (c = c.toUpperCase()) && (d = \"DT\"), e = gt(n), t = function (n, e, r) {\n      for (var o, i = [], a = n.dom, t = Nt(n, e, !0, r), s = Nt(n, e, !1, r), u = [], c = t; c && (u.push(c), c !== s); c = c.nextSibling);\n      return Mt.each(u, function (e) {\n        if (Ue(n, e)) return i.push(e), void (o = null);\n        if (a.isBlock(e) || Kt(e)) return Kt(e) && a.remove(e), void (o = null);\n        var t = e.nextSibling;\n        Zt.isBookmarkNode(e) && (Ut(t) || Ue(n, t) || !t && e.parentNode === r) ? o = null : (o || (o = a.create(\"p\"), e.parentNode.insertBefore(o, e), i.push(o)), o.appendChild(e));\n      }), i;\n    }(u, n, r), Mt.each(t, function (e) {\n      var t,\n        n,\n        r,\n        o,\n        i,\n        a = e.previousSibling,\n        s = e.parentNode;\n      Ft(s) || (a && Ut(a) && a.nodeName === c && (o = f, l.getStyle(a, \"list-style-type\") === (i = null === (i = o ? o[\"list-style-type\"] : \"\") ? \"\" : i)) ? (t = a, e = l.rename(e, d), a.appendChild(e)) : (t = l.create(c), e.parentNode.insertBefore(t, e), t.appendChild(e), e = l.rename(e, d)), n = l, r = e, Mt.each([\"margin\", \"margin-right\", \"margin-bottom\", \"margin-left\", \"margin-top\", \"padding\", \"padding-right\", \"padding-bottom\", \"padding-left\", \"padding-top\"], function (e) {\n        var t;\n        return n.setStyle(r, ((t = {})[e] = \"\", t));\n      }), bt(l, t, f), Jt(u.dom, t));\n    }), u.selection.setRng(vt(e)));\n  }\n  function Lt(e, t, n) {\n    return a = n, (i = t) && a && Ut(i) && i.nodeName === a.nodeName && (o = n, (r = e).getStyle(t, \"list-style-type\", !0) === r.getStyle(o, \"list-style-type\", !0)) && t.className === n.className;\n    var r, o, i, a;\n  }\n  function Tt(e, t, n) {\n    var r,\n      o,\n      i,\n      a,\n      s,\n      u,\n      c,\n      f,\n      d,\n      l,\n      m,\n      p,\n      g,\n      v,\n      h,\n      y,\n      S,\n      C = Qe(e),\n      b = (f = Qe(c = e), d = c.selection.getSelectedBlocks(), f && 1 === d.length && d[0] === f ? L(f.querySelectorAll(\"ol,ul,dl\"), Ut) : L(d, function (e) {\n        return Ut(e) && f !== e;\n      })),\n      N = O(n) ? n : {};\n    0 < b.length ? (l = e, p = b, g = t, v = N, (S = Ut(m = C)) && m.nodeName === g && !en(v) ? pt(l) : (Ot(l, g, v), h = gt(l.selection.getRng()), y = S ? function (e, t) {\n      for (var n, r = 0, o = t.length; r < o; r++) !n && r in t || ((n = n || Array.prototype.slice.call(t, 0, r))[r] = t[r]);\n      return e.concat(n || Array.prototype.slice.call(t));\n    }([m], p, !0) : p, Mt.each(y, function (e) {\n      var t,\n        n,\n        r = l,\n        o = g,\n        i = v;\n      (t = e).nodeName !== o ? (n = r.dom.rename(t, o), bt(r.dom, n, i), Ze(r, ht(o), n)) : (bt(r.dom, t, i), Ze(r, ht(o), t));\n    }), l.selection.setRng(vt(h)))) : (i = t, a = N, (o = C) !== (r = e).getBody() && (o ? o.nodeName !== i || en(a) || yt(o) ? (s = gt(r.selection.getRng()), bt(r.dom, o, a), u = r.dom.rename(o, i), Jt(r.dom, u), r.selection.setRng(vt(s)), Ot(r, i, a), Ze(r, ht(i), u)) : pt(r) : (Ot(r, i, a), Ze(r, ht(i), o))));\n  }\n  function Dt(e, t, n, r) {\n    var o = t.startContainer,\n      i = t.startOffset;\n    if (Me(o) && (n ? i < o.data.length : 0 < i)) return o;\n    var a = e.schema.getNonEmptyElements();\n    1 === o.nodeType && (o = ge.getNode(o, i));\n    var s,\n      u,\n      c = new ve(o, r);\n    for (n && (s = e.dom, Kt(u = o) && s.isBlock(u.nextSibling) && !Kt(u.previousSibling) && c.next()); o = c[n ? \"next\" : \"prev2\"]();) {\n      if (\"LI\" === o.nodeName && !o.hasChildNodes()) return o;\n      if (a[o.nodeName]) return o;\n      if (Me(o) && 0 < o.data.length) return o;\n    }\n  }\n  function xt(e, t) {\n    var n = t.childNodes;\n    return 1 === n.length && !Ut(n[0]) && e.isBlock(n[0]);\n  }\n  function At(t, e, n) {\n    var r,\n      o,\n      i,\n      a = e.parentNode;\n    Fe(t, e) && Fe(t, n) && (Ut(n.lastChild) && (r = n.lastChild), a === n.lastChild && Kt(a.previousSibling) && t.remove(a.previousSibling), (o = n.lastChild) && Kt(o) && e.hasChildNodes() && t.remove(o), $e(t, n, !0) && t.$(n).empty(), function (e, t, n) {\n      var r,\n        o,\n        i,\n        a = xt(e, n) ? n.firstChild : n;\n      if (xt(o = e, i = t) && o.remove(i.firstChild, !0), !$e(e, t, !0)) for (; r = t.firstChild;) a.appendChild(r);\n    }(t, e, n), r && n.appendChild(r), i = H(me.fromDom(n), me.fromDom(e)) ? t.getParents(e, Ut, n) : [], t.remove(e), b(i, function (e) {\n      $e(t, e) && e !== t.getRoot() && t.remove(e);\n    }));\n  }\n  function wt(c, f) {\n    var e = c.dom,\n      t = c.selection,\n      n = t.getStart(),\n      r = qt(c, n),\n      d = e.getParent(t.getStart(), \"LI\", r);\n    if (d) {\n      var o = d.parentNode;\n      if (o === c.getBody() && $e(e, o)) return 1;\n      var l = We(t.getRng()),\n        m = e.getParent(Dt(c, l, f, r), \"LI\", r);\n      if (m && m !== d) return c.undoManager.transact(function () {\n        var e, t, n, r, o, i, a, s, u;\n        f ? (t = l, n = m, r = d, (u = (e = c).dom).isEmpty(r) ? (a = n, (i = e).dom.$(s = r).empty(), At(i.dom, a, s), i.selection.setCursorLocation(s, 0)) : (o = gt(t), At(u, n, r), e.selection.setRng(vt(o)))) : d.parentNode.firstChild === d ? mt(c) : function (e, t, n) {\n          var r = gt(l);\n          At(e.dom, t, n);\n          var o = vt(r);\n          e.selection.setRng(o);\n        }(c, d, m);\n      }), 1;\n      if (!m && !f && 0 === l.startOffset && 0 === l.endOffset) return c.undoManager.transact(function () {\n        pt(c);\n      }), 1;\n    }\n  }\n  function kt(e, t) {\n    return e.selection.isCollapsed() ? wt(i = e, a = t) || function (r, o) {\n      var i = r.dom,\n        e = r.selection.getStart(),\n        a = qt(r, e),\n        s = i.getParent(e, i.isBlock, a);\n      if (s && i.isEmpty(s)) {\n        var t = We(r.selection.getRng()),\n          u = i.getParent(Dt(r, t, o, a), \"LI\", a);\n        if (u) return r.undoManager.transact(function () {\n          var e,\n            t = s,\n            n = (e = i).getParent(t.parentNode, e.isBlock, a);\n          e.remove(t), n && e.isEmpty(n) && e.remove(n), Jt(i, u.parentNode), r.selection.select(u, !0), r.selection.collapse(o);\n        }), 1;\n      }\n    }(i, a) : (r = (n = e).selection.getStart(), o = qt(n, r), (n.dom.getParent(r, \"LI,DT,DD\", o) || 0 < Xe(n).length) && (n.undoManager.transact(function () {\n      var i, e, t;\n      n.execCommand(\"Delete\"), i = n.dom, e = n.getBody(), t = Mt.grep(i.select(\"ol,ul\", e)), Mt.each(t, function (e) {\n        var t,\n          n,\n          r,\n          o = i;\n        \"LI\" === (r = (t = e).parentNode).nodeName && r.firstChild === t && ((n = r.previousSibling) && \"LI\" === n.nodeName ? (n.appendChild(t), $e(o, r) && tn.remove(r)) : tn.setStyle(r, \"listStyleType\", \"none\")), Ut(r) && (n = r.previousSibling) && \"LI\" === n.nodeName && n.appendChild(t);\n      });\n    }), 1));\n    var n, r, o, i, a;\n  }\n  function Et(e) {\n    return v(C(D(J(e).split(\"\")), function (e, t) {\n      var n = e.toUpperCase().charCodeAt(0) - \"A\".charCodeAt(0) + 1;\n      return Math.pow(26, t) * n;\n    }), function (e, t) {\n      return e + t;\n    }, 0);\n  }\n  function It(t, n) {\n    return function () {\n      var e = Qe(t);\n      return e && e.nodeName === n;\n    };\n  }\n  function Pt(o) {\n    o.addCommand(\"mceListProps\", function () {\n      var t, e, n, r;\n      r = Qe(t = o), $t(r) && t.windowManager.open({\n        title: \"List Properties\",\n        body: {\n          type: \"panel\",\n          items: [{\n            type: \"input\",\n            name: \"start\",\n            label: \"Start list at number\",\n            inputMode: \"numeric\"\n          }]\n        },\n        initialData: {\n          start: (e = {\n            start: t.dom.getAttrib(r, \"start\", \"1\"),\n            listStyleType: E.some(t.dom.getStyle(r, \"list-style-type\"))\n          }, n = parseInt(e.start, 10), ze(e.listStyleType, \"upper-alpha\") ? nn(n) : ze(e.listStyleType, \"lower-alpha\") ? nn(n).toLowerCase() : e.start)\n        },\n        buttons: [{\n          type: \"cancel\",\n          name: \"cancel\",\n          text: \"Cancel\"\n        }, {\n          type: \"submit\",\n          name: \"save\",\n          text: \"Save\",\n          primary: !0\n        }],\n        onSubmit: function onSubmit(e) {\n          !function (e) {\n            switch (/^[0-9]+$/.test(t = e) ? 2 : /^[A-Z]+$/.test(t) ? 0 : /^[a-z]+$/.test(t) ? 1 : 0 < t.length ? 4 : 3) {\n              case 2:\n                return E.some({\n                  listStyleType: E.none(),\n                  start: e\n                });\n              case 0:\n                return E.some({\n                  listStyleType: E.some(\"upper-alpha\"),\n                  start: Et(e).toString()\n                });\n              case 1:\n                return E.some({\n                  listStyleType: E.some(\"lower-alpha\"),\n                  start: Et(e).toString()\n                });\n              case 3:\n                return E.some({\n                  listStyleType: E.none(),\n                  start: \"\"\n                });\n              case 4:\n                return E.none();\n            }\n            var t;\n          }(e.getData().start).each(function (e) {\n            t.execCommand(\"mceListUpdate\", !1, {\n              attrs: {\n                start: \"1\" === e.start ? \"\" : e.start\n              },\n              styles: {\n                \"list-style-type\": e.listStyleType.getOr(\"\")\n              }\n            });\n          }), e.close();\n        }\n      });\n    });\n  }\n  \"undefined\" != typeof window || Function(\"return this;\")();\n  function Bt(e) {\n    return 1 === e.dom.nodeType;\n  }\n  var Rt = tinymce.util.Tools.resolve(\"tinymce.dom.DOMUtils\"),\n    Mt = tinymce.util.Tools.resolve(\"tinymce.util.Tools\"),\n    Ut = Re(/^(OL|UL|DL)$/),\n    _t = Re(/^(OL|UL)$/),\n    $t = Be(\"ol\"),\n    Ft = Re(/^(LI|DT|DD)$/),\n    Ht = Re(/^(DT|DD)$/),\n    jt = Re(/^(TH|TD)$/),\n    Kt = Be(\"br\"),\n    Vt = Rt.DOM,\n    Wt = Ce(\"dd\"),\n    Qt = Ce(\"dt\"),\n    Xt = tinymce.util.Tools.resolve(\"tinymce.dom.DomQuery\"),\n    qt = function qt(e, t) {\n      var n = e.dom.getParents(t, \"TD,TH\");\n      return 0 < n.length ? n[0] : e.getBody();\n    },\n    zt = function zt(t, e) {\n      var n = C(e, function (e) {\n        return qe(t, e).getOr(e);\n      });\n      return Xt.unique(n);\n    },\n    Yt = function Yt(t, n, r, e) {\n      return T(Le(e), function (e) {\n        return (nt(e) ? Yt : st)(t + 1, n, r, e);\n      });\n    },\n    Zt = tinymce.util.Tools.resolve(\"tinymce.dom.BookmarkManager\"),\n    Gt = Rt.DOM,\n    Jt = function Jt(e, t) {\n      var n,\n        r = t.nextSibling;\n      if (Lt(e, t, r)) {\n        for (; n = r.firstChild;) t.appendChild(n);\n        e.remove(r);\n      }\n      if (Lt(e, t, r = t.previousSibling)) {\n        for (; n = r.lastChild;) t.insertBefore(n, t.firstChild);\n        e.remove(r);\n      }\n    },\n    en = function en(e) {\n      return \"list-style-type\" in e;\n    },\n    tn = Rt.DOM,\n    nn = function nn(e) {\n      if (--e < 0) return \"\";\n      var t = e % 26,\n        n = Math.floor(e / 26);\n      return nn(n) + String.fromCharCode(\"A\".charCodeAt(0) + t);\n    };\n  i.add(\"lists\", function (e) {\n    var n, t, r, o, i, a, s, u;\n    return !1 === e.hasPlugin(\"rtc\", !0) ? ((a = e).getParam(\"lists_indent_on_tab\", !0) && (s = a).on(\"keydown\", function (e) {\n      e.keyCode !== he.TAB || he.metaKeyPressed(e) || s.undoManager.transact(function () {\n        (e.shiftKey ? mt : lt)(s) && e.preventDefault();\n      });\n    }), (u = a).on(\"keydown\", function (e) {\n      e.keyCode === he.BACKSPACE ? kt(u, !1) && e.preventDefault() : e.keyCode === he.DELETE && kt(u, !0) && e.preventDefault();\n    }), (i = e).on(\"BeforeExecCommand\", function (e) {\n      var t = e.command.toLowerCase();\n      \"indent\" === t ? lt(i) : \"outdent\" === t && mt(i);\n    }), i.addCommand(\"InsertUnorderedList\", function (e, t) {\n      Tt(i, \"UL\", t);\n    }), i.addCommand(\"InsertOrderedList\", function (e, t) {\n      Tt(i, \"OL\", t);\n    }), i.addCommand(\"InsertDefinitionList\", function (e, t) {\n      Tt(i, \"DL\", t);\n    }), i.addCommand(\"RemoveList\", function () {\n      pt(i);\n    }), Pt(i), i.addCommand(\"mceListUpdate\", function (e, t) {\n      var n, r, o;\n      O(t) && (r = t, o = Qe(n = i), n.undoManager.transact(function () {\n        O(r.styles) && n.dom.setStyles(o, r.styles), O(r.attrs) && j(r.attrs, function (e, t) {\n          return n.dom.setAttrib(o, t, e);\n        });\n      }));\n    }), i.addQueryStateHandler(\"InsertUnorderedList\", It(i, \"UL\")), i.addQueryStateHandler(\"InsertOrderedList\", It(i, \"OL\")), i.addQueryStateHandler(\"InsertDefinitionList\", It(i, \"DL\"))) : Pt(e), (o = e).hasPlugin(\"advlist\") || (o.ui.registry.addToggleButton(\"numlist\", {\n      icon: \"ordered-list\",\n      active: !1,\n      tooltip: \"Numbered list\",\n      onAction: c(\"InsertOrderedList\"),\n      onSetup: function onSetup(e) {\n        return St(o, \"OL\", e.setActive);\n      }\n    }), o.ui.registry.addToggleButton(\"bullist\", {\n      icon: \"unordered-list\",\n      active: !1,\n      tooltip: \"Bullet list\",\n      onAction: c(\"InsertUnorderedList\"),\n      onSetup: function onSetup(e) {\n        return St(o, \"UL\", e.setActive);\n      }\n    })), t = {\n      text: \"List properties...\",\n      icon: \"ordered-list\",\n      onAction: function onAction() {\n        return n.execCommand(\"mceListProps\");\n      },\n      onSetup: function onSetup(t) {\n        return St(n, \"OL\", function (e) {\n          return t.setDisabled(!e);\n        });\n      }\n    }, (n = e).ui.registry.addMenuItem(\"listprops\", t), n.ui.registry.addContextMenu(\"lists\", {\n      update: function update(e) {\n        var t = Qe(n, e);\n        return $t(t) ? [\"listprops\"] : [];\n      }\n    }), r = e, {\n      backspaceDelete: function backspaceDelete(e) {\n        kt(r, e);\n      }\n    };\n    function c(e) {\n      return function () {\n        return o.execCommand(e);\n      };\n    }\n  });\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/lists/plugin.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/plugins/lists/plugin.min.js"]();
/******/ 	
/******/ })()
;
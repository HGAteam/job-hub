/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/paste/plugin.min.js":
/*!**********************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/paste/plugin.min.js ***!
  \**********************************************************************************/
/***/ (() => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.7 (2022-12-06)\r\n */\n!function () {\n  \"use strict\";\n\n  function w(e) {\n    var t = e;\n    return {\n      get: function get() {\n        return t;\n      },\n      set: function set(e) {\n        t = e;\n      }\n    };\n  }\n  function P(e) {\n    return !(null == e);\n  }\n  function _() {}\n  function o(e) {\n    return function () {\n      return e;\n    };\n  }\n  function e(e) {\n    return e;\n  }\n  function t() {\n    return l;\n  }\n  var n,\n    r = tinymce.util.Tools.resolve(\"tinymce.PluginManager\"),\n    u = function u(e) {\n      return n = _typeof(t = e), \"array\" == (null === t ? \"null\" : \"object\" == n && (Array.prototype.isPrototypeOf(t) || t.constructor && \"Array\" === t.constructor.name) ? \"array\" : \"object\" == n && (String.prototype.isPrototypeOf(t) || t.constructor && \"String\" === t.constructor.name) ? \"string\" : n);\n      var t, n;\n    },\n    i = o(!(n = \"function\")),\n    s = o(!0),\n    l = {\n      fold: function fold(e, t) {\n        return e();\n      },\n      isSome: i,\n      isNone: s,\n      getOr: e,\n      getOrThunk: a,\n      getOrDie: function getOrDie(e) {\n        throw new Error(e || \"error: getOrDie called on none.\");\n      },\n      getOrNull: o(null),\n      getOrUndefined: o(void 0),\n      or: e,\n      orThunk: a,\n      map: t,\n      each: _,\n      bind: t,\n      exists: i,\n      forall: s,\n      filter: function filter() {\n        return l;\n      },\n      toArray: function toArray() {\n        return [];\n      },\n      toString: o(\"none()\")\n    };\n  function a(e) {\n    return e();\n  }\n  function c(e, t) {\n    for (var n = 0, r = e.length; n < r; n++) if (t(e[n], n)) return !0;\n    return !1;\n  }\n  function f(e, t) {\n    for (var n = e.length, r = new Array(n), a = 0; a < n; a++) {\n      var o = e[a];\n      r[a] = t(o, a);\n    }\n    return r;\n  }\n  function d(e, t) {\n    for (var n = 0, r = e.length; n < r; n++) t(e[n], n);\n  }\n  function p() {\n    var e,\n      t,\n      n = (e = _, t = w(le.none()), {\n        clear: function clear() {\n          r(), t.set(le.none());\n        },\n        isSet: function isSet() {\n          return t.get().isSome();\n        },\n        get: function get() {\n          return t.get();\n        },\n        set: function set(e) {\n          r(), t.set(le.some(e));\n        }\n      });\n    function r() {\n      return t.get().each(e);\n    }\n    return _de(_de({}, n), {\n      on: function on(e) {\n        return n.get().each(e);\n      }\n    });\n  }\n  function m(e, t, n) {\n    return \"\" === t || e.length >= t.length && e.substr(n, n + t.length) === t;\n  }\n  function C(e, t) {\n    return e.fire(\"PastePlainTextToggle\", {\n      state: t\n    });\n  }\n  function T(e) {\n    return e.getParam(\"paste_data_images\", !1);\n  }\n  function g(e) {\n    return e.getParam(\"paste_retain_style_properties\");\n  }\n  function h(e) {\n    return e.getParam(\"validate\");\n  }\n  function y(e) {\n    return e.getParam(\"paste_data_images\", !1, \"boolean\");\n  }\n  function v(e) {\n    return he.explode(e.getParam(\"images_file_types\", \"jpeg,jpg,jpe,jfi,jif,jfif,png,gif,bmp,webp\", \"string\"));\n  }\n  function b(e) {\n    return -1 !== e.indexOf(be);\n  }\n  function x(e, t, n) {\n    return t ? (r = !0 === t ? \"p\" : t, a = n, o = e.split(/\\n\\n/), i = function (e, t) {\n      var n,\n        r = [],\n        a = \"<\" + e;\n      if (\"object\" == _typeof(t)) {\n        for (var o in t) n = o, we.call(t, n) && r.push(o + '=\"' + Pe.encodeAllRaw(t[o]) + '\"');\n        r.length && (a += \" \" + r.join(\" \"));\n      }\n      return a + \">\";\n    }(r, a), s = \"</\" + r + \">\", 1 === (l = he.map(o, function (e) {\n      return e.split(/\\n/).join(\"<br />\");\n    })).length ? l[0] : he.map(l, function (e) {\n      return i + e + s;\n    }).join(\"\")) : e.replace(/\\r?\\n/g, \"<br>\");\n    var r, a, o, i, s, l;\n  }\n  function D(t, e) {\n    return he.each(e, function (e) {\n      t = e.constructor === RegExp ? t.replace(e, \"\") : t.replace(e[0], e[1]);\n    }), t;\n  }\n  function k(e) {\n    return D(e, [/^[\\s\\S]*<body[^>]*>\\s*|\\s*<\\/body[^>]*>[\\s\\S]*$/gi, /<!--StartFragment-->|<!--EndFragment-->/g, [/( ?)<span class=\"Apple-converted-space\">\\u00a0<\\/span>( ?)/g, function (e, t, n) {\n      return t || n ? \"\\xa0\" : \" \";\n    }], /<br class=\"Apple-interchange-newline\">/g, /<br>$/i]);\n  }\n  function O(e) {\n    return /<font face=\"Times New Roman\"|class=\"?Mso|style=\"[^\"]*\\bmso-|style='[^']*\\bmso-|w:WordDocument/i.test(e) || /class=\"OutlineElement/.test(e) || /id=\"?docs\\-internal\\-guid\\-/.test(e);\n  }\n  function S(r, e) {\n    var a,\n      t = g(r);\n    t && (a = he.makeMap(t.split(/[, ]/))), e = D(e, [/<br class=\"?Apple-interchange-newline\"?>/gi, /<b[^>]+id=\"?docs-internal-[^>]*>/gi, /<!--[\\s\\S]+?-->/gi, /<(!|script[^>]*>.*?<\\/script(?=[>\\s])|\\/?(\\?xml(:\\w+)?|img|meta|link|style|\\w:\\w+)(?=[\\s\\/>]))[^>]*>/gi, [/<(\\/?)s>/gi, \"<$1strike>\"], [/&nbsp;/gi, \"\\xa0\"], [/<span\\s+style\\s*=\\s*\"\\s*mso-spacerun\\s*:\\s*yes\\s*;?\\s*\"\\s*>([\\s\\u00a0]*)<\\/span>/gi, function (e, t) {\n      return 0 < t.length ? t.replace(/./, \" \").slice(Math.floor(t.length / 2)).split(\"\").join(\"\\xa0\") : \"\";\n    }]]);\n    var n = r.getParam(\"paste_word_valid_elements\", \"-strong/b,-em/i,-u,-span,-p,-ol,-ul,-li,-h1,-h2,-h3,-h4,-h5,-h6,-p/div,-a[href|name],sub,sup,strike,br,del,table[width],tr,td[colspan|rowspan|width],th[colspan|rowspan|width],thead,tfoot,tbody\"),\n      o = De({\n        valid_elements: n,\n        valid_children: \"-li[p]\"\n      });\n    he.each(o.elements, function (e) {\n      e.attributes[\"class\"] || (e.attributes[\"class\"] = {}, e.attributesOrder.push(\"class\")), e.attributes.style || (e.attributes.style = {}, e.attributesOrder.push(\"style\"));\n    });\n    var i = _e({}, o);\n    i.addAttributeFilter(\"style\", function (e) {\n      for (var t, n = e.length; n--;) (t = e[n]).attr(\"style\", function (r, a, o, i) {\n        var s = {},\n          e = r.dom.parseStyle(i);\n        return he.each(e, function (e, t) {\n          switch (t) {\n            case \"mso-list\":\n              var n = /\\w+ \\w+([0-9]+)/i.exec(i);\n              n && (o._listLevel = parseInt(n[1], 10)), /Ignore/i.test(e) && o.firstChild && (o._listIgnore = !0, o.firstChild._listIgnore = !0);\n              break;\n            case \"horiz-align\":\n              t = \"text-align\";\n              break;\n            case \"vert-align\":\n              t = \"vertical-align\";\n              break;\n            case \"font-color\":\n            case \"mso-foreground\":\n              t = \"color\";\n              break;\n            case \"mso-background\":\n            case \"mso-highlight\":\n              t = \"background\";\n              break;\n            case \"font-weight\":\n            case \"font-style\":\n              return void (\"normal\" !== e && (s[t] = e));\n            case \"mso-element\":\n              if (/^(comment|comment-list)$/i.test(e)) return void o.remove();\n          }\n          0 !== t.indexOf(\"mso-comment\") ? 0 !== t.indexOf(\"mso-\") && (\"all\" === g(r) || a && a[t]) && (s[t] = e) : o.remove();\n        }), /(bold)/i.test(s[\"font-weight\"]) && (delete s[\"font-weight\"], o.wrap(new Te(\"b\", 1))), /(italic)/i.test(s[\"font-style\"]) && (delete s[\"font-style\"], o.wrap(new Te(\"i\", 1))), r.dom.serializeStyle(s, o.name) || null;\n      }(r, a, t, t.attr(\"style\"))), \"span\" === t.name && t.parent && !t.attributes.length && t.unwrap();\n    }), i.addAttributeFilter(\"class\", function (e) {\n      for (var t, n, r = e.length; r--;) n = (t = e[r]).attr(\"class\"), /^(MsoCommentReference|MsoCommentText|msoDel)$/i.test(n) && t.remove(), t.attr(\"class\", null);\n    }), i.addNodeFilter(\"del\", function (e) {\n      for (var t = e.length; t--;) e[t].remove();\n    }), i.addNodeFilter(\"a\", function (e) {\n      for (var t, n, r, a = e.length; a--;) n = (t = e[a]).attr(\"href\"), r = t.attr(\"name\"), n && -1 !== n.indexOf(\"#_msocom_\") ? t.remove() : !(n = n && 0 === n.indexOf(\"file://\") ? (n = n.split(\"#\")[1]) && \"#\" + n : n) && !r || r && !/^_?(?:toc|edn|ftn)/i.test(r) ? t.unwrap() : t.attr({\n        href: n,\n        name: r\n      });\n    });\n    var s = i.parse(e);\n    return r.getParam(\"paste_convert_word_fake_lists\", !0) && function (e) {\n      for (var a, o, i = 1, n = function n(e) {\n          var t = \"\";\n          if (3 === e.type) return e.value;\n          if (e = e.firstChild) for (; t += n(e), e = e.next;);\n          return t;\n        }, s = function s(e, t) {\n          if (3 === e.type && t.test(e.value)) return e.value = e.value.replace(t, \"\"), !1;\n          if (e = e.firstChild) do {\n            if (!s(e, t)) return !1;\n          } while (e = e.next);\n          return !0;\n        }, l = function l(e) {\n          if (e._listIgnore) e.remove();else if (e = e.firstChild) for (; l(e), e = e.next;);\n        }, t = function t(e, _t, n) {\n          var r = e._listLevel || i;\n          (a = r !== i ? r < i ? a && a.parent.parent : (o = a, null) : a) && a.name === _t ? a.append(e) : (o = o || a, a = new Te(_t, 1), 1 < n && a.attr(\"start\", \"\" + n), e.wrap(a)), e.name = \"li\", i < r && o && o.lastChild.append(a), i = r, l(e), s(e, /^\\u00a0+/), s(e, /^\\s*([\\u2022\\u00b7\\u00a7\\u25CF]|\\w+\\.)/), s(e, /^\\u00a0+/);\n        }, r = [], u = e.firstChild; null != u;) if (r.push(u), null !== (u = u.walk())) for (; void 0 !== u && u.parent !== e;) u = u.walk();\n      for (var c, f, d, p = 0; p < r.length; p++) \"p\" === (e = r[p]).name && e.firstChild ? (c = n(e), /^[\\s\\u00a0]*[\\u2022\\u00b7\\u00a7\\u25CF]\\s*/.test(c) ? t(e, \"ul\") : function (t) {\n        var n = !1;\n        return t = c.replace(/^[\\u00a0 ]+/, \"\"), he.each([/^[IVXLMCD]+\\.[ \\u00a0]/, /^[ivxlmcd]+\\.[ \\u00a0]/, /^[a-z]{1,2}[\\.\\)][ \\u00a0]/, /^[A-Z]{1,2}[\\.\\)][ \\u00a0]/, /^[0-9]+\\.[ \\u00a0]/, /^[\\u3007\\u4e00\\u4e8c\\u4e09\\u56db\\u4e94\\u516d\\u4e03\\u516b\\u4e5d]+\\.[ \\u00a0]/, /^[\\u58f1\\u5f10\\u53c2\\u56db\\u4f0d\\u516d\\u4e03\\u516b\\u4e5d\\u62fe]+\\.[ \\u00a0]/], function (e) {\n          if (e.test(t)) return !(n = !0);\n        }), n;\n      }(c) ? (d = 1, t(e, \"ol\", d = (f = /([0-9]+)\\./.exec(c)) ? parseInt(f[1], 10) : d)) : e._listLevel ? t(e, \"ul\", 1) : a = null) : (o = a, a = null);\n    }(s), Ce({\n      validate: h(r)\n    }, o).serialize(s);\n  }\n  function j(e, t) {\n    return {\n      content: e,\n      cancelled: t\n    };\n  }\n  function A(e, t, n) {\n    var r,\n      a,\n      o,\n      i,\n      s,\n      l,\n      u,\n      c,\n      f,\n      d,\n      p,\n      m,\n      g = O(t),\n      v = g ? (a = t, (r = e).getParam(\"paste_enable_default_filters\", !0) ? S(r, a) : a) : t;\n    return i = n, s = g, p = (o = e).fire(\"PastePreProcess\", {\n      content: v,\n      internal: i,\n      wordContent: s\n    }), m = function (e, t) {\n      var n = _e({}, e.schema);\n      n.addNodeFilter(\"meta\", function (e) {\n        he.each(e, function (e) {\n          e.remove();\n        });\n      });\n      var r = n.parse(t, {\n        forced_root_block: !1,\n        isRootContent: !0\n      });\n      return Ce({\n        validate: h(e)\n      }, e.schema).serialize(r);\n    }(o, p.content), o.hasEventListeners(\"PastePostProcess\") && !p.isDefaultPrevented() ? (u = i, c = s, f = (l = o).dom.create(\"div\", {\n      style: \"display:none\"\n    }, m), j((d = l.fire(\"PastePostProcess\", {\n      node: f,\n      internal: u,\n      wordContent: c\n    })).node.innerHTML, d.isDefaultPrevented())) : j(m, p.isDefaultPrevented());\n  }\n  function R(e, t) {\n    return e.insertContent(t, {\n      merge: e.getParam(\"paste_merge_formats\", !0),\n      paste: !0\n    }), !0;\n  }\n  function I(e) {\n    return /^https?:\\/\\/[\\w\\-\\/+=.,!;:&%@^~(){}?#]+$/i.test(e);\n  }\n  function F(e, t, n) {\n    return !(!1 !== e.selection.isCollapsed() || !I(t) || (a = t, o = n, (r = e).undoManager.extra(function () {\n      o(r, a);\n    }, function () {\n      r.execCommand(\"mceInsertLink\", !1, a);\n    }), 0));\n    var r, a, o;\n  }\n  function E(e, t, n) {\n    return r = e, !(!I(a = t) || !c(v(r), function (e) {\n      return m(t = a.toLowerCase(), n = \".\" + e.toLowerCase(), t.length - n.length);\n      var t, n;\n    }) || (i = t, s = n, (o = e).undoManager.extra(function () {\n      s(o, i);\n    }, function () {\n      o.insertContent('<img src=\"' + i + '\">');\n    }), 0));\n    var r, a, o, i, s;\n  }\n  function M(e) {\n    return \"\\n\" === e || \"\\r\" === e;\n  }\n  function B(e, t, n, r) {\n    var a,\n      o,\n      i,\n      s,\n      l = A(e, t, n);\n    !1 === l.cancelled && (a = e, o = l.content, r || !1 === a.getParam(\"smart_paste\", !0) ? R(a, o) : (i = a, s = o, he.each([F, E, R], function (e) {\n      return !0 !== e(i, s, R);\n    })));\n  }\n  function L(e, t, n) {\n    var r = n || b(t);\n    B(e, t.replace(be, \"\"), r, !1);\n  }\n  function N(e, t) {\n    var n,\n      r,\n      a,\n      o,\n      i,\n      s,\n      l = e.dom.encode(t).replace(/\\r\\n/g, \"\\n\"),\n      u = x((n = l, o = (r = e.getParam(\"paste_tab_spaces\", 4, \"number\")) <= 0 ? \"\" : new Array(r + 1).join(\" \"), i = n.replace(/\\t/g, o), s = {\n        pcIsSpace: !(a = function a(e, t) {\n          return -1 !== \" \\f\\t\\v\".indexOf(t) || \"\\xa0\" === t ? e.pcIsSpace || \"\" === e.str || e.str.length === i.length - 1 || (n = e.str.length + 1) < i.length && 0 <= n && M(i[n]) ? {\n            pcIsSpace: !1,\n            str: e.str + \"\\xa0\"\n          } : {\n            pcIsSpace: !0,\n            str: e.str + \" \"\n          } : {\n            pcIsSpace: M(t),\n            str: e.str + t\n          };\n          var n;\n        }),\n        str: \"\"\n      }, d(i, function (e, t) {\n        s = a(s, e);\n      }), s.str), e.getParam(\"forced_root_block\"), e.getParam(\"forced_root_block_attrs\"));\n    B(e, u, !1, !0);\n  }\n  function H(e) {\n    var t,\n      n = {};\n    if (e && (!e.getData || (t = e.getData(\"Text\")) && 0 < t.length && -1 === t.indexOf(\"data:text/mce-internal,\") && (n[\"text/plain\"] = t), e.types)) for (var r = 0; r < e.types.length; r++) {\n      var a = e.types[r];\n      try {\n        n[a] = e.getData(a);\n      } catch (e) {\n        n[a] = \"\";\n      }\n    }\n    return n;\n  }\n  function $(e, t) {\n    return t in e && 0 < e[t].length;\n  }\n  function z(e) {\n    return $(e, \"text/html\") || $(e, \"text/plain\");\n  }\n  function U(w, e, t) {\n    var n,\n      r,\n      a,\n      o,\n      i,\n      s = \"paste\" === e.type ? e.clipboardData : e.dataTransfer;\n    if (y(w) && s) {\n      var l = (n = w, a = (r = s).items ? function (e) {\n        for (var t = [], n = 0, r = e.length; n < r; ++n) {\n          if (!u(e[n])) throw new Error(\"Arr.flatten item \" + n + \" was not an array, input: \" + e);\n          ce.apply(t, e[n]);\n        }\n        return t;\n      }(f(fe(r.items), function (e) {\n        return \"file\" === e.kind ? [e.getAsFile()] : [];\n      })) : [], o = r.files ? fe(r.files) : [], function (e, t) {\n        for (var n = [], r = 0, a = e.length; r < a; r++) {\n          var o = e[r];\n          t(o, r) && n.push(o);\n        }\n        return n;\n      }(0 < a.length ? a : o, (i = v(n), function (r) {\n        return m(r.type, \"image/\", 0) && c(i, function (e) {\n          return t = e.toLowerCase(), (he.hasOwn(n = {\n            jpg: \"jpeg\",\n            jpe: \"jpeg\",\n            jfi: \"jpeg\",\n            jif: \"jpeg\",\n            jfif: \"jpeg\",\n            pjpeg: \"jpeg\",\n            pjp: \"jpeg\",\n            svg: \"svg+xml\"\n          }, t) ? \"image/\" + n[t] : \"image/\" + t) === r.type;\n          var t, n;\n        });\n      })));\n      if (0 < l.length) return e.preventDefault(), ge.all(f(l, function (r) {\n        return new ge(function (e) {\n          var t = P(r.getAsFile) ? r.getAsFile() : r,\n            n = new window.FileReader();\n          n.onload = function () {\n            e({\n              blob: t,\n              uri: n.result\n            });\n          }, n.readAsDataURL(t);\n        });\n      })).then(function (e) {\n        t && w.selection.setRng(t), d(e, function (e) {\n          var t, n, r, a, o, i, s, l, u, c, f, d, p, m, g, v, h, y, b, x;\n          t = w, r = (n = e).uri, g = (a = /data:([^;]+);base64,([a-z0-9\\+\\/=]+)/i.exec(r)) ? {\n            type: a[1],\n            data: decodeURIComponent(a[2])\n          } : {\n            type: null,\n            data: null\n          }, v = g.data, h = g.type, y = ke(), b = n.blob, (x = new Image()).src = n.uri, p = x, !(m = t.getParam(\"images_dataimg_filter\")) || m(p) ? (c = void 0, (i = (o = t.editorUpload.blobCache).getByData(v, h)) ? c = i : (l = (s = t.getParam(\"images_reuse_filename\") && P(b.name)) ? (f = t, P(d = b.name.match(/([\\s\\S]+?)(?:\\.[a-z0-9.]+)$/i)) ? f.dom.encode(d[1]) : null) : y, u = s ? b.name : void 0, c = o.create(y, b, v, l, u), o.add(c)), L(t, '<img src=\"' + c.blobUri() + '\">', !1)) : L(t, '<img src=\"' + n.uri + '\">', !1);\n        });\n      }), !0;\n    }\n    return !1;\n  }\n  function V(e) {\n    return ve.metaKeyPressed(e) && 86 === e.keyCode || e.shiftKey && 45 === e.keyCode;\n  }\n  function K(o, e, t) {\n    var i, s, v, l, u, c, f;\n    function d(e, t, n, r, a) {\n      var o;\n      $(t, \"text/html\") ? o = t[\"text/html\"] : (o = v.getHtml(), a = a || b(o), v.isDefaultContent(o) && (r = !0)), o = k(o), v.remove();\n      var i,\n        s,\n        l,\n        u,\n        c,\n        f,\n        d,\n        _p,\n        m = !1 === a && !/<(?:\\/?(?!(?:div|p|br|span)>)\\w+|(?:(?!(?:span style=\"white-space:\\s?pre;?\">)|br\\s?\\/>))\\w+\\s[^>]+)>/i.test(o),\n        g = I(o);\n      ((r = !o.length || m && !g || r) || g) && (o = $(t, \"text/plain\") && m ? t[\"text/plain\"] : (i = o, s = De(), l = _e({}, s), u = \"\", c = s.getShortEndedElements(), f = he.makeMap(\"script noscript style textarea video audio iframe object\", \" \"), d = s.getBlockElements(), _p = function p(e) {\n        var t = e.name,\n          n = e;\n        if (\"br\" !== t) {\n          if (\"wbr\" !== t) if (c[t] && (u += \" \"), f[t]) u += \" \";else {\n            if (3 === e.type && (u += e.value), !e.shortEnded && (e = e.firstChild)) for (; _p(e), e = e.next;);\n            d[t] && n.next && (u += \"\\n\", \"p\" === t && (u += \"\\n\"));\n          }\n        } else u += \"\\n\";\n      }, i = D(i, [/<!\\[[^\\]]+\\]>/g]), _p(l.parse(i)), u)), v.isDefaultContent(o) ? n || e.windowManager.alert(\"Please use Ctrl+V/Cmd+V keyboard shortcuts to paste contents.\") : r ? N(e, o) : L(e, o, a);\n    }\n    s = o, v = e, l = t, c = p(), f = p(), s.on(\"keyup\", f.clear), s.on(\"keydown\", function (e) {\n      function t(e) {\n        V(e) && !e.isDefaultPrevented() && v.remove();\n      }\n      if (V(e) && !e.isDefaultPrevented() && (!(u = e.shiftKey && 86 === e.keyCode) || !pe.webkit || -1 === navigator.userAgent.indexOf(\"Version/\"))) {\n        if (e.stopImmediatePropagation(), c.set(e), f.set(!0), pe.ie && u) return e.preventDefault(), void s.fire(\"paste\", {\n          ieFake: !0\n        });\n        v.remove(), v.create(), s.once(\"keyup\", t), s.once(\"paste\", function () {\n          s.off(\"keyup\", t);\n        });\n      }\n    }), s.on(\"paste\", function (e) {\n      var t = c.isSet() || f.isSet();\n      t && c.clear();\n      var n,\n        r = H(e.clipboardData || s.getDoc().dataTransfer),\n        a = \"text\" === l.get() || u,\n        o = $(r, xe());\n      u = !1, e.isDefaultPrevented() || (n = e.clipboardData, -1 !== navigator.userAgent.indexOf(\"Android\") && n && n.items && 0 === n.items.length) || !z(r) && U(s, e, v.getLastRng() || s.selection.getRng()) ? v.remove() : (t || e.preventDefault(), !pe.ie || t && !e.ieFake || $(r, \"text/html\") || (v.create(), s.dom.bind(v.getEl(), \"paste\", function (e) {\n        e.stopPropagation();\n      }), s.getDoc().execCommand(\"Paste\", !1, null), r[\"text/html\"] = v.getHtml()), $(r, \"text/html\") ? (e.preventDefault(), o = o || b(r[\"text/html\"]), d(s, r, t, a, o)) : me.setEditorTimeout(s, function () {\n        d(s, r, t, a, o);\n      }, 0));\n    }), o.parser.addNodeFilter(\"img\", function (e, t, n) {\n      var r;\n      if (!y(o) && n.data && !0 === n.data.paste) for (var a = e.length; a--;) (i = e[a].attr(\"src\")) && (0 !== i.indexOf(\"webkit-fake-url\") && (o.getParam(\"allow_html_data_urls\", !1, \"boolean\") || 0 !== i.indexOf(\"data:\")) || (r = e[a]).attr(\"data-mce-object\") || i === pe.transparentSrc || r.remove());\n    });\n  }\n  function X(e) {\n    return pe.ie && e.inline ? document.body : e.getBody();\n  }\n  function W(e) {\n    var t = w(null),\n      n = \"%MCEPASTEBIN%\";\n    return {\n      create: function create() {\n        return function (e, t, n) {\n          var r = e.dom,\n            a = e.getBody();\n          t.set(e.selection.getRng());\n          var o,\n            i,\n            s,\n            l,\n            u = e.dom.add(X(e), \"div\", {\n              id: \"mcepastebin\",\n              \"class\": \"mce-pastebin\",\n              contentEditable: !0,\n              \"data-mce-bogus\": \"all\",\n              style: \"position: fixed; top: 50%; width: 10px; height: 10px; overflow: hidden; opacity: 0\"\n            }, n);\n          (pe.ie || pe.gecko) && r.setStyle(u, \"left\", \"rtl\" === r.getStyle(a, \"direction\", !0) ? 65535 : -65535), r.bind(u, \"beforedeactivate focusin focusout\", function (e) {\n            e.stopPropagation();\n          }), i = u, s = n, X(l = o = e) !== l.getBody() && o.dom.bind(i, \"paste keyup\", function (e) {\n            Oe(o, s) || o.fire(\"paste\");\n          }), u.focus(), e.selection.select(u, !0);\n        }(e, t, n);\n      },\n      remove: function remove() {\n        return function (e, t) {\n          if (oe(e)) {\n            for (var n, r = t.get(); n = e.dom.get(\"mcepastebin\");) e.dom.remove(n), e.dom.unbind(n);\n            r && e.selection.setRng(r);\n          }\n          t.set(null);\n        }(e, t);\n      },\n      getEl: function getEl() {\n        return oe(e);\n      },\n      getHtml: function getHtml() {\n        return function (n) {\n          function t(e, t) {\n            e.appendChild(t), n.dom.remove(t, !0);\n          }\n          var e = he.grep(X(n).childNodes, function (e) {\n              return \"mcepastebin\" === e.id;\n            }),\n            r = e.shift();\n          he.each(e, function (e) {\n            t(r, e);\n          });\n          for (var a = n.dom.select(\"div[id=mcepastebin]\", r), o = a.length - 1; 0 <= o; o--) {\n            var i = n.dom.create(\"div\");\n            r.insertBefore(i, a[o]), t(i, a[o]);\n          }\n          return r ? r.innerHTML : \"\";\n        }(e);\n      },\n      getLastRng: t.get,\n      isDefault: function isDefault() {\n        return Oe(e, n);\n      },\n      isDefaultContent: function isDefaultContent(e) {\n        return e === n;\n      }\n    };\n  }\n  function Y(e, t, n, r) {\n    !function (e, t, n) {\n      if (!1 === pe.iOS && \"function\" == typeof (null == e ? void 0 : e.setData)) try {\n        return e.clearData(), e.setData(\"text/html\", t), e.setData(\"text/plain\", n), e.setData(xe(), t), 1;\n      } catch (e) {\n        return;\n      }\n    }(e.clipboardData, t.html, t.text) ? n(t.html, r) : (e.preventDefault(), r());\n  }\n  function Z(s) {\n    return function (e, t) {\n      var n = be + e,\n        r = s.dom.create(\"div\", {\n          contenteditable: \"false\",\n          \"data-mce-bogus\": \"all\"\n        }),\n        a = s.dom.create(\"div\", {\n          contenteditable: \"true\"\n        }, n);\n      s.dom.setStyles(r, {\n        position: \"fixed\",\n        top: \"0\",\n        left: \"-3000px\",\n        width: \"1000px\",\n        overflow: \"hidden\"\n      }), r.appendChild(a), s.dom.add(s.getBody(), r);\n      var o = s.selection.getRng();\n      a.focus();\n      var i = s.dom.createRng();\n      i.selectNodeContents(a), s.selection.setRng(i), me.setTimeout(function () {\n        s.selection.setRng(o), r.parentNode.removeChild(r), t();\n      }, 0);\n    };\n  }\n  function q(e) {\n    return {\n      html: e.selection.getContent({\n        contextual: !0\n      }),\n      text: e.selection.getContent({\n        format: \"text\"\n      })\n    };\n  }\n  function G(e) {\n    return !e.selection.isCollapsed() || (t = e).dom.getParent(t.selection.getStart(), \"td[data-mce-selected],th[data-mce-selected]\", t.getBody());\n    var t;\n  }\n  function J(e, t) {\n    return Se.getCaretRangeFromPoint(t.clientX, t.clientY, e.getDoc());\n  }\n  function Q(e, t) {\n    e.focus(), e.selection.setRng(t);\n  }\n  function ee(t, n) {\n    t.on(\"PastePreProcess\", function (e) {\n      e.content = n(t, e.content, e.internal, e.wordContent);\n    });\n  }\n  function te(e, t) {\n    if (!O(t)) return t;\n    var n = [];\n    return he.each(e.schema.getBlockElements(), function (e, t) {\n      n.push(t);\n    }), t = D(t, [[new RegExp(\"(?:<br>&nbsp;[\\\\s\\\\r\\\\n]+|<br>)*(<\\\\/?(\" + n.join(\"|\") + \")[^>]*>)(?:<br>&nbsp;[\\\\s\\\\r\\\\n]+|<br>)*\", \"g\"), \"$1\"]]), D(t, [[/<br><br>/g, \"<BR><BR>\"], [/<br>/g, \" \"], [/<BR><BR>/g, \"<br>\"]]);\n  }\n  function ne(e, t, n, r) {\n    if (r || n) return t;\n    var c,\n      f,\n      d,\n      a = e.getParam(\"paste_webkit_styles\");\n    return !1 === e.getParam(\"paste_remove_styles_if_webkit\", !0) || \"all\" === a ? t : (t = (c = a ? a.split(/[, ]/) : c) ? (f = e.dom, d = e.selection.getNode(), t.replace(/(<[^>]+) style=\"([^\"]*)\"([^>]*>)/gi, function (e, t, n, r) {\n      var a = f.parseStyle(f.decode(n)),\n        o = {};\n      if (\"none\" === c) return t + r;\n      for (var i = 0; i < c.length; i++) {\n        var s = a[c[i]],\n          l = f.getStyle(d, c[i], !0);\n        /color/.test(c[i]) && (s = f.toHex(s), l = f.toHex(l)), l !== s && (o[c[i]] = s);\n      }\n      var u = f.serializeStyle(o, \"span\");\n      return u ? t + ' style=\"' + u + '\"' + r : t + r;\n    })) : t.replace(/(<[^>]+) style=\"([^\"]*)\"([^>]*>)/gi, \"$1$3\")).replace(/(<[^>]+) data-mce-style=\"([^\"]+)\"([^>]*>)/gi, function (e, t, n, r) {\n      return t + ' style=\"' + n + '\"' + r;\n    });\n  }\n  function re(n, e) {\n    n.$(\"a\", e).find(\"font,u\").each(function (e, t) {\n      n.dom.remove(t, !0);\n    });\n  }\n  function ae(n, r) {\n    return function (t) {\n      function e(e) {\n        return t.setActive(e.state);\n      }\n      return t.setActive(\"text\" === r.pasteFormat.get()), n.on(\"PastePlainTextToggle\", e), function () {\n        return n.off(\"PastePlainTextToggle\", e);\n      };\n    };\n  }\n  function oe(e) {\n    return e.dom.get(\"mcepastebin\");\n  }\n  var ie,\n    se = function se(n) {\n      function e() {\n        return a;\n      }\n      function t(e) {\n        return e(n);\n      }\n      var r = o(n),\n        a = {\n          fold: function fold(e, t) {\n            return t(n);\n          },\n          isSome: s,\n          isNone: i,\n          getOr: r,\n          getOrThunk: r,\n          getOrDie: r,\n          getOrNull: r,\n          getOrUndefined: r,\n          or: e,\n          orThunk: e,\n          map: function map(e) {\n            return se(e(n));\n          },\n          each: function each(e) {\n            e(n);\n          },\n          bind: t,\n          exists: t,\n          forall: t,\n          filter: function filter(e) {\n            return e(n) ? a : l;\n          },\n          toArray: function toArray() {\n            return [n];\n          },\n          toString: function toString() {\n            return \"some(\" + n + \")\";\n          }\n        };\n      return a;\n    },\n    le = {\n      some: se,\n      none: t,\n      from: function from(e) {\n        return null == e ? l : se(e);\n      }\n    },\n    ue = Array.prototype.slice,\n    ce = Array.prototype.push,\n    fe = _typeof(Array.from) === n ? Array.from : function (e) {\n      return ue.call(e);\n    },\n    _de = function de() {\n      return (_de = Object.assign || function (e) {\n        for (var t, n = 1, r = arguments.length; n < r; n++) for (var a in t = arguments[n]) Object.prototype.hasOwnProperty.call(t, a) && (e[a] = t[a]);\n        return e;\n      }).apply(this, arguments);\n    },\n    pe = tinymce.util.Tools.resolve(\"tinymce.Env\"),\n    me = tinymce.util.Tools.resolve(\"tinymce.util.Delay\"),\n    ge = tinymce.util.Tools.resolve(\"tinymce.util.Promise\"),\n    ve = tinymce.util.Tools.resolve(\"tinymce.util.VK\"),\n    he = tinymce.util.Tools.resolve(\"tinymce.util.Tools\"),\n    ye = \"x-tinymce/html\",\n    be = \"\\x3c!-- \" + ye + \" --\\x3e\",\n    xe = o(ye),\n    we = Object.hasOwnProperty,\n    Pe = tinymce.util.Tools.resolve(\"tinymce.html.Entities\"),\n    _e = tinymce.util.Tools.resolve(\"tinymce.html.DomParser\"),\n    Ce = tinymce.util.Tools.resolve(\"tinymce.html.Serializer\"),\n    Te = tinymce.util.Tools.resolve(\"tinymce.html.Node\"),\n    De = tinymce.util.Tools.resolve(\"tinymce.html.Schema\"),\n    ke = (ie = 0, function () {\n      return \"mceclip\" + ie++;\n    }),\n    Oe = function Oe(e, t) {\n      var n = oe(e);\n      return n && \"mcepastebin\" === n.id && n.innerHTML === t;\n    },\n    Se = tinymce.util.Tools.resolve(\"tinymce.dom.RangeUtils\");\n  r.add(\"paste\", function (e) {\n    if (0 == (!!e.hasPlugin(\"powerpaste\", !0) && (void 0 !== window.console && window.console.log && window.console.log(\"PowerPaste is incompatible with Paste plugin! Remove 'paste' from the 'plugins' option.\"), !0))) {\n      var t = w(!1),\n        n = w(e.getParam(\"paste_as_text\", !1) ? \"text\" : \"html\"),\n        r = (y = n, b = W(h = e), h.on(\"PreInit\", function () {\n          return K(h, b, y);\n        }), {\n          pasteFormat: y,\n          pasteHtml: function pasteHtml(e, t) {\n            return L(h, e, t);\n          },\n          pasteText: function pasteText(e) {\n            return N(h, e);\n          },\n          pasteImageData: function pasteImageData(e, t) {\n            return U(h, e, t);\n          },\n          getDataTransferItems: H,\n          hasHtmlOrText: z,\n          hasContentType: $\n        }),\n        a = e;\n      return pe.webkit && ee(a, ne), pe.ie && (ee(a, te), v = re, (g = a).on(\"PastePostProcess\", function (e) {\n        v(g, e.node);\n      })), (p = e).ui.registry.addToggleButton(\"pastetext\", {\n        active: !1,\n        icon: \"paste-text\",\n        tooltip: \"Paste as text\",\n        onAction: x,\n        onSetup: ae(p, m = r)\n      }), p.ui.registry.addToggleMenuItem(\"pastetext\", {\n        text: \"Paste as text\",\n        icon: \"paste-text\",\n        onAction: x,\n        onSetup: ae(p, m)\n      }), d = r, (f = e).addCommand(\"mceTogglePlainTextPaste\", function () {\n        var e,\n          t = f;\n        \"text\" === (e = d).pasteFormat.get() ? (e.pasteFormat.set(\"html\"), C(t, !1)) : (e.pasteFormat.set(\"text\"), C(t, !0)), t.focus();\n      }), f.addCommand(\"mceInsertClipboardContent\", function (e, t) {\n        t.content && d.pasteHtml(t.content, t.internal), t.text && d.pasteText(t.text);\n      }), function (e) {\n        var t = e.plugins.paste,\n          n = e.getParam(\"paste_preprocess\");\n        n && e.on(\"PastePreProcess\", function (e) {\n          n.call(t, t, e);\n        });\n        var r = e.getParam(\"paste_postprocess\");\n        r && e.on(\"PastePostProcess\", function (e) {\n          r.call(t, t, e);\n        });\n      }(e), (o = e).on(\"cut\", (u = o, function (e) {\n        G(u) && Y(e, q(u), Z(u), function () {\n          var e;\n          pe.browser.isChrome() || pe.browser.isFirefox() ? (e = u.selection.getRng(), me.setEditorTimeout(u, function () {\n            u.selection.setRng(e), u.execCommand(\"Delete\");\n          }, 0)) : u.execCommand(\"Delete\");\n        });\n      })), o.on(\"copy\", (c = o, function (e) {\n        G(c) && Y(e, q(c), Z(c), _);\n      })), s = r, l = t, (i = e).getParam(\"paste_block_drop\", !1) && i.on(\"dragend dragover draggesture dragdrop drop drag\", function (e) {\n        e.preventDefault(), e.stopPropagation();\n      }), T(i) || i.on(\"drop\", function (e) {\n        var t = e.dataTransfer;\n        t && t.files && 0 < t.files.length && e.preventDefault();\n      }), i.on(\"drop\", function (e) {\n        var t,\n          n,\n          r,\n          a,\n          o = J(i, e);\n        e.isDefaultPrevented() || l.get() || (t = s.getDataTransferItems(e.dataTransfer), n = s.hasContentType(t, xe()), (!s.hasHtmlOrText(t) || (r = t[\"text/plain\"]) && 0 === r.indexOf(\"file://\")) && s.pasteImageData(e, o) || !o || !i.getParam(\"paste_filter_drop\", !0) || (a = t[\"mce-internal\"] || t[\"text/html\"] || t[\"text/plain\"]) && (e.preventDefault(), me.setEditorTimeout(i, function () {\n          i.undoManager.transact(function () {\n            t[\"mce-internal\"] && i.execCommand(\"Delete\"), Q(i, o), a = k(a), t[\"text/html\"] ? s.pasteHtml(a, n) : s.pasteText(a);\n          });\n        })));\n      }), i.on(\"dragstart\", function (e) {\n        l.set(!0);\n      }), i.on(\"dragover dragend\", function (e) {\n        T(i) && !1 === l.get() && (e.preventDefault(), Q(i, J(i, e))), \"dragend\" === e.type && l.set(!1);\n      }), {\n        clipboard: r\n      };\n    }\n    var i, s, l, o, u, c, f, d, p, m, a, g, v, h, y, b;\n    function x() {\n      return p.execCommand(\"mceTogglePlainTextPaste\");\n    }\n  });\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/paste/plugin.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/plugins/paste/plugin.min.js"]();
/******/ 	
/******/ })()
;
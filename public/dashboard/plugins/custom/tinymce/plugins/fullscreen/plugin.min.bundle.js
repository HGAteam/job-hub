/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/fullscreen/plugin.min.js":
/*!***************************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/fullscreen/plugin.min.js ***!
  \***************************************************************************************/
/***/ (() => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.7 (2022-12-06)\r\n */\n!function () {\n  \"use strict\";\n\n  function a(e) {\n    var n = e;\n    return {\n      get: function get() {\n        return n;\n      },\n      set: function set(e) {\n        n = e;\n      }\n    };\n  }\n  function e(t) {\n    return function (e) {\n      return r = _typeof(n = e), (null === n ? \"null\" : \"object\" == r && (Array.prototype.isPrototypeOf(n) || n.constructor && \"Array\" === n.constructor.name) ? \"array\" : \"object\" == r && (String.prototype.isPrototypeOf(n) || n.constructor && \"String\" === n.constructor.name) ? \"string\" : r) === t;\n      var n, r;\n    };\n  }\n  function n(n) {\n    return function (e) {\n      return _typeof(e) === n;\n    };\n  }\n  function c(e) {\n    return !(null == e);\n  }\n  function s() {}\n  function y(e) {\n    return function () {\n      return e;\n    };\n  }\n  function r(e) {\n    return e;\n  }\n  var t = tinymce.util.Tools.resolve(\"tinymce.PluginManager\"),\n    l = e(\"string\"),\n    d = e(\"array\"),\n    o = n(\"boolean\"),\n    h = n(\"function\"),\n    i = n(\"number\");\n  function u() {\n    return m;\n  }\n  var v = y(!1),\n    f = y(!0),\n    m = {\n      fold: function fold(e, n) {\n        return e();\n      },\n      isSome: v,\n      isNone: f,\n      getOr: r,\n      getOrThunk: g,\n      getOrDie: function getOrDie(e) {\n        throw new Error(e || \"error: getOrDie called on none.\");\n      },\n      getOrNull: y(null),\n      getOrUndefined: y(void 0),\n      or: r,\n      orThunk: g,\n      map: u,\n      each: s,\n      bind: u,\n      exists: v,\n      forall: f,\n      filter: function filter() {\n        return m;\n      },\n      toArray: function toArray() {\n        return [];\n      },\n      toString: y(\"none()\")\n    };\n  function g(e) {\n    return e();\n  }\n  function p(e) {\n    function n() {\n      return r.get().each(e);\n    }\n    var r = a(A.none());\n    return {\n      clear: function clear() {\n        n(), r.set(A.none());\n      },\n      isSet: function isSet() {\n        return r.get().isSome();\n      },\n      get: function get() {\n        return r.get();\n      },\n      set: function set(e) {\n        n(), r.set(A.some(e));\n      }\n    };\n  }\n  function w() {\n    return p(function (e) {\n      return e.unbind();\n    });\n  }\n  function C(e, n) {\n    for (var r = e.length, t = new Array(r), o = 0; o < r; o++) {\n      var i = e[o];\n      t[o] = n(i, o);\n    }\n    return t;\n  }\n  function D(e, n) {\n    for (var r = 0, t = e.length; r < t; r++) n(e[r], r);\n  }\n  function b(e, n) {\n    for (var r = [], t = 0, o = e.length; t < o; t++) {\n      var i = e[t];\n      n(i, t) && r.push(i);\n    }\n    return r;\n  }\n  function S(e, n) {\n    return function (e, n, r) {\n      for (var t = 0, o = e.length; t < o; t++) {\n        var i = e[t];\n        if (n(i, t)) return A.some(i);\n        if (r(i, t)) break;\n      }\n      return A.none();\n    }(e, n, v);\n  }\n  function x(e, n) {\n    return -1 !== e.indexOf(n);\n  }\n  function E(e) {\n    return void 0 !== e.style && h(e.style.getPropertyValue);\n  }\n  function O(e) {\n    if (null == e) throw new Error(\"Node cannot be null or undefined\");\n    return {\n      dom: e\n    };\n  }\n  var F = function F(r) {\n      function e() {\n        return o;\n      }\n      function n(e) {\n        return e(r);\n      }\n      var t = y(r),\n        o = {\n          fold: function fold(e, n) {\n            return n(r);\n          },\n          isSome: f,\n          isNone: v,\n          getOr: t,\n          getOrThunk: t,\n          getOrDie: t,\n          getOrNull: t,\n          getOrUndefined: t,\n          or: e,\n          orThunk: e,\n          map: function map(e) {\n            return F(e(r));\n          },\n          each: function each(e) {\n            e(r);\n          },\n          bind: n,\n          exists: n,\n          forall: n,\n          filter: function filter(e) {\n            return e(r) ? o : m;\n          },\n          toArray: function toArray() {\n            return [r];\n          },\n          toString: function toString() {\n            return \"some(\" + r + \")\";\n          }\n        };\n      return o;\n    },\n    A = {\n      some: F,\n      none: u,\n      from: function from(e) {\n        return null == e ? m : F(e);\n      }\n    },\n    _T = function T() {\n      return (_T = Object.assign || function (e) {\n        for (var n, r = 1, t = arguments.length; r < t; r++) for (var o in n = arguments[r]) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o]);\n        return e;\n      }).apply(this, arguments);\n    },\n    k = Array.prototype.push,\n    R = Object.keys,\n    L = {\n      fromHtml: function fromHtml(e, n) {\n        var r = (n || document).createElement(\"div\");\n        if (r.innerHTML = e, !r.hasChildNodes() || 1 < r.childNodes.length) throw console.error(\"HTML does not have a single root node\", e), new Error(\"HTML must have a single root node\");\n        return O(r.childNodes[0]);\n      },\n      fromTag: function fromTag(e, n) {\n        var r = (n || document).createElement(e);\n        return O(r);\n      },\n      fromText: function fromText(e, n) {\n        var r = (n || document).createTextNode(e);\n        return O(r);\n      },\n      fromDom: O,\n      fromPoint: function fromPoint(e, n, r) {\n        return A.from(e.dom.elementFromPoint(n, r)).map(O);\n      }\n    };\n  function P(n) {\n    return function (e) {\n      return e.dom.nodeType === n;\n    };\n  }\n  function M(t, e) {\n    return function (e) {\n      for (var n = 0; n < e.length; n++) {\n        var r = function (n) {\n          var r = n.brand.toLowerCase();\n          return S(t, function (e) {\n            var n;\n            return r === (null === (n = e.brand) || void 0 === n ? void 0 : n.toLowerCase());\n          }).map(function (e) {\n            return {\n              current: e.name,\n              version: he.nu(parseInt(n.version, 10), 0)\n            };\n          });\n        }(e[n]);\n        if (r.isSome()) return r;\n      }\n      return A.none();\n    }(e.brands);\n  }\n  function N(e, n) {\n    var r = String(n).toLowerCase();\n    return S(e, function (e) {\n      return e.search(r);\n    });\n  }\n  function H(n) {\n    return function (e) {\n      return x(e, n);\n    };\n  }\n  function W(e) {\n    return window.matchMedia(e).matches;\n  }\n  function q(e, n) {\n    var r = e.dom;\n    if (1 !== r.nodeType) return !1;\n    var t = r;\n    if (void 0 !== t.matches) return t.matches(n);\n    if (void 0 !== t.msMatchesSelector) return t.msMatchesSelector(n);\n    if (void 0 !== t.webkitMatchesSelector) return t.webkitMatchesSelector(n);\n    if (void 0 !== t.mozMatchesSelector) return t.mozMatchesSelector(n);\n    throw new Error(\"Browser lacks native selectors\");\n  }\n  function I(e) {\n    return L.fromDom(e.dom.ownerDocument);\n  }\n  function j(e) {\n    var n,\n      r = Re(e);\n    return me(n = r) && c(n.dom.host) ? A.some(r) : A.none();\n  }\n  function B(e) {\n    return L.fromDom(e.dom.host);\n  }\n  function V(e, n, r) {\n    !function (e, n, r) {\n      if (!(l(r) || o(r) || i(r))) throw console.error(\"Invalid call to Attribute.set. Key \", n, \":: Value \", r, \":: Element \", e), new Error(\"Attribute value was not simple\");\n      e.setAttribute(n, r + \"\");\n    }(e.dom, n, r);\n  }\n  function X(e, n) {\n    var r = e.dom.getAttribute(n);\n    return null === r ? void 0 : r;\n  }\n  function _(e, n) {\n    e.dom.removeAttribute(n);\n  }\n  function z(e, n) {\n    var u = e.dom;\n    !function (e) {\n      for (var n, r = R(e), t = 0, o = r.length; t < o; t++) {\n        var i = r[t];\n        n = e[i], function (e, n, r) {\n          if (!l(r)) throw console.error(\"Invalid call to CSS.set. Property \", n, \":: Value \", r, \":: Element \", e), new Error(\"CSS value must be a string: \" + r);\n          E(e) && e.style.setProperty(n, r);\n        }(u, i, n);\n      }\n    }(n);\n  }\n  function U(e) {\n    function n() {\n      return e.stopPropagation();\n    }\n    function r() {\n      return e.preventDefault();\n    }\n    var t,\n      o,\n      i = L.fromDom(function (e) {\n        if (Ae() && c(e.target)) {\n          var n = L.fromDom(e.target);\n          if (se(n) && Le(n) && e.composed && e.composedPath) {\n            var r = e.composedPath();\n            if (r) return 0 < (t = r).length ? A.some(t[0]) : A.none();\n          }\n        }\n        var t;\n        return A.from(e.target);\n      }(e).getOr(e.target)),\n      u = (t = r, o = n, function () {\n        for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];\n        return t(o.apply(null, e));\n      });\n    return {\n      target: i,\n      x: e.clientX,\n      y: e.clientY,\n      stop: n,\n      prevent: r,\n      kill: u,\n      raw: e\n    };\n  }\n  function $(e, n, r) {\n    return o = n, i = !1, u = He, c = r, a = function a(e) {\n      u(e) && c(U(e));\n    }, (t = e).dom.addEventListener(o, a, i), {\n      unbind: function (t) {\n        for (var o = [], e = 1; e < arguments.length; e++) o[e - 1] = arguments[e];\n        return function () {\n          for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];\n          var r = o.concat(e);\n          return t.apply(null, r);\n        };\n      }(Ne, t, o, a, i)\n    };\n    var t, o, i, u, c, a;\n  }\n  function K(e) {\n    var n = void 0 === e ? window : e;\n    return ke().browser.isFirefox() ? A.none() : A.from(n.visualViewport);\n  }\n  function Y(e, n, r, t) {\n    return {\n      x: e,\n      y: n,\n      width: r,\n      height: t,\n      right: e + r,\n      bottom: n + t\n    };\n  }\n  function G(r, t, e) {\n    return K(e).map(function (e) {\n      function n(e) {\n        return t(U(e));\n      }\n      return e.addEventListener(r, n), {\n        unbind: function unbind() {\n          return e.removeEventListener(r, n);\n        }\n      };\n    }).getOrThunk(function () {\n      return {\n        unbind: s\n      };\n    });\n  }\n  function J(e, n) {\n    e.fire(\"FullscreenStateChanged\", {\n      state: n\n    }), e.fire(\"ResizeEditor\");\n  }\n  function Q(e) {\n    return e.getParam(\"fullscreen_native\", !1, \"boolean\");\n  }\n  function Z(e) {\n    return e.dom === (void 0 !== (n = I(e).dom).fullscreenElement ? n.fullscreenElement : void 0 !== n.msFullscreenElement ? n.msFullscreenElement : void 0 !== n.webkitFullscreenElement ? n.webkitFullscreenElement : null);\n    var n;\n  }\n  function ee(e, n) {\n    return t = function t(e) {\n      return q(e, n);\n    }, b((r = e, A.from(r.dom.parentNode).map(L.fromDom).map(Ce).map(function (e) {\n      return b(e, function (e) {\n        return r.dom !== e.dom;\n      });\n    }).getOr([])), t);\n    var r, t;\n  }\n  function ne(o, e, n) {\n    function r(t) {\n      return function (e) {\n        var n = X(e, \"style\"),\n          r = void 0 === n ? \"no-styles\" : n.trim();\n        r === t || (V(e, Ve, r), z(e, o.parseStyle(t)));\n      };\n    }\n    var t,\n      i,\n      u,\n      c,\n      a,\n      s,\n      l = (s = function s(e) {\n        return q(e, \"*\");\n      }, b(function (e, n) {\n        for (var r = h(n) ? n : v, t = e.dom, o = []; null !== t.parentNode && void 0 !== t.parentNode;) {\n          var i = t.parentNode,\n            u = L.fromDom(i);\n          if (o.push(u), !0 === r(u)) break;\n          t = i;\n        }\n        return o;\n      }(e, void 0), s)),\n      f = function (e) {\n        for (var n = [], r = 0, t = e.length; r < t; ++r) {\n          if (!d(e[r])) throw new Error(\"Arr.flatten item \" + r + \" was not an array, input: \" + e);\n          k.apply(n, e[r]);\n        }\n        return n;\n      }(C(l, function (e) {\n        return ee(e, \"*:not(.tox-silver-sink)\");\n      })),\n      m = (i = \"background-color\", u = (t = n).dom, void 0 !== (a = \"\" !== (c = window.getComputedStyle(u).getPropertyValue(i)) || Pe(t) ? c : Me(u, i)) && \"\" !== a ? \"background-color:\" + a + \"!important\" : \"background-color:rgb(255,255,255)!important;\");\n    D(f, r(\"display:none!important;\")), D(l, r(Xe + _e + m)), r((!0 === ze ? \"\" : Xe) + _e + m)(e);\n  }\n  function re(r, t) {\n    return function (n) {\n      function e(e) {\n        return n.setActive(e.state);\n      }\n      return n.setActive(null !== t.get()), r.on(\"FullscreenStateChanged\", e), function () {\n        return r.off(\"FullscreenStateChanged\", e);\n      };\n    };\n  }\n  \"undefined\" != typeof window || Function(\"return this;\")();\n  function te() {\n    return de(0, 0);\n  }\n  function oe(e) {\n    function n(e) {\n      return function () {\n        return r === e;\n      };\n    }\n    var r = e.current,\n      t = e.version;\n    return {\n      current: r,\n      version: t,\n      isEdge: n(\"Edge\"),\n      isChrome: n(\"Chrome\"),\n      isIE: n(\"IE\"),\n      isOpera: n(\"Opera\"),\n      isFirefox: n(pe),\n      isSafari: n(\"Safari\")\n    };\n  }\n  function ie(e) {\n    function n(e) {\n      return function () {\n        return r === e;\n      };\n    }\n    var r = e.current,\n      t = e.version;\n    return {\n      current: r,\n      version: t,\n      isWindows: n(be),\n      isiOS: n(\"iOS\"),\n      isAndroid: n(Se),\n      isOSX: n(\"OSX\"),\n      isLinux: n(\"Linux\"),\n      isSolaris: n(xe),\n      isFreeBSD: n(Ee),\n      isChromeOS: n(Oe)\n    };\n  }\n  var ue,\n    ce,\n    ae,\n    se = P(1),\n    le = P(3),\n    fe = P(9),\n    me = P(11),\n    de = function de(e, n) {\n      return {\n        major: e,\n        minor: n\n      };\n    },\n    he = {\n      nu: de,\n      detect: function detect(e, n) {\n        var r,\n          t,\n          o = String(n).toLowerCase();\n        return 0 === e.length ? te() : (t = function (e, n) {\n          for (var r = 0; r < e.length; r++) {\n            var t = e[r];\n            if (t.test(n)) return t;\n          }\n        }(e, r = o)) ? de(i(1), i(2)) : {\n          major: 0,\n          minor: 0\n        };\n        function i(e) {\n          return Number(r.replace(t, \"$\" + e));\n        }\n      },\n      unknown: te\n    },\n    ve = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n    ge = {\n      browsers: y([{\n        name: \"Edge\",\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: function search(e) {\n          return x(e, \"edge/\") && x(e, \"chrome\") && x(e, \"safari\") && x(e, \"applewebkit\");\n        }\n      }, {\n        name: \"Chrome\",\n        brand: \"Chromium\",\n        versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/, ve],\n        search: function search(e) {\n          return x(e, \"chrome\") && !x(e, \"chromeframe\");\n        }\n      }, {\n        name: \"IE\",\n        versionRegexes: [/.*?msie\\ ?([0-9]+)\\.([0-9]+).*/, /.*?rv:([0-9]+)\\.([0-9]+).*/],\n        search: function search(e) {\n          return x(e, \"msie\") || x(e, \"trident\");\n        }\n      }, {\n        name: \"Opera\",\n        versionRegexes: [ve, /.*?opera\\/([0-9]+)\\.([0-9]+).*/],\n        search: H(\"opera\")\n      }, {\n        name: \"Firefox\",\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: H(\"firefox\")\n      }, {\n        name: \"Safari\",\n        versionRegexes: [ve, /.*?cpu os ([0-9]+)_([0-9]+).*/],\n        search: function search(e) {\n          return (x(e, \"safari\") || x(e, \"mobile/\")) && x(e, \"applewebkit\");\n        }\n      }]),\n      oses: y([{\n        name: \"Windows\",\n        search: H(\"win\"),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      }, {\n        name: \"iOS\",\n        search: function search(e) {\n          return x(e, \"iphone\") || x(e, \"ipad\");\n        },\n        versionRegexes: [/.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/, /.*cpu os ([0-9]+)_([0-9]+).*/, /.*cpu iphone os ([0-9]+)_([0-9]+).*/]\n      }, {\n        name: \"Android\",\n        search: H(\"android\"),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      }, {\n        name: \"OSX\",\n        search: H(\"mac os x\"),\n        versionRegexes: [/.*?mac\\ os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      }, {\n        name: \"Linux\",\n        search: H(\"linux\"),\n        versionRegexes: []\n      }, {\n        name: \"Solaris\",\n        search: H(\"sunos\"),\n        versionRegexes: []\n      }, {\n        name: \"FreeBSD\",\n        search: H(\"freebsd\"),\n        versionRegexes: []\n      }, {\n        name: \"ChromeOS\",\n        search: H(\"cros\"),\n        versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/]\n      }])\n    },\n    pe = \"Firefox\",\n    we = function we() {\n      return oe({\n        current: void 0,\n        version: he.unknown()\n      });\n    },\n    ye = oe,\n    be = (y(\"Edge\"), y(\"Chrome\"), y(\"IE\"), y(\"Opera\"), y(pe), y(\"Safari\"), \"Windows\"),\n    Se = \"Android\",\n    xe = \"Solaris\",\n    Ee = \"FreeBSD\",\n    Oe = \"ChromeOS\",\n    Fe = function Fe() {\n      return ie({\n        current: void 0,\n        version: he.unknown()\n      });\n    },\n    Te = ie,\n    ke = (y(be), y(\"iOS\"), y(Se), y(\"Linux\"), y(\"OSX\"), y(xe), y(Ee), y(Oe), ae = !(ue = function ue() {\n      return e = navigator.userAgent, n = A.from(navigator.userAgentData), r = W, v = ge.browsers(), g = ge.oses(), p = n.bind(function (e) {\n        return M(v, e);\n      }).orThunk(function () {\n        return N(v, r = e).map(function (e) {\n          var n = he.detect(e.versionRegexes, r);\n          return {\n            current: e.name,\n            version: n\n          };\n        });\n        var r;\n      }).fold(we, ye), w = N(g, t = e).map(function (e) {\n        var n = he.detect(e.versionRegexes, t);\n        return {\n          current: e.name,\n          version: n\n        };\n      }).fold(Fe, Te), {\n        browser: p,\n        os: w,\n        deviceType: (i = p, u = e, c = r, a = (o = w).isiOS() && !0 === /ipad/i.test(u), s = o.isiOS() && !a, f = (l = o.isiOS() || o.isAndroid()) || c(\"(pointer:coarse)\"), m = a || !s && l && c(\"(min-device-width:768px)\"), d = s || l && !m, h = i.isSafari() && o.isiOS() && !1 === /safari/i.test(u), {\n          isiPad: y(a),\n          isiPhone: y(s),\n          isTablet: y(m),\n          isPhone: y(d),\n          isTouch: y(f),\n          isAndroid: o.isAndroid,\n          isiOS: o.isiOS,\n          isWebView: y(h),\n          isDesktop: y(!d && !m && !h)\n        })\n      };\n      var e, n, r, t, o, i, u, c, a, s, l, f, m, d, h, v, g, p, w;\n    }), function () {\n      for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];\n      return ae || (ae = !0, ce = ue.apply(null, e)), ce;\n    }),\n    Ce = function Ce(e) {\n      return C(e.dom.childNodes, L.fromDom);\n    },\n    De = h(Element.prototype.attachShadow) && h(Node.prototype.getRootNode),\n    Ae = y(De),\n    Re = De ? function (e) {\n      return L.fromDom(e.dom.getRootNode());\n    } : function (e) {\n      return fe(e) ? e : I(e);\n    },\n    Le = function Le(e) {\n      return c(e.dom.shadowRoot);\n    },\n    Pe = function Pe(e) {\n      var n = le(e) ? e.dom.parentNode : e.dom;\n      if (null == n || null === n.ownerDocument) return !1;\n      var r,\n        t,\n        o = n.ownerDocument;\n      return j(L.fromDom(n)).fold(function () {\n        return o.body.contains(n);\n      }, (r = Pe, t = B, function (e) {\n        return r(t(e));\n      }));\n    },\n    Me = function Me(e, n) {\n      return E(e) ? e.style.getPropertyValue(n) : \"\";\n    },\n    Ne = function Ne(e, n, r, t) {\n      e.dom.removeEventListener(n, r, t);\n    },\n    He = f,\n    We = function We(r, t) {\n      return {\n        left: r,\n        top: t,\n        translate: function translate(e, n) {\n          return We(r + e, t + n);\n        }\n      };\n    },\n    qe = We,\n    Ie = tinymce.util.Tools.resolve(\"tinymce.dom.DOMUtils\"),\n    je = tinymce.util.Tools.resolve(\"tinymce.Env\"),\n    Be = tinymce.util.Tools.resolve(\"tinymce.util.Delay\"),\n    Ve = \"data-ephox-mobile-fullscreen-style\",\n    Xe = \"position:absolute!important;\",\n    _e = \"top:0!important;left:0!important;margin:0!important;padding:0!important;width:100%!important;height:100%!important;overflow:visible!important;\",\n    ze = je.os.isAndroid(),\n    Ue = Ie.DOM,\n    $e = K().fold(function () {\n      return {\n        bind: s,\n        unbind: s\n      };\n    }, function (n) {\n      var r,\n        t = (r = p(s), _T(_T({}, r), {\n          on: function on(e) {\n            return r.get().each(e);\n          }\n        })),\n        o = w(),\n        i = w(),\n        u = Be.throttle(function () {\n          document.body.scrollTop = 0, document.documentElement.scrollTop = 0, window.requestAnimationFrame(function () {\n            t.on(function (e) {\n              return z(e, {\n                top: n.offsetTop + \"px\",\n                left: n.offsetLeft + \"px\",\n                height: n.height + \"px\",\n                width: n.width + \"px\"\n              });\n            });\n          });\n        }, 50);\n      return {\n        bind: function bind(e) {\n          t.set(e), u(), o.set(G(\"resize\", u)), i.set(G(\"scroll\", u));\n        },\n        unbind: function unbind() {\n          t.on(function () {\n            o.clear(), i.clear();\n          }), t.clear();\n        }\n      };\n    }),\n    Ke = function Ke(o, i) {\n      function u(n) {\n        n(w, \"tox-fullscreen\"), n(y, \"tox-fullscreen\"), n(b, \"tox-fullscreen\"), j(S).map(function (e) {\n          return B(e).dom;\n        }).each(function (e) {\n          n(e, \"tox-fullscreen\"), n(e, \"tox-shadowhost\");\n        });\n      }\n      function e() {\n        var r, e, n, t;\n        F && (r = o.dom, e = \"[\" + Ve + \"]\", D(1 !== (n = t = document).nodeType && 9 !== n.nodeType && 11 !== n.nodeType || 0 === n.childElementCount ? [] : C(t.querySelectorAll(e), L.fromDom), function (e) {\n          var n = X(e, Ve);\n          \"no-styles\" !== n ? z(e, r.parseStyle(n)) : _(e, \"style\"), _(e, Ve);\n        })), u(Ue.removeClass), $e.unbind(), A.from(i.get()).each(function (e) {\n          return e.fullscreenChangeHandler.unbind();\n        });\n      }\n      var n,\n        r,\n        t,\n        c,\n        a,\n        s,\n        l,\n        f,\n        m,\n        d,\n        h,\n        v,\n        g,\n        p,\n        w = document.body,\n        y = document.documentElement,\n        b = o.getContainer(),\n        S = L.fromDom(b),\n        x = j(s = L.fromDom(o.getElement())).map(B).getOrThunk(function () {\n          var e = I(s).dom.body;\n          if (null == e) throw new Error(\"Body is not available yet\");\n          return L.fromDom(e);\n        }),\n        E = i.get(),\n        O = L.fromDom(o.getBody()),\n        F = je.deviceType.isTouch(),\n        T = b.style,\n        k = o.iframeElement.style;\n      E ? (E.fullscreenChangeHandler.unbind(), Q(o) && Z(x) && ((c = I(x).dom).exitFullscreen ? c.exitFullscreen() : c.msExitFullscreen ? c.msExitFullscreen() : c.webkitCancelFullScreen && c.webkitCancelFullScreen()), k.width = E.iframeWidth, k.height = E.iframeHeight, T.width = E.containerWidth, T.height = E.containerHeight, T.top = E.containerTop, T.left = E.containerLeft, e(), t = E.scrollPos, window.scrollTo(t.x, t.y), i.set(null), J(o, !1), o.off(\"remove\", e)) : (n = $(I(x), void 0 !== document.fullscreenElement ? \"fullscreenchange\" : void 0 !== document.msFullscreenElement ? \"MSFullscreenChange\" : void 0 !== document.webkitFullscreenElement ? \"webkitfullscreenchange\" : \"fullscreenchange\", function (e) {\n        Q(o) && (Z(x) || null === i.get() || Ke(o, i));\n      }), r = {\n        scrollPos: (l = window, v = void 0 === l ? window : l, g = v.document, d = (m = void 0 !== (f = L.fromDom(g)) ? f.dom : document).body.scrollLeft || m.documentElement.scrollLeft, h = m.body.scrollTop || m.documentElement.scrollTop, p = qe(d, h), K(v).fold(function () {\n          var e = v.document.documentElement,\n            n = e.clientWidth,\n            r = e.clientHeight;\n          return Y(p.left, p.top, n, r);\n        }, function (e) {\n          return Y(Math.max(e.pageLeft, p.left), Math.max(e.pageTop, p.top), e.width, e.height);\n        })),\n        containerWidth: T.width,\n        containerHeight: T.height,\n        containerTop: T.top,\n        containerLeft: T.left,\n        iframeWidth: k.width,\n        iframeHeight: k.height,\n        fullscreenChangeHandler: n\n      }, F && ne(o.dom, S, O), k.width = k.height = \"100%\", T.width = T.height = \"\", u(Ue.addClass), $e.bind(S), o.on(\"remove\", e), i.set(r), Q(o) && ((a = x.dom).requestFullscreen ? a.requestFullscreen() : a.msRequestFullscreen ? a.msRequestFullscreen() : a.webkitRequestFullScreen && a.webkitRequestFullScreen()), J(o, !0));\n    };\n  t.add(\"fullscreen\", function (e) {\n    var n,\n      r,\n      t,\n      o,\n      i,\n      u = a(null);\n    return e.inline || (r = u, (n = e).addCommand(\"mceFullScreen\", function () {\n      Ke(n, r);\n    }), (t = e).ui.registry.addToggleMenuItem(\"fullscreen\", {\n      text: \"Fullscreen\",\n      icon: \"fullscreen\",\n      shortcut: \"Meta+Shift+F\",\n      onAction: c,\n      onSetup: re(t, o = u)\n    }), t.ui.registry.addToggleButton(\"fullscreen\", {\n      tooltip: \"Fullscreen\",\n      icon: \"fullscreen\",\n      onAction: c,\n      onSetup: re(t, o)\n    }), e.addShortcut(\"Meta+Shift+F\", \"\", \"mceFullScreen\")), i = u, {\n      isFullscreen: function isFullscreen() {\n        return null !== i.get();\n      }\n    };\n    function c() {\n      return t.execCommand(\"mceFullScreen\");\n    }\n  });\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhIiwiZSIsIm4iLCJnZXQiLCJzZXQiLCJ0IiwiciIsIl90eXBlb2YiLCJBcnJheSIsInByb3RvdHlwZSIsImlzUHJvdG90eXBlT2YiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJTdHJpbmciLCJjIiwicyIsInkiLCJ0aW55bWNlIiwidXRpbCIsIlRvb2xzIiwicmVzb2x2ZSIsImwiLCJkIiwibyIsImgiLCJpIiwidSIsIm0iLCJ2IiwiZiIsImZvbGQiLCJpc1NvbWUiLCJpc05vbmUiLCJnZXRPciIsImdldE9yVGh1bmsiLCJnIiwiZ2V0T3JEaWUiLCJFcnJvciIsImdldE9yTnVsbCIsImdldE9yVW5kZWZpbmVkIiwib3IiLCJvclRodW5rIiwibWFwIiwiZWFjaCIsImJpbmQiLCJleGlzdHMiLCJmb3JhbGwiLCJmaWx0ZXIiLCJ0b0FycmF5IiwidG9TdHJpbmciLCJwIiwiQSIsIm5vbmUiLCJjbGVhciIsImlzU2V0Iiwic29tZSIsInciLCJ1bmJpbmQiLCJDIiwibGVuZ3RoIiwiRCIsImIiLCJwdXNoIiwiUyIsIngiLCJpbmRleE9mIiwiRSIsInN0eWxlIiwiZ2V0UHJvcGVydHlWYWx1ZSIsIk8iLCJkb20iLCJGIiwiZnJvbSIsIlQiLCJPYmplY3QiLCJhc3NpZ24iLCJhcmd1bWVudHMiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJhcHBseSIsImsiLCJSIiwia2V5cyIsIkwiLCJmcm9tSHRtbCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImlubmVySFRNTCIsImhhc0NoaWxkTm9kZXMiLCJjaGlsZE5vZGVzIiwiY29uc29sZSIsImVycm9yIiwiZnJvbVRhZyIsImZyb21UZXh0IiwiY3JlYXRlVGV4dE5vZGUiLCJmcm9tRG9tIiwiZnJvbVBvaW50IiwiZWxlbWVudEZyb21Qb2ludCIsIlAiLCJub2RlVHlwZSIsIk0iLCJicmFuZCIsInRvTG93ZXJDYXNlIiwiY3VycmVudCIsInZlcnNpb24iLCJoZSIsIm51IiwicGFyc2VJbnQiLCJicmFuZHMiLCJOIiwic2VhcmNoIiwiSCIsIlciLCJ3aW5kb3ciLCJtYXRjaE1lZGlhIiwibWF0Y2hlcyIsInEiLCJtc01hdGNoZXNTZWxlY3RvciIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIkkiLCJvd25lckRvY3VtZW50IiwiaiIsIlJlIiwibWUiLCJob3N0IiwiQiIsIlYiLCJzZXRBdHRyaWJ1dGUiLCJYIiwiZ2V0QXR0cmlidXRlIiwiXyIsInJlbW92ZUF0dHJpYnV0ZSIsInoiLCJzZXRQcm9wZXJ0eSIsIlUiLCJzdG9wUHJvcGFnYXRpb24iLCJwcmV2ZW50RGVmYXVsdCIsIkFlIiwidGFyZ2V0Iiwic2UiLCJMZSIsImNvbXBvc2VkIiwiY29tcG9zZWRQYXRoIiwiY2xpZW50WCIsImNsaWVudFkiLCJzdG9wIiwicHJldmVudCIsImtpbGwiLCJyYXciLCIkIiwiSGUiLCJhZGRFdmVudExpc3RlbmVyIiwiY29uY2F0IiwiTmUiLCJLIiwia2UiLCJicm93c2VyIiwiaXNGaXJlZm94IiwidmlzdWFsVmlld3BvcnQiLCJZIiwid2lkdGgiLCJoZWlnaHQiLCJyaWdodCIsImJvdHRvbSIsIkciLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiSiIsImZpcmUiLCJzdGF0ZSIsIlEiLCJnZXRQYXJhbSIsIloiLCJmdWxsc2NyZWVuRWxlbWVudCIsIm1zRnVsbHNjcmVlbkVsZW1lbnQiLCJ3ZWJraXRGdWxsc2NyZWVuRWxlbWVudCIsImVlIiwicGFyZW50Tm9kZSIsIkNlIiwibmUiLCJ0cmltIiwiVmUiLCJwYXJzZVN0eWxlIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsIlBlIiwiTWUiLCJYZSIsIl9lIiwiemUiLCJyZSIsInNldEFjdGl2ZSIsIm9uIiwib2ZmIiwiRnVuY3Rpb24iLCJ0ZSIsImRlIiwib2UiLCJpc0VkZ2UiLCJpc0Nocm9tZSIsImlzSUUiLCJpc09wZXJhIiwicGUiLCJpc1NhZmFyaSIsImllIiwiaXNXaW5kb3dzIiwiYmUiLCJpc2lPUyIsImlzQW5kcm9pZCIsIlNlIiwiaXNPU1giLCJpc0xpbnV4IiwiaXNTb2xhcmlzIiwieGUiLCJpc0ZyZWVCU0QiLCJFZSIsImlzQ2hyb21lT1MiLCJPZSIsInVlIiwiY2UiLCJhZSIsImxlIiwiZmUiLCJtYWpvciIsIm1pbm9yIiwiZGV0ZWN0IiwidGVzdCIsIk51bWJlciIsInJlcGxhY2UiLCJ1bmtub3duIiwidmUiLCJnZSIsImJyb3dzZXJzIiwidmVyc2lvblJlZ2V4ZXMiLCJvc2VzIiwid2UiLCJ5ZSIsIkZlIiwiVGUiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJ1c2VyQWdlbnREYXRhIiwib3MiLCJkZXZpY2VUeXBlIiwiaXNpUGFkIiwiaXNpUGhvbmUiLCJpc1RhYmxldCIsImlzUGhvbmUiLCJpc1RvdWNoIiwiaXNXZWJWaWV3IiwiaXNEZXNrdG9wIiwiRGUiLCJFbGVtZW50IiwiYXR0YWNoU2hhZG93IiwiTm9kZSIsImdldFJvb3ROb2RlIiwic2hhZG93Um9vdCIsImJvZHkiLCJjb250YWlucyIsIldlIiwibGVmdCIsInRvcCIsInRyYW5zbGF0ZSIsInFlIiwiSWUiLCJqZSIsIkJlIiwiVWUiLCJET00iLCIkZSIsInRocm90dGxlIiwic2Nyb2xsVG9wIiwiZG9jdW1lbnRFbGVtZW50IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwib2Zmc2V0VG9wIiwib2Zmc2V0TGVmdCIsIktlIiwiY2hpbGRFbGVtZW50Q291bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwicmVtb3ZlQ2xhc3MiLCJmdWxsc2NyZWVuQ2hhbmdlSGFuZGxlciIsImdldENvbnRhaW5lciIsImdldEVsZW1lbnQiLCJnZXRCb2R5IiwiaWZyYW1lRWxlbWVudCIsImV4aXRGdWxsc2NyZWVuIiwibXNFeGl0RnVsbHNjcmVlbiIsIndlYmtpdENhbmNlbEZ1bGxTY3JlZW4iLCJpZnJhbWVXaWR0aCIsImlmcmFtZUhlaWdodCIsImNvbnRhaW5lcldpZHRoIiwiY29udGFpbmVySGVpZ2h0IiwiY29udGFpbmVyVG9wIiwiY29udGFpbmVyTGVmdCIsInNjcm9sbFBvcyIsInNjcm9sbFRvIiwic2Nyb2xsTGVmdCIsImNsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0IiwiTWF0aCIsIm1heCIsInBhZ2VMZWZ0IiwicGFnZVRvcCIsImFkZENsYXNzIiwicmVxdWVzdEZ1bGxzY3JlZW4iLCJtc1JlcXVlc3RGdWxsc2NyZWVuIiwid2Via2l0UmVxdWVzdEZ1bGxTY3JlZW4iLCJhZGQiLCJpbmxpbmUiLCJhZGRDb21tYW5kIiwidWkiLCJyZWdpc3RyeSIsImFkZFRvZ2dsZU1lbnVJdGVtIiwidGV4dCIsImljb24iLCJzaG9ydGN1dCIsIm9uQWN0aW9uIiwib25TZXR1cCIsImFkZFRvZ2dsZUJ1dHRvbiIsInRvb2x0aXAiLCJhZGRTaG9ydGN1dCIsImlzRnVsbHNjcmVlbiIsImV4ZWNDb21tYW5kIl0sInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9hc3NldHMvY29yZS9wbHVnaW5zL2N1c3RvbS90aW55bWNlL3BsdWdpbnMvZnVsbHNjcmVlbi9wbHVnaW4ubWluLmpzP2U1YWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgVGlueSBUZWNobm9sb2dpZXMsIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIExHUEwgb3IgYSBjb21tZXJjaWFsIGxpY2Vuc2UuXHJcbiAqIEZvciBMR1BMIHNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKiBGb3IgY29tbWVyY2lhbCBsaWNlbnNlcyBzZWUgaHR0cHM6Ly93d3cudGlueS5jbG91ZC9cclxuICpcclxuICogVmVyc2lvbjogNS4xMC43ICgyMDIyLTEyLTA2KVxyXG4gKi9cclxuIWZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYShlKXt2YXIgbj1lO3JldHVybntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbn0sc2V0OmZ1bmN0aW9uKGUpe249ZX19fWZ1bmN0aW9uIGUodCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiByPXR5cGVvZihuPWUpLChudWxsPT09bj9cIm51bGxcIjpcIm9iamVjdFwiPT1yJiYoQXJyYXkucHJvdG90eXBlLmlzUHJvdG90eXBlT2Yobil8fG4uY29uc3RydWN0b3ImJlwiQXJyYXlcIj09PW4uY29uc3RydWN0b3IubmFtZSk/XCJhcnJheVwiOlwib2JqZWN0XCI9PXImJihTdHJpbmcucHJvdG90eXBlLmlzUHJvdG90eXBlT2Yobil8fG4uY29uc3RydWN0b3ImJlwiU3RyaW5nXCI9PT1uLmNvbnN0cnVjdG9yLm5hbWUpP1wic3RyaW5nXCI6cik9PT10O3ZhciBuLHJ9fWZ1bmN0aW9uIG4obil7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZT09PW59fWZ1bmN0aW9uIGMoZSl7cmV0dXJuIShudWxsPT1lKX1mdW5jdGlvbiBzKCl7fWZ1bmN0aW9uIHkoZSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGV9fWZ1bmN0aW9uIHIoZSl7cmV0dXJuIGV9dmFyIHQ9dGlueW1jZS51dGlsLlRvb2xzLnJlc29sdmUoXCJ0aW55bWNlLlBsdWdpbk1hbmFnZXJcIiksbD1lKFwic3RyaW5nXCIpLGQ9ZShcImFycmF5XCIpLG89bihcImJvb2xlYW5cIiksaD1uKFwiZnVuY3Rpb25cIiksaT1uKFwibnVtYmVyXCIpO2Z1bmN0aW9uIHUoKXtyZXR1cm4gbX12YXIgdj15KCExKSxmPXkoITApLG09e2ZvbGQ6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gZSgpfSxpc1NvbWU6dixpc05vbmU6ZixnZXRPcjpyLGdldE9yVGh1bms6ZyxnZXRPckRpZTpmdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoZXx8XCJlcnJvcjogZ2V0T3JEaWUgY2FsbGVkIG9uIG5vbmUuXCIpfSxnZXRPck51bGw6eShudWxsKSxnZXRPclVuZGVmaW5lZDp5KHZvaWQgMCksb3I6cixvclRodW5rOmcsbWFwOnUsZWFjaDpzLGJpbmQ6dSxleGlzdHM6dixmb3JhbGw6ZixmaWx0ZXI6ZnVuY3Rpb24oKXtyZXR1cm4gbX0sdG9BcnJheTpmdW5jdGlvbigpe3JldHVybltdfSx0b1N0cmluZzp5KFwibm9uZSgpXCIpfTtmdW5jdGlvbiBnKGUpe3JldHVybiBlKCl9ZnVuY3Rpb24gcChlKXtmdW5jdGlvbiBuKCl7cmV0dXJuIHIuZ2V0KCkuZWFjaChlKX12YXIgcj1hKEEubm9uZSgpKTtyZXR1cm57Y2xlYXI6ZnVuY3Rpb24oKXtuKCksci5zZXQoQS5ub25lKCkpfSxpc1NldDpmdW5jdGlvbigpe3JldHVybiByLmdldCgpLmlzU29tZSgpfSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gci5nZXQoKX0sc2V0OmZ1bmN0aW9uKGUpe24oKSxyLnNldChBLnNvbWUoZSkpfX19ZnVuY3Rpb24gdygpe3JldHVybiBwKGZ1bmN0aW9uKGUpe3JldHVybiBlLnVuYmluZCgpfSl9ZnVuY3Rpb24gQyhlLG4pe2Zvcih2YXIgcj1lLmxlbmd0aCx0PW5ldyBBcnJheShyKSxvPTA7bzxyO28rKyl7dmFyIGk9ZVtvXTt0W29dPW4oaSxvKX1yZXR1cm4gdH1mdW5jdGlvbiBEKGUsbil7Zm9yKHZhciByPTAsdD1lLmxlbmd0aDtyPHQ7cisrKW4oZVtyXSxyKX1mdW5jdGlvbiBiKGUsbil7Zm9yKHZhciByPVtdLHQ9MCxvPWUubGVuZ3RoO3Q8bzt0Kyspe3ZhciBpPWVbdF07bihpLHQpJiZyLnB1c2goaSl9cmV0dXJuIHJ9ZnVuY3Rpb24gUyhlLG4pe3JldHVybiBmdW5jdGlvbihlLG4scil7Zm9yKHZhciB0PTAsbz1lLmxlbmd0aDt0PG87dCsrKXt2YXIgaT1lW3RdO2lmKG4oaSx0KSlyZXR1cm4gQS5zb21lKGkpO2lmKHIoaSx0KSlicmVha31yZXR1cm4gQS5ub25lKCl9KGUsbix2KX1mdW5jdGlvbiB4KGUsbil7cmV0dXJuLTEhPT1lLmluZGV4T2Yobil9ZnVuY3Rpb24gRShlKXtyZXR1cm4gdm9pZCAwIT09ZS5zdHlsZSYmaChlLnN0eWxlLmdldFByb3BlcnR5VmFsdWUpfWZ1bmN0aW9uIE8oZSl7aWYobnVsbD09ZSl0aHJvdyBuZXcgRXJyb3IoXCJOb2RlIGNhbm5vdCBiZSBudWxsIG9yIHVuZGVmaW5lZFwiKTtyZXR1cm57ZG9tOmV9fXZhciBGPWZ1bmN0aW9uKHIpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gb31mdW5jdGlvbiBuKGUpe3JldHVybiBlKHIpfXZhciB0PXkociksbz17Zm9sZDpmdW5jdGlvbihlLG4pe3JldHVybiBuKHIpfSxpc1NvbWU6Zixpc05vbmU6dixnZXRPcjp0LGdldE9yVGh1bms6dCxnZXRPckRpZTp0LGdldE9yTnVsbDp0LGdldE9yVW5kZWZpbmVkOnQsb3I6ZSxvclRodW5rOmUsbWFwOmZ1bmN0aW9uKGUpe3JldHVybiBGKGUocikpfSxlYWNoOmZ1bmN0aW9uKGUpe2Uocil9LGJpbmQ6bixleGlzdHM6bixmb3JhbGw6bixmaWx0ZXI6ZnVuY3Rpb24oZSl7cmV0dXJuIGUocik/bzptfSx0b0FycmF5OmZ1bmN0aW9uKCl7cmV0dXJuW3JdfSx0b1N0cmluZzpmdW5jdGlvbigpe3JldHVyblwic29tZShcIityK1wiKVwifX07cmV0dXJuIG99LEE9e3NvbWU6Rixub25lOnUsZnJvbTpmdW5jdGlvbihlKXtyZXR1cm4gbnVsbD09ZT9tOkYoZSl9fSxUPWZ1bmN0aW9uKCl7cmV0dXJuKFQ9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciBuLHI9MSx0PWFyZ3VtZW50cy5sZW5ndGg7cjx0O3IrKylmb3IodmFyIG8gaW4gbj1hcmd1bWVudHNbcl0pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4sbykmJihlW29dPW5bb10pO3JldHVybiBlfSkuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxrPUFycmF5LnByb3RvdHlwZS5wdXNoLFI9T2JqZWN0LmtleXMsTD17ZnJvbUh0bWw6ZnVuY3Rpb24oZSxuKXt2YXIgcj0obnx8ZG9jdW1lbnQpLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7aWYoci5pbm5lckhUTUw9ZSwhci5oYXNDaGlsZE5vZGVzKCl8fDE8ci5jaGlsZE5vZGVzLmxlbmd0aCl0aHJvdyBjb25zb2xlLmVycm9yKFwiSFRNTCBkb2VzIG5vdCBoYXZlIGEgc2luZ2xlIHJvb3Qgbm9kZVwiLGUpLG5ldyBFcnJvcihcIkhUTUwgbXVzdCBoYXZlIGEgc2luZ2xlIHJvb3Qgbm9kZVwiKTtyZXR1cm4gTyhyLmNoaWxkTm9kZXNbMF0pfSxmcm9tVGFnOmZ1bmN0aW9uKGUsbil7dmFyIHI9KG58fGRvY3VtZW50KS5jcmVhdGVFbGVtZW50KGUpO3JldHVybiBPKHIpfSxmcm9tVGV4dDpmdW5jdGlvbihlLG4pe3ZhciByPShufHxkb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZSk7cmV0dXJuIE8ocil9LGZyb21Eb206Tyxmcm9tUG9pbnQ6ZnVuY3Rpb24oZSxuLHIpe3JldHVybiBBLmZyb20oZS5kb20uZWxlbWVudEZyb21Qb2ludChuLHIpKS5tYXAoTyl9fTtmdW5jdGlvbiBQKG4pe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gZS5kb20ubm9kZVR5cGU9PT1ufX1mdW5jdGlvbiBNKHQsZSl7cmV0dXJuIGZ1bmN0aW9uKGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgcj1mdW5jdGlvbihuKXt2YXIgcj1uLmJyYW5kLnRvTG93ZXJDYXNlKCk7cmV0dXJuIFModCxmdW5jdGlvbihlKXt2YXIgbjtyZXR1cm4gcj09PShudWxsPT09KG49ZS5icmFuZCl8fHZvaWQgMD09PW4/dm9pZCAwOm4udG9Mb3dlckNhc2UoKSl9KS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJue2N1cnJlbnQ6ZS5uYW1lLHZlcnNpb246aGUubnUocGFyc2VJbnQobi52ZXJzaW9uLDEwKSwwKX19KX0oZVtuXSk7aWYoci5pc1NvbWUoKSlyZXR1cm4gcn1yZXR1cm4gQS5ub25lKCl9KGUuYnJhbmRzKX1mdW5jdGlvbiBOKGUsbil7dmFyIHI9U3RyaW5nKG4pLnRvTG93ZXJDYXNlKCk7cmV0dXJuIFMoZSxmdW5jdGlvbihlKXtyZXR1cm4gZS5zZWFyY2gocil9KX1mdW5jdGlvbiBIKG4pe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4geChlLG4pfX1mdW5jdGlvbiBXKGUpe3JldHVybiB3aW5kb3cubWF0Y2hNZWRpYShlKS5tYXRjaGVzfWZ1bmN0aW9uIHEoZSxuKXt2YXIgcj1lLmRvbTtpZigxIT09ci5ub2RlVHlwZSlyZXR1cm4hMTt2YXIgdD1yO2lmKHZvaWQgMCE9PXQubWF0Y2hlcylyZXR1cm4gdC5tYXRjaGVzKG4pO2lmKHZvaWQgMCE9PXQubXNNYXRjaGVzU2VsZWN0b3IpcmV0dXJuIHQubXNNYXRjaGVzU2VsZWN0b3Iobik7aWYodm9pZCAwIT09dC53ZWJraXRNYXRjaGVzU2VsZWN0b3IpcmV0dXJuIHQud2Via2l0TWF0Y2hlc1NlbGVjdG9yKG4pO2lmKHZvaWQgMCE9PXQubW96TWF0Y2hlc1NlbGVjdG9yKXJldHVybiB0Lm1vek1hdGNoZXNTZWxlY3RvcihuKTt0aHJvdyBuZXcgRXJyb3IoXCJCcm93c2VyIGxhY2tzIG5hdGl2ZSBzZWxlY3RvcnNcIil9ZnVuY3Rpb24gSShlKXtyZXR1cm4gTC5mcm9tRG9tKGUuZG9tLm93bmVyRG9jdW1lbnQpfWZ1bmN0aW9uIGooZSl7dmFyIG4scj1SZShlKTtyZXR1cm4gbWUobj1yKSYmYyhuLmRvbS5ob3N0KT9BLnNvbWUocik6QS5ub25lKCl9ZnVuY3Rpb24gQihlKXtyZXR1cm4gTC5mcm9tRG9tKGUuZG9tLmhvc3QpfWZ1bmN0aW9uIFYoZSxuLHIpeyFmdW5jdGlvbihlLG4scil7aWYoIShsKHIpfHxvKHIpfHxpKHIpKSl0aHJvdyBjb25zb2xlLmVycm9yKFwiSW52YWxpZCBjYWxsIHRvIEF0dHJpYnV0ZS5zZXQuIEtleSBcIixuLFwiOjogVmFsdWUgXCIscixcIjo6IEVsZW1lbnQgXCIsZSksbmV3IEVycm9yKFwiQXR0cmlidXRlIHZhbHVlIHdhcyBub3Qgc2ltcGxlXCIpO2Uuc2V0QXR0cmlidXRlKG4scitcIlwiKX0oZS5kb20sbixyKX1mdW5jdGlvbiBYKGUsbil7dmFyIHI9ZS5kb20uZ2V0QXR0cmlidXRlKG4pO3JldHVybiBudWxsPT09cj92b2lkIDA6cn1mdW5jdGlvbiBfKGUsbil7ZS5kb20ucmVtb3ZlQXR0cmlidXRlKG4pfWZ1bmN0aW9uIHooZSxuKXt2YXIgdT1lLmRvbTshZnVuY3Rpb24oZSl7Zm9yKHZhciBuLHI9UihlKSx0PTAsbz1yLmxlbmd0aDt0PG87dCsrKXt2YXIgaT1yW3RdO249ZVtpXSxmdW5jdGlvbihlLG4scil7aWYoIWwocikpdGhyb3cgY29uc29sZS5lcnJvcihcIkludmFsaWQgY2FsbCB0byBDU1Muc2V0LiBQcm9wZXJ0eSBcIixuLFwiOjogVmFsdWUgXCIscixcIjo6IEVsZW1lbnQgXCIsZSksbmV3IEVycm9yKFwiQ1NTIHZhbHVlIG11c3QgYmUgYSBzdHJpbmc6IFwiK3IpO0UoZSkmJmUuc3R5bGUuc2V0UHJvcGVydHkobixyKX0odSxpLG4pfX0obil9ZnVuY3Rpb24gVShlKXtmdW5jdGlvbiBuKCl7cmV0dXJuIGUuc3RvcFByb3BhZ2F0aW9uKCl9ZnVuY3Rpb24gcigpe3JldHVybiBlLnByZXZlbnREZWZhdWx0KCl9dmFyIHQsbyxpPUwuZnJvbURvbShmdW5jdGlvbihlKXtpZihBZSgpJiZjKGUudGFyZ2V0KSl7dmFyIG49TC5mcm9tRG9tKGUudGFyZ2V0KTtpZihzZShuKSYmTGUobikmJmUuY29tcG9zZWQmJmUuY29tcG9zZWRQYXRoKXt2YXIgcj1lLmNvbXBvc2VkUGF0aCgpO2lmKHIpcmV0dXJuIDA8KHQ9cikubGVuZ3RoP0Euc29tZSh0WzBdKTpBLm5vbmUoKX19dmFyIHQ7cmV0dXJuIEEuZnJvbShlLnRhcmdldCl9KGUpLmdldE9yKGUudGFyZ2V0KSksdT0odD1yLG89bixmdW5jdGlvbigpe2Zvcih2YXIgZT1bXSxuPTA7bjxhcmd1bWVudHMubGVuZ3RoO24rKyllW25dPWFyZ3VtZW50c1tuXTtyZXR1cm4gdChvLmFwcGx5KG51bGwsZSkpfSk7cmV0dXJue3RhcmdldDppLHg6ZS5jbGllbnRYLHk6ZS5jbGllbnRZLHN0b3A6bixwcmV2ZW50OnIsa2lsbDp1LHJhdzplfX1mdW5jdGlvbiAkKGUsbixyKXtyZXR1cm4gbz1uLGk9ITEsdT1IZSxjPXIsYT1mdW5jdGlvbihlKXt1KGUpJiZjKFUoZSkpfSwodD1lKS5kb20uYWRkRXZlbnRMaXN0ZW5lcihvLGEsaSkse3VuYmluZDpmdW5jdGlvbih0KXtmb3IodmFyIG89W10sZT0xO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspb1tlLTFdPWFyZ3VtZW50c1tlXTtyZXR1cm4gZnVuY3Rpb24oKXtmb3IodmFyIGU9W10sbj0wO248YXJndW1lbnRzLmxlbmd0aDtuKyspZVtuXT1hcmd1bWVudHNbbl07dmFyIHI9by5jb25jYXQoZSk7cmV0dXJuIHQuYXBwbHkobnVsbCxyKX19KE5lLHQsbyxhLGkpfTt2YXIgdCxvLGksdSxjLGF9ZnVuY3Rpb24gSyhlKXt2YXIgbj12b2lkIDA9PT1lP3dpbmRvdzplO3JldHVybiBrZSgpLmJyb3dzZXIuaXNGaXJlZm94KCk/QS5ub25lKCk6QS5mcm9tKG4udmlzdWFsVmlld3BvcnQpfWZ1bmN0aW9uIFkoZSxuLHIsdCl7cmV0dXJue3g6ZSx5Om4sd2lkdGg6cixoZWlnaHQ6dCxyaWdodDplK3IsYm90dG9tOm4rdH19ZnVuY3Rpb24gRyhyLHQsZSl7cmV0dXJuIEsoZSkubWFwKGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIG4oZSl7cmV0dXJuIHQoVShlKSl9cmV0dXJuIGUuYWRkRXZlbnRMaXN0ZW5lcihyLG4pLHt1bmJpbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5yZW1vdmVFdmVudExpc3RlbmVyKHIsbil9fX0pLmdldE9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm57dW5iaW5kOnN9fSl9ZnVuY3Rpb24gSihlLG4pe2UuZmlyZShcIkZ1bGxzY3JlZW5TdGF0ZUNoYW5nZWRcIix7c3RhdGU6bn0pLGUuZmlyZShcIlJlc2l6ZUVkaXRvclwiKX1mdW5jdGlvbiBRKGUpe3JldHVybiBlLmdldFBhcmFtKFwiZnVsbHNjcmVlbl9uYXRpdmVcIiwhMSxcImJvb2xlYW5cIil9ZnVuY3Rpb24gWihlKXtyZXR1cm4gZS5kb209PT0odm9pZCAwIT09KG49SShlKS5kb20pLmZ1bGxzY3JlZW5FbGVtZW50P24uZnVsbHNjcmVlbkVsZW1lbnQ6dm9pZCAwIT09bi5tc0Z1bGxzY3JlZW5FbGVtZW50P24ubXNGdWxsc2NyZWVuRWxlbWVudDp2b2lkIDAhPT1uLndlYmtpdEZ1bGxzY3JlZW5FbGVtZW50P24ud2Via2l0RnVsbHNjcmVlbkVsZW1lbnQ6bnVsbCk7dmFyIG59ZnVuY3Rpb24gZWUoZSxuKXtyZXR1cm4gdD1mdW5jdGlvbihlKXtyZXR1cm4gcShlLG4pfSxiKChyPWUsQS5mcm9tKHIuZG9tLnBhcmVudE5vZGUpLm1hcChMLmZyb21Eb20pLm1hcChDZSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBiKGUsZnVuY3Rpb24oZSl7cmV0dXJuIHIuZG9tIT09ZS5kb219KX0pLmdldE9yKFtdKSksdCk7dmFyIHIsdH1mdW5jdGlvbiBuZShvLGUsbil7ZnVuY3Rpb24gcih0KXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIG49WChlLFwic3R5bGVcIikscj12b2lkIDA9PT1uP1wibm8tc3R5bGVzXCI6bi50cmltKCk7cj09PXR8fChWKGUsVmUscikseihlLG8ucGFyc2VTdHlsZSh0KSkpfX12YXIgdCxpLHUsYyxhLHMsbD0ocz1mdW5jdGlvbihlKXtyZXR1cm4gcShlLFwiKlwiKX0sYihmdW5jdGlvbihlLG4pe2Zvcih2YXIgcj1oKG4pP246dix0PWUuZG9tLG89W107bnVsbCE9PXQucGFyZW50Tm9kZSYmdm9pZCAwIT09dC5wYXJlbnROb2RlOyl7dmFyIGk9dC5wYXJlbnROb2RlLHU9TC5mcm9tRG9tKGkpO2lmKG8ucHVzaCh1KSwhMD09PXIodSkpYnJlYWs7dD1pfXJldHVybiBvfShlLHZvaWQgMCkscykpLGY9ZnVuY3Rpb24oZSl7Zm9yKHZhciBuPVtdLHI9MCx0PWUubGVuZ3RoO3I8dDsrK3Ipe2lmKCFkKGVbcl0pKXRocm93IG5ldyBFcnJvcihcIkFyci5mbGF0dGVuIGl0ZW0gXCIrcitcIiB3YXMgbm90IGFuIGFycmF5LCBpbnB1dDogXCIrZSk7ay5hcHBseShuLGVbcl0pfXJldHVybiBufShDKGwsZnVuY3Rpb24oZSl7cmV0dXJuIGVlKGUsXCIqOm5vdCgudG94LXNpbHZlci1zaW5rKVwiKX0pKSxtPShpPVwiYmFja2dyb3VuZC1jb2xvclwiLHU9KHQ9bikuZG9tLHZvaWQgMCE9PShhPVwiXCIhPT0oYz13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh1KS5nZXRQcm9wZXJ0eVZhbHVlKGkpKXx8UGUodCk/YzpNZSh1LGkpKSYmXCJcIiE9PWE/XCJiYWNrZ3JvdW5kLWNvbG9yOlwiK2ErXCIhaW1wb3J0YW50XCI6XCJiYWNrZ3JvdW5kLWNvbG9yOnJnYigyNTUsMjU1LDI1NSkhaW1wb3J0YW50O1wiKTtEKGYscihcImRpc3BsYXk6bm9uZSFpbXBvcnRhbnQ7XCIpKSxEKGwscihYZStfZSttKSkscigoITA9PT16ZT9cIlwiOlhlKStfZSttKShlKX1mdW5jdGlvbiByZShyLHQpe3JldHVybiBmdW5jdGlvbihuKXtmdW5jdGlvbiBlKGUpe3JldHVybiBuLnNldEFjdGl2ZShlLnN0YXRlKX1yZXR1cm4gbi5zZXRBY3RpdmUobnVsbCE9PXQuZ2V0KCkpLHIub24oXCJGdWxsc2NyZWVuU3RhdGVDaGFuZ2VkXCIsZSksZnVuY3Rpb24oKXtyZXR1cm4gci5vZmYoXCJGdWxsc2NyZWVuU3RhdGVDaGFuZ2VkXCIsZSl9fX1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93fHxGdW5jdGlvbihcInJldHVybiB0aGlzO1wiKSgpO2Z1bmN0aW9uIHRlKCl7cmV0dXJuIGRlKDAsMCl9ZnVuY3Rpb24gb2UoZSl7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gcj09PWV9fXZhciByPWUuY3VycmVudCx0PWUudmVyc2lvbjtyZXR1cm57Y3VycmVudDpyLHZlcnNpb246dCxpc0VkZ2U6bihcIkVkZ2VcIiksaXNDaHJvbWU6bihcIkNocm9tZVwiKSxpc0lFOm4oXCJJRVwiKSxpc09wZXJhOm4oXCJPcGVyYVwiKSxpc0ZpcmVmb3g6bihwZSksaXNTYWZhcmk6bihcIlNhZmFyaVwiKX19ZnVuY3Rpb24gaWUoZSl7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gcj09PWV9fXZhciByPWUuY3VycmVudCx0PWUudmVyc2lvbjtyZXR1cm57Y3VycmVudDpyLHZlcnNpb246dCxpc1dpbmRvd3M6bihiZSksaXNpT1M6bihcImlPU1wiKSxpc0FuZHJvaWQ6bihTZSksaXNPU1g6bihcIk9TWFwiKSxpc0xpbnV4Om4oXCJMaW51eFwiKSxpc1NvbGFyaXM6bih4ZSksaXNGcmVlQlNEOm4oRWUpLGlzQ2hyb21lT1M6bihPZSl9fXZhciB1ZSxjZSxhZSxzZT1QKDEpLGxlPVAoMyksZmU9UCg5KSxtZT1QKDExKSxkZT1mdW5jdGlvbihlLG4pe3JldHVybnttYWpvcjplLG1pbm9yOm59fSxoZT17bnU6ZGUsZGV0ZWN0OmZ1bmN0aW9uKGUsbil7dmFyIHIsdCxvPVN0cmluZyhuKS50b0xvd2VyQ2FzZSgpO3JldHVybiAwPT09ZS5sZW5ndGg/dGUoKToodD1mdW5jdGlvbihlLG4pe2Zvcih2YXIgcj0wO3I8ZS5sZW5ndGg7cisrKXt2YXIgdD1lW3JdO2lmKHQudGVzdChuKSlyZXR1cm4gdH19KGUscj1vKSk/ZGUoaSgxKSxpKDIpKTp7bWFqb3I6MCxtaW5vcjowfTtmdW5jdGlvbiBpKGUpe3JldHVybiBOdW1iZXIoci5yZXBsYWNlKHQsXCIkXCIrZSkpfX0sdW5rbm93bjp0ZX0sdmU9Ly4qP3ZlcnNpb25cXC9cXCA/KFswLTldKylcXC4oWzAtOV0rKS4qLyxnZT17YnJvd3NlcnM6eShbe25hbWU6XCJFZGdlXCIsdmVyc2lvblJlZ2V4ZXM6Wy8uKj9lZGdlXFwvID8oWzAtOV0rKVxcLihbMC05XSspJC9dLHNlYXJjaDpmdW5jdGlvbihlKXtyZXR1cm4geChlLFwiZWRnZS9cIikmJngoZSxcImNocm9tZVwiKSYmeChlLFwic2FmYXJpXCIpJiZ4KGUsXCJhcHBsZXdlYmtpdFwiKX19LHtuYW1lOlwiQ2hyb21lXCIsYnJhbmQ6XCJDaHJvbWl1bVwiLHZlcnNpb25SZWdleGVzOlsvLio/Y2hyb21lXFwvKFswLTldKylcXC4oWzAtOV0rKS4qLyx2ZV0sc2VhcmNoOmZ1bmN0aW9uKGUpe3JldHVybiB4KGUsXCJjaHJvbWVcIikmJiF4KGUsXCJjaHJvbWVmcmFtZVwiKX19LHtuYW1lOlwiSUVcIix2ZXJzaW9uUmVnZXhlczpbLy4qP21zaWVcXCA/KFswLTldKylcXC4oWzAtOV0rKS4qLywvLio/cnY6KFswLTldKylcXC4oWzAtOV0rKS4qL10sc2VhcmNoOmZ1bmN0aW9uKGUpe3JldHVybiB4KGUsXCJtc2llXCIpfHx4KGUsXCJ0cmlkZW50XCIpfX0se25hbWU6XCJPcGVyYVwiLHZlcnNpb25SZWdleGVzOlt2ZSwvLio/b3BlcmFcXC8oWzAtOV0rKVxcLihbMC05XSspLiovXSxzZWFyY2g6SChcIm9wZXJhXCIpfSx7bmFtZTpcIkZpcmVmb3hcIix2ZXJzaW9uUmVnZXhlczpbLy4qP2ZpcmVmb3hcXC9cXCA/KFswLTldKylcXC4oWzAtOV0rKS4qL10sc2VhcmNoOkgoXCJmaXJlZm94XCIpfSx7bmFtZTpcIlNhZmFyaVwiLHZlcnNpb25SZWdleGVzOlt2ZSwvLio/Y3B1IG9zIChbMC05XSspXyhbMC05XSspLiovXSxzZWFyY2g6ZnVuY3Rpb24oZSl7cmV0dXJuKHgoZSxcInNhZmFyaVwiKXx8eChlLFwibW9iaWxlL1wiKSkmJngoZSxcImFwcGxld2Via2l0XCIpfX1dKSxvc2VzOnkoW3tuYW1lOlwiV2luZG93c1wiLHNlYXJjaDpIKFwid2luXCIpLHZlcnNpb25SZWdleGVzOlsvLio/d2luZG93c1xcIG50XFwgPyhbMC05XSspXFwuKFswLTldKykuKi9dfSx7bmFtZTpcImlPU1wiLHNlYXJjaDpmdW5jdGlvbihlKXtyZXR1cm4geChlLFwiaXBob25lXCIpfHx4KGUsXCJpcGFkXCIpfSx2ZXJzaW9uUmVnZXhlczpbLy4qP3ZlcnNpb25cXC9cXCA/KFswLTldKylcXC4oWzAtOV0rKS4qLywvLipjcHUgb3MgKFswLTldKylfKFswLTldKykuKi8sLy4qY3B1IGlwaG9uZSBvcyAoWzAtOV0rKV8oWzAtOV0rKS4qL119LHtuYW1lOlwiQW5kcm9pZFwiLHNlYXJjaDpIKFwiYW5kcm9pZFwiKSx2ZXJzaW9uUmVnZXhlczpbLy4qP2FuZHJvaWRcXCA/KFswLTldKylcXC4oWzAtOV0rKS4qL119LHtuYW1lOlwiT1NYXCIsc2VhcmNoOkgoXCJtYWMgb3MgeFwiKSx2ZXJzaW9uUmVnZXhlczpbLy4qP21hY1xcIG9zXFwgeFxcID8oWzAtOV0rKV8oWzAtOV0rKS4qL119LHtuYW1lOlwiTGludXhcIixzZWFyY2g6SChcImxpbnV4XCIpLHZlcnNpb25SZWdleGVzOltdfSx7bmFtZTpcIlNvbGFyaXNcIixzZWFyY2g6SChcInN1bm9zXCIpLHZlcnNpb25SZWdleGVzOltdfSx7bmFtZTpcIkZyZWVCU0RcIixzZWFyY2g6SChcImZyZWVic2RcIiksdmVyc2lvblJlZ2V4ZXM6W119LHtuYW1lOlwiQ2hyb21lT1NcIixzZWFyY2g6SChcImNyb3NcIiksdmVyc2lvblJlZ2V4ZXM6Wy8uKj9jaHJvbWVcXC8oWzAtOV0rKVxcLihbMC05XSspLiovXX1dKX0scGU9XCJGaXJlZm94XCIsd2U9ZnVuY3Rpb24oKXtyZXR1cm4gb2Uoe2N1cnJlbnQ6dm9pZCAwLHZlcnNpb246aGUudW5rbm93bigpfSl9LHllPW9lLGJlPSh5KFwiRWRnZVwiKSx5KFwiQ2hyb21lXCIpLHkoXCJJRVwiKSx5KFwiT3BlcmFcIikseShwZSkseShcIlNhZmFyaVwiKSxcIldpbmRvd3NcIiksU2U9XCJBbmRyb2lkXCIseGU9XCJTb2xhcmlzXCIsRWU9XCJGcmVlQlNEXCIsT2U9XCJDaHJvbWVPU1wiLEZlPWZ1bmN0aW9uKCl7cmV0dXJuIGllKHtjdXJyZW50OnZvaWQgMCx2ZXJzaW9uOmhlLnVua25vd24oKX0pfSxUZT1pZSxrZT0oeShiZSkseShcImlPU1wiKSx5KFNlKSx5KFwiTGludXhcIikseShcIk9TWFwiKSx5KHhlKSx5KEVlKSx5KE9lKSxhZT0hKHVlPWZ1bmN0aW9uKCl7cmV0dXJuIGU9bmF2aWdhdG9yLnVzZXJBZ2VudCxuPUEuZnJvbShuYXZpZ2F0b3IudXNlckFnZW50RGF0YSkscj1XLHY9Z2UuYnJvd3NlcnMoKSxnPWdlLm9zZXMoKSxwPW4uYmluZChmdW5jdGlvbihlKXtyZXR1cm4gTSh2LGUpfSkub3JUaHVuayhmdW5jdGlvbigpe3JldHVybiBOKHYscj1lKS5tYXAoZnVuY3Rpb24oZSl7dmFyIG49aGUuZGV0ZWN0KGUudmVyc2lvblJlZ2V4ZXMscik7cmV0dXJue2N1cnJlbnQ6ZS5uYW1lLHZlcnNpb246bn19KTt2YXIgcn0pLmZvbGQod2UseWUpLHc9TihnLHQ9ZSkubWFwKGZ1bmN0aW9uKGUpe3ZhciBuPWhlLmRldGVjdChlLnZlcnNpb25SZWdleGVzLHQpO3JldHVybntjdXJyZW50OmUubmFtZSx2ZXJzaW9uOm59fSkuZm9sZChGZSxUZSkse2Jyb3dzZXI6cCxvczp3LGRldmljZVR5cGU6KGk9cCx1PWUsYz1yLGE9KG89dykuaXNpT1MoKSYmITA9PT0vaXBhZC9pLnRlc3QodSkscz1vLmlzaU9TKCkmJiFhLGY9KGw9by5pc2lPUygpfHxvLmlzQW5kcm9pZCgpKXx8YyhcIihwb2ludGVyOmNvYXJzZSlcIiksbT1hfHwhcyYmbCYmYyhcIihtaW4tZGV2aWNlLXdpZHRoOjc2OHB4KVwiKSxkPXN8fGwmJiFtLGg9aS5pc1NhZmFyaSgpJiZvLmlzaU9TKCkmJiExPT09L3NhZmFyaS9pLnRlc3QodSkse2lzaVBhZDp5KGEpLGlzaVBob25lOnkocyksaXNUYWJsZXQ6eShtKSxpc1Bob25lOnkoZCksaXNUb3VjaDp5KGYpLGlzQW5kcm9pZDpvLmlzQW5kcm9pZCxpc2lPUzpvLmlzaU9TLGlzV2ViVmlldzp5KGgpLGlzRGVza3RvcDp5KCFkJiYhbSYmIWgpfSl9O3ZhciBlLG4scix0LG8saSx1LGMsYSxzLGwsZixtLGQsaCx2LGcscCx3fSksZnVuY3Rpb24oKXtmb3IodmFyIGU9W10sbj0wO248YXJndW1lbnRzLmxlbmd0aDtuKyspZVtuXT1hcmd1bWVudHNbbl07cmV0dXJuIGFlfHwoYWU9ITAsY2U9dWUuYXBwbHkobnVsbCxlKSksY2V9KSxDZT1mdW5jdGlvbihlKXtyZXR1cm4gQyhlLmRvbS5jaGlsZE5vZGVzLEwuZnJvbURvbSl9LERlPWgoRWxlbWVudC5wcm90b3R5cGUuYXR0YWNoU2hhZG93KSYmaChOb2RlLnByb3RvdHlwZS5nZXRSb290Tm9kZSksQWU9eShEZSksUmU9RGU/ZnVuY3Rpb24oZSl7cmV0dXJuIEwuZnJvbURvbShlLmRvbS5nZXRSb290Tm9kZSgpKX06ZnVuY3Rpb24oZSl7cmV0dXJuIGZlKGUpP2U6SShlKX0sTGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGMoZS5kb20uc2hhZG93Um9vdCl9LFBlPWZ1bmN0aW9uKGUpe3ZhciBuPWxlKGUpP2UuZG9tLnBhcmVudE5vZGU6ZS5kb207aWYobnVsbD09bnx8bnVsbD09PW4ub3duZXJEb2N1bWVudClyZXR1cm4hMTt2YXIgcix0LG89bi5vd25lckRvY3VtZW50O3JldHVybiBqKEwuZnJvbURvbShuKSkuZm9sZChmdW5jdGlvbigpe3JldHVybiBvLmJvZHkuY29udGFpbnMobil9LChyPVBlLHQ9QixmdW5jdGlvbihlKXtyZXR1cm4gcih0KGUpKX0pKX0sTWU9ZnVuY3Rpb24oZSxuKXtyZXR1cm4gRShlKT9lLnN0eWxlLmdldFByb3BlcnR5VmFsdWUobik6XCJcIn0sTmU9ZnVuY3Rpb24oZSxuLHIsdCl7ZS5kb20ucmVtb3ZlRXZlbnRMaXN0ZW5lcihuLHIsdCl9LEhlPWYsV2U9ZnVuY3Rpb24ocix0KXtyZXR1cm57bGVmdDpyLHRvcDp0LHRyYW5zbGF0ZTpmdW5jdGlvbihlLG4pe3JldHVybiBXZShyK2UsdCtuKX19fSxxZT1XZSxJZT10aW55bWNlLnV0aWwuVG9vbHMucmVzb2x2ZShcInRpbnltY2UuZG9tLkRPTVV0aWxzXCIpLGplPXRpbnltY2UudXRpbC5Ub29scy5yZXNvbHZlKFwidGlueW1jZS5FbnZcIiksQmU9dGlueW1jZS51dGlsLlRvb2xzLnJlc29sdmUoXCJ0aW55bWNlLnV0aWwuRGVsYXlcIiksVmU9XCJkYXRhLWVwaG94LW1vYmlsZS1mdWxsc2NyZWVuLXN0eWxlXCIsWGU9XCJwb3NpdGlvbjphYnNvbHV0ZSFpbXBvcnRhbnQ7XCIsX2U9XCJ0b3A6MCFpbXBvcnRhbnQ7bGVmdDowIWltcG9ydGFudDttYXJnaW46MCFpbXBvcnRhbnQ7cGFkZGluZzowIWltcG9ydGFudDt3aWR0aDoxMDAlIWltcG9ydGFudDtoZWlnaHQ6MTAwJSFpbXBvcnRhbnQ7b3ZlcmZsb3c6dmlzaWJsZSFpbXBvcnRhbnQ7XCIsemU9amUub3MuaXNBbmRyb2lkKCksVWU9SWUuRE9NLCRlPUsoKS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJue2JpbmQ6cyx1bmJpbmQ6c319LGZ1bmN0aW9uKG4pe3ZhciByLHQ9KHI9cChzKSxUKFQoe30scikse29uOmZ1bmN0aW9uKGUpe3JldHVybiByLmdldCgpLmVhY2goZSl9fSkpLG89dygpLGk9dygpLHU9QmUudGhyb3R0bGUoZnVuY3Rpb24oKXtkb2N1bWVudC5ib2R5LnNjcm9sbFRvcD0wLGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3A9MCx3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uKCl7dC5vbihmdW5jdGlvbihlKXtyZXR1cm4geihlLHt0b3A6bi5vZmZzZXRUb3ArXCJweFwiLGxlZnQ6bi5vZmZzZXRMZWZ0K1wicHhcIixoZWlnaHQ6bi5oZWlnaHQrXCJweFwiLHdpZHRoOm4ud2lkdGgrXCJweFwifSl9KX0pfSw1MCk7cmV0dXJue2JpbmQ6ZnVuY3Rpb24oZSl7dC5zZXQoZSksdSgpLG8uc2V0KEcoXCJyZXNpemVcIix1KSksaS5zZXQoRyhcInNjcm9sbFwiLHUpKX0sdW5iaW5kOmZ1bmN0aW9uKCl7dC5vbihmdW5jdGlvbigpe28uY2xlYXIoKSxpLmNsZWFyKCl9KSx0LmNsZWFyKCl9fX0pLEtlPWZ1bmN0aW9uKG8saSl7ZnVuY3Rpb24gdShuKXtuKHcsXCJ0b3gtZnVsbHNjcmVlblwiKSxuKHksXCJ0b3gtZnVsbHNjcmVlblwiKSxuKGIsXCJ0b3gtZnVsbHNjcmVlblwiKSxqKFMpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gQihlKS5kb219KS5lYWNoKGZ1bmN0aW9uKGUpe24oZSxcInRveC1mdWxsc2NyZWVuXCIpLG4oZSxcInRveC1zaGFkb3dob3N0XCIpfSl9ZnVuY3Rpb24gZSgpe3ZhciByLGUsbix0O0YmJihyPW8uZG9tLGU9XCJbXCIrVmUrXCJdXCIsRCgxIT09KG49dD1kb2N1bWVudCkubm9kZVR5cGUmJjkhPT1uLm5vZGVUeXBlJiYxMSE9PW4ubm9kZVR5cGV8fDA9PT1uLmNoaWxkRWxlbWVudENvdW50P1tdOkModC5xdWVyeVNlbGVjdG9yQWxsKGUpLEwuZnJvbURvbSksZnVuY3Rpb24oZSl7dmFyIG49WChlLFZlKTtcIm5vLXN0eWxlc1wiIT09bj96KGUsci5wYXJzZVN0eWxlKG4pKTpfKGUsXCJzdHlsZVwiKSxfKGUsVmUpfSkpLHUoVWUucmVtb3ZlQ2xhc3MpLCRlLnVuYmluZCgpLEEuZnJvbShpLmdldCgpKS5lYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmZ1bGxzY3JlZW5DaGFuZ2VIYW5kbGVyLnVuYmluZCgpfSl9dmFyIG4scix0LGMsYSxzLGwsZixtLGQsaCx2LGcscCx3PWRvY3VtZW50LmJvZHkseT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsYj1vLmdldENvbnRhaW5lcigpLFM9TC5mcm9tRG9tKGIpLHg9aihzPUwuZnJvbURvbShvLmdldEVsZW1lbnQoKSkpLm1hcChCKS5nZXRPclRodW5rKGZ1bmN0aW9uKCl7dmFyIGU9SShzKS5kb20uYm9keTtpZihudWxsPT1lKXRocm93IG5ldyBFcnJvcihcIkJvZHkgaXMgbm90IGF2YWlsYWJsZSB5ZXRcIik7cmV0dXJuIEwuZnJvbURvbShlKX0pLEU9aS5nZXQoKSxPPUwuZnJvbURvbShvLmdldEJvZHkoKSksRj1qZS5kZXZpY2VUeXBlLmlzVG91Y2goKSxUPWIuc3R5bGUsaz1vLmlmcmFtZUVsZW1lbnQuc3R5bGU7RT8oRS5mdWxsc2NyZWVuQ2hhbmdlSGFuZGxlci51bmJpbmQoKSxRKG8pJiZaKHgpJiYoKGM9SSh4KS5kb20pLmV4aXRGdWxsc2NyZWVuP2MuZXhpdEZ1bGxzY3JlZW4oKTpjLm1zRXhpdEZ1bGxzY3JlZW4/Yy5tc0V4aXRGdWxsc2NyZWVuKCk6Yy53ZWJraXRDYW5jZWxGdWxsU2NyZWVuJiZjLndlYmtpdENhbmNlbEZ1bGxTY3JlZW4oKSksay53aWR0aD1FLmlmcmFtZVdpZHRoLGsuaGVpZ2h0PUUuaWZyYW1lSGVpZ2h0LFQud2lkdGg9RS5jb250YWluZXJXaWR0aCxULmhlaWdodD1FLmNvbnRhaW5lckhlaWdodCxULnRvcD1FLmNvbnRhaW5lclRvcCxULmxlZnQ9RS5jb250YWluZXJMZWZ0LGUoKSx0PUUuc2Nyb2xsUG9zLHdpbmRvdy5zY3JvbGxUbyh0LngsdC55KSxpLnNldChudWxsKSxKKG8sITEpLG8ub2ZmKFwicmVtb3ZlXCIsZSkpOihuPSQoSSh4KSx2b2lkIDAhPT1kb2N1bWVudC5mdWxsc2NyZWVuRWxlbWVudD9cImZ1bGxzY3JlZW5jaGFuZ2VcIjp2b2lkIDAhPT1kb2N1bWVudC5tc0Z1bGxzY3JlZW5FbGVtZW50P1wiTVNGdWxsc2NyZWVuQ2hhbmdlXCI6dm9pZCAwIT09ZG9jdW1lbnQud2Via2l0RnVsbHNjcmVlbkVsZW1lbnQ/XCJ3ZWJraXRmdWxsc2NyZWVuY2hhbmdlXCI6XCJmdWxsc2NyZWVuY2hhbmdlXCIsZnVuY3Rpb24oZSl7UShvKSYmKFooeCl8fG51bGw9PT1pLmdldCgpfHxLZShvLGkpKX0pLHI9e3Njcm9sbFBvczoobD13aW5kb3csdj12b2lkIDA9PT1sP3dpbmRvdzpsLGc9di5kb2N1bWVudCxkPShtPXZvaWQgMCE9PShmPUwuZnJvbURvbShnKSk/Zi5kb206ZG9jdW1lbnQpLmJvZHkuc2Nyb2xsTGVmdHx8bS5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdCxoPW0uYm9keS5zY3JvbGxUb3B8fG0uZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCxwPXFlKGQsaCksSyh2KS5mb2xkKGZ1bmN0aW9uKCl7dmFyIGU9di5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsbj1lLmNsaWVudFdpZHRoLHI9ZS5jbGllbnRIZWlnaHQ7cmV0dXJuIFkocC5sZWZ0LHAudG9wLG4scil9LGZ1bmN0aW9uKGUpe3JldHVybiBZKE1hdGgubWF4KGUucGFnZUxlZnQscC5sZWZ0KSxNYXRoLm1heChlLnBhZ2VUb3AscC50b3ApLGUud2lkdGgsZS5oZWlnaHQpfSkpLGNvbnRhaW5lcldpZHRoOlQud2lkdGgsY29udGFpbmVySGVpZ2h0OlQuaGVpZ2h0LGNvbnRhaW5lclRvcDpULnRvcCxjb250YWluZXJMZWZ0OlQubGVmdCxpZnJhbWVXaWR0aDprLndpZHRoLGlmcmFtZUhlaWdodDprLmhlaWdodCxmdWxsc2NyZWVuQ2hhbmdlSGFuZGxlcjpufSxGJiZuZShvLmRvbSxTLE8pLGsud2lkdGg9ay5oZWlnaHQ9XCIxMDAlXCIsVC53aWR0aD1ULmhlaWdodD1cIlwiLHUoVWUuYWRkQ2xhc3MpLCRlLmJpbmQoUyksby5vbihcInJlbW92ZVwiLGUpLGkuc2V0KHIpLFEobykmJigoYT14LmRvbSkucmVxdWVzdEZ1bGxzY3JlZW4/YS5yZXF1ZXN0RnVsbHNjcmVlbigpOmEubXNSZXF1ZXN0RnVsbHNjcmVlbj9hLm1zUmVxdWVzdEZ1bGxzY3JlZW4oKTphLndlYmtpdFJlcXVlc3RGdWxsU2NyZWVuJiZhLndlYmtpdFJlcXVlc3RGdWxsU2NyZWVuKCkpLEoobywhMCkpfTt0LmFkZChcImZ1bGxzY3JlZW5cIixmdW5jdGlvbihlKXt2YXIgbixyLHQsbyxpLHU9YShudWxsKTtyZXR1cm4gZS5pbmxpbmV8fChyPXUsKG49ZSkuYWRkQ29tbWFuZChcIm1jZUZ1bGxTY3JlZW5cIixmdW5jdGlvbigpe0tlKG4scil9KSwodD1lKS51aS5yZWdpc3RyeS5hZGRUb2dnbGVNZW51SXRlbShcImZ1bGxzY3JlZW5cIix7dGV4dDpcIkZ1bGxzY3JlZW5cIixpY29uOlwiZnVsbHNjcmVlblwiLHNob3J0Y3V0OlwiTWV0YStTaGlmdCtGXCIsb25BY3Rpb246YyxvblNldHVwOnJlKHQsbz11KX0pLHQudWkucmVnaXN0cnkuYWRkVG9nZ2xlQnV0dG9uKFwiZnVsbHNjcmVlblwiLHt0b29sdGlwOlwiRnVsbHNjcmVlblwiLGljb246XCJmdWxsc2NyZWVuXCIsb25BY3Rpb246YyxvblNldHVwOnJlKHQsbyl9KSxlLmFkZFNob3J0Y3V0KFwiTWV0YStTaGlmdCtGXCIsXCJcIixcIm1jZUZ1bGxTY3JlZW5cIikpLGk9dSx7aXNGdWxsc2NyZWVuOmZ1bmN0aW9uKCl7cmV0dXJuIG51bGwhPT1pLmdldCgpfX07ZnVuY3Rpb24gYygpe3JldHVybiB0LmV4ZWNDb21tYW5kKFwibWNlRnVsbFNjcmVlblwiKX19KX0oKTsiXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxZQUFVO0VBQUMsWUFBWTs7RUFBQyxTQUFTQSxDQUFDQSxDQUFDQyxDQUFDLEVBQUM7SUFBQyxJQUFJQyxDQUFDLEdBQUNELENBQUM7SUFBQyxPQUFNO01BQUNFLEdBQUcsRUFBQyxTQUFBQSxJQUFBLEVBQVU7UUFBQyxPQUFPRCxDQUFDO01BQUEsQ0FBQztNQUFDRSxHQUFHLEVBQUMsU0FBQUEsSUFBU0gsQ0FBQyxFQUFDO1FBQUNDLENBQUMsR0FBQ0QsQ0FBQztNQUFBO0lBQUMsQ0FBQztFQUFBO0VBQUMsU0FBU0EsQ0FBQ0EsQ0FBQ0ksQ0FBQyxFQUFDO0lBQUMsT0FBTyxVQUFTSixDQUFDLEVBQUM7TUFBQyxPQUFPSyxDQUFDLEdBQUFDLE9BQUEsQ0FBUUwsQ0FBQyxHQUFDRCxDQUFDLENBQUMsRUFBQyxDQUFDLElBQUksS0FBR0MsQ0FBQyxHQUFDLE1BQU0sR0FBQyxRQUFRLElBQUVJLENBQUMsS0FBR0UsS0FBSyxDQUFDQyxTQUFTLENBQUNDLGFBQWEsQ0FBQ1IsQ0FBQyxDQUFDLElBQUVBLENBQUMsQ0FBQ1MsV0FBVyxJQUFFLE9BQU8sS0FBR1QsQ0FBQyxDQUFDUyxXQUFXLENBQUNDLElBQUksQ0FBQyxHQUFDLE9BQU8sR0FBQyxRQUFRLElBQUVOLENBQUMsS0FBR08sTUFBTSxDQUFDSixTQUFTLENBQUNDLGFBQWEsQ0FBQ1IsQ0FBQyxDQUFDLElBQUVB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QyxZQUFZLEVBQUM7TUFBQ0MsT0FBTyxFQUFDLFlBQVk7TUFBQ0wsSUFBSSxFQUFDLFlBQVk7TUFBQ0UsUUFBUSxFQUFDN1MsQ0FBQztNQUFDOFMsT0FBTyxFQUFDL0gsRUFBRSxDQUFDeEwsQ0FBQyxFQUFDa0IsQ0FBQztJQUFDLENBQUMsQ0FBQyxFQUFDdEIsQ0FBQyxDQUFDOFQsV0FBVyxDQUFDLGNBQWMsRUFBQyxFQUFFLEVBQUMsZUFBZSxDQUFDLENBQUMsRUFBQ3RTLENBQUMsR0FBQ0MsQ0FBQyxFQUFDO01BQUNzUyxZQUFZLEVBQUMsU0FBQUEsYUFBQSxFQUFVO1FBQUMsT0FBTyxJQUFJLEtBQUd2UyxDQUFDLENBQUN0QixHQUFHLEVBQUU7TUFBQTtJQUFDLENBQUM7SUFBQyxTQUFTVyxDQUFDQSxDQUFBLEVBQUU7TUFBQyxPQUFPVCxDQUFDLENBQUM0VCxXQUFXLENBQUMsZUFBZSxDQUFDO0lBQUE7RUFBQyxDQUFDLENBQUM7QUFBQSxDQUFDLEVBQUUiLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvcGx1Z2lucy9jdXN0b20vdGlueW1jZS9wbHVnaW5zL2Z1bGxzY3JlZW4vcGx1Z2luLm1pbi5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/fullscreen/plugin.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/plugins/fullscreen/plugin.min.js"]();
/******/ 	
/******/ })()
;
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/autosave/index.js":
/*!********************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/autosave/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("// Exports the \"autosave\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/autosave')\n//   ES2015:\n//     import 'tinymce/plugins/autosave'\n__webpack_require__(/*! ./plugin.js */ \"./resources/assets/core/plugins/custom/tinymce/plugins/autosave/plugin.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvcGx1Z2lucy9jdXN0b20vdGlueW1jZS9wbHVnaW5zL2F1dG9zYXZlL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBQSxtQkFBTyxDQUFDLDhGQUFhLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvcGx1Z2lucy9jdXN0b20vdGlueW1jZS9wbHVnaW5zL2F1dG9zYXZlL2luZGV4LmpzPzFkYTYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRXhwb3J0cyB0aGUgXCJhdXRvc2F2ZVwiIHBsdWdpbiBmb3IgdXNhZ2Ugd2l0aCBtb2R1bGUgbG9hZGVyc1xyXG4vLyBVc2FnZTpcclxuLy8gICBDb21tb25KUzpcclxuLy8gICAgIHJlcXVpcmUoJ3RpbnltY2UvcGx1Z2lucy9hdXRvc2F2ZScpXHJcbi8vICAgRVMyMDE1OlxyXG4vLyAgICAgaW1wb3J0ICd0aW55bWNlL3BsdWdpbnMvYXV0b3NhdmUnXHJcbnJlcXVpcmUoJy4vcGx1Z2luLmpzJyk7Il0sIm5hbWVzIjpbInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/autosave/index.js\n");

/***/ }),

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/autosave/plugin.js":
/*!*********************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/autosave/plugin.js ***!
  \*********************************************************************************/
/***/ (() => {

eval("/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.7 (2022-12-06)\r\n */\n(function () {\n  'use strict';\n\n  var global$4 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n  var eq = function eq(t) {\n    return function (a) {\n      return t === a;\n    };\n  };\n  var isUndefined = eq(undefined);\n  var global$3 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n  var global$2 = tinymce.util.Tools.resolve('tinymce.util.LocalStorage');\n  var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n  var fireRestoreDraft = function fireRestoreDraft(editor) {\n    return editor.fire('RestoreDraft');\n  };\n  var fireStoreDraft = function fireStoreDraft(editor) {\n    return editor.fire('StoreDraft');\n  };\n  var fireRemoveDraft = function fireRemoveDraft(editor) {\n    return editor.fire('RemoveDraft');\n  };\n  var parse = function parse(timeString, defaultTime) {\n    var multiples = {\n      s: 1000,\n      m: 60000\n    };\n    var toParse = timeString || defaultTime;\n    var parsedTime = /^(\\d+)([ms]?)$/.exec('' + toParse);\n    return (parsedTime[2] ? multiples[parsedTime[2]] : 1) * parseInt(toParse, 10);\n  };\n  var shouldAskBeforeUnload = function shouldAskBeforeUnload(editor) {\n    return editor.getParam('autosave_ask_before_unload', true);\n  };\n  var getAutoSavePrefix = function getAutoSavePrefix(editor) {\n    var location = document.location;\n    return editor.getParam('autosave_prefix', 'tinymce-autosave-{path}{query}{hash}-{id}-').replace(/{path}/g, location.pathname).replace(/{query}/g, location.search).replace(/{hash}/g, location.hash).replace(/{id}/g, editor.id);\n  };\n  var shouldRestoreWhenEmpty = function shouldRestoreWhenEmpty(editor) {\n    return editor.getParam('autosave_restore_when_empty', false);\n  };\n  var getAutoSaveInterval = function getAutoSaveInterval(editor) {\n    return parse(editor.getParam('autosave_interval'), '30s');\n  };\n  var getAutoSaveRetention = function getAutoSaveRetention(editor) {\n    return parse(editor.getParam('autosave_retention'), '20m');\n  };\n  var _isEmpty = function isEmpty(editor, html) {\n    if (isUndefined(html)) {\n      return editor.dom.isEmpty(editor.getBody());\n    } else {\n      var trimmedHtml = global$1.trim(html);\n      if (trimmedHtml === '') {\n        return true;\n      } else {\n        var fragment = new DOMParser().parseFromString(trimmedHtml, 'text/html');\n        return editor.dom.isEmpty(fragment);\n      }\n    }\n  };\n  var _hasDraft = function hasDraft(editor) {\n    var time = parseInt(global$2.getItem(getAutoSavePrefix(editor) + 'time'), 10) || 0;\n    if (new Date().getTime() - time > getAutoSaveRetention(editor)) {\n      _removeDraft(editor, false);\n      return false;\n    }\n    return true;\n  };\n  var _removeDraft = function removeDraft(editor, fire) {\n    var prefix = getAutoSavePrefix(editor);\n    global$2.removeItem(prefix + 'draft');\n    global$2.removeItem(prefix + 'time');\n    if (fire !== false) {\n      fireRemoveDraft(editor);\n    }\n  };\n  var _storeDraft = function storeDraft(editor) {\n    var prefix = getAutoSavePrefix(editor);\n    if (!_isEmpty(editor) && editor.isDirty()) {\n      global$2.setItem(prefix + 'draft', editor.getContent({\n        format: 'raw',\n        no_events: true\n      }));\n      global$2.setItem(prefix + 'time', new Date().getTime().toString());\n      fireStoreDraft(editor);\n    }\n  };\n  var _restoreDraft = function restoreDraft(editor) {\n    var prefix = getAutoSavePrefix(editor);\n    if (_hasDraft(editor)) {\n      editor.setContent(global$2.getItem(prefix + 'draft'), {\n        format: 'raw'\n      });\n      fireRestoreDraft(editor);\n    }\n  };\n  var startStoreDraft = function startStoreDraft(editor) {\n    var interval = getAutoSaveInterval(editor);\n    global$3.setEditorInterval(editor, function () {\n      _storeDraft(editor);\n    }, interval);\n  };\n  var restoreLastDraft = function restoreLastDraft(editor) {\n    editor.undoManager.transact(function () {\n      _restoreDraft(editor);\n      _removeDraft(editor);\n    });\n    editor.focus();\n  };\n  var get = function get(editor) {\n    return {\n      hasDraft: function hasDraft() {\n        return _hasDraft(editor);\n      },\n      storeDraft: function storeDraft() {\n        return _storeDraft(editor);\n      },\n      restoreDraft: function restoreDraft() {\n        return _restoreDraft(editor);\n      },\n      removeDraft: function removeDraft(fire) {\n        return _removeDraft(editor, fire);\n      },\n      isEmpty: function isEmpty(html) {\n        return _isEmpty(editor, html);\n      }\n    };\n  };\n  var global = tinymce.util.Tools.resolve('tinymce.EditorManager');\n  var setup = function setup(editor) {\n    editor.editorManager.on('BeforeUnload', function (e) {\n      var msg;\n      global$1.each(global.get(), function (editor) {\n        if (editor.plugins.autosave) {\n          editor.plugins.autosave.storeDraft();\n        }\n        if (!msg && editor.isDirty() && shouldAskBeforeUnload(editor)) {\n          msg = editor.translate('You have unsaved changes are you sure you want to navigate away?');\n        }\n      });\n      if (msg) {\n        e.preventDefault();\n        e.returnValue = msg;\n      }\n    });\n  };\n  var makeSetupHandler = function makeSetupHandler(editor) {\n    return function (api) {\n      api.setDisabled(!_hasDraft(editor));\n      var editorEventCallback = function editorEventCallback() {\n        return api.setDisabled(!_hasDraft(editor));\n      };\n      editor.on('StoreDraft RestoreDraft RemoveDraft', editorEventCallback);\n      return function () {\n        return editor.off('StoreDraft RestoreDraft RemoveDraft', editorEventCallback);\n      };\n    };\n  };\n  var register = function register(editor) {\n    startStoreDraft(editor);\n    editor.ui.registry.addButton('restoredraft', {\n      tooltip: 'Restore last draft',\n      icon: 'restore-draft',\n      onAction: function onAction() {\n        restoreLastDraft(editor);\n      },\n      onSetup: makeSetupHandler(editor)\n    });\n    editor.ui.registry.addMenuItem('restoredraft', {\n      text: 'Restore last draft',\n      icon: 'restore-draft',\n      onAction: function onAction() {\n        restoreLastDraft(editor);\n      },\n      onSetup: makeSetupHandler(editor)\n    });\n  };\n  function Plugin() {\n    global$4.add('autosave', function (editor) {\n      setup(editor);\n      register(editor);\n      editor.on('init', function () {\n        if (shouldRestoreWhenEmpty(editor) && editor.dom.isEmpty(editor.getBody())) {\n          _restoreDraft(editor);\n        }\n      });\n      return get(editor);\n    });\n  }\n  Plugin();\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/autosave/plugin.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/assets/core/plugins/custom/tinymce/plugins/autosave/index.js");
/******/ 	
/******/ })()
;
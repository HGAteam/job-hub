/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/searchreplace/plugin.min.js":
/*!******************************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/searchreplace/plugin.min.js ***!
  \******************************************************************************************/
/***/ (() => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.7 (2022-12-06)\r\n */\n!function () {\n  \"use strict\";\n\n  function g(e) {\n    var t = e;\n    return {\n      get: function get() {\n        return t;\n      },\n      set: function set(e) {\n        t = e;\n      }\n    };\n  }\n  function e(r) {\n    return function (e) {\n      return n = _typeof(t = e), (null === t ? \"null\" : \"object\" == n && (Array.prototype.isPrototypeOf(t) || t.constructor && \"Array\" === t.constructor.name) ? \"array\" : \"object\" == n && (String.prototype.isPrototypeOf(t) || t.constructor && \"String\" === t.constructor.name) ? \"string\" : n) === r;\n      var t, n;\n    };\n  }\n  function t(t) {\n    return function (e) {\n      return _typeof(e) === t;\n    };\n  }\n  function p() {}\n  function i(e) {\n    return function () {\n      return e;\n    };\n  }\n  function n(e) {\n    return e;\n  }\n  function r() {\n    return m;\n  }\n  var o = tinymce.util.Tools.resolve(\"tinymce.PluginManager\"),\n    _v = function v() {\n      return (_v = Object.assign || function (e) {\n        for (var t, n = 1, r = arguments.length; n < r; n++) for (var o in t = arguments[n]) Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);\n        return e;\n      }).apply(this, arguments);\n    },\n    a = e(\"string\"),\n    c = e(\"array\"),\n    u = t(\"boolean\"),\n    l = t(\"number\"),\n    s = i(!1),\n    f = i(!0),\n    d = i(\"[!-#%-*,-\\\\/:;?@\\\\[-\\\\]_{}\\xA1\\xAB\\xB7\\xBB\\xBF;\\xB7\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1361-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u3008\\u3009\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30\\u2E31\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]\"),\n    m = {\n      fold: function fold(e, t) {\n        return e();\n      },\n      isSome: s,\n      isNone: f,\n      getOr: n,\n      getOrThunk: h,\n      getOrDie: function getOrDie(e) {\n        throw new Error(e || \"error: getOrDie called on none.\");\n      },\n      getOrNull: i(null),\n      getOrUndefined: i(void 0),\n      or: n,\n      orThunk: h,\n      map: r,\n      each: p,\n      bind: r,\n      exists: s,\n      forall: f,\n      filter: function filter() {\n        return m;\n      },\n      toArray: function toArray() {\n        return [];\n      },\n      toString: i(\"none()\")\n    };\n  function h(e) {\n    return e();\n  }\n  function y(e, t) {\n    for (var n = e.length, r = new Array(n), o = 0; o < n; o++) {\n      var i = e[o];\n      r[o] = t(i, o);\n    }\n    return r;\n  }\n  function x(e, t) {\n    for (var n = 0, r = e.length; n < r; n++) t(e[n], n);\n  }\n  function b(e, t) {\n    for (var n = e.length - 1; 0 <= n; n--) t(e[n], n);\n  }\n  function w(e, t) {\n    return function (e) {\n      for (var t = [], n = 0, r = e.length; n < r; ++n) {\n        if (!c(e[n])) throw new Error(\"Arr.flatten item \" + n + \" was not an array, input: \" + e);\n        A.apply(t, e[n]);\n      }\n      return t;\n    }(y(e, t));\n  }\n  function O(e, t) {\n    return D.call(e, t);\n  }\n  var C = function C(n) {\n      function e() {\n        return o;\n      }\n      function t(e) {\n        return e(n);\n      }\n      var r = i(n),\n        o = {\n          fold: function fold(e, t) {\n            return t(n);\n          },\n          isSome: f,\n          isNone: s,\n          getOr: r,\n          getOrThunk: r,\n          getOrDie: r,\n          getOrNull: r,\n          getOrUndefined: r,\n          or: e,\n          orThunk: e,\n          map: function map(e) {\n            return C(e(n));\n          },\n          each: function each(e) {\n            e(n);\n          },\n          bind: t,\n          exists: t,\n          forall: t,\n          filter: function filter(e) {\n            return e(n) ? o : m;\n          },\n          toArray: function toArray() {\n            return [n];\n          },\n          toString: function toString() {\n            return \"some(\" + n + \")\";\n          }\n        };\n      return o;\n    },\n    T = {\n      some: C,\n      none: r,\n      from: function from(e) {\n        return null == e ? m : C(e);\n      }\n    },\n    E = d,\n    N = tinymce.util.Tools.resolve(\"tinymce.Env\"),\n    k = tinymce.util.Tools.resolve(\"tinymce.util.Tools\"),\n    S = Array.prototype.slice,\n    A = Array.prototype.push,\n    D = Object.hasOwnProperty;\n  function M(e, t, n) {\n    !function (e, t, n) {\n      if (!(a(n) || u(n) || l(n))) throw console.error(\"Invalid call to Attribute.set. Key \", t, \":: Value \", n, \":: Element \", e), new Error(\"Attribute value was not simple\");\n      e.setAttribute(t, n + \"\");\n    }(e.dom, t, n);\n  }\n  function B(e, t) {\n    return {\n      element: e,\n      offset: t\n    };\n  }\n  function F(e, t) {\n    var n, r;\n    n = e, r = t, T.from(n.dom.parentNode).map(fe.fromDom).each(function (e) {\n      e.dom.insertBefore(r.dom, n.dom);\n    }), t.dom.appendChild(e.dom);\n  }\n  function I(e) {\n    return de.get(e);\n  }\n  function P(e, t) {\n    return e.isBlock(t) || O(e.schema.getShortEndedElements(), t.nodeName);\n  }\n  function R(e, t) {\n    return \"false\" === e.getContentEditable(t);\n  }\n  function W(e, t) {\n    return !e.isBlock(t) && O(e.schema.getWhiteSpaceElements(), t.nodeName);\n  }\n  function j() {\n    return {\n      sOffset: 0,\n      fOffset: 0,\n      elements: []\n    };\n  }\n  function V(e, t) {\n    return n = fe.fromDom(e), r = t, 0 < (o = y(n.dom.childNodes, fe.fromDom)).length && r < o.length ? B(o[r], 0) : B(n, r);\n    var n, r, o;\n  }\n  function H(e, t, n, r, o, i) {\n    for (var a = (i = void 0 === i || i) ? t(!1) : n; a;) {\n      var c = R(e, a);\n      if (c || W(e, a)) {\n        if (c ? r.cef(a) : r.boundary(a)) break;\n        a = t(!0);\n      } else {\n        if (P(e, a)) {\n          if (r.boundary(a)) break;\n        } else 3 === a.nodeType && r.text(a);\n        if (a === o) break;\n        a = t(!1);\n      }\n    }\n  }\n  function L(e, t, n, r, o) {\n    var i, a, c, u, l, s;\n    P(i = e, a = n) || R(i, a) || W(i, a) || \"true\" === (c = i).getContentEditable(u = a) && \"false\" === c.getContentEditableParent(u.parentNode) || (l = e.getParent(r, e.isBlock), s = new me(n, l), H(e, (o ? s.next : s.prev).bind(s), n, {\n      boundary: f,\n      cef: f,\n      text: function text(e) {\n        o ? t.fOffset += e.length : t.sOffset += e.length, t.elements.push(fe.fromDom(e));\n      }\n    }));\n  }\n  function U(e, t, n, r, o, i) {\n    void 0 === i && (i = !0);\n    var a = new me(n, t),\n      c = [],\n      u = j();\n    function l() {\n      return 0 < u.elements.length && (c.push(u), u = j()), !1;\n    }\n    return L(e, u, n, t, !1), H(e, a.next.bind(a), n, {\n      boundary: l,\n      cef: function cef(e) {\n        return l(), o && c.push.apply(c, o.cef(e)), !1;\n      },\n      text: function text(e) {\n        u.elements.push(fe.fromDom(e)), o && o.text(e, u);\n      }\n    }, r, i), r && L(e, u, r, t, !0), l(), c;\n  }\n  function $(u, e) {\n    var n = V(e.startContainer, e.startOffset),\n      r = n.element.dom,\n      o = V(e.endContainer, e.endOffset),\n      i = o.element.dom;\n    return U(u, e.commonAncestorContainer, r, i, {\n      text: function text(e, t) {\n        e === i ? t.fOffset += e.length - o.offset : e === r && (t.sOffset += n.offset);\n      },\n      cef: function cef(e) {\n        var t,\n          n,\n          r,\n          o,\n          i,\n          a = w((n = fe.fromDom(e), r = \"*[contenteditable=true]\", 1 !== (o = i = void 0 === n ? document : n.dom).nodeType && 9 !== o.nodeType && 11 !== o.nodeType || 0 === o.childElementCount ? [] : y(i.querySelectorAll(r), fe.fromDom)), function (e) {\n            var t = e.dom;\n            return U(u, t, t);\n          }),\n          c = function c(e, t) {\n            return n = e.elements[0].dom, r = t.elements[0].dom, o = Node.DOCUMENT_POSITION_PRECEDING, 0 != (n.compareDocumentPosition(r) & o) ? 1 : -1;\n            var n, r, o;\n          };\n        return (t = S.call(a, 0)).sort(c), t;\n      }\n    }, !1);\n  }\n  function _(e, t) {\n    return t.collapsed ? [] : $(e, t);\n  }\n  function z(e, t) {\n    var n = e.createRng();\n    return n.selectNode(t), _(e, n);\n  }\n  function q(c, e) {\n    return w(e, function (e) {\n      var a,\n        n,\n        r,\n        t = e.elements,\n        o = y(t, I).join(\"\"),\n        i = function (e, t, n, r) {\n          void 0 === r && (r = e.length);\n          var o = t.regex;\n          o.lastIndex = n = void 0 === n ? 0 : n;\n          for (var i, a = []; i = o.exec(e);) {\n            var c = i[t.matchIndex],\n              u = i.index + i[0].indexOf(c),\n              l = u + c.length;\n            if (r < l) break;\n            a.push({\n              start: u,\n              finish: l\n            }), o.lastIndex = l;\n          }\n          return a;\n        }(o, c, e.sOffset, o.length - e.fOffset);\n      return a = i, function (e, t) {\n        if (0 === e.length) return [];\n        for (var n = t(e[0]), r = [], o = [], i = 0, a = e.length; i < a; i++) {\n          var c = e[i],\n            u = t(c);\n          u !== n && (r.push(o), o = []), n = u, o.push(c);\n        }\n        return 0 !== o.length && r.push(o), r;\n      }((n = function n(e, _n) {\n        var t = I(_n),\n          r = e.last,\n          o = r + t.length,\n          i = w(a, function (e, t) {\n            return e.start < o && e.finish > r ? [{\n              element: _n,\n              start: Math.max(r, e.start) - r,\n              finish: Math.min(o, e.finish) - r,\n              matchId: t\n            }] : [];\n          });\n        return {\n          results: e.results.concat(i),\n          last: o\n        };\n      }, r = {\n        results: [],\n        last: 0\n      }, x(t, function (e, t) {\n        r = n(r, e);\n      }), r.results), function (e) {\n        return e.matchId;\n      });\n    });\n  }\n  function G(e, i) {\n    b(e, function (e, o) {\n      b(e, function (e) {\n        var t = fe.fromDom(i.cloneNode(!1));\n        M(t, \"data-mce-index\", o);\n        var n,\n          r = e.element.dom;\n        r.length === e.finish && 0 === e.start ? F(e.element, t) : (r.length !== e.finish && r.splitText(e.finish), n = r.splitText(e.start), F(fe.fromDom(n), t));\n      });\n    });\n  }\n  function K(e) {\n    var t = e.getAttribute(\"data-mce-index\");\n    return \"number\" == typeof t ? \"\" + t : t;\n  }\n  function J(e, t, n, r) {\n    var o = e.dom.create(\"span\", {\n      \"data-mce-bogus\": 1\n    });\n    o.className = \"mce-match-marker\";\n    var i,\n      a,\n      c,\n      u,\n      l,\n      s,\n      f,\n      d,\n      m,\n      h,\n      g = e.getBody();\n    return he(e, t, !1), r ? (c = e.dom, u = n, l = e.selection, s = o, d = l.getBookmark(), m = c.select(\"td[data-mce-selected],th[data-mce-selected]\"), G(h = q(u, 0 < m.length ? (f = c, w(m, function (e) {\n      return z(f, e);\n    })) : _(c, l.getRng())), s), l.moveToBookmark(d), h.length) : (i = o, G(a = q(n, z(e.dom, g)), i), a.length);\n  }\n  function Q(e) {\n    var t = e.parentNode;\n    e.firstChild && t.insertBefore(e.firstChild, e), e.parentNode.removeChild(e);\n  }\n  function X(e, t) {\n    var n = [],\n      r = k.toArray(e.getBody().getElementsByTagName(\"span\"));\n    if (r.length) for (var o = 0; o < r.length; o++) {\n      var i = K(r[o]);\n      null !== i && i.length && i === t.toString() && n.push(r[o]);\n    }\n    return n;\n  }\n  function Y(e, t, n) {\n    var r = t.get(),\n      o = r.index,\n      i = e.dom;\n    (n = !1 !== n) ? o + 1 === r.count ? o = 0 : o++ : o - 1 == -1 ? o = r.count - 1 : o--, i.removeClass(X(e, r.index), \"mce-match-marker-selected\");\n    var a = X(e, o);\n    return a.length ? (i.addClass(X(e, o), \"mce-match-marker-selected\"), e.selection.scrollIntoView(a[0]), o) : -1;\n  }\n  function Z(e, t) {\n    var n = t.parentNode;\n    e.remove(t), e.isEmpty(n) && e.remove(n);\n  }\n  function ee(e, t, n, r, o, i) {\n    var a,\n      c,\n      u,\n      l = e.selection,\n      s = (a = o, c = \"(\" + n.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\").replace(/\\s/g, \"[^\\\\S\\\\r\\\\n\\\\uFEFF]\") + \")\", a ? \"(?:^|\\\\s|\" + E() + \")\" + c + \"(?=$|\\\\s|\" + E() + \")\" : c),\n      f = l.isForward(),\n      d = J(e, t, {\n        regex: new RegExp(s, r ? \"g\" : \"gi\"),\n        matchIndex: 1\n      }, i);\n    return N.browser.isSafari() && l.setRng(l.getRng(), f), d && (u = Y(e, t, !0), t.set({\n      index: u,\n      count: d,\n      text: n,\n      matchCase: r,\n      wholeWord: o,\n      inSelection: i\n    })), d;\n  }\n  function te(e, t) {\n    var n = Y(e, t, !0);\n    t.set(_v(_v({}, t.get()), {\n      index: n\n    }));\n  }\n  function ne(e, t) {\n    var n = Y(e, t, !1);\n    t.set(_v(_v({}, t.get()), {\n      index: n\n    }));\n  }\n  function re(e) {\n    var t = K(e);\n    return null !== t && 0 < t.length;\n  }\n  function oe(e, t, n, r, o) {\n    var i,\n      a = t.get(),\n      c = a.index,\n      u = c;\n    r = !1 !== r;\n    for (var l = e.getBody(), s = k.grep(k.toArray(l.getElementsByTagName(\"span\")), re), f = 0; f < s.length; f++) {\n      var d = K(s[f]),\n        m = i = parseInt(d, 10);\n      if (o || m === a.index) {\n        for (n.length ? (s[f].firstChild.nodeValue = n, Q(s[f])) : Z(e.dom, s[f]); s[++f];) {\n          if ((m = parseInt(K(s[f]), 10)) !== i) {\n            f--;\n            break;\n          }\n          Z(e.dom, s[f]);\n        }\n        r && u--;\n      } else c < i && s[f].setAttribute(\"data-mce-index\", String(i - 1));\n    }\n    return t.set(_v(_v({}, a), {\n      count: o ? 0 : a.count - 1,\n      index: u\n    })), (r ? te : ne)(e, t), !o && 0 < t.get().count;\n  }\n  function ie(i, a) {\n    var e,\n      t,\n      n,\n      r = (e = p, t = g(T.none()), _v(_v({}, n = {\n        clear: function clear() {\n          o(), t.set(T.none());\n        },\n        isSet: function isSet() {\n          return t.get().isSome();\n        },\n        get: function get() {\n          return t.get();\n        },\n        set: function set(e) {\n          o(), t.set(T.some(e));\n        }\n      }), {\n        on: function on(e) {\n          return n.get().each(e);\n        }\n      }));\n    function o() {\n      return t.get().each(e);\n    }\n    function c(e) {\n      (1 < a.get().count ? e.enable : e.disable)(\"next\"), (1 < a.get().count ? e.enable : e.disable)(\"prev\");\n    }\n    function u(e, t) {\n      x([\"replace\", \"replaceall\", \"prev\", \"next\"], t ? e.disable : e.enable);\n    }\n    function l(e, t) {\n      N.browser.isSafari() && N.deviceType.isTouch() && (\"find\" === t || \"replace\" === t || \"replaceall\" === t) && e.focus(t);\n    }\n    function s(e) {\n      he(i, a, !1), u(e, !0), c(e);\n    }\n    function f(e) {\n      var t,\n        n,\n        r = e.getData(),\n        o = a.get();\n      r.findtext.length ? (o.text === r.findtext && o.matchCase === r.matchcase && o.wholeWord === r.wholewords ? te(i, a) : ((t = ee(i, a, r.findtext, r.matchcase, r.wholewords, r.inselection)) <= 0 && (n = e, i.windowManager.alert(\"Could not find the specified string.\", function () {\n        n.focus(\"findtext\");\n      })), u(e, 0 === t)), c(e)) : s(e);\n    }\n    i.undoManager.add();\n    var d = k.trim(i.selection.getContent({\n        format: \"text\"\n      })),\n      m = a.get(),\n      h = {\n        title: \"Find and Replace\",\n        size: \"normal\",\n        body: {\n          type: \"panel\",\n          items: [{\n            type: \"bar\",\n            items: [{\n              type: \"input\",\n              name: \"findtext\",\n              placeholder: \"Find\",\n              maximized: !0,\n              inputMode: \"search\"\n            }, {\n              type: \"button\",\n              name: \"prev\",\n              text: \"Previous\",\n              icon: \"action-prev\",\n              disabled: !0,\n              borderless: !0\n            }, {\n              type: \"button\",\n              name: \"next\",\n              text: \"Next\",\n              icon: \"action-next\",\n              disabled: !0,\n              borderless: !0\n            }]\n          }, {\n            type: \"input\",\n            name: \"replacetext\",\n            placeholder: \"Replace with\",\n            inputMode: \"search\"\n          }]\n        },\n        buttons: [{\n          type: \"menu\",\n          name: \"options\",\n          icon: \"preferences\",\n          tooltip: \"Preferences\",\n          align: \"start\",\n          items: [{\n            type: \"togglemenuitem\",\n            name: \"matchcase\",\n            text: \"Match case\"\n          }, {\n            type: \"togglemenuitem\",\n            name: \"wholewords\",\n            text: \"Find whole words only\"\n          }, {\n            type: \"togglemenuitem\",\n            name: \"inselection\",\n            text: \"Find in selection\"\n          }]\n        }, {\n          type: \"custom\",\n          name: \"find\",\n          text: \"Find\",\n          primary: !0\n        }, {\n          type: \"custom\",\n          name: \"replace\",\n          text: \"Replace\",\n          disabled: !0\n        }, {\n          type: \"custom\",\n          name: \"replaceall\",\n          text: \"Replace all\",\n          disabled: !0\n        }],\n        initialData: {\n          findtext: d,\n          replacetext: \"\",\n          wholewords: m.wholeWord,\n          matchcase: m.matchCase,\n          inselection: m.inSelection\n        },\n        onChange: function onChange(e, t) {\n          \"findtext\" === t.name && 0 < a.get().count && s(e);\n        },\n        onAction: function onAction(e, t) {\n          var n,\n            r,\n            o = e.getData();\n          switch (t.name) {\n            case \"find\":\n              f(e);\n              break;\n            case \"replace\":\n              (oe(i, a, o.replacetext) ? c : s)(e);\n              break;\n            case \"replaceall\":\n              oe(i, a, o.replacetext, !0, !0), s(e);\n              break;\n            case \"prev\":\n              ne(i, a), c(e);\n              break;\n            case \"next\":\n              te(i, a), c(e);\n              break;\n            case \"matchcase\":\n            case \"wholewords\":\n            case \"inselection\":\n              n = e.getData(), r = a.get(), a.set(_v(_v({}, r), {\n                matchCase: n.matchcase,\n                wholeWord: n.wholewords,\n                inSelection: n.inselection\n              })), s(e);\n          }\n          l(e, t.name);\n        },\n        onSubmit: function onSubmit(e) {\n          f(e), l(e, \"find\");\n        },\n        onClose: function onClose() {\n          i.focus(), he(i, a), i.undoManager.add();\n        }\n      };\n    r.set(i.windowManager.open(h, {\n      inline: \"toolbar\"\n    }));\n  }\n  function ae(e, t) {\n    return function () {\n      ie(e, t);\n    };\n  }\n  \"undefined\" != typeof window || Function(\"return this;\")();\n  function ce(e) {\n    return 3 === e.dom.nodeType;\n  }\n  function ue(e) {\n    if (null == e) throw new Error(\"Node cannot be null or undefined\");\n    return {\n      dom: e\n    };\n  }\n  var le,\n    se,\n    fe = {\n      fromHtml: function fromHtml(e, t) {\n        var n = (t || document).createElement(\"div\");\n        if (n.innerHTML = e, !n.hasChildNodes() || 1 < n.childNodes.length) throw console.error(\"HTML does not have a single root node\", e), new Error(\"HTML must have a single root node\");\n        return ue(n.childNodes[0]);\n      },\n      fromTag: function fromTag(e, t) {\n        var n = (t || document).createElement(e);\n        return ue(n);\n      },\n      fromText: function fromText(e, t) {\n        var n = (t || document).createTextNode(e);\n        return ue(n);\n      },\n      fromDom: ue,\n      fromPoint: function fromPoint(e, t, n) {\n        return T.from(e.dom.elementFromPoint(t, n)).map(ue);\n      }\n    },\n    de = (le = ce, {\n      get: function get(e) {\n        if (!le(e)) throw new Error(\"Can only get text value of a text node\");\n        return se(e).getOr(\"\");\n      },\n      getOption: se = function se(e) {\n        return le(e) ? T.from(e.dom.nodeValue) : T.none();\n      },\n      set: function set(e, t) {\n        if (!le(e)) throw new Error(\"Can only set raw text value of a text node\");\n        e.dom.nodeValue = t;\n      }\n    }),\n    me = tinymce.util.Tools.resolve(\"tinymce.dom.TreeWalker\"),\n    he = function he(e, t, n) {\n      for (var r, o, i = t.get(), a = k.toArray(e.getBody().getElementsByTagName(\"span\")), c = 0; c < a.length; c++) {\n        var u = K(a[c]);\n        null !== u && u.length && (u === i.index.toString() && (r = r || a[c].firstChild, o = a[c].firstChild), Q(a[c]));\n      }\n      if (t.set(_v(_v({}, i), {\n        index: -1,\n        count: 0,\n        text: \"\"\n      })), r && o) {\n        var l = e.dom.createRng();\n        return l.setStart(r, 0), l.setEnd(o, o.data.length), !1 !== n && e.selection.setRng(l), l;\n      }\n    };\n  o.add(\"searchreplace\", function (e) {\n    var t,\n      n,\n      r,\n      o,\n      i,\n      a = g({\n        index: -1,\n        count: 0,\n        text: \"\",\n        matchCase: !1,\n        wholeWord: !1,\n        inSelection: !1\n      }),\n      c = a;\n    return (t = e).addCommand(\"SearchReplace\", function () {\n      ie(t, c);\n    }), (n = e).ui.registry.addMenuItem(\"searchreplace\", {\n      text: \"Find and replace...\",\n      shortcut: \"Meta+F\",\n      onAction: ae(n, r = a),\n      icon: \"search\"\n    }), n.ui.registry.addButton(\"searchreplace\", {\n      tooltip: \"Find and replace\",\n      onAction: ae(n, r),\n      icon: \"search\"\n    }), n.shortcuts.add(\"Meta+F\", \"\", ae(n, r)), o = e, i = a, {\n      done: function done(e) {\n        return he(o, i, e);\n      },\n      find: function find(e, t, n, r) {\n        return ee(o, i, e, t, n, r = void 0 !== r && r);\n      },\n      next: function next() {\n        return te(o, i);\n      },\n      prev: function prev() {\n        return ne(o, i);\n      },\n      replace: function replace(e, t, n) {\n        return oe(o, i, e, t, n);\n      }\n    };\n  });\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/searchreplace/plugin.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/plugins/searchreplace/plugin.min.js"]();
/******/ 	
/******/ })()
;
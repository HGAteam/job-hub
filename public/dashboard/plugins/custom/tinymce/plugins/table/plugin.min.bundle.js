/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/table/plugin.min.js":
/*!**********************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/table/plugin.min.js ***!
  \**********************************************************************************/
/***/ (() => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.7 (2022-12-06)\r\n */\n!function () {\n  \"use strict\";\n\n  function e(r) {\n    return function (e) {\n      return t = _typeof(n = e), (null === n ? \"null\" : \"object\" == t && (Array.prototype.isPrototypeOf(n) || n.constructor && \"Array\" === n.constructor.name) ? \"array\" : \"object\" == t && (String.prototype.isPrototypeOf(n) || n.constructor && \"String\" === n.constructor.name) ? \"string\" : t) === r;\n      var n, t;\n    };\n  }\n  function n(n) {\n    return function (e) {\n      return _typeof(e) === n;\n    };\n  }\n  function t(n) {\n    return function (e) {\n      return n === e;\n    };\n  }\n  function l(e) {\n    return !(null == e);\n  }\n  function E() {}\n  function C(e) {\n    return function () {\n      return e;\n    };\n  }\n  function S(e) {\n    return e;\n  }\n  function r(e, n) {\n    return e === n;\n  }\n  var T = e(\"string\"),\n    g = e(\"object\"),\n    a = e(\"array\"),\n    h = t(null),\n    o = n(\"boolean\"),\n    u = t(void 0),\n    c = n(\"function\"),\n    f = n(\"number\");\n  function P(r) {\n    for (var o = [], e = 1; e < arguments.length; e++) o[e - 1] = arguments[e];\n    return function () {\n      for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];\n      var t = o.concat(e);\n      return r.apply(null, t);\n    };\n  }\n  function p(n) {\n    return function (e) {\n      return !n(e);\n    };\n  }\n  function i() {\n    return s;\n  }\n  var v = C(!1),\n    x = C(!0),\n    s = {\n      fold: function fold(e, n) {\n        return e();\n      },\n      isSome: v,\n      isNone: x,\n      getOr: S,\n      getOrThunk: m,\n      getOrDie: function getOrDie(e) {\n        throw new Error(e || \"error: getOrDie called on none.\");\n      },\n      getOrNull: C(null),\n      getOrUndefined: C(void 0),\n      or: S,\n      orThunk: m,\n      map: i,\n      each: E,\n      bind: i,\n      exists: v,\n      forall: x,\n      filter: function filter() {\n        return s;\n      },\n      toArray: function toArray() {\n        return [];\n      },\n      toString: C(\"none()\")\n    };\n  function m(e) {\n    return e();\n  }\n  function y(e, n) {\n    return -1 < G.call(e, n);\n  }\n  function R(e, n) {\n    for (var t = 0, r = e.length; t < r; t++) if (n(e[t], t)) return !0;\n    return !1;\n  }\n  function D(e, n) {\n    for (var t = [], r = 0; r < e; r++) t.push(n(r));\n    return t;\n  }\n  function O(e, n) {\n    for (var t = e.length, r = new Array(t), o = 0; o < t; o++) {\n      var u = e[o];\n      r[o] = n(u, o);\n    }\n    return r;\n  }\n  function A(e, n) {\n    for (var t = 0, r = e.length; t < r; t++) n(e[t], t);\n  }\n  function d(e, n) {\n    for (var t = [], r = [], o = 0, u = e.length; o < u; o++) {\n      var i = e[o];\n      (n(i, o) ? t : r).push(i);\n    }\n    return {\n      pass: t,\n      fail: r\n    };\n  }\n  function k(e, n) {\n    for (var t = [], r = 0, o = e.length; r < o; r++) {\n      var u = e[r];\n      n(u, r) && t.push(u);\n    }\n    return t;\n  }\n  function I(e, r, o) {\n    return function (e) {\n      for (var n, t = e.length - 1; 0 <= t; t--) n = e[t], o = r(o, n, t);\n    }(e), o;\n  }\n  function B(e, t, r) {\n    return A(e, function (e, n) {\n      r = t(r, e, n);\n    }), r;\n  }\n  function w(e, n) {\n    return function (e, n, t) {\n      for (var r = 0, o = e.length; r < o; r++) {\n        var u = e[r];\n        if (n(u, r)) return q.some(u);\n        if (t(u, r)) break;\n      }\n      return q.none();\n    }(e, n, v);\n  }\n  function b(e, n) {\n    for (var t = 0, r = e.length; t < r; t++) if (n(e[t], t)) return q.some(t);\n    return q.none();\n  }\n  function M(e) {\n    for (var n = [], t = 0, r = e.length; t < r; ++t) {\n      if (!a(e[t])) throw new Error(\"Arr.flatten item \" + t + \" was not an array, input: \" + e);\n      $.apply(n, e[t]);\n    }\n    return n;\n  }\n  function N(e, n) {\n    return M(O(e, n));\n  }\n  function z(e, n) {\n    for (var t = 0, r = e.length; t < r; ++t) if (!0 !== n(e[t], t)) return !1;\n    return !0;\n  }\n  function L(e, n) {\n    for (var t = {}, r = 0, o = e.length; r < o; r++) {\n      var u = e[r];\n      t[String(u)] = n(u, r);\n    }\n    return t;\n  }\n  function _(e) {\n    return [e];\n  }\n  function W(e, n) {\n    return 0 <= n && n < e.length ? q.some(e[n]) : q.none();\n  }\n  function j(e) {\n    return W(e, 0);\n  }\n  function F(e) {\n    return W(e, e.length - 1);\n  }\n  function H(e, n) {\n    for (var t = 0; t < e.length; t++) {\n      var r = n(e[t], t);\n      if (r.isSome()) return r;\n    }\n    return q.none();\n  }\n  var V = function V(t) {\n      function e() {\n        return o;\n      }\n      function n(e) {\n        return e(t);\n      }\n      var r = C(t),\n        o = {\n          fold: function fold(e, n) {\n            return n(t);\n          },\n          isSome: x,\n          isNone: v,\n          getOr: r,\n          getOrThunk: r,\n          getOrDie: r,\n          getOrNull: r,\n          getOrUndefined: r,\n          or: e,\n          orThunk: e,\n          map: function map(e) {\n            return V(e(t));\n          },\n          each: function each(e) {\n            e(t);\n          },\n          bind: n,\n          exists: n,\n          forall: n,\n          filter: function filter(e) {\n            return e(t) ? o : s;\n          },\n          toArray: function toArray() {\n            return [t];\n          },\n          toString: function toString() {\n            return \"some(\" + t + \")\";\n          }\n        };\n      return o;\n    },\n    q = {\n      some: V,\n      none: i,\n      from: function from(e) {\n        return null == e ? s : V(e);\n      }\n    },\n    U = Array.prototype.slice,\n    G = Array.prototype.indexOf,\n    $ = Array.prototype.push,\n    _K = function K() {\n      return (_K = Object.assign || function (e) {\n        for (var n, t = 1, r = arguments.length; t < r; t++) for (var o in n = arguments[t]) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o]);\n        return e;\n      }).apply(this, arguments);\n    };\n  function X(e, n, t) {\n    if (t || 2 === arguments.length) for (var r, o = 0, u = n.length; o < u; o++) !r && o in n || ((r = r || Array.prototype.slice.call(n, 0, o))[o] = n[o]);\n    return e.concat(r || Array.prototype.slice.call(n));\n  }\n  function Y(t) {\n    var r,\n      o = !1;\n    return function () {\n      for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];\n      return o || (o = !0, r = t.apply(null, e)), r;\n    };\n  }\n  function J(e, n) {\n    var t = String(n).toLowerCase();\n    return w(e, function (e) {\n      return e.search(t);\n    });\n  }\n  function Q(e, n, t) {\n    return \"\" === n || e.length >= n.length && e.substr(t, t + n.length) === n;\n  }\n  function Z(e, n) {\n    return -1 !== e.indexOf(n);\n  }\n  function ee(e, n) {\n    return Q(e, n, e.length - n.length);\n  }\n  function ne(e) {\n    return 0 < e.length;\n  }\n  function te(n) {\n    return function (e) {\n      return Z(e, n);\n    };\n  }\n  function re(e) {\n    return window.matchMedia(e).matches;\n  }\n  function oe(e, n) {\n    var t = e.dom;\n    if (1 !== t.nodeType) return !1;\n    var r = t;\n    if (void 0 !== r.matches) return r.matches(n);\n    if (void 0 !== r.msMatchesSelector) return r.msMatchesSelector(n);\n    if (void 0 !== r.webkitMatchesSelector) return r.webkitMatchesSelector(n);\n    if (void 0 !== r.mozMatchesSelector) return r.mozMatchesSelector(n);\n    throw new Error(\"Browser lacks native selectors\");\n  }\n  function ue(e) {\n    return 1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType || 0 === e.childElementCount;\n  }\n  function ie(e, n) {\n    var t = void 0 === n ? document : n.dom;\n    return ue(t) ? q.none() : q.from(t.querySelector(e)).map(Ve.fromDom);\n  }\n  function ce(e, n) {\n    return e.dom === n.dom;\n  }\n  function le(e, n) {\n    return He().browser.isIE() ? (t = e.dom, r = n.dom, o = Node.DOCUMENT_POSITION_CONTAINED_BY, 0 != (t.compareDocumentPosition(r) & o)) : (u = e.dom) !== (i = n.dom) && u.contains(i);\n    var t, r, o, u, i;\n  }\n  function ae(e, n) {\n    for (var t = Ue(e), r = 0, o = t.length; r < o; r++) {\n      var u = t[r];\n      n(e[u], u);\n    }\n  }\n  function fe(e, t) {\n    return $e(e, function (e, n) {\n      return {\n        k: n,\n        v: t(e, n)\n      };\n    });\n  }\n  function se(e, n) {\n    var t = {},\n      r = n,\n      o = t,\n      u = function u(e, n) {\n        o[n] = e;\n      },\n      i = E;\n    return ae(e, function (e, n) {\n      (r(e, n) ? u : i)(e, n);\n    }), t;\n  }\n  function me(e, t) {\n    var r = [];\n    return ae(e, function (e, n) {\n      r.push(t(e, n));\n    }), r;\n  }\n  function de(e) {\n    return me(e, S);\n  }\n  function ge(e) {\n    return Ue(e).length;\n  }\n  function pe(e, n) {\n    return Ke(e, n) ? q.from(e[n]) : q.none();\n  }\n  function be(e, n) {\n    return Ke(e, n) && void 0 !== e[n] && null !== e[n];\n  }\n  function he(e, n, t) {\n    return {\n      element: e,\n      rowspan: n,\n      colspan: t\n    };\n  }\n  function ve(e, n, t) {\n    return {\n      element: e,\n      cells: n,\n      section: t\n    };\n  }\n  function we(e, n, t) {\n    return {\n      element: e,\n      isNew: n,\n      isLocked: t\n    };\n  }\n  function ye(e, n, t, r) {\n    return {\n      element: e,\n      cells: n,\n      section: t,\n      isNew: r\n    };\n  }\n  function Ce() {\n    return De(0, 0);\n  }\n  function Se(e) {\n    function n(e) {\n      return function () {\n        return t === e;\n      };\n    }\n    var t = e.current,\n      r = e.version;\n    return {\n      current: t,\n      version: r,\n      isEdge: n(\"Edge\"),\n      isChrome: n(\"Chrome\"),\n      isIE: n(\"IE\"),\n      isOpera: n(\"Opera\"),\n      isFirefox: n(Me),\n      isSafari: n(\"Safari\")\n    };\n  }\n  function Te(e) {\n    function n(e) {\n      return function () {\n        return t === e;\n      };\n    }\n    var t = e.current,\n      r = e.version;\n    return {\n      current: t,\n      version: r,\n      isWindows: n(Ne),\n      isiOS: n(\"iOS\"),\n      isAndroid: n(ze),\n      isOSX: n(\"OSX\"),\n      isLinux: n(\"Linux\"),\n      isSolaris: n(Le),\n      isFreeBSD: n(_e),\n      isChromeOS: n(We)\n    };\n  }\n  function xe(e) {\n    if (null == e) throw new Error(\"Node cannot be null or undefined\");\n    return {\n      dom: e\n    };\n  }\n  var Re,\n    De = function De(e, n) {\n      return {\n        major: e,\n        minor: n\n      };\n    },\n    Oe = {\n      nu: De,\n      detect: function detect(e, n) {\n        var t,\n          r,\n          o = String(n).toLowerCase();\n        return 0 === e.length ? Ce() : (r = function (e, n) {\n          for (var t = 0; t < e.length; t++) {\n            var r = e[t];\n            if (r.test(n)) return r;\n          }\n        }(e, t = o)) ? De(u(1), u(2)) : {\n          major: 0,\n          minor: 0\n        };\n        function u(e) {\n          return Number(t.replace(r, \"$\" + e));\n        }\n      },\n      unknown: Ce\n    },\n    Ae = function Ae(e, n) {\n      return Q(e, n, 0);\n    },\n    ke = (Re = /^\\s+|\\s+$/g, function (e) {\n      return e.replace(Re, \"\");\n    }),\n    Ie = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n    Be = {\n      browsers: C([{\n        name: \"Edge\",\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: function search(e) {\n          return Z(e, \"edge/\") && Z(e, \"chrome\") && Z(e, \"safari\") && Z(e, \"applewebkit\");\n        }\n      }, {\n        name: \"Chrome\",\n        brand: \"Chromium\",\n        versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/, Ie],\n        search: function search(e) {\n          return Z(e, \"chrome\") && !Z(e, \"chromeframe\");\n        }\n      }, {\n        name: \"IE\",\n        versionRegexes: [/.*?msie\\ ?([0-9]+)\\.([0-9]+).*/, /.*?rv:([0-9]+)\\.([0-9]+).*/],\n        search: function search(e) {\n          return Z(e, \"msie\") || Z(e, \"trident\");\n        }\n      }, {\n        name: \"Opera\",\n        versionRegexes: [Ie, /.*?opera\\/([0-9]+)\\.([0-9]+).*/],\n        search: te(\"opera\")\n      }, {\n        name: \"Firefox\",\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: te(\"firefox\")\n      }, {\n        name: \"Safari\",\n        versionRegexes: [Ie, /.*?cpu os ([0-9]+)_([0-9]+).*/],\n        search: function search(e) {\n          return (Z(e, \"safari\") || Z(e, \"mobile/\")) && Z(e, \"applewebkit\");\n        }\n      }]),\n      oses: C([{\n        name: \"Windows\",\n        search: te(\"win\"),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      }, {\n        name: \"iOS\",\n        search: function search(e) {\n          return Z(e, \"iphone\") || Z(e, \"ipad\");\n        },\n        versionRegexes: [/.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/, /.*cpu os ([0-9]+)_([0-9]+).*/, /.*cpu iphone os ([0-9]+)_([0-9]+).*/]\n      }, {\n        name: \"Android\",\n        search: te(\"android\"),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      }, {\n        name: \"OSX\",\n        search: te(\"mac os x\"),\n        versionRegexes: [/.*?mac\\ os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      }, {\n        name: \"Linux\",\n        search: te(\"linux\"),\n        versionRegexes: []\n      }, {\n        name: \"Solaris\",\n        search: te(\"sunos\"),\n        versionRegexes: []\n      }, {\n        name: \"FreeBSD\",\n        search: te(\"freebsd\"),\n        versionRegexes: []\n      }, {\n        name: \"ChromeOS\",\n        search: te(\"cros\"),\n        versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/]\n      }])\n    },\n    Me = \"Firefox\",\n    Ee = function Ee() {\n      return Se({\n        current: void 0,\n        version: Oe.unknown()\n      });\n    },\n    Pe = Se,\n    Ne = (C(\"Edge\"), C(\"Chrome\"), C(\"IE\"), C(\"Opera\"), C(Me), C(\"Safari\"), \"Windows\"),\n    ze = \"Android\",\n    Le = \"Solaris\",\n    _e = \"FreeBSD\",\n    We = \"ChromeOS\",\n    je = function je() {\n      return Te({\n        current: void 0,\n        version: Oe.unknown()\n      });\n    },\n    Fe = Te,\n    He = (C(Ne), C(\"iOS\"), C(ze), C(\"Linux\"), C(\"OSX\"), C(Le), C(_e), C(We), Y(function () {\n      return e = navigator.userAgent, n = q.from(navigator.userAgentData), t = re, p = Be.browsers(), b = Be.oses(), h = n.bind(function (e) {\n        return r = p, H(e.brands, function (n) {\n          var t = n.brand.toLowerCase();\n          return w(r, function (e) {\n            var n;\n            return t === (null === (n = e.brand) || void 0 === n ? void 0 : n.toLowerCase());\n          }).map(function (e) {\n            return {\n              current: e.name,\n              version: Oe.nu(parseInt(n.version, 10), 0)\n            };\n          });\n        });\n        var r;\n      }).orThunk(function () {\n        return J(p, t = e).map(function (e) {\n          var n = Oe.detect(e.versionRegexes, t);\n          return {\n            current: e.name,\n            version: n\n          };\n        });\n        var t;\n      }).fold(Ee, Pe), v = J(b, r = e).map(function (e) {\n        var n = Oe.detect(e.versionRegexes, r);\n        return {\n          current: e.name,\n          version: n\n        };\n      }).fold(je, Fe), {\n        browser: h,\n        os: v,\n        deviceType: (u = h, i = e, c = t, l = (o = v).isiOS() && !0 === /ipad/i.test(i), a = o.isiOS() && !l, s = (f = o.isiOS() || o.isAndroid()) || c(\"(pointer:coarse)\"), m = l || !a && f && c(\"(min-device-width:768px)\"), d = a || f && !m, g = u.isSafari() && o.isiOS() && !1 === /safari/i.test(i), {\n          isiPad: C(l),\n          isiPhone: C(a),\n          isTablet: C(m),\n          isPhone: C(d),\n          isTouch: C(s),\n          isAndroid: o.isAndroid,\n          isiOS: o.isiOS,\n          isWebView: C(g),\n          isDesktop: C(!d && !m && !g)\n        })\n      };\n      var e, n, t, r, o, u, i, c, l, a, f, s, m, d, g, p, b, h, v;\n    })),\n    Ve = {\n      fromHtml: function fromHtml(e, n) {\n        var t = (n || document).createElement(\"div\");\n        if (t.innerHTML = e, !t.hasChildNodes() || 1 < t.childNodes.length) throw console.error(\"HTML does not have a single root node\", e), new Error(\"HTML must have a single root node\");\n        return xe(t.childNodes[0]);\n      },\n      fromTag: function fromTag(e, n) {\n        var t = (n || document).createElement(e);\n        return xe(t);\n      },\n      fromText: function fromText(e, n) {\n        var t = (n || document).createTextNode(e);\n        return xe(t);\n      },\n      fromDom: xe,\n      fromPoint: function fromPoint(e, n, t) {\n        return q.from(e.dom.elementFromPoint(n, t)).map(xe);\n      }\n    },\n    qe = oe,\n    Ue = Object.keys,\n    Ge = Object.hasOwnProperty,\n    $e = function $e(e, r) {\n      var o = {};\n      return ae(e, function (e, n) {\n        var t = r(e, n);\n        o[t.k] = t.v;\n      }), o;\n    },\n    Ke = function Ke(e, n) {\n      return Ge.call(e, n);\n    },\n    Xe = [\"tfoot\", \"thead\", \"tbody\", \"colgroup\"];\n  function Ye(e) {\n    return e.dom.nodeName.toLowerCase();\n  }\n  function Je(e) {\n    return e.dom.nodeType;\n  }\n  function Qe(n) {\n    return function (e) {\n      return Je(e) === n;\n    };\n  }\n  function Ze(e) {\n    return 8 === Je(e) || \"#comment\" === Ye(e);\n  }\n  function en(n) {\n    return function (e) {\n      return gn(e) && Ye(e) === n;\n    };\n  }\n  function nn(e) {\n    return Ve.fromDom(e.dom.ownerDocument);\n  }\n  function tn(e) {\n    return bn(e) ? e : nn(e);\n  }\n  function rn(e) {\n    return q.from(e.dom.parentNode).map(Ve.fromDom);\n  }\n  function on(e, n) {\n    for (var t = c(n) ? n : v, r = e.dom, o = []; null !== r.parentNode && void 0 !== r.parentNode;) {\n      var u = r.parentNode,\n        i = Ve.fromDom(u);\n      if (o.push(i), !0 === t(i)) break;\n      r = u;\n    }\n    return o;\n  }\n  function un(e) {\n    return q.from(e.dom.previousSibling).map(Ve.fromDom);\n  }\n  function cn(e) {\n    return q.from(e.dom.nextSibling).map(Ve.fromDom);\n  }\n  function ln(e) {\n    return O(e.dom.childNodes, Ve.fromDom);\n  }\n  function an(e, n) {\n    var t = e.dom.childNodes;\n    return q.from(t[n]).map(Ve.fromDom);\n  }\n  function fn(e) {\n    return Ve.fromDom(e.dom.host);\n  }\n  function sn(e, n, t) {\n    return r = function r(e) {\n      return oe(e, n);\n    }, k(on(e, t), r);\n    var r;\n  }\n  function mn(e, n) {\n    return t = function t(e) {\n      return oe(e, n);\n    }, k(ln(e), t);\n    var t;\n  }\n  function dn(e, n) {\n    return ue(t = void 0 === e ? document : e.dom) ? [] : O(t.querySelectorAll(n), Ve.fromDom);\n    var t;\n  }\n  \"undefined\" != typeof window || Function(\"return this;\")();\n  var gn = Qe(1),\n    pn = Qe(3),\n    bn = Qe(9),\n    hn = Qe(11),\n    vn = c(Element.prototype.attachShadow) && c(Node.prototype.getRootNode),\n    wn = C(vn),\n    yn = vn ? function (e) {\n      return Ve.fromDom(e.dom.getRootNode());\n    } : tn,\n    Cn = function Cn(e) {\n      return l(e.dom.shadowRoot);\n    },\n    Sn = function Sn(e) {\n      var n = pn(e) ? e.dom.parentNode : e.dom;\n      if (null == n || null === n.ownerDocument) return !1;\n      var t,\n        r,\n        o,\n        u,\n        i,\n        c = n.ownerDocument;\n      return o = Ve.fromDom(n), i = yn(o), (hn(u = i) && l(u.dom.host) ? q.some(i) : q.none()).fold(function () {\n        return c.body.contains(n);\n      }, (t = Sn, r = fn, function (e) {\n        return t(r(e));\n      }));\n    },\n    Tn = function Tn(e) {\n      var n = e.dom.body;\n      if (null == n) throw new Error(\"Body is not available yet\");\n      return Ve.fromDom(n);\n    },\n    xn = function xn(e, n) {\n      var t = [];\n      return A(ln(e), function (e) {\n        t = (t = n(e) ? t.concat([e]) : t).concat(xn(e, n));\n      }), t;\n    };\n  function Rn(e, n, t, r, o) {\n    return e(t, r) ? q.some(t) : c(o) && o(t) ? q.none() : n(t, r, o);\n  }\n  function Dn(e, n, t) {\n    for (var r = e.dom, o = c(t) ? t : v; r.parentNode;) {\n      var r = r.parentNode,\n        u = Ve.fromDom(r);\n      if (n(u)) return q.some(u);\n      if (o(u)) break;\n    }\n    return q.none();\n  }\n  function On(e, n, t) {\n    return Dn(e, function (e) {\n      return oe(e, n);\n    }, t);\n  }\n  function An(e, n) {\n    return t = function t(e) {\n      return oe(e, n);\n    }, w(e.dom.childNodes, function (e) {\n      return t(Ve.fromDom(e));\n    }).map(Ve.fromDom);\n    var t;\n  }\n  function kn(e, n) {\n    return ie(n, e);\n  }\n  function In(e, n, t) {\n    return Rn(oe, On, e, n, t);\n  }\n  function Bn(e, n, t) {\n    if (!(T(t) || o(t) || f(t))) throw console.error(\"Invalid call to Attribute.set. Key \", n, \":: Value \", t, \":: Element \", e), new Error(\"Attribute value was not simple\");\n    e.setAttribute(n, t + \"\");\n  }\n  function Mn(e, n, t) {\n    Bn(e.dom, n, t);\n  }\n  function En(e, n) {\n    var t = e.dom;\n    ae(n, function (e, n) {\n      Bn(t, n, e);\n    });\n  }\n  function Pn(e, n) {\n    var t = e.dom.getAttribute(n);\n    return null === t ? void 0 : t;\n  }\n  function Nn(e, n) {\n    return q.from(Pn(e, n));\n  }\n  function zn(e) {\n    return B(e.dom.attributes, function (e, n) {\n      return e[n.name] = n.value, e;\n    }, {});\n  }\n  function Ln(e, n, t) {\n    return void 0 === t && (t = r), e.exists(function (e) {\n      return t(e, n);\n    });\n  }\n  function _n(e) {\n    for (var n = [], t = function t(e) {\n        n.push(e);\n      }, r = 0; r < e.length; r++) e[r].each(t);\n    return n;\n  }\n  function Wn(e, n, t) {\n    return e.isSome() && n.isSome() ? q.some(t(e.getOrDie(), n.getOrDie())) : q.none();\n  }\n  function jn(e, n) {\n    return e ? q.some(n) : q.none();\n  }\n  function Fn(e) {\n    return void 0 !== e.style && c(e.style.getPropertyValue);\n  }\n  function Hn(e, n, t) {\n    if (!T(t)) throw console.error(\"Invalid call to CSS.set. Property \", n, \":: Value \", t, \":: Element \", e), new Error(\"CSS value must be a string: \" + t);\n    Fn(e) && e.style.setProperty(n, t);\n  }\n  function Vn(e, n, t) {\n    Hn(e.dom, n, t);\n  }\n  function qn(e, n) {\n    var t = e.dom;\n    ae(n, function (e, n) {\n      Hn(t, n, e);\n    });\n  }\n  function Un(e, n) {\n    var t = e.dom,\n      r = window.getComputedStyle(t).getPropertyValue(n);\n    return \"\" !== r || Sn(e) ? r : jt(t, n);\n  }\n  function Gn(e, n) {\n    var t = e.dom,\n      r = jt(t, n);\n    return q.from(r).filter(function (e) {\n      return 0 < e.length;\n    });\n  }\n  function $n(e, n) {\n    var t,\n      r = n;\n    Fn(t = e.dom) && t.style.removeProperty(r), Ln(Nn(e, \"style\").map(ke), \"\") && Wt(e, \"style\");\n  }\n  function Kn(e, n, t) {\n    return void 0 === t && (t = 0), Nn(e, n).map(function (e) {\n      return parseInt(e, 10);\n    }).getOr(t);\n  }\n  function Xn(e, n) {\n    return Kn(e, n, 1);\n  }\n  function Yn(e) {\n    return en(\"col\")(e) ? 1 < Kn(e, \"span\", 1) : 1 < Xn(e, \"colspan\");\n  }\n  function Jn(e) {\n    return 1 < Xn(e, \"rowspan\");\n  }\n  function Qn(e, n) {\n    return parseInt(Un(e, n), 10);\n  }\n  function Zn(e, n) {\n    return Vt(e, n, x);\n  }\n  function et(e, n) {\n    return t = [\"td\", \"th\"], (o = void 0 === (o = n) ? v : n)(r = e) ? q.none() : y(t, Ye(r)) ? q.some(r) : On(r, t.join(\",\"), function (e) {\n      return oe(e, \"table\") || o(e);\n    });\n    var t, r, o;\n  }\n  function nt(e) {\n    return Zn(e, \"th,td\");\n  }\n  function tt(e) {\n    return oe(e, \"colgroup\") ? mn(e, \"col\") : N(qt(e), function (e) {\n      return mn(e, \"col\");\n    });\n  }\n  function rt(e, n) {\n    return In(e, \"table\", n);\n  }\n  function ot(e) {\n    return Zn(e, \"tr\");\n  }\n  function ut(e, t) {\n    return O(e, function (e) {\n      if (\"colgroup\" !== Ye(e)) return ve(e, n = O(nt(e), function (e) {\n        return he(e, Kn(e, \"rowspan\", 1), Kn(e, \"colspan\", 1));\n      }), t(e));\n      var n = O(tt(e), function (e) {\n        return he(e, 1, Kn(e, \"span\", 1));\n      });\n      return ve(e, n, \"colgroup\");\n    });\n  }\n  function it(e) {\n    return rn(e).map(function (e) {\n      var n = Ye(e);\n      return y(Xe, n) ? n : \"tbody\";\n    }).getOr(\"tbody\");\n  }\n  function ct(e) {\n    var n = ot(e);\n    return ut(X(X([], qt(e), !0), n, !0), it);\n  }\n  function lt(e, n, t) {\n    var r = e.cells,\n      o = r.slice(0, n),\n      u = r.slice(n),\n      i = o.concat(t).concat(u);\n    return Ut(e, i);\n  }\n  function at(e, n, t) {\n    return lt(e, n, [t]);\n  }\n  function ft(e, n, t) {\n    e.cells[n] = t;\n  }\n  function st(e, n) {\n    return e.cells[n];\n  }\n  function mt(e, n) {\n    return st(e, n).element;\n  }\n  function dt(e) {\n    return e.cells.length;\n  }\n  function gt(e) {\n    var n = d(e, function (e) {\n      return \"colgroup\" === e.section;\n    });\n    return {\n      rows: n.fail,\n      cols: n.pass\n    };\n  }\n  function pt(e, n, t) {\n    var r = O(e.cells, t);\n    return ye(n(e.element), r, e.section, !0);\n  }\n  function bt(e) {\n    return Nn(e, Gt).bind(function (e) {\n      return q.from(e.match(/\\d+/g));\n    }).map(function (e) {\n      return L(e, x);\n    });\n  }\n  function ht(e) {\n    var n,\n      t = me(B(gt(e).rows, function (t, e) {\n        return A(e.cells, function (e, n) {\n          e.isLocked && (t[n] = !0);\n        }), t;\n      }, {}), function (e, n) {\n        return parseInt(n, 10);\n      });\n    return (n = U.call(t, 0)).sort(void 0), n;\n  }\n  function vt(e) {\n    var l = {},\n      n = [],\n      a = j(e).map(function (e) {\n        return e.element;\n      }).bind(rt).bind(bt).getOr({}),\n      t = 0,\n      f = 0,\n      s = 0,\n      r = d(e, function (e) {\n        return \"colgroup\" === e.section;\n      }),\n      o = r.pass;\n    A(r.fail, function (e) {\n      var c = [];\n      A(e.cells, function (e) {\n        for (var n = 0; void 0 !== l[s + \",\" + n];) n++;\n        for (var t = be(a, n.toString()), r = {\n            element: e.element,\n            rowspan: e.rowspan,\n            colspan: e.colspan,\n            row: s,\n            column: n,\n            isLocked: t\n          }, o = 0; o < e.colspan; o++) for (var u = 0; u < e.rowspan; u++) {\n          var i = n + o;\n          l[s + u + \",\" + i] = r, f = Math.max(f, i + 1);\n        }\n        c.push(r);\n      }), t++, n.push(ve(e.element, c, e.section)), s++;\n    });\n    var u = F(o).map(function (e) {\n        var o,\n          u,\n          n = (o = {}, u = 0, A(e.cells, function (t) {\n            var r = t.colspan;\n            D(r, function (e) {\n              var n = u + e;\n              o[n] = {\n                element: t.element,\n                colspan: r,\n                column: n\n              };\n            }), u += r;\n          }), o);\n        return {\n          colgroups: [{\n            element: e.element,\n            columns: de(n)\n          }],\n          columns: n\n        };\n      }).getOrThunk(function () {\n        return {\n          colgroups: [],\n          columns: {}\n        };\n      }),\n      i = u.columns,\n      c = u.colgroups;\n    return {\n      grid: {\n        rows: t,\n        columns: f\n      },\n      access: l,\n      all: n,\n      columns: i,\n      colgroups: c\n    };\n  }\n  function wt(e, n) {\n    var t = n.column,\n      r = n.column + n.colspan - 1,\n      o = n.row,\n      u = n.row + n.rowspan - 1;\n    return t <= e.finishCol && r >= e.startCol && o <= e.finishRow && u >= e.startRow;\n  }\n  function yt(e, n) {\n    return n.column >= e.startCol && n.column + n.colspan - 1 <= e.finishCol && n.row >= e.startRow && n.row + n.rowspan - 1 <= e.finishRow;\n  }\n  function Ct(e, n, t) {\n    var r = $t.findItem(e, n, ce),\n      o = $t.findItem(e, t, ce);\n    return r.bind(function (r) {\n      return o.map(function (e) {\n        return n = r, t = e, {\n          startRow: Math.min(n.row, t.row),\n          startCol: Math.min(n.column, t.column),\n          finishRow: Math.max(n.row + n.rowspan - 1, t.row + t.rowspan - 1),\n          finishCol: Math.max(n.column + n.colspan - 1, t.column + t.colspan - 1)\n        };\n        var n, t;\n      });\n    });\n  }\n  function St(n, e, t) {\n    return Ct(n, e, t).map(function (e) {\n      return O($t.filterItems(n, P(wt, e)), function (e) {\n        return e.element;\n      });\n    });\n  }\n  function Tt(e, n) {\n    return $t.findItem(e, n, function (e, n) {\n      return le(n, e);\n    }).map(function (e) {\n      return e.element;\n    });\n  }\n  function xt(e, n, t, r, o) {\n    var u = Kt(e),\n      i = ce(e, t) ? q.some(n) : Tt(u, n),\n      c = ce(e, o) ? q.some(r) : Tt(u, r);\n    return i.bind(function (n) {\n      return c.bind(function (e) {\n        return St(u, n, e);\n      });\n    });\n  }\n  function Rt(n, t) {\n    rn(n).each(function (e) {\n      e.dom.insertBefore(t.dom, n.dom);\n    });\n  }\n  function Dt(e, n) {\n    cn(e).fold(function () {\n      rn(e).each(function (e) {\n        Xt(e, n);\n      });\n    }, function (e) {\n      Rt(e, n);\n    });\n  }\n  function Ot(n, t) {\n    an(n, 0).fold(function () {\n      Xt(n, t);\n    }, function (e) {\n      n.dom.insertBefore(t.dom, e.dom);\n    });\n  }\n  function At(e, n) {\n    Rt(e, n), Xt(n, e);\n  }\n  function kt(t, r) {\n    A(r, function (e, n) {\n      Dt(0 === n ? t : r[n - 1], e);\n    });\n  }\n  function It(n, e) {\n    A(e, function (e) {\n      Xt(n, e);\n    });\n  }\n  function Bt(e) {\n    e.dom.textContent = \"\", A(ln(e), function (e) {\n      Yt(e);\n    });\n  }\n  function Mt(e) {\n    var n,\n      t = ln(e);\n    0 < t.length && (n = e, A(t, function (e) {\n      Rt(n, e);\n    })), Yt(e);\n  }\n  function Et(e) {\n    return Jt.get(e);\n  }\n  function Pt(e) {\n    return Jt.getOption(e);\n  }\n  function Nt(e, n) {\n    return Jt.set(e, n);\n  }\n  function zt(e, n) {\n    return k(N(e.all, function (e) {\n      return e.cells;\n    }), n);\n  }\n  var Lt,\n    _t,\n    Wt = function Wt(e, n) {\n      e.dom.removeAttribute(n);\n    },\n    jt = function jt(e, n) {\n      return Fn(e) ? e.style.getPropertyValue(n) : \"\";\n    },\n    Ft = C(10),\n    Ht = C(10),\n    Vt = function Vt(e, n, t) {\n      return N(ln(e), function (e) {\n        return oe(e, n) ? t(e) ? [e] : [] : Vt(e, n, t);\n      });\n    },\n    qt = function qt(e) {\n      return rt(e).fold(C([]), function (e) {\n        return mn(e, \"colgroup\");\n      });\n    },\n    Ut = function Ut(e, n) {\n      return ye(e.element, n, e.section, e.isNew);\n    },\n    Gt = \"data-snooker-locked-cols\",\n    $t = {\n      fromTable: function fromTable(e) {\n        return vt(ct(e));\n      },\n      generate: vt,\n      getAt: function getAt(e, n, t) {\n        return q.from(e.access[n + \",\" + t]);\n      },\n      findItem: function findItem(e, n, t) {\n        var r = zt(e, function (e) {\n          return t(n, e.element);\n        });\n        return 0 < r.length ? q.some(r[0]) : q.none();\n      },\n      filterItems: zt,\n      justCells: function justCells(e) {\n        return N(e.all, function (e) {\n          return e.cells;\n        });\n      },\n      justColumns: function justColumns(e) {\n        return de(e.columns);\n      },\n      hasColumns: function hasColumns(e) {\n        return 0 < Ue(e.columns).length;\n      },\n      getColumnAt: function getColumnAt(e, n) {\n        return q.from(e.columns[n]);\n      }\n    },\n    Kt = $t.fromTable,\n    Xt = function Xt(e, n) {\n      e.dom.appendChild(n.dom);\n    },\n    Yt = function Yt(e) {\n      var n = e.dom;\n      null !== n.parentNode && n.parentNode.removeChild(n);\n    },\n    Jt = (Lt = pn, {\n      get: function get(e) {\n        if (!Lt(e)) throw new Error(\"Can only get text value of a text node\");\n        return _t(e).getOr(\"\");\n      },\n      getOption: _t = function _t(e) {\n        return Lt(e) ? q.from(e.dom.nodeValue) : q.none();\n      },\n      set: function set(e, n) {\n        if (!Lt(e)) throw new Error(\"Can only set raw text value of a text node\");\n        e.dom.nodeValue = n;\n      }\n    }),\n    Qt = [\"body\", \"p\", \"div\", \"article\", \"aside\", \"figcaption\", \"figure\", \"footer\", \"header\", \"nav\", \"section\", \"ol\", \"ul\", \"li\", \"table\", \"thead\", \"tbody\", \"tfoot\", \"caption\", \"tr\", \"td\", \"th\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"blockquote\", \"pre\", \"address\"];\n  function Zt() {\n    return {\n      up: C({\n        selector: On,\n        closest: In,\n        predicate: Dn,\n        all: on\n      }),\n      down: C({\n        selector: dn,\n        predicate: xn\n      }),\n      styles: C({\n        get: Un,\n        getRaw: Gn,\n        set: Vn,\n        remove: $n\n      }),\n      attrs: C({\n        get: Pn,\n        set: Mn,\n        remove: Wt,\n        copyTo: function copyTo(e, n) {\n          En(n, zn(e));\n        }\n      }),\n      insert: C({\n        before: Rt,\n        after: Dt,\n        afterAll: kt,\n        append: Xt,\n        appendAll: It,\n        prepend: Ot,\n        wrap: At\n      }),\n      remove: C({\n        unwrap: Mt,\n        remove: Yt\n      }),\n      create: C({\n        nu: Ve.fromTag,\n        clone: function clone(e) {\n          return Ve.fromDom(e.dom.cloneNode(!1));\n        },\n        text: Ve.fromText\n      }),\n      query: C({\n        comparePosition: function comparePosition(e, n) {\n          return e.dom.compareDocumentPosition(n.dom);\n        },\n        prevSibling: un,\n        nextSibling: cn\n      }),\n      property: C({\n        children: ln,\n        name: Ye,\n        parent: rn,\n        document: function document(e) {\n          return tn(e).dom;\n        },\n        isText: pn,\n        isComment: Ze,\n        isElement: gn,\n        isSpecial: function isSpecial(e) {\n          return y([\"script\", \"noscript\", \"iframe\", \"noframes\", \"noembed\", \"title\", \"style\", \"textarea\", \"xmp\"], Ye(e));\n        },\n        getLanguage: function getLanguage(e) {\n          return gn(e) ? Nn(e, \"lang\") : q.none();\n        },\n        getText: Et,\n        setText: Nt,\n        isBoundary: function isBoundary(e) {\n          return !!gn(e) && (\"body\" === Ye(e) || y(Qt, Ye(e)));\n        },\n        isEmptyTag: function isEmptyTag(e) {\n          return !!gn(e) && y([\"br\", \"img\", \"hr\", \"input\"], Ye(e));\n        },\n        isNonEditable: function isNonEditable(e) {\n          return gn(e) && \"false\" === Pn(e, \"contenteditable\");\n        }\n      }),\n      eq: ce,\n      is: qe\n    };\n  }\n  function er(t, e) {\n    return Hr(qr, function (e, n) {\n      return t(n);\n    }, e);\n  }\n  function nr(e) {\n    return On(e, \"table\");\n  }\n  function tr(c, l, a) {\n    function f(n) {\n      return function (e) {\n        return void 0 !== a && a(e) || ce(e, n);\n      };\n    }\n    return ce(c, l) ? q.some({\n      boxes: q.some([c]),\n      start: c,\n      finish: l\n    }) : nr(c).bind(function (i) {\n      return nr(l).bind(function (u) {\n        if (ce(i, u)) return q.some({\n          boxes: (r = c, o = l, St(Kt(i), r, o)),\n          start: c,\n          finish: l\n        });\n        if (le(i, u)) {\n          var e = 0 < (n = sn(l, \"td,th\", f(i))).length ? n[n.length - 1] : l;\n          return q.some({\n            boxes: xt(i, c, i, l, u),\n            start: c,\n            finish: e\n          });\n        }\n        if (le(u, i)) {\n          var n,\n            t = 0 < (n = sn(c, \"td,th\", f(u))).length ? n[n.length - 1] : c;\n          return q.some({\n            boxes: xt(u, c, i, l, u),\n            start: c,\n            finish: t\n          });\n        }\n        return Vr(qr, c, l, void 0).shared.bind(function (e) {\n          return In(e, \"table\", a).bind(function (e) {\n            var n = sn(l, \"td,th\", f(e)),\n              t = 0 < n.length ? n[n.length - 1] : l,\n              r = sn(c, \"td,th\", f(e)),\n              o = 0 < r.length ? r[r.length - 1] : c;\n            return q.some({\n              boxes: xt(e, c, i, l, u),\n              start: o,\n              finish: t\n            });\n          });\n        });\n        var r, o;\n      });\n    });\n  }\n  function rr(e, n) {\n    var t = dn(e, n);\n    return 0 < t.length ? q.some(t) : q.none();\n  }\n  function or(e, n, r) {\n    return kn(e, n).bind(function (t) {\n      return kn(e, r).bind(function (n) {\n        return er(nr, [t, n]).map(function (e) {\n          return {\n            first: t,\n            last: n,\n            table: e\n          };\n        });\n      });\n    });\n  }\n  function ur(e, r, o, u, n) {\n    return t = n, w(e, function (e) {\n      return oe(e, t);\n    }).bind(function (e) {\n      return t = r, i = o, rt(n = e).bind(function (e) {\n        var r = Kt(e),\n          o = t,\n          u = i;\n        return $t.findItem(r, n, ce).bind(function (e) {\n          var n = 0 < o ? e.row + e.rowspan - 1 : e.row,\n            t = 0 < u ? e.column + e.colspan - 1 : e.column;\n          return $t.getAt(r, n + o, t + u).map(function (e) {\n            return e.element;\n          });\n        });\n      }).bind(function (e) {\n        return t = u, On(n = e, \"table\").bind(function (e) {\n          return kn(e, t).bind(function (e) {\n            return tr(e, n).bind(function (n) {\n              return n.boxes.map(function (e) {\n                return {\n                  boxes: e,\n                  start: n.start,\n                  finish: n.finish\n                };\n              });\n            });\n          });\n        });\n        var n, t;\n      });\n      var n, t, i;\n    });\n    var t;\n  }\n  function ir(o, e, n) {\n    return or(o, e, n).bind(function (c) {\n      function e(e) {\n        return ce(o, e);\n      }\n      var n = \"thead,tfoot,tbody,table\",\n        t = On(c.first, n, e),\n        r = On(c.last, n, e);\n      return t.bind(function (i) {\n        return r.bind(function (e) {\n          return ce(i, e) ? (t = c.table, r = c.first, o = c.last, u = Kt(t), Ct(n = u, r, o).bind(function (e) {\n            return function (e, n) {\n              for (var t = !0, r = P(yt, n), o = n.startRow; o <= n.finishRow; o++) for (var u = n.startCol; u <= n.finishCol; u++) t = t && $t.getAt(e, o, u).exists(r);\n              return t ? q.some(n) : q.none();\n            }(n, e);\n          })) : q.none();\n          var n, t, r, o, u;\n        });\n      });\n    });\n  }\n  function cr(e, n, t, r) {\n    return e.fold(n, t, r);\n  }\n  function lr(e, n) {\n    return Ve.fromDom(e.dom.cloneNode(n));\n  }\n  function ar(e) {\n    return lr(e, !1);\n  }\n  function fr(e) {\n    return lr(e, !0);\n  }\n  function sr(e, n) {\n    var t = Ve.fromTag(n);\n    return En(t, zn(e)), t;\n  }\n  function mr(r, o) {\n    function e(e) {\n      var n = o(e);\n      if (n <= 0 || null === n) {\n        var t = Un(e, r);\n        return parseFloat(t) || 0;\n      }\n      return n;\n    }\n    function u(o, e) {\n      return B(e, function (e, n) {\n        var t = Un(o, n),\n          r = void 0 === t ? 0 : parseInt(t, 10);\n        return isNaN(r) ? e : e + r;\n      }, 0);\n    }\n    return {\n      set: function set(e, n) {\n        if (!f(n) && !n.match(/^[0-9]+$/)) throw new Error(r + \".set accepts only positive integer values. Value was \" + n);\n        var t = e.dom;\n        Fn(t) && (t.style[r] = n + \"px\");\n      },\n      get: e,\n      getOuter: e,\n      aggregate: u,\n      max: function max(e, n, t) {\n        var r = u(e, t);\n        return r < n ? n - r : 0;\n      }\n    };\n  }\n  function dr() {\n    var e = He().browser;\n    return e.isIE() || e.isEdge();\n  }\n  function gr(e, n, t) {\n    return r = Un(e, n), o = t, u = parseFloat(r), (isNaN(u) ? q.none() : q.some(u)).getOr(o);\n    var r, o, u;\n  }\n  function pr(e) {\n    return Un(e, \"box-sizing\");\n  }\n  function br(e, n, t, r) {\n    return n - gr(e, \"padding-\" + t, 0) - gr(e, \"padding-\" + r, 0) - gr(e, \"border-\" + t + \"-width\", 0) - gr(e, \"border-\" + r + \"-width\", 0);\n  }\n  function hr(e, n) {\n    var t = e.dom,\n      r = t.getBoundingClientRect().width || t.offsetWidth;\n    return \"border-box\" === n ? r : br(e, r, \"left\", \"right\");\n  }\n  function vr(e) {\n    return Jr.get(e);\n  }\n  function wr(e) {\n    return Jr.getOuter(e);\n  }\n  function yr(t, r) {\n    void 0 === r && (r = x);\n    var e = t.grid,\n      n = D(e.columns, S),\n      o = D(e.rows, S);\n    return O(n, function (n) {\n      return eo(function () {\n        return N(o, function (e) {\n          return $t.getAt(t, e, n).filter(function (e) {\n            return e.column === n;\n          }).toArray();\n        });\n      }, function (e) {\n        return 1 === e.colspan && r(e.element);\n      }, function () {\n        return $t.getAt(t, 0, n);\n      });\n    });\n  }\n  function Cr(t) {\n    var e = t.grid,\n      n = D(e.rows, S),\n      r = D(e.columns, S);\n    return O(n, function (n) {\n      return eo(function () {\n        return N(r, function (e) {\n          return $t.getAt(t, n, e).filter(function (e) {\n            return e.row === n;\n          }).fold(C([]), function (e) {\n            return [e];\n          });\n        });\n      }, function (e) {\n        return 1 === e.rowspan;\n      }, function () {\n        return $t.getAt(t, n, 0);\n      });\n    });\n  }\n  function Sr(n, t) {\n    return function (e) {\n      return \"rtl\" === no(e) ? t : n;\n    };\n  }\n  function Tr(e) {\n    return to.get(e);\n  }\n  function xr(e) {\n    return to.getOuter(e);\n  }\n  function Rr(e, n) {\n    return void 0 !== e ? e : void 0 !== n ? n : 0;\n  }\n  function Dr(e) {\n    var n = e.dom.ownerDocument,\n      t = n.body,\n      r = n.defaultView,\n      o = n.documentElement;\n    if (t === e.dom) return uo(t.offsetLeft, t.offsetTop);\n    var u = Rr(null == r ? void 0 : r.pageYOffset, o.scrollTop),\n      i = Rr(null == r ? void 0 : r.pageXOffset, o.scrollLeft),\n      c = Rr(o.clientTop, t.clientTop),\n      l = Rr(o.clientLeft, t.clientLeft);\n    return io(e).translate(i - l, u - c);\n  }\n  function Or(e, n) {\n    return {\n      row: e,\n      y: n\n    };\n  }\n  function Ar(e, n) {\n    return {\n      col: e,\n      x: n\n    };\n  }\n  function kr(e) {\n    return Dr(e).left + wr(e);\n  }\n  function Ir(e) {\n    return Dr(e).left;\n  }\n  function Br(e, n) {\n    return Ar(e, Ir(n));\n  }\n  function Mr(e, n) {\n    return Ar(e, kr(n));\n  }\n  function Er(e) {\n    return Dr(e).top;\n  }\n  function Pr(e, n) {\n    return Or(e, Er(n));\n  }\n  function Nr(e, n) {\n    return Or(e, Er(n) + xr(n));\n  }\n  function zr(t, n, r) {\n    if (0 === r.length) return [];\n    var e = O(r.slice(1), function (e, n) {\n        return e.map(function (e) {\n          return t(n, e);\n        });\n      }),\n      o = r[r.length - 1].map(function (e) {\n        return n(r.length - 1, e);\n      });\n    return e.concat([o]);\n  }\n  function Lr(i) {\n    if (!a(i)) throw new Error(\"cases must be an array\");\n    if (0 === i.length) throw new Error(\"there must be at least one case\");\n    var c = [],\n      t = {};\n    return A(i, function (e, r) {\n      var n = Ue(e);\n      if (1 !== n.length) throw new Error(\"one and only one name per case\");\n      var o = n[0],\n        u = e[o];\n      if (void 0 !== t[o]) throw new Error(\"duplicate key detected:\" + o);\n      if (\"cata\" === o) throw new Error(\"cannot have a case named cata (sorry)\");\n      if (!a(u)) throw new Error(\"case arguments must be an array\");\n      c.push(o), t[o] = function () {\n        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n        var n = t.length;\n        if (n !== u.length) throw new Error(\"Wrong number of arguments to case \" + o + \". Expected \" + u.length + \" (\" + u + \"), got \" + n);\n        return {\n          fold: function fold() {\n            for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];\n            if (e.length !== i.length) throw new Error(\"Wrong number of arguments to fold. Expected \" + i.length + \", got \" + e.length);\n            return e[r].apply(null, t);\n          },\n          match: function match(e) {\n            var n = Ue(e);\n            if (c.length !== n.length) throw new Error(\"Wrong number of arguments to match. Expected: \" + c.join(\",\") + \"\\nActual: \" + n.join(\",\"));\n            if (!z(c, function (e) {\n              return y(n, e);\n            })) throw new Error(\"Not all branches were specified when using match. Specified: \" + n.join(\", \") + \"\\nRequired: \" + c.join(\", \"));\n            return e[o].apply(null, t);\n          },\n          log: function log(e) {\n            console.log(e, {\n              constructors: c,\n              constructor: o,\n              params: t\n            });\n          }\n        };\n      };\n    }), t;\n  }\n  var _r,\n    Wr,\n    jr,\n    Fr = function Fr(n, e, t) {\n      return e.bind(function (e) {\n        return t.filter(P(n.eq, e));\n      });\n    },\n    Hr = function Hr(e, n, t) {\n      return 0 < t.length ? (r = e, o = n, u = t[0], I(t.slice(1), function (e, n) {\n        var t = o(r, n);\n        return Fr(r, e, t);\n      }, o(r, u))) : q.none();\n      var r, o, u;\n    },\n    Vr = function Vr(n, e, t, r) {\n      function o(n) {\n        return b(n, r).fold(function () {\n          return n;\n        }, function (e) {\n          return n.slice(0, e + 1);\n        });\n      }\n      void 0 === r && (r = v);\n      var u = [e].concat(n.up().all(e)),\n        i = [t].concat(n.up().all(t)),\n        c = o(u),\n        l = o(i),\n        a = w(c, function (e) {\n          return R(l, P(n.eq, e));\n        });\n      return {\n        firstpath: c,\n        secondpath: l,\n        shared: a\n      };\n    },\n    qr = Zt(),\n    Ur = rr,\n    Gr = Lr([{\n      none: []\n    }, {\n      multiple: [\"elements\"]\n    }, {\n      single: [\"element\"]\n    }]),\n    $r = Gr.none,\n    Kr = Gr.multiple,\n    Xr = Gr.single,\n    Yr = tinymce.util.Tools.resolve(\"tinymce.PluginManager\"),\n    Jr = mr(\"width\", function (e) {\n      return e.dom.offsetWidth;\n    }),\n    Qr = function Qr(e) {\n      return hr(e, \"content-box\");\n    },\n    Zr = function Zr(e) {\n      return dr() ? hr(e, pr(e)) : gr(e, \"width\", e.dom.offsetWidth);\n    },\n    eo = function eo(e, n, t) {\n      var r = e();\n      return w(r, n).orThunk(function () {\n        return q.from(r[0]).orThunk(t);\n      }).map(function (e) {\n        return e.element;\n      });\n    },\n    no = function no(e) {\n      return \"rtl\" === Un(e, \"direction\") ? \"rtl\" : \"ltr\";\n    },\n    to = mr(\"height\", function (e) {\n      var n = e.dom;\n      return Sn(e) ? n.getBoundingClientRect().height : n.offsetHeight;\n    }),\n    ro = function ro(e) {\n      return dr() ? (t = pr(n = e), o = (r = n.dom).getBoundingClientRect().height || r.offsetHeight, \"border-box\" === t ? o : br(n, o, \"top\", \"bottom\")) : gr(e, \"height\", e.dom.offsetHeight);\n      var n, t, r, o;\n    },\n    oo = function oo(t, r) {\n      return {\n        left: t,\n        top: r,\n        translate: function translate(e, n) {\n          return oo(t + e, r + n);\n        }\n      };\n    },\n    uo = oo,\n    io = function io(e) {\n      var n,\n        t = e.dom,\n        r = t.ownerDocument.body;\n      return r === t ? uo(r.offsetLeft, r.offsetTop) : Sn(e) ? (n = t.getBoundingClientRect(), uo(n.left, n.top)) : uo(0, 0);\n    },\n    co = {\n      delta: S,\n      positions: function positions(e) {\n        return zr(Pr, Nr, e);\n      },\n      edge: Er\n    },\n    lo = Sr({\n      delta: S,\n      edge: Ir,\n      positions: function positions(e) {\n        return zr(Br, Mr, e);\n      }\n    }, {\n      delta: function delta(e) {\n        return -e;\n      },\n      edge: kr,\n      positions: function positions(e) {\n        return zr(Mr, Br, e);\n      }\n    }),\n    ao = {\n      delta: function delta(e, n) {\n        return lo(n).delta(e, n);\n      },\n      positions: function positions(e, n) {\n        return lo(n).positions(e, n);\n      },\n      edge: function edge(e) {\n        return lo(e).edge(e);\n      }\n    },\n    fo = {\n      unsupportedLength: [\"em\", \"ex\", \"cap\", \"ch\", \"ic\", \"rem\", \"lh\", \"rlh\", \"vw\", \"vh\", \"vi\", \"vb\", \"vmin\", \"vmax\", \"cm\", \"mm\", \"Q\", \"in\", \"pc\", \"pt\", \"px\"],\n      fixed: [\"px\", \"pt\"],\n      relative: [\"%\"],\n      empty: [\"\"]\n    },\n    so = (jr = [\"Infinity\", (_r = \"[0-9]+\") + \"\\\\.\" + mo(_r) + mo(Wr = \"[eE][+-]?[0-9]+\"), \"\\\\.\" + _r + mo(Wr), _r + mo(Wr)].join(\"|\"), new RegExp(\"^([+-]?(?:\" + jr + \"))(.*)$\"));\n  function mo(e) {\n    return \"(?:\" + e + \")?\";\n  }\n  function go(e, n, t) {\n    var r = q.from(e.dom.parentElement).map(Ve.fromDom).getOrThunk(function () {\n      return Tn(nn(e));\n    });\n    return n(e) / t(r) * 100;\n  }\n  function po(e, n) {\n    Vn(e, \"width\", n + \"px\");\n  }\n  function bo(e, n) {\n    Vn(e, \"width\", n + \"%\");\n  }\n  function ho(e, n) {\n    Vn(e, \"height\", n + \"px\");\n  }\n  function vo(e) {\n    var n,\n      t,\n      r,\n      o,\n      u,\n      i,\n      c,\n      l,\n      a,\n      f,\n      s = ro(e) + \"px\";\n    return s ? (n = s, t = e, r = Tr, o = ho, f = parseFloat(n), ee(n, \"%\") && \"table\" !== Ye(t) ? (i = f, c = r, l = o, a = rt(u = t).map(function (e) {\n      var n = c(e);\n      return Math.floor(i / 100 * n);\n    }).getOr(i), l(u, a), a) : f) : Tr(e);\n  }\n  function wo(e, n) {\n    return Gn(e, n).orThunk(function () {\n      return Nn(e, n).map(function (e) {\n        return e + \"px\";\n      });\n    });\n  }\n  function yo(e) {\n    return wo(e, \"width\");\n  }\n  function Co(e) {\n    return go(e, vr, Qr);\n  }\n  function So(e) {\n    return (jl(e) ? vr : Zr)(e);\n  }\n  function To(e) {\n    return vo(n = e) / Xn(n, \"rowspan\");\n    var n;\n  }\n  function xo(e, n, t) {\n    Vn(e, \"width\", n + t);\n  }\n  function Ro(e) {\n    return go(e, vr, Qr) + \"%\";\n  }\n  function Do(e) {\n    return yo(e).getOrThunk(function () {\n      return So(e) + \"px\";\n    });\n  }\n  function Oo(e) {\n    return wo(e, \"height\").getOrThunk(function () {\n      return To(e) + \"px\";\n    });\n  }\n  function Ao(e, n, t, r, o, u) {\n    return e.filter(r).fold(function () {\n      return u(function (t, r) {\n        if (r < 0 || r >= t.length - 1) return q.none();\n        var e = t[r].fold(function () {\n            var e, n;\n            return H((e = t.slice(0, r), (n = U.call(e, 0)).reverse(), n), function (e, n) {\n              return e.map(function (e) {\n                return {\n                  value: e,\n                  delta: n + 1\n                };\n              });\n            });\n          }, function (e) {\n            return q.some({\n              value: e,\n              delta: 0\n            });\n          }),\n          n = t[r + 1].fold(function () {\n            return H(t.slice(r + 1), function (e, n) {\n              return e.map(function (e) {\n                return {\n                  value: e,\n                  delta: n + 1\n                };\n              });\n            });\n          }, function (e) {\n            return q.some({\n              value: e,\n              delta: 1\n            });\n          });\n        return e.bind(function (t) {\n          return n.map(function (e) {\n            var n = e.delta + t.delta;\n            return Math.abs(e.value - t.value) / n;\n          });\n        });\n      }(t, n));\n    }, function (e) {\n      return o(e);\n    });\n  }\n  function ko(e, n, i, c) {\n    var l = yr(e),\n      t = $t.hasColumns(e) ? O($t.justColumns(e), function (e) {\n        return q.from(e.element);\n      }) : l,\n      a = [q.some(ao.edge(n))].concat(O(ao.positions(l, n), function (e) {\n        return e.map(function (e) {\n          return e.x;\n        });\n      })),\n      f = p(Yn);\n    return O(t, function (e, u) {\n      return Ao(e, u, a, f, function (e) {\n        return t = e, o = (r = He().browser).isChrome() || r.isFirefox(), !Hl(t) || o ? i(e) : Ao(null != (n = l[u]) ? S(n) : q.none(), u, a, f, function (e) {\n          return c(q.some(vr(e)));\n        }, c);\n        var n, t, r, o;\n      }, c);\n    });\n  }\n  function Io(e) {\n    return e.map(function (e) {\n      return e + \"px\";\n    }).getOr(\"\");\n  }\n  function Bo(e, n, t) {\n    return ko(e, n, So, function (e) {\n      return e.getOrThunk(t.minCellWidth);\n    });\n  }\n  function Mo(e, n, t, r, o) {\n    var u = Cr(e),\n      i = [q.some(t.edge(n))].concat(O(t.positions(u, n), function (e) {\n        return e.map(function (e) {\n          return e.y;\n        });\n      }));\n    return O(u, function (e, n) {\n      return Ao(e, n, i, p(Jn), r, o);\n    });\n  }\n  function Eo(e, n) {\n    return function () {\n      return Sn(e) ? n(e) : parseFloat(Gn(e, \"width\").getOr(\"0\"));\n    };\n  }\n  function Po(r) {\n    var t = Eo(r, function (e) {\n        return parseFloat(Ro(e));\n      }),\n      n = Eo(r, vr);\n    return {\n      width: t,\n      pixelWidth: n,\n      getWidths: function getWidths(e, n) {\n        return t = n, ko(e, r, Co, function (e) {\n          return e.fold(function () {\n            return t.minCellWidth();\n          }, function (e) {\n            return e / t.pixelWidth() * 100;\n          });\n        });\n        var t;\n      },\n      getCellDelta: function getCellDelta(e) {\n        return e / n() * 100;\n      },\n      singleColumnWidth: function singleColumnWidth(e, n) {\n        return [100 - e];\n      },\n      minCellWidth: function minCellWidth() {\n        return Ft() / n() * 100;\n      },\n      setElementWidth: bo,\n      adjustTableWidth: function adjustTableWidth(e) {\n        var n = t();\n        bo(r, n + e / 100 * n);\n      },\n      isRelative: !0,\n      label: \"percent\"\n    };\n  }\n  function No(t) {\n    var r = Eo(t, vr);\n    return {\n      width: r,\n      pixelWidth: r,\n      getWidths: function getWidths(e, n) {\n        return Bo(e, t, n);\n      },\n      getCellDelta: S,\n      singleColumnWidth: function singleColumnWidth(e, n) {\n        return [Math.max(Ft(), e + n) - e];\n      },\n      minCellWidth: Ft,\n      setElementWidth: po,\n      adjustTableWidth: function adjustTableWidth(e) {\n        var n = r() + e;\n        po(t, n);\n      },\n      isRelative: !1,\n      label: \"pixel\"\n    };\n  }\n  function zo(e, n) {\n    function t(e) {\n      return oe(e.element, n);\n    }\n    var u,\n      r,\n      i,\n      c,\n      l,\n      a,\n      f,\n      s,\n      o,\n      m,\n      d,\n      g,\n      p = fr(e),\n      b = ct(p),\n      h = Vl(e),\n      v = $t.generate(b),\n      w = (u = t, r = v.grid.columns, i = v.grid.rows, c = r, a = l = 0, f = [], s = [], ae(v.access, function (e) {\n        var n, t, r, o;\n        f.push(e), u(e) && (s.push(e), t = (n = e.row) + e.rowspan - 1, o = (r = e.column) + e.colspan - 1, n < i ? i = n : l < t && (l = t), r < c ? c = r : a < o && (a = o));\n      }), {\n        minRow: i,\n        minCol: c,\n        maxRow: l,\n        maxCol: a,\n        allCells: f,\n        selectedCells: s\n      }),\n      y = \"th:not(\" + n + \"),td:not(\" + n + \")\";\n    return A(Vt(p, \"th,td\", function (e) {\n      return oe(e, y);\n    }), Yt), function (e, n, t, r) {\n      for (var o, u, i, c = n.grid.columns, l = n.grid.rows, a = 0; a < l; a++) for (var f = !1, s = 0; s < c; s++) a < t.minRow || a > t.maxRow || s < t.minCol || s > t.maxCol || ($t.getAt(n, a, s).filter(r).isNone() ? (o = f, 0, u = e[a].element, i = Ve.fromTag(\"td\"), Xt(i, Ve.fromTag(\"br\")), (o ? Xt : Ot)(u, i)) : f = !0);\n    }(b, v, w, t), o = p, m = w, d = v, g = function (e, n, t, r) {\n      if (0 === r.minCol && n.grid.columns === r.maxCol + 1) return 0;\n      var o = Bo(n, e, t),\n        u = B(o, function (e, n) {\n          return e + n;\n        }, 0),\n        i = B(o.slice(r.minCol, r.maxCol + 1), function (e, n) {\n          return e + n;\n        }, 0) / u * t.pixelWidth() - t.pixelWidth();\n      return t.getCellDelta(i);\n    }(e, $t.fromTable(e), h, w), ae(d.columns, function (e) {\n      (e.column < m.minCol || e.column > m.maxCol) && Yt(e.element);\n    }), A(k(Zn(o, \"tr\"), function (e) {\n      return 0 === e.dom.childElementCount;\n    }), Yt), m.minCol !== m.maxCol && m.minRow !== m.maxRow || A(Zn(o, \"th,td\"), function (e) {\n      Wt(e, \"rowspan\"), Wt(e, \"colspan\");\n    }), Wt(o, Gt), Wt(o, \"data-snooker-col-series\"), Vl(o).adjustTableWidth(g), p;\n  }\n  function Lo(e) {\n    return \"img\" === Ye(e) ? 1 : Pt(e).fold(function () {\n      return ln(e).length;\n    }, function (e) {\n      return e.length;\n    });\n  }\n  function _o(e) {\n    return Pt(e).filter(function (e) {\n      return 0 !== e.trim().length || -1 < e.indexOf(\"\\xa0\");\n    }).isSome() || y(Gl, Ye(e));\n  }\n  function Wo(e) {\n    return o = _o, (_u2 = function u(e) {\n      for (var n = 0; n < e.childNodes.length; n++) {\n        var t = Ve.fromDom(e.childNodes[n]);\n        if (o(t)) return q.some(t);\n        var r = _u2(e.childNodes[n]);\n        if (r.isSome()) return r;\n      }\n      return q.none();\n    })(e.dom);\n    var o, _u2;\n  }\n  function jo(e) {\n    return $l(e, _o);\n  }\n  function Fo(n) {\n    return function () {\n      var e = Ve.fromTag(\"td\", n.dom);\n      return Xt(e, Ve.fromTag(\"br\", n.dom)), e;\n    };\n  }\n  function Ho(e) {\n    return function () {\n      return Ve.fromTag(\"col\", e.dom);\n    };\n  }\n  function Vo(e) {\n    return function () {\n      return Ve.fromTag(\"colgroup\", e.dom);\n    };\n  }\n  function qo(e) {\n    return function () {\n      return Ve.fromTag(\"tr\", e.dom);\n    };\n  }\n  function Uo(e, n, t) {\n    var r,\n      o,\n      u = (It(o = sr(r = e, n), ln(fr(r))), o);\n    return ae(t, function (e, n) {\n      null === e ? Wt(u, n) : Mn(u, n, e);\n    }), u;\n  }\n  function Go(e) {\n    return e;\n  }\n  function $o(a, f, s) {\n    function m(e, n) {\n      var t = e.element.dom,\n        r = n.dom;\n      Fn(t) && Fn(r) && (r.style.cssText = t.style.cssText), $n(n, \"height\"), 1 !== e.colspan && $n(n, \"width\");\n    }\n    return {\n      col: function col(e) {\n        var n = Ve.fromTag(Ye(e.element), f.dom);\n        return m(e, n), a(e.element, n), n;\n      },\n      colgroup: Vo(f),\n      row: qo(f),\n      cell: function cell(e) {\n        var n,\n          t,\n          r,\n          o,\n          u,\n          i = Ve.fromTag(Ye(e.element), f.dom),\n          c = s.getOr([\"strong\", \"em\", \"b\", \"i\", \"span\", \"font\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"p\", \"div\"]),\n          l = 0 < c.length ? (n = e.element, t = i, r = c, Wo(n).map(function (e) {\n            return I(sn(e, r.join(\",\"), function (e) {\n              return ce(e, n);\n            }), function (e, n) {\n              var t = ar(n);\n              return Wt(t, \"contenteditable\"), Xt(e, t), t;\n            }, t);\n          }).getOr(t)) : i;\n        return Xt(l, Ve.fromTag(\"br\")), m(e, i), o = e.element, u = i, ae(Kl, function (n, t) {\n          return Nn(o, t).filter(function (e) {\n            return y(n, e);\n          }).each(function (e) {\n            return Mn(u, t, e);\n          });\n        }), a(e.element, i), i;\n      },\n      replace: Uo,\n      colGap: Ho(f),\n      gap: Fo(f)\n    };\n  }\n  function Ko(e) {\n    return {\n      col: Ho(e),\n      colgroup: Vo(e),\n      row: qo(e),\n      cell: Fo(e),\n      replace: Go,\n      colGap: Ho(e),\n      gap: Fo(e)\n    };\n  }\n  function Xo(e) {\n    return O(e, Ve.fromDom);\n  }\n  function Yo(e) {\n    return Ve.fromDom(e.getBody());\n  }\n  function Jo(e) {\n    return e.getBoundingClientRect().width;\n  }\n  function Qo(e) {\n    return e.getBoundingClientRect().height;\n  }\n  function Zo(n) {\n    return function (e) {\n      return ce(e, Yo(n));\n    };\n  }\n  function eu(e) {\n    return /^\\d+(\\.\\d+)?$/.test(e) ? e + \"px\" : e;\n  }\n  function nu(e) {\n    function n(e) {\n      return Wt(e, \"data-mce-style\");\n    }\n    Wt(e, \"data-mce-style\"), A(nt(e), n), A(tt(e), n), A(ot(e), n);\n  }\n  function tu(e) {\n    return Ve.fromDom(e.selection.getStart());\n  }\n  function ru(e) {\n    return cr(e.get(), C([]), S, _);\n  }\n  function ou(e, n, t) {\n    return {\n      element: t,\n      mergable: (u = n, i = Xl, cr(e.get(), q.none, function (n) {\n        return n.length <= 1 ? q.none() : ir(u, i.firstSelectedSelector, i.lastSelectedSelector).map(function (e) {\n          return {\n            bounds: e,\n            cells: n\n          };\n        });\n      }, q.none)),\n      unmergable: 0 < (o = ru(e)).length && z(o, function (e) {\n        return r(e, \"rowspan\") || r(e, \"colspan\");\n      }) ? q.some(o) : q.none(),\n      selection: ru(e)\n    };\n    function r(e, n) {\n      return Nn(e, n).exists(function (e) {\n        return 1 < parseInt(e, 10);\n      });\n    }\n    var o, u, i;\n  }\n  function uu(o) {\n    return function (e, n) {\n      var t,\n        r = Ye(e);\n      return In(\"col\" === r || \"colgroup\" === r ? rt(t = e).bind(function (e) {\n        return Ur(e, Xl.firstSelectedSelector);\n      }).fold(C(t), function (e) {\n        return e[0];\n      }) : e, o, n);\n    };\n  }\n  function iu(a, e, f) {\n    a.on(\"BeforeGetContent\", function (t) {\n      !0 === t.selection && cr(e.get(), E, function (e) {\n        t.preventDefault(), rt(e[0]).map(function (e) {\n          var n = zo(e, \"[data-mce-selected]\");\n          return nu(n), [n];\n        }).each(function (e) {\n          var n;\n          t.content = \"text\" === t.format ? O(e, function (e) {\n            return e.dom.innerText;\n          }).join(\"\") : (n = a, O(e, function (e) {\n            return n.selection.serializer.serialize(e.dom, {});\n          }).join(\"\"));\n        });\n      }, E);\n    }), a.on(\"BeforeSetContent\", function (l) {\n      !0 === l.selection && !0 === l.paste && j(Ql(e)).each(function (c) {\n        rt(c).each(function (e) {\n          var n,\n            t,\n            r,\n            o,\n            u = k((n = l.content, (t = document.createElement(\"div\")).innerHTML = n, ln(Ve.fromDom(t))), function (e) {\n              return \"meta\" !== Ye(e);\n            }),\n            i = en(\"table\");\n          1 === u.length && i(u[0]) && (l.preventDefault(), r = Ko(Ve.fromDom(a.getDoc())), o = {\n            element: c,\n            clipboard: u[0],\n            generators: r\n          }, f.pasteCells(e, o).each(function () {\n            a.focus();\n          }));\n        });\n      });\n    });\n  }\n  function cu(e, n, t) {\n    for (var r = 0, o = e; o < n; o++) r += void 0 !== t[o] ? t[o] : 0;\n    return r;\n  }\n  function lu(e, n, t) {\n    var r, o, u, i;\n    A((r = e, o = n, $t.hasColumns(r) ? (i = o, O($t.justColumns(r), function (e, n) {\n      return {\n        element: e.element,\n        width: i[n],\n        colspan: e.colspan\n      };\n    })) : (u = o, O($t.justCells(r), function (e) {\n      var n = cu(e.column, e.column + e.colspan, u);\n      return {\n        element: e.element,\n        width: n,\n        colspan: e.colspan\n      };\n    }))), function (e) {\n      t.setElementWidth(e.element, e.width);\n    });\n  }\n  function au(e, n, t, r, o) {\n    var u,\n      i,\n      c,\n      l,\n      a,\n      f,\n      s,\n      m,\n      d,\n      g,\n      p = $t.fromTable(e),\n      b = o.getCellDelta(n),\n      h = o.getWidths(p, o),\n      v = t === p.grid.columns - 1,\n      w = r.clampTableDelta(h, t, b, o.minCellWidth(), v),\n      y = (i = t, c = w, l = o, a = r, m = (u = h).slice(0), s = i, d = 0 === (f = u).length ? ea.none() : 1 === f.length ? ea.only(0) : 0 === s ? ea.left(0, 1) : s === f.length - 1 ? ea.right(s - 1, s) : 0 < s && s < f.length - 1 ? ea.middle(s - 1, s, s + 1) : ea.none(), g = C(O(m, C(0))), d.fold(g, function (e) {\n        return l.singleColumnWidth(m[e], c);\n      }, function (e, n) {\n        return a.calcLeftEdgeDeltas(m, e, n, c, l.minCellWidth(), l.isRelative);\n      }, function (e, n, t) {\n        return a.calcMiddleDeltas(m, e, n, t, c, l.minCellWidth(), l.isRelative);\n      }, function (e, n) {\n        return a.calcRightEdgeDeltas(m, e, n, c, l.minCellWidth(), l.isRelative);\n      }));\n    lu(p, O(y, function (e, n) {\n      return e + h[n];\n    }), o), r.resizeTable(o.adjustTableWidth, w, v);\n  }\n  function fu(e) {\n    return O(e, C(0));\n  }\n  function su(e, n, t, r, o) {\n    return o(e.slice(0, n)).concat(r).concat(o(e.slice(t)));\n  }\n  function mu(i) {\n    return function (e, n, t, r) {\n      if (i(t)) {\n        var o = Math.max(r, e[n] - Math.abs(t)),\n          u = Math.abs(o - e[n]);\n        return 0 <= t ? u : -u;\n      }\n      return t;\n    };\n  }\n  function du() {\n    function f(e, t, n, r) {\n      var o = (100 + n) / 100,\n        u = Math.max(r, (e[t] + n) / o);\n      return O(e, function (e, n) {\n        return (n === t ? u : e / o) - e;\n      });\n    }\n    function c(e, n, t, r, o, u) {\n      return u ? f(e, n, r, o) : (l = t, a = na(i = e, c = n, r, o), su(i, c, l + 1, [a, 0], fu));\n      var i, c, l, a;\n    }\n    return {\n      resizeTable: function resizeTable(e, n) {\n        return e(n);\n      },\n      clampTableDelta: na,\n      calcLeftEdgeDeltas: c,\n      calcMiddleDeltas: function calcMiddleDeltas(e, n, t, r, o, u, i) {\n        return c(e, t, r, o, u, i);\n      },\n      calcRightEdgeDeltas: function calcRightEdgeDeltas(e, n, t, r, o, u) {\n        if (u) return f(e, t, r, o);\n        var i = na(e, t, r, o);\n        return fu(e.slice(0, t)).concat([i]);\n      },\n      calcRedestributedWidths: function calcRedestributedWidths(e, n, t, r) {\n        if (r) {\n          var o = (n + t) / n,\n            u = O(e, function (e) {\n              return e / o;\n            });\n          return {\n            delta: 100 * o - 100,\n            newSizes: u\n          };\n        }\n        return {\n          delta: t,\n          newSizes: e\n        };\n      }\n    };\n  }\n  function gu() {\n    function i(e, n, t, r, o) {\n      var u = ta(e, 0 <= r ? t : n, r, o);\n      return su(e, n, t + 1, [u, -u], fu);\n    }\n    return {\n      resizeTable: function resizeTable(e, n, t) {\n        t && e(n);\n      },\n      clampTableDelta: function clampTableDelta(e, n, t, r, o) {\n        if (o) {\n          if (0 <= t) return t;\n          var u = B(e, function (e, n) {\n            return e + n - r;\n          }, 0);\n          return Math.max(-u, t);\n        }\n        return na(e, n, t, r);\n      },\n      calcLeftEdgeDeltas: i,\n      calcMiddleDeltas: function calcMiddleDeltas(e, n, t, r, o, u) {\n        return i(e, t, r, o, u);\n      },\n      calcRightEdgeDeltas: function calcRightEdgeDeltas(e, n, t, r, o, u) {\n        return u ? fu(e) : O(e, C(r / e.length));\n      },\n      calcRedestributedWidths: function calcRedestributedWidths(e, n, t, r) {\n        return {\n          delta: 0,\n          newSizes: e\n        };\n      }\n    };\n  }\n  function pu(e, n, t) {\n    var r = t.substring(0, t.length - e.length),\n      o = parseFloat(r);\n    return r === o.toString() ? n(o) : ra.invalid(t);\n  }\n  function bu(e, n, t) {\n    var r,\n      o,\n      u,\n      i,\n      c = oa.from(t),\n      l = z(e, function (e) {\n        return \"0px\" === e;\n      }) ? (r = e.length, o = c.fold(function () {\n        return C(\"\");\n      }, function (e) {\n        return C(e / r + \"px\");\n      }, function () {\n        return C(100 / r + \"%\");\n      }), D(r, o)) : (u = e, i = n, c.fold(function () {\n        return u;\n      }, function (e) {\n        return t = (n = e) / i, O(u, function (e) {\n          return oa.from(e).fold(function () {\n            return e;\n          }, function (e) {\n            return e * t + \"px\";\n          }, function (e) {\n            return e / 100 * n + \"px\";\n          });\n        });\n        var n, t;\n      }, function (e) {\n        return n = i, O(u, function (e) {\n          return oa.from(e).fold(function () {\n            return e;\n          }, function (e) {\n            return e / n * 100 + \"%\";\n          }, function (e) {\n            return e + \"%\";\n          });\n        });\n        var n;\n      }));\n    return ua(l);\n  }\n  function hu(e, n) {\n    return 0 === e.length ? n : I(e, function (e, n) {\n      return oa.from(n).fold(C(0), S, S) + e;\n    }, 0);\n  }\n  function vu(e) {\n    return ia(e).fold(C(\"px\"), C(\"px\"), C(\"%\"));\n  }\n  function wu(l, e, n) {\n    var a = $t.fromTable(l),\n      i = a.all,\n      f = $t.justCells(a),\n      s = $t.justColumns(a);\n    e.each(function (e) {\n      var t,\n        r,\n        o,\n        u,\n        n = vu(e),\n        i = vr(l),\n        c = bu(ko(a, l, Do, Io), i, e);\n      $t.hasColumns(a) ? (o = c, u = n, A(s, function (e, n) {\n        var t = hu([o[n]], Ft());\n        Vn(e.element, \"width\", t + u);\n      })) : (t = c, r = n, A(f, function (e) {\n        var n = hu(t.slice(e.column, e.colspan + e.column), Ft());\n        Vn(e.element, \"width\", n + r);\n      })), Vn(l, \"width\", e);\n    }), n.each(function (e) {\n      var n = vu(e),\n        t = Tr(l),\n        r = bu(Mo(a, l, co, Oo, Io), t, e),\n        o = i,\n        u = n;\n      A(f, function (e) {\n        var n = hu(r.slice(e.row, e.rowspan + e.row), Ht());\n        Vn(e.element, \"height\", n + u);\n      }), A(o, function (e, n) {\n        Vn(e.element, \"height\", r[n]);\n      }), Vn(l, \"height\", e);\n    });\n  }\n  function yu(e) {\n    return $t.fromTable(e).grid;\n  }\n  function Cu(n) {\n    var o = [];\n    return {\n      bind: function bind(e) {\n        if (void 0 === e) throw new Error(\"Event bind error: undefined handler\");\n        o.push(e);\n      },\n      unbind: function unbind(n) {\n        o = k(o, function (e) {\n          return e !== n;\n        });\n      },\n      trigger: function trigger() {\n        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n        var r = {};\n        A(n, function (e, n) {\n          r[e] = t[n];\n        }), A(o, function (e) {\n          e(r);\n        });\n      }\n    };\n  }\n  function Su(e) {\n    return {\n      registry: fe(e, function (e) {\n        return {\n          bind: e.bind,\n          unbind: e.unbind\n        };\n      }),\n      trigger: fe(e, function (e) {\n        return e.trigger;\n      })\n    };\n  }\n  function Tu(e) {\n    return e.slice(0).sort();\n  }\n  function xu(n, e) {\n    var t = k(e, function (e) {\n      return !y(n, e);\n    });\n    0 < t.length && function () {\n      throw new Error(\"Unsupported keys for object: \" + Tu(t).join(\", \"));\n    }();\n  }\n  function Ru(e) {\n    return function (r, o, u) {\n      if (0 === o.length) throw new Error(\"You must specify at least one required field.\");\n      var t;\n      return function (n, e) {\n        if (!a(e)) throw new Error(\"The \" + n + \" fields must be an array. Was: \" + e + \".\");\n        A(e, function (e) {\n          if (!T(e)) throw new Error(\"The value \" + e + \" in the \" + n + \" fields was not a string.\");\n        });\n      }(\"required\", o), w(t = Tu(o), function (e, n) {\n        return n < t.length - 1 && e === t[n + 1];\n      }).each(function (e) {\n        throw new Error(\"The field: \" + e + \" occurs more than once in the combined fields: [\" + t.join(\", \") + \"].\");\n      }), function (n) {\n        var t = Ue(n);\n        z(o, function (e) {\n          return y(t, e);\n        }) || function (e, n) {\n          throw new Error(\"All required keys (\" + Tu(e).join(\", \") + \") were not specified. Specified keys were: \" + Tu(n).join(\", \") + \".\");\n        }(o, t), r(o, t);\n        var e = k(o, function (e) {\n          return !u.validate(n[e], e);\n        });\n        return 0 < e.length && function (e, n) {\n          throw new Error(\"All values need to be of type: \" + n + \". Keys (\" + Tu(e).join(\", \") + \") were not.\");\n        }(e, u.label), n;\n      };\n    }(xu, e, {\n      validate: c,\n      label: \"function\"\n    });\n  }\n  function Du() {\n    var u,\n      i,\n      e = {\n        onEvent: E,\n        reset: E,\n        events: Su({\n          move: Cu([\"info\"])\n        }).registry\n      },\n      n = (u = q.none(), {\n        onEvent: function onEvent(e, o) {\n          o.extract(e).each(function (e) {\n            var n = o,\n              t = e,\n              r = u.map(function (e) {\n                return n.compare(e, t);\n              });\n            u = q.some(t), r.each(function (e) {\n              i.trigger.move(e);\n            });\n          });\n        },\n        reset: function reset() {\n          u = q.none();\n        },\n        events: (i = Su({\n          move: Cu([\"info\"])\n        })).registry\n      }),\n      t = e;\n    return {\n      on: function on() {\n        t.reset(), t = n;\n      },\n      off: function off() {\n        t.reset(), t = e;\n      },\n      isOn: function isOn() {\n        return t === n;\n      },\n      onEvent: function onEvent(e, n) {\n        t.onEvent(e, n);\n      },\n      events: n.events\n    };\n  }\n  function Ou(e) {\n    function n() {\n      return e.stopPropagation();\n    }\n    function t() {\n      return e.preventDefault();\n    }\n    var r,\n      o,\n      u = Ve.fromDom(function (e) {\n        if (wn() && l(e.target)) {\n          var n = Ve.fromDom(e.target);\n          if (gn(n) && Cn(n) && e.composed && e.composedPath) {\n            var t = e.composedPath();\n            if (t) return j(t);\n          }\n        }\n        return q.from(e.target);\n      }(e).getOr(e.target)),\n      i = (r = t, o = n, function () {\n        for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];\n        return r(o.apply(null, e));\n      });\n    return {\n      target: u,\n      x: e.clientX,\n      y: e.clientY,\n      stop: n,\n      prevent: t,\n      kill: i,\n      raw: e\n    };\n  }\n  function Au(e, n, t) {\n    return o = n, u = !1, i = sa, c = t, l = function l(e) {\n      i(e) && c(Ou(e));\n    }, (r = e).dom.addEventListener(o, l, u), {\n      unbind: P(fa, r, o, l, u)\n    };\n    var r, o, u, i, c, l;\n  }\n  function ku(e) {\n    return void 0 !== e.dom.classList;\n  }\n  function Iu(e, n) {\n    return o = n, Mn(e, t = \"class\", (void 0 === (r = Pn(e, t)) || \"\" === r ? [] : r.split(\" \")).concat([o]).join(\" \")), 1;\n    var t, r, o;\n  }\n  function Bu(e, n) {\n    ku(e) ? e.dom.classList.add(n) : Iu(e, n);\n  }\n  function Mu(e, n) {\n    return ku(e) && e.dom.classList.contains(n);\n  }\n  function Eu(e) {\n    var n = e.replace(/\\./g, \"-\");\n    return {\n      resolve: function resolve(e) {\n        return n + \"-\" + e;\n      }\n    };\n  }\n  function Pu(e) {\n    return In(e, \"[contenteditable]\");\n  }\n  function Nu(e, n) {\n    return void 0 === n && (n = !1), !He().browser.isIE() && Sn(e) ? e.dom.isContentEditable : Pu(e).fold(C(n), function (e) {\n      return \"true\" === pa(e);\n    });\n  }\n  function zu(e) {\n    A(dn(e.parent(), \".\" + ha), Yt);\n  }\n  function Lu(t, e, r) {\n    var o = t.origin();\n    A(e, function (e) {\n      e.each(function (e) {\n        var n = r(o, e);\n        Bu(n, ha), Xt(t.parent(), n);\n      });\n    });\n  }\n  function _u(e, n, t, r, o) {\n    var u,\n      i,\n      c,\n      l,\n      a,\n      f = Dr(t),\n      s = n.isResizable,\n      m = 0 < r.length ? co.positions(r, t) : [],\n      d = 0 < m.length ? (u = s, N(e.all, function (e, n) {\n        return u(e.element) ? [n] : [];\n      })) : [],\n      g = k(m, function (e, n) {\n        return R(d, function (e) {\n          return n === e;\n        });\n      });\n    i = n, c = g, l = f, a = wr(t), Lu(i, c, function (e, n) {\n      var t,\n        r,\n        o,\n        u,\n        i,\n        c = (t = n.row, r = l.left - e.left, o = n.y - e.top, u = a, qn(i = Ve.fromTag(\"div\"), {\n          position: \"absolute\",\n          left: r + \"px\",\n          top: o - 3.5 + \"px\",\n          height: \"7px\",\n          width: u + \"px\"\n        }), En(i, {\n          \"data-row\": t,\n          role: \"presentation\"\n        }), i);\n      return Bu(c, va), c;\n    });\n    var p,\n      b,\n      h,\n      v,\n      w,\n      y,\n      C,\n      S = 0 < o.length ? ao.positions(o, t) : [],\n      T = 0 < S.length ? (b = s, h = [], D((p = e).grid.columns, function (e) {\n        $t.getColumnAt(p, e).map(function (e) {\n          return e.element;\n        }).forall(b) && h.push(e);\n      }), k(h, function (n) {\n        return z($t.filterItems(p, function (e) {\n          return e.column === n;\n        }), function (e) {\n          return b(e.element);\n        });\n      })) : [],\n      x = k(S, function (e, n) {\n        return R(T, function (e) {\n          return n === e;\n        });\n      });\n    v = n, w = x, y = f, C = xr(t), Lu(v, w, function (e, n) {\n      var t,\n        r,\n        o,\n        u,\n        i,\n        c = (t = n.col, r = n.x - e.left, o = y.top - e.top, u = C, qn(i = Ve.fromTag(\"div\"), {\n          position: \"absolute\",\n          left: r - 3.5 + \"px\",\n          top: o + \"px\",\n          height: u + \"px\",\n          width: \"7px\"\n        }), En(i, {\n          \"data-column\": t,\n          role: \"presentation\"\n        }), i);\n      return Bu(c, wa), c;\n    });\n  }\n  function Wu(e, n) {\n    var t;\n    zu(e), e.isResizable(n) && _u(t = $t.fromTable(n), e, n, Cr(t), yr(t));\n  }\n  function ju(e, n) {\n    A(dn(e.parent(), \".\" + ha), n);\n  }\n  function Fu(e) {\n    ju(e, function (e) {\n      Vn(e, \"display\", \"none\");\n    });\n  }\n  function Hu(e) {\n    ju(e, function (e) {\n      Vn(e, \"display\", \"block\");\n    });\n  }\n  function Vu(o) {\n    function e(e, n) {\n      return q.from(Pn(e, n));\n    }\n    var n,\n      t,\n      r,\n      u,\n      i,\n      c,\n      l = (u = Su({\n        drag: Cu([\"xDelta\", \"yDelta\", \"target\"])\n      }), i = q.none(), (c = {\n        mutate: function mutate(e, n) {\n          r.trigger.drag(e, n);\n        },\n        events: (r = Su({\n          drag: Cu([\"xDelta\", \"yDelta\"])\n        })).registry\n      }).events.drag.bind(function (n) {\n        i.each(function (e) {\n          u.trigger.drag(n.xDelta, n.yDelta, e);\n        });\n      }), {\n        assign: function assign(e) {\n          i = q.some(e);\n        },\n        get: function get() {\n          return i;\n        },\n        mutate: c.mutate,\n        events: u.registry\n      }),\n      a = (t = void 0 !== (n = {}).mode ? n.mode : ga, function (n, t, e) {\n        function r() {\n          m.stop(), l.isOn() && (l.off(), c.trigger.stop());\n        }\n        var o,\n          u,\n          i = !1,\n          c = Su({\n            start: Cu([]),\n            stop: Cu([])\n          }),\n          l = Du(),\n          a = (o = r, u = null, {\n            cancel: f,\n            throttle: function throttle() {\n              for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];\n              f(), u = setTimeout(function () {\n                u = null, o.apply(null, e);\n              }, 200);\n            }\n          });\n        function f() {\n          h(u) || (clearTimeout(u), u = null);\n        }\n        function s(t) {\n          return function () {\n            for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];\n            i && t.apply(null, e);\n          };\n        }\n        l.events.move.bind(function (e) {\n          t.mutate(n, e.info);\n        });\n        var m = t.sink(aa({\n          forceDrop: r,\n          drop: s(r),\n          move: s(function (e) {\n            a.cancel(), l.onEvent(e, t);\n          }),\n          delayDrop: s(a.throttle)\n        }), e);\n        return {\n          element: m.element,\n          go: function go(e) {\n            m.start(e), l.on(), c.trigger.start();\n          },\n          on: function on() {\n            i = !0;\n          },\n          off: function off() {\n            i = !1;\n          },\n          destroy: function destroy() {\n            m.destroy();\n          },\n          events: c.registry\n        };\n      }(l, t, n)),\n      f = q.none();\n    function s(e, n) {\n      return Qn(e, n) - Kn(e, \"data-initial-\" + n, 0);\n    }\n    function m(e, n) {\n      b.trigger.startAdjust(), l.assign(e), Mn(e, \"data-initial-\" + n, Qn(e, n)), Bu(e, ya), Vn(e, \"opacity\", \"0.2\"), a.go(o.parent());\n    }\n    function d(e) {\n      return ce(e, o.view());\n    }\n    l.events.drag.bind(function (t) {\n      e(t.target, \"data-row\").each(function (e) {\n        var n = Qn(t.target, \"top\");\n        Vn(t.target, \"top\", n + t.yDelta + \"px\");\n      }), e(t.target, \"data-column\").each(function (e) {\n        var n = Qn(t.target, \"left\");\n        Vn(t.target, \"left\", n + t.xDelta + \"px\");\n      });\n    }), a.events.stop.bind(function () {\n      l.get().each(function (r) {\n        f.each(function (t) {\n          e(r, \"data-row\").each(function (e) {\n            var n = s(r, \"top\");\n            Wt(r, \"data-initial-top\"), b.trigger.adjustHeight(t, n, parseInt(e, 10));\n          }), e(r, \"data-column\").each(function (e) {\n            var n = s(r, \"left\");\n            Wt(r, \"data-initial-left\"), b.trigger.adjustWidth(t, n, parseInt(e, 10));\n          }), Wu(o, t);\n        });\n      });\n    });\n    var g = Au(o.parent(), \"mousedown\", function (e) {\n        Mu(e.target, va) && m(e.target, \"top\"), Mu(e.target, wa) && m(e.target, \"left\");\n      }),\n      p = Au(o.view(), \"mouseover\", function (e) {\n        In(e.target, \"table\", d).filter(Nu).fold(function () {\n          Sn(e.target) && zu(o);\n        }, function (e) {\n          f = q.some(e), Wu(o, e);\n        });\n      }),\n      b = Su({\n        adjustHeight: Cu([\"table\", \"delta\", \"row\"]),\n        adjustWidth: Cu([\"table\", \"delta\", \"column\"]),\n        startAdjust: Cu([])\n      });\n    return {\n      destroy: function destroy() {\n        g.unbind(), p.unbind(), a.destroy(), zu(o);\n      },\n      refresh: function refresh(e) {\n        Wu(o, e);\n      },\n      on: a.on,\n      off: a.off,\n      hideBars: P(Fu, o),\n      showBars: P(Hu, o),\n      events: b.registry\n    };\n  }\n  function qu(e, n) {\n    return e.fire(\"newrow\", {\n      node: n\n    });\n  }\n  function Uu(e, n) {\n    return e.fire(\"newcell\", {\n      node: n\n    });\n  }\n  function Gu(e, n, t) {\n    e.fire(\"TableModified\", _K(_K({}, t), {\n      table: n\n    }));\n  }\n  function $u(e) {\n    return e.getParam(\"table_sizing_mode\", \"auto\");\n  }\n  function Ku(e) {\n    return e.getParam(\"table_responsive_width\");\n  }\n  function Xu(e) {\n    return e.getParam(\"table_border_widths\", Ra, \"array\");\n  }\n  function Yu(e) {\n    return e.getParam(\"table_border_styles\", Da, \"array\");\n  }\n  function Ju(e) {\n    return e.getParam(\"table_default_attributes\", Oa, \"object\");\n  }\n  function Qu(e) {\n    return e.getParam(\"table_default_styles\", function (e) {\n      var n;\n      if (ka(e)) {\n        var t = e.dom,\n          r = null !== (n = t.getParent(e.selection.getStart(), t.isBlock)) && void 0 !== n ? n : e.getBody(),\n          o = Qr(Ve.fromDom(r));\n        return _K(_K({}, xa), {\n          width: o + \"px\"\n        });\n      }\n      return Ia(e) ? se(xa, function (e, n) {\n        return \"width\" !== n;\n      }) : xa;\n    }(e), \"object\");\n  }\n  function Zu(e) {\n    return e.getParam(\"table_cell_advtab\", !0, \"boolean\");\n  }\n  function ei(e) {\n    return e.getParam(\"table_row_advtab\", !0, \"boolean\");\n  }\n  function ni(e) {\n    return e.getParam(\"table_advtab\", !0, \"boolean\");\n  }\n  function ti(e) {\n    return e.getParam(\"table_style_by_css\", !1, \"boolean\");\n  }\n  function ri(e) {\n    return e.getParam(\"table_cell_class_list\", [], \"array\");\n  }\n  function oi(e) {\n    return e.getParam(\"table_class_list\", [], \"array\");\n  }\n  function ui(e) {\n    return \"relative\" === $u(e) || !0 === Ku(e);\n  }\n  function ii(e) {\n    var n = \"section\",\n      t = e.getParam(\"table_header_type\", n, \"string\");\n    return y([\"section\", \"cells\", \"sectionCells\", \"auto\"], t) ? t : n;\n  }\n  function ci(e) {\n    var n = e.getParam(\"table_column_resizing\", Aa, \"string\");\n    return w([\"preservetable\", \"resizetable\"], function (e) {\n      return e === n;\n    }).getOr(Aa);\n  }\n  function li(e) {\n    return \"preservetable\" === ci(e);\n  }\n  function ai(e) {\n    return \"resizetable\" === ci(e);\n  }\n  function fi(e) {\n    var n = e.getParam(\"table_clone_elements\");\n    return T(n) ? q.some(n.split(/[ ,]/)) : Array.isArray(n) ? q.some(n) : q.none();\n  }\n  function si(e) {\n    return e.getParam(\"table_background_color_map\", [], \"array\");\n  }\n  function mi(e) {\n    return e.getParam(\"table_border_color_map\", [], \"array\");\n  }\n  function di(e, n) {\n    return (ui(e) ? Ul : ka(e) ? ql : Vl)(n);\n  }\n  function gi(e) {\n    Wt(e, \"width\");\n  }\n  function pi(e) {\n    return \"false\" !== Pn(e, \"data-mce-resize\");\n  }\n  function bi(p) {\n    function m(e) {\n      return \"TABLE\" === e.nodeName;\n    }\n    function b(e) {\n      return di(p, e);\n    }\n    function h() {\n      return (li(p) ? gu : du)();\n    }\n    var d,\n      g,\n      v = q.none(),\n      w = q.none(),\n      y = q.none();\n    return p.on(\"init\", function () {\n      var e,\n        n,\n        t,\n        r,\n        o,\n        u,\n        i,\n        c,\n        l,\n        a,\n        m,\n        f,\n        s,\n        d,\n        g = (n = pi, (e = p).inline ? (u = Yo(e), qn(c = Ve.fromTag(\"div\"), {\n          position: \"static\",\n          height: \"0\",\n          width: \"0\",\n          padding: \"0\",\n          margin: \"0\",\n          border: \"0\"\n        }), Xt(Tn(Ve.fromDom(document)), c), c, i = n, {\n          parent: C(c),\n          view: C(u),\n          origin: C(uo(0, 0)),\n          isResizable: i\n        }) : Il(Ve.fromDom(e.getDoc()), n));\n      y = q.some(g), o = p.getParam(\"object_resizing\", !0), (T(o) ? \"table\" === o : o) && p.getParam(\"table_resize_bars\", !0, \"boolean\") && (t = h(), l = t, a = b, m = co, f = ao, s = Vu(g), d = Su({\n        beforeResize: Cu([\"table\", \"type\"]),\n        afterResize: Cu([\"table\", \"type\"]),\n        startDrag: Cu([])\n      }), s.events.adjustHeight.bind(function (e) {\n        var n = e.table;\n        d.trigger.beforeResize(n, \"row\");\n        var t,\n          r,\n          o,\n          u,\n          i,\n          c,\n          l,\n          a,\n          f,\n          s = m.delta(e.delta, n);\n        t = n, r = s, o = e.row, u = m, l = $t.fromTable(t), a = O(Mo(l, t, u, To, function (e) {\n          return e.getOrThunk(Ht);\n        }), function (e, n) {\n          return o === n ? Math.max(r + e, Ht()) : e;\n        }), i = a, f = O($t.justCells(l), function (e) {\n          var n = cu(e.row, e.row + e.rowspan, i);\n          return {\n            element: e.element,\n            height: n,\n            rowspan: e.rowspan\n          };\n        }), A((c = a, O(l.all, function (e, n) {\n          return {\n            element: e.element,\n            height: c[n]\n          };\n        })), function (e) {\n          ho(e.element, e.height);\n        }), A(f, function (e) {\n          ho(e.element, e.height);\n        }), ho(t, I(a, function (e, n) {\n          return e + n;\n        }, 0)), d.trigger.afterResize(n, \"row\");\n      }), s.events.startAdjust.bind(function (e) {\n        d.trigger.startDrag();\n      }), s.events.adjustWidth.bind(function (e) {\n        var n = e.table;\n        d.trigger.beforeResize(n, \"col\");\n        var t = f.delta(e.delta, n),\n          r = a(n);\n        au(n, t, e.column, l, r), d.trigger.afterResize(n, \"col\");\n      }), (r = {\n        on: s.on,\n        off: s.off,\n        hideBars: s.hideBars,\n        showBars: s.showBars,\n        destroy: s.destroy,\n        events: d.registry\n      }).on(), r.events.startDrag.bind(function (e) {\n        v = q.some(p.selection.getRng());\n      }), r.events.beforeResize.bind(function (e) {\n        var n,\n          t = e.table.dom,\n          r = p,\n          o = Jo(n = t),\n          u = Qo(t),\n          i = Pa + e.type;\n        r.fire(\"ObjectResizeStart\", {\n          target: n,\n          width: o,\n          height: u,\n          origin: i\n        });\n      }), r.events.afterResize.bind(function (e) {\n        var n,\n          t,\n          r,\n          o,\n          u,\n          i = e.table,\n          c = i.dom;\n        nu(i), v.each(function (e) {\n          p.selection.setRng(e), p.focus();\n        }), n = p, r = Jo(t = c), o = Qo(c), u = Pa + e.type, n.fire(\"ObjectResized\", {\n          target: t,\n          width: r,\n          height: o,\n          origin: u\n        }), p.undoManager.add();\n      }), w = q.some(r));\n    }), p.on(\"ObjectResizeStart\", function (e) {\n      var n,\n        t,\n        r,\n        o,\n        u = e.target;\n      m(u) && (n = Ve.fromDom(u), A(p.dom.select(\".mce-clonedresizable\"), function (e) {\n        p.dom.addClass(e, \"mce-\" + ci(p) + \"-columns\");\n      }), !Ml(n) && ka(p) ? Ma(n) : !Bl(n) && ui(p) && Ba(n), El(n) && Ae(e.origin, Pa) && Ba(n), d = e.width, g = Ia(p) ? \"\" : (o = (t = p).dom.getStyle(r = u, \"width\") || t.dom.getAttrib(r, \"width\"), q.from(o).filter(ne).getOr(\"\")));\n    }), p.on(\"ObjectResized\", function (e) {\n      var n,\n        t,\n        r,\n        o,\n        u,\n        i,\n        c,\n        l,\n        a,\n        f,\n        s = e.target;\n      m(s) && (n = Ve.fromDom(s), t = e.origin, Ae(t, \"corner-\") && (r = n, o = e.width, f = ee(t, \"e\"), \"\" === g && Ba(r), o !== d && \"\" !== g ? (Vn(r, \"width\", g), u = h(), i = b(r), c = li(p) || f ? yu(r).columns - 1 : 0, au(r, o - d, c, u, i)) : /^(\\d+(\\.\\d+)?)%$/.test(g) && Vn(r, \"width\", o * parseFloat(g.replace(\"%\", \"\")) / d + \"%\"), /^(\\d+(\\.\\d+)?)px$/.test(g) && (a = $t.fromTable(l = r), $t.hasColumns(a) || A(nt(l), function (e) {\n        Vn(e, \"width\", Un(e, \"width\")), Wt(e, \"width\");\n      }))), nu(n), Gu(p, n.dom, Ca));\n    }), p.on(\"SwitchMode\", function () {\n      w.each(function (e) {\n        p.mode.isReadOnly() ? e.hideBars() : e.showBars();\n      });\n    }), {\n      lazyResize: function lazyResize() {\n        return w;\n      },\n      lazyWire: function lazyWire() {\n        return y.getOr(Il(Ve.fromDom(p.getBody()), pi));\n      },\n      destroy: function destroy() {\n        w.each(function (e) {\n          e.destroy();\n        }), y.each(function (e) {\n          var n = e;\n          p.inline && Yt(n.parent());\n        });\n      }\n    };\n  }\n  function hi(e, n) {\n    return {\n      element: e,\n      offset: n\n    };\n  }\n  function vi(e, n) {\n    return (e.property().isText(n) ? e.property().getText(n) : e.property().children(n)).length;\n  }\n  function wi(t, r) {\n    1 === Xn(t, \"colspan\") && yo(t).bind(function (e) {\n      return o = [\"fixed\", \"relative\", \"empty\"], q.from(so.exec(e)).bind(function (e) {\n        var n = Number(e[1]),\n          t = e[2],\n          r = t;\n        return R(o, function (e) {\n          return R(fo[e], function (e) {\n            return r === e;\n          });\n        }) ? q.some({\n          value: n,\n          unit: t\n        }) : q.none();\n      });\n      var o;\n    }).each(function (e) {\n      var n = e.value / 2;\n      xo(t, n, e.unit), xo(r, n, e.unit);\n    });\n  }\n  function yi(e) {\n    return z(e, function (e) {\n      return Wa(e.element);\n    });\n  }\n  function Ci(e) {\n    var n = \"thead\" === e.section,\n      t = Ln(ja(e.cells), \"th\");\n    return n || t ? {\n      type: \"header\",\n      subType: n && t ? \"sectionCells\" : n ? \"section\" : \"cells\"\n    } : \"tfoot\" === e.section ? {\n      type: \"footer\"\n    } : {\n      type: \"body\"\n    };\n  }\n  function Si(e, n, t) {\n    return we(t(e.element, n), !0, e.isLocked);\n  }\n  function Ti(e, n) {\n    return e.section !== n ? ye(e.element, e.cells, n, e.isNew) : e;\n  }\n  function xi() {\n    return {\n      transformRow: Ti,\n      transformCell: function transformCell(e, n, t) {\n        var r,\n          o,\n          u = t(e.element, n);\n        return we(\"td\" !== Ye(u) ? (o = sr(r = u, \"td\"), Rt(r, o), It(o, ln(r)), Yt(r), o) : u, e.isNew, e.isLocked);\n      }\n    };\n  }\n  function Ri() {\n    return {\n      transformRow: Ti,\n      transformCell: Si\n    };\n  }\n  function Di() {\n    return {\n      transformRow: function transformRow(e, n) {\n        return Ti(e, \"thead\" === n ? \"tbody\" : n);\n      },\n      transformCell: Si\n    };\n  }\n  function Oi(e, n, t, r) {\n    t === r ? Wt(e, n) : Mn(e, n, t);\n  }\n  function Ai(e, n, t) {\n    F(mn(e, n)).fold(function () {\n      return Ot(e, t);\n    }, function (e) {\n      return Dt(e, t);\n    });\n  }\n  function ki(u, e) {\n    function t(e, n) {\n      var t, r, o;\n      It((Bt(o = An(t = u, r = n).getOrThunk(function () {\n        var e = Ve.fromTag(r, nn(t).dom);\n        return \"thead\" === r ? Ai(t, \"caption,colgroup\", e) : \"colgroup\" === r ? Ai(t, \"caption\", e) : Xt(t, e), e;\n      })), o), (\"colgroup\" === n ? function (e) {\n        return N(e, function (e) {\n          return O(e.cells, function (e) {\n            return Oi(e.element, \"span\", e.colspan, 1), e.element;\n          });\n        });\n      } : function (e) {\n        return O(e, function (e) {\n          e.isNew && i.push(e.element);\n          var n = e.element;\n          return Bt(n), A(e.cells, function (e) {\n            e.isNew && c.push(e.element), Oi(e.element, \"colspan\", e.colspan, 1), Oi(e.element, \"rowspan\", e.rowspan, 1), Xt(n, e.element);\n          }), n;\n        });\n      })(e));\n    }\n    function n(e, n) {\n      0 < e.length ? t(e, n) : An(u, n).each(Yt);\n    }\n    var i = [],\n      c = [],\n      r = [],\n      o = [],\n      l = [],\n      a = [];\n    return A(e, function (e) {\n      switch (e.section) {\n        case \"thead\":\n          r.push(e);\n          break;\n        case \"tbody\":\n          o.push(e);\n          break;\n        case \"tfoot\":\n          l.push(e);\n          break;\n        case \"colgroup\":\n          a.push(e);\n      }\n    }), n(a, \"colgroup\"), n(r, \"thead\"), n(o, \"tbody\"), n(l, \"tfoot\"), {\n      newRows: i,\n      newCells: c\n    };\n  }\n  function Ii(e, n) {\n    if (0 === e.length) return 0;\n    var t = e[0];\n    return b(e, function (e) {\n      return !n(t.element, e.element);\n    }).getOr(e.length);\n  }\n  function Bi(m, d) {\n    var g = O(m, function (e) {\n      return O(e.cells, v);\n    });\n    return O(m, function (e, s) {\n      var n = N(e.cells, function (e, n) {\n        if (!1 !== g[s][n]) return [];\n        var t,\n          r,\n          o,\n          u,\n          i,\n          c,\n          l,\n          a,\n          f = (o = n, u = d, l = (t = m)[r = s], a = \"colgroup\" === l.section, {\n            colspan: Ii(l.cells.slice(o), u),\n            rowspan: a ? 1 : Ii((i = t.slice(r), c = o, O(i, function (e) {\n              return st(e, c);\n            })), u)\n          });\n        return function (e, n, t, r) {\n          for (var o = e; o < e + t; o++) for (var u = n; u < n + r; u++) g[o][u] = !0;\n        }(s, n, f.rowspan, f.colspan), [{\n          element: e.element,\n          rowspan: f.rowspan,\n          colspan: f.colspan,\n          isNew: e.isNew\n        }];\n      });\n      return {\n        element: e.element,\n        cells: n,\n        section: e.section,\n        isNew: e.isNew\n      };\n    });\n  }\n  function Mi(o, u, i) {\n    var c = [];\n    A(o.colgroups, function (e) {\n      for (var n = [], t = 0; t < o.grid.columns; t++) {\n        var r = $t.getColumnAt(o, t).map(function (e) {\n          return we(e.element, i, !1);\n        }).getOrThunk(function () {\n          return we(u.colGap(), !0, !1);\n        });\n        n.push(r);\n      }\n      c.push(ye(e.element, n, \"colgroup\", i));\n    });\n    for (var e = 0; e < o.grid.rows; e++) {\n      for (var n = [], t = 0; t < o.grid.columns; t++) {\n        var r = $t.getAt(o, e, t).map(function (e) {\n          return we(e.element, i, e.isLocked);\n        }).getOrThunk(function () {\n          return we(u.gap(), !0, !1);\n        });\n        n.push(r);\n      }\n      var l = o.all[e],\n        a = ye(l.element, n, l.section, i);\n      c.push(a);\n    }\n    return c;\n  }\n  function Ei(e) {\n    return Bi(e, ce);\n  }\n  function Pi(e, n) {\n    return H(e.all, function (e) {\n      return w(e.cells, function (e) {\n        return ce(n, e.element);\n      });\n    });\n  }\n  function Ni(n, e, t) {\n    var r = _n(O(e.selection, function (e) {\n      return et(e).bind(function (e) {\n        return Pi(n, e);\n      }).filter(t);\n    }));\n    return jn(0 < r.length, r);\n  }\n  function zi(f, n, s, m, d) {\n    return function (o, u, e, i, c) {\n      var l = $t.fromTable(u),\n        a = q.from(null == c ? void 0 : c.section).getOrThunk(Pl);\n      return n(l, e).map(function (e) {\n        var n = Mi(l, i, !1),\n          t = f(n, e, ce, d(i), a),\n          r = ht(t.grid);\n        return {\n          info: e,\n          grid: Ei(t.grid),\n          cursor: t.cursor,\n          lockedColumns: r\n        };\n      }).bind(function (e) {\n        var n = ki(u, e.grid),\n          t = q.from(null == c ? void 0 : c.sizing).getOrThunk(function () {\n            return Vl(u);\n          }),\n          r = q.from(null == c ? void 0 : c.resize).getOrThunk(gu);\n        return s(u, e.grid, e.info, {\n          sizing: t,\n          resize: r,\n          section: a\n        }), m(u), Wu(o, u), Wt(u, Gt), 0 < e.lockedColumns.length && Mn(u, Gt, e.lockedColumns.join(\",\")), q.some({\n          cursor: e.cursor,\n          newRows: n.newRows,\n          newCells: n.newCells\n        });\n      });\n    };\n  }\n  function Li(e, n) {\n    return Ni(e, n, x).map(function (e) {\n      return {\n        cells: e,\n        generators: n.generators,\n        clipboard: n.clipboard\n      };\n    });\n  }\n  function _i(e, n) {\n    return Ni(e, n, x);\n  }\n  function Wi(e, n) {\n    return Ni(e, n, function (e) {\n      return !e.isLocked;\n    });\n  }\n  function ji(n, e) {\n    return z(e, function (e) {\n      return Pi(n, e).exists(function (e) {\n        return !e.isLocked;\n      });\n    });\n  }\n  function Fi(n, e) {\n    return e.mergable.filter(function (e) {\n      return ji(n, e.cells);\n    });\n  }\n  function Hi(n, e) {\n    return e.unmergable.filter(function (e) {\n      return ji(n, e);\n    });\n  }\n  function Vi(e, n, t, r) {\n    for (var o = gt(e).rows, u = !0, i = 0; i < o.length; i++) for (var c = 0; c < dt(o[0]); c++) {\n      var l = o[i],\n        a = st(l, c),\n        f = t(a.element, n);\n      !0 === f && !1 === u ? ft(l, c, we(r(), !0, a.isLocked)) : !0 === f && (u = !1);\n    }\n    return e;\n  }\n  function qi(e, t, i, c) {\n    var n,\n      r,\n      l = gt(e).rows;\n    return 0 < t && t < l.length && (n = l[t - 1].cells, r = i, A(B(n, function (e, n) {\n      return R(e, function (e) {\n        return r(e.element, n.element);\n      }) ? e : e.concat([n]);\n    }, []), function (e) {\n      for (var o = q.none(), u = t; u < l.length; u++) for (var n = 0; n < dt(l[0]); n++) !function (n) {\n        var t = l[u],\n          r = st(t, n);\n        i(r.element, e.element) && (o = o.isNone() ? q.some(c()) : o).each(function (e) {\n          ft(t, n, we(e, !0, r.isLocked));\n        });\n      }(n);\n    })), e;\n  }\n  function Ui(e, n) {\n    return {\n      rowDelta: 0,\n      colDelta: dt(e[0]) - dt(n[0])\n    };\n  }\n  function Gi(e, n) {\n    return {\n      rowDelta: e.length - n.length,\n      colDelta: 0\n    };\n  }\n  function $i(e, n, t, r) {\n    var o = \"colgroup\" === n.section ? t.col : t.cell;\n    return D(e, function (e) {\n      return we(o(), !0, r(e));\n    });\n  }\n  function Ki(e, n, r, o) {\n    var u = e[e.length - 1];\n    return e.concat(D(n, function () {\n      var e = \"colgroup\" === u.section ? r.colgroup : r.row,\n        n = pt(u, e, S),\n        t = $i(n.cells.length, n, r, function (e) {\n          return Ke(o, e.toString());\n        });\n      return Ut(n, t);\n    }));\n  }\n  function Xi(e, t, r, o) {\n    return O(e, function (e) {\n      var n = $i(t, e, r, v);\n      return lt(e, o, n);\n    });\n  }\n  function Yi(e, n, t) {\n    var r = n.colDelta < 0 ? Xi : S,\n      o = n.rowDelta < 0 ? Ki : S,\n      u = ht(e),\n      i = dt(e[0]),\n      c = R(u, function (e) {\n        return e === i - 1;\n      }),\n      l = r(e, Math.abs(n.colDelta), t, c ? i - 1 : i),\n      a = ht(l);\n    return o(l, Math.abs(n.rowDelta), t, L(a, x));\n  }\n  function Ji(n, t, e) {\n    return k(e, function (e) {\n      return e >= n.column && e <= dt(t[0]) + n.column;\n    });\n  }\n  function Qi(e, u, n, i, c) {\n    var t,\n      r,\n      o,\n      l = ht(u),\n      a = (t = e, r = l, o = dt(u[0]), {\n        row: gt(u).cols.length + t.row,\n        column: w(D(o - t.column, function (e) {\n          return e + t.column;\n        }), function (n) {\n          return z(r, function (e) {\n            return e !== n;\n          });\n        }).getOr(o - 1)\n      }),\n      f = gt(n).rows,\n      s = Ji(a, f, l);\n    return function (e, n, t) {\n      if (e.row >= n.length || e.column > dt(n[0])) return Ga.error(\"invalid start address out of table bounds, row: \" + e.row + \", column: \" + e.column);\n      var r = n.slice(e.row),\n        o = r[0].cells.slice(e.column),\n        u = dt(t[0]),\n        i = t.length;\n      return Ga.value({\n        rowDelta: r.length - i,\n        colDelta: o.length - u\n      });\n    }(a, u, f).map(function (e) {\n      var n = _K(_K({}, e), {\n          colDelta: e.colDelta - s.length\n        }),\n        t = Yi(u, n, i),\n        r = ht(t),\n        o = Ji(a, f, r);\n      return function (e, n, t, r, o, u) {\n        for (var i, c, l, a, f, s = e.row, m = e.column, d = s + t.length, g = m + dt(t[0]) + u.length, p = L(u, x), b = s; b < d; b++) for (var h, v, w, y = 0, C = m; C < g; C++) p[C] ? y++ : (l = C, a = void 0, a = P(o, st((i = n)[c = b], l).element), f = i[c], 1 < i.length && 1 < dt(f) && (0 < l && a(mt(f, l - 1)) || l < f.cells.length - 1 && a(mt(f, l + 1)) || 0 < c && a(mt(i[c - 1], l)) || c < i.length - 1 && a(mt(i[c + 1], l))) && Vi(n, mt(n[b], C), o, r.cell), v = (h = st(t[b - s], C - m - y)).element, w = r.replace(v), ft(n[b], C, we(w, !0, h.isLocked)));\n        return n;\n      }(a, t, f, i, c, o);\n    });\n  }\n  function Zi(t, e, n, r, o) {\n    var u = t,\n      i = o,\n      c = r.cell;\n    0 < u && u < e[0].cells.length && A(e, function (e) {\n      var n = e.cells[u - 1],\n        t = e.cells[u];\n      i(t.element, n.element) && ft(e, u, we(c(), !0, t.isLocked));\n    });\n    var l = Yi(n, Gi(n, e), r);\n    return O(Yi(e, Gi(e, l), r), function (e, n) {\n      return lt(e, t, l[n].cells);\n    });\n  }\n  function ec(e, n, t, r, o) {\n    qi(n, e, o, r.cell);\n    var u,\n      i,\n      c = ht(n),\n      l = Ui(n, t),\n      a = Yi(n, _K(_K({}, l), {\n        colDelta: l.colDelta - c.length\n      }), r),\n      f = gt(a),\n      s = f.cols,\n      m = f.rows,\n      d = ht(a),\n      g = Ui(t, n),\n      p = _K(_K({}, g), {\n        colDelta: g.colDelta + d.length\n      }),\n      b = Yi((u = r, i = d, O(t, function (t) {\n        return B(i, function (e, n) {\n          return at(e, n, $i(1, t, u, x)[0]);\n        }, t);\n      })), p, r);\n    return s.concat(m.slice(0, e)).concat(b).concat(m.slice(e, m.length));\n  }\n  function nc(e, t, n, r, o) {\n    var u,\n      i,\n      c,\n      l,\n      a = gt(e),\n      f = a.rows,\n      s = a.cols,\n      m = f.slice(0, t),\n      d = f.slice(t),\n      g = (u = f[n], i = function i(e, n) {\n        return 0 < t && t < f.length && r(mt(f[t - 1], n), mt(f[t], n)) ? st(f[t], n) : we(o(e.element, r), !0, e.isLocked);\n      }, c = r, l = o, pt(u, function (e) {\n        return l(e, c);\n      }, i));\n    return s.concat(m).concat([g]).concat(d);\n  }\n  function tc(e, u, i, c, l) {\n    return O(e, function (e) {\n      var n,\n        t,\n        r = 0 < u && u < dt(e) && c(mt(e, u - 1), mt(e, u)),\n        o = (n = e.section, t = l, \"colgroup\" !== n && r ? st(e, u) : we(t(st(e, i).element, c), !0, !1));\n      return at(e, u, o);\n    });\n  }\n  function rc(e, n, t, r) {\n    return void 0 !== mt((u = e)[i = n], t) && 0 < i && r(mt(u[i - 1], t), mt(u[i], t)) || (o = e[n], 0 < t && r(mt(o, t - 1), mt(o, t)));\n    var o, u, i;\n  }\n  function oc(e, n, t, r) {\n    function o(e) {\n      return (\"row\" === e ? Jn : Yn)(n) ? e + \"group\" : e;\n    }\n    return e ? Wa(n) ? o(t) : null : r && Wa(n) ? o(\"row\" === t ? \"col\" : \"row\") : null;\n  }\n  function uc(e, n, t) {\n    return we(t(e.element, n), !0, e.isLocked);\n  }\n  function ic(e, u, i, c, l, a, f) {\n    return O(e, function (e, o) {\n      return t = function t(e, n) {\n        if (t = e, R(u, function (e) {\n          return i(t.element, e.element);\n        })) {\n          var r = f(e, o, n) ? l(e, i, c) : e;\n          return a(r, o, n).each(function (e) {\n            var t = r.element;\n            ae({\n              scope: q.from(e)\n            }, function (e, n) {\n              e.fold(function () {\n                Wt(t, n);\n              }, function (e) {\n                Bn(t.dom, n, e);\n              });\n            });\n          }), r;\n        }\n        return e;\n        var t;\n      }, r = O((n = e).cells, t), ye(n.element, r, n.section, n.isNew);\n      var n, t, r;\n    });\n  }\n  function cc(t, r, o) {\n    return N(t, function (e, n) {\n      return rc(t, n, r, o) ? [] : [st(e, r)];\n    });\n  }\n  function lc(e, n, t, r, o) {\n    var u,\n      i,\n      c,\n      l,\n      a = gt(e).rows,\n      f = N(n, function (e) {\n        return cc(a, e, r);\n      }),\n      s = O(e, function (e) {\n        return yi(e.cells);\n      }),\n      m = (u = f, z(i = s, S) && yi(u) ? x : function (e, n, t) {\n        return !(\"th\" === Ye(e.element) && i[n]);\n      }),\n      d = (c = t, l = s, function (e, n) {\n        return q.some(oc(c, e.element, \"row\", l[n]));\n      });\n    return ic(e, f, r, o, uc, d, m);\n  }\n  function ac(e, n, t, r) {\n    var o = gt(e).rows;\n    return ic(e, O(n, function (e) {\n      return st(o[e.row], e.column);\n    }), t, r, uc, q.none, x);\n  }\n  function fc(e) {\n    return B(e, function (e, n) {\n      return R(e, function (e) {\n        return e.column === n.column;\n      }) ? e : e.concat([n]);\n    }, []).sort(function (e, n) {\n      return e.column - n.column;\n    });\n  }\n  function sc(e) {\n    return \"tr\" === Ye(e) || Ka(e);\n  }\n  function mc(e) {\n    return {\n      element: e,\n      colspan: Kn(e, \"colspan\", 1),\n      rowspan: Kn(e, \"rowspan\", 1)\n    };\n  }\n  function dc(e) {\n    return Nn(e, \"scope\").map(function (e) {\n      return e.substr(0, 3);\n    });\n  }\n  function gc(e) {\n    return n = e, t = Ya.property().name(n), y(Xa, t);\n    var n, t;\n  }\n  function pc(e) {\n    return n = e, y([\"ol\", \"ul\"], Ya.property().name(n));\n    var n;\n  }\n  function bc(e) {\n    function u(e) {\n      return \"br\" === Ye(e);\n    }\n    function t(o) {\n      return jo(o).bind(function (t) {\n        var r = cn(t).map(function (e) {\n          return !!gc(e) || (n = e, !!y([\"br\", \"img\", \"hr\", \"input\"], Ya.property().name(n)) && \"img\" !== Ye(e));\n          var n;\n        }).getOr(!1);\n        return rn(t).map(function (e) {\n          return !0 === r || \"li\" === Ye(n = e) || Dn(n, pc).isSome() || u(t) || gc(e) && !ce(o, e) ? [] : [Ve.fromTag(\"br\")];\n          var n;\n        });\n      }).getOr([]);\n    }\n    var n,\n      r = 0 === (n = N(e, function (e) {\n        var n = ln(e);\n        return z(n, function (e) {\n          return u(e) || pn(e) && 0 === Et(e).trim().length;\n        }) ? [] : n.concat(t(e));\n      })).length ? [Ve.fromTag(\"br\")] : n;\n    Bt(e[0]), It(e[0], r);\n  }\n  function hc(e) {\n    return Nu(e, !0);\n  }\n  function vc(e) {\n    0 === nt(e).length && Yt(e);\n  }\n  function wc(e, n) {\n    return {\n      grid: e,\n      cursor: n\n    };\n  }\n  function yc(e, n, t) {\n    var r,\n      o,\n      u,\n      i,\n      c,\n      l = (r = n, o = t, c = gt(e).rows, q.from(null === (i = null === (u = c[r]) || void 0 === u ? void 0 : u.cells[o]) || void 0 === i ? void 0 : i.element).filter(hc).orThunk(function () {\n        return H(c, function (e) {\n          return H(e.cells, function (e) {\n            var n = e.element;\n            return jn(hc(n), n);\n          });\n        });\n      }));\n    return wc(e, l);\n  }\n  function Cc(e) {\n    return B(e, function (e, n) {\n      return R(e, function (e) {\n        return e.row === n.row;\n      }) ? e : e.concat([n]);\n    }, []).sort(function (e, n) {\n      return e.row - n.row;\n    });\n  }\n  function Sc(u, i) {\n    return function (e, n, t, r, o) {\n      return yc(function (e, n, t, r, u, o, i) {\n        var c = gt(e),\n          l = c.cols,\n          a = c.rows,\n          f = a[n[0]],\n          s = N(n, function (e) {\n            return o = u, N((t = a)[r = e].cells, function (e, n) {\n              return rc(t, r, n, o) ? [] : [e];\n            });\n            var t, r, o;\n          }),\n          m = O(f.cells, function (e, n) {\n            return yi(cc(a, n, u));\n          }),\n          d = X([], a, !0);\n        A(n, function (e) {\n          d[e] = i.transformRow(a[e], t);\n        });\n        var g,\n          p,\n          b,\n          h,\n          v = l.concat(d),\n          w = (g = f, z(p = m, S) && yi(g.cells) ? x : function (e, n, t) {\n            return !(\"th\" === Ye(e.element) && p[t]);\n          }),\n          y = (b = r, h = m, function (e, n, t) {\n            return q.some(oc(b, e.element, \"col\", h[t]));\n          });\n        return ic(v, s, u, o, i.transformCell, y, w);\n      }(e, O(Cc(n), function (e) {\n        return e.row;\n      }), u, i, t, r.replaceOrInit, o), n[0].row, n[0].column);\n    };\n  }\n  function Tc(e, n, t) {\n    var r,\n      o = (r = t.section, ut(e, function () {\n        return r;\n      }));\n    return Mi($t.generate(o), n, !0);\n  }\n  function xc(e, n, t, r) {\n    var o = r.sizing,\n      u = $t.generate(n);\n    lu(u, o.getWidths(u, o), o);\n  }\n  function Rc(e, n, t, r) {\n    var o = t,\n      u = r.sizing,\n      i = r.resize,\n      c = $t.generate(n),\n      l = u.getWidths(c, u),\n      a = u.pixelWidth(),\n      f = i.calcRedestributedWidths(l, a, o.pixelDelta, u.isRelative),\n      s = f.newSizes,\n      m = f.delta;\n    lu(c, s, u), u.adjustTableWidth(m);\n  }\n  function Dc(e, n) {\n    return R(n, function (e) {\n      return 0 === e.column && e.isLocked;\n    });\n  }\n  function Oc(n, e) {\n    return R(e, function (e) {\n      return e.column + e.colspan >= n.grid.columns && e.isLocked;\n    });\n  }\n  function Ac(e, n) {\n    var t = yr(e);\n    return B(fc(n), function (e, n) {\n      return e + t[n.column].map(wr).getOr(0);\n    }, 0);\n  }\n  function kc(t) {\n    return function (n, e) {\n      return _i(n, e).filter(function (e) {\n        return !(t ? Dc : Oc)(n, e);\n      }).map(function (e) {\n        return {\n          details: e,\n          pixelDelta: Ac(n, e)\n        };\n      });\n    };\n  }\n  function Ic(t) {\n    return function (n, e) {\n      return Li(n, e).filter(function (e) {\n        return !(t ? Dc : Oc)(n, e.cells);\n      });\n    };\n  }\n  function Bc(e, n) {\n    var u = $t.fromTable(e);\n    return _i(u, n).bind(function (e) {\n      var n = e[e.length - 1],\n        t = e[0].column,\n        r = n.column + n.colspan,\n        o = M(O(u.all, function (e) {\n          return k(e.cells, function (e) {\n            return e.column >= t && e.column < r;\n          });\n        }));\n      return ja(o);\n    }).getOr(\"\");\n  }\n  function Mc(e, n) {\n    return _i($t.fromTable(e), n).bind(ja).getOr(\"\");\n  }\n  function Ec(m, d, e) {\n    function n(e) {\n      return \"table\" === Ye(Yo(e));\n    }\n    function t(c, l, a, f, s) {\n      return function (t, e, o) {\n        void 0 === o && (o = !1), nu(t);\n        var n = f(),\n          r = Ve.fromDom(m.getDoc()),\n          u = $o(a, r, g),\n          i = {\n            sizing: di(m, t),\n            resize: (ai(m) ? du : gu)(),\n            section: function (e) {\n              switch (ii(m)) {\n                case \"section\":\n                  return Fa();\n                case \"sectionCells\":\n                  return Ha();\n                case \"cells\":\n                  return Va();\n                default:\n                  return function (e, n) {\n                    var t;\n                    switch (H($t.fromTable(e).all, function (e) {\n                      var n = Ci(e);\n                      return \"header\" === n.type ? q.from(n.subType) : q.none();\n                    }).getOr(n)) {\n                      case \"section\":\n                        return xi();\n                      case \"sectionCells\":\n                        return Ri();\n                      case \"cells\":\n                        return Di();\n                    }\n                  }(e, \"section\");\n              }\n            }(t)\n          };\n        return l(t) ? c(n, t, e, u, i).bind(function (e) {\n          A(e.newRows, function (e) {\n            qu(m, e.dom);\n          }), A(e.newCells, function (e) {\n            Uu(m, e.dom);\n          });\n          var r,\n            n = (r = t, e.cursor.fold(function () {\n              return j(nt(r)).filter(Sn).map(function (e) {\n                d.clear(r);\n                var n = m.dom.createRng();\n                return n.selectNode(e.dom), m.selection.setRng(n), Mn(e, \"data-mce-selected\", \"1\"), n;\n              });\n            }, function (e) {\n              var n = La(_a, e),\n                t = m.dom.createRng();\n              return t.setStart(n.element.dom, n.offset), t.setEnd(n.element.dom, n.offset), m.selection.setRng(t), d.clear(r), q.some(t);\n            }));\n          return Sn(t) && (nu(t), o || Gu(m, t.dom, s)), n.map(function (e) {\n            return {\n              rng: e,\n              effect: s\n            };\n          });\n        }) : q.none();\n      };\n    }\n    var g = fi(m),\n      r = ai(m) ? E : wi;\n    return {\n      deleteRow: t(lf, function (e) {\n        return !1 === n(m) || 1 < yu(e).rows;\n      }, E, e, Sa),\n      deleteColumn: t(cf, function (e) {\n        return !1 === n(m) || 1 < yu(e).columns;\n      }, E, e, Sa),\n      insertRowsBefore: t(tf, x, E, e, Sa),\n      insertRowsAfter: t(rf, x, E, e, Sa),\n      insertColumnsBefore: t(of, x, r, e, Sa),\n      insertColumnsAfter: t(uf, x, r, e, Sa),\n      mergeCells: t(bf, x, E, e, Sa),\n      unmergeCells: t(hf, x, E, e, Sa),\n      pasteColsBefore: t(wf, x, E, e, Sa),\n      pasteColsAfter: t(yf, x, E, e, Sa),\n      pasteRowsBefore: t(Cf, x, E, e, Sa),\n      pasteRowsAfter: t(Sf, x, E, e, Sa),\n      pasteCells: t(vf, x, E, e, Ta),\n      makeCellsHeader: t(gf, x, E, e, Sa),\n      unmakeCellsHeader: t(pf, x, E, e, Sa),\n      makeColumnsHeader: t(af, x, E, e, Sa),\n      unmakeColumnsHeader: t(ff, x, E, e, Sa),\n      makeRowsHeader: t(sf, x, E, e, Sa),\n      makeRowsBody: t(mf, x, E, e, Sa),\n      makeRowsFooter: t(df, x, E, e, Sa),\n      getTableRowType: Tf,\n      getTableCellType: Mc,\n      getTableColType: Bc\n    };\n  }\n  function Pc(e, n, t, r) {\n    return D(e, function (e) {\n      return function (e, n, t, r) {\n        for (var o = Ve.fromTag(\"tr\"), u = 0; u < e; u++) {\n          var i = r < n || u < t ? Ve.fromTag(\"th\") : Ve.fromTag(\"td\");\n          u < t && Mn(i, \"scope\", \"row\"), r < n && Mn(i, \"scope\", \"col\"), Xt(i, Ve.fromTag(\"br\")), Xt(o, i);\n        }\n        return o;\n      }(n, t, r, e);\n    });\n  }\n  function Nc(e, n) {\n    e.selection.select(n.dom, !0), e.selection.collapse(!0);\n  }\n  function zc(u, i, c, l, a) {\n    var o = Qu(u),\n      f = {\n        styles: o,\n        attributes: Ju(u),\n        colGroups: u.getParam(\"table_use_colgroups\", !1, \"boolean\")\n      };\n    return u.undoManager.ignore(function () {\n      var e = function (e, n, t, r, o, u) {\n        void 0 === u && (u = xf);\n        var i,\n          c,\n          l = Ve.fromTag(\"table\"),\n          a = \"cells\" !== o;\n        qn(l, u.styles), En(l, u.attributes), u.colGroups && Xt(l, (i = n, c = Ve.fromTag(\"colgroup\"), D(i, function () {\n          return Xt(c, Ve.fromTag(\"col\"));\n        }), c));\n        var f,\n          s = Math.min(e, t);\n        a && 0 < t && (f = Ve.fromTag(\"thead\"), Xt(l, f), It(f, Pc(t, n, \"sectionCells\" === o ? s : 0, r)));\n        var m = Ve.fromTag(\"tbody\");\n        return Xt(l, m), It(m, Pc(a ? e - s : e, n, a ? 0 : t, r)), l;\n      }(c, i, a, l, ii(u), f);\n      Mn(e, \"data-mce-id\", \"__mce\");\n      var n,\n        t,\n        r,\n        o = (n = e, t = Ve.fromTag(\"div\"), r = Ve.fromDom(n.dom.cloneNode(!0)), Xt(t, r), t.dom.innerHTML);\n      u.insertContent(o), u.addVisual();\n    }), kn(Yo(u), 'table[data-mce-id=\"__mce\"]').map(function (e) {\n      var n, t, r;\n      return ka(u) ? Ma(e) : Ia(u) ? Ea(e) : (ui(u) || (n = o.width, T(n) && -1 !== n.indexOf(\"%\"))) && Ba(e), nu(e), Wt(e, \"data-mce-id\"), t = u, A(dn(e, \"tr\"), function (e) {\n        qu(t, e.dom), A(dn(e, \"th,td\"), function (e) {\n          Uu(t, e.dom);\n        });\n      }), r = u, kn(e, \"td,th\").each(P(Nc, r)), e.dom;\n    }).getOr(null);\n  }\n  function Lc(e, n, t, r, o) {\n    function u(e) {\n      return f(e) && 0 < e;\n    }\n    if (void 0 === r && (r = {}), u(n) && u(t)) {\n      var i = r.headerRows || 0;\n      return zc(e, t, n, r.headerColumns || 0, i);\n    }\n    return console.error(o), null;\n  }\n  function _c(e) {\n    return function () {\n      return e().fold(function () {\n        return [];\n      }, function (e) {\n        return O(e, function (e) {\n          return e.dom;\n        });\n      });\n    };\n  }\n  function Wc(t) {\n    return function (e) {\n      var n = 0 < e.length ? q.some(Xo(e)) : q.none();\n      t(n);\n    };\n  }\n  function jc(e, n, t) {\n    var r = Kn(e, n, 1);\n    1 === t || r <= 1 ? Wt(e, n) : Mn(e, n, Math.min(t, r));\n  }\n  function Fc(o, e, u) {\n    return function (e, n) {\n      for (var t = 0; t < n.length; t++) {\n        var r = o.getStyle(n[t], u);\n        if ((e = void 0 === e ? r : e) !== r) return \"\";\n      }\n      return e;\n    }(void 0, o.select(\"td,th\", e));\n  }\n  function Hc(e, n, t) {\n    t && e.formatter.apply(\"align\" + t, {}, n);\n  }\n  function Vc(n, t) {\n    Rf.each(\"left center right\".split(\" \"), function (e) {\n      n.formatter.remove(\"align\" + e, {}, t);\n    });\n  }\n  function qc(e) {\n    return Of.test(t = e) || Af.test(t) ? q.some({\n      value: (Ae(n = e, \"#\") ? n.substring(\"#\".length) : n).toUpperCase()\n    }) : q.none();\n    var n, t;\n  }\n  function Uc(e) {\n    var n = e.toString(16);\n    return (1 === n.length ? \"0\" + n : n).toUpperCase();\n  }\n  function Gc(e) {\n    return {\n      value: Uc(e.red) + Uc(e.green) + Uc(e.blue)\n    };\n  }\n  function $c(e, n, t, r) {\n    return {\n      red: e,\n      green: n,\n      blue: t,\n      alpha: r\n    };\n  }\n  function Kc(e, n, t, r) {\n    return $c(parseInt(e, 10), parseInt(n, 10), parseInt(t, 10), parseFloat(r));\n  }\n  function Xc(e) {\n    var n = e;\n    return {\n      get: function get() {\n        return n;\n      },\n      set: function set(e) {\n        n = e;\n      }\n    };\n  }\n  function Yc(e) {\n    function n() {\n      return t.get().each(e);\n    }\n    var t = Xc(q.none());\n    return {\n      clear: function clear() {\n        n(), t.set(q.none());\n      },\n      isSet: function isSet() {\n        return t.get().isSome();\n      },\n      get: function get() {\n        return t.get();\n      },\n      set: function set(e) {\n        n(), t.set(q.some(e));\n      }\n    };\n  }\n  function Jc() {\n    var n = Yc(E);\n    return _K(_K({}, n), {\n      on: function on(e) {\n        return n.get().each(e);\n      }\n    });\n  }\n  function Qc(e) {\n    return be(e, \"menu\");\n  }\n  function Zc(t, r) {\n    return function (e) {\n      var n;\n      t.execCommand(\"mceTableApplyCellStyle\", !1, ((n = {})[r] = e, n));\n    };\n  }\n  function el(n, t, r, o, u) {\n    return function (e) {\n      return e(Mf(n, t, r, o, u));\n    };\n  }\n  function nl(r, e, o) {\n    var n = O(e, function (e) {\n      return {\n        text: e.title,\n        value: \"#\" + qc(r = e.value).orThunk(function () {\n          return function (e) {\n            if (\"transparent\" === e) return q.some($c(0, 0, 0, 0));\n            var n = kf.exec(e);\n            if (null !== n) return q.some(Kc(n[1], n[2], n[3], \"1\"));\n            var t = If.exec(e);\n            return null !== t ? q.some(Kc(t[1], t[2], t[3], t[4])) : q.none();\n          }(r).map(Gc);\n        }).getOrThunk(function () {\n          var e = document.createElement(\"canvas\");\n          e.height = 1, e.width = 1;\n          var n = e.getContext(\"2d\");\n          n.clearRect(0, 0, e.width, e.height), n.fillStyle = \"#FFFFFF\", n.fillStyle = r, n.fillRect(0, 0, 1, 1);\n          var t = n.getImageData(0, 0, 1, 1).data;\n          return Gc($c(t[0], t[1], t[2], t[3]));\n        }).value,\n        type: \"choiceitem\"\n      };\n      var r;\n    });\n    return [{\n      type: \"fancymenuitem\",\n      fancytype: \"colorswatch\",\n      initData: {\n        colors: 0 < n.length ? n : void 0,\n        allowCustomColors: !1\n      },\n      onAction: function onAction(e) {\n        var n,\n          t = \"remove\" === e.value ? \"\" : e.value;\n        r.execCommand(\"mceTableApplyCellStyle\", !1, ((n = {})[o] = t, n));\n      }\n    }];\n  }\n  function tl(n) {\n    return function () {\n      var e = n.queryCommandValue(\"mceTableRowType\");\n      n.execCommand(\"mceTableRowType\", !1, {\n        type: \"header\" === e ? \"body\" : \"header\"\n      });\n    };\n  }\n  function rl(n) {\n    return function () {\n      var e = n.queryCommandValue(\"mceTableColType\");\n      n.execCommand(\"mceTableColType\", !1, {\n        type: \"th\" === e ? \"td\" : \"th\"\n      });\n    };\n  }\n  function ol(e) {\n    return Pf.concat((0 < (n = Bf(ri(e))).length ? q.some({\n      name: \"class\",\n      type: \"listbox\",\n      label: \"Class\",\n      items: n\n    }) : q.none()).toArray());\n    var n;\n  }\n  function ul(e, n) {\n    var t = [{\n      name: \"borderstyle\",\n      type: \"listbox\",\n      label: \"Border style\",\n      items: [{\n        text: \"Select...\",\n        value: \"\"\n      }].concat(Bf(Yu(e)))\n    }, {\n      name: \"bordercolor\",\n      type: \"colorinput\",\n      label: \"Border color\"\n    }, {\n      name: \"backgroundcolor\",\n      type: \"colorinput\",\n      label: \"Background color\"\n    }];\n    return {\n      title: \"Advanced\",\n      name: \"advanced\",\n      items: \"cell\" === n ? [{\n        name: \"borderwidth\",\n        type: \"input\",\n        label: \"Border width\"\n      }].concat(t) : t\n    };\n  }\n  function il(u) {\n    return function (t, r) {\n      var o = t.dom;\n      return {\n        setAttrib: function setAttrib(e, n) {\n          u && !n || o.setAttrib(r, e, n);\n        },\n        setStyle: function setStyle(e, n) {\n          u && !n || o.setStyle(r, e, n);\n        },\n        setFormat: function setFormat(e, n) {\n          u && !n || (\"\" === n ? t.formatter.remove(e, {\n            value: null\n          }, r, !0) : t.formatter.apply(e, {\n            value: n\n          }, r));\n        }\n      };\n    };\n  }\n  function cl(n) {\n    return function (e) {\n      return Ae(e, \"rgb\") ? n.toHex(e) : e;\n    };\n  }\n  function ll(e, n) {\n    var t = Ve.fromDom(n);\n    return {\n      borderwidth: Gn(t, \"border-width\").getOr(\"\"),\n      borderstyle: Gn(t, \"border-style\").getOr(\"\"),\n      bordercolor: Gn(t, \"border-color\").map(cl(e)).getOr(\"\"),\n      backgroundcolor: Gn(t, \"background-color\").map(cl(e)).getOr(\"\")\n    };\n  }\n  function al(e) {\n    var o = e[0];\n    return A(e.slice(1), function (e) {\n      A(Ue(o), function (r) {\n        ae(e, function (e, n) {\n          var t = o[r];\n          \"\" !== t && r === n && t !== e && (o[r] = \"\");\n        });\n      });\n    }), o;\n  }\n  function fl(e, n, t, r) {\n    return w(e, function (e) {\n      return !u(t.formatter.matchNode(r, n + e));\n    }).getOr(\"\");\n  }\n  function sl(e, t) {\n    var n = $t.fromTable(e);\n    return O(k($t.justCells(n), function (n) {\n      return R(t, function (e) {\n        return ce(n.element, e);\n      });\n    }), function (e) {\n      return {\n        element: e.element.dom,\n        column: $t.getColumnAt(n, e.column).map(function (e) {\n          return e.element.dom;\n        })\n      };\n    });\n  }\n  function ml(e, n, r, t) {\n    var l = t.getData();\n    t.close(), e.undoManager.transact(function () {\n      var o,\n        u = e,\n        i = n,\n        t = r,\n        c = se(o = l, function (e, n) {\n          return t[n] !== e;\n        });\n      0 < ge(c) && 1 <= i.length && rt(i[0]).each(function (e) {\n        var s,\n          m,\n          d,\n          n = sl(e, i),\n          t = 0 < ge(se(c, function (e, n) {\n            return \"scope\" !== n && \"celltype\" !== n;\n          })),\n          r = Ke(c, \"celltype\");\n        (t || Ke(c, \"scope\")) && (s = u, m = o, d = 1 === n.length, A(n, function (e) {\n          var n,\n            t,\n            r,\n            o,\n            u,\n            i,\n            c = e.element,\n            l = d ? Nf.normal(s, c) : Nf.ifTruthy(s, c),\n            a = e.column.map(function (e) {\n              return d ? Nf.normal(s, e) : Nf.ifTruthy(s, e);\n            }).getOr(l),\n            f = m;\n          (n = l).setAttrib(\"scope\", f.scope), n.setAttrib(\"class\", f[\"class\"]), n.setStyle(\"height\", eu(f.height)), a.setStyle(\"width\", eu(f.width)), Zu(s) && ((t = l).setFormat(\"tablecellbackgroundcolor\", (r = m).backgroundcolor), t.setFormat(\"tablecellbordercolor\", r.bordercolor), t.setFormat(\"tablecellborderstyle\", r.borderstyle), t.setFormat(\"tablecellborderwidth\", eu(r.borderwidth))), d && (Vc(s, c), o = s, u = c, Rf.each(\"top middle bottom\".split(\" \"), function (e) {\n            o.formatter.remove(\"valign\" + e, {}, u);\n          })), m.halign && Hc(s, c, m.halign), !m.valign || (i = m.valign) && s.formatter.apply(\"valign\" + i, {}, c);\n        })), r && u.execCommand(\"mceTableCellType\", !1, {\n          type: o.celltype,\n          no_events: !0\n        }), Gu(u, e.dom, {\n          structure: r,\n          style: t\n        });\n      }), e.focus();\n    });\n  }\n  function dl(e, n) {\n    var t,\n      l,\n      r,\n      o,\n      u,\n      i = Ql(n);\n    0 !== i.length && (l = e, t = al(rt((r = i)[0]).map(function (e) {\n      return O(sl(e, r), function (e) {\n        return t = l, r = e.element, o = Zu(l), u = e.column, i = t.dom, c = u.getOr(r), _K({\n          width: n(c, \"width\"),\n          height: n(r, \"height\"),\n          scope: i.getAttrib(r, \"scope\"),\n          celltype: r.nodeName.toLowerCase(),\n          \"class\": i.getAttrib(r, \"class\", \"\"),\n          halign: zf(t, r),\n          valign: Lf(t, r)\n        }, o ? ll(i, r) : {});\n        function n(e, n) {\n          return i.getStyle(e, n) || i.getAttrib(e, n);\n        }\n        var t, r, o, u, i, c;\n      });\n    }).getOrDie()), o = {\n      type: \"tabpanel\",\n      tabs: [{\n        title: \"General\",\n        name: \"general\",\n        items: ol(e)\n      }, ul(e, \"cell\")]\n    }, u = {\n      type: \"panel\",\n      items: [{\n        type: \"grid\",\n        columns: 2,\n        items: ol(e)\n      }]\n    }, e.windowManager.open({\n      title: \"Cell Properties\",\n      size: \"normal\",\n      body: Zu(e) ? o : u,\n      buttons: [{\n        type: \"cancel\",\n        name: \"cancel\",\n        text: \"Cancel\"\n      }, {\n        type: \"submit\",\n        name: \"save\",\n        text: \"Save\",\n        primary: !0\n      }],\n      initialData: t,\n      onSubmit: P(ml, e, i, t)\n    }));\n  }\n  function gl(e) {\n    return _f.concat((0 < (n = Bf(e.getParam(\"table_row_class_list\", [], \"array\"))).length ? q.some({\n      name: \"class\",\n      type: \"listbox\",\n      label: \"Class\",\n      items: n\n    }) : q.none()).toArray());\n    var n;\n  }\n  function pl(s, m, d, e) {\n    var g = e.getData();\n    e.close(), s.undoManager.transact(function () {\n      var e,\n        n,\n        t,\n        i,\n        c,\n        l,\n        a,\n        r = s,\n        o = m,\n        u = d,\n        f = se(e = g, function (e, n) {\n          return u[n] !== e;\n        });\n      0 < ge(f) && (n = Ke(f, \"type\"), (t = !n || 1 < ge(f)) && (i = r, c = e, l = u, a = 1 === o.length, A(o, function (e) {\n        var n,\n          t,\n          r,\n          o = a ? Nf.normal(i, e) : Nf.ifTruthy(i, e),\n          u = c;\n        (n = o).setAttrib(\"class\", u[\"class\"]), n.setStyle(\"height\", eu(u.height)), ei(i) && ((t = o).setStyle(\"background-color\", (r = c).backgroundcolor), t.setStyle(\"border-color\", r.bordercolor), t.setStyle(\"border-style\", r.borderstyle)), c.align !== l.align && (Vc(i, e), Hc(i, e, c.align));\n      })), n && r.execCommand(\"mceTableRowType\", !1, {\n        type: e.type,\n        no_events: !0\n      }), rt(Ve.fromDom(o[0])).each(function (e) {\n        return Gu(r, e.dom, {\n          structure: n,\n          style: t\n        });\n      })), s.focus();\n    });\n  }\n  function bl(i) {\n    var e,\n      t,\n      n,\n      r,\n      o,\n      u,\n      c,\n      l = (e = tu(i), t = Xl.selected, r = (n = Jl(e)).bind(function (e) {\n        return rt(e);\n      }).map(ot), Wn(n, r, function (n, e) {\n        return k(e, function (e) {\n          return R(Xo(e.dom.cells), function (e) {\n            return \"1\" === Pn(e, t) || ce(e, n);\n          });\n        });\n      }).getOr([]));\n    0 !== l.length && (o = al(O(l, function (e) {\n      return n = i, t = e.dom, r = ei(i), u = n.dom, _K({\n        height: u.getStyle(t, \"height\") || u.getAttrib(t, \"height\"),\n        \"class\": u.getAttrib(t, \"class\", \"\"),\n        type: rt(Ve.fromDom(o = t)).map(function (e) {\n          var n = {\n            selection: Xo(o.cells)\n          };\n          return Tf(e, n);\n        }).getOr(\"\"),\n        align: zf(n, t)\n      }, r ? ll(u, t) : {});\n      var n, t, r, o, u;\n    })), u = {\n      type: \"tabpanel\",\n      tabs: [{\n        title: \"General\",\n        name: \"general\",\n        items: gl(i)\n      }, ul(i, \"row\")]\n    }, c = {\n      type: \"panel\",\n      items: [{\n        type: \"grid\",\n        columns: 2,\n        items: gl(i)\n      }]\n    }, i.windowManager.open({\n      title: \"Row Properties\",\n      size: \"normal\",\n      body: ei(i) ? u : c,\n      buttons: [{\n        type: \"cancel\",\n        name: \"cancel\",\n        text: \"Cancel\"\n      }, {\n        type: \"submit\",\n        name: \"save\",\n        text: \"Save\",\n        primary: !0\n      }],\n      initialData: o,\n      onSubmit: P(pl, i, O(l, function (e) {\n        return e.dom;\n      }), o)\n    }));\n  }\n  function hl(u, i, t, e) {\n    var c = u.dom,\n      l = e.getData(),\n      a = se(l, function (e, n) {\n        return t[n] !== e;\n      });\n    e.close(), \"\" === l[\"class\"] && delete l[\"class\"], u.undoManager.transact(function () {\n      var e, n, t, r, o;\n      i || (e = parseInt(l.cols, 10) || 1, n = parseInt(l.rows, 10) || 1, i = zc(u, e, n, 0, 0)), 0 < ge(a) && (function (e, n, t) {\n        var r,\n          o = e.dom,\n          u = {},\n          i = {};\n        if (u[\"class\"] = t[\"class\"], i.height = eu(t.height), o.getAttrib(n, \"width\") && !ti(e) ? u.width = (r = t.width) ? r.replace(/px$/, \"\") : \"\" : i.width = eu(t.width), ti(e) ? (i[\"border-width\"] = eu(t.border), i[\"border-spacing\"] = eu(t.cellspacing)) : (u.border = t.border, u.cellpadding = t.cellpadding, u.cellspacing = t.cellspacing), ti(e) && n.children) for (var c = 0; c < n.children.length; c++) Wf(o, n.children[c], {\n          \"border-width\": eu(t.border),\n          padding: eu(t.cellpadding)\n        }), ni(e) && Wf(o, n.children[c], {\n          \"border-color\": t.bordercolor\n        });\n        ni(e) && (i[\"background-color\"] = t.backgroundcolor, i[\"border-color\"] = t.bordercolor, i[\"border-style\"] = t.borderstyle), u.style = o.serializeStyle(_K(_K({}, Qu(e)), i)), o.setAttribs(n, _K(_K({}, Ju(e)), u));\n      }(u, i, l), ((t = c.select(\"caption\", i)[0]) && !l.caption || !t && l.caption) && u.execCommand(\"mceTableToggleCaption\"), \"\" === l.align ? Vc(u, i) : Hc(u, i, l.align)), u.focus(), u.addVisual(), 0 < ge(a) && (o = !(r = Ke(a, \"caption\")) || 1 < ge(a), Gu(u, i, {\n        structure: r,\n        style: o\n      }));\n    });\n  }\n  function vl(e, n) {\n    var t,\n      r,\n      o,\n      u,\n      i,\n      c,\n      l,\n      a,\n      f,\n      s,\n      m,\n      d,\n      g,\n      p,\n      b,\n      h,\n      v,\n      w,\n      y,\n      C = e.dom,\n      S = (o = ni(r = e), a = Qu(r), f = Ju(r), s = o ? (u = r.dom, {\n        borderstyle: pe(a, \"border-style\").getOr(\"\"),\n        bordercolor: cl(u)(pe(a, \"border-color\").getOr(\"\")),\n        backgroundcolor: cl(u)(pe(a, \"background-color\").getOr(\"\"))\n      }) : {}, _K(_K(_K(_K(_K(_K({}, {\n        height: \"\",\n        width: \"100%\",\n        cellspacing: \"\",\n        cellpadding: \"\",\n        caption: !1,\n        \"class\": \"\",\n        align: \"\",\n        border: \"\"\n      }), a), f), s), (l = a[\"border-width\"], ti(r) && l ? {\n        border: l\n      } : pe(f, \"border\").fold(function () {\n        return {};\n      }, function (e) {\n        return {\n          border: e\n        };\n      }))), (i = pe(a, \"border-spacing\").or(pe(f, \"cellspacing\")).fold(function () {\n        return {};\n      }, function (e) {\n        return {\n          cellspacing: e\n        };\n      }), c = pe(a, \"border-padding\").or(pe(f, \"cellpadding\")).fold(function () {\n        return {};\n      }, function (e) {\n        return {\n          cellpadding: e\n        };\n      }), _K(_K({}, i), c))));\n    !1 === n ? (t = C.getParent(e.selection.getStart(), \"table\", e.getBody())) ? (d = t, g = ni(m = e), v = m.dom, w = ti(m) ? v.getStyle(d, \"border-spacing\") || v.getAttrib(d, \"cellspacing\") : v.getAttrib(d, \"cellspacing\") || v.getStyle(d, \"border-spacing\"), y = ti(m) ? Fc(v, d, \"padding\") || v.getAttrib(d, \"cellpadding\") : v.getAttrib(d, \"cellpadding\") || Fc(v, d, \"padding\"), S = _K({\n      width: v.getStyle(d, \"width\") || v.getAttrib(d, \"width\"),\n      height: v.getStyle(d, \"height\") || v.getAttrib(d, \"height\"),\n      cellspacing: w,\n      cellpadding: y,\n      border: (p = v, h = Gn(Ve.fromDom(b = d), \"border-width\"), ti(m) && h.isSome() ? h.getOr(\"\") : p.getAttrib(b, \"border\") || Fc(m.dom, b, \"border-width\") || Fc(m.dom, b, \"border\")),\n      caption: !!v.select(\"caption\", d)[0],\n      \"class\": v.getAttrib(d, \"class\", \"\"),\n      align: zf(m, d)\n    }, g ? ll(v, d) : {})) : ni(e) && (S.borderstyle = \"\", S.bordercolor = \"\", S.backgroundcolor = \"\") : (S.cols = \"1\", S.rows = \"1\", ni(e) && (S.borderstyle = \"\", S.bordercolor = \"\", S.backgroundcolor = \"\"));\n    var T = Bf(oi(e));\n    0 < T.length && S[\"class\"] && (S[\"class\"] = S[\"class\"].replace(/\\s*mce\\-item\\-table\\s*/g, \"\"));\n    var x,\n      R,\n      D,\n      O,\n      A = {\n        type: \"grid\",\n        columns: 2,\n        items: (x = T, R = n ? [{\n          type: \"input\",\n          name: \"cols\",\n          label: \"Cols\",\n          inputMode: \"numeric\"\n        }, {\n          type: \"input\",\n          name: \"rows\",\n          label: \"Rows\",\n          inputMode: \"numeric\"\n        }] : [], D = e.getParam(\"table_appearance_options\", !0, \"boolean\") ? [{\n          type: \"input\",\n          name: \"cellspacing\",\n          label: \"Cell spacing\",\n          inputMode: \"numeric\"\n        }, {\n          type: \"input\",\n          name: \"cellpadding\",\n          label: \"Cell padding\",\n          inputMode: \"numeric\"\n        }, {\n          type: \"input\",\n          name: \"border\",\n          label: \"Border width\"\n        }, {\n          type: \"label\",\n          label: \"Caption\",\n          items: [{\n            type: \"checkbox\",\n            name: \"caption\",\n            label: \"Show caption\"\n          }]\n        }] : [], O = 0 < x.length ? [{\n          type: \"listbox\",\n          name: \"class\",\n          label: \"Class\",\n          items: x\n        }] : [], R.concat([{\n          type: \"input\",\n          name: \"width\",\n          label: \"Width\"\n        }, {\n          type: \"input\",\n          name: \"height\",\n          label: \"Height\"\n        }]).concat(D).concat([{\n          type: \"listbox\",\n          name: \"align\",\n          label: \"Alignment\",\n          items: [{\n            text: \"None\",\n            value: \"\"\n          }, {\n            text: \"Left\",\n            value: \"left\"\n          }, {\n            text: \"Center\",\n            value: \"center\"\n          }, {\n            text: \"Right\",\n            value: \"right\"\n          }]\n        }]).concat(O))\n      },\n      k = ni(e) ? {\n        type: \"tabpanel\",\n        tabs: [{\n          title: \"General\",\n          name: \"general\",\n          items: [A]\n        }, ul(e, \"table\")]\n      } : {\n        type: \"panel\",\n        items: [A]\n      };\n    e.windowManager.open({\n      title: \"Table Properties\",\n      size: \"normal\",\n      body: k,\n      onSubmit: P(hl, e, t, S),\n      buttons: [{\n        type: \"cancel\",\n        name: \"cancel\",\n        text: \"Cancel\"\n      }, {\n        type: \"submit\",\n        name: \"save\",\n        text: \"Save\",\n        primary: !0\n      }],\n      initialData: S\n    });\n  }\n  function wl(e) {\n    return Yl(tu(e), Zo(e));\n  }\n  function yl(l, n, e, a, t) {\n    function u(e) {\n      return rt(e, d);\n    }\n    function f(t) {\n      return Jl(tu(e = l), Zo(e)).bind(function (n) {\n        return u(n).map(function (e) {\n          return t(e, n);\n        });\n      });\n      var e;\n    }\n    function s(e) {\n      l.focus();\n    }\n    function r(r, o) {\n      return void 0 === o && (o = !1), f(function (e, n) {\n        var t = ou(a, e, n);\n        r(e, t, o).each(s);\n      });\n    }\n    function o() {\n      return f(function (e, n) {\n        var t,\n          r,\n          o,\n          u = ou(a, e, n),\n          i = $o(E, Ve.fromDom(l.getDoc()), q.none());\n        return t = u, r = i, _i(o = $t.fromTable(e), t).bind(function (e) {\n          var n = Ei(N(gt(Mi(o, r, !1)).rows.slice(e[0].row, e[e.length - 1].row + e[e.length - 1].rowspan), function (e) {\n            var n = k(e.cells, function (e) {\n              return !e.isLocked;\n            });\n            return 0 < n.length ? [_K(_K({}, e), {\n              cells: n\n            })] : [];\n          }));\n          return jn(0 < n.length, n);\n        }).map(function (e) {\n          return O(e, function (e) {\n            var t = ar(e.element);\n            return A(e.cells, function (e) {\n              var n = fr(e.element);\n              Oi(n, \"colspan\", e.colspan, 1), Oi(n, \"rowspan\", e.rowspan, 1), Xt(t, n);\n            }), t;\n          });\n        });\n      });\n    }\n    function i() {\n      return f(function (e, n) {\n        var t,\n          l,\n          r = ou(a, e, n);\n        return t = r, Wi(l = $t.fromTable(e), t).map(function (e) {\n          var r,\n            o,\n            n = e[e.length - 1],\n            t = e[0].column,\n            u = n.column + n.colspan,\n            i = function (e, t, r) {\n              if ($t.hasColumns(e)) {\n                var n = O(k($t.justColumns(e), function (e) {\n                    return e.column >= t && e.column < r;\n                  }), function (e) {\n                    var n = fr(e.element);\n                    return jc(n, \"span\", r - t), n;\n                  }),\n                  o = Ve.fromTag(\"colgroup\");\n                return It(o, n), [o];\n              }\n              return [];\n            }(l, t, u),\n            c = (r = t, o = u, O(l.all, function (e) {\n              var n = O(k(e.cells, function (e) {\n                  return e.column >= r && e.column < o;\n                }), function (e) {\n                  var n = fr(e.element);\n                  return jc(n, \"colspan\", o - r), n;\n                }),\n                t = Ve.fromTag(\"tr\");\n              return It(t, n), t;\n            }));\n          return X(X([], i, !0), c, !0);\n        });\n      });\n    }\n    function c(c, e) {\n      return e().each(function (e) {\n        var i = O(e, fr);\n        f(function (e, n) {\n          var t,\n            r,\n            o = Ko(Ve.fromDom(l.getDoc())),\n            u = (t = i, r = o, {\n              selection: ru(a),\n              clipboard: t,\n              generators: r\n            });\n          c(e, u).each(s);\n        });\n      });\n    }\n    function m(t) {\n      return function (e, n) {\n        return pe(n, \"type\").each(function (e) {\n          r(t(e), n.no_events);\n        });\n      };\n    }\n    var d = Zo(l);\n    ae({\n      mceTableSplitCells: function mceTableSplitCells() {\n        return r(n.unmergeCells);\n      },\n      mceTableMergeCells: function mceTableMergeCells() {\n        return r(n.mergeCells);\n      },\n      mceTableInsertRowBefore: function mceTableInsertRowBefore() {\n        return r(n.insertRowsBefore);\n      },\n      mceTableInsertRowAfter: function mceTableInsertRowAfter() {\n        return r(n.insertRowsAfter);\n      },\n      mceTableInsertColBefore: function mceTableInsertColBefore() {\n        return r(n.insertColumnsBefore);\n      },\n      mceTableInsertColAfter: function mceTableInsertColAfter() {\n        return r(n.insertColumnsAfter);\n      },\n      mceTableDeleteCol: function mceTableDeleteCol() {\n        return r(n.deleteColumn);\n      },\n      mceTableDeleteRow: function mceTableDeleteRow() {\n        return r(n.deleteRow);\n      },\n      mceTableCutCol: function mceTableCutCol() {\n        return i().each(function (e) {\n          t.setColumns(e), r(n.deleteColumn);\n        });\n      },\n      mceTableCutRow: function mceTableCutRow() {\n        return o().each(function (e) {\n          t.setRows(e), r(n.deleteRow);\n        });\n      },\n      mceTableCopyCol: function mceTableCopyCol() {\n        return i().each(function (e) {\n          return t.setColumns(e);\n        });\n      },\n      mceTableCopyRow: function mceTableCopyRow() {\n        return o().each(function (e) {\n          return t.setRows(e);\n        });\n      },\n      mceTablePasteColBefore: function mceTablePasteColBefore() {\n        return c(n.pasteColsBefore, t.getColumns);\n      },\n      mceTablePasteColAfter: function mceTablePasteColAfter() {\n        return c(n.pasteColsAfter, t.getColumns);\n      },\n      mceTablePasteRowBefore: function mceTablePasteRowBefore() {\n        return c(n.pasteRowsBefore, t.getRows);\n      },\n      mceTablePasteRowAfter: function mceTablePasteRowAfter() {\n        return c(n.pasteRowsAfter, t.getRows);\n      },\n      mceTableDelete: function mceTableDelete() {\n        return wl(l).each(function (e) {\n          rt(e, d).filter(p(d)).each(function (e) {\n            var n,\n              t = Ve.fromText(\"\");\n            Dt(e, t), Yt(e), l.dom.isEmpty(l.getBody()) ? (l.setContent(\"\"), l.selection.setCursorLocation()) : ((n = l.dom.createRng()).setStart(t.dom, 0), n.setEnd(t.dom, 0), l.selection.setRng(n), l.nodeChanged());\n          });\n        });\n      },\n      mceTableCellToggleClass: function mceTableCellToggleClass(e, r) {\n        f(function (e) {\n          var n = Ql(a),\n            t = z(n, function (e) {\n              return l.formatter.match(\"tablecellclass\", {\n                value: r\n              }, e.dom);\n            }) ? l.formatter.remove : l.formatter.apply;\n          A(n, function (e) {\n            return t(\"tablecellclass\", {\n              value: r\n            }, e.dom);\n          }), Gu(l, e.dom, Ca);\n        });\n      },\n      mceTableToggleClass: function mceTableToggleClass(e, n) {\n        f(function (e) {\n          l.formatter.toggle(\"tableclass\", {\n            value: n\n          }, e.dom), Gu(l, e.dom, Ca);\n        });\n      },\n      mceTableToggleCaption: function mceTableToggleCaption() {\n        wl(l).each(function (n) {\n          rt(n, d).each(function (r) {\n            An(r, \"caption\").fold(function () {\n              var e,\n                n,\n                t = Ve.fromTag(\"caption\");\n              Xt(t, Ve.fromText(\"Caption\")), n = t, an(e = r, 0).fold(function () {\n                Xt(e, n);\n              }, function (e) {\n                Rt(e, n);\n              }), l.selection.setCursorLocation(t.dom, 0);\n            }, function (e) {\n              en(\"caption\")(n) && ie(\"td\", r).each(function (e) {\n                return l.selection.setCursorLocation(e.dom, 0);\n              }), Yt(e);\n            }), Gu(l, r.dom, Sa);\n          });\n        });\n      },\n      mceTableSizingMode: function mceTableSizingMode(e, n) {\n        return t = n, wl(l).each(function (e) {\n          Ia(l) || ka(l) || ui(l) || rt(e, d).each(function (e) {\n            \"relative\" !== t || Bl(e) ? \"fixed\" !== t || Ml(e) ? \"responsive\" !== t || El(e) || Ea(e) : Ma(e) : Ba(e), nu(e), Gu(l, e.dom, Sa);\n          });\n        });\n        var t;\n      },\n      mceTableCellType: m(function (e) {\n        return \"th\" === e ? n.makeCellsHeader : n.unmakeCellsHeader;\n      }),\n      mceTableColType: m(function (e) {\n        return \"th\" === e ? n.makeColumnsHeader : n.unmakeColumnsHeader;\n      }),\n      mceTableRowType: m(function (e) {\n        switch (e) {\n          case \"header\":\n            return n.makeRowsHeader;\n          case \"footer\":\n            return n.makeRowsFooter;\n          default:\n            return n.makeRowsBody;\n        }\n      })\n    }, function (e, n) {\n      return l.addCommand(n, e);\n    }), ae({\n      mceTableProps: P(vl, l, !1),\n      mceTableRowProps: P(bl, l),\n      mceTableCellProps: P(dl, l, a)\n    }, function (e, n) {\n      return l.addCommand(n, function () {\n        return e();\n      });\n    }), l.addCommand(\"mceInsertTable\", function (e, n) {\n      g(n) && 0 < Ue(n).length ? Lc(l, n.rows, n.columns, n.options, \"Invalid values for mceInsertTable - rows and columns values are required to insert a table.\") : vl(l, !0);\n    }), l.addCommand(\"mceTableApplyCellStyle\", function (e, n) {\n      function r(e) {\n        return \"tablecell\" + e.toLowerCase().replace(\"-\", \"\");\n      }\n      var o, t;\n      !g(n) || 0 !== (o = Ql(a)).length && (function (e) {\n        for (var n in e) if (Ge.call(e, n)) return;\n        return 1;\n      }(t = se(n, function (e, n) {\n        return l.formatter.has(r(n)) && T(e);\n      })) || (ae(t, function (n, t) {\n        A(o, function (e) {\n          Nf.normal(l, e.dom).setFormat(r(t), n);\n        });\n      }), u(o[0]).each(function (e) {\n        return Gu(l, e.dom, Ca);\n      })));\n    });\n  }\n  function Cl(t, e) {\n    return rt(t, e).bind(function (e) {\n      var n = nt(e);\n      return b(n, function (e) {\n        return ce(t, e);\n      }).map(function (e) {\n        return {\n          index: e,\n          all: n\n        };\n      });\n    });\n  }\n  function Sl(e, n) {\n    var t = e.document.createRange();\n    return t.selectNode(n.dom), t;\n  }\n  function Tl(e, n) {\n    var t = e.document.createRange();\n    return Jf(t, n), t;\n  }\n  function xl(e, n, t) {\n    var r,\n      o = e.document.createRange(),\n      u = o;\n    return n.fold(function (e) {\n      u.setStartBefore(e.dom);\n    }, function (e, n) {\n      u.setStart(e.dom, n);\n    }, function (e) {\n      u.setStartAfter(e.dom);\n    }), r = o, t.fold(function (e) {\n      r.setEndBefore(e.dom);\n    }, function (e, n) {\n      r.setEnd(e.dom, n);\n    }, function (e) {\n      r.setEndAfter(e.dom);\n    }), o;\n  }\n  function Rl(e, n, t, r, o) {\n    var u = e.document.createRange();\n    return u.setStart(n.dom, t), u.setEnd(r.dom, o), u;\n  }\n  function Dl(e) {\n    return {\n      left: e.left,\n      top: e.top,\n      right: e.right,\n      bottom: e.bottom,\n      width: e.width,\n      height: e.height\n    };\n  }\n  function Ol(e, n, t) {\n    return n(Ve.fromDom(t.startContainer), t.startOffset, Ve.fromDom(t.endContainer), t.endOffset);\n  }\n  function Al(e, n) {\n    var o,\n      t,\n      r,\n      u = (o = e, n.match({\n        domRange: function domRange(e) {\n          return {\n            ltr: C(e),\n            rtl: q.none\n          };\n        },\n        relative: function relative(e, n) {\n          return {\n            ltr: Y(function () {\n              return xl(o, e, n);\n            }),\n            rtl: Y(function () {\n              return q.some(xl(o, n, e));\n            })\n          };\n        },\n        exact: function exact(e, n, t, r) {\n          return {\n            ltr: Y(function () {\n              return Rl(o, e, n, t, r);\n            }),\n            rtl: Y(function () {\n              return q.some(Rl(o, t, r, e, n));\n            })\n          };\n        }\n      }));\n    return (r = (t = u).ltr()).collapsed ? t.rtl().filter(function (e) {\n      return !1 === e.collapsed;\n    }).map(function (e) {\n      return Qf.rtl(Ve.fromDom(e.endContainer), e.endOffset, Ve.fromDom(e.startContainer), e.startOffset);\n    }).getOrThunk(function () {\n      return Ol(0, Qf.ltr, r);\n    }) : Ol(0, Qf.ltr, r);\n  }\n  function kl(u, e) {\n    return Al(u, e).match({\n      ltr: function ltr(e, n, t, r) {\n        var o = u.document.createRange();\n        return o.setStart(e.dom, n), o.setEnd(t.dom, r), o;\n      },\n      rtl: function rtl(e, n, t, r) {\n        var o = u.document.createRange();\n        return o.setStart(t.dom, r), o.setEnd(e.dom, n), o;\n      }\n    });\n  }\n  function Il(e, n) {\n    return {\n      parent: C(q.from(e.dom.documentElement).map(Ve.fromDom).getOr(e)),\n      view: C(e),\n      origin: C(uo(0, 0)),\n      isResizable: n\n    };\n  }\n  function Bl(e) {\n    return yo(e).exists(function (e) {\n      return _l.test(e);\n    });\n  }\n  function Ml(e) {\n    return yo(e).exists(function (e) {\n      return Wl.test(e);\n    });\n  }\n  function El(e) {\n    return yo(e).isNone();\n  }\n  function Pl() {\n    return {\n      transformRow: S,\n      transformCell: Si\n    };\n  }\n  function Nl(o, u) {\n    function r(e) {\n      if (sc(e)) return Ka((t = {\n        element: e\n      }).element) ? o.colgroup(t) : o.row(t);\n      var n,\n        t,\n        r = (n = u(e), $a(n.element) ? o.col(n) : o.cell(n));\n      return i = q.some({\n        item: e,\n        replacement: r\n      }), r;\n    }\n    void 0 === u && (u = mc);\n    var i = q.none();\n    return {\n      getOrInit: function getOrInit(n, t) {\n        return i.fold(function () {\n          return r(n);\n        }, function (e) {\n          return t(n, e.item) ? e.replacement : r(n);\n        });\n      }\n    };\n  }\n  function zl(r) {\n    return function (t) {\n      function u(e) {\n        var n = t.replace(e, r, \"td\" === r ? {\n          scope: null\n        } : {});\n        return i.push({\n          item: e,\n          sub: n\n        }), n;\n      }\n      var i = [];\n      return {\n        replaceOrInit: function replaceOrInit(n, t) {\n          return sc(n) || $a(n) ? n : (r = n, o = t, w(i, function (e) {\n            return o(e.item, r);\n          }).fold(function () {\n            return u(n);\n          }, function (e) {\n            return t(n, e.item) ? e.sub : u(n);\n          }));\n          var r, o;\n        }\n      };\n    };\n  }\n  function Ll(r) {\n    return {\n      unmerge: function unmerge(t) {\n        var e = dc(t);\n        return e.each(function (e) {\n          return Mn(t, \"scope\", e);\n        }), function () {\n          var n = r.cell({\n            element: t,\n            colspan: 1,\n            rowspan: 1\n          });\n          return $n(n, \"width\"), $n(t, \"width\"), e.each(function (e) {\n            return Mn(n, \"scope\", e);\n          }), n;\n        };\n      },\n      merge: function merge(r) {\n        return $n(r[0], \"width\"), function () {\n          var e = _n(O(r, dc));\n          if (0 === e.length) return q.none();\n          var n = e[0],\n            t = [\"row\", \"col\"];\n          return R(e, function (e) {\n            return e !== n && y(t, e);\n          }) ? q.none() : q.from(n);\n        }().fold(function () {\n          return Wt(r[0], \"scope\");\n        }, function (e) {\n          return Mn(r[0], \"scope\", e + \"group\");\n        }), C(r[0]);\n      }\n    };\n  }\n  var _l = /(\\d+(\\.\\d+)?)%/,\n    Wl = /(\\d+(\\.\\d+)?)px|em/,\n    jl = en(\"col\"),\n    Fl = C(_l),\n    Hl = en(\"col\"),\n    Vl = function Vl(r) {\n      return yo(r).fold(function () {\n        return e = Eo(t = r, vr), n = C(0), {\n          width: e,\n          pixelWidth: e,\n          getWidths: function getWidths(e, n) {\n            return Bo(e, t, n);\n          },\n          getCellDelta: n,\n          singleColumnWidth: C([0]),\n          minCellWidth: n,\n          setElementWidth: E,\n          adjustTableWidth: E,\n          isRelative: !0,\n          label: \"none\"\n        };\n        var t, e, n;\n      }, function (e) {\n        return n = r, t = e, (null !== Fl().exec(t) ? Po : No)(n);\n        var n, t;\n      });\n    },\n    ql = No,\n    Ul = Po,\n    Gl = [\"img\", \"br\"],\n    $l = function $l(e, u) {\n      var i = function i(e) {\n        for (var n = ln(e), t = n.length - 1; 0 <= t; t--) {\n          var r = n[t];\n          if (u(r)) return q.some(r);\n          var o = i(r);\n          if (o.isSome()) return o;\n        }\n        return q.none();\n      };\n      return i(e);\n    },\n    Kl = {\n      scope: [\"row\", \"col\"]\n    },\n    Xl = {\n      selected: \"data-mce-selected\",\n      selectedSelector: \"td[data-mce-selected],th[data-mce-selected]\",\n      firstSelected: \"data-mce-first-selected\",\n      firstSelectedSelector: \"td[data-mce-first-selected],th[data-mce-first-selected]\",\n      lastSelected: \"data-mce-last-selected\",\n      lastSelectedSelector: \"td[data-mce-last-selected],th[data-mce-last-selected]\"\n    },\n    Yl = uu(\"th,td,caption\"),\n    Jl = uu(\"th,td\"),\n    Ql = ru,\n    Zl = Lr([{\n      none: []\n    }, {\n      only: [\"index\"]\n    }, {\n      left: [\"index\", \"next\"]\n    }, {\n      middle: [\"prev\", \"index\", \"next\"]\n    }, {\n      right: [\"prev\", \"index\"]\n    }]),\n    ea = _K({}, Zl),\n    na = mu(function (e) {\n      return e < 0;\n    }),\n    ta = mu(x),\n    ra = Lr([{\n      invalid: [\"raw\"]\n    }, {\n      pixels: [\"value\"]\n    }, {\n      percent: [\"value\"]\n    }]),\n    oa = _K(_K({}, ra), {\n      from: function from(e) {\n        return ee(e, \"%\") ? pu(\"%\", ra.percent, e) : ee(e, \"px\") ? pu(\"px\", ra.pixels, e) : ra.invalid(e);\n      }\n    }),\n    ua = function ua(e) {\n      if (0 === e.length) return e;\n      var n,\n        t,\n        r = I(e, function (e, n) {\n          var t = oa.from(n).fold(function () {\n            return {\n              value: n,\n              remainder: 0\n            };\n          }, function (e) {\n            return n = e, {\n              value: (t = Math.floor(n)) + \"px\",\n              remainder: n - t\n            };\n            var n, t;\n          }, function (e) {\n            return {\n              value: e + \"%\",\n              remainder: 0\n            };\n          });\n          return {\n            output: [t.value].concat(e.output),\n            remainder: e.remainder + t.remainder\n          };\n        }, {\n          output: [],\n          remainder: 0\n        }),\n        o = r.output;\n      return o.slice(0, o.length - 1).concat([(n = o[o.length - 1], t = Math.round(r.remainder), oa.from(n).fold(C(n), function (e) {\n        return e + t + \"px\";\n      }, function (e) {\n        return e + t + \"%\";\n      }))]);\n    },\n    ia = oa.from,\n    ca = Ru([\"compare\", \"extract\", \"mutate\", \"sink\"]),\n    la = Ru([\"element\", \"start\", \"stop\", \"destroy\"]),\n    aa = Ru([\"forceDrop\", \"drop\", \"move\", \"delayDrop\"]),\n    fa = function fa(e, n, t, r) {\n      e.dom.removeEventListener(n, t, r);\n    },\n    sa = x,\n    ma = Ou,\n    da = Eu(\"ephox-dragster\").resolve,\n    ga = ca({\n      compare: function compare(e, n) {\n        return uo(n.left - e.left, n.top - e.top);\n      },\n      extract: function extract(e) {\n        return q.some(uo(e.x, e.y));\n      },\n      sink: function sink(e, n) {\n        var t,\n          r,\n          o,\n          u = (t = n, r = _K({\n            layerClass: da(\"blocker\")\n          }, t), Mn(o = Ve.fromTag(\"div\"), \"role\", \"presentation\"), qn(o, {\n            position: \"fixed\",\n            left: \"0px\",\n            top: \"0px\",\n            width: \"100%\",\n            height: \"100%\"\n          }), Bu(o, da(\"blocker\")), Bu(o, r.layerClass), {\n            element: C(o),\n            destroy: function destroy() {\n              Yt(o);\n            }\n          }),\n          i = Au(u.element(), \"mousedown\", e.forceDrop),\n          c = Au(u.element(), \"mouseup\", e.drop),\n          l = Au(u.element(), \"mousemove\", e.move),\n          a = Au(u.element(), \"mouseout\", e.delayDrop);\n        return la({\n          element: u.element,\n          start: function start(e) {\n            Xt(e, u.element());\n          },\n          stop: function stop() {\n            Yt(u.element());\n          },\n          destroy: function destroy() {\n            u.destroy(), c.unbind(), l.unbind(), a.unbind(), i.unbind();\n          }\n        });\n      },\n      mutate: function mutate(e, n) {\n        e.mutate(n.left, n.top);\n      }\n    }),\n    pa = function pa(e) {\n      return e.dom.contentEditable;\n    },\n    ba = Eu(\"ephox-snooker\").resolve,\n    ha = ba(\"resizer-bar\"),\n    va = ba(\"resizer-rows\"),\n    wa = ba(\"resizer-cols\"),\n    ya = ba(\"resizer-bar-dragging\"),\n    Ca = {\n      structure: !1,\n      style: !0\n    },\n    Sa = {\n      structure: !0,\n      style: !1\n    },\n    Ta = {\n      structure: !0,\n      style: !0\n    },\n    xa = {\n      \"border-collapse\": \"collapse\",\n      width: \"100%\"\n    },\n    Ra = D(5, function (e) {\n      var n = e + 1 + \"px\";\n      return {\n        title: n,\n        value: n\n      };\n    }),\n    Da = O([\"Solid\", \"Dotted\", \"Dashed\", \"Double\", \"Groove\", \"Ridge\", \"Inset\", \"Outset\", \"None\", \"Hidden\"], function (e) {\n      return {\n        title: e,\n        value: e.toLowerCase()\n      };\n    }),\n    Oa = {\n      border: \"1\"\n    },\n    Aa = \"preservetable\",\n    ka = function ka(e) {\n      return \"fixed\" === $u(e) || !1 === Ku(e);\n    },\n    Ia = function Ia(e) {\n      return \"responsive\" === $u(e);\n    },\n    Ba = function Ba(e) {\n      var n = Ro(e);\n      wu(e, q.some(n), q.none()), gi(e);\n    },\n    Ma = function Ma(e) {\n      var n = vr(e) + \"px\";\n      wu(e, q.some(n), q.none()), gi(e);\n    },\n    Ea = function Ea(e) {\n      $n(e, \"width\");\n      var n = tt(e);\n      A(0 < n.length ? n : nt(e), function (e) {\n        $n(e, \"width\"), gi(e);\n      }), gi(e);\n    },\n    Pa = \"bar-\",\n    Na = function Na(n, e, t) {\n      return n.property().isText(e) && 0 === n.property().getText(e).trim().length || n.property().isComment(e) ? t(e).bind(function (e) {\n        return Na(n, e, t).orThunk(function () {\n          return q.some(e);\n        });\n      }) : q.none();\n    },\n    za = function za(e, n) {\n      var t = Na(e, n, e.query().prevSibling).getOr(n);\n      if (e.property().isText(t)) return hi(t, vi(e, t));\n      var r = e.property().children(t);\n      return 0 < r.length ? za(e, r[r.length - 1]) : hi(t, vi(e, t));\n    },\n    La = za,\n    _a = Zt(),\n    Wa = en(\"th\"),\n    ja = function ja(e) {\n      var n = k(e, function (e) {\n        return Wa(e.element);\n      });\n      return 0 === n.length ? q.some(\"td\") : n.length === e.length ? q.some(\"th\") : q.none();\n    },\n    Fa = xi,\n    Ha = Ri,\n    Va = Di,\n    qa = function qa(t) {\n      return {\n        isValue: x,\n        isError: v,\n        getOr: C(t),\n        getOrThunk: C(t),\n        getOrDie: C(t),\n        or: function or(e) {\n          return qa(t);\n        },\n        orThunk: function orThunk(e) {\n          return qa(t);\n        },\n        fold: function fold(e, n) {\n          return n(t);\n        },\n        map: function map(e) {\n          return qa(e(t));\n        },\n        mapError: function mapError(e) {\n          return qa(t);\n        },\n        each: function each(e) {\n          e(t);\n        },\n        bind: function bind(e) {\n          return e(t);\n        },\n        exists: function exists(e) {\n          return e(t);\n        },\n        forall: function forall(e) {\n          return e(t);\n        },\n        toOptional: function toOptional() {\n          return q.some(t);\n        }\n      };\n    },\n    Ua = function Ua(t) {\n      return {\n        isValue: v,\n        isError: x,\n        getOr: S,\n        getOrThunk: function getOrThunk(e) {\n          return e();\n        },\n        getOrDie: function getOrDie() {\n          return e = String(t), function () {\n            throw new Error(e);\n          }();\n          var e;\n        },\n        or: S,\n        orThunk: function orThunk(e) {\n          return e();\n        },\n        fold: function fold(e, n) {\n          return e(t);\n        },\n        map: function map(e) {\n          return Ua(t);\n        },\n        mapError: function mapError(e) {\n          return Ua(e(t));\n        },\n        each: E,\n        bind: function bind(e) {\n          return Ua(t);\n        },\n        exists: v,\n        forall: x,\n        toOptional: q.none\n      };\n    },\n    Ga = {\n      value: qa,\n      error: Ua,\n      fromOption: function fromOption(e, n) {\n        return e.fold(function () {\n          return Ua(n);\n        }, qa);\n      }\n    },\n    $a = en(\"col\"),\n    Ka = en(\"colgroup\"),\n    Xa = [\"body\", \"p\", \"div\", \"article\", \"aside\", \"figcaption\", \"figure\", \"footer\", \"header\", \"nav\", \"section\", \"ol\", \"ul\", \"table\", \"thead\", \"tfoot\", \"tbody\", \"caption\", \"tr\", \"td\", \"th\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"blockquote\", \"pre\", \"address\"],\n    Ya = Zt(),\n    Ja = Sc(\"thead\", !0),\n    Qa = Sc(\"tbody\", !1),\n    Za = Sc(\"tfoot\", !1),\n    ef = zl(\"th\"),\n    nf = zl(\"td\"),\n    tf = zi(function (e, n, t, r) {\n      var o = n[0].row;\n      return yc(I(Cc(n), function (e, n) {\n        return {\n          grid: nc(e.grid, o, n.row + e.delta, t, r.getOrInit),\n          delta: e.delta + 1\n        };\n      }, {\n        grid: e,\n        delta: 0\n      }).grid, o, n[0].column);\n    }, _i, E, E, Nl),\n    rf = zi(function (e, n, t, r) {\n      var o = Cc(n),\n        u = o[o.length - 1],\n        i = u.row + u.rowspan;\n      return yc(I(o, function (e, n) {\n        return nc(e, i, n.row, t, r.getOrInit);\n      }, e), i, n[0].column);\n    }, _i, E, E, Nl),\n    of = zi(function (e, n, t, r) {\n      var o = n.details,\n        u = fc(o),\n        i = u[0].column;\n      return yc(I(u, function (e, n) {\n        return {\n          grid: tc(e.grid, i, n.column + e.delta, t, r.getOrInit),\n          delta: e.delta + 1\n        };\n      }, {\n        grid: e,\n        delta: 0\n      }).grid, o[0].row, i);\n    }, kc(!0), Rc, E, Nl),\n    uf = zi(function (e, n, t, r) {\n      var o = n.details,\n        u = o[o.length - 1],\n        i = u.column + u.colspan;\n      return yc(I(fc(o), function (e, n) {\n        return tc(e, i, n.column, t, r.getOrInit);\n      }, e), o[0].row, i);\n    }, kc(!1), Rc, E, Nl),\n    cf = zi(function (e, n, t, r) {\n      var o,\n        u,\n        i = fc(n.details),\n        c = (o = e, u = O(i, function (e) {\n          return e.column;\n        }), N(o, function (e) {\n          var n = e.cells,\n            t = I(u, function (e, n) {\n              return 0 <= n && n < e.length ? e.slice(0, n).concat(e.slice(n + 1)) : e;\n            }, n);\n          return 0 < t.length ? [ye(e.element, t, e.section, e.isNew)] : [];\n        })),\n        l = 0 < c.length ? c[0].cells.length - 1 : 0;\n      return yc(c, i[0].row, Math.min(i[0].column, l));\n    }, function (n, e) {\n      return Wi(n, e).map(function (e) {\n        return {\n          details: e,\n          pixelDelta: -Ac(n, e)\n        };\n      });\n    }, Rc, vc, Nl),\n    lf = zi(function (e, n, t, r) {\n      var o,\n        u,\n        i,\n        c,\n        l = Cc(n),\n        a = (o = l[0].row, u = l[l.length - 1].row, c = (i = gt(e)).rows, i.cols.concat(c.slice(0, o)).concat(c.slice(u + 1))),\n        f = 0 < a.length ? a.length - 1 : 0;\n      return yc(a, Math.min(n[0].row, f), n[0].column);\n    }, _i, E, vc, Nl),\n    af = zi(function (e, n, t, r) {\n      return yc(lc(e, O(fc(n), function (e) {\n        return e.column;\n      }), !0, t, r.replaceOrInit), n[0].row, n[0].column);\n    }, Wi, E, E, ef),\n    ff = zi(function (e, n, t, r) {\n      return yc(lc(e, O(fc(n), function (e) {\n        return e.column;\n      }), !1, t, r.replaceOrInit), n[0].row, n[0].column);\n    }, Wi, E, E, nf),\n    sf = zi(Ja, Wi, E, E, ef),\n    mf = zi(Qa, Wi, E, E, nf),\n    df = zi(Za, Wi, E, E, nf),\n    gf = zi(function (e, n, t, r) {\n      return yc(ac(e, n, t, r.replaceOrInit), n[0].row, n[0].column);\n    }, Wi, E, E, ef),\n    pf = zi(function (e, n, t, r) {\n      return yc(ac(e, n, t, r.replaceOrInit), n[0].row, n[0].column);\n    }, Wi, E, E, nf),\n    bf = zi(function (e, n, t, r) {\n      var o = n.cells;\n      return bc(o), wc(function (e, n, t) {\n        var r = gt(e).rows;\n        if (0 === r.length) return e;\n        for (var o = n.startRow; o <= n.finishRow; o++) for (var u = n.startCol; u <= n.finishCol; u++) {\n          var i = r[o],\n            c = st(i, u).isLocked;\n          ft(i, u, we(t(), !1, c));\n        }\n        return e;\n      }(e, n.bounds, r.merge(o)), q.from(o[0]));\n    }, Fi, xc, E, Ll),\n    hf = zi(function (e, n, t, r) {\n      return wc(I(n, function (e, n) {\n        return Vi(e, n, t, r.unmerge(n));\n      }, e), q.from(n[0]));\n    }, Hi, xc, E, Ll),\n    vf = zi(function (e, n, t, r) {\n      var o,\n        u,\n        i = (o = n.clipboard, u = n.generators, Mi($t.fromTable(o), u, !0));\n      return Qi({\n        row: n.row,\n        column: n.column\n      }, e, i, n.generators, t).fold(function () {\n        return wc(e, q.some(n.element));\n      }, function (e) {\n        return yc(e, n.row, n.column);\n      });\n    }, function (n, t) {\n      return et(t.element).bind(function (e) {\n        return Pi(n, e).map(function (e) {\n          return _K(_K({}, e), {\n            generators: t.generators,\n            clipboard: t.clipboard\n          });\n        });\n      });\n    }, xc, E, Nl),\n    wf = zi(function (e, n, t, r) {\n      var o = gt(e).rows,\n        u = n.cells[0].column,\n        i = o[n.cells[0].row];\n      return yc(Zi(u, e, Tc(n.clipboard, n.generators, i), n.generators, t), n.cells[0].row, n.cells[0].column);\n    }, Ic(!0), E, E, Nl),\n    yf = zi(function (e, n, t, r) {\n      var o = gt(e).rows,\n        u = n.cells[n.cells.length - 1].column + n.cells[n.cells.length - 1].colspan,\n        i = o[n.cells[0].row];\n      return yc(Zi(u, e, Tc(n.clipboard, n.generators, i), n.generators, t), n.cells[0].row, n.cells[0].column);\n    }, Ic(!1), E, E, Nl),\n    Cf = zi(function (e, n, t, r) {\n      var o = gt(e).rows,\n        u = n.cells[0].row,\n        i = o[u];\n      return yc(ec(u, e, Tc(n.clipboard, n.generators, i), n.generators, t), n.cells[0].row, n.cells[0].column);\n    }, Li, E, E, Nl),\n    Sf = zi(function (e, n, t, r) {\n      var o = gt(e).rows,\n        u = n.cells[n.cells.length - 1].row + n.cells[n.cells.length - 1].rowspan,\n        i = o[n.cells[0].row];\n      return yc(ec(u, e, Tc(n.clipboard, n.generators, i), n.generators, t), n.cells[0].row, n.cells[0].column);\n    }, Li, E, E, Nl),\n    Tf = function Tf(e, n) {\n      var i = $t.fromTable(e);\n      return _i(i, n).bind(function (e) {\n        var n = e[e.length - 1],\n          o = e[0].row,\n          u = n.row + n.rowspan;\n        return function () {\n          var e = O(i.all.slice(o, u), function (e) {\n              return Ci(e).type;\n            }),\n            n = y(e, \"header\"),\n            t = y(e, \"footer\");\n          if (n || t) {\n            var r = y(e, \"body\");\n            return !n || r || t ? n || r || !t ? q.none() : q.some(\"footer\") : q.some(\"header\");\n          }\n          return q.some(\"body\");\n        }();\n      }).getOr(\"\");\n    },\n    xf = {\n      styles: {\n        \"border-collapse\": \"collapse\",\n        width: \"100%\"\n      },\n      attributes: {\n        border: \"1\"\n      },\n      colGroups: !1\n    },\n    Rf = tinymce.util.Tools.resolve(\"tinymce.util.Tools\"),\n    Df = [{\n      text: \"None\",\n      value: \"\"\n    }, {\n      text: \"Top\",\n      value: \"top\"\n    }, {\n      text: \"Middle\",\n      value: \"middle\"\n    }, {\n      text: \"Bottom\",\n      value: \"bottom\"\n    }],\n    Of = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,\n    Af = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i,\n    kf = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/,\n    If = /^rgba\\((\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d?(?:\\.\\d+)?)\\)/,\n    Bf = function Bf(e) {\n      return O(e, function (e) {\n        var n = e.text || e.title;\n        return Qc(e) ? {\n          text: n,\n          items: Bf(e.menu)\n        } : {\n          text: n,\n          value: e.value\n        };\n      });\n    },\n    Mf = function Mf(t, r, e, o, a) {\n      return O(e, function (e) {\n        var u,\n          i,\n          c,\n          l,\n          n = e.text || e.title;\n        return Qc(e) ? {\n          type: \"nestedmenuitem\",\n          text: n,\n          getSubmenuItems: function getSubmenuItems() {\n            return Mf(t, r, e.menu, o, a);\n          }\n        } : {\n          text: n,\n          type: \"togglemenuitem\",\n          onAction: function onAction() {\n            return a(e.value);\n          },\n          onSetup: (u = t, i = r, c = o, l = e.value, function (t) {\n            function e() {\n              function e(e) {\n                return u.formatter.match(c, {\n                  value: l\n                }, e.dom, o);\n              }\n              var n = Ql(i);\n              o ? (t.setActive(!R(n, e)), r.set(u.formatter.formatChanged(c, function (e) {\n                return t.setActive(!e);\n              }, !0))) : (t.setActive(z(n, e)), r.set(u.formatter.formatChanged(c, t.setActive, !1, {\n                value: l\n              })));\n            }\n            var r = Yc(function (e) {\n                return e.unbind();\n              }),\n              o = !ne(l);\n            return u.initialized ? e() : u.on(\"init\", e), r.clear;\n          })\n        };\n      });\n    },\n    Ef = function Ef(e) {\n      return N(e, function (e) {\n        return Qc(e) ? [_K(_K({}, e), {\n          menu: Ef(e.menu)\n        })] : ne(e.value) ? [e] : [];\n      });\n    },\n    Pf = [{\n      name: \"width\",\n      type: \"input\",\n      label: \"Width\"\n    }, {\n      name: \"height\",\n      type: \"input\",\n      label: \"Height\"\n    }, {\n      name: \"celltype\",\n      type: \"listbox\",\n      label: \"Cell type\",\n      items: [{\n        text: \"Cell\",\n        value: \"td\"\n      }, {\n        text: \"Header cell\",\n        value: \"th\"\n      }]\n    }, {\n      name: \"scope\",\n      type: \"listbox\",\n      label: \"Scope\",\n      items: [{\n        text: \"None\",\n        value: \"\"\n      }, {\n        text: \"Row\",\n        value: \"row\"\n      }, {\n        text: \"Column\",\n        value: \"col\"\n      }, {\n        text: \"Row group\",\n        value: \"rowgroup\"\n      }, {\n        text: \"Column group\",\n        value: \"colgroup\"\n      }]\n    }, {\n      name: \"halign\",\n      type: \"listbox\",\n      label: \"Horizontal align\",\n      items: [{\n        text: \"None\",\n        value: \"\"\n      }, {\n        text: \"Left\",\n        value: \"left\"\n      }, {\n        text: \"Center\",\n        value: \"center\"\n      }, {\n        text: \"Right\",\n        value: \"right\"\n      }]\n    }, {\n      name: \"valign\",\n      type: \"listbox\",\n      label: \"Vertical align\",\n      items: Df\n    }],\n    Nf = {\n      normal: il(!1),\n      ifTruthy: il(!0)\n    },\n    zf = P(fl, [\"left\", \"center\", \"right\"], \"align\"),\n    Lf = P(fl, [\"top\", \"middle\", \"bottom\"], \"valign\"),\n    _f = [{\n      type: \"listbox\",\n      name: \"type\",\n      label: \"Row type\",\n      items: [{\n        text: \"Header\",\n        value: \"header\"\n      }, {\n        text: \"Body\",\n        value: \"body\"\n      }, {\n        text: \"Footer\",\n        value: \"footer\"\n      }]\n    }, {\n      type: \"listbox\",\n      name: \"align\",\n      label: \"Alignment\",\n      items: [{\n        text: \"None\",\n        value: \"\"\n      }, {\n        text: \"Left\",\n        value: \"left\"\n      }, {\n        text: \"Center\",\n        value: \"center\"\n      }, {\n        text: \"Right\",\n        value: \"right\"\n      }]\n    }, {\n      label: \"Height\",\n      name: \"height\",\n      type: \"input\"\n    }],\n    Wf = function Wf(e, n, t, r) {\n      if (\"TD\" === n.tagName || \"TH\" === n.tagName) T(t) ? e.setStyle(n, t, r) : e.setStyle(n, t);else if (n.children) for (var o = 0; o < n.children.length; o++) Wf(e, n.children[o], t, r);\n    },\n    jf = {\n      remove_similar: !0,\n      inherit: !1\n    },\n    Ff = _K({\n      selector: \"td,th\"\n    }, jf),\n    Hf = {\n      tablecellbackgroundcolor: _K({\n        styles: {\n          backgroundColor: \"%value\"\n        }\n      }, Ff),\n      tablecellverticalalign: _K({\n        styles: {\n          \"vertical-align\": \"%value\"\n        }\n      }, Ff),\n      tablecellbordercolor: _K({\n        styles: {\n          borderColor: \"%value\"\n        }\n      }, Ff),\n      tablecellclass: _K({\n        classes: [\"%value\"]\n      }, Ff),\n      tableclass: _K({\n        selector: \"table\",\n        classes: [\"%value\"]\n      }, jf),\n      tablecellborderstyle: _K({\n        styles: {\n          borderStyle: \"%value\"\n        }\n      }, Ff),\n      tablecellborderwidth: _K({\n        styles: {\n          borderWidth: \"%value\"\n        }\n      }, Ff)\n    },\n    Vf = Lr([{\n      none: [\"current\"]\n    }, {\n      first: [\"current\"]\n    }, {\n      middle: [\"current\", \"target\"]\n    }, {\n      last: [\"current\"]\n    }]),\n    qf = _K(_K({}, Vf), {\n      none: function none(e) {\n        return Vf.none(e = void 0 === e ? void 0 : e);\n      }\n    }),\n    Uf = function Uf(e, n, t, r, o) {\n      void 0 === o && (o = x);\n      var u = 1 === r;\n      if (!u && t <= 0) return qf.first(e[0]);\n      if (u && t >= e.length - 1) return qf.last(e[e.length - 1]);\n      var i = t + r,\n        c = e[i];\n      return o(c) ? qf.middle(n, c) : Uf(e, n, i, r, o);\n    },\n    Gf = function Gf(e, n, t, r) {\n      return {\n        start: e,\n        soffset: n,\n        finish: t,\n        foffset: r\n      };\n    },\n    $f = Lr([{\n      before: [\"element\"]\n    }, {\n      on: [\"element\", \"offset\"]\n    }, {\n      after: [\"element\"]\n    }]),\n    Kf = {\n      before: $f.before,\n      on: $f.on,\n      after: $f.after,\n      cata: function cata(e, n, t, r) {\n        return e.fold(n, t, r);\n      },\n      getStart: function getStart(e) {\n        return e.fold(S, S, S);\n      }\n    },\n    Xf = Lr([{\n      domRange: [\"rng\"]\n    }, {\n      relative: [\"startSitu\", \"finishSitu\"]\n    }, {\n      exact: [\"start\", \"soffset\", \"finish\", \"foffset\"]\n    }]),\n    Yf = {\n      domRange: Xf.domRange,\n      relative: Xf.relative,\n      exact: Xf.exact,\n      exactFromRange: function exactFromRange(e) {\n        return Xf.exact(e.start, e.soffset, e.finish, e.foffset);\n      },\n      getWin: function getWin(e) {\n        var n = e.match({\n          domRange: function domRange(e) {\n            return Ve.fromDom(e.startContainer);\n          },\n          relative: function relative(e, n) {\n            return Kf.getStart(e);\n          },\n          exact: function exact(e, n, t, r) {\n            return e;\n          }\n        });\n        return Ve.fromDom(tn(n).dom.defaultView);\n      },\n      range: Gf\n    },\n    Jf = function Jf(e, n) {\n      return e.selectNodeContents(n.dom);\n    },\n    Qf = Lr([{\n      ltr: [\"start\", \"soffset\", \"finish\", \"foffset\"]\n    }, {\n      rtl: [\"start\", \"soffset\", \"finish\", \"foffset\"]\n    }]);\n  function Zf(e, n, t) {\n    return n >= e.left && n <= e.right && t >= e.top && t <= e.bottom;\n  }\n  function es(t, r, e, n, o) {\n    function l(e) {\n      var n = t.dom.createRange();\n      return n.setStart(r.dom, e), n.collapse(!0), n;\n    }\n    var u = Et(r).length,\n      i = function (e, n, t, r) {\n        if (0 === r) return 0;\n        if (e === t) return r - 1;\n        for (var o = t, u = 1; u < r; u++) {\n          var i = l(u).getBoundingClientRect(),\n            c = Math.abs(e - i.left);\n          if (n <= i.bottom) {\n            if (n < i.top || o < c) return u - 1;\n            o = c;\n          }\n        }\n        return 0;\n      }(e, n, o.right, u);\n    return l(i);\n  }\n  function ns(e, n) {\n    return n - e.left < e.right - n;\n  }\n  function ts(e, n, t) {\n    var r = e.dom.createRange();\n    return r.selectNode(n.dom), r.collapse(t), r;\n  }\n  function rs(n, e, t) {\n    var r = n.dom.createRange();\n    r.selectNode(e.dom);\n    var o = ns(r.getBoundingClientRect(), t);\n    return (!0 === o ? Wo : jo)(e).map(function (e) {\n      return ts(n, e, o);\n    });\n  }\n  function os(e, n, t) {\n    var r = ns(n.dom.getBoundingClientRect(), t);\n    return q.some(ts(e, n, r));\n  }\n  function us(e, n) {\n    var t = Ye(e);\n    return \"input\" === t ? Kf.after(e) : y([\"br\", \"img\"], t) ? 0 === n ? Kf.before(e) : Kf.after(e) : Kf.on(e, n);\n  }\n  function is(e, n) {\n    var t = e.fold(Kf.before, us, Kf.after),\n      r = n.fold(Kf.before, us, Kf.after);\n    return Yf.relative(t, r);\n  }\n  function cs(e, n, t, r) {\n    var o = us(e, n),\n      u = us(t, r);\n    return Yf.relative(o, u);\n  }\n  function ls(e) {\n    return q.from(e.getSelection());\n  }\n  function as(e, n) {\n    ls(e).each(function (e) {\n      e.removeAllRanges(), e.addRange(n);\n    });\n  }\n  function fs(e, n, t, r, o) {\n    as(e, Rl(e, n, t, r, o));\n  }\n  function ss(l, e) {\n    return Al(l, e).match({\n      ltr: function ltr(e, n, t, r) {\n        fs(l, e, n, t, r);\n      },\n      rtl: function rtl(o, u, i, c) {\n        ls(l).each(function (e) {\n          if (e.setBaseAndExtent) e.setBaseAndExtent(o.dom, u, i.dom, c);else if (e.extend) try {\n            t = i, r = c, (n = e).collapse(o.dom, u), n.extend(t.dom, r);\n          } catch (e) {\n            fs(l, i, c, o, u);\n          } else fs(l, i, c, o, u);\n          var n, t, r;\n        });\n      }\n    });\n  }\n  function ms(e, n, t, r, o) {\n    ss(e, cs(n, t, r, o));\n  }\n  function ds(e, n, t) {\n    ss(e, is(n, t));\n  }\n  function gs(e) {\n    if (0 < e.rangeCount) {\n      var n = e.getRangeAt(0),\n        t = e.getRangeAt(e.rangeCount - 1);\n      return q.some(Gf(Ve.fromDom(n.startContainer), n.startOffset, Ve.fromDom(t.endContainer), t.endOffset));\n    }\n    return q.none();\n  }\n  function ps(e) {\n    if (null === e.anchorNode || null === e.focusNode) return gs(e);\n    var n,\n      t,\n      r,\n      o,\n      u,\n      i,\n      c,\n      l,\n      a,\n      f,\n      s,\n      m = Ve.fromDom(e.anchorNode),\n      d = Ve.fromDom(e.focusNode);\n    return n = m, t = e.anchorOffset, r = d, o = e.focusOffset, i = t, c = r, l = o, (a = nn(u = n).dom.createRange()).setStart(u.dom, i), a.setEnd(c.dom, l), f = a, s = ce(n, r) && t === o, f.collapsed && !s ? q.some(Gf(m, e.anchorOffset, d, e.focusOffset)) : gs(e);\n  }\n  function bs(e, n, t) {\n    as(e, ((t = void 0 === t || t) ? Tl : Sl)(e, n));\n  }\n  function hs(e) {\n    return ls(e).filter(function (e) {\n      return 0 < e.rangeCount;\n    }).bind(ps).map(function (e) {\n      return Yf.exact(e.start, e.soffset, e.finish, e.foffset);\n    });\n  }\n  function vs(e, n, t) {\n    return Zs(e, n, (o = Nu, Cl(r = t, void 0).fold(function () {\n      return qf.none(r);\n    }, function (e) {\n      return Uf(e.all, r, e.index, 1, o);\n    })));\n    var r, o;\n  }\n  function ws(e, n) {\n    var t = kl(e, n);\n    return Gf(Ve.fromDom(t.startContainer), t.startOffset, Ve.fromDom(t.endContainer), t.endOffset);\n  }\n  function ys(e, n) {\n    return {\n      item: e,\n      mode: n\n    };\n  }\n  function Cs(e, n, t, r) {\n    return void 0 === r && (r = Ks), e.property().parent(n).map(function (e) {\n      return ys(e, r);\n    });\n  }\n  function Ss(n) {\n    return function (e) {\n      return 0 === n.property().children(e).length;\n    };\n  }\n  function Ts(e, n) {\n    return am(sm, e, Ss(sm), n);\n  }\n  function xs(e, n) {\n    return fm(sm, e, Ss(sm), n);\n  }\n  function Rs(e) {\n    return In(e, \"tr\");\n  }\n  function Ds(e) {\n    return \"br\" === Ye(e);\n  }\n  function Os(e, n, t, r) {\n    var o, u, i, c, l, a, f;\n    return (Ds(n) ? (o = e, (i = r).traverse(u = n).orThunk(function () {\n      return pm(u, i.gather, o);\n    }).map(i.relative)) : (c = e, l = r, an(a = n, f = t).filter(Ds).orThunk(function () {\n      return an(a, f - 1).filter(Ds);\n    }).bind(function (e) {\n      return l.traverse(e).fold(function () {\n        return pm(e, l.gather, c).map(l.relative);\n      }, function (e) {\n        return rn(r = e).bind(function (n) {\n          var t = ln(n);\n          return gm(t, r).map(function (e) {\n            return {\n              parent: n,\n              children: t,\n              element: r,\n              index: e\n            };\n          });\n        }).map(function (e) {\n          return Kf.on(e.parent, e.index);\n        });\n        var r;\n      });\n    }))).map(function (e) {\n      return {\n        start: e,\n        finish: e\n      };\n    });\n  }\n  function As(e, n) {\n    return {\n      left: e.left,\n      top: e.top + n,\n      right: e.right,\n      bottom: e.bottom + n\n    };\n  }\n  function ks(e, n) {\n    return {\n      left: e.left,\n      top: e.top - n,\n      right: e.right,\n      bottom: e.bottom - n\n    };\n  }\n  function Is(e, n, t) {\n    return {\n      left: e.left + n,\n      top: e.top + t,\n      right: e.right + n,\n      bottom: e.bottom + t\n    };\n  }\n  function Bs(e) {\n    return {\n      left: e.left,\n      top: e.top,\n      right: e.right,\n      bottom: e.bottom\n    };\n  }\n  function Ms(e, n) {\n    return q.some(e.getRect(n));\n  }\n  function Es(e, n, t) {\n    return gn(n) ? Ms(e, n).map(Bs) : pn(n) ? (r = e, o = n, (0 <= (u = t) && u < Lo(o) ? r.getRangedRect(o, u, o, u + 1) : 0 < u ? r.getRangedRect(o, u - 1, o, u) : q.none()).map(Bs)) : q.none();\n    var r, o, u;\n  }\n  function Ps(e, n) {\n    return gn(n) ? Ms(e, n).map(Bs) : pn(n) ? e.getRangedRect(n, 0, n, Lo(n)).map(Bs) : q.none();\n  }\n  function Ns(n, e, r) {\n    return Rn(function (e, n) {\n      return n(e);\n    }, Dn, e, gc, void 0).fold(v, function (e) {\n      return Ps(n, e).exists(function (e) {\n        return (n = r).left < (t = e).left || Math.abs(t.right - n.left) < 1 || n.left > t.right;\n        var n, t;\n      });\n    });\n  }\n  function zs(n, t, e) {\n    var r,\n      o = n.move(e, 5),\n      u = vm(t, n, e, o, 100).getOr(o),\n      i = u,\n      c = t;\n    return ((r = n).point(i) > c.getInnerHeight() ? q.some(r.point(i) - c.getInnerHeight()) : r.point(i) < 0 ? q.some(-r.point(i)) : q.none()).fold(function () {\n      return t.situsFromPoint(u.left, n.point(u));\n    }, function (e) {\n      return t.scrollBy(0, e), t.situsFromPoint(u.left, n.point(u) - e);\n    });\n  }\n  function Ls(a, f, s, e, m) {\n    return In(e, \"td,th\", f).bind(function (l) {\n      return In(l, \"table\", f).bind(function (e) {\n        return n = e, Dn(m, function (e) {\n          return rn(e).exists(function (e) {\n            return ce(e, n);\n          });\n        }, void 0).isSome() ? (o = t = a, u = r = f, i = c = s, o.getSelection().bind(function (r) {\n          return Os(u, r.finish, r.foffset, i).fold(function () {\n            return q.some(hi(r.finish, r.foffset));\n          }, function (e) {\n            var n = o.fromSitus(e),\n              t = dm.verify(o, r.finish, r.foffset, n.finish, n.foffset, i.failure, u);\n            return dm.cata(t, function (e) {\n              return q.none();\n            }, function () {\n              return q.none();\n            }, function (e) {\n              return q.some(hi(e, 0));\n            }, function (e) {\n              return q.some(hi(e, Lo(e)));\n            });\n          });\n        }).bind(function (e) {\n          return ym(t, r, e.element, e.offset, c, 20).map(t.fromSitus);\n        }).bind(function (n) {\n          return In(n.finish, \"td,th\", f).map(function (e) {\n            return {\n              start: l,\n              finish: e,\n              range: n\n            };\n          });\n        })) : q.none();\n        var o, u, i, n, t, r, c;\n      });\n    });\n  }\n  function _s(e, n, t, r, o, u) {\n    return He().browser.isIE() ? q.none() : u(r, n).orThunk(function () {\n      return Ls(e, n, t, r, o).map(function (e) {\n        var n = e.range;\n        return nm(q.some(rm(n.start, n.soffset, n.finish, n.foffset)), !0);\n      });\n    });\n  }\n  function Ws(e, r) {\n    return In(e, \"tr\", r).bind(function (t) {\n      return In(t, \"table\", r).bind(function (e) {\n        var n = dn(e, \"tr\");\n        return ce(t, n[0]) ? am(sm, e, function (e) {\n          return jo(e).isSome();\n        }, r).map(function (e) {\n          var n = Lo(e);\n          return nm(q.some(rm(e, n, e, n)), !0);\n        }) : q.none();\n      });\n    });\n  }\n  function js(e, r) {\n    return In(e, \"tr\", r).bind(function (t) {\n      return In(t, \"table\", r).bind(function (e) {\n        var n = dn(e, \"tr\");\n        return ce(t, n[n.length - 1]) ? fm(sm, e, function (e) {\n          return Wo(e).isSome();\n        }, r).map(function (e) {\n          return nm(q.some(rm(e, 0, e, 0)), !0);\n        }) : q.none();\n      });\n    });\n  }\n  function Fs(e, n, t, r, o, u, i) {\n    return Ls(e, t, r, o, u).bind(function (e) {\n      return om(n, t, e.start, e.finish, i);\n    });\n  }\n  function Hs(e, n) {\n    return In(e, \"td,th\", n);\n  }\n  function Vs(n) {\n    return function (e) {\n      return e === n;\n    };\n  }\n  function qs(e) {\n    return 37 <= e && e <= 40;\n  }\n  function Us(l) {\n    return {\n      elementFromPoint: function elementFromPoint(e, n) {\n        return Ve.fromPoint(Ve.fromDom(l.document), e, n);\n      },\n      getRect: function getRect(e) {\n        return e.dom.getBoundingClientRect();\n      },\n      getRangedRect: function getRangedRect(e, n, t, r) {\n        var o,\n          u,\n          i,\n          c = Yf.exact(e, n, t, r);\n        return i = (o = kl(l, c)).getClientRects(), 0 < (u = 0 < i.length ? i[0] : o.getBoundingClientRect()).width || 0 < u.height ? q.some(u).map(Dl) : q.none();\n      },\n      getSelection: function getSelection() {\n        return hs(l).map(function (e) {\n          return ws(l, e);\n        });\n      },\n      fromSitus: function fromSitus(e) {\n        var n = Yf.relative(e.start, e.finish);\n        return ws(l, n);\n      },\n      situsFromPoint: function situsFromPoint(e, n) {\n        return t = e, r = n, o = Ve.fromDom(l.document), Js(o, t, r).map(function (e) {\n          return Gf(Ve.fromDom(e.startContainer), e.startOffset, Ve.fromDom(e.endContainer), e.endOffset);\n        }).map(function (e) {\n          return tm(e.start, e.soffset, e.finish, e.foffset);\n        });\n        var t, r, o;\n      },\n      clearSelection: function clearSelection() {\n        ls(l).each(function (e) {\n          return e.removeAllRanges();\n        });\n      },\n      collapseSelection: function collapseSelection(i) {\n        void 0 === i && (i = !1), hs(l).each(function (e) {\n          return e.fold(function (e) {\n            return e.collapse(i);\n          }, function (e, n) {\n            var t = i ? e : n;\n            ds(l, t, t);\n          }, function (e, n, t, r) {\n            var o = i ? e : t,\n              u = i ? n : r;\n            ms(l, o, u, o, u);\n          });\n        });\n      },\n      setSelection: function setSelection(e) {\n        ms(l, e.start, e.soffset, e.finish, e.foffset);\n      },\n      setRelativeSelection: function setRelativeSelection(e, n) {\n        ds(l, e, n);\n      },\n      selectNode: function selectNode(e) {\n        bs(l, e, !1);\n      },\n      selectContents: function selectContents(e) {\n        bs(l, e);\n      },\n      getInnerHeight: function getInnerHeight() {\n        return l.innerHeight;\n      },\n      getScrollY: function getScrollY() {\n        var e = Ve.fromDom(l.document),\n          n = void 0 !== e ? e.dom : document,\n          t = n.body.scrollLeft || n.documentElement.scrollLeft,\n          r = n.body.scrollTop || n.documentElement.scrollTop;\n        return uo(t, r).top;\n      },\n      scrollBy: function scrollBy(e, n) {\n        var t,\n          r = e,\n          o = n,\n          u = Ve.fromDom(l.document);\n        (t = (void 0 !== u ? u.dom : document).defaultView) && t.scrollBy(r, o);\n      }\n    };\n  }\n  function Gs(e, n) {\n    return {\n      rows: e,\n      cols: n\n    };\n  }\n  function $s(e) {\n    return !1 === Mu(Ve.fromDom(e.target), \"ephox-snooker-resizer-bar\");\n  }\n  Qf.ltr, Qf.rtl;\n  function Ks(e, n, t, r) {\n    return void 0 === r && (r = um), t.sibling(e, n).map(function (e) {\n      return ys(e, r);\n    });\n  }\n  function Xs(o, u, n) {\n    function t(e) {\n      Wt(e, o.selected), Wt(e, o.firstSelected), Wt(e, o.lastSelected);\n    }\n    function i(e) {\n      Mn(e, o.selected, \"1\");\n    }\n    function c(e) {\n      r(e), n();\n    }\n    function r(e) {\n      A(dn(e, o.selectedSelector + \",\" + o.firstSelectedSelector + \",\" + o.lastSelectedSelector), t);\n    }\n    return {\n      clearBeforeUpdate: r,\n      clear: c,\n      selectRange: function selectRange(e, n, t, r) {\n        c(e), A(n, i), Mn(t, o.firstSelected, \"1\"), Mn(r, o.lastSelected, \"1\"), u(n, t, r);\n      },\n      selectedSelector: o.selectedSelector,\n      firstSelectedSelector: o.firstSelectedSelector,\n      lastSelectedSelector: o.lastSelectedSelector\n    };\n  }\n  var Ys = function Ys(e, n, t, r) {\n      return pn(n) ? (u = n, i = t, c = r, (l = (o = e).dom.createRange()).selectNode(u.dom), H(l.getClientRects(), function (e) {\n        return Zf(e, i, c) ? q.some(e) : q.none();\n      }).map(function (e) {\n        return es(o, u, i, c, e);\n      })) : (f = n, s = t, m = r, d = (a = e).dom.createRange(), H(ln(f), function (e) {\n        return d.selectNode(e.dom), Zf(d.getBoundingClientRect(), s, m) ? Ys(a, e, s, m) : q.none();\n      }));\n      var o, u, i, c, l, a, f, s, m, d;\n    },\n    Js = document.caretPositionFromPoint ? function (t, e, n) {\n      var r, o;\n      return q.from(null === (o = (r = t.dom).caretPositionFromPoint) || void 0 === o ? void 0 : o.call(r, e, n)).bind(function (e) {\n        if (null === e.offsetNode) return q.none();\n        var n = t.dom.createRange();\n        return n.setStart(e.offsetNode, e.offset), n.collapse(), q.some(n);\n      });\n    } : document.caretRangeFromPoint ? function (e, n, t) {\n      var r, o;\n      return q.from(null === (o = (r = e.dom).caretRangeFromPoint) || void 0 === o ? void 0 : o.call(r, n, t));\n    } : function (o, u, n) {\n      return Ve.fromPoint(o, u, n).bind(function (r) {\n        function e() {\n          return e = o, t = u, (0 === ln(n = r).length ? os : rs)(e, n, t);\n          var e, n, t;\n        }\n        return 0 === ln(r).length ? e() : function (e, n, t, r) {\n          var o = e.dom.createRange();\n          o.selectNode(n.dom);\n          var u = o.getBoundingClientRect();\n          return function (e, n, t, r) {\n            var o = e.dom.createRange();\n            o.selectNode(n.dom);\n            var u = o.getBoundingClientRect(),\n              i = Math.max(u.left, Math.min(u.right, t)),\n              c = Math.max(u.top, Math.min(u.bottom, r));\n            return Ys(e, n, i, c);\n          }(e, n, Math.max(u.left, Math.min(u.right, t)), Math.max(u.top, Math.min(u.bottom, r)));\n        }(o, r, u, n).orThunk(e);\n      });\n    },\n    Qs = tinymce.util.Tools.resolve(\"tinymce.util.VK\"),\n    Zs = function Zs(n, t, e) {\n      return e.fold(q.none, q.none, function (e, n) {\n        return Wo(n).map(function (e) {\n          return u = Yf.exact(e, 0, e, 0), t = u, o = Yf.getWin(t).dom, r = t.match({\n            domRange: function domRange(e) {\n              var n = Ve.fromDom(e.startContainer),\n                t = Ve.fromDom(e.endContainer);\n              return cs(n, e.startOffset, t, e.endOffset);\n            },\n            relative: is,\n            exact: cs\n          }), Al(o, r).match({\n            ltr: n,\n            rtl: n\n          });\n          function n(e, n, t, r) {\n            return Rl(o, e, n, t, r);\n          }\n          var t, o, r, u;\n        });\n      }, function (e) {\n        return n.execCommand(\"mceTableInsertRowAfter\"), vs(n, t, e);\n      });\n    },\n    em = [\"table\", \"li\", \"dl\"],\n    nm = function nm(e, n) {\n      return {\n        selection: e,\n        kill: n\n      };\n    },\n    tm = function tm(e, n, t, r) {\n      return {\n        start: Kf.on(e, n),\n        finish: Kf.on(t, r)\n      };\n    },\n    rm = tm,\n    om = function om(t, e, r, n, o) {\n      return ce(r, n) ? q.none() : tr(r, n, e).bind(function (e) {\n        var n = e.boxes.getOr([]);\n        return 1 < n.length ? (o(t, n, e.start, e.finish), q.some(nm(q.some(rm(r, 0, r, Lo(r))), !0))) : q.none();\n      });\n    },\n    um = function um(e, n, t, r) {\n      void 0 === r && (r = um);\n      var o = e.property().children(n);\n      return t.first(o).map(function (e) {\n        return ys(e, r);\n      });\n    },\n    im = [{\n      current: Cs,\n      next: Ks,\n      fallback: q.none()\n    }, {\n      current: Ks,\n      next: um,\n      fallback: q.some(Cs)\n    }, {\n      current: um,\n      next: um,\n      fallback: q.some(Ks)\n    }],\n    cm = function cm(n, t, r, o, e) {\n      return w(e = void 0 === e ? im : e, function (e) {\n        return e.current === r;\n      }).bind(function (e) {\n        return e.current(n, t, o, e.next).orThunk(function () {\n          return e.fallback.bind(function (e) {\n            return cm(n, t, e, o);\n          });\n        });\n      });\n    },\n    lm = function lm(n, e, t, r, o, u) {\n      return cm(n, e, r, o).bind(function (e) {\n        return u(e.item) ? q.none() : t(e.item) ? q.some(e.item) : lm(n, e.item, t, e.mode, o, u);\n      });\n    },\n    am = function am(e, n, t, r) {\n      return lm(e, n, t, Ks, {\n        sibling: function sibling(e, n) {\n          return e.query().prevSibling(n);\n        },\n        first: function first(e) {\n          return 0 < e.length ? q.some(e[e.length - 1]) : q.none();\n        }\n      }, r);\n    },\n    fm = function fm(e, n, t, r) {\n      return lm(e, n, t, Ks, {\n        sibling: function sibling(e, n) {\n          return e.query().nextSibling(n);\n        },\n        first: function first(e) {\n          return 0 < e.length ? q.some(e[0]) : q.none();\n        }\n      }, r);\n    },\n    sm = Zt(),\n    mm = Lr([{\n      none: [\"message\"]\n    }, {\n      success: []\n    }, {\n      failedUp: [\"cell\"]\n    }, {\n      failedDown: [\"cell\"]\n    }]),\n    dm = _K(_K({}, mm), {\n      verify: function verify(i, e, n, t, r, c, o) {\n        return In(t, \"td,th\", o).bind(function (u) {\n          return In(e, \"td,th\", o).map(function (o) {\n            return ce(u, o) ? ce(t, u) && Lo(u) === r ? c(o) : mm.none(\"in same cell\") : er(Rs, [u, o]).fold(function () {\n              return n = u, t = (e = i).getRect(o), (r = e.getRect(n)).right > t.left && r.left < t.right ? mm.success() : c(o);\n              var e, n, t, r;\n            }, function (e) {\n              return c(o);\n            });\n          });\n        }).getOr(mm.none(\"default\"));\n      },\n      cata: function cata(e, n, t, r, o) {\n        return e.fold(n, t, r, o);\n      }\n    }),\n    gm = function gm(e, n) {\n      return b(e, P(ce, n));\n    },\n    pm = function pm(e, n, t) {\n      return n(e, t).bind(function (e) {\n        return pn(e) && 0 === Et(e).trim().length ? pm(e, n, t) : q.some(e);\n      });\n    },\n    bm = Lr([{\n      none: []\n    }, {\n      retry: [\"caret\"]\n    }]),\n    hm = {\n      point: function point(e) {\n        return e.bottom;\n      },\n      adjuster: function adjuster(e, n, t, r, o) {\n        var u = As(o, 5);\n        return Math.abs(t.bottom - r.bottom) < 1 || t.top > o.bottom ? bm.retry(u) : t.top === o.bottom ? bm.retry(As(o, 1)) : Ns(e, n, o) ? bm.retry(Is(u, 5, 0)) : bm.none();\n      },\n      move: As,\n      gather: xs\n    },\n    vm = function vm(t, r, o, u, i) {\n      return 0 === i ? q.some(u) : (n = t, c = u.left, l = r.point(u), n.elementFromPoint(c, l).filter(function (e) {\n        return \"table\" === Ye(e);\n      }).isSome() ? (e = i - 1, vm(t, r, o, r.move(u, 5), e)) : t.situsFromPoint(u.left, r.point(u)).bind(function (e) {\n        return e.start.fold(q.none, function (n) {\n          return Ps(t, n).bind(function (e) {\n            return r.adjuster(t, n, e, o, u).fold(q.none, function (e) {\n              return vm(t, r, o, e, i - 1);\n            });\n          }).orThunk(function () {\n            return q.some(u);\n          });\n        }, q.none);\n      }));\n      var e, n, c, l;\n    },\n    wm = {\n      tryUp: P(zs, {\n        point: function point(e) {\n          return e.top;\n        },\n        adjuster: function adjuster(e, n, t, r, o) {\n          var u = ks(o, 5);\n          return Math.abs(t.top - r.top) < 1 || t.bottom < o.top ? bm.retry(u) : t.bottom === o.top ? bm.retry(ks(o, 1)) : Ns(e, n, o) ? bm.retry(Is(u, 5, 0)) : bm.none();\n        },\n        move: ks,\n        gather: Ts\n      }),\n      tryDown: P(zs, hm),\n      ieTryUp: function ieTryUp(e, n) {\n        return e.situsFromPoint(n.left, n.top - 5);\n      },\n      ieTryDown: function ieTryDown(e, n) {\n        return e.situsFromPoint(n.left, n.bottom + 5);\n      },\n      getJumpSize: C(5)\n    },\n    ym = function ym(r, o, u, i, c, l) {\n      return 0 === l ? q.none() : Tm(r, o, u, i, c).bind(function (e) {\n        var n = r.fromSitus(e),\n          t = dm.verify(r, u, i, n.finish, n.foffset, c.failure, o);\n        return dm.cata(t, function () {\n          return q.none();\n        }, function () {\n          return q.some(e);\n        }, function (e) {\n          return ce(u, e) && 0 === i ? Cm(r, u, i, ks, c) : ym(r, o, e, 0, c, l - 1);\n        }, function (e) {\n          return ce(u, e) && i === Lo(e) ? Cm(r, u, i, As, c) : ym(r, o, e, Lo(e), c, l - 1);\n        });\n      });\n    },\n    Cm = function Cm(n, e, t, r, o) {\n      return Es(n, e, t).bind(function (e) {\n        return Sm(n, o, r(e, wm.getJumpSize()));\n      });\n    },\n    Sm = function Sm(e, n, t) {\n      var r = He().browser;\n      return r.isChrome() || r.isSafari() || r.isFirefox() || r.isEdge() ? n.otherRetry(e, t) : r.isIE() ? n.ieRetry(e, t) : q.none();\n    },\n    Tm = function Tm(n, e, t, r, o) {\n      return Es(n, t, r).bind(function (e) {\n        return Sm(n, o, e);\n      });\n    },\n    xm = {\n      traverse: cn,\n      gather: xs,\n      relative: Kf.before,\n      otherRetry: wm.tryDown,\n      ieRetry: wm.ieTryDown,\n      failure: dm.failedDown\n    },\n    Rm = {\n      traverse: un,\n      gather: Ts,\n      relative: Kf.before,\n      otherRetry: wm.tryUp,\n      ieRetry: wm.ieTryUp,\n      failure: dm.failedUp\n    },\n    Dm = Vs(38),\n    Om = Vs(40),\n    Am = {\n      isBackward: Vs(37),\n      isForward: Vs(39)\n    },\n    km = {\n      isBackward: Vs(39),\n      isForward: Vs(37)\n    },\n    Im = tinymce.util.Tools.resolve(\"tinymce.Env\");\n  function Bm(I, B, e) {\n    var M = Xs(Xl, function (l, a, f) {\n      e.targets().each(function (c) {\n        rt(a).each(function (e) {\n          var n,\n            o,\n            u,\n            t = fi(I),\n            r = $o(E, Ve.fromDom(I.getDoc()), t),\n            i = (n = c, o = r, _i(u = $t.fromTable(e), n).map(function (e) {\n              var n,\n                t,\n                r = Mi(u, o, !1);\n              return {\n                upOrLeftCells: N(Ei(r.slice(0, (n = e)[n.length - 1].row + 1)), function (e) {\n                  return O(e.cells.slice(0, n[n.length - 1].column + 1), function (e) {\n                    return e.element;\n                  });\n                }),\n                downOrRightCells: N(Ei(r.slice((t = e)[0].row + t[0].rowspan - 1, r.length)), function (e) {\n                  return O(e.cells.slice(t[0].column + t[0].colspan - 1, e.cells.length), function (e) {\n                    return e.element;\n                  });\n                })\n              };\n            }));\n          I.fire(\"TableSelectionChange\", {\n            cells: l,\n            start: a,\n            finish: f,\n            otherCells: i\n          });\n        });\n      });\n    }, function () {\n      I.fire(\"TableSelectionClear\");\n    });\n    return I.on(\"init\", function (e) {\n      var n,\n        t,\n        r,\n        o,\n        u,\n        i,\n        m,\n        d,\n        g,\n        a,\n        c,\n        l,\n        f,\n        s,\n        p,\n        b,\n        h = I.getWin(),\n        v = Yo(I),\n        w = Zo(I),\n        y = (n = Us(h), {\n          clearstate: (c = n, l = v, f = w, s = M, p = Jc(), (t = {\n            clearstate: b = p.clear,\n            mousedown: function mousedown(e) {\n              s.clear(l), Hs(e.target, f).each(p.set);\n            },\n            mouseover: function mouseover(e) {\n              x(e);\n            },\n            mouseup: function mouseup(e) {\n              x(e), b();\n            }\n          }).clearstate),\n          mousedown: t.mousedown,\n          mouseover: t.mouseover,\n          mouseup: t.mouseup\n        }),\n        C = (a = Us(h), {\n          keydown: function keydown(e, n, t, r, o, i) {\n            var u = e.raw,\n              c = u.which,\n              l = !0 === u.shiftKey;\n            return rr(m, g.selectedSelector).fold(function () {\n              return qs(c) && !l && g.clearBeforeUpdate(m), Om(c) && l ? P(Fs, a, m, d, xm, r, n, g.selectRange) : Dm(c) && l ? P(Fs, a, m, d, Rm, r, n, g.selectRange) : Om(c) ? P(_s, a, d, xm, r, n, js) : Dm(c) ? P(_s, a, d, Rm, r, n, Ws) : q.none;\n            }, function (u) {\n              function e(e) {\n                return function () {\n                  return H(e, function (e) {\n                    return n = e.rows, t = e.cols, r = m, ur(u, n, t, (o = g).firstSelectedSelector, o.lastSelectedSelector).map(function (e) {\n                      return o.clearBeforeUpdate(r), o.selectRange(r, e.boxes, e.start, e.finish), e.boxes;\n                    });\n                    var n, t, r, o;\n                  }).fold(function () {\n                    return or(m, g.firstSelectedSelector, g.lastSelectedSelector).map(function (e) {\n                      var n = Om(c) || i.isForward(c) ? Kf.after : Kf.before;\n                      return a.setRelativeSelection(Kf.on(e.first, 0), n(e.table)), g.clear(m), nm(q.none(), !0);\n                    });\n                  }, function (e) {\n                    return q.some(nm(q.none(), !0));\n                  });\n                };\n              }\n              return Om(c) && l ? e([Gs(1, 0)]) : Dm(c) && l ? e([Gs(-1, 0)]) : i.isBackward(c) && l ? e([Gs(0, -1), Gs(-1, 0)]) : i.isForward(c) && l ? e([Gs(0, 1), Gs(1, 0)]) : qs(c) && !l ? T : q.none;\n            })();\n          },\n          keyup: function keyup(c, l, a, f, s) {\n            return rr(m, g.selectedSelector).fold(function () {\n              var t,\n                r,\n                e,\n                o,\n                u,\n                n = c.raw,\n                i = n.which;\n              return !0 === n.shiftKey && qs(i) ? (t = m, r = d, u = g.selectRange, ce(e = l, o = f) && a === s ? q.none() : In(e, \"td,th\", r).bind(function (n) {\n                return In(o, \"td,th\", r).bind(function (e) {\n                  return om(t, r, n, e, u);\n                });\n              })) : q.none();\n            }, q.none);\n          }\n        }),\n        S = (r = m = v, o = d = w, u = g = M, i = Us(h), function (e, t) {\n          u.clearBeforeUpdate(r), tr(e, t, o).each(function (e) {\n            var n = e.boxes.getOr([]);\n            u.selectRange(r, n, e.start, e.finish), i.selectContents(t), i.collapseSelection();\n          });\n        });\n      function T() {\n        return g.clear(m), q.none();\n      }\n      function x(i) {\n        p.on(function (e) {\n          s.clearBeforeUpdate(l), Hs(i.target, f).each(function (u) {\n            tr(e, u, f).each(function (e) {\n              var n,\n                t,\n                r,\n                o = e.boxes.getOr([]);\n              1 === o.length ? (n = o[0], t = \"false\" === pa(n), r = Ln(Pu(i.target), n, ce), t && r && (s.selectRange(l, o, n, n), c.selectContents(n))) : 1 < o.length && (s.selectRange(l, o, e.start, e.finish), c.selectContents(u));\n            });\n          });\n        });\n      }\n      function R(e, n) {\n        !0 === e.raw.shiftKey && (n.kill && e.kill(), n.selection.each(function (e) {\n          var n = Yf.relative(e.start, e.finish),\n            t = kl(h, n);\n          I.selection.setRng(t);\n        }));\n      }\n      function D(e) {\n        return 0 === e.button;\n      }\n      I.on(\"TableSelectorChange\", function (e) {\n        return S(e.start, e.finish);\n      });\n      var O,\n        A,\n        k = (O = Xc(Ve.fromDom(v)), A = Xc(0), {\n          touchEnd: function touchEnd(e) {\n            var n,\n              t,\n              r = Ve.fromDom(e.target);\n            \"td\" !== Ye(r) && \"th\" !== Ye(r) || (n = O.get(), t = A.get(), ce(n, r) && e.timeStamp - t < 300 && (e.preventDefault(), S(r, r))), O.set(r), A.set(e.timeStamp);\n          }\n        });\n      I.on(\"dragstart\", function (e) {\n        y.clearstate();\n      }), I.on(\"mousedown\", function (e) {\n        D(e) && $s(e) && y.mousedown(ma(e));\n      }), I.on(\"mouseover\", function (e) {\n        var n;\n        (void 0 === (n = e).buttons || Im.browser.isEdge() && 0 === n.buttons || 0 != (1 & n.buttons)) && $s(e) && y.mouseover(ma(e));\n      }), I.on(\"mouseup\", function (e) {\n        D(e) && $s(e) && y.mouseup(ma(e));\n      }), I.on(\"touchend\", k.touchEnd), I.on(\"keyup\", function (e) {\n        var n,\n          t,\n          r,\n          o = ma(e);\n        o.raw.shiftKey && qs(o.raw.which) && (n = I.selection.getRng(), t = Ve.fromDom(n.startContainer), r = Ve.fromDom(n.endContainer), C.keyup(o, t, n.startOffset, r, n.endOffset).each(function (e) {\n          R(o, e);\n        }));\n      }), I.on(\"keydown\", function (e) {\n        var n = ma(e);\n        B().each(function (e) {\n          return e.hideBars();\n        });\n        var t = I.selection.getRng(),\n          r = Ve.fromDom(t.startContainer),\n          o = Ve.fromDom(t.endContainer),\n          u = Sr(Am, km)(Ve.fromDom(I.selection.getStart()));\n        C.keydown(n, r, t.startOffset, o, t.endOffset, u).each(function (e) {\n          R(n, e);\n        }), B().each(function (e) {\n          return e.showBars();\n        });\n      }), I.on(\"NodeChange\", function () {\n        var e = I.selection;\n        er(rt, [Ve.fromDom(e.getStart()), Ve.fromDom(e.getEnd())]).fold(function () {\n          return M.clear(v);\n        }, E);\n      });\n    }), {\n      clear: M.clear\n    };\n  }\n  function Mm(o, u) {\n    function n(n) {\n      return d.forall(function (e) {\n        return !e[n];\n      });\n    }\n    function e() {\n      return Yl(tu(o), Zo(o)).bind(function (r) {\n        return Wn(rt(r), Yl(Ve.fromDom(o.selection.getEnd()), Zo(o)).bind(rt), function (e, n) {\n          return ce(e, n) ? g(r) ? q.some({\n            element: t = r,\n            mergable: q.none(),\n            unmergable: q.none(),\n            selection: [t]\n          }) : q.some(ou(u, e, r)) : q.none();\n          var t;\n        }).bind(S);\n      });\n    }\n    function t(r) {\n      return rt(r.element).map(function (e) {\n        var t = $t.fromTable(e),\n          n = B(_i(t, r).getOr([]), function (e, n) {\n            return n.isLocked && (e.onAny = !0, 0 === n.column ? e.onFirst = !0 : n.column + n.colspan >= t.grid.columns && (e.onLast = !0)), e;\n          }, {\n            onAny: !1,\n            onFirst: !1,\n            onLast: !1\n          });\n        return {\n          mergeable: Fi(t, r).isSome(),\n          unmergeable: Hi(t, r).isSome(),\n          locked: n\n        };\n      });\n    }\n    function r() {\n      s.set(Y(e)()), d = s.get().bind(t), A(m.get(), function (e) {\n        return e();\n      });\n    }\n    function i(n) {\n      return n(), m.set(m.get().concat([n])), function () {\n        m.set(k(m.get(), function (e) {\n          return e !== n;\n        }));\n      };\n    }\n    function c(n, t) {\n      return i(function () {\n        return s.get().fold(function () {\n          n.setDisabled(!0);\n        }, function (e) {\n          n.setDisabled(t(e));\n        });\n      });\n    }\n    function l(n, t, r) {\n      return i(function () {\n        return s.get().fold(function () {\n          n.setDisabled(!0), n.setActive(!1);\n        }, function (e) {\n          n.setDisabled(t(e)), n.setActive(r(e));\n        });\n      });\n    }\n    function a(n) {\n      return d.exists(function (e) {\n        return e.locked[n];\n      });\n    }\n    function f(n, t) {\n      return function (e) {\n        return l(e, function (e) {\n          return g(e.element);\n        }, function () {\n          return o.queryCommandValue(n) === t;\n        });\n      };\n    }\n    var s = Xc(q.none()),\n      m = Xc([]),\n      d = q.none(),\n      g = en(\"caption\"),\n      p = f(\"mceTableRowType\", \"header\"),\n      b = f(\"mceTableColType\", \"th\");\n    return o.on(\"NodeChange ExecCommand TableSelectorChange\", r), {\n      onSetupTable: function onSetupTable(e) {\n        return c(e, function (e) {\n          return !1;\n        });\n      },\n      onSetupCellOrRow: function onSetupCellOrRow(e) {\n        return c(e, function (e) {\n          return g(e.element);\n        });\n      },\n      onSetupColumn: function onSetupColumn(n) {\n        return function (e) {\n          return c(e, function (e) {\n            return g(e.element) || a(n);\n          });\n        };\n      },\n      onSetupPasteable: function onSetupPasteable(n) {\n        return function (e) {\n          return c(e, function (e) {\n            return g(e.element) || n().isNone();\n          });\n        };\n      },\n      onSetupPasteableColumn: function onSetupPasteableColumn(n, t) {\n        return function (e) {\n          return c(e, function (e) {\n            return g(e.element) || n().isNone() || a(t);\n          });\n        };\n      },\n      onSetupMergeable: function onSetupMergeable(e) {\n        return c(e, function (e) {\n          return n(\"mergeable\");\n        });\n      },\n      onSetupUnmergeable: function onSetupUnmergeable(e) {\n        return c(e, function (e) {\n          return n(\"unmergeable\");\n        });\n      },\n      resetTargets: r,\n      onSetupTableWithCaption: function onSetupTableWithCaption(e) {\n        return l(e, v, function (e) {\n          return rt(e.element, Zo(o)).exists(function (e) {\n            return An(e, \"caption\").isSome();\n          });\n        });\n      },\n      onSetupTableRowHeaders: p,\n      onSetupTableColumnHeaders: b,\n      targets: s.get\n    };\n  }\n  Yr.add(\"table\", function (c) {\n    var e,\n      n,\n      t,\n      r,\n      o,\n      u,\n      i,\n      l,\n      a,\n      f,\n      s,\n      m,\n      d = (e = function e() {\n        return Yo(c);\n      }, n = function n() {\n        return Jl(tu(c), Zo(c));\n      }, t = Xl.selectedSelector, {\n        get: function get() {\n          return Ur(e(), t).fold(function () {\n            return n().fold($r, Xr);\n          }, function (e) {\n            return Kr(e);\n          });\n        }\n      }),\n      g = Mm(c, d),\n      p = bi(c),\n      b = Bm(c, p.lazyResize, g),\n      h = Ec(c, b, p.lazyWire),\n      v = (r = Jc(), o = Jc(), {\n        getRows: r.get,\n        setRows: function setRows(e) {\n          e.fold(r.clear, r.set), o.clear();\n        },\n        clearRows: r.clear,\n        getColumns: o.get,\n        setColumns: function setColumns(e) {\n          e.fold(o.clear, o.set), r.clear();\n        },\n        clearColumns: o.clear\n      });\n    return yl(c, h, 0, d, v), f = h, s = d, m = Zo(a = c), ae({\n      mceTableRowType: function mceTableRowType() {\n        return w(f.getTableRowType);\n      },\n      mceTableCellType: function mceTableCellType() {\n        return w(f.getTableCellType);\n      },\n      mceTableColType: function mceTableColType() {\n        return w(f.getTableColType);\n      }\n    }, function (e, n) {\n      return a.addQueryValueHandler(n, e);\n    }), iu(c, d, h), function (n, e, t, r) {\n      function o(e) {\n        return function () {\n          return n.execCommand(e);\n        };\n      }\n      function u(e) {\n        n.execCommand(\"mceInsertTable\", !1, {\n          rows: e.numRows,\n          columns: e.numColumns\n        });\n      }\n      var i = {\n          text: \"Table properties\",\n          onSetup: t.onSetupTable,\n          onAction: o(\"mceTableProps\")\n        },\n        c = {\n          text: \"Delete table\",\n          icon: \"table-delete-table\",\n          onSetup: t.onSetupTable,\n          onAction: o(\"mceTableDelete\")\n        };\n      n.ui.registry.addMenuItem(\"tableinsertrowbefore\", {\n        text: \"Insert row before\",\n        icon: \"table-insert-row-above\",\n        onAction: o(\"mceTableInsertRowBefore\"),\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addMenuItem(\"tableinsertrowafter\", {\n        text: \"Insert row after\",\n        icon: \"table-insert-row-after\",\n        onAction: o(\"mceTableInsertRowAfter\"),\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addMenuItem(\"tabledeleterow\", {\n        text: \"Delete row\",\n        icon: \"table-delete-row\",\n        onAction: o(\"mceTableDeleteRow\"),\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addMenuItem(\"tablerowprops\", {\n        text: \"Row properties\",\n        icon: \"table-row-properties\",\n        onAction: o(\"mceTableRowProps\"),\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addMenuItem(\"tablecutrow\", {\n        text: \"Cut row\",\n        icon: \"cut-row\",\n        onAction: o(\"mceTableCutRow\"),\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addMenuItem(\"tablecopyrow\", {\n        text: \"Copy row\",\n        icon: \"duplicate-row\",\n        onAction: o(\"mceTableCopyRow\"),\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addMenuItem(\"tablepasterowbefore\", {\n        text: \"Paste row before\",\n        icon: \"paste-row-before\",\n        onAction: o(\"mceTablePasteRowBefore\"),\n        onSetup: t.onSetupPasteable(r.getRows)\n      }), n.ui.registry.addMenuItem(\"tablepasterowafter\", {\n        text: \"Paste row after\",\n        icon: \"paste-row-after\",\n        onAction: o(\"mceTablePasteRowAfter\"),\n        onSetup: t.onSetupPasteable(r.getRows)\n      });\n      var l = {\n        type: \"nestedmenuitem\",\n        text: \"Row\",\n        getSubmenuItems: C(\"tableinsertrowbefore tableinsertrowafter tabledeleterow tablerowprops | tablecutrow tablecopyrow tablepasterowbefore tablepasterowafter\")\n      };\n      n.ui.registry.addMenuItem(\"tableinsertcolumnbefore\", {\n        text: \"Insert column before\",\n        icon: \"table-insert-column-before\",\n        onAction: o(\"mceTableInsertColBefore\"),\n        onSetup: t.onSetupColumn(\"onFirst\")\n      }), n.ui.registry.addMenuItem(\"tableinsertcolumnafter\", {\n        text: \"Insert column after\",\n        icon: \"table-insert-column-after\",\n        onAction: o(\"mceTableInsertColAfter\"),\n        onSetup: t.onSetupColumn(\"onLast\")\n      }), n.ui.registry.addMenuItem(\"tabledeletecolumn\", {\n        text: \"Delete column\",\n        icon: \"table-delete-column\",\n        onAction: o(\"mceTableDeleteCol\"),\n        onSetup: t.onSetupColumn(\"onAny\")\n      }), n.ui.registry.addMenuItem(\"tablecutcolumn\", {\n        text: \"Cut column\",\n        icon: \"cut-column\",\n        onAction: o(\"mceTableCutCol\"),\n        onSetup: t.onSetupColumn(\"onAny\")\n      }), n.ui.registry.addMenuItem(\"tablecopycolumn\", {\n        text: \"Copy column\",\n        icon: \"duplicate-column\",\n        onAction: o(\"mceTableCopyCol\"),\n        onSetup: t.onSetupColumn(\"onAny\")\n      }), n.ui.registry.addMenuItem(\"tablepastecolumnbefore\", {\n        text: \"Paste column before\",\n        icon: \"paste-column-before\",\n        onAction: o(\"mceTablePasteColBefore\"),\n        onSetup: t.onSetupPasteableColumn(r.getColumns, \"onFirst\")\n      }), n.ui.registry.addMenuItem(\"tablepastecolumnafter\", {\n        text: \"Paste column after\",\n        icon: \"paste-column-after\",\n        onAction: o(\"mceTablePasteColAfter\"),\n        onSetup: t.onSetupPasteableColumn(r.getColumns, \"onLast\")\n      });\n      var a = {\n        type: \"nestedmenuitem\",\n        text: \"Column\",\n        getSubmenuItems: C(\"tableinsertcolumnbefore tableinsertcolumnafter tabledeletecolumn | tablecutcolumn tablecopycolumn tablepastecolumnbefore tablepastecolumnafter\")\n      };\n      n.ui.registry.addMenuItem(\"tablecellprops\", {\n        text: \"Cell properties\",\n        icon: \"table-cell-properties\",\n        onAction: o(\"mceTableCellProps\"),\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addMenuItem(\"tablemergecells\", {\n        text: \"Merge cells\",\n        icon: \"table-merge-cells\",\n        onAction: o(\"mceTableMergeCells\"),\n        onSetup: t.onSetupMergeable\n      }), n.ui.registry.addMenuItem(\"tablesplitcells\", {\n        text: \"Split cell\",\n        icon: \"table-split-cells\",\n        onAction: o(\"mceTableSplitCells\"),\n        onSetup: t.onSetupUnmergeable\n      });\n      var f = {\n        type: \"nestedmenuitem\",\n        text: \"Cell\",\n        getSubmenuItems: C(\"tablecellprops tablemergecells tablesplitcells\")\n      };\n      !1 === n.getParam(\"table_grid\", !0, \"boolean\") ? n.ui.registry.addMenuItem(\"inserttable\", {\n        text: \"Table\",\n        icon: \"table\",\n        onAction: o(\"mceInsertTable\")\n      }) : n.ui.registry.addNestedMenuItem(\"inserttable\", {\n        text: \"Table\",\n        icon: \"table\",\n        getSubmenuItems: function getSubmenuItems() {\n          return [{\n            type: \"fancymenuitem\",\n            fancytype: \"inserttable\",\n            onAction: u\n          }];\n        }\n      }), n.ui.registry.addMenuItem(\"inserttabledialog\", {\n        text: \"Insert table\",\n        icon: \"table\",\n        onAction: o(\"mceInsertTable\")\n      }), n.ui.registry.addMenuItem(\"tableprops\", i), n.ui.registry.addMenuItem(\"deletetable\", c), n.ui.registry.addNestedMenuItem(\"row\", l), n.ui.registry.addNestedMenuItem(\"column\", a), n.ui.registry.addNestedMenuItem(\"cell\", f), n.ui.registry.addContextMenu(\"table\", {\n        update: function update() {\n          return t.resetTargets(), t.targets().fold(C(\"\"), function (e) {\n            return \"caption\" === Ye(e.element) ? \"tableprops deletetable\" : \"cell row column | advtablesort | tableprops deletetable\";\n          });\n        }\n      });\n      var s = Ef(oi(n));\n      0 !== s.length && n.ui.registry.addNestedMenuItem(\"tableclass\", {\n        icon: \"table-classes\",\n        text: \"Table styles\",\n        getSubmenuItems: function getSubmenuItems() {\n          return Mf(n, e, s, \"tableclass\", function (e) {\n            return n.execCommand(\"mceTableToggleClass\", !1, e);\n          });\n        },\n        onSetup: t.onSetupTable\n      });\n      var m = Ef(ri(n));\n      0 !== m.length && n.ui.registry.addNestedMenuItem(\"tablecellclass\", {\n        icon: \"table-cell-classes\",\n        text: \"Cell styles\",\n        getSubmenuItems: function getSubmenuItems() {\n          return Mf(n, e, m, \"tablecellclass\", function (e) {\n            return n.execCommand(\"mceTableCellToggleClass\", !1, e);\n          });\n        },\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addNestedMenuItem(\"tablecellvalign\", {\n        icon: \"vertical-align\",\n        text: \"Vertical align\",\n        getSubmenuItems: function getSubmenuItems() {\n          return Mf(n, e, Df, \"tablecellverticalalign\", Zc(n, \"vertical-align\"));\n        },\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addNestedMenuItem(\"tablecellborderwidth\", {\n        icon: \"border-width\",\n        text: \"Border width\",\n        getSubmenuItems: function getSubmenuItems() {\n          return Mf(n, e, Xu(n), \"tablecellborderwidth\", Zc(n, \"border-width\"));\n        },\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addNestedMenuItem(\"tablecellborderstyle\", {\n        icon: \"border-style\",\n        text: \"Border style\",\n        getSubmenuItems: function getSubmenuItems() {\n          return Mf(n, e, Yu(n), \"tablecellborderstyle\", Zc(n, \"border-style\"));\n        },\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addToggleMenuItem(\"tablecaption\", {\n        icon: \"table-caption\",\n        text: \"Table caption\",\n        onAction: o(\"mceTableToggleCaption\"),\n        onSetup: t.onSetupTableWithCaption\n      }), n.ui.registry.addNestedMenuItem(\"tablecellbackgroundcolor\", {\n        icon: \"cell-background-color\",\n        text: \"Background color\",\n        getSubmenuItems: function getSubmenuItems() {\n          return nl(n, si(n), \"background-color\");\n        },\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addNestedMenuItem(\"tablecellbordercolor\", {\n        icon: \"cell-border-color\",\n        text: \"Border color\",\n        getSubmenuItems: function getSubmenuItems() {\n          return nl(n, mi(n), \"border-color\");\n        },\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addToggleMenuItem(\"tablerowheader\", {\n        text: \"Row header\",\n        icon: \"table-top-header\",\n        onAction: tl(n),\n        onSetup: t.onSetupTableRowHeaders\n      }), n.ui.registry.addToggleMenuItem(\"tablecolheader\", {\n        text: \"Column header\",\n        icon: \"table-left-header\",\n        onAction: rl(n),\n        onSetup: t.onSetupTableColumnHeaders\n      });\n    }(c, d, g, v), function (n, e, t, r) {\n      function o(e) {\n        return function () {\n          return n.execCommand(e);\n        };\n      }\n      n.ui.registry.addMenuButton(\"table\", {\n        tooltip: \"Table\",\n        icon: \"table\",\n        fetch: function fetch(e) {\n          return e(\"inserttable | cell row column | advtablesort | tableprops deletetable\");\n        }\n      }), n.ui.registry.addButton(\"tableprops\", {\n        tooltip: \"Table properties\",\n        onAction: o(\"mceTableProps\"),\n        icon: \"table\",\n        onSetup: t.onSetupTable\n      }), n.ui.registry.addButton(\"tabledelete\", {\n        tooltip: \"Delete table\",\n        onAction: o(\"mceTableDelete\"),\n        icon: \"table-delete-table\",\n        onSetup: t.onSetupTable\n      }), n.ui.registry.addButton(\"tablecellprops\", {\n        tooltip: \"Cell properties\",\n        onAction: o(\"mceTableCellProps\"),\n        icon: \"table-cell-properties\",\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addButton(\"tablemergecells\", {\n        tooltip: \"Merge cells\",\n        onAction: o(\"mceTableMergeCells\"),\n        icon: \"table-merge-cells\",\n        onSetup: t.onSetupMergeable\n      }), n.ui.registry.addButton(\"tablesplitcells\", {\n        tooltip: \"Split cell\",\n        onAction: o(\"mceTableSplitCells\"),\n        icon: \"table-split-cells\",\n        onSetup: t.onSetupUnmergeable\n      }), n.ui.registry.addButton(\"tableinsertrowbefore\", {\n        tooltip: \"Insert row before\",\n        onAction: o(\"mceTableInsertRowBefore\"),\n        icon: \"table-insert-row-above\",\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addButton(\"tableinsertrowafter\", {\n        tooltip: \"Insert row after\",\n        onAction: o(\"mceTableInsertRowAfter\"),\n        icon: \"table-insert-row-after\",\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addButton(\"tabledeleterow\", {\n        tooltip: \"Delete row\",\n        onAction: o(\"mceTableDeleteRow\"),\n        icon: \"table-delete-row\",\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addButton(\"tablerowprops\", {\n        tooltip: \"Row properties\",\n        onAction: o(\"mceTableRowProps\"),\n        icon: \"table-row-properties\",\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addButton(\"tableinsertcolbefore\", {\n        tooltip: \"Insert column before\",\n        onAction: o(\"mceTableInsertColBefore\"),\n        icon: \"table-insert-column-before\",\n        onSetup: t.onSetupColumn(\"onFirst\")\n      }), n.ui.registry.addButton(\"tableinsertcolafter\", {\n        tooltip: \"Insert column after\",\n        onAction: o(\"mceTableInsertColAfter\"),\n        icon: \"table-insert-column-after\",\n        onSetup: t.onSetupColumn(\"onLast\")\n      }), n.ui.registry.addButton(\"tabledeletecol\", {\n        tooltip: \"Delete column\",\n        onAction: o(\"mceTableDeleteCol\"),\n        icon: \"table-delete-column\",\n        onSetup: t.onSetupColumn(\"onAny\")\n      }), n.ui.registry.addButton(\"tablecutrow\", {\n        tooltip: \"Cut row\",\n        icon: \"cut-row\",\n        onAction: o(\"mceTableCutRow\"),\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addButton(\"tablecopyrow\", {\n        tooltip: \"Copy row\",\n        icon: \"duplicate-row\",\n        onAction: o(\"mceTableCopyRow\"),\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addButton(\"tablepasterowbefore\", {\n        tooltip: \"Paste row before\",\n        icon: \"paste-row-before\",\n        onAction: o(\"mceTablePasteRowBefore\"),\n        onSetup: t.onSetupPasteable(r.getRows)\n      }), n.ui.registry.addButton(\"tablepasterowafter\", {\n        tooltip: \"Paste row after\",\n        icon: \"paste-row-after\",\n        onAction: o(\"mceTablePasteRowAfter\"),\n        onSetup: t.onSetupPasteable(r.getRows)\n      }), n.ui.registry.addButton(\"tablecutcol\", {\n        tooltip: \"Cut column\",\n        icon: \"cut-column\",\n        onAction: o(\"mceTableCutCol\"),\n        onSetup: t.onSetupColumn(\"onAny\")\n      }), n.ui.registry.addButton(\"tablecopycol\", {\n        tooltip: \"Copy column\",\n        icon: \"duplicate-column\",\n        onAction: o(\"mceTableCopyCol\"),\n        onSetup: t.onSetupColumn(\"onAny\")\n      }), n.ui.registry.addButton(\"tablepastecolbefore\", {\n        tooltip: \"Paste column before\",\n        icon: \"paste-column-before\",\n        onAction: o(\"mceTablePasteColBefore\"),\n        onSetup: t.onSetupPasteableColumn(r.getColumns, \"onFirst\")\n      }), n.ui.registry.addButton(\"tablepastecolafter\", {\n        tooltip: \"Paste column after\",\n        icon: \"paste-column-after\",\n        onAction: o(\"mceTablePasteColAfter\"),\n        onSetup: t.onSetupPasteableColumn(r.getColumns, \"onLast\")\n      }), n.ui.registry.addButton(\"tableinsertdialog\", {\n        tooltip: \"Insert table\",\n        onAction: o(\"mceInsertTable\"),\n        icon: \"table\"\n      });\n      var u = Ef(oi(n));\n      0 !== u.length && n.ui.registry.addMenuButton(\"tableclass\", {\n        icon: \"table-classes\",\n        tooltip: \"Table styles\",\n        fetch: el(n, e, u, \"tableclass\", function (e) {\n          return n.execCommand(\"mceTableToggleClass\", !1, e);\n        }),\n        onSetup: t.onSetupTable\n      });\n      var i = Ef(ri(n));\n      0 !== i.length && n.ui.registry.addMenuButton(\"tablecellclass\", {\n        icon: \"table-cell-classes\",\n        tooltip: \"Cell styles\",\n        fetch: el(n, e, i, \"tablecellclass\", function (e) {\n          return n.execCommand(\"mceTableCellToggleClass\", !1, e);\n        }),\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addMenuButton(\"tablecellvalign\", {\n        icon: \"vertical-align\",\n        tooltip: \"Vertical align\",\n        fetch: el(n, e, Df, \"tablecellverticalalign\", Zc(n, \"vertical-align\")),\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addMenuButton(\"tablecellborderwidth\", {\n        icon: \"border-width\",\n        tooltip: \"Border width\",\n        fetch: el(n, e, Xu(n), \"tablecellborderwidth\", Zc(n, \"border-width\")),\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addMenuButton(\"tablecellborderstyle\", {\n        icon: \"border-style\",\n        tooltip: \"Border style\",\n        fetch: el(n, e, Yu(n), \"tablecellborderstyle\", Zc(n, \"border-style\")),\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addToggleButton(\"tablecaption\", {\n        tooltip: \"Table caption\",\n        onAction: o(\"mceTableToggleCaption\"),\n        icon: \"table-caption\",\n        onSetup: t.onSetupTableWithCaption\n      }), n.ui.registry.addMenuButton(\"tablecellbackgroundcolor\", {\n        icon: \"cell-background-color\",\n        tooltip: \"Background color\",\n        fetch: function fetch(e) {\n          return e(nl(n, si(n), \"background-color\"));\n        },\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addMenuButton(\"tablecellbordercolor\", {\n        icon: \"cell-border-color\",\n        tooltip: \"Border color\",\n        fetch: function fetch(e) {\n          return e(nl(n, mi(n), \"border-color\"));\n        },\n        onSetup: t.onSetupCellOrRow\n      }), n.ui.registry.addToggleButton(\"tablerowheader\", {\n        tooltip: \"Row header\",\n        icon: \"table-top-header\",\n        onAction: tl(n),\n        onSetup: t.onSetupTableRowHeaders\n      }), n.ui.registry.addToggleButton(\"tablecolheader\", {\n        tooltip: \"Column header\",\n        icon: \"table-left-header\",\n        onAction: rl(n),\n        onSetup: t.onSetupTableColumnHeaders\n      });\n    }(c, d, g, v), 0 < (l = (i = c).getParam(\"table_toolbar\", \"tableprops tabledelete | tableinsertrowbefore tableinsertrowafter tabledeleterow | tableinsertcolbefore tableinsertcolafter tabledeletecol\")).length && i.ui.registry.addContextToolbar(\"table\", {\n      predicate: function predicate(e) {\n        return i.dom.is(e, \"table\") && i.getBody().contains(e);\n      },\n      items: l,\n      scope: \"node\",\n      position: \"node\"\n    }), c.on(\"PreInit\", function () {\n      c.serializer.addTempAttr(Xl.firstSelected), c.serializer.addTempAttr(Xl.lastSelected), c.formatter.register(Hf);\n    }), c.getParam(\"table_tab_navigation\", !0, \"boolean\") && c.on(\"keydown\", function (e) {\n      var n,\n        t,\n        r,\n        o,\n        u = c,\n        i = b;\n      (n = e).keyCode === Qs.TAB && (t = Yo(u), r = function r(e) {\n        var n = Ye(e);\n        return ce(e, t) || y(em, n);\n      }, o = u.selection.getRng(), et(Ve.fromDom(n.shiftKey ? o.startContainer : o.endContainer), r).each(function (e) {\n        n.preventDefault(), rt(e, r).each(i.clear), u.selection.collapse(n.shiftKey), (n.shiftKey ? function (e, n, t) {\n          return Zs(e, n, (o = Nu, Cl(r = t, void 0).fold(function () {\n            return qf.none();\n          }, function (e) {\n            return Uf(e.all, r, e.index, -1, o);\n          })));\n          var r, o;\n        } : vs)(u, r, e).each(function (e) {\n          u.selection.setRng(e);\n        });\n      }));\n    }), c.on(\"remove\", function () {\n      p.destroy();\n    }), {\n      insertTable: (u = c, function (e, n, t) {\n        var r = Lc(u, n, e, t = void 0 === t ? {} : t, \"Invalid values for insertTable - rows and columns values are required to insert a table.\");\n        return u.undoManager.add(), r;\n      }),\n      setClipboardRows: Wc(v.setRows),\n      getClipboardRows: _c(v.getRows),\n      setClipboardCols: Wc(v.setColumns),\n      getClipboardCols: _c(v.getColumns),\n      resizeHandler: p,\n      selectionTargets: g\n    };\n    function w(r) {\n      return Jl(tu(a)).bind(function (t) {\n        return rt(t, m).map(function (e) {\n          var n = ou(s, e, t);\n          return r(e, n);\n        });\n      }).getOr(\"\");\n    }\n  });\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJlIiwiciIsInQiLCJfdHlwZW9mIiwibiIsIkFycmF5IiwicHJvdG90eXBlIiwiaXNQcm90b3R5cGVPZiIsImNvbnN0cnVjdG9yIiwibmFtZSIsIlN0cmluZyIsImwiLCJFIiwiQyIsIlMiLCJUIiwiZyIsImEiLCJoIiwibyIsInUiLCJjIiwiZiIsIlAiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJjb25jYXQiLCJhcHBseSIsInAiLCJpIiwicyIsInYiLCJ4IiwiZm9sZCIsImlzU29tZSIsImlzTm9uZSIsImdldE9yIiwiZ2V0T3JUaHVuayIsIm0iLCJnZXRPckRpZSIsIkVycm9yIiwiZ2V0T3JOdWxsIiwiZ2V0T3JVbmRlZmluZWQiLCJvciIsIm9yVGh1bmsiLCJtYXAiLCJlYWNoIiwiYmluZCIsImV4aXN0cyIsImZvcmFsbCIsImZpbHRlciIsInRvQXJyYXkiLCJ0b1N0cmluZyIsInkiLCJHIiwiY2FsbCIsIlIiLCJEIiwicHVzaCIsIk8iLCJBIiwiZCIsInBhc3MiLCJmYWlsIiwiayIsIkkiLCJCIiwidyIsInEiLCJzb21lIiwibm9uZSIsImIiLCJNIiwiJCIsIk4iLCJ6IiwiTCIsIl8iLCJXIiwiaiIsIkYiLCJIIiwiViIsImZyb20iLCJVIiwic2xpY2UiLCJpbmRleE9mIiwiSyIsIk9iamVjdCIsImFzc2lnbiIsImhhc093blByb3BlcnR5IiwiWCIsIlkiLCJKIiwidG9Mb3dlckNhc2UiLCJzZWFyY2giLCJRIiwic3Vic3RyIiwiWiIsImVlIiwibmUiLCJ0ZSIsInJlIiwid2luZG93IiwibWF0Y2hNZWRpYSIsIm1hdGNoZXMiLCJvZSIsImRvbSIsIm5vZGVUeXBlIiwibXNNYXRjaGVzU2VsZWN0b3IiLCJ3ZWJraXRNYXRjaGVzU2VsZWN0b3IiLCJtb3pNYXRjaGVzU2VsZWN0b3IiLCJ1ZSIsImNoaWxkRWxlbWVudENvdW50IiwiaWUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJWZSIsImZyb21Eb20iLCJjZSIsImxlIiwiSGUiLCJicm93c2VyIiwiaXNJRSIsIk5vZGUiLCJET0NVTUVOVF9QT1NJVElPTl9DT05UQUlORURfQlkiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsImNvbnRhaW5zIiwiYWUiLCJVZSIsImZlIiwiJGUiLCJzZSIsIm1lIiwiZGUiLCJnZSIsInBlIiwiS2UiLCJiZSIsImhlIiwiZWxlbWVudCIsInJvd3NwYW4iLCJjb2xzcGFuIiwidmUiLCJjZWxscyIsInNlY3Rpb24iLCJ3ZSIsImlzTmV3IiwiaXNMb2NrZWQiLCJ5ZSIsIkNlIiwiRGUiLCJTZSIsImN1cnJlbnQiLCJ2ZXJzaW9uIiwiaXNFZGdlIiwiaXNDaHJvbWUiLCJpc09wZXJhIiwiaXNGaXJlZm94IiwiTWUiLCJpc1NhZmFyaSIsIlRlIiwiaXNXaW5kb3dzIiwiTmUiLCJpc2lPUyIsImlzQW5kcm9pZCIsInplIiwiaXNPU1giLCJpc0xpbnV4IiwiaXNTb2xhcmlzIiwiTGUiLCJpc0ZyZWVCU0QiLCJfZSIsImlzQ2hyb21lT1MiLCJXZSIsInhlIiwiUmUiLCJtYWpvciIsIm1pbm9yIiwiT2UiLCJudSIsImRldGVjdCIsInRlc3QiLCJOdW1iZXIiLCJyZXBsYWNlIiwidW5rbm93biIsIkFlIiwia2UiLCJJZSIsIkJlIiwiYnJvd3NlcnMiLCJ2ZXJzaW9uUmVnZXhlcyIsImJyYW5kIiwib3NlcyIsIkVlIiwiUGUiLCJqZSIsIkZlIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwidXNlckFnZW50RGF0YSIsImJyYW5kcyIsInBhcnNlSW50Iiwib3MiLCJkZXZpY2VUeXBlIiwiaXNpUGFkIiwiaXNpUGhvbmUiLCJpc1RhYmxldCIsImlzUGhvbmUiLCJpc1RvdWNoIiwiaXNXZWJWaWV3IiwiaXNEZXNrdG9wIiwiZnJvbUh0bWwiLCJjcmVhdGVFbGVtZW50IiwiaW5uZXJIVE1MIiwiaGFzQ2hpbGROb2RlcyIsImNoaWxkTm9kZXMiLCJjb25zb2xlIiwiZXJyb3IiLCJmcm9tVGFnIiwiZnJvbVRleHQiLCJjcmVhdGVUZXh0Tm9kZSIsImZyb21Qb2ludCIsImVsZW1lbnRGcm9tUG9pbnQiLCJxZSIsImtleXMiLCJHZSIsIlhlIiwiWWUiLCJub2RlTmFtZSIsIkplIiwiUWUiLCJaZSIsImVuIiwiZ24iLCJubiIsIm93bmVyRG9jdW1lbnQiLCJ0biIsImJuIiwicm4iLCJwYXJlbnROb2RlIiwib24iLCJ1biIsInByZXZpb3VzU2libGluZyIsImNuIiwibmV4dFNpYmxpbmciLCJsbiIsImFuIiwiZm4iLCJob3N0Iiwic24iLCJtbiIsImRuIiwicXVlcnlTZWxlY3RvckFsbCIsIkZ1bmN0aW9uIiwicG4iLCJobiIsInZuIiwiRWxlbWVudCIsImF0dGFjaFNoYWRvdyIsImdldFJvb3ROb2RlIiwid24iLCJ5biIsIkNuIiwic2hhZG93Um9vdCIsIlNuIiwiYm9keSIsIlRuIiwieG4iLCJSbiIsIkRuIiwiT24iLCJBbiIsImtuIiwiSW4iLCJCbiIsInNldEF0dHJpYnV0ZSIsIk1uIiwiRW4iLCJQbiIsImdldEF0dHJpYnV0ZSIsIk5uIiwiem4iLCJhdHRyaWJ1dGVzIiwidmFsdWUiLCJMbiIsIl9uIiwiV24iLCJqbiIsIkZuIiwic3R5bGUiLCJnZXRQcm9wZXJ0eVZhbHVlIiwiSG4iLCJzZXRQcm9wZXJ0eSIsIlZuIiwicW4iLCJVbiIsImdldENvbXB1dGVkU3R5bGUiLCJqdCIsIkduIiwiJG4iLCJyZW1vdmVQcm9wZXJ0eSIsIld0IiwiS24iLCJYbiIsIlluIiwiSm4iLCJRbiIsIlpuIiwiVnQiLCJldCIsImpvaW4iLCJudCIsInR0IiwicXQiLCJydCIsIm90IiwidXQiLCJpdCIsImN0IiwibHQiLCJVdCIsImF0IiwiZnQiLCJzdCIsIm10IiwiZHQiLCJndCIsInJvd3MiLCJjb2xzIiwicHQiLCJidCIsIkd0IiwibWF0Y2giLCJodCIsInNvcnQiLCJ2dCIsInJvdyIsImNvbHVtbiIsIk1hdGgiLCJtYXgiLCJjb2xncm91cHMiLCJjb2x1bW5zIiwiZ3JpZCIsImFjY2VzcyIsImFsbCIsInd0IiwiZmluaXNoQ29sIiwic3RhcnRDb2wiLCJmaW5pc2hSb3ciLCJzdGFydFJvdyIsInl0IiwiQ3QiLCIkdCIsImZpbmRJdGVtIiwibWluIiwiU3QiLCJmaWx0ZXJJdGVtcyIsIlR0IiwieHQiLCJLdCIsIlJ0IiwiaW5zZXJ0QmVmb3JlIiwiRHQiLCJYdCIsIk90IiwiQXQiLCJrdCIsIkl0IiwiQnQiLCJ0ZXh0Q29udGVudCIsIll0IiwiTXQiLCJFdCIsIkp0IiwiZ2V0IiwiUHQiLCJnZXRPcHRpb24iLCJOdCIsInNldCIsInp0IiwiTHQiLCJfdCIsInJlbW92ZUF0dHJpYnV0ZSIsIkZ0IiwiSHQiLCJmcm9tVGFibGUiLCJnZW5lcmF0ZSIsImdldEF0IiwianVzdENlbGxzIiwianVzdENvbHVtbnMiLCJoYXNDb2x1bW5zIiwiZ2V0Q29sdW1uQXQiLCJhcHBlbmRDaGlsZCIsInJlbW92ZUNoaWxkIiwibm9kZVZhbHVlIiwiUXQiLCJadCIsInVwIiwic2VsZWN0b3IiLCJjbG9zZXN0IiwicHJlZGljYXRlIiwiZG93biIsInN0eWxlcyIsImdldFJhdyIsInJlbW92ZSIsImF0dHJzIiwiY29weVRvIiwiaW5zZXJ0IiwiYmVmb3JlIiwiYWZ0ZXIiLCJhZnRlckFsbCIsImFwcGVuZCIsImFwcGVuZEFsbCIsInByZXBlbmQiLCJ3cmFwIiwidW53cmFwIiwiY3JlYXRlIiwiY2xvbmUiLCJjbG9uZU5vZGUiLCJ0ZXh0IiwicXVlcnkiLCJjb21wYXJlUG9zaXRpb24iLCJwcmV2U2libGluZyIsInByb3BlcnR5IiwiY2hpbGRyZW4iLCJwYXJlbnQiLCJpc1RleHQiLCJpc0NvbW1lbnQiLCJpc0VsZW1lbnQiLCJpc1NwZWNpYWwiLCJnZXRMYW5ndWFnZSIsImdldFRleHQiLCJzZXRUZXh0IiwiaXNCb3VuZGFyeSIsImlzRW1wdHlUYWciLCJpc05vbkVkaXRhYmxlIiwiZXEiLCJpcyIsImVyIiwiSHIiLCJxciIsIm5yIiwidHIiLCJib3hlcyIsInN0YXJ0IiwiZmluaXNoIiwiVnIiLCJzaGFyZWQiLCJyciIsImZpcnN0IiwibGFzdCIsInRhYmxlIiwidXIiLCJpciIsImNyIiwibHIiLCJhciIsImZyIiwic3IiLCJtciIsInBhcnNlRmxvYXQiLCJpc05hTiIsImdldE91dGVyIiwiYWdncmVnYXRlIiwiZHIiLCJnciIsInByIiwiYnIiLCJociIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsIndpZHRoIiwib2Zmc2V0V2lkdGgiLCJ2ciIsIkpyIiwid3IiLCJ5ciIsImVvIiwiQ3IiLCJTciIsIm5vIiwiVHIiLCJ0byIsInhyIiwiUnIiLCJEciIsImRlZmF1bHRWaWV3IiwiZG9jdW1lbnRFbGVtZW50IiwidW8iLCJvZmZzZXRMZWZ0Iiwib2Zmc2V0VG9wIiwicGFnZVlPZmZzZXQiLCJzY3JvbGxUb3AiLCJwYWdlWE9mZnNldCIsInNjcm9sbExlZnQiLCJjbGllbnRUb3AiLCJjbGllbnRMZWZ0IiwiaW8iLCJ0cmFuc2xhdGUiLCJPciIsIkFyIiwiY29sIiwia3IiLCJsZWZ0IiwiSXIiLCJCciIsIk1yIiwiRXIiLCJ0b3AiLCJQciIsIk5yIiwienIiLCJMciIsImxvZyIsImNvbnN0cnVjdG9ycyIsInBhcmFtcyIsIl9yIiwiV3IiLCJqciIsIkZyIiwiZmlyc3RwYXRoIiwic2Vjb25kcGF0aCIsIlVyIiwiR3IiLCJtdWx0aXBsZSIsInNpbmdsZSIsIiRyIiwiS3IiLCJYciIsIllyIiwidGlueW1jZSIsInV0aWwiLCJUb29scyIsInJlc29sdmUiLCJRciIsIlpyIiwiaGVpZ2h0Iiwib2Zmc2V0SGVpZ2h0Iiwicm8iLCJvbyIsImNvIiwiZGVsdGEiLCJwb3NpdGlvbnMiLCJlZGdlIiwibG8iLCJhbyIsImZvIiwidW5zdXBwb3J0ZWRMZW5ndGgiLCJmaXhlZCIsInJlbGF0aXZlIiwiZW1wdHkiLCJzbyIsIm1vIiwiUmVnRXhwIiwiZ28iLCJwYXJlbnRFbGVtZW50IiwicG8iLCJibyIsImhvIiwidm8iLCJmbG9vciIsIndvIiwieW8iLCJDbyIsIlNvIiwiamwiLCJUbyIsInhvIiwiUm8iLCJEbyIsIk9vIiwiQW8iLCJyZXZlcnNlIiwiYWJzIiwia28iLCJIbCIsIklvIiwiQm8iLCJtaW5DZWxsV2lkdGgiLCJNbyIsIkVvIiwiUG8iLCJwaXhlbFdpZHRoIiwiZ2V0V2lkdGhzIiwiZ2V0Q2VsbERlbHRhIiwic2luZ2xlQ29sdW1uV2lkdGgiLCJzZXRFbGVtZW50V2lkdGgiLCJhZGp1c3RUYWJsZVdpZHRoIiwiaXNSZWxhdGl2ZSIsImxhYmVsIiwiTm8iLCJ6byIsIlZsIiwibWluUm93IiwibWluQ29sIiwibWF4Um93IiwibWF4Q29sIiwiYWxsQ2VsbHMiLCJzZWxlY3RlZENlbGxzIiwiTG8iLCJfbyIsInRyaW0iLCJHbCIsIldvIiwiam8iLCIkbCIsIkZvIiwiSG8iLCJWbyIsInFvIiwiVW8iLCJHbyIsIiRvIiwiY3NzVGV4dCIsImNvbGdyb3VwIiwiY2VsbCIsIktsIiwiY29sR2FwIiwiZ2FwIiwiS28iLCJYbyIsIllvIiwiZ2V0Qm9keSIsIkpvIiwiUW8iLCJabyIsImV1IiwidHUiLCJzZWxlY3Rpb24iLCJnZXRTdGFydCIsInJ1Iiwib3UiLCJtZXJnYWJsZSIsIlhsIiwiZmlyc3RTZWxlY3RlZFNlbGVjdG9yIiwibGFzdFNlbGVjdGVkU2VsZWN0b3IiLCJib3VuZHMiLCJ1bm1lcmdhYmxlIiwidXUiLCJpdSIsInByZXZlbnREZWZhdWx0IiwiY29udGVudCIsImZvcm1hdCIsImlubmVyVGV4dCIsInNlcmlhbGl6ZXIiLCJzZXJpYWxpemUiLCJwYXN0ZSIsIlFsIiwiZ2V0RG9jIiwiY2xpcGJvYXJkIiwiZ2VuZXJhdG9ycyIsInBhc3RlQ2VsbHMiLCJmb2N1cyIsImN1IiwibHUiLCJhdSIsImNsYW1wVGFibGVEZWx0YSIsImVhIiwib25seSIsInJpZ2h0IiwibWlkZGxlIiwiY2FsY0xlZnRFZGdlRGVsdGFzIiwiY2FsY01pZGRsZURlbHRhcyIsImNhbGNSaWdodEVkZ2VEZWx0YXMiLCJyZXNpemVUYWJsZSIsImZ1Iiwic3UiLCJtdSIsImR1IiwibmEiLCJjYWxjUmVkZXN0cmlidXRlZFdpZHRocyIsIm5ld1NpemVzIiwiZ3UiLCJ0YSIsInB1Iiwic3Vic3RyaW5nIiwicmEiLCJpbnZhbGlkIiwiYnUiLCJvYSIsInVhIiwiaHUiLCJ2dSIsImlhIiwid3UiLCJ5dSIsIkN1IiwidW5iaW5kIiwidHJpZ2dlciIsIlN1IiwicmVnaXN0cnkiLCJUdSIsInh1IiwiUnUiLCJ2YWxpZGF0ZSIsIkR1Iiwib25FdmVudCIsInJlc2V0IiwiZXZlbnRzIiwibW92ZSIsImV4dHJhY3QiLCJjb21wYXJlIiwib2ZmIiwiaXNPbiIsIk91Iiwic3RvcFByb3BhZ2F0aW9uIiwidGFyZ2V0IiwiY29tcG9zZWQiLCJjb21wb3NlZFBhdGgiLCJjbGllbnRYIiwiY2xpZW50WSIsInN0b3AiLCJwcmV2ZW50Iiwia2lsbCIsInJhdyIsIkF1Iiwic2EiLCJhZGRFdmVudExpc3RlbmVyIiwiZmEiLCJrdSIsImNsYXNzTGlzdCIsIkl1Iiwic3BsaXQiLCJCdSIsImFkZCIsIk11IiwiRXUiLCJQdSIsIk51IiwiaXNDb250ZW50RWRpdGFibGUiLCJwYSIsInp1IiwiaGEiLCJMdSIsIm9yaWdpbiIsIl91IiwiaXNSZXNpemFibGUiLCJwb3NpdGlvbiIsInJvbGUiLCJ2YSIsIndhIiwiV3UiLCJqdSIsIkZ1IiwiSHUiLCJWdSIsImRyYWciLCJtdXRhdGUiLCJ4RGVsdGEiLCJ5RGVsdGEiLCJtb2RlIiwiZ2EiLCJjYW5jZWwiLCJ0aHJvdHRsZSIsInNldFRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJpbmZvIiwic2luayIsImFhIiwiZm9yY2VEcm9wIiwiZHJvcCIsImRlbGF5RHJvcCIsImRlc3Ryb3kiLCJzdGFydEFkanVzdCIsInlhIiwidmlldyIsImFkanVzdEhlaWdodCIsImFkanVzdFdpZHRoIiwicmVmcmVzaCIsImhpZGVCYXJzIiwic2hvd0JhcnMiLCJxdSIsImZpcmUiLCJub2RlIiwiVXUiLCJHdSIsIiR1IiwiZ2V0UGFyYW0iLCJLdSIsIlh1IiwiUmEiLCJZdSIsIkRhIiwiSnUiLCJPYSIsIlF1Iiwia2EiLCJnZXRQYXJlbnQiLCJpc0Jsb2NrIiwieGEiLCJJYSIsIlp1IiwiZWkiLCJuaSIsInRpIiwicmkiLCJvaSIsInVpIiwiaWkiLCJjaSIsIkFhIiwibGkiLCJhaSIsImZpIiwiaXNBcnJheSIsInNpIiwibWkiLCJkaSIsIlVsIiwicWwiLCJnaSIsInBpIiwiYmkiLCJpbmxpbmUiLCJwYWRkaW5nIiwibWFyZ2luIiwiYm9yZGVyIiwiSWwiLCJiZWZvcmVSZXNpemUiLCJhZnRlclJlc2l6ZSIsInN0YXJ0RHJhZyIsImdldFJuZyIsIlBhIiwidHlwZSIsInNldFJuZyIsInVuZG9NYW5hZ2VyIiwic2VsZWN0IiwiYWRkQ2xhc3MiLCJNbCIsIk1hIiwiQmwiLCJCYSIsIkVsIiwiZ2V0U3R5bGUiLCJnZXRBdHRyaWIiLCJDYSIsImlzUmVhZE9ubHkiLCJsYXp5UmVzaXplIiwibGF6eVdpcmUiLCJoaSIsIm9mZnNldCIsInZpIiwid2kiLCJleGVjIiwidW5pdCIsInlpIiwiV2EiLCJDaSIsImphIiwic3ViVHlwZSIsIlNpIiwiVGkiLCJ4aSIsInRyYW5zZm9ybVJvdyIsInRyYW5zZm9ybUNlbGwiLCJSaSIsIkRpIiwiT2kiLCJBaSIsImtpIiwibmV3Um93cyIsIm5ld0NlbGxzIiwiSWkiLCJCaSIsIk1pIiwiRWkiLCJQaSIsIk5pIiwiemkiLCJQbCIsImN1cnNvciIsImxvY2tlZENvbHVtbnMiLCJzaXppbmciLCJyZXNpemUiLCJMaSIsIl9pIiwiV2kiLCJqaSIsIkZpIiwiSGkiLCJWaSIsInFpIiwiVWkiLCJyb3dEZWx0YSIsImNvbERlbHRhIiwiR2kiLCIkaSIsIktpIiwiWGkiLCJZaSIsIkppIiwiUWkiLCJHYSIsIlppIiwiZWMiLCJuYyIsInRjIiwicmMiLCJvYyIsInVjIiwiaWMiLCJzY29wZSIsImNjIiwibGMiLCJhYyIsImZjIiwic2MiLCJLYSIsIm1jIiwiZGMiLCJnYyIsIllhIiwiWGEiLCJwYyIsImJjIiwiaGMiLCJ2YyIsIndjIiwieWMiLCJDYyIsIlNjIiwicmVwbGFjZU9ySW5pdCIsIlRjIiwieGMiLCJSYyIsInBpeGVsRGVsdGEiLCJEYyIsIk9jIiwiQWMiLCJrYyIsImRldGFpbHMiLCJJYyIsIkJjIiwiTWMiLCJFYyIsIkZhIiwiSGEiLCJWYSIsImNsZWFyIiwiY3JlYXRlUm5nIiwic2VsZWN0Tm9kZSIsIkxhIiwiX2EiLCJzZXRTdGFydCIsInNldEVuZCIsInJuZyIsImVmZmVjdCIsImRlbGV0ZVJvdyIsImxmIiwiU2EiLCJkZWxldGVDb2x1bW4iLCJjZiIsImluc2VydFJvd3NCZWZvcmUiLCJ0ZiIsImluc2VydFJvd3NBZnRlciIsInJmIiwiaW5zZXJ0Q29sdW1uc0JlZm9yZSIsIm9mIiwiaW5zZXJ0Q29sdW1uc0FmdGVyIiwidWYiLCJtZXJnZUNlbGxzIiwiYmYiLCJ1bm1lcmdlQ2VsbHMiLCJoZiIsInBhc3RlQ29sc0JlZm9yZSIsIndmIiwicGFzdGVDb2xzQWZ0ZXIiLCJ5ZiIsInBhc3RlUm93c0JlZm9yZSIsIkNmIiwicGFzdGVSb3dzQWZ0ZXIiLCJTZiIsInZmIiwiVGEiLCJtYWtlQ2VsbHNIZWFkZXIiLCJnZiIsInVubWFrZUNlbGxzSGVhZGVyIiwicGYiLCJtYWtlQ29sdW1uc0hlYWRlciIsImFmIiwidW5tYWtlQ29sdW1uc0hlYWRlciIsImZmIiwibWFrZVJvd3NIZWFkZXIiLCJzZiIsIm1ha2VSb3dzQm9keSIsIm1mIiwibWFrZVJvd3NGb290ZXIiLCJkZiIsImdldFRhYmxlUm93VHlwZSIsIlRmIiwiZ2V0VGFibGVDZWxsVHlwZSIsImdldFRhYmxlQ29sVHlwZSIsIlBjIiwiTmMiLCJjb2xsYXBzZSIsInpjIiwiY29sR3JvdXBzIiwiaWdub3JlIiwieGYiLCJpbnNlcnRDb250ZW50IiwiYWRkVmlzdWFsIiwiRWEiLCJMYyIsImhlYWRlclJvd3MiLCJoZWFkZXJDb2x1bW5zIiwiX2MiLCJXYyIsImpjIiwiRmMiLCJIYyIsImZvcm1hdHRlciIsIlZjIiwiUmYiLCJxYyIsIk9mIiwiQWYiLCJ0b1VwcGVyQ2FzZSIsIlVjIiwiR2MiLCJyZWQiLCJncmVlbiIsImJsdWUiLCIkYyIsImFscGhhIiwiS2MiLCJYYyIsIlljIiwiaXNTZXQiLCJKYyIsIlFjIiwiWmMiLCJleGVjQ29tbWFuZCIsImVsIiwiTWYiLCJubCIsInRpdGxlIiwia2YiLCJJZiIsImdldENvbnRleHQiLCJjbGVhclJlY3QiLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsImdldEltYWdlRGF0YSIsImRhdGEiLCJmYW5jeXR5cGUiLCJpbml0RGF0YSIsImNvbG9ycyIsImFsbG93Q3VzdG9tQ29sb3JzIiwib25BY3Rpb24iLCJ0bCIsInF1ZXJ5Q29tbWFuZFZhbHVlIiwicmwiLCJvbCIsIlBmIiwiQmYiLCJpdGVtcyIsInVsIiwiaWwiLCJzZXRBdHRyaWIiLCJzZXRTdHlsZSIsInNldEZvcm1hdCIsImNsIiwidG9IZXgiLCJsbCIsImJvcmRlcndpZHRoIiwiYm9yZGVyc3R5bGUiLCJib3JkZXJjb2xvciIsImJhY2tncm91bmRjb2xvciIsImFsIiwiZmwiLCJtYXRjaE5vZGUiLCJzbCIsIm1sIiwiZ2V0RGF0YSIsImNsb3NlIiwidHJhbnNhY3QiLCJOZiIsIm5vcm1hbCIsImlmVHJ1dGh5IiwiaGFsaWduIiwidmFsaWduIiwiY2VsbHR5cGUiLCJub19ldmVudHMiLCJzdHJ1Y3R1cmUiLCJkbCIsInpmIiwiTGYiLCJ0YWJzIiwid2luZG93TWFuYWdlciIsIm9wZW4iLCJzaXplIiwiYnV0dG9ucyIsInByaW1hcnkiLCJpbml0aWFsRGF0YSIsIm9uU3VibWl0IiwiZ2wiLCJfZiIsInBsIiwiYWxpZ24iLCJibCIsInNlbGVjdGVkIiwiSmwiLCJobCIsImNlbGxzcGFjaW5nIiwiY2VsbHBhZGRpbmciLCJXZiIsInNlcmlhbGl6ZVN0eWxlIiwic2V0QXR0cmlicyIsImNhcHRpb24iLCJ2bCIsImlucHV0TW9kZSIsIndsIiwiWWwiLCJ5bCIsIm1jZVRhYmxlU3BsaXRDZWxscyIsIm1jZVRhYmxlTWVyZ2VDZWxscyIsIm1jZVRhYmxlSW5zZXJ0Um93QmVmb3JlIiwibWNlVGFibGVJbnNlcnRSb3dBZnRlciIsIm1jZVRhYmxlSW5zZXJ0Q29sQmVmb3JlIiwibWNlVGFibGVJbnNlcnRDb2xBZnRlciIsIm1jZVRhYmxlRGVsZXRlQ29sIiwibWNlVGFibGVEZWxldGVSb3ciLCJtY2VUYWJsZUN1dENvbCIsInNldENvbHVtbnMiLCJtY2VUYWJsZUN1dFJvdyIsInNldFJvd3MiLCJtY2VUYWJsZUNvcHlDb2wiLCJtY2VUYWJsZUNvcHlSb3ciLCJtY2VUYWJsZVBhc3RlQ29sQmVmb3JlIiwiZ2V0Q29sdW1ucyIsIm1jZVRhYmxlUGFzdGVDb2xBZnRlciIsIm1jZVRhYmxlUGFzdGVSb3dCZWZvcmUiLCJnZXRSb3dzIiwibWNlVGFibGVQYXN0ZVJvd0FmdGVyIiwibWNlVGFibGVEZWxldGUiLCJpc0VtcHR5Iiwic2V0Q29udGVudCIsInNldEN1cnNvckxvY2F0aW9uIiwibm9kZUNoYW5nZWQiLCJtY2VUYWJsZUNlbGxUb2dnbGVDbGFzcyIsIm1jZVRhYmxlVG9nZ2xlQ2xhc3MiLCJ0b2dnbGUiLCJtY2VUYWJsZVRvZ2dsZUNhcHRpb24iLCJtY2VUYWJsZVNpemluZ01vZGUiLCJtY2VUYWJsZUNlbGxUeXBlIiwibWNlVGFibGVDb2xUeXBlIiwibWNlVGFibGVSb3dUeXBlIiwiYWRkQ29tbWFuZCIsIm1jZVRhYmxlUHJvcHMiLCJtY2VUYWJsZVJvd1Byb3BzIiwibWNlVGFibGVDZWxsUHJvcHMiLCJvcHRpb25zIiwiaGFzIiwiQ2wiLCJpbmRleCIsIlNsIiwiY3JlYXRlUmFuZ2UiLCJUbCIsIkpmIiwieGwiLCJzZXRTdGFydEJlZm9yZSIsInNldFN0YXJ0QWZ0ZXIiLCJzZXRFbmRCZWZvcmUiLCJzZXRFbmRBZnRlciIsIlJsIiwiRGwiLCJib3R0b20iLCJPbCIsInN0YXJ0Q29udGFpbmVyIiwic3RhcnRPZmZzZXQiLCJlbmRDb250YWluZXIiLCJlbmRPZmZzZXQiLCJBbCIsImRvbVJhbmdlIiwibHRyIiwicnRsIiwiZXhhY3QiLCJjb2xsYXBzZWQiLCJRZiIsImtsIiwiX2wiLCJXbCIsIk5sIiwiJGEiLCJpdGVtIiwicmVwbGFjZW1lbnQiLCJnZXRPckluaXQiLCJ6bCIsInN1YiIsIkxsIiwidW5tZXJnZSIsIm1lcmdlIiwiRmwiLCJzZWxlY3RlZFNlbGVjdG9yIiwiZmlyc3RTZWxlY3RlZCIsImxhc3RTZWxlY3RlZCIsIlpsIiwicGl4ZWxzIiwicGVyY2VudCIsInJlbWFpbmRlciIsIm91dHB1dCIsInJvdW5kIiwiY2EiLCJsYSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJtYSIsImRhIiwibGF5ZXJDbGFzcyIsImNvbnRlbnRFZGl0YWJsZSIsImJhIiwiTmEiLCJ6YSIsInFhIiwiaXNWYWx1ZSIsImlzRXJyb3IiLCJtYXBFcnJvciIsInRvT3B0aW9uYWwiLCJVYSIsImZyb21PcHRpb24iLCJKYSIsIlFhIiwiWmEiLCJlZiIsIm5mIiwiRGYiLCJtZW51IiwiZ2V0U3VibWVudUl0ZW1zIiwib25TZXR1cCIsInNldEFjdGl2ZSIsImZvcm1hdENoYW5nZWQiLCJpbml0aWFsaXplZCIsIkVmIiwidGFnTmFtZSIsImpmIiwicmVtb3ZlX3NpbWlsYXIiLCJpbmhlcml0IiwiRmYiLCJIZiIsInRhYmxlY2VsbGJhY2tncm91bmRjb2xvciIsImJhY2tncm91bmRDb2xvciIsInRhYmxlY2VsbHZlcnRpY2FsYWxpZ24iLCJ0YWJsZWNlbGxib3JkZXJjb2xvciIsImJvcmRlckNvbG9yIiwidGFibGVjZWxsY2xhc3MiLCJjbGFzc2VzIiwidGFibGVjbGFzcyIsInRhYmxlY2VsbGJvcmRlcnN0eWxlIiwiYm9yZGVyU3R5bGUiLCJ0YWJsZWNlbGxib3JkZXJ3aWR0aCIsImJvcmRlcldpZHRoIiwiVmYiLCJxZiIsIlVmIiwiR2YiLCJzb2Zmc2V0IiwiZm9mZnNldCIsIiRmIiwiS2YiLCJjYXRhIiwiWGYiLCJZZiIsImV4YWN0RnJvbVJhbmdlIiwiZ2V0V2luIiwicmFuZ2UiLCJzZWxlY3ROb2RlQ29udGVudHMiLCJaZiIsImVzIiwibnMiLCJ0cyIsInJzIiwidXMiLCJjcyIsImxzIiwiZ2V0U2VsZWN0aW9uIiwiYXMiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsImZzIiwic3MiLCJzZXRCYXNlQW5kRXh0ZW50IiwiZXh0ZW5kIiwibXMiLCJkcyIsImdzIiwicmFuZ2VDb3VudCIsImdldFJhbmdlQXQiLCJwcyIsImFuY2hvck5vZGUiLCJmb2N1c05vZGUiLCJhbmNob3JPZmZzZXQiLCJmb2N1c09mZnNldCIsImJzIiwiaHMiLCJ2cyIsIlpzIiwid3MiLCJ5cyIsIkNzIiwiS3MiLCJTcyIsIlRzIiwiYW0iLCJzbSIsInhzIiwiZm0iLCJScyIsIkRzIiwiT3MiLCJ0cmF2ZXJzZSIsInBtIiwiZ2F0aGVyIiwiZ20iLCJBcyIsImtzIiwiSXMiLCJCcyIsIk1zIiwiZ2V0UmVjdCIsIkVzIiwiZ2V0UmFuZ2VkUmVjdCIsIlBzIiwiTnMiLCJ6cyIsInZtIiwicG9pbnQiLCJnZXRJbm5lckhlaWdodCIsInNpdHVzRnJvbVBvaW50Iiwic2Nyb2xsQnkiLCJMcyIsImZyb21TaXR1cyIsImRtIiwidmVyaWZ5IiwiZmFpbHVyZSIsInltIiwiX3MiLCJubSIsInJtIiwiV3MiLCJqcyIsIkZzIiwib20iLCJIcyIsIlZzIiwicXMiLCJVcyIsImdldENsaWVudFJlY3RzIiwiSnMiLCJ0bSIsImNsZWFyU2VsZWN0aW9uIiwiY29sbGFwc2VTZWxlY3Rpb24iLCJzZXRTZWxlY3Rpb24iLCJzZXRSZWxhdGl2ZVNlbGVjdGlvbiIsInNlbGVjdENvbnRlbnRzIiwiaW5uZXJIZWlnaHQiLCJnZXRTY3JvbGxZIiwiR3MiLCIkcyIsInVtIiwic2libGluZyIsIlhzIiwiY2xlYXJCZWZvcmVVcGRhdGUiLCJzZWxlY3RSYW5nZSIsIllzIiwiY2FyZXRQb3NpdGlvbkZyb21Qb2ludCIsIm9mZnNldE5vZGUiLCJjYXJldFJhbmdlRnJvbVBvaW50IiwiUXMiLCJlbSIsImltIiwibmV4dCIsImZhbGxiYWNrIiwiY20iLCJsbSIsIm1tIiwic3VjY2VzcyIsImZhaWxlZFVwIiwiZmFpbGVkRG93biIsImJtIiwicmV0cnkiLCJobSIsImFkanVzdGVyIiwid20iLCJ0cnlVcCIsInRyeURvd24iLCJpZVRyeVVwIiwiaWVUcnlEb3duIiwiZ2V0SnVtcFNpemUiLCJUbSIsIkNtIiwiU20iLCJvdGhlclJldHJ5IiwiaWVSZXRyeSIsInhtIiwiUm0iLCJEbSIsIk9tIiwiQW0iLCJpc0JhY2t3YXJkIiwiaXNGb3J3YXJkIiwia20iLCJJbSIsIkJtIiwidGFyZ2V0cyIsInVwT3JMZWZ0Q2VsbHMiLCJkb3duT3JSaWdodENlbGxzIiwib3RoZXJDZWxscyIsImNsZWFyc3RhdGUiLCJtb3VzZWRvd24iLCJtb3VzZW92ZXIiLCJtb3VzZXVwIiwia2V5ZG93biIsIndoaWNoIiwic2hpZnRLZXkiLCJrZXl1cCIsImJ1dHRvbiIsInRvdWNoRW5kIiwidGltZVN0YW1wIiwiZ2V0RW5kIiwiTW0iLCJvbkFueSIsIm9uRmlyc3QiLCJvbkxhc3QiLCJtZXJnZWFibGUiLCJ1bm1lcmdlYWJsZSIsImxvY2tlZCIsInNldERpc2FibGVkIiwib25TZXR1cFRhYmxlIiwib25TZXR1cENlbGxPclJvdyIsIm9uU2V0dXBDb2x1bW4iLCJvblNldHVwUGFzdGVhYmxlIiwib25TZXR1cFBhc3RlYWJsZUNvbHVtbiIsIm9uU2V0dXBNZXJnZWFibGUiLCJvblNldHVwVW5tZXJnZWFibGUiLCJyZXNldFRhcmdldHMiLCJvblNldHVwVGFibGVXaXRoQ2FwdGlvbiIsIm9uU2V0dXBUYWJsZVJvd0hlYWRlcnMiLCJvblNldHVwVGFibGVDb2x1bW5IZWFkZXJzIiwiY2xlYXJSb3dzIiwiY2xlYXJDb2x1bW5zIiwiYWRkUXVlcnlWYWx1ZUhhbmRsZXIiLCJudW1Sb3dzIiwibnVtQ29sdW1ucyIsImljb24iLCJhZGRNZW51SXRlbSIsImFkZE5lc3RlZE1lbnVJdGVtIiwiYWRkQ29udGV4dE1lbnUiLCJ1cGRhdGUiLCJhZGRUb2dnbGVNZW51SXRlbSIsImFkZE1lbnVCdXR0b24iLCJ0b29sdGlwIiwiZmV0Y2giLCJhZGRCdXR0b24iLCJhZGRUb2dnbGVCdXR0b24iLCJhZGRDb250ZXh0VG9vbGJhciIsImFkZFRlbXBBdHRyIiwicmVnaXN0ZXIiLCJrZXlDb2RlIiwiVEFCIiwiaW5zZXJ0VGFibGUiLCJzZXRDbGlwYm9hcmRSb3dzIiwiZ2V0Q2xpcGJvYXJkUm93cyIsInNldENsaXBib2FyZENvbHMiLCJnZXRDbGlwYm9hcmRDb2xzIiwicmVzaXplSGFuZGxlciIsInNlbGVjdGlvblRhcmdldHMiXSwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2Fzc2V0cy9jb3JlL3BsdWdpbnMvY3VzdG9tL3RpbnltY2UvcGx1Z2lucy90YWJsZS9wbHVnaW4ubWluLmpzPzNhNDAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgVGlueSBUZWNobm9sb2dpZXMsIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIExHUEwgb3IgYSBjb21tZXJjaWFsIGxpY2Vuc2UuXHJcbiAqIEZvciBMR1BMIHNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKiBGb3IgY29tbWVyY2lhbCBsaWNlbnNlcyBzZWUgaHR0cHM6Ly93d3cudGlueS5jbG91ZC9cclxuICpcclxuICogVmVyc2lvbjogNS4xMC43ICgyMDIyLTEyLTA2KVxyXG4gKi9cclxuIWZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gZShyKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIHQ9dHlwZW9mKG49ZSksKG51bGw9PT1uP1wibnVsbFwiOlwib2JqZWN0XCI9PXQmJihBcnJheS5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihuKXx8bi5jb25zdHJ1Y3RvciYmXCJBcnJheVwiPT09bi5jb25zdHJ1Y3Rvci5uYW1lKT9cImFycmF5XCI6XCJvYmplY3RcIj09dCYmKFN0cmluZy5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihuKXx8bi5jb25zdHJ1Y3RvciYmXCJTdHJpbmdcIj09PW4uY29uc3RydWN0b3IubmFtZSk/XCJzdHJpbmdcIjp0KT09PXI7dmFyIG4sdH19ZnVuY3Rpb24gbihuKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlPT09bn19ZnVuY3Rpb24gdChuKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIG49PT1lfX1mdW5jdGlvbiBsKGUpe3JldHVybiEobnVsbD09ZSl9ZnVuY3Rpb24gRSgpe31mdW5jdGlvbiBDKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBlfX1mdW5jdGlvbiBTKGUpe3JldHVybiBlfWZ1bmN0aW9uIHIoZSxuKXtyZXR1cm4gZT09PW59dmFyIFQ9ZShcInN0cmluZ1wiKSxnPWUoXCJvYmplY3RcIiksYT1lKFwiYXJyYXlcIiksaD10KG51bGwpLG89bihcImJvb2xlYW5cIiksdT10KHZvaWQgMCksYz1uKFwiZnVuY3Rpb25cIiksZj1uKFwibnVtYmVyXCIpO2Z1bmN0aW9uIFAocil7Zm9yKHZhciBvPVtdLGU9MTtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKW9bZS0xXT1hcmd1bWVudHNbZV07cmV0dXJuIGZ1bmN0aW9uKCl7Zm9yKHZhciBlPVtdLG49MDtuPGFyZ3VtZW50cy5sZW5ndGg7bisrKWVbbl09YXJndW1lbnRzW25dO3ZhciB0PW8uY29uY2F0KGUpO3JldHVybiByLmFwcGx5KG51bGwsdCl9fWZ1bmN0aW9uIHAobil7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiFuKGUpfX1mdW5jdGlvbiBpKCl7cmV0dXJuIHN9dmFyIHY9QyghMSkseD1DKCEwKSxzPXtmb2xkOmZ1bmN0aW9uKGUsbil7cmV0dXJuIGUoKX0saXNTb21lOnYsaXNOb25lOngsZ2V0T3I6UyxnZXRPclRodW5rOm0sZ2V0T3JEaWU6ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKGV8fFwiZXJyb3I6IGdldE9yRGllIGNhbGxlZCBvbiBub25lLlwiKX0sZ2V0T3JOdWxsOkMobnVsbCksZ2V0T3JVbmRlZmluZWQ6Qyh2b2lkIDApLG9yOlMsb3JUaHVuazptLG1hcDppLGVhY2g6RSxiaW5kOmksZXhpc3RzOnYsZm9yYWxsOngsZmlsdGVyOmZ1bmN0aW9uKCl7cmV0dXJuIHN9LHRvQXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm5bXX0sdG9TdHJpbmc6QyhcIm5vbmUoKVwiKX07ZnVuY3Rpb24gbShlKXtyZXR1cm4gZSgpfWZ1bmN0aW9uIHkoZSxuKXtyZXR1cm4tMTxHLmNhbGwoZSxuKX1mdW5jdGlvbiBSKGUsbil7Zm9yKHZhciB0PTAscj1lLmxlbmd0aDt0PHI7dCsrKWlmKG4oZVt0XSx0KSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBEKGUsbil7Zm9yKHZhciB0PVtdLHI9MDtyPGU7cisrKXQucHVzaChuKHIpKTtyZXR1cm4gdH1mdW5jdGlvbiBPKGUsbil7Zm9yKHZhciB0PWUubGVuZ3RoLHI9bmV3IEFycmF5KHQpLG89MDtvPHQ7bysrKXt2YXIgdT1lW29dO3Jbb109bih1LG8pfXJldHVybiByfWZ1bmN0aW9uIEEoZSxuKXtmb3IodmFyIHQ9MCxyPWUubGVuZ3RoO3Q8cjt0KyspbihlW3RdLHQpfWZ1bmN0aW9uIGQoZSxuKXtmb3IodmFyIHQ9W10scj1bXSxvPTAsdT1lLmxlbmd0aDtvPHU7bysrKXt2YXIgaT1lW29dOyhuKGksbyk/dDpyKS5wdXNoKGkpfXJldHVybntwYXNzOnQsZmFpbDpyfX1mdW5jdGlvbiBrKGUsbil7Zm9yKHZhciB0PVtdLHI9MCxvPWUubGVuZ3RoO3I8bztyKyspe3ZhciB1PWVbcl07bih1LHIpJiZ0LnB1c2godSl9cmV0dXJuIHR9ZnVuY3Rpb24gSShlLHIsbyl7cmV0dXJuIGZ1bmN0aW9uKGUpe2Zvcih2YXIgbix0PWUubGVuZ3RoLTE7MDw9dDt0LS0pbj1lW3RdLG89cihvLG4sdCl9KGUpLG99ZnVuY3Rpb24gQihlLHQscil7cmV0dXJuIEEoZSxmdW5jdGlvbihlLG4pe3I9dChyLGUsbil9KSxyfWZ1bmN0aW9uIHcoZSxuKXtyZXR1cm4gZnVuY3Rpb24oZSxuLHQpe2Zvcih2YXIgcj0wLG89ZS5sZW5ndGg7cjxvO3IrKyl7dmFyIHU9ZVtyXTtpZihuKHUscikpcmV0dXJuIHEuc29tZSh1KTtpZih0KHUscikpYnJlYWt9cmV0dXJuIHEubm9uZSgpfShlLG4sdil9ZnVuY3Rpb24gYihlLG4pe2Zvcih2YXIgdD0wLHI9ZS5sZW5ndGg7dDxyO3QrKylpZihuKGVbdF0sdCkpcmV0dXJuIHEuc29tZSh0KTtyZXR1cm4gcS5ub25lKCl9ZnVuY3Rpb24gTShlKXtmb3IodmFyIG49W10sdD0wLHI9ZS5sZW5ndGg7dDxyOysrdCl7aWYoIWEoZVt0XSkpdGhyb3cgbmV3IEVycm9yKFwiQXJyLmZsYXR0ZW4gaXRlbSBcIit0K1wiIHdhcyBub3QgYW4gYXJyYXksIGlucHV0OiBcIitlKTskLmFwcGx5KG4sZVt0XSl9cmV0dXJuIG59ZnVuY3Rpb24gTihlLG4pe3JldHVybiBNKE8oZSxuKSl9ZnVuY3Rpb24geihlLG4pe2Zvcih2YXIgdD0wLHI9ZS5sZW5ndGg7dDxyOysrdClpZighMCE9PW4oZVt0XSx0KSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBMKGUsbil7Zm9yKHZhciB0PXt9LHI9MCxvPWUubGVuZ3RoO3I8bztyKyspe3ZhciB1PWVbcl07dFtTdHJpbmcodSldPW4odSxyKX1yZXR1cm4gdH1mdW5jdGlvbiBfKGUpe3JldHVybltlXX1mdW5jdGlvbiBXKGUsbil7cmV0dXJuIDA8PW4mJm48ZS5sZW5ndGg/cS5zb21lKGVbbl0pOnEubm9uZSgpfWZ1bmN0aW9uIGooZSl7cmV0dXJuIFcoZSwwKX1mdW5jdGlvbiBGKGUpe3JldHVybiBXKGUsZS5sZW5ndGgtMSl9ZnVuY3Rpb24gSChlLG4pe2Zvcih2YXIgdD0wO3Q8ZS5sZW5ndGg7dCsrKXt2YXIgcj1uKGVbdF0sdCk7aWYoci5pc1NvbWUoKSlyZXR1cm4gcn1yZXR1cm4gcS5ub25lKCl9dmFyIFY9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3JldHVybiBvfWZ1bmN0aW9uIG4oZSl7cmV0dXJuIGUodCl9dmFyIHI9Qyh0KSxvPXtmb2xkOmZ1bmN0aW9uKGUsbil7cmV0dXJuIG4odCl9LGlzU29tZTp4LGlzTm9uZTp2LGdldE9yOnIsZ2V0T3JUaHVuazpyLGdldE9yRGllOnIsZ2V0T3JOdWxsOnIsZ2V0T3JVbmRlZmluZWQ6cixvcjplLG9yVGh1bms6ZSxtYXA6ZnVuY3Rpb24oZSl7cmV0dXJuIFYoZSh0KSl9LGVhY2g6ZnVuY3Rpb24oZSl7ZSh0KX0sYmluZDpuLGV4aXN0czpuLGZvcmFsbDpuLGZpbHRlcjpmdW5jdGlvbihlKXtyZXR1cm4gZSh0KT9vOnN9LHRvQXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm5bdF19LHRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuXCJzb21lKFwiK3QrXCIpXCJ9fTtyZXR1cm4gb30scT17c29tZTpWLG5vbmU6aSxmcm9tOmZ1bmN0aW9uKGUpe3JldHVybiBudWxsPT1lP3M6VihlKX19LFU9QXJyYXkucHJvdG90eXBlLnNsaWNlLEc9QXJyYXkucHJvdG90eXBlLmluZGV4T2YsJD1BcnJheS5wcm90b3R5cGUucHVzaCxLPWZ1bmN0aW9uKCl7cmV0dXJuKEs9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciBuLHQ9MSxyPWFyZ3VtZW50cy5sZW5ndGg7dDxyO3QrKylmb3IodmFyIG8gaW4gbj1hcmd1bWVudHNbdF0pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4sbykmJihlW29dPW5bb10pO3JldHVybiBlfSkuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtmdW5jdGlvbiBYKGUsbix0KXtpZih0fHwyPT09YXJndW1lbnRzLmxlbmd0aClmb3IodmFyIHIsbz0wLHU9bi5sZW5ndGg7bzx1O28rKykhciYmbyBpbiBufHwoKHI9cnx8QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwobiwwLG8pKVtvXT1uW29dKTtyZXR1cm4gZS5jb25jYXQocnx8QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwobikpfWZ1bmN0aW9uIFkodCl7dmFyIHIsbz0hMTtyZXR1cm4gZnVuY3Rpb24oKXtmb3IodmFyIGU9W10sbj0wO248YXJndW1lbnRzLmxlbmd0aDtuKyspZVtuXT1hcmd1bWVudHNbbl07cmV0dXJuIG98fChvPSEwLHI9dC5hcHBseShudWxsLGUpKSxyfX1mdW5jdGlvbiBKKGUsbil7dmFyIHQ9U3RyaW5nKG4pLnRvTG93ZXJDYXNlKCk7cmV0dXJuIHcoZSxmdW5jdGlvbihlKXtyZXR1cm4gZS5zZWFyY2godCl9KX1mdW5jdGlvbiBRKGUsbix0KXtyZXR1cm5cIlwiPT09bnx8ZS5sZW5ndGg+PW4ubGVuZ3RoJiZlLnN1YnN0cih0LHQrbi5sZW5ndGgpPT09bn1mdW5jdGlvbiBaKGUsbil7cmV0dXJuLTEhPT1lLmluZGV4T2Yobil9ZnVuY3Rpb24gZWUoZSxuKXtyZXR1cm4gUShlLG4sZS5sZW5ndGgtbi5sZW5ndGgpfWZ1bmN0aW9uIG5lKGUpe3JldHVybiAwPGUubGVuZ3RofWZ1bmN0aW9uIHRlKG4pe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gWihlLG4pfX1mdW5jdGlvbiByZShlKXtyZXR1cm4gd2luZG93Lm1hdGNoTWVkaWEoZSkubWF0Y2hlc31mdW5jdGlvbiBvZShlLG4pe3ZhciB0PWUuZG9tO2lmKDEhPT10Lm5vZGVUeXBlKXJldHVybiExO3ZhciByPXQ7aWYodm9pZCAwIT09ci5tYXRjaGVzKXJldHVybiByLm1hdGNoZXMobik7aWYodm9pZCAwIT09ci5tc01hdGNoZXNTZWxlY3RvcilyZXR1cm4gci5tc01hdGNoZXNTZWxlY3RvcihuKTtpZih2b2lkIDAhPT1yLndlYmtpdE1hdGNoZXNTZWxlY3RvcilyZXR1cm4gci53ZWJraXRNYXRjaGVzU2VsZWN0b3Iobik7aWYodm9pZCAwIT09ci5tb3pNYXRjaGVzU2VsZWN0b3IpcmV0dXJuIHIubW96TWF0Y2hlc1NlbGVjdG9yKG4pO3Rocm93IG5ldyBFcnJvcihcIkJyb3dzZXIgbGFja3MgbmF0aXZlIHNlbGVjdG9yc1wiKX1mdW5jdGlvbiB1ZShlKXtyZXR1cm4gMSE9PWUubm9kZVR5cGUmJjkhPT1lLm5vZGVUeXBlJiYxMSE9PWUubm9kZVR5cGV8fDA9PT1lLmNoaWxkRWxlbWVudENvdW50fWZ1bmN0aW9uIGllKGUsbil7dmFyIHQ9dm9pZCAwPT09bj9kb2N1bWVudDpuLmRvbTtyZXR1cm4gdWUodCk/cS5ub25lKCk6cS5mcm9tKHQucXVlcnlTZWxlY3RvcihlKSkubWFwKFZlLmZyb21Eb20pfWZ1bmN0aW9uIGNlKGUsbil7cmV0dXJuIGUuZG9tPT09bi5kb219ZnVuY3Rpb24gbGUoZSxuKXtyZXR1cm4gSGUoKS5icm93c2VyLmlzSUUoKT8odD1lLmRvbSxyPW4uZG9tLG89Tm9kZS5ET0NVTUVOVF9QT1NJVElPTl9DT05UQUlORURfQlksMCE9KHQuY29tcGFyZURvY3VtZW50UG9zaXRpb24ocikmbykpOih1PWUuZG9tKSE9PShpPW4uZG9tKSYmdS5jb250YWlucyhpKTt2YXIgdCxyLG8sdSxpfWZ1bmN0aW9uIGFlKGUsbil7Zm9yKHZhciB0PVVlKGUpLHI9MCxvPXQubGVuZ3RoO3I8bztyKyspe3ZhciB1PXRbcl07bihlW3VdLHUpfX1mdW5jdGlvbiBmZShlLHQpe3JldHVybiAkZShlLGZ1bmN0aW9uKGUsbil7cmV0dXJue2s6bix2OnQoZSxuKX19KX1mdW5jdGlvbiBzZShlLG4pe3ZhciB0PXt9LHI9bixvPXQsdT1mdW5jdGlvbihlLG4pe29bbl09ZX0saT1FO3JldHVybiBhZShlLGZ1bmN0aW9uKGUsbil7KHIoZSxuKT91OmkpKGUsbil9KSx0fWZ1bmN0aW9uIG1lKGUsdCl7dmFyIHI9W107cmV0dXJuIGFlKGUsZnVuY3Rpb24oZSxuKXtyLnB1c2godChlLG4pKX0pLHJ9ZnVuY3Rpb24gZGUoZSl7cmV0dXJuIG1lKGUsUyl9ZnVuY3Rpb24gZ2UoZSl7cmV0dXJuIFVlKGUpLmxlbmd0aH1mdW5jdGlvbiBwZShlLG4pe3JldHVybiBLZShlLG4pP3EuZnJvbShlW25dKTpxLm5vbmUoKX1mdW5jdGlvbiBiZShlLG4pe3JldHVybiBLZShlLG4pJiZ2b2lkIDAhPT1lW25dJiZudWxsIT09ZVtuXX1mdW5jdGlvbiBoZShlLG4sdCl7cmV0dXJue2VsZW1lbnQ6ZSxyb3dzcGFuOm4sY29sc3Bhbjp0fX1mdW5jdGlvbiB2ZShlLG4sdCl7cmV0dXJue2VsZW1lbnQ6ZSxjZWxsczpuLHNlY3Rpb246dH19ZnVuY3Rpb24gd2UoZSxuLHQpe3JldHVybntlbGVtZW50OmUsaXNOZXc6bixpc0xvY2tlZDp0fX1mdW5jdGlvbiB5ZShlLG4sdCxyKXtyZXR1cm57ZWxlbWVudDplLGNlbGxzOm4sc2VjdGlvbjp0LGlzTmV3OnJ9fWZ1bmN0aW9uIENlKCl7cmV0dXJuIERlKDAsMCl9ZnVuY3Rpb24gU2UoZSl7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdD09PWV9fXZhciB0PWUuY3VycmVudCxyPWUudmVyc2lvbjtyZXR1cm57Y3VycmVudDp0LHZlcnNpb246cixpc0VkZ2U6bihcIkVkZ2VcIiksaXNDaHJvbWU6bihcIkNocm9tZVwiKSxpc0lFOm4oXCJJRVwiKSxpc09wZXJhOm4oXCJPcGVyYVwiKSxpc0ZpcmVmb3g6bihNZSksaXNTYWZhcmk6bihcIlNhZmFyaVwiKX19ZnVuY3Rpb24gVGUoZSl7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdD09PWV9fXZhciB0PWUuY3VycmVudCxyPWUudmVyc2lvbjtyZXR1cm57Y3VycmVudDp0LHZlcnNpb246cixpc1dpbmRvd3M6bihOZSksaXNpT1M6bihcImlPU1wiKSxpc0FuZHJvaWQ6bih6ZSksaXNPU1g6bihcIk9TWFwiKSxpc0xpbnV4Om4oXCJMaW51eFwiKSxpc1NvbGFyaXM6bihMZSksaXNGcmVlQlNEOm4oX2UpLGlzQ2hyb21lT1M6bihXZSl9fWZ1bmN0aW9uIHhlKGUpe2lmKG51bGw9PWUpdGhyb3cgbmV3IEVycm9yKFwiTm9kZSBjYW5ub3QgYmUgbnVsbCBvciB1bmRlZmluZWRcIik7cmV0dXJue2RvbTplfX12YXIgUmUsRGU9ZnVuY3Rpb24oZSxuKXtyZXR1cm57bWFqb3I6ZSxtaW5vcjpufX0sT2U9e251OkRlLGRldGVjdDpmdW5jdGlvbihlLG4pe3ZhciB0LHIsbz1TdHJpbmcobikudG9Mb3dlckNhc2UoKTtyZXR1cm4gMD09PWUubGVuZ3RoP0NlKCk6KHI9ZnVuY3Rpb24oZSxuKXtmb3IodmFyIHQ9MDt0PGUubGVuZ3RoO3QrKyl7dmFyIHI9ZVt0XTtpZihyLnRlc3QobikpcmV0dXJuIHJ9fShlLHQ9bykpP0RlKHUoMSksdSgyKSk6e21ham9yOjAsbWlub3I6MH07ZnVuY3Rpb24gdShlKXtyZXR1cm4gTnVtYmVyKHQucmVwbGFjZShyLFwiJFwiK2UpKX19LHVua25vd246Q2V9LEFlPWZ1bmN0aW9uKGUsbil7cmV0dXJuIFEoZSxuLDApfSxrZT0oUmU9L15cXHMrfFxccyskL2csZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVwbGFjZShSZSxcIlwiKX0pLEllPS8uKj92ZXJzaW9uXFwvXFwgPyhbMC05XSspXFwuKFswLTldKykuKi8sQmU9e2Jyb3dzZXJzOkMoW3tuYW1lOlwiRWRnZVwiLHZlcnNpb25SZWdleGVzOlsvLio/ZWRnZVxcLyA/KFswLTldKylcXC4oWzAtOV0rKSQvXSxzZWFyY2g6ZnVuY3Rpb24oZSl7cmV0dXJuIFooZSxcImVkZ2UvXCIpJiZaKGUsXCJjaHJvbWVcIikmJlooZSxcInNhZmFyaVwiKSYmWihlLFwiYXBwbGV3ZWJraXRcIil9fSx7bmFtZTpcIkNocm9tZVwiLGJyYW5kOlwiQ2hyb21pdW1cIix2ZXJzaW9uUmVnZXhlczpbLy4qP2Nocm9tZVxcLyhbMC05XSspXFwuKFswLTldKykuKi8sSWVdLHNlYXJjaDpmdW5jdGlvbihlKXtyZXR1cm4gWihlLFwiY2hyb21lXCIpJiYhWihlLFwiY2hyb21lZnJhbWVcIil9fSx7bmFtZTpcIklFXCIsdmVyc2lvblJlZ2V4ZXM6Wy8uKj9tc2llXFwgPyhbMC05XSspXFwuKFswLTldKykuKi8sLy4qP3J2OihbMC05XSspXFwuKFswLTldKykuKi9dLHNlYXJjaDpmdW5jdGlvbihlKXtyZXR1cm4gWihlLFwibXNpZVwiKXx8WihlLFwidHJpZGVudFwiKX19LHtuYW1lOlwiT3BlcmFcIix2ZXJzaW9uUmVnZXhlczpbSWUsLy4qP29wZXJhXFwvKFswLTldKylcXC4oWzAtOV0rKS4qL10sc2VhcmNoOnRlKFwib3BlcmFcIil9LHtuYW1lOlwiRmlyZWZveFwiLHZlcnNpb25SZWdleGVzOlsvLio/ZmlyZWZveFxcL1xcID8oWzAtOV0rKVxcLihbMC05XSspLiovXSxzZWFyY2g6dGUoXCJmaXJlZm94XCIpfSx7bmFtZTpcIlNhZmFyaVwiLHZlcnNpb25SZWdleGVzOltJZSwvLio/Y3B1IG9zIChbMC05XSspXyhbMC05XSspLiovXSxzZWFyY2g6ZnVuY3Rpb24oZSl7cmV0dXJuKFooZSxcInNhZmFyaVwiKXx8WihlLFwibW9iaWxlL1wiKSkmJlooZSxcImFwcGxld2Via2l0XCIpfX1dKSxvc2VzOkMoW3tuYW1lOlwiV2luZG93c1wiLHNlYXJjaDp0ZShcIndpblwiKSx2ZXJzaW9uUmVnZXhlczpbLy4qP3dpbmRvd3NcXCBudFxcID8oWzAtOV0rKVxcLihbMC05XSspLiovXX0se25hbWU6XCJpT1NcIixzZWFyY2g6ZnVuY3Rpb24oZSl7cmV0dXJuIFooZSxcImlwaG9uZVwiKXx8WihlLFwiaXBhZFwiKX0sdmVyc2lvblJlZ2V4ZXM6Wy8uKj92ZXJzaW9uXFwvXFwgPyhbMC05XSspXFwuKFswLTldKykuKi8sLy4qY3B1IG9zIChbMC05XSspXyhbMC05XSspLiovLC8uKmNwdSBpcGhvbmUgb3MgKFswLTldKylfKFswLTldKykuKi9dfSx7bmFtZTpcIkFuZHJvaWRcIixzZWFyY2g6dGUoXCJhbmRyb2lkXCIpLHZlcnNpb25SZWdleGVzOlsvLio/YW5kcm9pZFxcID8oWzAtOV0rKVxcLihbMC05XSspLiovXX0se25hbWU6XCJPU1hcIixzZWFyY2g6dGUoXCJtYWMgb3MgeFwiKSx2ZXJzaW9uUmVnZXhlczpbLy4qP21hY1xcIG9zXFwgeFxcID8oWzAtOV0rKV8oWzAtOV0rKS4qL119LHtuYW1lOlwiTGludXhcIixzZWFyY2g6dGUoXCJsaW51eFwiKSx2ZXJzaW9uUmVnZXhlczpbXX0se25hbWU6XCJTb2xhcmlzXCIsc2VhcmNoOnRlKFwic3Vub3NcIiksdmVyc2lvblJlZ2V4ZXM6W119LHtuYW1lOlwiRnJlZUJTRFwiLHNlYXJjaDp0ZShcImZyZWVic2RcIiksdmVyc2lvblJlZ2V4ZXM6W119LHtuYW1lOlwiQ2hyb21lT1NcIixzZWFyY2g6dGUoXCJjcm9zXCIpLHZlcnNpb25SZWdleGVzOlsvLio/Y2hyb21lXFwvKFswLTldKylcXC4oWzAtOV0rKS4qL119XSl9LE1lPVwiRmlyZWZveFwiLEVlPWZ1bmN0aW9uKCl7cmV0dXJuIFNlKHtjdXJyZW50OnZvaWQgMCx2ZXJzaW9uOk9lLnVua25vd24oKX0pfSxQZT1TZSxOZT0oQyhcIkVkZ2VcIiksQyhcIkNocm9tZVwiKSxDKFwiSUVcIiksQyhcIk9wZXJhXCIpLEMoTWUpLEMoXCJTYWZhcmlcIiksXCJXaW5kb3dzXCIpLHplPVwiQW5kcm9pZFwiLExlPVwiU29sYXJpc1wiLF9lPVwiRnJlZUJTRFwiLFdlPVwiQ2hyb21lT1NcIixqZT1mdW5jdGlvbigpe3JldHVybiBUZSh7Y3VycmVudDp2b2lkIDAsdmVyc2lvbjpPZS51bmtub3duKCl9KX0sRmU9VGUsSGU9KEMoTmUpLEMoXCJpT1NcIiksQyh6ZSksQyhcIkxpbnV4XCIpLEMoXCJPU1hcIiksQyhMZSksQyhfZSksQyhXZSksWShmdW5jdGlvbigpe3JldHVybiBlPW5hdmlnYXRvci51c2VyQWdlbnQsbj1xLmZyb20obmF2aWdhdG9yLnVzZXJBZ2VudERhdGEpLHQ9cmUscD1CZS5icm93c2VycygpLGI9QmUub3NlcygpLGg9bi5iaW5kKGZ1bmN0aW9uKGUpe3JldHVybiByPXAsSChlLmJyYW5kcyxmdW5jdGlvbihuKXt2YXIgdD1uLmJyYW5kLnRvTG93ZXJDYXNlKCk7cmV0dXJuIHcocixmdW5jdGlvbihlKXt2YXIgbjtyZXR1cm4gdD09PShudWxsPT09KG49ZS5icmFuZCl8fHZvaWQgMD09PW4/dm9pZCAwOm4udG9Mb3dlckNhc2UoKSl9KS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJue2N1cnJlbnQ6ZS5uYW1lLHZlcnNpb246T2UubnUocGFyc2VJbnQobi52ZXJzaW9uLDEwKSwwKX19KX0pO3ZhciByfSkub3JUaHVuayhmdW5jdGlvbigpe3JldHVybiBKKHAsdD1lKS5tYXAoZnVuY3Rpb24oZSl7dmFyIG49T2UuZGV0ZWN0KGUudmVyc2lvblJlZ2V4ZXMsdCk7cmV0dXJue2N1cnJlbnQ6ZS5uYW1lLHZlcnNpb246bn19KTt2YXIgdH0pLmZvbGQoRWUsUGUpLHY9SihiLHI9ZSkubWFwKGZ1bmN0aW9uKGUpe3ZhciBuPU9lLmRldGVjdChlLnZlcnNpb25SZWdleGVzLHIpO3JldHVybntjdXJyZW50OmUubmFtZSx2ZXJzaW9uOm59fSkuZm9sZChqZSxGZSkse2Jyb3dzZXI6aCxvczp2LGRldmljZVR5cGU6KHU9aCxpPWUsYz10LGw9KG89dikuaXNpT1MoKSYmITA9PT0vaXBhZC9pLnRlc3QoaSksYT1vLmlzaU9TKCkmJiFsLHM9KGY9by5pc2lPUygpfHxvLmlzQW5kcm9pZCgpKXx8YyhcIihwb2ludGVyOmNvYXJzZSlcIiksbT1sfHwhYSYmZiYmYyhcIihtaW4tZGV2aWNlLXdpZHRoOjc2OHB4KVwiKSxkPWF8fGYmJiFtLGc9dS5pc1NhZmFyaSgpJiZvLmlzaU9TKCkmJiExPT09L3NhZmFyaS9pLnRlc3QoaSkse2lzaVBhZDpDKGwpLGlzaVBob25lOkMoYSksaXNUYWJsZXQ6QyhtKSxpc1Bob25lOkMoZCksaXNUb3VjaDpDKHMpLGlzQW5kcm9pZDpvLmlzQW5kcm9pZCxpc2lPUzpvLmlzaU9TLGlzV2ViVmlldzpDKGcpLGlzRGVza3RvcDpDKCFkJiYhbSYmIWcpfSl9O3ZhciBlLG4sdCxyLG8sdSxpLGMsbCxhLGYscyxtLGQsZyxwLGIsaCx2fSkpLFZlPXtmcm9tSHRtbDpmdW5jdGlvbihlLG4pe3ZhciB0PShufHxkb2N1bWVudCkuY3JlYXRlRWxlbWVudChcImRpdlwiKTtpZih0LmlubmVySFRNTD1lLCF0Lmhhc0NoaWxkTm9kZXMoKXx8MTx0LmNoaWxkTm9kZXMubGVuZ3RoKXRocm93IGNvbnNvbGUuZXJyb3IoXCJIVE1MIGRvZXMgbm90IGhhdmUgYSBzaW5nbGUgcm9vdCBub2RlXCIsZSksbmV3IEVycm9yKFwiSFRNTCBtdXN0IGhhdmUgYSBzaW5nbGUgcm9vdCBub2RlXCIpO3JldHVybiB4ZSh0LmNoaWxkTm9kZXNbMF0pfSxmcm9tVGFnOmZ1bmN0aW9uKGUsbil7dmFyIHQ9KG58fGRvY3VtZW50KS5jcmVhdGVFbGVtZW50KGUpO3JldHVybiB4ZSh0KX0sZnJvbVRleHQ6ZnVuY3Rpb24oZSxuKXt2YXIgdD0obnx8ZG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGUpO3JldHVybiB4ZSh0KX0sZnJvbURvbTp4ZSxmcm9tUG9pbnQ6ZnVuY3Rpb24oZSxuLHQpe3JldHVybiBxLmZyb20oZS5kb20uZWxlbWVudEZyb21Qb2ludChuLHQpKS5tYXAoeGUpfX0scWU9b2UsVWU9T2JqZWN0LmtleXMsR2U9T2JqZWN0Lmhhc093blByb3BlcnR5LCRlPWZ1bmN0aW9uKGUscil7dmFyIG89e307cmV0dXJuIGFlKGUsZnVuY3Rpb24oZSxuKXt2YXIgdD1yKGUsbik7b1t0LmtdPXQudn0pLG99LEtlPWZ1bmN0aW9uKGUsbil7cmV0dXJuIEdlLmNhbGwoZSxuKX0sWGU9W1widGZvb3RcIixcInRoZWFkXCIsXCJ0Ym9keVwiLFwiY29sZ3JvdXBcIl07ZnVuY3Rpb24gWWUoZSl7cmV0dXJuIGUuZG9tLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCl9ZnVuY3Rpb24gSmUoZSl7cmV0dXJuIGUuZG9tLm5vZGVUeXBlfWZ1bmN0aW9uIFFlKG4pe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gSmUoZSk9PT1ufX1mdW5jdGlvbiBaZShlKXtyZXR1cm4gOD09PUplKGUpfHxcIiNjb21tZW50XCI9PT1ZZShlKX1mdW5jdGlvbiBlbihuKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIGduKGUpJiZZZShlKT09PW59fWZ1bmN0aW9uIG5uKGUpe3JldHVybiBWZS5mcm9tRG9tKGUuZG9tLm93bmVyRG9jdW1lbnQpfWZ1bmN0aW9uIHRuKGUpe3JldHVybiBibihlKT9lOm5uKGUpfWZ1bmN0aW9uIHJuKGUpe3JldHVybiBxLmZyb20oZS5kb20ucGFyZW50Tm9kZSkubWFwKFZlLmZyb21Eb20pfWZ1bmN0aW9uIG9uKGUsbil7Zm9yKHZhciB0PWMobik/bjp2LHI9ZS5kb20sbz1bXTtudWxsIT09ci5wYXJlbnROb2RlJiZ2b2lkIDAhPT1yLnBhcmVudE5vZGU7KXt2YXIgdT1yLnBhcmVudE5vZGUsaT1WZS5mcm9tRG9tKHUpO2lmKG8ucHVzaChpKSwhMD09PXQoaSkpYnJlYWs7cj11fXJldHVybiBvfWZ1bmN0aW9uIHVuKGUpe3JldHVybiBxLmZyb20oZS5kb20ucHJldmlvdXNTaWJsaW5nKS5tYXAoVmUuZnJvbURvbSl9ZnVuY3Rpb24gY24oZSl7cmV0dXJuIHEuZnJvbShlLmRvbS5uZXh0U2libGluZykubWFwKFZlLmZyb21Eb20pfWZ1bmN0aW9uIGxuKGUpe3JldHVybiBPKGUuZG9tLmNoaWxkTm9kZXMsVmUuZnJvbURvbSl9ZnVuY3Rpb24gYW4oZSxuKXt2YXIgdD1lLmRvbS5jaGlsZE5vZGVzO3JldHVybiBxLmZyb20odFtuXSkubWFwKFZlLmZyb21Eb20pfWZ1bmN0aW9uIGZuKGUpe3JldHVybiBWZS5mcm9tRG9tKGUuZG9tLmhvc3QpfWZ1bmN0aW9uIHNuKGUsbix0KXtyZXR1cm4gcj1mdW5jdGlvbihlKXtyZXR1cm4gb2UoZSxuKX0sayhvbihlLHQpLHIpO3ZhciByfWZ1bmN0aW9uIG1uKGUsbil7cmV0dXJuIHQ9ZnVuY3Rpb24oZSl7cmV0dXJuIG9lKGUsbil9LGsobG4oZSksdCk7dmFyIHR9ZnVuY3Rpb24gZG4oZSxuKXtyZXR1cm4gdWUodD12b2lkIDA9PT1lP2RvY3VtZW50OmUuZG9tKT9bXTpPKHQucXVlcnlTZWxlY3RvckFsbChuKSxWZS5mcm9tRG9tKTt2YXIgdH1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93fHxGdW5jdGlvbihcInJldHVybiB0aGlzO1wiKSgpO3ZhciBnbj1RZSgxKSxwbj1RZSgzKSxibj1RZSg5KSxobj1RZSgxMSksdm49YyhFbGVtZW50LnByb3RvdHlwZS5hdHRhY2hTaGFkb3cpJiZjKE5vZGUucHJvdG90eXBlLmdldFJvb3ROb2RlKSx3bj1DKHZuKSx5bj12bj9mdW5jdGlvbihlKXtyZXR1cm4gVmUuZnJvbURvbShlLmRvbS5nZXRSb290Tm9kZSgpKX06dG4sQ249ZnVuY3Rpb24oZSl7cmV0dXJuIGwoZS5kb20uc2hhZG93Um9vdCl9LFNuPWZ1bmN0aW9uKGUpe3ZhciBuPXBuKGUpP2UuZG9tLnBhcmVudE5vZGU6ZS5kb207aWYobnVsbD09bnx8bnVsbD09PW4ub3duZXJEb2N1bWVudClyZXR1cm4hMTt2YXIgdCxyLG8sdSxpLGM9bi5vd25lckRvY3VtZW50O3JldHVybiBvPVZlLmZyb21Eb20obiksaT15bihvKSwoaG4odT1pKSYmbCh1LmRvbS5ob3N0KT9xLnNvbWUoaSk6cS5ub25lKCkpLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gYy5ib2R5LmNvbnRhaW5zKG4pfSwodD1TbixyPWZuLGZ1bmN0aW9uKGUpe3JldHVybiB0KHIoZSkpfSkpfSxUbj1mdW5jdGlvbihlKXt2YXIgbj1lLmRvbS5ib2R5O2lmKG51bGw9PW4pdGhyb3cgbmV3IEVycm9yKFwiQm9keSBpcyBub3QgYXZhaWxhYmxlIHlldFwiKTtyZXR1cm4gVmUuZnJvbURvbShuKX0seG49ZnVuY3Rpb24oZSxuKXt2YXIgdD1bXTtyZXR1cm4gQShsbihlKSxmdW5jdGlvbihlKXt0PSh0PW4oZSk/dC5jb25jYXQoW2VdKTp0KS5jb25jYXQoeG4oZSxuKSl9KSx0fTtmdW5jdGlvbiBSbihlLG4sdCxyLG8pe3JldHVybiBlKHQscik/cS5zb21lKHQpOmMobykmJm8odCk/cS5ub25lKCk6bih0LHIsbyl9ZnVuY3Rpb24gRG4oZSxuLHQpe2Zvcih2YXIgcj1lLmRvbSxvPWModCk/dDp2O3IucGFyZW50Tm9kZTspe3ZhciByPXIucGFyZW50Tm9kZSx1PVZlLmZyb21Eb20ocik7aWYobih1KSlyZXR1cm4gcS5zb21lKHUpO2lmKG8odSkpYnJlYWt9cmV0dXJuIHEubm9uZSgpfWZ1bmN0aW9uIE9uKGUsbix0KXtyZXR1cm4gRG4oZSxmdW5jdGlvbihlKXtyZXR1cm4gb2UoZSxuKX0sdCl9ZnVuY3Rpb24gQW4oZSxuKXtyZXR1cm4gdD1mdW5jdGlvbihlKXtyZXR1cm4gb2UoZSxuKX0sdyhlLmRvbS5jaGlsZE5vZGVzLGZ1bmN0aW9uKGUpe3JldHVybiB0KFZlLmZyb21Eb20oZSkpfSkubWFwKFZlLmZyb21Eb20pO3ZhciB0fWZ1bmN0aW9uIGtuKGUsbil7cmV0dXJuIGllKG4sZSl9ZnVuY3Rpb24gSW4oZSxuLHQpe3JldHVybiBSbihvZSxPbixlLG4sdCl9ZnVuY3Rpb24gQm4oZSxuLHQpe2lmKCEoVCh0KXx8byh0KXx8Zih0KSkpdGhyb3cgY29uc29sZS5lcnJvcihcIkludmFsaWQgY2FsbCB0byBBdHRyaWJ1dGUuc2V0LiBLZXkgXCIsbixcIjo6IFZhbHVlIFwiLHQsXCI6OiBFbGVtZW50IFwiLGUpLG5ldyBFcnJvcihcIkF0dHJpYnV0ZSB2YWx1ZSB3YXMgbm90IHNpbXBsZVwiKTtlLnNldEF0dHJpYnV0ZShuLHQrXCJcIil9ZnVuY3Rpb24gTW4oZSxuLHQpe0JuKGUuZG9tLG4sdCl9ZnVuY3Rpb24gRW4oZSxuKXt2YXIgdD1lLmRvbTthZShuLGZ1bmN0aW9uKGUsbil7Qm4odCxuLGUpfSl9ZnVuY3Rpb24gUG4oZSxuKXt2YXIgdD1lLmRvbS5nZXRBdHRyaWJ1dGUobik7cmV0dXJuIG51bGw9PT10P3ZvaWQgMDp0fWZ1bmN0aW9uIE5uKGUsbil7cmV0dXJuIHEuZnJvbShQbihlLG4pKX1mdW5jdGlvbiB6bihlKXtyZXR1cm4gQihlLmRvbS5hdHRyaWJ1dGVzLGZ1bmN0aW9uKGUsbil7cmV0dXJuIGVbbi5uYW1lXT1uLnZhbHVlLGV9LHt9KX1mdW5jdGlvbiBMbihlLG4sdCl7cmV0dXJuIHZvaWQgMD09PXQmJih0PXIpLGUuZXhpc3RzKGZ1bmN0aW9uKGUpe3JldHVybiB0KGUsbil9KX1mdW5jdGlvbiBfbihlKXtmb3IodmFyIG49W10sdD1mdW5jdGlvbihlKXtuLnB1c2goZSl9LHI9MDtyPGUubGVuZ3RoO3IrKyllW3JdLmVhY2godCk7cmV0dXJuIG59ZnVuY3Rpb24gV24oZSxuLHQpe3JldHVybiBlLmlzU29tZSgpJiZuLmlzU29tZSgpP3Euc29tZSh0KGUuZ2V0T3JEaWUoKSxuLmdldE9yRGllKCkpKTpxLm5vbmUoKX1mdW5jdGlvbiBqbihlLG4pe3JldHVybiBlP3Euc29tZShuKTpxLm5vbmUoKX1mdW5jdGlvbiBGbihlKXtyZXR1cm4gdm9pZCAwIT09ZS5zdHlsZSYmYyhlLnN0eWxlLmdldFByb3BlcnR5VmFsdWUpfWZ1bmN0aW9uIEhuKGUsbix0KXtpZighVCh0KSl0aHJvdyBjb25zb2xlLmVycm9yKFwiSW52YWxpZCBjYWxsIHRvIENTUy5zZXQuIFByb3BlcnR5IFwiLG4sXCI6OiBWYWx1ZSBcIix0LFwiOjogRWxlbWVudCBcIixlKSxuZXcgRXJyb3IoXCJDU1MgdmFsdWUgbXVzdCBiZSBhIHN0cmluZzogXCIrdCk7Rm4oZSkmJmUuc3R5bGUuc2V0UHJvcGVydHkobix0KX1mdW5jdGlvbiBWbihlLG4sdCl7SG4oZS5kb20sbix0KX1mdW5jdGlvbiBxbihlLG4pe3ZhciB0PWUuZG9tO2FlKG4sZnVuY3Rpb24oZSxuKXtIbih0LG4sZSl9KX1mdW5jdGlvbiBVbihlLG4pe3ZhciB0PWUuZG9tLHI9d2luZG93LmdldENvbXB1dGVkU3R5bGUodCkuZ2V0UHJvcGVydHlWYWx1ZShuKTtyZXR1cm5cIlwiIT09cnx8U24oZSk/cjpqdCh0LG4pfWZ1bmN0aW9uIEduKGUsbil7dmFyIHQ9ZS5kb20scj1qdCh0LG4pO3JldHVybiBxLmZyb20ocikuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiAwPGUubGVuZ3RofSl9ZnVuY3Rpb24gJG4oZSxuKXt2YXIgdCxyPW47Rm4odD1lLmRvbSkmJnQuc3R5bGUucmVtb3ZlUHJvcGVydHkociksTG4oTm4oZSxcInN0eWxlXCIpLm1hcChrZSksXCJcIikmJld0KGUsXCJzdHlsZVwiKX1mdW5jdGlvbiBLbihlLG4sdCl7cmV0dXJuIHZvaWQgMD09PXQmJih0PTApLE5uKGUsbikubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBwYXJzZUludChlLDEwKX0pLmdldE9yKHQpfWZ1bmN0aW9uIFhuKGUsbil7cmV0dXJuIEtuKGUsbiwxKX1mdW5jdGlvbiBZbihlKXtyZXR1cm4gZW4oXCJjb2xcIikoZSk/MTxLbihlLFwic3BhblwiLDEpOjE8WG4oZSxcImNvbHNwYW5cIil9ZnVuY3Rpb24gSm4oZSl7cmV0dXJuIDE8WG4oZSxcInJvd3NwYW5cIil9ZnVuY3Rpb24gUW4oZSxuKXtyZXR1cm4gcGFyc2VJbnQoVW4oZSxuKSwxMCl9ZnVuY3Rpb24gWm4oZSxuKXtyZXR1cm4gVnQoZSxuLHgpfWZ1bmN0aW9uIGV0KGUsbil7cmV0dXJuIHQ9W1widGRcIixcInRoXCJdLChvPXZvaWQgMD09PShvPW4pP3Y6bikocj1lKT9xLm5vbmUoKTp5KHQsWWUocikpP3Euc29tZShyKTpPbihyLHQuam9pbihcIixcIiksZnVuY3Rpb24oZSl7cmV0dXJuIG9lKGUsXCJ0YWJsZVwiKXx8byhlKX0pO3ZhciB0LHIsb31mdW5jdGlvbiBudChlKXtyZXR1cm4gWm4oZSxcInRoLHRkXCIpfWZ1bmN0aW9uIHR0KGUpe3JldHVybiBvZShlLFwiY29sZ3JvdXBcIik/bW4oZSxcImNvbFwiKTpOKHF0KGUpLGZ1bmN0aW9uKGUpe3JldHVybiBtbihlLFwiY29sXCIpfSl9ZnVuY3Rpb24gcnQoZSxuKXtyZXR1cm4gSW4oZSxcInRhYmxlXCIsbil9ZnVuY3Rpb24gb3QoZSl7cmV0dXJuIFpuKGUsXCJ0clwiKX1mdW5jdGlvbiB1dChlLHQpe3JldHVybiBPKGUsZnVuY3Rpb24oZSl7aWYoXCJjb2xncm91cFwiIT09WWUoZSkpcmV0dXJuIHZlKGUsbj1PKG50KGUpLGZ1bmN0aW9uKGUpe3JldHVybiBoZShlLEtuKGUsXCJyb3dzcGFuXCIsMSksS24oZSxcImNvbHNwYW5cIiwxKSl9KSx0KGUpKTt2YXIgbj1PKHR0KGUpLGZ1bmN0aW9uKGUpe3JldHVybiBoZShlLDEsS24oZSxcInNwYW5cIiwxKSl9KTtyZXR1cm4gdmUoZSxuLFwiY29sZ3JvdXBcIil9KX1mdW5jdGlvbiBpdChlKXtyZXR1cm4gcm4oZSkubWFwKGZ1bmN0aW9uKGUpe3ZhciBuPVllKGUpO3JldHVybiB5KFhlLG4pP246XCJ0Ym9keVwifSkuZ2V0T3IoXCJ0Ym9keVwiKX1mdW5jdGlvbiBjdChlKXt2YXIgbj1vdChlKTtyZXR1cm4gdXQoWChYKFtdLHF0KGUpLCEwKSxuLCEwKSxpdCl9ZnVuY3Rpb24gbHQoZSxuLHQpe3ZhciByPWUuY2VsbHMsbz1yLnNsaWNlKDAsbiksdT1yLnNsaWNlKG4pLGk9by5jb25jYXQodCkuY29uY2F0KHUpO3JldHVybiBVdChlLGkpfWZ1bmN0aW9uIGF0KGUsbix0KXtyZXR1cm4gbHQoZSxuLFt0XSl9ZnVuY3Rpb24gZnQoZSxuLHQpe2UuY2VsbHNbbl09dH1mdW5jdGlvbiBzdChlLG4pe3JldHVybiBlLmNlbGxzW25dfWZ1bmN0aW9uIG10KGUsbil7cmV0dXJuIHN0KGUsbikuZWxlbWVudH1mdW5jdGlvbiBkdChlKXtyZXR1cm4gZS5jZWxscy5sZW5ndGh9ZnVuY3Rpb24gZ3QoZSl7dmFyIG49ZChlLGZ1bmN0aW9uKGUpe3JldHVyblwiY29sZ3JvdXBcIj09PWUuc2VjdGlvbn0pO3JldHVybntyb3dzOm4uZmFpbCxjb2xzOm4ucGFzc319ZnVuY3Rpb24gcHQoZSxuLHQpe3ZhciByPU8oZS5jZWxscyx0KTtyZXR1cm4geWUobihlLmVsZW1lbnQpLHIsZS5zZWN0aW9uLCEwKX1mdW5jdGlvbiBidChlKXtyZXR1cm4gTm4oZSxHdCkuYmluZChmdW5jdGlvbihlKXtyZXR1cm4gcS5mcm9tKGUubWF0Y2goL1xcZCsvZykpfSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBMKGUseCl9KX1mdW5jdGlvbiBodChlKXt2YXIgbix0PW1lKEIoZ3QoZSkucm93cyxmdW5jdGlvbih0LGUpe3JldHVybiBBKGUuY2VsbHMsZnVuY3Rpb24oZSxuKXtlLmlzTG9ja2VkJiYodFtuXT0hMCl9KSx0fSx7fSksZnVuY3Rpb24oZSxuKXtyZXR1cm4gcGFyc2VJbnQobiwxMCl9KTtyZXR1cm4obj1VLmNhbGwodCwwKSkuc29ydCh2b2lkIDApLG59ZnVuY3Rpb24gdnQoZSl7dmFyIGw9e30sbj1bXSxhPWooZSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLmVsZW1lbnR9KS5iaW5kKHJ0KS5iaW5kKGJ0KS5nZXRPcih7fSksdD0wLGY9MCxzPTAscj1kKGUsZnVuY3Rpb24oZSl7cmV0dXJuXCJjb2xncm91cFwiPT09ZS5zZWN0aW9ufSksbz1yLnBhc3M7QShyLmZhaWwsZnVuY3Rpb24oZSl7dmFyIGM9W107QShlLmNlbGxzLGZ1bmN0aW9uKGUpe2Zvcih2YXIgbj0wO3ZvaWQgMCE9PWxbcytcIixcIituXTspbisrO2Zvcih2YXIgdD1iZShhLG4udG9TdHJpbmcoKSkscj17ZWxlbWVudDplLmVsZW1lbnQscm93c3BhbjplLnJvd3NwYW4sY29sc3BhbjplLmNvbHNwYW4scm93OnMsY29sdW1uOm4saXNMb2NrZWQ6dH0sbz0wO288ZS5jb2xzcGFuO28rKylmb3IodmFyIHU9MDt1PGUucm93c3Bhbjt1Kyspe3ZhciBpPW4rbztsW3MrdStcIixcIitpXT1yLGY9TWF0aC5tYXgoZixpKzEpfWMucHVzaChyKX0pLHQrKyxuLnB1c2godmUoZS5lbGVtZW50LGMsZS5zZWN0aW9uKSkscysrfSk7dmFyIHU9RihvKS5tYXAoZnVuY3Rpb24oZSl7dmFyIG8sdSxuPShvPXt9LHU9MCxBKGUuY2VsbHMsZnVuY3Rpb24odCl7dmFyIHI9dC5jb2xzcGFuO0QocixmdW5jdGlvbihlKXt2YXIgbj11K2U7b1tuXT17ZWxlbWVudDp0LmVsZW1lbnQsY29sc3BhbjpyLGNvbHVtbjpufX0pLHUrPXJ9KSxvKTtyZXR1cm57Y29sZ3JvdXBzOlt7ZWxlbWVudDplLmVsZW1lbnQsY29sdW1uczpkZShuKX1dLGNvbHVtbnM6bn19KS5nZXRPclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJue2NvbGdyb3VwczpbXSxjb2x1bW5zOnt9fX0pLGk9dS5jb2x1bW5zLGM9dS5jb2xncm91cHM7cmV0dXJue2dyaWQ6e3Jvd3M6dCxjb2x1bW5zOmZ9LGFjY2VzczpsLGFsbDpuLGNvbHVtbnM6aSxjb2xncm91cHM6Y319ZnVuY3Rpb24gd3QoZSxuKXt2YXIgdD1uLmNvbHVtbixyPW4uY29sdW1uK24uY29sc3Bhbi0xLG89bi5yb3csdT1uLnJvdytuLnJvd3NwYW4tMTtyZXR1cm4gdDw9ZS5maW5pc2hDb2wmJnI+PWUuc3RhcnRDb2wmJm88PWUuZmluaXNoUm93JiZ1Pj1lLnN0YXJ0Um93fWZ1bmN0aW9uIHl0KGUsbil7cmV0dXJuIG4uY29sdW1uPj1lLnN0YXJ0Q29sJiZuLmNvbHVtbituLmNvbHNwYW4tMTw9ZS5maW5pc2hDb2wmJm4ucm93Pj1lLnN0YXJ0Um93JiZuLnJvdytuLnJvd3NwYW4tMTw9ZS5maW5pc2hSb3d9ZnVuY3Rpb24gQ3QoZSxuLHQpe3ZhciByPSR0LmZpbmRJdGVtKGUsbixjZSksbz0kdC5maW5kSXRlbShlLHQsY2UpO3JldHVybiByLmJpbmQoZnVuY3Rpb24ocil7cmV0dXJuIG8ubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBuPXIsdD1lLHtzdGFydFJvdzpNYXRoLm1pbihuLnJvdyx0LnJvdyksc3RhcnRDb2w6TWF0aC5taW4obi5jb2x1bW4sdC5jb2x1bW4pLGZpbmlzaFJvdzpNYXRoLm1heChuLnJvdytuLnJvd3NwYW4tMSx0LnJvdyt0LnJvd3NwYW4tMSksZmluaXNoQ29sOk1hdGgubWF4KG4uY29sdW1uK24uY29sc3Bhbi0xLHQuY29sdW1uK3QuY29sc3Bhbi0xKX07dmFyIG4sdH0pfSl9ZnVuY3Rpb24gU3QobixlLHQpe3JldHVybiBDdChuLGUsdCkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBPKCR0LmZpbHRlckl0ZW1zKG4sUCh3dCxlKSksZnVuY3Rpb24oZSl7cmV0dXJuIGUuZWxlbWVudH0pfSl9ZnVuY3Rpb24gVHQoZSxuKXtyZXR1cm4gJHQuZmluZEl0ZW0oZSxuLGZ1bmN0aW9uKGUsbil7cmV0dXJuIGxlKG4sZSl9KS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZWxlbWVudH0pfWZ1bmN0aW9uIHh0KGUsbix0LHIsbyl7dmFyIHU9S3QoZSksaT1jZShlLHQpP3Euc29tZShuKTpUdCh1LG4pLGM9Y2UoZSxvKT9xLnNvbWUocik6VHQodSxyKTtyZXR1cm4gaS5iaW5kKGZ1bmN0aW9uKG4pe3JldHVybiBjLmJpbmQoZnVuY3Rpb24oZSl7cmV0dXJuIFN0KHUsbixlKX0pfSl9ZnVuY3Rpb24gUnQobix0KXtybihuKS5lYWNoKGZ1bmN0aW9uKGUpe2UuZG9tLmluc2VydEJlZm9yZSh0LmRvbSxuLmRvbSl9KX1mdW5jdGlvbiBEdChlLG4pe2NuKGUpLmZvbGQoZnVuY3Rpb24oKXtybihlKS5lYWNoKGZ1bmN0aW9uKGUpe1h0KGUsbil9KX0sZnVuY3Rpb24oZSl7UnQoZSxuKX0pfWZ1bmN0aW9uIE90KG4sdCl7YW4obiwwKS5mb2xkKGZ1bmN0aW9uKCl7WHQobix0KX0sZnVuY3Rpb24oZSl7bi5kb20uaW5zZXJ0QmVmb3JlKHQuZG9tLGUuZG9tKX0pfWZ1bmN0aW9uIEF0KGUsbil7UnQoZSxuKSxYdChuLGUpfWZ1bmN0aW9uIGt0KHQscil7QShyLGZ1bmN0aW9uKGUsbil7RHQoMD09PW4/dDpyW24tMV0sZSl9KX1mdW5jdGlvbiBJdChuLGUpe0EoZSxmdW5jdGlvbihlKXtYdChuLGUpfSl9ZnVuY3Rpb24gQnQoZSl7ZS5kb20udGV4dENvbnRlbnQ9XCJcIixBKGxuKGUpLGZ1bmN0aW9uKGUpe1l0KGUpfSl9ZnVuY3Rpb24gTXQoZSl7dmFyIG4sdD1sbihlKTswPHQubGVuZ3RoJiYobj1lLEEodCxmdW5jdGlvbihlKXtSdChuLGUpfSkpLFl0KGUpfWZ1bmN0aW9uIEV0KGUpe3JldHVybiBKdC5nZXQoZSl9ZnVuY3Rpb24gUHQoZSl7cmV0dXJuIEp0LmdldE9wdGlvbihlKX1mdW5jdGlvbiBOdChlLG4pe3JldHVybiBKdC5zZXQoZSxuKX1mdW5jdGlvbiB6dChlLG4pe3JldHVybiBrKE4oZS5hbGwsZnVuY3Rpb24oZSl7cmV0dXJuIGUuY2VsbHN9KSxuKX12YXIgTHQsX3QsV3Q9ZnVuY3Rpb24oZSxuKXtlLmRvbS5yZW1vdmVBdHRyaWJ1dGUobil9LGp0PWZ1bmN0aW9uKGUsbil7cmV0dXJuIEZuKGUpP2Uuc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZShuKTpcIlwifSxGdD1DKDEwKSxIdD1DKDEwKSxWdD1mdW5jdGlvbihlLG4sdCl7cmV0dXJuIE4obG4oZSksZnVuY3Rpb24oZSl7cmV0dXJuIG9lKGUsbik/dChlKT9bZV06W106VnQoZSxuLHQpfSl9LHF0PWZ1bmN0aW9uKGUpe3JldHVybiBydChlKS5mb2xkKEMoW10pLGZ1bmN0aW9uKGUpe3JldHVybiBtbihlLFwiY29sZ3JvdXBcIil9KX0sVXQ9ZnVuY3Rpb24oZSxuKXtyZXR1cm4geWUoZS5lbGVtZW50LG4sZS5zZWN0aW9uLGUuaXNOZXcpfSxHdD1cImRhdGEtc25vb2tlci1sb2NrZWQtY29sc1wiLCR0PXtmcm9tVGFibGU6ZnVuY3Rpb24oZSl7cmV0dXJuIHZ0KGN0KGUpKX0sZ2VuZXJhdGU6dnQsZ2V0QXQ6ZnVuY3Rpb24oZSxuLHQpe3JldHVybiBxLmZyb20oZS5hY2Nlc3NbbitcIixcIit0XSl9LGZpbmRJdGVtOmZ1bmN0aW9uKGUsbix0KXt2YXIgcj16dChlLGZ1bmN0aW9uKGUpe3JldHVybiB0KG4sZS5lbGVtZW50KX0pO3JldHVybiAwPHIubGVuZ3RoP3Euc29tZShyWzBdKTpxLm5vbmUoKX0sZmlsdGVySXRlbXM6enQsanVzdENlbGxzOmZ1bmN0aW9uKGUpe3JldHVybiBOKGUuYWxsLGZ1bmN0aW9uKGUpe3JldHVybiBlLmNlbGxzfSl9LGp1c3RDb2x1bW5zOmZ1bmN0aW9uKGUpe3JldHVybiBkZShlLmNvbHVtbnMpfSxoYXNDb2x1bW5zOmZ1bmN0aW9uKGUpe3JldHVybiAwPFVlKGUuY29sdW1ucykubGVuZ3RofSxnZXRDb2x1bW5BdDpmdW5jdGlvbihlLG4pe3JldHVybiBxLmZyb20oZS5jb2x1bW5zW25dKX19LEt0PSR0LmZyb21UYWJsZSxYdD1mdW5jdGlvbihlLG4pe2UuZG9tLmFwcGVuZENoaWxkKG4uZG9tKX0sWXQ9ZnVuY3Rpb24oZSl7dmFyIG49ZS5kb207bnVsbCE9PW4ucGFyZW50Tm9kZSYmbi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG4pfSxKdD0oTHQ9cG4se2dldDpmdW5jdGlvbihlKXtpZighTHQoZSkpdGhyb3cgbmV3IEVycm9yKFwiQ2FuIG9ubHkgZ2V0IHRleHQgdmFsdWUgb2YgYSB0ZXh0IG5vZGVcIik7cmV0dXJuIF90KGUpLmdldE9yKFwiXCIpfSxnZXRPcHRpb246X3Q9ZnVuY3Rpb24oZSl7cmV0dXJuIEx0KGUpP3EuZnJvbShlLmRvbS5ub2RlVmFsdWUpOnEubm9uZSgpfSxzZXQ6ZnVuY3Rpb24oZSxuKXtpZighTHQoZSkpdGhyb3cgbmV3IEVycm9yKFwiQ2FuIG9ubHkgc2V0IHJhdyB0ZXh0IHZhbHVlIG9mIGEgdGV4dCBub2RlXCIpO2UuZG9tLm5vZGVWYWx1ZT1ufX0pLFF0PVtcImJvZHlcIixcInBcIixcImRpdlwiLFwiYXJ0aWNsZVwiLFwiYXNpZGVcIixcImZpZ2NhcHRpb25cIixcImZpZ3VyZVwiLFwiZm9vdGVyXCIsXCJoZWFkZXJcIixcIm5hdlwiLFwic2VjdGlvblwiLFwib2xcIixcInVsXCIsXCJsaVwiLFwidGFibGVcIixcInRoZWFkXCIsXCJ0Ym9keVwiLFwidGZvb3RcIixcImNhcHRpb25cIixcInRyXCIsXCJ0ZFwiLFwidGhcIixcImgxXCIsXCJoMlwiLFwiaDNcIixcImg0XCIsXCJoNVwiLFwiaDZcIixcImJsb2NrcXVvdGVcIixcInByZVwiLFwiYWRkcmVzc1wiXTtmdW5jdGlvbiBadCgpe3JldHVybnt1cDpDKHtzZWxlY3RvcjpPbixjbG9zZXN0OkluLHByZWRpY2F0ZTpEbixhbGw6b259KSxkb3duOkMoe3NlbGVjdG9yOmRuLHByZWRpY2F0ZTp4bn0pLHN0eWxlczpDKHtnZXQ6VW4sZ2V0UmF3OkduLHNldDpWbixyZW1vdmU6JG59KSxhdHRyczpDKHtnZXQ6UG4sc2V0Ok1uLHJlbW92ZTpXdCxjb3B5VG86ZnVuY3Rpb24oZSxuKXtFbihuLHpuKGUpKX19KSxpbnNlcnQ6Qyh7YmVmb3JlOlJ0LGFmdGVyOkR0LGFmdGVyQWxsOmt0LGFwcGVuZDpYdCxhcHBlbmRBbGw6SXQscHJlcGVuZDpPdCx3cmFwOkF0fSkscmVtb3ZlOkMoe3Vud3JhcDpNdCxyZW1vdmU6WXR9KSxjcmVhdGU6Qyh7bnU6VmUuZnJvbVRhZyxjbG9uZTpmdW5jdGlvbihlKXtyZXR1cm4gVmUuZnJvbURvbShlLmRvbS5jbG9uZU5vZGUoITEpKX0sdGV4dDpWZS5mcm9tVGV4dH0pLHF1ZXJ5OkMoe2NvbXBhcmVQb3NpdGlvbjpmdW5jdGlvbihlLG4pe3JldHVybiBlLmRvbS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihuLmRvbSl9LHByZXZTaWJsaW5nOnVuLG5leHRTaWJsaW5nOmNufSkscHJvcGVydHk6Qyh7Y2hpbGRyZW46bG4sbmFtZTpZZSxwYXJlbnQ6cm4sZG9jdW1lbnQ6ZnVuY3Rpb24oZSl7cmV0dXJuIHRuKGUpLmRvbX0saXNUZXh0OnBuLGlzQ29tbWVudDpaZSxpc0VsZW1lbnQ6Z24saXNTcGVjaWFsOmZ1bmN0aW9uKGUpe3JldHVybiB5KFtcInNjcmlwdFwiLFwibm9zY3JpcHRcIixcImlmcmFtZVwiLFwibm9mcmFtZXNcIixcIm5vZW1iZWRcIixcInRpdGxlXCIsXCJzdHlsZVwiLFwidGV4dGFyZWFcIixcInhtcFwiXSxZZShlKSl9LGdldExhbmd1YWdlOmZ1bmN0aW9uKGUpe3JldHVybiBnbihlKT9ObihlLFwibGFuZ1wiKTpxLm5vbmUoKX0sZ2V0VGV4dDpFdCxzZXRUZXh0Ok50LGlzQm91bmRhcnk6ZnVuY3Rpb24oZSl7cmV0dXJuISFnbihlKSYmKFwiYm9keVwiPT09WWUoZSl8fHkoUXQsWWUoZSkpKX0saXNFbXB0eVRhZzpmdW5jdGlvbihlKXtyZXR1cm4hIWduKGUpJiZ5KFtcImJyXCIsXCJpbWdcIixcImhyXCIsXCJpbnB1dFwiXSxZZShlKSl9LGlzTm9uRWRpdGFibGU6ZnVuY3Rpb24oZSl7cmV0dXJuIGduKGUpJiZcImZhbHNlXCI9PT1QbihlLFwiY29udGVudGVkaXRhYmxlXCIpfX0pLGVxOmNlLGlzOnFlfX1mdW5jdGlvbiBlcih0LGUpe3JldHVybiBIcihxcixmdW5jdGlvbihlLG4pe3JldHVybiB0KG4pfSxlKX1mdW5jdGlvbiBucihlKXtyZXR1cm4gT24oZSxcInRhYmxlXCIpfWZ1bmN0aW9uIHRyKGMsbCxhKXtmdW5jdGlvbiBmKG4pe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwIT09YSYmYShlKXx8Y2UoZSxuKX19cmV0dXJuIGNlKGMsbCk/cS5zb21lKHtib3hlczpxLnNvbWUoW2NdKSxzdGFydDpjLGZpbmlzaDpsfSk6bnIoYykuYmluZChmdW5jdGlvbihpKXtyZXR1cm4gbnIobCkuYmluZChmdW5jdGlvbih1KXtpZihjZShpLHUpKXJldHVybiBxLnNvbWUoe2JveGVzOihyPWMsbz1sLFN0KEt0KGkpLHIsbykpLHN0YXJ0OmMsZmluaXNoOmx9KTtpZihsZShpLHUpKXt2YXIgZT0wPChuPXNuKGwsXCJ0ZCx0aFwiLGYoaSkpKS5sZW5ndGg/bltuLmxlbmd0aC0xXTpsO3JldHVybiBxLnNvbWUoe2JveGVzOnh0KGksYyxpLGwsdSksc3RhcnQ6YyxmaW5pc2g6ZX0pfWlmKGxlKHUsaSkpe3ZhciBuLHQ9MDwobj1zbihjLFwidGQsdGhcIixmKHUpKSkubGVuZ3RoP25bbi5sZW5ndGgtMV06YztyZXR1cm4gcS5zb21lKHtib3hlczp4dCh1LGMsaSxsLHUpLHN0YXJ0OmMsZmluaXNoOnR9KX1yZXR1cm4gVnIocXIsYyxsLHZvaWQgMCkuc2hhcmVkLmJpbmQoZnVuY3Rpb24oZSl7cmV0dXJuIEluKGUsXCJ0YWJsZVwiLGEpLmJpbmQoZnVuY3Rpb24oZSl7dmFyIG49c24obCxcInRkLHRoXCIsZihlKSksdD0wPG4ubGVuZ3RoP25bbi5sZW5ndGgtMV06bCxyPXNuKGMsXCJ0ZCx0aFwiLGYoZSkpLG89MDxyLmxlbmd0aD9yW3IubGVuZ3RoLTFdOmM7cmV0dXJuIHEuc29tZSh7Ym94ZXM6eHQoZSxjLGksbCx1KSxzdGFydDpvLGZpbmlzaDp0fSl9KX0pO3ZhciByLG99KX0pfWZ1bmN0aW9uIHJyKGUsbil7dmFyIHQ9ZG4oZSxuKTtyZXR1cm4gMDx0Lmxlbmd0aD9xLnNvbWUodCk6cS5ub25lKCl9ZnVuY3Rpb24gb3IoZSxuLHIpe3JldHVybiBrbihlLG4pLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIGtuKGUscikuYmluZChmdW5jdGlvbihuKXtyZXR1cm4gZXIobnIsW3Qsbl0pLm1hcChmdW5jdGlvbihlKXtyZXR1cm57Zmlyc3Q6dCxsYXN0Om4sdGFibGU6ZX19KX0pfSl9ZnVuY3Rpb24gdXIoZSxyLG8sdSxuKXtyZXR1cm4gdD1uLHcoZSxmdW5jdGlvbihlKXtyZXR1cm4gb2UoZSx0KX0pLmJpbmQoZnVuY3Rpb24oZSl7cmV0dXJuIHQ9cixpPW8scnQobj1lKS5iaW5kKGZ1bmN0aW9uKGUpe3ZhciByPUt0KGUpLG89dCx1PWk7cmV0dXJuICR0LmZpbmRJdGVtKHIsbixjZSkuYmluZChmdW5jdGlvbihlKXt2YXIgbj0wPG8/ZS5yb3crZS5yb3dzcGFuLTE6ZS5yb3csdD0wPHU/ZS5jb2x1bW4rZS5jb2xzcGFuLTE6ZS5jb2x1bW47cmV0dXJuICR0LmdldEF0KHIsbitvLHQrdSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLmVsZW1lbnR9KX0pfSkuYmluZChmdW5jdGlvbihlKXtyZXR1cm4gdD11LE9uKG49ZSxcInRhYmxlXCIpLmJpbmQoZnVuY3Rpb24oZSl7cmV0dXJuIGtuKGUsdCkuYmluZChmdW5jdGlvbihlKXtyZXR1cm4gdHIoZSxuKS5iaW5kKGZ1bmN0aW9uKG4pe3JldHVybiBuLmJveGVzLm1hcChmdW5jdGlvbihlKXtyZXR1cm57Ym94ZXM6ZSxzdGFydDpuLnN0YXJ0LGZpbmlzaDpuLmZpbmlzaH19KX0pfSl9KTt2YXIgbix0fSk7dmFyIG4sdCxpfSk7dmFyIHR9ZnVuY3Rpb24gaXIobyxlLG4pe3JldHVybiBvcihvLGUsbikuYmluZChmdW5jdGlvbihjKXtmdW5jdGlvbiBlKGUpe3JldHVybiBjZShvLGUpfXZhciBuPVwidGhlYWQsdGZvb3QsdGJvZHksdGFibGVcIix0PU9uKGMuZmlyc3QsbixlKSxyPU9uKGMubGFzdCxuLGUpO3JldHVybiB0LmJpbmQoZnVuY3Rpb24oaSl7cmV0dXJuIHIuYmluZChmdW5jdGlvbihlKXtyZXR1cm4gY2UoaSxlKT8odD1jLnRhYmxlLHI9Yy5maXJzdCxvPWMubGFzdCx1PUt0KHQpLEN0KG49dSxyLG8pLmJpbmQoZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKGUsbil7Zm9yKHZhciB0PSEwLHI9UCh5dCxuKSxvPW4uc3RhcnRSb3c7bzw9bi5maW5pc2hSb3c7bysrKWZvcih2YXIgdT1uLnN0YXJ0Q29sO3U8PW4uZmluaXNoQ29sO3UrKyl0PXQmJiR0LmdldEF0KGUsbyx1KS5leGlzdHMocik7cmV0dXJuIHQ/cS5zb21lKG4pOnEubm9uZSgpfShuLGUpfSkpOnEubm9uZSgpO3ZhciBuLHQscixvLHV9KX0pfSl9ZnVuY3Rpb24gY3IoZSxuLHQscil7cmV0dXJuIGUuZm9sZChuLHQscil9ZnVuY3Rpb24gbHIoZSxuKXtyZXR1cm4gVmUuZnJvbURvbShlLmRvbS5jbG9uZU5vZGUobikpfWZ1bmN0aW9uIGFyKGUpe3JldHVybiBscihlLCExKX1mdW5jdGlvbiBmcihlKXtyZXR1cm4gbHIoZSwhMCl9ZnVuY3Rpb24gc3IoZSxuKXt2YXIgdD1WZS5mcm9tVGFnKG4pO3JldHVybiBFbih0LHpuKGUpKSx0fWZ1bmN0aW9uIG1yKHIsbyl7ZnVuY3Rpb24gZShlKXt2YXIgbj1vKGUpO2lmKG48PTB8fG51bGw9PT1uKXt2YXIgdD1VbihlLHIpO3JldHVybiBwYXJzZUZsb2F0KHQpfHwwfXJldHVybiBufWZ1bmN0aW9uIHUobyxlKXtyZXR1cm4gQihlLGZ1bmN0aW9uKGUsbil7dmFyIHQ9VW4obyxuKSxyPXZvaWQgMD09PXQ/MDpwYXJzZUludCh0LDEwKTtyZXR1cm4gaXNOYU4ocik/ZTplK3J9LDApfXJldHVybntzZXQ6ZnVuY3Rpb24oZSxuKXtpZighZihuKSYmIW4ubWF0Y2goL15bMC05XSskLykpdGhyb3cgbmV3IEVycm9yKHIrXCIuc2V0IGFjY2VwdHMgb25seSBwb3NpdGl2ZSBpbnRlZ2VyIHZhbHVlcy4gVmFsdWUgd2FzIFwiK24pO3ZhciB0PWUuZG9tO0ZuKHQpJiYodC5zdHlsZVtyXT1uK1wicHhcIil9LGdldDplLGdldE91dGVyOmUsYWdncmVnYXRlOnUsbWF4OmZ1bmN0aW9uKGUsbix0KXt2YXIgcj11KGUsdCk7cmV0dXJuIHI8bj9uLXI6MH19fWZ1bmN0aW9uIGRyKCl7dmFyIGU9SGUoKS5icm93c2VyO3JldHVybiBlLmlzSUUoKXx8ZS5pc0VkZ2UoKX1mdW5jdGlvbiBncihlLG4sdCl7cmV0dXJuIHI9VW4oZSxuKSxvPXQsdT1wYXJzZUZsb2F0KHIpLChpc05hTih1KT9xLm5vbmUoKTpxLnNvbWUodSkpLmdldE9yKG8pO3ZhciByLG8sdX1mdW5jdGlvbiBwcihlKXtyZXR1cm4gVW4oZSxcImJveC1zaXppbmdcIil9ZnVuY3Rpb24gYnIoZSxuLHQscil7cmV0dXJuIG4tZ3IoZSxcInBhZGRpbmctXCIrdCwwKS1ncihlLFwicGFkZGluZy1cIityLDApLWdyKGUsXCJib3JkZXItXCIrdCtcIi13aWR0aFwiLDApLWdyKGUsXCJib3JkZXItXCIrcitcIi13aWR0aFwiLDApfWZ1bmN0aW9uIGhyKGUsbil7dmFyIHQ9ZS5kb20scj10LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRofHx0Lm9mZnNldFdpZHRoO3JldHVyblwiYm9yZGVyLWJveFwiPT09bj9yOmJyKGUscixcImxlZnRcIixcInJpZ2h0XCIpfWZ1bmN0aW9uIHZyKGUpe3JldHVybiBKci5nZXQoZSl9ZnVuY3Rpb24gd3IoZSl7cmV0dXJuIEpyLmdldE91dGVyKGUpfWZ1bmN0aW9uIHlyKHQscil7dm9pZCAwPT09ciYmKHI9eCk7dmFyIGU9dC5ncmlkLG49RChlLmNvbHVtbnMsUyksbz1EKGUucm93cyxTKTtyZXR1cm4gTyhuLGZ1bmN0aW9uKG4pe3JldHVybiBlbyhmdW5jdGlvbigpe3JldHVybiBOKG8sZnVuY3Rpb24oZSl7cmV0dXJuICR0LmdldEF0KHQsZSxuKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGUuY29sdW1uPT09bn0pLnRvQXJyYXkoKX0pfSxmdW5jdGlvbihlKXtyZXR1cm4gMT09PWUuY29sc3BhbiYmcihlLmVsZW1lbnQpfSxmdW5jdGlvbigpe3JldHVybiAkdC5nZXRBdCh0LDAsbil9KX0pfWZ1bmN0aW9uIENyKHQpe3ZhciBlPXQuZ3JpZCxuPUQoZS5yb3dzLFMpLHI9RChlLmNvbHVtbnMsUyk7cmV0dXJuIE8obixmdW5jdGlvbihuKXtyZXR1cm4gZW8oZnVuY3Rpb24oKXtyZXR1cm4gTihyLGZ1bmN0aW9uKGUpe3JldHVybiAkdC5nZXRBdCh0LG4sZSkuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlLnJvdz09PW59KS5mb2xkKEMoW10pLGZ1bmN0aW9uKGUpe3JldHVybltlXX0pfSl9LGZ1bmN0aW9uKGUpe3JldHVybiAxPT09ZS5yb3dzcGFufSxmdW5jdGlvbigpe3JldHVybiAkdC5nZXRBdCh0LG4sMCl9KX0pfWZ1bmN0aW9uIFNyKG4sdCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVyblwicnRsXCI9PT1ubyhlKT90Om59fWZ1bmN0aW9uIFRyKGUpe3JldHVybiB0by5nZXQoZSl9ZnVuY3Rpb24geHIoZSl7cmV0dXJuIHRvLmdldE91dGVyKGUpfWZ1bmN0aW9uIFJyKGUsbil7cmV0dXJuIHZvaWQgMCE9PWU/ZTp2b2lkIDAhPT1uP246MH1mdW5jdGlvbiBEcihlKXt2YXIgbj1lLmRvbS5vd25lckRvY3VtZW50LHQ9bi5ib2R5LHI9bi5kZWZhdWx0VmlldyxvPW4uZG9jdW1lbnRFbGVtZW50O2lmKHQ9PT1lLmRvbSlyZXR1cm4gdW8odC5vZmZzZXRMZWZ0LHQub2Zmc2V0VG9wKTt2YXIgdT1ScihudWxsPT1yP3ZvaWQgMDpyLnBhZ2VZT2Zmc2V0LG8uc2Nyb2xsVG9wKSxpPVJyKG51bGw9PXI/dm9pZCAwOnIucGFnZVhPZmZzZXQsby5zY3JvbGxMZWZ0KSxjPVJyKG8uY2xpZW50VG9wLHQuY2xpZW50VG9wKSxsPVJyKG8uY2xpZW50TGVmdCx0LmNsaWVudExlZnQpO3JldHVybiBpbyhlKS50cmFuc2xhdGUoaS1sLHUtYyl9ZnVuY3Rpb24gT3IoZSxuKXtyZXR1cm57cm93OmUseTpufX1mdW5jdGlvbiBBcihlLG4pe3JldHVybntjb2w6ZSx4Om59fWZ1bmN0aW9uIGtyKGUpe3JldHVybiBEcihlKS5sZWZ0K3dyKGUpfWZ1bmN0aW9uIElyKGUpe3JldHVybiBEcihlKS5sZWZ0fWZ1bmN0aW9uIEJyKGUsbil7cmV0dXJuIEFyKGUsSXIobikpfWZ1bmN0aW9uIE1yKGUsbil7cmV0dXJuIEFyKGUsa3IobikpfWZ1bmN0aW9uIEVyKGUpe3JldHVybiBEcihlKS50b3B9ZnVuY3Rpb24gUHIoZSxuKXtyZXR1cm4gT3IoZSxFcihuKSl9ZnVuY3Rpb24gTnIoZSxuKXtyZXR1cm4gT3IoZSxFcihuKSt4cihuKSl9ZnVuY3Rpb24genIodCxuLHIpe2lmKDA9PT1yLmxlbmd0aClyZXR1cm5bXTt2YXIgZT1PKHIuc2xpY2UoMSksZnVuY3Rpb24oZSxuKXtyZXR1cm4gZS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHQobixlKX0pfSksbz1yW3IubGVuZ3RoLTFdLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gbihyLmxlbmd0aC0xLGUpfSk7cmV0dXJuIGUuY29uY2F0KFtvXSl9ZnVuY3Rpb24gTHIoaSl7aWYoIWEoaSkpdGhyb3cgbmV3IEVycm9yKFwiY2FzZXMgbXVzdCBiZSBhbiBhcnJheVwiKTtpZigwPT09aS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwidGhlcmUgbXVzdCBiZSBhdCBsZWFzdCBvbmUgY2FzZVwiKTt2YXIgYz1bXSx0PXt9O3JldHVybiBBKGksZnVuY3Rpb24oZSxyKXt2YXIgbj1VZShlKTtpZigxIT09bi5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwib25lIGFuZCBvbmx5IG9uZSBuYW1lIHBlciBjYXNlXCIpO3ZhciBvPW5bMF0sdT1lW29dO2lmKHZvaWQgMCE9PXRbb10pdGhyb3cgbmV3IEVycm9yKFwiZHVwbGljYXRlIGtleSBkZXRlY3RlZDpcIitvKTtpZihcImNhdGFcIj09PW8pdGhyb3cgbmV3IEVycm9yKFwiY2Fubm90IGhhdmUgYSBjYXNlIG5hbWVkIGNhdGEgKHNvcnJ5KVwiKTtpZighYSh1KSl0aHJvdyBuZXcgRXJyb3IoXCJjYXNlIGFyZ3VtZW50cyBtdXN0IGJlIGFuIGFycmF5XCIpO2MucHVzaChvKSx0W29dPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLGU9MDtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKXRbZV09YXJndW1lbnRzW2VdO3ZhciBuPXQubGVuZ3RoO2lmKG4hPT11Lmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJXcm9uZyBudW1iZXIgb2YgYXJndW1lbnRzIHRvIGNhc2UgXCIrbytcIi4gRXhwZWN0ZWQgXCIrdS5sZW5ndGgrXCIgKFwiK3UrXCIpLCBnb3QgXCIrbik7cmV0dXJue2ZvbGQ6ZnVuY3Rpb24oKXtmb3IodmFyIGU9W10sbj0wO248YXJndW1lbnRzLmxlbmd0aDtuKyspZVtuXT1hcmd1bWVudHNbbl07aWYoZS5sZW5ndGghPT1pLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJXcm9uZyBudW1iZXIgb2YgYXJndW1lbnRzIHRvIGZvbGQuIEV4cGVjdGVkIFwiK2kubGVuZ3RoK1wiLCBnb3QgXCIrZS5sZW5ndGgpO3JldHVybiBlW3JdLmFwcGx5KG51bGwsdCl9LG1hdGNoOmZ1bmN0aW9uKGUpe3ZhciBuPVVlKGUpO2lmKGMubGVuZ3RoIT09bi5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiV3JvbmcgbnVtYmVyIG9mIGFyZ3VtZW50cyB0byBtYXRjaC4gRXhwZWN0ZWQ6IFwiK2Muam9pbihcIixcIikrXCJcXG5BY3R1YWw6IFwiK24uam9pbihcIixcIikpO2lmKCF6KGMsZnVuY3Rpb24oZSl7cmV0dXJuIHkobixlKX0pKXRocm93IG5ldyBFcnJvcihcIk5vdCBhbGwgYnJhbmNoZXMgd2VyZSBzcGVjaWZpZWQgd2hlbiB1c2luZyBtYXRjaC4gU3BlY2lmaWVkOiBcIituLmpvaW4oXCIsIFwiKStcIlxcblJlcXVpcmVkOiBcIitjLmpvaW4oXCIsIFwiKSk7cmV0dXJuIGVbb10uYXBwbHkobnVsbCx0KX0sbG9nOmZ1bmN0aW9uKGUpe2NvbnNvbGUubG9nKGUse2NvbnN0cnVjdG9yczpjLGNvbnN0cnVjdG9yOm8scGFyYW1zOnR9KX19fX0pLHR9dmFyIF9yLFdyLGpyLEZyPWZ1bmN0aW9uKG4sZSx0KXtyZXR1cm4gZS5iaW5kKGZ1bmN0aW9uKGUpe3JldHVybiB0LmZpbHRlcihQKG4uZXEsZSkpfSl9LEhyPWZ1bmN0aW9uKGUsbix0KXtyZXR1cm4gMDx0Lmxlbmd0aD8ocj1lLG89bix1PXRbMF0sSSh0LnNsaWNlKDEpLGZ1bmN0aW9uKGUsbil7dmFyIHQ9byhyLG4pO3JldHVybiBGcihyLGUsdCl9LG8ocix1KSkpOnEubm9uZSgpO3ZhciByLG8sdX0sVnI9ZnVuY3Rpb24obixlLHQscil7ZnVuY3Rpb24gbyhuKXtyZXR1cm4gYihuLHIpLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gbn0sZnVuY3Rpb24oZSl7cmV0dXJuIG4uc2xpY2UoMCxlKzEpfSl9dm9pZCAwPT09ciYmKHI9dik7dmFyIHU9W2VdLmNvbmNhdChuLnVwKCkuYWxsKGUpKSxpPVt0XS5jb25jYXQobi51cCgpLmFsbCh0KSksYz1vKHUpLGw9byhpKSxhPXcoYyxmdW5jdGlvbihlKXtyZXR1cm4gUihsLFAobi5lcSxlKSl9KTtyZXR1cm57Zmlyc3RwYXRoOmMsc2Vjb25kcGF0aDpsLHNoYXJlZDphfX0scXI9WnQoKSxVcj1ycixHcj1Mcihbe25vbmU6W119LHttdWx0aXBsZTpbXCJlbGVtZW50c1wiXX0se3NpbmdsZTpbXCJlbGVtZW50XCJdfV0pLCRyPUdyLm5vbmUsS3I9R3IubXVsdGlwbGUsWHI9R3Iuc2luZ2xlLFlyPXRpbnltY2UudXRpbC5Ub29scy5yZXNvbHZlKFwidGlueW1jZS5QbHVnaW5NYW5hZ2VyXCIpLEpyPW1yKFwid2lkdGhcIixmdW5jdGlvbihlKXtyZXR1cm4gZS5kb20ub2Zmc2V0V2lkdGh9KSxRcj1mdW5jdGlvbihlKXtyZXR1cm4gaHIoZSxcImNvbnRlbnQtYm94XCIpfSxacj1mdW5jdGlvbihlKXtyZXR1cm4gZHIoKT9ocihlLHByKGUpKTpncihlLFwid2lkdGhcIixlLmRvbS5vZmZzZXRXaWR0aCl9LGVvPWZ1bmN0aW9uKGUsbix0KXt2YXIgcj1lKCk7cmV0dXJuIHcocixuKS5vclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIHEuZnJvbShyWzBdKS5vclRodW5rKHQpfSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLmVsZW1lbnR9KX0sbm89ZnVuY3Rpb24oZSl7cmV0dXJuXCJydGxcIj09PVVuKGUsXCJkaXJlY3Rpb25cIik/XCJydGxcIjpcImx0clwifSx0bz1tcihcImhlaWdodFwiLGZ1bmN0aW9uKGUpe3ZhciBuPWUuZG9tO3JldHVybiBTbihlKT9uLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodDpuLm9mZnNldEhlaWdodH0pLHJvPWZ1bmN0aW9uKGUpe3JldHVybiBkcigpPyh0PXByKG49ZSksbz0ocj1uLmRvbSkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0fHxyLm9mZnNldEhlaWdodCxcImJvcmRlci1ib3hcIj09PXQ/bzpicihuLG8sXCJ0b3BcIixcImJvdHRvbVwiKSk6Z3IoZSxcImhlaWdodFwiLGUuZG9tLm9mZnNldEhlaWdodCk7dmFyIG4sdCxyLG99LG9vPWZ1bmN0aW9uKHQscil7cmV0dXJue2xlZnQ6dCx0b3A6cix0cmFuc2xhdGU6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gb28odCtlLHIrbil9fX0sdW89b28saW89ZnVuY3Rpb24oZSl7dmFyIG4sdD1lLmRvbSxyPXQub3duZXJEb2N1bWVudC5ib2R5O3JldHVybiByPT09dD91byhyLm9mZnNldExlZnQsci5vZmZzZXRUb3ApOlNuKGUpPyhuPXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksdW8obi5sZWZ0LG4udG9wKSk6dW8oMCwwKX0sY289e2RlbHRhOlMscG9zaXRpb25zOmZ1bmN0aW9uKGUpe3JldHVybiB6cihQcixOcixlKX0sZWRnZTpFcn0sbG89U3Ioe2RlbHRhOlMsZWRnZTpJcixwb3NpdGlvbnM6ZnVuY3Rpb24oZSl7cmV0dXJuIHpyKEJyLE1yLGUpfX0se2RlbHRhOmZ1bmN0aW9uKGUpe3JldHVybi1lfSxlZGdlOmtyLHBvc2l0aW9uczpmdW5jdGlvbihlKXtyZXR1cm4genIoTXIsQnIsZSl9fSksYW89e2RlbHRhOmZ1bmN0aW9uKGUsbil7cmV0dXJuIGxvKG4pLmRlbHRhKGUsbil9LHBvc2l0aW9uczpmdW5jdGlvbihlLG4pe3JldHVybiBsbyhuKS5wb3NpdGlvbnMoZSxuKX0sZWRnZTpmdW5jdGlvbihlKXtyZXR1cm4gbG8oZSkuZWRnZShlKX19LGZvPXt1bnN1cHBvcnRlZExlbmd0aDpbXCJlbVwiLFwiZXhcIixcImNhcFwiLFwiY2hcIixcImljXCIsXCJyZW1cIixcImxoXCIsXCJybGhcIixcInZ3XCIsXCJ2aFwiLFwidmlcIixcInZiXCIsXCJ2bWluXCIsXCJ2bWF4XCIsXCJjbVwiLFwibW1cIixcIlFcIixcImluXCIsXCJwY1wiLFwicHRcIixcInB4XCJdLGZpeGVkOltcInB4XCIsXCJwdFwiXSxyZWxhdGl2ZTpbXCIlXCJdLGVtcHR5OltcIlwiXX0sc289KGpyPVtcIkluZmluaXR5XCIsKF9yPVwiWzAtOV0rXCIpK1wiXFxcXC5cIittbyhfcikrbW8oV3I9XCJbZUVdWystXT9bMC05XStcIiksXCJcXFxcLlwiK19yK21vKFdyKSxfcittbyhXcildLmpvaW4oXCJ8XCIpLG5ldyBSZWdFeHAoXCJeKFsrLV0/KD86XCIranIrXCIpKSguKikkXCIpKTtmdW5jdGlvbiBtbyhlKXtyZXR1cm5cIig/OlwiK2UrXCIpP1wifWZ1bmN0aW9uIGdvKGUsbix0KXt2YXIgcj1xLmZyb20oZS5kb20ucGFyZW50RWxlbWVudCkubWFwKFZlLmZyb21Eb20pLmdldE9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gVG4obm4oZSkpfSk7cmV0dXJuIG4oZSkvdChyKSoxMDB9ZnVuY3Rpb24gcG8oZSxuKXtWbihlLFwid2lkdGhcIixuK1wicHhcIil9ZnVuY3Rpb24gYm8oZSxuKXtWbihlLFwid2lkdGhcIixuK1wiJVwiKX1mdW5jdGlvbiBobyhlLG4pe1ZuKGUsXCJoZWlnaHRcIixuK1wicHhcIil9ZnVuY3Rpb24gdm8oZSl7dmFyIG4sdCxyLG8sdSxpLGMsbCxhLGYscz1ybyhlKStcInB4XCI7cmV0dXJuIHM/KG49cyx0PWUscj1UcixvPWhvLGY9cGFyc2VGbG9hdChuKSxlZShuLFwiJVwiKSYmXCJ0YWJsZVwiIT09WWUodCk/KGk9ZixjPXIsbD1vLGE9cnQodT10KS5tYXAoZnVuY3Rpb24oZSl7dmFyIG49YyhlKTtyZXR1cm4gTWF0aC5mbG9vcihpLzEwMCpuKX0pLmdldE9yKGkpLGwodSxhKSxhKTpmKTpUcihlKX1mdW5jdGlvbiB3byhlLG4pe3JldHVybiBHbihlLG4pLm9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gTm4oZSxuKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUrXCJweFwifSl9KX1mdW5jdGlvbiB5byhlKXtyZXR1cm4gd28oZSxcIndpZHRoXCIpfWZ1bmN0aW9uIENvKGUpe3JldHVybiBnbyhlLHZyLFFyKX1mdW5jdGlvbiBTbyhlKXtyZXR1cm4oamwoZSk/dnI6WnIpKGUpfWZ1bmN0aW9uIFRvKGUpe3JldHVybiB2byhuPWUpL1huKG4sXCJyb3dzcGFuXCIpO3ZhciBufWZ1bmN0aW9uIHhvKGUsbix0KXtWbihlLFwid2lkdGhcIixuK3QpfWZ1bmN0aW9uIFJvKGUpe3JldHVybiBnbyhlLHZyLFFyKStcIiVcIn1mdW5jdGlvbiBEbyhlKXtyZXR1cm4geW8oZSkuZ2V0T3JUaHVuayhmdW5jdGlvbigpe3JldHVybiBTbyhlKStcInB4XCJ9KX1mdW5jdGlvbiBPbyhlKXtyZXR1cm4gd28oZSxcImhlaWdodFwiKS5nZXRPclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIFRvKGUpK1wicHhcIn0pfWZ1bmN0aW9uIEFvKGUsbix0LHIsbyx1KXtyZXR1cm4gZS5maWx0ZXIocikuZm9sZChmdW5jdGlvbigpe3JldHVybiB1KGZ1bmN0aW9uKHQscil7aWYocjwwfHxyPj10Lmxlbmd0aC0xKXJldHVybiBxLm5vbmUoKTt2YXIgZT10W3JdLmZvbGQoZnVuY3Rpb24oKXt2YXIgZSxuO3JldHVybiBIKChlPXQuc2xpY2UoMCxyKSwobj1VLmNhbGwoZSwwKSkucmV2ZXJzZSgpLG4pLGZ1bmN0aW9uKGUsbil7cmV0dXJuIGUubWFwKGZ1bmN0aW9uKGUpe3JldHVybnt2YWx1ZTplLGRlbHRhOm4rMX19KX0pfSxmdW5jdGlvbihlKXtyZXR1cm4gcS5zb21lKHt2YWx1ZTplLGRlbHRhOjB9KX0pLG49dFtyKzFdLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gSCh0LnNsaWNlKHIrMSksZnVuY3Rpb24oZSxuKXtyZXR1cm4gZS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJue3ZhbHVlOmUsZGVsdGE6bisxfX0pfSl9LGZ1bmN0aW9uKGUpe3JldHVybiBxLnNvbWUoe3ZhbHVlOmUsZGVsdGE6MX0pfSk7cmV0dXJuIGUuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gbi5tYXAoZnVuY3Rpb24oZSl7dmFyIG49ZS5kZWx0YSt0LmRlbHRhO3JldHVybiBNYXRoLmFicyhlLnZhbHVlLXQudmFsdWUpL259KX0pfSh0LG4pKX0sZnVuY3Rpb24oZSl7cmV0dXJuIG8oZSl9KX1mdW5jdGlvbiBrbyhlLG4saSxjKXt2YXIgbD15cihlKSx0PSR0Lmhhc0NvbHVtbnMoZSk/TygkdC5qdXN0Q29sdW1ucyhlKSxmdW5jdGlvbihlKXtyZXR1cm4gcS5mcm9tKGUuZWxlbWVudCl9KTpsLGE9W3Euc29tZShhby5lZGdlKG4pKV0uY29uY2F0KE8oYW8ucG9zaXRpb25zKGwsbiksZnVuY3Rpb24oZSl7cmV0dXJuIGUubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLnh9KX0pKSxmPXAoWW4pO3JldHVybiBPKHQsZnVuY3Rpb24oZSx1KXtyZXR1cm4gQW8oZSx1LGEsZixmdW5jdGlvbihlKXtyZXR1cm4gdD1lLG89KHI9SGUoKS5icm93c2VyKS5pc0Nocm9tZSgpfHxyLmlzRmlyZWZveCgpLCFIbCh0KXx8bz9pKGUpOkFvKG51bGwhPShuPWxbdV0pP1Mobik6cS5ub25lKCksdSxhLGYsZnVuY3Rpb24oZSl7cmV0dXJuIGMocS5zb21lKHZyKGUpKSl9LGMpO3ZhciBuLHQscixvfSxjKX0pfWZ1bmN0aW9uIElvKGUpe3JldHVybiBlLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZStcInB4XCJ9KS5nZXRPcihcIlwiKX1mdW5jdGlvbiBCbyhlLG4sdCl7cmV0dXJuIGtvKGUsbixTbyxmdW5jdGlvbihlKXtyZXR1cm4gZS5nZXRPclRodW5rKHQubWluQ2VsbFdpZHRoKX0pfWZ1bmN0aW9uIE1vKGUsbix0LHIsbyl7dmFyIHU9Q3IoZSksaT1bcS5zb21lKHQuZWRnZShuKSldLmNvbmNhdChPKHQucG9zaXRpb25zKHUsbiksZnVuY3Rpb24oZSl7cmV0dXJuIGUubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLnl9KX0pKTtyZXR1cm4gTyh1LGZ1bmN0aW9uKGUsbil7cmV0dXJuIEFvKGUsbixpLHAoSm4pLHIsbyl9KX1mdW5jdGlvbiBFbyhlLG4pe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBTbihlKT9uKGUpOnBhcnNlRmxvYXQoR24oZSxcIndpZHRoXCIpLmdldE9yKFwiMFwiKSl9fWZ1bmN0aW9uIFBvKHIpe3ZhciB0PUVvKHIsZnVuY3Rpb24oZSl7cmV0dXJuIHBhcnNlRmxvYXQoUm8oZSkpfSksbj1FbyhyLHZyKTtyZXR1cm57d2lkdGg6dCxwaXhlbFdpZHRoOm4sZ2V0V2lkdGhzOmZ1bmN0aW9uKGUsbil7cmV0dXJuIHQ9bixrbyhlLHIsQ28sZnVuY3Rpb24oZSl7cmV0dXJuIGUuZm9sZChmdW5jdGlvbigpe3JldHVybiB0Lm1pbkNlbGxXaWR0aCgpfSxmdW5jdGlvbihlKXtyZXR1cm4gZS90LnBpeGVsV2lkdGgoKSoxMDB9KX0pO3ZhciB0fSxnZXRDZWxsRGVsdGE6ZnVuY3Rpb24oZSl7cmV0dXJuIGUvbigpKjEwMH0sc2luZ2xlQ29sdW1uV2lkdGg6ZnVuY3Rpb24oZSxuKXtyZXR1cm5bMTAwLWVdfSxtaW5DZWxsV2lkdGg6ZnVuY3Rpb24oKXtyZXR1cm4gRnQoKS9uKCkqMTAwfSxzZXRFbGVtZW50V2lkdGg6Ym8sYWRqdXN0VGFibGVXaWR0aDpmdW5jdGlvbihlKXt2YXIgbj10KCk7Ym8ocixuK2UvMTAwKm4pfSxpc1JlbGF0aXZlOiEwLGxhYmVsOlwicGVyY2VudFwifX1mdW5jdGlvbiBObyh0KXt2YXIgcj1Fbyh0LHZyKTtyZXR1cm57d2lkdGg6cixwaXhlbFdpZHRoOnIsZ2V0V2lkdGhzOmZ1bmN0aW9uKGUsbil7cmV0dXJuIEJvKGUsdCxuKX0sZ2V0Q2VsbERlbHRhOlMsc2luZ2xlQ29sdW1uV2lkdGg6ZnVuY3Rpb24oZSxuKXtyZXR1cm5bTWF0aC5tYXgoRnQoKSxlK24pLWVdfSxtaW5DZWxsV2lkdGg6RnQsc2V0RWxlbWVudFdpZHRoOnBvLGFkanVzdFRhYmxlV2lkdGg6ZnVuY3Rpb24oZSl7dmFyIG49cigpK2U7cG8odCxuKX0saXNSZWxhdGl2ZTohMSxsYWJlbDpcInBpeGVsXCJ9fWZ1bmN0aW9uIHpvKGUsbil7ZnVuY3Rpb24gdChlKXtyZXR1cm4gb2UoZS5lbGVtZW50LG4pfXZhciB1LHIsaSxjLGwsYSxmLHMsbyxtLGQsZyxwPWZyKGUpLGI9Y3QocCksaD1WbChlKSx2PSR0LmdlbmVyYXRlKGIpLHc9KHU9dCxyPXYuZ3JpZC5jb2x1bW5zLGk9di5ncmlkLnJvd3MsYz1yLGE9bD0wLGY9W10scz1bXSxhZSh2LmFjY2VzcyxmdW5jdGlvbihlKXt2YXIgbix0LHIsbztmLnB1c2goZSksdShlKSYmKHMucHVzaChlKSx0PShuPWUucm93KStlLnJvd3NwYW4tMSxvPShyPWUuY29sdW1uKStlLmNvbHNwYW4tMSxuPGk/aT1uOmw8dCYmKGw9dCkscjxjP2M9cjphPG8mJihhPW8pKX0pLHttaW5Sb3c6aSxtaW5Db2w6YyxtYXhSb3c6bCxtYXhDb2w6YSxhbGxDZWxsczpmLHNlbGVjdGVkQ2VsbHM6c30pLHk9XCJ0aDpub3QoXCIrbitcIiksdGQ6bm90KFwiK24rXCIpXCI7cmV0dXJuIEEoVnQocCxcInRoLHRkXCIsZnVuY3Rpb24oZSl7cmV0dXJuIG9lKGUseSl9KSxZdCksZnVuY3Rpb24oZSxuLHQscil7Zm9yKHZhciBvLHUsaSxjPW4uZ3JpZC5jb2x1bW5zLGw9bi5ncmlkLnJvd3MsYT0wO2E8bDthKyspZm9yKHZhciBmPSExLHM9MDtzPGM7cysrKWE8dC5taW5Sb3d8fGE+dC5tYXhSb3d8fHM8dC5taW5Db2x8fHM+dC5tYXhDb2x8fCgkdC5nZXRBdChuLGEscykuZmlsdGVyKHIpLmlzTm9uZSgpPyhvPWYsMCx1PWVbYV0uZWxlbWVudCxpPVZlLmZyb21UYWcoXCJ0ZFwiKSxYdChpLFZlLmZyb21UYWcoXCJiclwiKSksKG8/WHQ6T3QpKHUsaSkpOmY9ITApfShiLHYsdyx0KSxvPXAsbT13LGQ9dixnPWZ1bmN0aW9uKGUsbix0LHIpe2lmKDA9PT1yLm1pbkNvbCYmbi5ncmlkLmNvbHVtbnM9PT1yLm1heENvbCsxKXJldHVybiAwO3ZhciBvPUJvKG4sZSx0KSx1PUIobyxmdW5jdGlvbihlLG4pe3JldHVybiBlK259LDApLGk9QihvLnNsaWNlKHIubWluQ29sLHIubWF4Q29sKzEpLGZ1bmN0aW9uKGUsbil7cmV0dXJuIGUrbn0sMCkvdSp0LnBpeGVsV2lkdGgoKS10LnBpeGVsV2lkdGgoKTtyZXR1cm4gdC5nZXRDZWxsRGVsdGEoaSl9KGUsJHQuZnJvbVRhYmxlKGUpLGgsdyksYWUoZC5jb2x1bW5zLGZ1bmN0aW9uKGUpeyhlLmNvbHVtbjxtLm1pbkNvbHx8ZS5jb2x1bW4+bS5tYXhDb2wpJiZZdChlLmVsZW1lbnQpfSksQShrKFpuKG8sXCJ0clwiKSxmdW5jdGlvbihlKXtyZXR1cm4gMD09PWUuZG9tLmNoaWxkRWxlbWVudENvdW50fSksWXQpLG0ubWluQ29sIT09bS5tYXhDb2wmJm0ubWluUm93IT09bS5tYXhSb3d8fEEoWm4obyxcInRoLHRkXCIpLGZ1bmN0aW9uKGUpe1d0KGUsXCJyb3dzcGFuXCIpLFd0KGUsXCJjb2xzcGFuXCIpfSksV3QobyxHdCksV3QobyxcImRhdGEtc25vb2tlci1jb2wtc2VyaWVzXCIpLFZsKG8pLmFkanVzdFRhYmxlV2lkdGgoZykscH1mdW5jdGlvbiBMbyhlKXtyZXR1cm5cImltZ1wiPT09WWUoZSk/MTpQdChlKS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIGxuKGUpLmxlbmd0aH0sZnVuY3Rpb24oZSl7cmV0dXJuIGUubGVuZ3RofSl9ZnVuY3Rpb24gX28oZSl7cmV0dXJuIFB0KGUpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gMCE9PWUudHJpbSgpLmxlbmd0aHx8LTE8ZS5pbmRleE9mKFwiXFx4YTBcIil9KS5pc1NvbWUoKXx8eShHbCxZZShlKSl9ZnVuY3Rpb24gV28oZSl7cmV0dXJuIG89X28sKHU9ZnVuY3Rpb24oZSl7Zm9yKHZhciBuPTA7bjxlLmNoaWxkTm9kZXMubGVuZ3RoO24rKyl7dmFyIHQ9VmUuZnJvbURvbShlLmNoaWxkTm9kZXNbbl0pO2lmKG8odCkpcmV0dXJuIHEuc29tZSh0KTt2YXIgcj11KGUuY2hpbGROb2Rlc1tuXSk7aWYoci5pc1NvbWUoKSlyZXR1cm4gcn1yZXR1cm4gcS5ub25lKCl9KShlLmRvbSk7dmFyIG8sdX1mdW5jdGlvbiBqbyhlKXtyZXR1cm4gJGwoZSxfbyl9ZnVuY3Rpb24gRm8obil7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGU9VmUuZnJvbVRhZyhcInRkXCIsbi5kb20pO3JldHVybiBYdChlLFZlLmZyb21UYWcoXCJiclwiLG4uZG9tKSksZX19ZnVuY3Rpb24gSG8oZSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIFZlLmZyb21UYWcoXCJjb2xcIixlLmRvbSl9fWZ1bmN0aW9uIFZvKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBWZS5mcm9tVGFnKFwiY29sZ3JvdXBcIixlLmRvbSl9fWZ1bmN0aW9uIHFvKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBWZS5mcm9tVGFnKFwidHJcIixlLmRvbSl9fWZ1bmN0aW9uIFVvKGUsbix0KXt2YXIgcixvLHU9KEl0KG89c3Iocj1lLG4pLGxuKGZyKHIpKSksbyk7cmV0dXJuIGFlKHQsZnVuY3Rpb24oZSxuKXtudWxsPT09ZT9XdCh1LG4pOk1uKHUsbixlKX0pLHV9ZnVuY3Rpb24gR28oZSl7cmV0dXJuIGV9ZnVuY3Rpb24gJG8oYSxmLHMpe2Z1bmN0aW9uIG0oZSxuKXt2YXIgdD1lLmVsZW1lbnQuZG9tLHI9bi5kb207Rm4odCkmJkZuKHIpJiYoci5zdHlsZS5jc3NUZXh0PXQuc3R5bGUuY3NzVGV4dCksJG4obixcImhlaWdodFwiKSwxIT09ZS5jb2xzcGFuJiYkbihuLFwid2lkdGhcIil9cmV0dXJue2NvbDpmdW5jdGlvbihlKXt2YXIgbj1WZS5mcm9tVGFnKFllKGUuZWxlbWVudCksZi5kb20pO3JldHVybiBtKGUsbiksYShlLmVsZW1lbnQsbiksbn0sY29sZ3JvdXA6Vm8oZikscm93OnFvKGYpLGNlbGw6ZnVuY3Rpb24oZSl7dmFyIG4sdCxyLG8sdSxpPVZlLmZyb21UYWcoWWUoZS5lbGVtZW50KSxmLmRvbSksYz1zLmdldE9yKFtcInN0cm9uZ1wiLFwiZW1cIixcImJcIixcImlcIixcInNwYW5cIixcImZvbnRcIixcImgxXCIsXCJoMlwiLFwiaDNcIixcImg0XCIsXCJoNVwiLFwiaDZcIixcInBcIixcImRpdlwiXSksbD0wPGMubGVuZ3RoPyhuPWUuZWxlbWVudCx0PWkscj1jLFdvKG4pLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gSShzbihlLHIuam9pbihcIixcIiksZnVuY3Rpb24oZSl7cmV0dXJuIGNlKGUsbil9KSxmdW5jdGlvbihlLG4pe3ZhciB0PWFyKG4pO3JldHVybiBXdCh0LFwiY29udGVudGVkaXRhYmxlXCIpLFh0KGUsdCksdH0sdCl9KS5nZXRPcih0KSk6aTtyZXR1cm4gWHQobCxWZS5mcm9tVGFnKFwiYnJcIikpLG0oZSxpKSxvPWUuZWxlbWVudCx1PWksYWUoS2wsZnVuY3Rpb24obix0KXtyZXR1cm4gTm4obyx0KS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIHkobixlKX0pLmVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIE1uKHUsdCxlKX0pfSksYShlLmVsZW1lbnQsaSksaX0scmVwbGFjZTpVbyxjb2xHYXA6SG8oZiksZ2FwOkZvKGYpfX1mdW5jdGlvbiBLbyhlKXtyZXR1cm57Y29sOkhvKGUpLGNvbGdyb3VwOlZvKGUpLHJvdzpxbyhlKSxjZWxsOkZvKGUpLHJlcGxhY2U6R28sY29sR2FwOkhvKGUpLGdhcDpGbyhlKX19ZnVuY3Rpb24gWG8oZSl7cmV0dXJuIE8oZSxWZS5mcm9tRG9tKX1mdW5jdGlvbiBZbyhlKXtyZXR1cm4gVmUuZnJvbURvbShlLmdldEJvZHkoKSl9ZnVuY3Rpb24gSm8oZSl7cmV0dXJuIGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGh9ZnVuY3Rpb24gUW8oZSl7cmV0dXJuIGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0fWZ1bmN0aW9uIFpvKG4pe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gY2UoZSxZbyhuKSl9fWZ1bmN0aW9uIGV1KGUpe3JldHVybi9eXFxkKyhcXC5cXGQrKT8kLy50ZXN0KGUpP2UrXCJweFwiOmV9ZnVuY3Rpb24gbnUoZSl7ZnVuY3Rpb24gbihlKXtyZXR1cm4gV3QoZSxcImRhdGEtbWNlLXN0eWxlXCIpfVd0KGUsXCJkYXRhLW1jZS1zdHlsZVwiKSxBKG50KGUpLG4pLEEodHQoZSksbiksQShvdChlKSxuKX1mdW5jdGlvbiB0dShlKXtyZXR1cm4gVmUuZnJvbURvbShlLnNlbGVjdGlvbi5nZXRTdGFydCgpKX1mdW5jdGlvbiBydShlKXtyZXR1cm4gY3IoZS5nZXQoKSxDKFtdKSxTLF8pfWZ1bmN0aW9uIG91KGUsbix0KXtyZXR1cm57ZWxlbWVudDp0LG1lcmdhYmxlOih1PW4saT1YbCxjcihlLmdldCgpLHEubm9uZSxmdW5jdGlvbihuKXtyZXR1cm4gbi5sZW5ndGg8PTE/cS5ub25lKCk6aXIodSxpLmZpcnN0U2VsZWN0ZWRTZWxlY3RvcixpLmxhc3RTZWxlY3RlZFNlbGVjdG9yKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJue2JvdW5kczplLGNlbGxzOm59fSl9LHEubm9uZSkpLHVubWVyZ2FibGU6MDwobz1ydShlKSkubGVuZ3RoJiZ6KG8sZnVuY3Rpb24oZSl7cmV0dXJuIHIoZSxcInJvd3NwYW5cIil8fHIoZSxcImNvbHNwYW5cIil9KT9xLnNvbWUobyk6cS5ub25lKCksc2VsZWN0aW9uOnJ1KGUpfTtmdW5jdGlvbiByKGUsbil7cmV0dXJuIE5uKGUsbikuZXhpc3RzKGZ1bmN0aW9uKGUpe3JldHVybiAxPHBhcnNlSW50KGUsMTApfSl9dmFyIG8sdSxpfWZ1bmN0aW9uIHV1KG8pe3JldHVybiBmdW5jdGlvbihlLG4pe3ZhciB0LHI9WWUoZSk7cmV0dXJuIEluKFwiY29sXCI9PT1yfHxcImNvbGdyb3VwXCI9PT1yP3J0KHQ9ZSkuYmluZChmdW5jdGlvbihlKXtyZXR1cm4gVXIoZSxYbC5maXJzdFNlbGVjdGVkU2VsZWN0b3IpfSkuZm9sZChDKHQpLGZ1bmN0aW9uKGUpe3JldHVybiBlWzBdfSk6ZSxvLG4pfX1mdW5jdGlvbiBpdShhLGUsZil7YS5vbihcIkJlZm9yZUdldENvbnRlbnRcIixmdW5jdGlvbih0KXshMD09PXQuc2VsZWN0aW9uJiZjcihlLmdldCgpLEUsZnVuY3Rpb24oZSl7dC5wcmV2ZW50RGVmYXVsdCgpLHJ0KGVbMF0pLm1hcChmdW5jdGlvbihlKXt2YXIgbj16byhlLFwiW2RhdGEtbWNlLXNlbGVjdGVkXVwiKTtyZXR1cm4gbnUobiksW25dfSkuZWFjaChmdW5jdGlvbihlKXt2YXIgbjt0LmNvbnRlbnQ9XCJ0ZXh0XCI9PT10LmZvcm1hdD9PKGUsZnVuY3Rpb24oZSl7cmV0dXJuIGUuZG9tLmlubmVyVGV4dH0pLmpvaW4oXCJcIik6KG49YSxPKGUsZnVuY3Rpb24oZSl7cmV0dXJuIG4uc2VsZWN0aW9uLnNlcmlhbGl6ZXIuc2VyaWFsaXplKGUuZG9tLHt9KX0pLmpvaW4oXCJcIikpfSl9LEUpfSksYS5vbihcIkJlZm9yZVNldENvbnRlbnRcIixmdW5jdGlvbihsKXshMD09PWwuc2VsZWN0aW9uJiYhMD09PWwucGFzdGUmJmooUWwoZSkpLmVhY2goZnVuY3Rpb24oYyl7cnQoYykuZWFjaChmdW5jdGlvbihlKXt2YXIgbix0LHIsbyx1PWsoKG49bC5jb250ZW50LCh0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpLmlubmVySFRNTD1uLGxuKFZlLmZyb21Eb20odCkpKSxmdW5jdGlvbihlKXtyZXR1cm5cIm1ldGFcIiE9PVllKGUpfSksaT1lbihcInRhYmxlXCIpOzE9PT11Lmxlbmd0aCYmaSh1WzBdKSYmKGwucHJldmVudERlZmF1bHQoKSxyPUtvKFZlLmZyb21Eb20oYS5nZXREb2MoKSkpLG89e2VsZW1lbnQ6YyxjbGlwYm9hcmQ6dVswXSxnZW5lcmF0b3JzOnJ9LGYucGFzdGVDZWxscyhlLG8pLmVhY2goZnVuY3Rpb24oKXthLmZvY3VzKCl9KSl9KX0pfSl9ZnVuY3Rpb24gY3UoZSxuLHQpe2Zvcih2YXIgcj0wLG89ZTtvPG47bysrKXIrPXZvaWQgMCE9PXRbb10/dFtvXTowO3JldHVybiByfWZ1bmN0aW9uIGx1KGUsbix0KXt2YXIgcixvLHUsaTtBKChyPWUsbz1uLCR0Lmhhc0NvbHVtbnMocik/KGk9byxPKCR0Lmp1c3RDb2x1bW5zKHIpLGZ1bmN0aW9uKGUsbil7cmV0dXJue2VsZW1lbnQ6ZS5lbGVtZW50LHdpZHRoOmlbbl0sY29sc3BhbjplLmNvbHNwYW59fSkpOih1PW8sTygkdC5qdXN0Q2VsbHMociksZnVuY3Rpb24oZSl7dmFyIG49Y3UoZS5jb2x1bW4sZS5jb2x1bW4rZS5jb2xzcGFuLHUpO3JldHVybntlbGVtZW50OmUuZWxlbWVudCx3aWR0aDpuLGNvbHNwYW46ZS5jb2xzcGFufX0pKSksZnVuY3Rpb24oZSl7dC5zZXRFbGVtZW50V2lkdGgoZS5lbGVtZW50LGUud2lkdGgpfSl9ZnVuY3Rpb24gYXUoZSxuLHQscixvKXt2YXIgdSxpLGMsbCxhLGYscyxtLGQsZyxwPSR0LmZyb21UYWJsZShlKSxiPW8uZ2V0Q2VsbERlbHRhKG4pLGg9by5nZXRXaWR0aHMocCxvKSx2PXQ9PT1wLmdyaWQuY29sdW1ucy0xLHc9ci5jbGFtcFRhYmxlRGVsdGEoaCx0LGIsby5taW5DZWxsV2lkdGgoKSx2KSx5PShpPXQsYz13LGw9byxhPXIsbT0odT1oKS5zbGljZSgwKSxzPWksZD0wPT09KGY9dSkubGVuZ3RoP2VhLm5vbmUoKToxPT09Zi5sZW5ndGg/ZWEub25seSgwKTowPT09cz9lYS5sZWZ0KDAsMSk6cz09PWYubGVuZ3RoLTE/ZWEucmlnaHQocy0xLHMpOjA8cyYmczxmLmxlbmd0aC0xP2VhLm1pZGRsZShzLTEscyxzKzEpOmVhLm5vbmUoKSxnPUMoTyhtLEMoMCkpKSxkLmZvbGQoZyxmdW5jdGlvbihlKXtyZXR1cm4gbC5zaW5nbGVDb2x1bW5XaWR0aChtW2VdLGMpfSxmdW5jdGlvbihlLG4pe3JldHVybiBhLmNhbGNMZWZ0RWRnZURlbHRhcyhtLGUsbixjLGwubWluQ2VsbFdpZHRoKCksbC5pc1JlbGF0aXZlKX0sZnVuY3Rpb24oZSxuLHQpe3JldHVybiBhLmNhbGNNaWRkbGVEZWx0YXMobSxlLG4sdCxjLGwubWluQ2VsbFdpZHRoKCksbC5pc1JlbGF0aXZlKX0sZnVuY3Rpb24oZSxuKXtyZXR1cm4gYS5jYWxjUmlnaHRFZGdlRGVsdGFzKG0sZSxuLGMsbC5taW5DZWxsV2lkdGgoKSxsLmlzUmVsYXRpdmUpfSkpO2x1KHAsTyh5LGZ1bmN0aW9uKGUsbil7cmV0dXJuIGUraFtuXX0pLG8pLHIucmVzaXplVGFibGUoby5hZGp1c3RUYWJsZVdpZHRoLHcsdil9ZnVuY3Rpb24gZnUoZSl7cmV0dXJuIE8oZSxDKDApKX1mdW5jdGlvbiBzdShlLG4sdCxyLG8pe3JldHVybiBvKGUuc2xpY2UoMCxuKSkuY29uY2F0KHIpLmNvbmNhdChvKGUuc2xpY2UodCkpKX1mdW5jdGlvbiBtdShpKXtyZXR1cm4gZnVuY3Rpb24oZSxuLHQscil7aWYoaSh0KSl7dmFyIG89TWF0aC5tYXgocixlW25dLU1hdGguYWJzKHQpKSx1PU1hdGguYWJzKG8tZVtuXSk7cmV0dXJuIDA8PXQ/dTotdX1yZXR1cm4gdH19ZnVuY3Rpb24gZHUoKXtmdW5jdGlvbiBmKGUsdCxuLHIpe3ZhciBvPSgxMDArbikvMTAwLHU9TWF0aC5tYXgociwoZVt0XStuKS9vKTtyZXR1cm4gTyhlLGZ1bmN0aW9uKGUsbil7cmV0dXJuKG49PT10P3U6ZS9vKS1lfSl9ZnVuY3Rpb24gYyhlLG4sdCxyLG8sdSl7cmV0dXJuIHU/ZihlLG4scixvKToobD10LGE9bmEoaT1lLGM9bixyLG8pLHN1KGksYyxsKzEsW2EsMF0sZnUpKTt2YXIgaSxjLGwsYX1yZXR1cm57cmVzaXplVGFibGU6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gZShuKX0sY2xhbXBUYWJsZURlbHRhOm5hLGNhbGNMZWZ0RWRnZURlbHRhczpjLGNhbGNNaWRkbGVEZWx0YXM6ZnVuY3Rpb24oZSxuLHQscixvLHUsaSl7cmV0dXJuIGMoZSx0LHIsbyx1LGkpfSxjYWxjUmlnaHRFZGdlRGVsdGFzOmZ1bmN0aW9uKGUsbix0LHIsbyx1KXtpZih1KXJldHVybiBmKGUsdCxyLG8pO3ZhciBpPW5hKGUsdCxyLG8pO3JldHVybiBmdShlLnNsaWNlKDAsdCkpLmNvbmNhdChbaV0pfSxjYWxjUmVkZXN0cmlidXRlZFdpZHRoczpmdW5jdGlvbihlLG4sdCxyKXtpZihyKXt2YXIgbz0obit0KS9uLHU9TyhlLGZ1bmN0aW9uKGUpe3JldHVybiBlL299KTtyZXR1cm57ZGVsdGE6MTAwKm8tMTAwLG5ld1NpemVzOnV9fXJldHVybntkZWx0YTp0LG5ld1NpemVzOmV9fX19ZnVuY3Rpb24gZ3UoKXtmdW5jdGlvbiBpKGUsbix0LHIsbyl7dmFyIHU9dGEoZSwwPD1yP3Q6bixyLG8pO3JldHVybiBzdShlLG4sdCsxLFt1LC11XSxmdSl9cmV0dXJue3Jlc2l6ZVRhYmxlOmZ1bmN0aW9uKGUsbix0KXt0JiZlKG4pfSxjbGFtcFRhYmxlRGVsdGE6ZnVuY3Rpb24oZSxuLHQscixvKXtpZihvKXtpZigwPD10KXJldHVybiB0O3ZhciB1PUIoZSxmdW5jdGlvbihlLG4pe3JldHVybiBlK24tcn0sMCk7cmV0dXJuIE1hdGgubWF4KC11LHQpfXJldHVybiBuYShlLG4sdCxyKX0sY2FsY0xlZnRFZGdlRGVsdGFzOmksY2FsY01pZGRsZURlbHRhczpmdW5jdGlvbihlLG4sdCxyLG8sdSl7cmV0dXJuIGkoZSx0LHIsbyx1KX0sY2FsY1JpZ2h0RWRnZURlbHRhczpmdW5jdGlvbihlLG4sdCxyLG8sdSl7cmV0dXJuIHU/ZnUoZSk6TyhlLEMoci9lLmxlbmd0aCkpfSxjYWxjUmVkZXN0cmlidXRlZFdpZHRoczpmdW5jdGlvbihlLG4sdCxyKXtyZXR1cm57ZGVsdGE6MCxuZXdTaXplczplfX19fWZ1bmN0aW9uIHB1KGUsbix0KXt2YXIgcj10LnN1YnN0cmluZygwLHQubGVuZ3RoLWUubGVuZ3RoKSxvPXBhcnNlRmxvYXQocik7cmV0dXJuIHI9PT1vLnRvU3RyaW5nKCk/bihvKTpyYS5pbnZhbGlkKHQpfWZ1bmN0aW9uIGJ1KGUsbix0KXt2YXIgcixvLHUsaSxjPW9hLmZyb20odCksbD16KGUsZnVuY3Rpb24oZSl7cmV0dXJuXCIwcHhcIj09PWV9KT8ocj1lLmxlbmd0aCxvPWMuZm9sZChmdW5jdGlvbigpe3JldHVybiBDKFwiXCIpfSxmdW5jdGlvbihlKXtyZXR1cm4gQyhlL3IrXCJweFwiKX0sZnVuY3Rpb24oKXtyZXR1cm4gQygxMDAvcitcIiVcIil9KSxEKHIsbykpOih1PWUsaT1uLGMuZm9sZChmdW5jdGlvbigpe3JldHVybiB1fSxmdW5jdGlvbihlKXtyZXR1cm4gdD0obj1lKS9pLE8odSxmdW5jdGlvbihlKXtyZXR1cm4gb2EuZnJvbShlKS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIGV9LGZ1bmN0aW9uKGUpe3JldHVybiBlKnQrXCJweFwifSxmdW5jdGlvbihlKXtyZXR1cm4gZS8xMDAqbitcInB4XCJ9KX0pO3ZhciBuLHR9LGZ1bmN0aW9uKGUpe3JldHVybiBuPWksTyh1LGZ1bmN0aW9uKGUpe3JldHVybiBvYS5mcm9tKGUpLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gZX0sZnVuY3Rpb24oZSl7cmV0dXJuIGUvbioxMDArXCIlXCJ9LGZ1bmN0aW9uKGUpe3JldHVybiBlK1wiJVwifSl9KTt2YXIgbn0pKTtyZXR1cm4gdWEobCl9ZnVuY3Rpb24gaHUoZSxuKXtyZXR1cm4gMD09PWUubGVuZ3RoP246SShlLGZ1bmN0aW9uKGUsbil7cmV0dXJuIG9hLmZyb20obikuZm9sZChDKDApLFMsUykrZX0sMCl9ZnVuY3Rpb24gdnUoZSl7cmV0dXJuIGlhKGUpLmZvbGQoQyhcInB4XCIpLEMoXCJweFwiKSxDKFwiJVwiKSl9ZnVuY3Rpb24gd3UobCxlLG4pe3ZhciBhPSR0LmZyb21UYWJsZShsKSxpPWEuYWxsLGY9JHQuanVzdENlbGxzKGEpLHM9JHQuanVzdENvbHVtbnMoYSk7ZS5lYWNoKGZ1bmN0aW9uKGUpe3ZhciB0LHIsbyx1LG49dnUoZSksaT12cihsKSxjPWJ1KGtvKGEsbCxEbyxJbyksaSxlKTskdC5oYXNDb2x1bW5zKGEpPyhvPWMsdT1uLEEocyxmdW5jdGlvbihlLG4pe3ZhciB0PWh1KFtvW25dXSxGdCgpKTtWbihlLmVsZW1lbnQsXCJ3aWR0aFwiLHQrdSl9KSk6KHQ9YyxyPW4sQShmLGZ1bmN0aW9uKGUpe3ZhciBuPWh1KHQuc2xpY2UoZS5jb2x1bW4sZS5jb2xzcGFuK2UuY29sdW1uKSxGdCgpKTtWbihlLmVsZW1lbnQsXCJ3aWR0aFwiLG4rcil9KSksVm4obCxcIndpZHRoXCIsZSl9KSxuLmVhY2goZnVuY3Rpb24oZSl7dmFyIG49dnUoZSksdD1UcihsKSxyPWJ1KE1vKGEsbCxjbyxPbyxJbyksdCxlKSxvPWksdT1uO0EoZixmdW5jdGlvbihlKXt2YXIgbj1odShyLnNsaWNlKGUucm93LGUucm93c3BhbitlLnJvdyksSHQoKSk7Vm4oZS5lbGVtZW50LFwiaGVpZ2h0XCIsbit1KX0pLEEobyxmdW5jdGlvbihlLG4pe1ZuKGUuZWxlbWVudCxcImhlaWdodFwiLHJbbl0pfSksVm4obCxcImhlaWdodFwiLGUpfSl9ZnVuY3Rpb24geXUoZSl7cmV0dXJuICR0LmZyb21UYWJsZShlKS5ncmlkfWZ1bmN0aW9uIEN1KG4pe3ZhciBvPVtdO3JldHVybntiaW5kOmZ1bmN0aW9uKGUpe2lmKHZvaWQgMD09PWUpdGhyb3cgbmV3IEVycm9yKFwiRXZlbnQgYmluZCBlcnJvcjogdW5kZWZpbmVkIGhhbmRsZXJcIik7by5wdXNoKGUpfSx1bmJpbmQ6ZnVuY3Rpb24obil7bz1rKG8sZnVuY3Rpb24oZSl7cmV0dXJuIGUhPT1ufSl9LHRyaWdnZXI6ZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlXT1hcmd1bWVudHNbZV07dmFyIHI9e307QShuLGZ1bmN0aW9uKGUsbil7cltlXT10W25dfSksQShvLGZ1bmN0aW9uKGUpe2Uocil9KX19fWZ1bmN0aW9uIFN1KGUpe3JldHVybntyZWdpc3RyeTpmZShlLGZ1bmN0aW9uKGUpe3JldHVybntiaW5kOmUuYmluZCx1bmJpbmQ6ZS51bmJpbmR9fSksdHJpZ2dlcjpmZShlLGZ1bmN0aW9uKGUpe3JldHVybiBlLnRyaWdnZXJ9KX19ZnVuY3Rpb24gVHUoZSl7cmV0dXJuIGUuc2xpY2UoMCkuc29ydCgpfWZ1bmN0aW9uIHh1KG4sZSl7dmFyIHQ9ayhlLGZ1bmN0aW9uKGUpe3JldHVybiF5KG4sZSl9KTswPHQubGVuZ3RoJiZmdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIGtleXMgZm9yIG9iamVjdDogXCIrVHUodCkuam9pbihcIiwgXCIpKX0oKX1mdW5jdGlvbiBSdShlKXtyZXR1cm4gZnVuY3Rpb24ocixvLHUpe2lmKDA9PT1vLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJZb3UgbXVzdCBzcGVjaWZ5IGF0IGxlYXN0IG9uZSByZXF1aXJlZCBmaWVsZC5cIik7dmFyIHQ7cmV0dXJuIGZ1bmN0aW9uKG4sZSl7aWYoIWEoZSkpdGhyb3cgbmV3IEVycm9yKFwiVGhlIFwiK24rXCIgZmllbGRzIG11c3QgYmUgYW4gYXJyYXkuIFdhczogXCIrZStcIi5cIik7QShlLGZ1bmN0aW9uKGUpe2lmKCFUKGUpKXRocm93IG5ldyBFcnJvcihcIlRoZSB2YWx1ZSBcIitlK1wiIGluIHRoZSBcIituK1wiIGZpZWxkcyB3YXMgbm90IGEgc3RyaW5nLlwiKX0pfShcInJlcXVpcmVkXCIsbyksdyh0PVR1KG8pLGZ1bmN0aW9uKGUsbil7cmV0dXJuIG48dC5sZW5ndGgtMSYmZT09PXRbbisxXX0pLmVhY2goZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwiVGhlIGZpZWxkOiBcIitlK1wiIG9jY3VycyBtb3JlIHRoYW4gb25jZSBpbiB0aGUgY29tYmluZWQgZmllbGRzOiBbXCIrdC5qb2luKFwiLCBcIikrXCJdLlwiKX0pLGZ1bmN0aW9uKG4pe3ZhciB0PVVlKG4pO3oobyxmdW5jdGlvbihlKXtyZXR1cm4geSh0LGUpfSl8fGZ1bmN0aW9uKGUsbil7dGhyb3cgbmV3IEVycm9yKFwiQWxsIHJlcXVpcmVkIGtleXMgKFwiK1R1KGUpLmpvaW4oXCIsIFwiKStcIikgd2VyZSBub3Qgc3BlY2lmaWVkLiBTcGVjaWZpZWQga2V5cyB3ZXJlOiBcIitUdShuKS5qb2luKFwiLCBcIikrXCIuXCIpfShvLHQpLHIobyx0KTt2YXIgZT1rKG8sZnVuY3Rpb24oZSl7cmV0dXJuIXUudmFsaWRhdGUobltlXSxlKX0pO3JldHVybiAwPGUubGVuZ3RoJiZmdW5jdGlvbihlLG4pe3Rocm93IG5ldyBFcnJvcihcIkFsbCB2YWx1ZXMgbmVlZCB0byBiZSBvZiB0eXBlOiBcIituK1wiLiBLZXlzIChcIitUdShlKS5qb2luKFwiLCBcIikrXCIpIHdlcmUgbm90LlwiKX0oZSx1LmxhYmVsKSxufX0oeHUsZSx7dmFsaWRhdGU6YyxsYWJlbDpcImZ1bmN0aW9uXCJ9KX1mdW5jdGlvbiBEdSgpe3ZhciB1LGksZT17b25FdmVudDpFLHJlc2V0OkUsZXZlbnRzOlN1KHttb3ZlOkN1KFtcImluZm9cIl0pfSkucmVnaXN0cnl9LG49KHU9cS5ub25lKCkse29uRXZlbnQ6ZnVuY3Rpb24oZSxvKXtvLmV4dHJhY3QoZSkuZWFjaChmdW5jdGlvbihlKXt2YXIgbj1vLHQ9ZSxyPXUubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBuLmNvbXBhcmUoZSx0KX0pO3U9cS5zb21lKHQpLHIuZWFjaChmdW5jdGlvbihlKXtpLnRyaWdnZXIubW92ZShlKX0pfSl9LHJlc2V0OmZ1bmN0aW9uKCl7dT1xLm5vbmUoKX0sZXZlbnRzOihpPVN1KHttb3ZlOkN1KFtcImluZm9cIl0pfSkpLnJlZ2lzdHJ5fSksdD1lO3JldHVybntvbjpmdW5jdGlvbigpe3QucmVzZXQoKSx0PW59LG9mZjpmdW5jdGlvbigpe3QucmVzZXQoKSx0PWV9LGlzT246ZnVuY3Rpb24oKXtyZXR1cm4gdD09PW59LG9uRXZlbnQ6ZnVuY3Rpb24oZSxuKXt0Lm9uRXZlbnQoZSxuKX0sZXZlbnRzOm4uZXZlbnRzfX1mdW5jdGlvbiBPdShlKXtmdW5jdGlvbiBuKCl7cmV0dXJuIGUuc3RvcFByb3BhZ2F0aW9uKCl9ZnVuY3Rpb24gdCgpe3JldHVybiBlLnByZXZlbnREZWZhdWx0KCl9dmFyIHIsbyx1PVZlLmZyb21Eb20oZnVuY3Rpb24oZSl7aWYod24oKSYmbChlLnRhcmdldCkpe3ZhciBuPVZlLmZyb21Eb20oZS50YXJnZXQpO2lmKGduKG4pJiZDbihuKSYmZS5jb21wb3NlZCYmZS5jb21wb3NlZFBhdGgpe3ZhciB0PWUuY29tcG9zZWRQYXRoKCk7aWYodClyZXR1cm4gaih0KX19cmV0dXJuIHEuZnJvbShlLnRhcmdldCl9KGUpLmdldE9yKGUudGFyZ2V0KSksaT0ocj10LG89bixmdW5jdGlvbigpe2Zvcih2YXIgZT1bXSxuPTA7bjxhcmd1bWVudHMubGVuZ3RoO24rKyllW25dPWFyZ3VtZW50c1tuXTtyZXR1cm4gcihvLmFwcGx5KG51bGwsZSkpfSk7cmV0dXJue3RhcmdldDp1LHg6ZS5jbGllbnRYLHk6ZS5jbGllbnRZLHN0b3A6bixwcmV2ZW50OnQsa2lsbDppLHJhdzplfX1mdW5jdGlvbiBBdShlLG4sdCl7cmV0dXJuIG89bix1PSExLGk9c2EsYz10LGw9ZnVuY3Rpb24oZSl7aShlKSYmYyhPdShlKSl9LChyPWUpLmRvbS5hZGRFdmVudExpc3RlbmVyKG8sbCx1KSx7dW5iaW5kOlAoZmEscixvLGwsdSl9O3ZhciByLG8sdSxpLGMsbH1mdW5jdGlvbiBrdShlKXtyZXR1cm4gdm9pZCAwIT09ZS5kb20uY2xhc3NMaXN0fWZ1bmN0aW9uIEl1KGUsbil7cmV0dXJuIG89bixNbihlLHQ9XCJjbGFzc1wiLCh2b2lkIDA9PT0ocj1QbihlLHQpKXx8XCJcIj09PXI/W106ci5zcGxpdChcIiBcIikpLmNvbmNhdChbb10pLmpvaW4oXCIgXCIpKSwxO3ZhciB0LHIsb31mdW5jdGlvbiBCdShlLG4pe2t1KGUpP2UuZG9tLmNsYXNzTGlzdC5hZGQobik6SXUoZSxuKX1mdW5jdGlvbiBNdShlLG4pe3JldHVybiBrdShlKSYmZS5kb20uY2xhc3NMaXN0LmNvbnRhaW5zKG4pfWZ1bmN0aW9uIEV1KGUpe3ZhciBuPWUucmVwbGFjZSgvXFwuL2csXCItXCIpO3JldHVybntyZXNvbHZlOmZ1bmN0aW9uKGUpe3JldHVybiBuK1wiLVwiK2V9fX1mdW5jdGlvbiBQdShlKXtyZXR1cm4gSW4oZSxcIltjb250ZW50ZWRpdGFibGVdXCIpfWZ1bmN0aW9uIE51KGUsbil7cmV0dXJuIHZvaWQgMD09PW4mJihuPSExKSwhSGUoKS5icm93c2VyLmlzSUUoKSYmU24oZSk/ZS5kb20uaXNDb250ZW50RWRpdGFibGU6UHUoZSkuZm9sZChDKG4pLGZ1bmN0aW9uKGUpe3JldHVyblwidHJ1ZVwiPT09cGEoZSl9KX1mdW5jdGlvbiB6dShlKXtBKGRuKGUucGFyZW50KCksXCIuXCIraGEpLFl0KX1mdW5jdGlvbiBMdSh0LGUscil7dmFyIG89dC5vcmlnaW4oKTtBKGUsZnVuY3Rpb24oZSl7ZS5lYWNoKGZ1bmN0aW9uKGUpe3ZhciBuPXIobyxlKTtCdShuLGhhKSxYdCh0LnBhcmVudCgpLG4pfSl9KX1mdW5jdGlvbiBfdShlLG4sdCxyLG8pe3ZhciB1LGksYyxsLGEsZj1Ecih0KSxzPW4uaXNSZXNpemFibGUsbT0wPHIubGVuZ3RoP2NvLnBvc2l0aW9ucyhyLHQpOltdLGQ9MDxtLmxlbmd0aD8odT1zLE4oZS5hbGwsZnVuY3Rpb24oZSxuKXtyZXR1cm4gdShlLmVsZW1lbnQpP1tuXTpbXX0pKTpbXSxnPWsobSxmdW5jdGlvbihlLG4pe3JldHVybiBSKGQsZnVuY3Rpb24oZSl7cmV0dXJuIG49PT1lfSl9KTtpPW4sYz1nLGw9ZixhPXdyKHQpLEx1KGksYyxmdW5jdGlvbihlLG4pe3ZhciB0LHIsbyx1LGksYz0odD1uLnJvdyxyPWwubGVmdC1lLmxlZnQsbz1uLnktZS50b3AsdT1hLHFuKGk9VmUuZnJvbVRhZyhcImRpdlwiKSx7cG9zaXRpb246XCJhYnNvbHV0ZVwiLGxlZnQ6citcInB4XCIsdG9wOm8tMy41K1wicHhcIixoZWlnaHQ6XCI3cHhcIix3aWR0aDp1K1wicHhcIn0pLEVuKGkse1wiZGF0YS1yb3dcIjp0LHJvbGU6XCJwcmVzZW50YXRpb25cIn0pLGkpO3JldHVybiBCdShjLHZhKSxjfSk7dmFyIHAsYixoLHYsdyx5LEMsUz0wPG8ubGVuZ3RoP2FvLnBvc2l0aW9ucyhvLHQpOltdLFQ9MDxTLmxlbmd0aD8oYj1zLGg9W10sRCgocD1lKS5ncmlkLmNvbHVtbnMsZnVuY3Rpb24oZSl7JHQuZ2V0Q29sdW1uQXQocCxlKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZWxlbWVudH0pLmZvcmFsbChiKSYmaC5wdXNoKGUpfSksayhoLGZ1bmN0aW9uKG4pe3JldHVybiB6KCR0LmZpbHRlckl0ZW1zKHAsZnVuY3Rpb24oZSl7cmV0dXJuIGUuY29sdW1uPT09bn0pLGZ1bmN0aW9uKGUpe3JldHVybiBiKGUuZWxlbWVudCl9KX0pKTpbXSx4PWsoUyxmdW5jdGlvbihlLG4pe3JldHVybiBSKFQsZnVuY3Rpb24oZSl7cmV0dXJuIG49PT1lfSl9KTt2PW4sdz14LHk9ZixDPXhyKHQpLEx1KHYsdyxmdW5jdGlvbihlLG4pe3ZhciB0LHIsbyx1LGksYz0odD1uLmNvbCxyPW4ueC1lLmxlZnQsbz15LnRvcC1lLnRvcCx1PUMscW4oaT1WZS5mcm9tVGFnKFwiZGl2XCIpLHtwb3NpdGlvbjpcImFic29sdXRlXCIsbGVmdDpyLTMuNStcInB4XCIsdG9wOm8rXCJweFwiLGhlaWdodDp1K1wicHhcIix3aWR0aDpcIjdweFwifSksRW4oaSx7XCJkYXRhLWNvbHVtblwiOnQscm9sZTpcInByZXNlbnRhdGlvblwifSksaSk7cmV0dXJuIEJ1KGMsd2EpLGN9KX1mdW5jdGlvbiBXdShlLG4pe3ZhciB0O3p1KGUpLGUuaXNSZXNpemFibGUobikmJl91KHQ9JHQuZnJvbVRhYmxlKG4pLGUsbixDcih0KSx5cih0KSl9ZnVuY3Rpb24ganUoZSxuKXtBKGRuKGUucGFyZW50KCksXCIuXCIraGEpLG4pfWZ1bmN0aW9uIEZ1KGUpe2p1KGUsZnVuY3Rpb24oZSl7Vm4oZSxcImRpc3BsYXlcIixcIm5vbmVcIil9KX1mdW5jdGlvbiBIdShlKXtqdShlLGZ1bmN0aW9uKGUpe1ZuKGUsXCJkaXNwbGF5XCIsXCJibG9ja1wiKX0pfWZ1bmN0aW9uIFZ1KG8pe2Z1bmN0aW9uIGUoZSxuKXtyZXR1cm4gcS5mcm9tKFBuKGUsbikpfXZhciBuLHQscix1LGksYyxsPSh1PVN1KHtkcmFnOkN1KFtcInhEZWx0YVwiLFwieURlbHRhXCIsXCJ0YXJnZXRcIl0pfSksaT1xLm5vbmUoKSwoYz17bXV0YXRlOmZ1bmN0aW9uKGUsbil7ci50cmlnZ2VyLmRyYWcoZSxuKX0sZXZlbnRzOihyPVN1KHtkcmFnOkN1KFtcInhEZWx0YVwiLFwieURlbHRhXCJdKX0pKS5yZWdpc3RyeX0pLmV2ZW50cy5kcmFnLmJpbmQoZnVuY3Rpb24obil7aS5lYWNoKGZ1bmN0aW9uKGUpe3UudHJpZ2dlci5kcmFnKG4ueERlbHRhLG4ueURlbHRhLGUpfSl9KSx7YXNzaWduOmZ1bmN0aW9uKGUpe2k9cS5zb21lKGUpfSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gaX0sbXV0YXRlOmMubXV0YXRlLGV2ZW50czp1LnJlZ2lzdHJ5fSksYT0odD12b2lkIDAhPT0obj17fSkubW9kZT9uLm1vZGU6Z2EsZnVuY3Rpb24obix0LGUpe2Z1bmN0aW9uIHIoKXttLnN0b3AoKSxsLmlzT24oKSYmKGwub2ZmKCksYy50cmlnZ2VyLnN0b3AoKSl9dmFyIG8sdSxpPSExLGM9U3Uoe3N0YXJ0OkN1KFtdKSxzdG9wOkN1KFtdKX0pLGw9RHUoKSxhPShvPXIsdT1udWxsLHtjYW5jZWw6Zix0aHJvdHRsZTpmdW5jdGlvbigpe2Zvcih2YXIgZT1bXSxuPTA7bjxhcmd1bWVudHMubGVuZ3RoO24rKyllW25dPWFyZ3VtZW50c1tuXTtmKCksdT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dT1udWxsLG8uYXBwbHkobnVsbCxlKX0sMjAwKX19KTtmdW5jdGlvbiBmKCl7aCh1KXx8KGNsZWFyVGltZW91dCh1KSx1PW51bGwpfWZ1bmN0aW9uIHModCl7cmV0dXJuIGZ1bmN0aW9uKCl7Zm9yKHZhciBlPVtdLG49MDtuPGFyZ3VtZW50cy5sZW5ndGg7bisrKWVbbl09YXJndW1lbnRzW25dO2kmJnQuYXBwbHkobnVsbCxlKX19bC5ldmVudHMubW92ZS5iaW5kKGZ1bmN0aW9uKGUpe3QubXV0YXRlKG4sZS5pbmZvKX0pO3ZhciBtPXQuc2luayhhYSh7Zm9yY2VEcm9wOnIsZHJvcDpzKHIpLG1vdmU6cyhmdW5jdGlvbihlKXthLmNhbmNlbCgpLGwub25FdmVudChlLHQpfSksZGVsYXlEcm9wOnMoYS50aHJvdHRsZSl9KSxlKTtyZXR1cm57ZWxlbWVudDptLmVsZW1lbnQsZ286ZnVuY3Rpb24oZSl7bS5zdGFydChlKSxsLm9uKCksYy50cmlnZ2VyLnN0YXJ0KCl9LG9uOmZ1bmN0aW9uKCl7aT0hMH0sb2ZmOmZ1bmN0aW9uKCl7aT0hMX0sZGVzdHJveTpmdW5jdGlvbigpe20uZGVzdHJveSgpfSxldmVudHM6Yy5yZWdpc3RyeX19KGwsdCxuKSksZj1xLm5vbmUoKTtmdW5jdGlvbiBzKGUsbil7cmV0dXJuIFFuKGUsbiktS24oZSxcImRhdGEtaW5pdGlhbC1cIituLDApfWZ1bmN0aW9uIG0oZSxuKXtiLnRyaWdnZXIuc3RhcnRBZGp1c3QoKSxsLmFzc2lnbihlKSxNbihlLFwiZGF0YS1pbml0aWFsLVwiK24sUW4oZSxuKSksQnUoZSx5YSksVm4oZSxcIm9wYWNpdHlcIixcIjAuMlwiKSxhLmdvKG8ucGFyZW50KCkpfWZ1bmN0aW9uIGQoZSl7cmV0dXJuIGNlKGUsby52aWV3KCkpfWwuZXZlbnRzLmRyYWcuYmluZChmdW5jdGlvbih0KXtlKHQudGFyZ2V0LFwiZGF0YS1yb3dcIikuZWFjaChmdW5jdGlvbihlKXt2YXIgbj1Rbih0LnRhcmdldCxcInRvcFwiKTtWbih0LnRhcmdldCxcInRvcFwiLG4rdC55RGVsdGErXCJweFwiKX0pLGUodC50YXJnZXQsXCJkYXRhLWNvbHVtblwiKS5lYWNoKGZ1bmN0aW9uKGUpe3ZhciBuPVFuKHQudGFyZ2V0LFwibGVmdFwiKTtWbih0LnRhcmdldCxcImxlZnRcIixuK3QueERlbHRhK1wicHhcIil9KX0pLGEuZXZlbnRzLnN0b3AuYmluZChmdW5jdGlvbigpe2wuZ2V0KCkuZWFjaChmdW5jdGlvbihyKXtmLmVhY2goZnVuY3Rpb24odCl7ZShyLFwiZGF0YS1yb3dcIikuZWFjaChmdW5jdGlvbihlKXt2YXIgbj1zKHIsXCJ0b3BcIik7V3QocixcImRhdGEtaW5pdGlhbC10b3BcIiksYi50cmlnZ2VyLmFkanVzdEhlaWdodCh0LG4scGFyc2VJbnQoZSwxMCkpfSksZShyLFwiZGF0YS1jb2x1bW5cIikuZWFjaChmdW5jdGlvbihlKXt2YXIgbj1zKHIsXCJsZWZ0XCIpO1d0KHIsXCJkYXRhLWluaXRpYWwtbGVmdFwiKSxiLnRyaWdnZXIuYWRqdXN0V2lkdGgodCxuLHBhcnNlSW50KGUsMTApKX0pLFd1KG8sdCl9KX0pfSk7dmFyIGc9QXUoby5wYXJlbnQoKSxcIm1vdXNlZG93blwiLGZ1bmN0aW9uKGUpe011KGUudGFyZ2V0LHZhKSYmbShlLnRhcmdldCxcInRvcFwiKSxNdShlLnRhcmdldCx3YSkmJm0oZS50YXJnZXQsXCJsZWZ0XCIpfSkscD1BdShvLnZpZXcoKSxcIm1vdXNlb3ZlclwiLGZ1bmN0aW9uKGUpe0luKGUudGFyZ2V0LFwidGFibGVcIixkKS5maWx0ZXIoTnUpLmZvbGQoZnVuY3Rpb24oKXtTbihlLnRhcmdldCkmJnp1KG8pfSxmdW5jdGlvbihlKXtmPXEuc29tZShlKSxXdShvLGUpfSl9KSxiPVN1KHthZGp1c3RIZWlnaHQ6Q3UoW1widGFibGVcIixcImRlbHRhXCIsXCJyb3dcIl0pLGFkanVzdFdpZHRoOkN1KFtcInRhYmxlXCIsXCJkZWx0YVwiLFwiY29sdW1uXCJdKSxzdGFydEFkanVzdDpDdShbXSl9KTtyZXR1cm57ZGVzdHJveTpmdW5jdGlvbigpe2cudW5iaW5kKCkscC51bmJpbmQoKSxhLmRlc3Ryb3koKSx6dShvKX0scmVmcmVzaDpmdW5jdGlvbihlKXtXdShvLGUpfSxvbjphLm9uLG9mZjphLm9mZixoaWRlQmFyczpQKEZ1LG8pLHNob3dCYXJzOlAoSHUsbyksZXZlbnRzOmIucmVnaXN0cnl9fWZ1bmN0aW9uIHF1KGUsbil7cmV0dXJuIGUuZmlyZShcIm5ld3Jvd1wiLHtub2RlOm59KX1mdW5jdGlvbiBVdShlLG4pe3JldHVybiBlLmZpcmUoXCJuZXdjZWxsXCIse25vZGU6bn0pfWZ1bmN0aW9uIEd1KGUsbix0KXtlLmZpcmUoXCJUYWJsZU1vZGlmaWVkXCIsSyhLKHt9LHQpLHt0YWJsZTpufSkpfWZ1bmN0aW9uICR1KGUpe3JldHVybiBlLmdldFBhcmFtKFwidGFibGVfc2l6aW5nX21vZGVcIixcImF1dG9cIil9ZnVuY3Rpb24gS3UoZSl7cmV0dXJuIGUuZ2V0UGFyYW0oXCJ0YWJsZV9yZXNwb25zaXZlX3dpZHRoXCIpfWZ1bmN0aW9uIFh1KGUpe3JldHVybiBlLmdldFBhcmFtKFwidGFibGVfYm9yZGVyX3dpZHRoc1wiLFJhLFwiYXJyYXlcIil9ZnVuY3Rpb24gWXUoZSl7cmV0dXJuIGUuZ2V0UGFyYW0oXCJ0YWJsZV9ib3JkZXJfc3R5bGVzXCIsRGEsXCJhcnJheVwiKX1mdW5jdGlvbiBKdShlKXtyZXR1cm4gZS5nZXRQYXJhbShcInRhYmxlX2RlZmF1bHRfYXR0cmlidXRlc1wiLE9hLFwib2JqZWN0XCIpfWZ1bmN0aW9uIFF1KGUpe3JldHVybiBlLmdldFBhcmFtKFwidGFibGVfZGVmYXVsdF9zdHlsZXNcIixmdW5jdGlvbihlKXt2YXIgbjtpZihrYShlKSl7dmFyIHQ9ZS5kb20scj1udWxsIT09KG49dC5nZXRQYXJlbnQoZS5zZWxlY3Rpb24uZ2V0U3RhcnQoKSx0LmlzQmxvY2spKSYmdm9pZCAwIT09bj9uOmUuZ2V0Qm9keSgpLG89UXIoVmUuZnJvbURvbShyKSk7cmV0dXJuIEsoSyh7fSx4YSkse3dpZHRoOm8rXCJweFwifSl9cmV0dXJuIElhKGUpP3NlKHhhLGZ1bmN0aW9uKGUsbil7cmV0dXJuXCJ3aWR0aFwiIT09bn0pOnhhfShlKSxcIm9iamVjdFwiKX1mdW5jdGlvbiBadShlKXtyZXR1cm4gZS5nZXRQYXJhbShcInRhYmxlX2NlbGxfYWR2dGFiXCIsITAsXCJib29sZWFuXCIpfWZ1bmN0aW9uIGVpKGUpe3JldHVybiBlLmdldFBhcmFtKFwidGFibGVfcm93X2FkdnRhYlwiLCEwLFwiYm9vbGVhblwiKX1mdW5jdGlvbiBuaShlKXtyZXR1cm4gZS5nZXRQYXJhbShcInRhYmxlX2FkdnRhYlwiLCEwLFwiYm9vbGVhblwiKX1mdW5jdGlvbiB0aShlKXtyZXR1cm4gZS5nZXRQYXJhbShcInRhYmxlX3N0eWxlX2J5X2Nzc1wiLCExLFwiYm9vbGVhblwiKX1mdW5jdGlvbiByaShlKXtyZXR1cm4gZS5nZXRQYXJhbShcInRhYmxlX2NlbGxfY2xhc3NfbGlzdFwiLFtdLFwiYXJyYXlcIil9ZnVuY3Rpb24gb2koZSl7cmV0dXJuIGUuZ2V0UGFyYW0oXCJ0YWJsZV9jbGFzc19saXN0XCIsW10sXCJhcnJheVwiKX1mdW5jdGlvbiB1aShlKXtyZXR1cm5cInJlbGF0aXZlXCI9PT0kdShlKXx8ITA9PT1LdShlKX1mdW5jdGlvbiBpaShlKXt2YXIgbj1cInNlY3Rpb25cIix0PWUuZ2V0UGFyYW0oXCJ0YWJsZV9oZWFkZXJfdHlwZVwiLG4sXCJzdHJpbmdcIik7cmV0dXJuIHkoW1wic2VjdGlvblwiLFwiY2VsbHNcIixcInNlY3Rpb25DZWxsc1wiLFwiYXV0b1wiXSx0KT90Om59ZnVuY3Rpb24gY2koZSl7dmFyIG49ZS5nZXRQYXJhbShcInRhYmxlX2NvbHVtbl9yZXNpemluZ1wiLEFhLFwic3RyaW5nXCIpO3JldHVybiB3KFtcInByZXNlcnZldGFibGVcIixcInJlc2l6ZXRhYmxlXCJdLGZ1bmN0aW9uKGUpe3JldHVybiBlPT09bn0pLmdldE9yKEFhKX1mdW5jdGlvbiBsaShlKXtyZXR1cm5cInByZXNlcnZldGFibGVcIj09PWNpKGUpfWZ1bmN0aW9uIGFpKGUpe3JldHVyblwicmVzaXpldGFibGVcIj09PWNpKGUpfWZ1bmN0aW9uIGZpKGUpe3ZhciBuPWUuZ2V0UGFyYW0oXCJ0YWJsZV9jbG9uZV9lbGVtZW50c1wiKTtyZXR1cm4gVChuKT9xLnNvbWUobi5zcGxpdCgvWyAsXS8pKTpBcnJheS5pc0FycmF5KG4pP3Euc29tZShuKTpxLm5vbmUoKX1mdW5jdGlvbiBzaShlKXtyZXR1cm4gZS5nZXRQYXJhbShcInRhYmxlX2JhY2tncm91bmRfY29sb3JfbWFwXCIsW10sXCJhcnJheVwiKX1mdW5jdGlvbiBtaShlKXtyZXR1cm4gZS5nZXRQYXJhbShcInRhYmxlX2JvcmRlcl9jb2xvcl9tYXBcIixbXSxcImFycmF5XCIpfWZ1bmN0aW9uIGRpKGUsbil7cmV0dXJuKHVpKGUpP1VsOmthKGUpP3FsOlZsKShuKX1mdW5jdGlvbiBnaShlKXtXdChlLFwid2lkdGhcIil9ZnVuY3Rpb24gcGkoZSl7cmV0dXJuXCJmYWxzZVwiIT09UG4oZSxcImRhdGEtbWNlLXJlc2l6ZVwiKX1mdW5jdGlvbiBiaShwKXtmdW5jdGlvbiBtKGUpe3JldHVyblwiVEFCTEVcIj09PWUubm9kZU5hbWV9ZnVuY3Rpb24gYihlKXtyZXR1cm4gZGkocCxlKX1mdW5jdGlvbiBoKCl7cmV0dXJuKGxpKHApP2d1OmR1KSgpfXZhciBkLGcsdj1xLm5vbmUoKSx3PXEubm9uZSgpLHk9cS5ub25lKCk7cmV0dXJuIHAub24oXCJpbml0XCIsZnVuY3Rpb24oKXt2YXIgZSxuLHQscixvLHUsaSxjLGwsYSxtLGYscyxkLGc9KG49cGksKGU9cCkuaW5saW5lPyh1PVlvKGUpLHFuKGM9VmUuZnJvbVRhZyhcImRpdlwiKSx7cG9zaXRpb246XCJzdGF0aWNcIixoZWlnaHQ6XCIwXCIsd2lkdGg6XCIwXCIscGFkZGluZzpcIjBcIixtYXJnaW46XCIwXCIsYm9yZGVyOlwiMFwifSksWHQoVG4oVmUuZnJvbURvbShkb2N1bWVudCkpLGMpLGMsaT1uLHtwYXJlbnQ6QyhjKSx2aWV3OkModSksb3JpZ2luOkModW8oMCwwKSksaXNSZXNpemFibGU6aX0pOklsKFZlLmZyb21Eb20oZS5nZXREb2MoKSksbikpO3k9cS5zb21lKGcpLG89cC5nZXRQYXJhbShcIm9iamVjdF9yZXNpemluZ1wiLCEwKSwoVChvKT9cInRhYmxlXCI9PT1vOm8pJiZwLmdldFBhcmFtKFwidGFibGVfcmVzaXplX2JhcnNcIiwhMCxcImJvb2xlYW5cIikmJih0PWgoKSxsPXQsYT1iLG09Y28sZj1hbyxzPVZ1KGcpLGQ9U3Uoe2JlZm9yZVJlc2l6ZTpDdShbXCJ0YWJsZVwiLFwidHlwZVwiXSksYWZ0ZXJSZXNpemU6Q3UoW1widGFibGVcIixcInR5cGVcIl0pLHN0YXJ0RHJhZzpDdShbXSl9KSxzLmV2ZW50cy5hZGp1c3RIZWlnaHQuYmluZChmdW5jdGlvbihlKXt2YXIgbj1lLnRhYmxlO2QudHJpZ2dlci5iZWZvcmVSZXNpemUobixcInJvd1wiKTt2YXIgdCxyLG8sdSxpLGMsbCxhLGYscz1tLmRlbHRhKGUuZGVsdGEsbik7dD1uLHI9cyxvPWUucm93LHU9bSxsPSR0LmZyb21UYWJsZSh0KSxhPU8oTW8obCx0LHUsVG8sZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0T3JUaHVuayhIdCl9KSxmdW5jdGlvbihlLG4pe3JldHVybiBvPT09bj9NYXRoLm1heChyK2UsSHQoKSk6ZX0pLGk9YSxmPU8oJHQuanVzdENlbGxzKGwpLGZ1bmN0aW9uKGUpe3ZhciBuPWN1KGUucm93LGUucm93K2Uucm93c3BhbixpKTtyZXR1cm57ZWxlbWVudDplLmVsZW1lbnQsaGVpZ2h0Om4scm93c3BhbjplLnJvd3NwYW59fSksQSgoYz1hLE8obC5hbGwsZnVuY3Rpb24oZSxuKXtyZXR1cm57ZWxlbWVudDplLmVsZW1lbnQsaGVpZ2h0OmNbbl19fSkpLGZ1bmN0aW9uKGUpe2hvKGUuZWxlbWVudCxlLmhlaWdodCl9KSxBKGYsZnVuY3Rpb24oZSl7aG8oZS5lbGVtZW50LGUuaGVpZ2h0KX0pLGhvKHQsSShhLGZ1bmN0aW9uKGUsbil7cmV0dXJuIGUrbn0sMCkpLGQudHJpZ2dlci5hZnRlclJlc2l6ZShuLFwicm93XCIpfSkscy5ldmVudHMuc3RhcnRBZGp1c3QuYmluZChmdW5jdGlvbihlKXtkLnRyaWdnZXIuc3RhcnREcmFnKCl9KSxzLmV2ZW50cy5hZGp1c3RXaWR0aC5iaW5kKGZ1bmN0aW9uKGUpe3ZhciBuPWUudGFibGU7ZC50cmlnZ2VyLmJlZm9yZVJlc2l6ZShuLFwiY29sXCIpO3ZhciB0PWYuZGVsdGEoZS5kZWx0YSxuKSxyPWEobik7YXUobix0LGUuY29sdW1uLGwsciksZC50cmlnZ2VyLmFmdGVyUmVzaXplKG4sXCJjb2xcIil9KSwocj17b246cy5vbixvZmY6cy5vZmYsaGlkZUJhcnM6cy5oaWRlQmFycyxzaG93QmFyczpzLnNob3dCYXJzLGRlc3Ryb3k6cy5kZXN0cm95LGV2ZW50czpkLnJlZ2lzdHJ5fSkub24oKSxyLmV2ZW50cy5zdGFydERyYWcuYmluZChmdW5jdGlvbihlKXt2PXEuc29tZShwLnNlbGVjdGlvbi5nZXRSbmcoKSl9KSxyLmV2ZW50cy5iZWZvcmVSZXNpemUuYmluZChmdW5jdGlvbihlKXt2YXIgbix0PWUudGFibGUuZG9tLHI9cCxvPUpvKG49dCksdT1Rbyh0KSxpPVBhK2UudHlwZTtyLmZpcmUoXCJPYmplY3RSZXNpemVTdGFydFwiLHt0YXJnZXQ6bix3aWR0aDpvLGhlaWdodDp1LG9yaWdpbjppfSl9KSxyLmV2ZW50cy5hZnRlclJlc2l6ZS5iaW5kKGZ1bmN0aW9uKGUpe3ZhciBuLHQscixvLHUsaT1lLnRhYmxlLGM9aS5kb207bnUoaSksdi5lYWNoKGZ1bmN0aW9uKGUpe3Auc2VsZWN0aW9uLnNldFJuZyhlKSxwLmZvY3VzKCl9KSxuPXAscj1Kbyh0PWMpLG89UW8oYyksdT1QYStlLnR5cGUsbi5maXJlKFwiT2JqZWN0UmVzaXplZFwiLHt0YXJnZXQ6dCx3aWR0aDpyLGhlaWdodDpvLG9yaWdpbjp1fSkscC51bmRvTWFuYWdlci5hZGQoKX0pLHc9cS5zb21lKHIpKX0pLHAub24oXCJPYmplY3RSZXNpemVTdGFydFwiLGZ1bmN0aW9uKGUpe3ZhciBuLHQscixvLHU9ZS50YXJnZXQ7bSh1KSYmKG49VmUuZnJvbURvbSh1KSxBKHAuZG9tLnNlbGVjdChcIi5tY2UtY2xvbmVkcmVzaXphYmxlXCIpLGZ1bmN0aW9uKGUpe3AuZG9tLmFkZENsYXNzKGUsXCJtY2UtXCIrY2kocCkrXCItY29sdW1uc1wiKX0pLCFNbChuKSYma2EocCk/TWEobik6IUJsKG4pJiZ1aShwKSYmQmEobiksRWwobikmJkFlKGUub3JpZ2luLFBhKSYmQmEobiksZD1lLndpZHRoLGc9SWEocCk/XCJcIjoobz0odD1wKS5kb20uZ2V0U3R5bGUocj11LFwid2lkdGhcIil8fHQuZG9tLmdldEF0dHJpYihyLFwid2lkdGhcIikscS5mcm9tKG8pLmZpbHRlcihuZSkuZ2V0T3IoXCJcIikpKX0pLHAub24oXCJPYmplY3RSZXNpemVkXCIsZnVuY3Rpb24oZSl7dmFyIG4sdCxyLG8sdSxpLGMsbCxhLGYscz1lLnRhcmdldDttKHMpJiYobj1WZS5mcm9tRG9tKHMpLHQ9ZS5vcmlnaW4sQWUodCxcImNvcm5lci1cIikmJihyPW4sbz1lLndpZHRoLGY9ZWUodCxcImVcIiksXCJcIj09PWcmJkJhKHIpLG8hPT1kJiZcIlwiIT09Zz8oVm4ocixcIndpZHRoXCIsZyksdT1oKCksaT1iKHIpLGM9bGkocCl8fGY/eXUocikuY29sdW1ucy0xOjAsYXUocixvLWQsYyx1LGkpKTovXihcXGQrKFxcLlxcZCspPyklJC8udGVzdChnKSYmVm4ocixcIndpZHRoXCIsbypwYXJzZUZsb2F0KGcucmVwbGFjZShcIiVcIixcIlwiKSkvZCtcIiVcIiksL14oXFxkKyhcXC5cXGQrKT8pcHgkLy50ZXN0KGcpJiYoYT0kdC5mcm9tVGFibGUobD1yKSwkdC5oYXNDb2x1bW5zKGEpfHxBKG50KGwpLGZ1bmN0aW9uKGUpe1ZuKGUsXCJ3aWR0aFwiLFVuKGUsXCJ3aWR0aFwiKSksV3QoZSxcIndpZHRoXCIpfSkpKSxudShuKSxHdShwLG4uZG9tLENhKSl9KSxwLm9uKFwiU3dpdGNoTW9kZVwiLGZ1bmN0aW9uKCl7dy5lYWNoKGZ1bmN0aW9uKGUpe3AubW9kZS5pc1JlYWRPbmx5KCk/ZS5oaWRlQmFycygpOmUuc2hvd0JhcnMoKX0pfSkse2xhenlSZXNpemU6ZnVuY3Rpb24oKXtyZXR1cm4gd30sbGF6eVdpcmU6ZnVuY3Rpb24oKXtyZXR1cm4geS5nZXRPcihJbChWZS5mcm9tRG9tKHAuZ2V0Qm9keSgpKSxwaSkpfSxkZXN0cm95OmZ1bmN0aW9uKCl7dy5lYWNoKGZ1bmN0aW9uKGUpe2UuZGVzdHJveSgpfSkseS5lYWNoKGZ1bmN0aW9uKGUpe3ZhciBuPWU7cC5pbmxpbmUmJll0KG4ucGFyZW50KCkpfSl9fX1mdW5jdGlvbiBoaShlLG4pe3JldHVybntlbGVtZW50OmUsb2Zmc2V0Om59fWZ1bmN0aW9uIHZpKGUsbil7cmV0dXJuKGUucHJvcGVydHkoKS5pc1RleHQobik/ZS5wcm9wZXJ0eSgpLmdldFRleHQobik6ZS5wcm9wZXJ0eSgpLmNoaWxkcmVuKG4pKS5sZW5ndGh9ZnVuY3Rpb24gd2kodCxyKXsxPT09WG4odCxcImNvbHNwYW5cIikmJnlvKHQpLmJpbmQoZnVuY3Rpb24oZSl7cmV0dXJuIG89W1wiZml4ZWRcIixcInJlbGF0aXZlXCIsXCJlbXB0eVwiXSxxLmZyb20oc28uZXhlYyhlKSkuYmluZChmdW5jdGlvbihlKXt2YXIgbj1OdW1iZXIoZVsxXSksdD1lWzJdLHI9dDtyZXR1cm4gUihvLGZ1bmN0aW9uKGUpe3JldHVybiBSKGZvW2VdLGZ1bmN0aW9uKGUpe3JldHVybiByPT09ZX0pfSk/cS5zb21lKHt2YWx1ZTpuLHVuaXQ6dH0pOnEubm9uZSgpfSk7dmFyIG99KS5lYWNoKGZ1bmN0aW9uKGUpe3ZhciBuPWUudmFsdWUvMjt4byh0LG4sZS51bml0KSx4byhyLG4sZS51bml0KX0pfWZ1bmN0aW9uIHlpKGUpe3JldHVybiB6KGUsZnVuY3Rpb24oZSl7cmV0dXJuIFdhKGUuZWxlbWVudCl9KX1mdW5jdGlvbiBDaShlKXt2YXIgbj1cInRoZWFkXCI9PT1lLnNlY3Rpb24sdD1MbihqYShlLmNlbGxzKSxcInRoXCIpO3JldHVybiBufHx0P3t0eXBlOlwiaGVhZGVyXCIsc3ViVHlwZTpuJiZ0P1wic2VjdGlvbkNlbGxzXCI6bj9cInNlY3Rpb25cIjpcImNlbGxzXCJ9OlwidGZvb3RcIj09PWUuc2VjdGlvbj97dHlwZTpcImZvb3RlclwifTp7dHlwZTpcImJvZHlcIn19ZnVuY3Rpb24gU2koZSxuLHQpe3JldHVybiB3ZSh0KGUuZWxlbWVudCxuKSwhMCxlLmlzTG9ja2VkKX1mdW5jdGlvbiBUaShlLG4pe3JldHVybiBlLnNlY3Rpb24hPT1uP3llKGUuZWxlbWVudCxlLmNlbGxzLG4sZS5pc05ldyk6ZX1mdW5jdGlvbiB4aSgpe3JldHVybnt0cmFuc2Zvcm1Sb3c6VGksdHJhbnNmb3JtQ2VsbDpmdW5jdGlvbihlLG4sdCl7dmFyIHIsbyx1PXQoZS5lbGVtZW50LG4pO3JldHVybiB3ZShcInRkXCIhPT1ZZSh1KT8obz1zcihyPXUsXCJ0ZFwiKSxSdChyLG8pLEl0KG8sbG4ocikpLFl0KHIpLG8pOnUsZS5pc05ldyxlLmlzTG9ja2VkKX19fWZ1bmN0aW9uIFJpKCl7cmV0dXJue3RyYW5zZm9ybVJvdzpUaSx0cmFuc2Zvcm1DZWxsOlNpfX1mdW5jdGlvbiBEaSgpe3JldHVybnt0cmFuc2Zvcm1Sb3c6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gVGkoZSxcInRoZWFkXCI9PT1uP1widGJvZHlcIjpuKX0sdHJhbnNmb3JtQ2VsbDpTaX19ZnVuY3Rpb24gT2koZSxuLHQscil7dD09PXI/V3QoZSxuKTpNbihlLG4sdCl9ZnVuY3Rpb24gQWkoZSxuLHQpe0YobW4oZSxuKSkuZm9sZChmdW5jdGlvbigpe3JldHVybiBPdChlLHQpfSxmdW5jdGlvbihlKXtyZXR1cm4gRHQoZSx0KX0pfWZ1bmN0aW9uIGtpKHUsZSl7ZnVuY3Rpb24gdChlLG4pe3ZhciB0LHIsbztJdCgoQnQobz1Bbih0PXUscj1uKS5nZXRPclRodW5rKGZ1bmN0aW9uKCl7dmFyIGU9VmUuZnJvbVRhZyhyLG5uKHQpLmRvbSk7cmV0dXJuXCJ0aGVhZFwiPT09cj9BaSh0LFwiY2FwdGlvbixjb2xncm91cFwiLGUpOlwiY29sZ3JvdXBcIj09PXI/QWkodCxcImNhcHRpb25cIixlKTpYdCh0LGUpLGV9KSksbyksKFwiY29sZ3JvdXBcIj09PW4/ZnVuY3Rpb24oZSl7cmV0dXJuIE4oZSxmdW5jdGlvbihlKXtyZXR1cm4gTyhlLmNlbGxzLGZ1bmN0aW9uKGUpe3JldHVybiBPaShlLmVsZW1lbnQsXCJzcGFuXCIsZS5jb2xzcGFuLDEpLGUuZWxlbWVudH0pfSl9OmZ1bmN0aW9uKGUpe3JldHVybiBPKGUsZnVuY3Rpb24oZSl7ZS5pc05ldyYmaS5wdXNoKGUuZWxlbWVudCk7dmFyIG49ZS5lbGVtZW50O3JldHVybiBCdChuKSxBKGUuY2VsbHMsZnVuY3Rpb24oZSl7ZS5pc05ldyYmYy5wdXNoKGUuZWxlbWVudCksT2koZS5lbGVtZW50LFwiY29sc3BhblwiLGUuY29sc3BhbiwxKSxPaShlLmVsZW1lbnQsXCJyb3dzcGFuXCIsZS5yb3dzcGFuLDEpLFh0KG4sZS5lbGVtZW50KX0pLG59KX0pKGUpKX1mdW5jdGlvbiBuKGUsbil7MDxlLmxlbmd0aD90KGUsbik6QW4odSxuKS5lYWNoKFl0KX12YXIgaT1bXSxjPVtdLHI9W10sbz1bXSxsPVtdLGE9W107cmV0dXJuIEEoZSxmdW5jdGlvbihlKXtzd2l0Y2goZS5zZWN0aW9uKXtjYXNlXCJ0aGVhZFwiOnIucHVzaChlKTticmVhaztjYXNlXCJ0Ym9keVwiOm8ucHVzaChlKTticmVhaztjYXNlXCJ0Zm9vdFwiOmwucHVzaChlKTticmVhaztjYXNlXCJjb2xncm91cFwiOmEucHVzaChlKX19KSxuKGEsXCJjb2xncm91cFwiKSxuKHIsXCJ0aGVhZFwiKSxuKG8sXCJ0Ym9keVwiKSxuKGwsXCJ0Zm9vdFwiKSx7bmV3Um93czppLG5ld0NlbGxzOmN9fWZ1bmN0aW9uIElpKGUsbil7aWYoMD09PWUubGVuZ3RoKXJldHVybiAwO3ZhciB0PWVbMF07cmV0dXJuIGIoZSxmdW5jdGlvbihlKXtyZXR1cm4hbih0LmVsZW1lbnQsZS5lbGVtZW50KX0pLmdldE9yKGUubGVuZ3RoKX1mdW5jdGlvbiBCaShtLGQpe3ZhciBnPU8obSxmdW5jdGlvbihlKXtyZXR1cm4gTyhlLmNlbGxzLHYpfSk7cmV0dXJuIE8obSxmdW5jdGlvbihlLHMpe3ZhciBuPU4oZS5jZWxscyxmdW5jdGlvbihlLG4pe2lmKCExIT09Z1tzXVtuXSlyZXR1cm5bXTt2YXIgdCxyLG8sdSxpLGMsbCxhLGY9KG89bix1PWQsbD0odD1tKVtyPXNdLGE9XCJjb2xncm91cFwiPT09bC5zZWN0aW9uLHtjb2xzcGFuOklpKGwuY2VsbHMuc2xpY2UobyksdSkscm93c3BhbjphPzE6SWkoKGk9dC5zbGljZShyKSxjPW8sTyhpLGZ1bmN0aW9uKGUpe3JldHVybiBzdChlLGMpfSkpLHUpfSk7cmV0dXJuIGZ1bmN0aW9uKGUsbix0LHIpe2Zvcih2YXIgbz1lO288ZSt0O28rKylmb3IodmFyIHU9bjt1PG4rcjt1KyspZ1tvXVt1XT0hMH0ocyxuLGYucm93c3BhbixmLmNvbHNwYW4pLFt7ZWxlbWVudDplLmVsZW1lbnQscm93c3BhbjpmLnJvd3NwYW4sY29sc3BhbjpmLmNvbHNwYW4saXNOZXc6ZS5pc05ld31dfSk7cmV0dXJue2VsZW1lbnQ6ZS5lbGVtZW50LGNlbGxzOm4sc2VjdGlvbjplLnNlY3Rpb24saXNOZXc6ZS5pc05ld319KX1mdW5jdGlvbiBNaShvLHUsaSl7dmFyIGM9W107QShvLmNvbGdyb3VwcyxmdW5jdGlvbihlKXtmb3IodmFyIG49W10sdD0wO3Q8by5ncmlkLmNvbHVtbnM7dCsrKXt2YXIgcj0kdC5nZXRDb2x1bW5BdChvLHQpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gd2UoZS5lbGVtZW50LGksITEpfSkuZ2V0T3JUaHVuayhmdW5jdGlvbigpe3JldHVybiB3ZSh1LmNvbEdhcCgpLCEwLCExKX0pO24ucHVzaChyKX1jLnB1c2goeWUoZS5lbGVtZW50LG4sXCJjb2xncm91cFwiLGkpKX0pO2Zvcih2YXIgZT0wO2U8by5ncmlkLnJvd3M7ZSsrKXtmb3IodmFyIG49W10sdD0wO3Q8by5ncmlkLmNvbHVtbnM7dCsrKXt2YXIgcj0kdC5nZXRBdChvLGUsdCkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiB3ZShlLmVsZW1lbnQsaSxlLmlzTG9ja2VkKX0pLmdldE9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gd2UodS5nYXAoKSwhMCwhMSl9KTtuLnB1c2gocil9dmFyIGw9by5hbGxbZV0sYT15ZShsLmVsZW1lbnQsbixsLnNlY3Rpb24saSk7Yy5wdXNoKGEpfXJldHVybiBjfWZ1bmN0aW9uIEVpKGUpe3JldHVybiBCaShlLGNlKX1mdW5jdGlvbiBQaShlLG4pe3JldHVybiBIKGUuYWxsLGZ1bmN0aW9uKGUpe3JldHVybiB3KGUuY2VsbHMsZnVuY3Rpb24oZSl7cmV0dXJuIGNlKG4sZS5lbGVtZW50KX0pfSl9ZnVuY3Rpb24gTmkobixlLHQpe3ZhciByPV9uKE8oZS5zZWxlY3Rpb24sZnVuY3Rpb24oZSl7cmV0dXJuIGV0KGUpLmJpbmQoZnVuY3Rpb24oZSl7cmV0dXJuIFBpKG4sZSl9KS5maWx0ZXIodCl9KSk7cmV0dXJuIGpuKDA8ci5sZW5ndGgscil9ZnVuY3Rpb24gemkoZixuLHMsbSxkKXtyZXR1cm4gZnVuY3Rpb24obyx1LGUsaSxjKXt2YXIgbD0kdC5mcm9tVGFibGUodSksYT1xLmZyb20obnVsbD09Yz92b2lkIDA6Yy5zZWN0aW9uKS5nZXRPclRodW5rKFBsKTtyZXR1cm4gbihsLGUpLm1hcChmdW5jdGlvbihlKXt2YXIgbj1NaShsLGksITEpLHQ9ZihuLGUsY2UsZChpKSxhKSxyPWh0KHQuZ3JpZCk7cmV0dXJue2luZm86ZSxncmlkOkVpKHQuZ3JpZCksY3Vyc29yOnQuY3Vyc29yLGxvY2tlZENvbHVtbnM6cn19KS5iaW5kKGZ1bmN0aW9uKGUpe3ZhciBuPWtpKHUsZS5ncmlkKSx0PXEuZnJvbShudWxsPT1jP3ZvaWQgMDpjLnNpemluZykuZ2V0T3JUaHVuayhmdW5jdGlvbigpe3JldHVybiBWbCh1KX0pLHI9cS5mcm9tKG51bGw9PWM/dm9pZCAwOmMucmVzaXplKS5nZXRPclRodW5rKGd1KTtyZXR1cm4gcyh1LGUuZ3JpZCxlLmluZm8se3NpemluZzp0LHJlc2l6ZTpyLHNlY3Rpb246YX0pLG0odSksV3Uobyx1KSxXdCh1LEd0KSwwPGUubG9ja2VkQ29sdW1ucy5sZW5ndGgmJk1uKHUsR3QsZS5sb2NrZWRDb2x1bW5zLmpvaW4oXCIsXCIpKSxxLnNvbWUoe2N1cnNvcjplLmN1cnNvcixuZXdSb3dzOm4ubmV3Um93cyxuZXdDZWxsczpuLm5ld0NlbGxzfSl9KX19ZnVuY3Rpb24gTGkoZSxuKXtyZXR1cm4gTmkoZSxuLHgpLm1hcChmdW5jdGlvbihlKXtyZXR1cm57Y2VsbHM6ZSxnZW5lcmF0b3JzOm4uZ2VuZXJhdG9ycyxjbGlwYm9hcmQ6bi5jbGlwYm9hcmR9fSl9ZnVuY3Rpb24gX2koZSxuKXtyZXR1cm4gTmkoZSxuLHgpfWZ1bmN0aW9uIFdpKGUsbil7cmV0dXJuIE5pKGUsbixmdW5jdGlvbihlKXtyZXR1cm4hZS5pc0xvY2tlZH0pfWZ1bmN0aW9uIGppKG4sZSl7cmV0dXJuIHooZSxmdW5jdGlvbihlKXtyZXR1cm4gUGkobixlKS5leGlzdHMoZnVuY3Rpb24oZSl7cmV0dXJuIWUuaXNMb2NrZWR9KX0pfWZ1bmN0aW9uIEZpKG4sZSl7cmV0dXJuIGUubWVyZ2FibGUuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBqaShuLGUuY2VsbHMpfSl9ZnVuY3Rpb24gSGkobixlKXtyZXR1cm4gZS51bm1lcmdhYmxlLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gamkobixlKX0pfWZ1bmN0aW9uIFZpKGUsbix0LHIpe2Zvcih2YXIgbz1ndChlKS5yb3dzLHU9ITAsaT0wO2k8by5sZW5ndGg7aSsrKWZvcih2YXIgYz0wO2M8ZHQob1swXSk7YysrKXt2YXIgbD1vW2ldLGE9c3QobCxjKSxmPXQoYS5lbGVtZW50LG4pOyEwPT09ZiYmITE9PT11P2Z0KGwsYyx3ZShyKCksITAsYS5pc0xvY2tlZCkpOiEwPT09ZiYmKHU9ITEpfXJldHVybiBlfWZ1bmN0aW9uIHFpKGUsdCxpLGMpe3ZhciBuLHIsbD1ndChlKS5yb3dzO3JldHVybiAwPHQmJnQ8bC5sZW5ndGgmJihuPWxbdC0xXS5jZWxscyxyPWksQShCKG4sZnVuY3Rpb24oZSxuKXtyZXR1cm4gUihlLGZ1bmN0aW9uKGUpe3JldHVybiByKGUuZWxlbWVudCxuLmVsZW1lbnQpfSk/ZTplLmNvbmNhdChbbl0pfSxbXSksZnVuY3Rpb24oZSl7Zm9yKHZhciBvPXEubm9uZSgpLHU9dDt1PGwubGVuZ3RoO3UrKylmb3IodmFyIG49MDtuPGR0KGxbMF0pO24rKykhZnVuY3Rpb24obil7dmFyIHQ9bFt1XSxyPXN0KHQsbik7aShyLmVsZW1lbnQsZS5lbGVtZW50KSYmKG89by5pc05vbmUoKT9xLnNvbWUoYygpKTpvKS5lYWNoKGZ1bmN0aW9uKGUpe2Z0KHQsbix3ZShlLCEwLHIuaXNMb2NrZWQpKX0pfShuKX0pKSxlfWZ1bmN0aW9uIFVpKGUsbil7cmV0dXJue3Jvd0RlbHRhOjAsY29sRGVsdGE6ZHQoZVswXSktZHQoblswXSl9fWZ1bmN0aW9uIEdpKGUsbil7cmV0dXJue3Jvd0RlbHRhOmUubGVuZ3RoLW4ubGVuZ3RoLGNvbERlbHRhOjB9fWZ1bmN0aW9uICRpKGUsbix0LHIpe3ZhciBvPVwiY29sZ3JvdXBcIj09PW4uc2VjdGlvbj90LmNvbDp0LmNlbGw7cmV0dXJuIEQoZSxmdW5jdGlvbihlKXtyZXR1cm4gd2UobygpLCEwLHIoZSkpfSl9ZnVuY3Rpb24gS2koZSxuLHIsbyl7dmFyIHU9ZVtlLmxlbmd0aC0xXTtyZXR1cm4gZS5jb25jYXQoRChuLGZ1bmN0aW9uKCl7dmFyIGU9XCJjb2xncm91cFwiPT09dS5zZWN0aW9uP3IuY29sZ3JvdXA6ci5yb3csbj1wdCh1LGUsUyksdD0kaShuLmNlbGxzLmxlbmd0aCxuLHIsZnVuY3Rpb24oZSl7cmV0dXJuIEtlKG8sZS50b1N0cmluZygpKX0pO3JldHVybiBVdChuLHQpfSkpfWZ1bmN0aW9uIFhpKGUsdCxyLG8pe3JldHVybiBPKGUsZnVuY3Rpb24oZSl7dmFyIG49JGkodCxlLHIsdik7cmV0dXJuIGx0KGUsbyxuKX0pfWZ1bmN0aW9uIFlpKGUsbix0KXt2YXIgcj1uLmNvbERlbHRhPDA/WGk6UyxvPW4ucm93RGVsdGE8MD9LaTpTLHU9aHQoZSksaT1kdChlWzBdKSxjPVIodSxmdW5jdGlvbihlKXtyZXR1cm4gZT09PWktMX0pLGw9cihlLE1hdGguYWJzKG4uY29sRGVsdGEpLHQsYz9pLTE6aSksYT1odChsKTtyZXR1cm4gbyhsLE1hdGguYWJzKG4ucm93RGVsdGEpLHQsTChhLHgpKX1mdW5jdGlvbiBKaShuLHQsZSl7cmV0dXJuIGsoZSxmdW5jdGlvbihlKXtyZXR1cm4gZT49bi5jb2x1bW4mJmU8PWR0KHRbMF0pK24uY29sdW1ufSl9ZnVuY3Rpb24gUWkoZSx1LG4saSxjKXt2YXIgdCxyLG8sbD1odCh1KSxhPSh0PWUscj1sLG89ZHQodVswXSkse3JvdzpndCh1KS5jb2xzLmxlbmd0aCt0LnJvdyxjb2x1bW46dyhEKG8tdC5jb2x1bW4sZnVuY3Rpb24oZSl7cmV0dXJuIGUrdC5jb2x1bW59KSxmdW5jdGlvbihuKXtyZXR1cm4geihyLGZ1bmN0aW9uKGUpe3JldHVybiBlIT09bn0pfSkuZ2V0T3Ioby0xKX0pLGY9Z3Qobikucm93cyxzPUppKGEsZixsKTtyZXR1cm4gZnVuY3Rpb24oZSxuLHQpe2lmKGUucm93Pj1uLmxlbmd0aHx8ZS5jb2x1bW4+ZHQoblswXSkpcmV0dXJuIEdhLmVycm9yKFwiaW52YWxpZCBzdGFydCBhZGRyZXNzIG91dCBvZiB0YWJsZSBib3VuZHMsIHJvdzogXCIrZS5yb3crXCIsIGNvbHVtbjogXCIrZS5jb2x1bW4pO3ZhciByPW4uc2xpY2UoZS5yb3cpLG89clswXS5jZWxscy5zbGljZShlLmNvbHVtbiksdT1kdCh0WzBdKSxpPXQubGVuZ3RoO3JldHVybiBHYS52YWx1ZSh7cm93RGVsdGE6ci5sZW5ndGgtaSxjb2xEZWx0YTpvLmxlbmd0aC11fSl9KGEsdSxmKS5tYXAoZnVuY3Rpb24oZSl7dmFyIG49SyhLKHt9LGUpLHtjb2xEZWx0YTplLmNvbERlbHRhLXMubGVuZ3RofSksdD1ZaSh1LG4saSkscj1odCh0KSxvPUppKGEsZixyKTtyZXR1cm4gZnVuY3Rpb24oZSxuLHQscixvLHUpe2Zvcih2YXIgaSxjLGwsYSxmLHM9ZS5yb3csbT1lLmNvbHVtbixkPXMrdC5sZW5ndGgsZz1tK2R0KHRbMF0pK3UubGVuZ3RoLHA9TCh1LHgpLGI9cztiPGQ7YisrKWZvcih2YXIgaCx2LHcseT0wLEM9bTtDPGc7QysrKXBbQ10/eSsrOihsPUMsYT12b2lkIDAsYT1QKG8sc3QoKGk9bilbYz1iXSxsKS5lbGVtZW50KSxmPWlbY10sMTxpLmxlbmd0aCYmMTxkdChmKSYmKDA8bCYmYShtdChmLGwtMSkpfHxsPGYuY2VsbHMubGVuZ3RoLTEmJmEobXQoZixsKzEpKXx8MDxjJiZhKG10KGlbYy0xXSxsKSl8fGM8aS5sZW5ndGgtMSYmYShtdChpW2MrMV0sbCkpKSYmVmkobixtdChuW2JdLEMpLG8sci5jZWxsKSx2PShoPXN0KHRbYi1zXSxDLW0teSkpLmVsZW1lbnQsdz1yLnJlcGxhY2UodiksZnQobltiXSxDLHdlKHcsITAsaC5pc0xvY2tlZCkpKTtyZXR1cm4gbn0oYSx0LGYsaSxjLG8pfSl9ZnVuY3Rpb24gWmkodCxlLG4scixvKXt2YXIgdT10LGk9byxjPXIuY2VsbDswPHUmJnU8ZVswXS5jZWxscy5sZW5ndGgmJkEoZSxmdW5jdGlvbihlKXt2YXIgbj1lLmNlbGxzW3UtMV0sdD1lLmNlbGxzW3VdO2kodC5lbGVtZW50LG4uZWxlbWVudCkmJmZ0KGUsdSx3ZShjKCksITAsdC5pc0xvY2tlZCkpfSk7dmFyIGw9WWkobixHaShuLGUpLHIpO3JldHVybiBPKFlpKGUsR2koZSxsKSxyKSxmdW5jdGlvbihlLG4pe3JldHVybiBsdChlLHQsbFtuXS5jZWxscyl9KX1mdW5jdGlvbiBlYyhlLG4sdCxyLG8pe3FpKG4sZSxvLHIuY2VsbCk7dmFyIHUsaSxjPWh0KG4pLGw9VWkobix0KSxhPVlpKG4sSyhLKHt9LGwpLHtjb2xEZWx0YTpsLmNvbERlbHRhLWMubGVuZ3RofSksciksZj1ndChhKSxzPWYuY29scyxtPWYucm93cyxkPWh0KGEpLGc9VWkodCxuKSxwPUsoSyh7fSxnKSx7Y29sRGVsdGE6Zy5jb2xEZWx0YStkLmxlbmd0aH0pLGI9WWkoKHU9cixpPWQsTyh0LGZ1bmN0aW9uKHQpe3JldHVybiBCKGksZnVuY3Rpb24oZSxuKXtyZXR1cm4gYXQoZSxuLCRpKDEsdCx1LHgpWzBdKX0sdCl9KSkscCxyKTtyZXR1cm4gcy5jb25jYXQobS5zbGljZSgwLGUpKS5jb25jYXQoYikuY29uY2F0KG0uc2xpY2UoZSxtLmxlbmd0aCkpfWZ1bmN0aW9uIG5jKGUsdCxuLHIsbyl7dmFyIHUsaSxjLGwsYT1ndChlKSxmPWEucm93cyxzPWEuY29scyxtPWYuc2xpY2UoMCx0KSxkPWYuc2xpY2UodCksZz0odT1mW25dLGk9ZnVuY3Rpb24oZSxuKXtyZXR1cm4gMDx0JiZ0PGYubGVuZ3RoJiZyKG10KGZbdC0xXSxuKSxtdChmW3RdLG4pKT9zdChmW3RdLG4pOndlKG8oZS5lbGVtZW50LHIpLCEwLGUuaXNMb2NrZWQpfSxjPXIsbD1vLHB0KHUsZnVuY3Rpb24oZSl7cmV0dXJuIGwoZSxjKX0saSkpO3JldHVybiBzLmNvbmNhdChtKS5jb25jYXQoW2ddKS5jb25jYXQoZCl9ZnVuY3Rpb24gdGMoZSx1LGksYyxsKXtyZXR1cm4gTyhlLGZ1bmN0aW9uKGUpe3ZhciBuLHQscj0wPHUmJnU8ZHQoZSkmJmMobXQoZSx1LTEpLG10KGUsdSkpLG89KG49ZS5zZWN0aW9uLHQ9bCxcImNvbGdyb3VwXCIhPT1uJiZyP3N0KGUsdSk6d2UodChzdChlLGkpLmVsZW1lbnQsYyksITAsITEpKTtyZXR1cm4gYXQoZSx1LG8pfSl9ZnVuY3Rpb24gcmMoZSxuLHQscil7cmV0dXJuIHZvaWQgMCE9PW10KCh1PWUpW2k9bl0sdCkmJjA8aSYmcihtdCh1W2ktMV0sdCksbXQodVtpXSx0KSl8fChvPWVbbl0sMDx0JiZyKG10KG8sdC0xKSxtdChvLHQpKSk7dmFyIG8sdSxpfWZ1bmN0aW9uIG9jKGUsbix0LHIpe2Z1bmN0aW9uIG8oZSl7cmV0dXJuKFwicm93XCI9PT1lP0puOlluKShuKT9lK1wiZ3JvdXBcIjplfXJldHVybiBlP1dhKG4pP28odCk6bnVsbDpyJiZXYShuKT9vKFwicm93XCI9PT10P1wiY29sXCI6XCJyb3dcIik6bnVsbH1mdW5jdGlvbiB1YyhlLG4sdCl7cmV0dXJuIHdlKHQoZS5lbGVtZW50LG4pLCEwLGUuaXNMb2NrZWQpfWZ1bmN0aW9uIGljKGUsdSxpLGMsbCxhLGYpe3JldHVybiBPKGUsZnVuY3Rpb24oZSxvKXtyZXR1cm4gdD1mdW5jdGlvbihlLG4pe2lmKHQ9ZSxSKHUsZnVuY3Rpb24oZSl7cmV0dXJuIGkodC5lbGVtZW50LGUuZWxlbWVudCl9KSl7dmFyIHI9ZihlLG8sbik/bChlLGksYyk6ZTtyZXR1cm4gYShyLG8sbikuZWFjaChmdW5jdGlvbihlKXt2YXIgdD1yLmVsZW1lbnQ7YWUoe3Njb3BlOnEuZnJvbShlKX0sZnVuY3Rpb24oZSxuKXtlLmZvbGQoZnVuY3Rpb24oKXtXdCh0LG4pfSxmdW5jdGlvbihlKXtCbih0LmRvbSxuLGUpfSl9KX0pLHJ9cmV0dXJuIGU7dmFyIHR9LHI9Tygobj1lKS5jZWxscyx0KSx5ZShuLmVsZW1lbnQscixuLnNlY3Rpb24sbi5pc05ldyk7dmFyIG4sdCxyfSl9ZnVuY3Rpb24gY2ModCxyLG8pe3JldHVybiBOKHQsZnVuY3Rpb24oZSxuKXtyZXR1cm4gcmModCxuLHIsbyk/W106W3N0KGUscildfSl9ZnVuY3Rpb24gbGMoZSxuLHQscixvKXt2YXIgdSxpLGMsbCxhPWd0KGUpLnJvd3MsZj1OKG4sZnVuY3Rpb24oZSl7cmV0dXJuIGNjKGEsZSxyKX0pLHM9TyhlLGZ1bmN0aW9uKGUpe3JldHVybiB5aShlLmNlbGxzKX0pLG09KHU9Zix6KGk9cyxTKSYmeWkodSk/eDpmdW5jdGlvbihlLG4sdCl7cmV0dXJuIShcInRoXCI9PT1ZZShlLmVsZW1lbnQpJiZpW25dKX0pLGQ9KGM9dCxsPXMsZnVuY3Rpb24oZSxuKXtyZXR1cm4gcS5zb21lKG9jKGMsZS5lbGVtZW50LFwicm93XCIsbFtuXSkpfSk7cmV0dXJuIGljKGUsZixyLG8sdWMsZCxtKX1mdW5jdGlvbiBhYyhlLG4sdCxyKXt2YXIgbz1ndChlKS5yb3dzO3JldHVybiBpYyhlLE8obixmdW5jdGlvbihlKXtyZXR1cm4gc3Qob1tlLnJvd10sZS5jb2x1bW4pfSksdCxyLHVjLHEubm9uZSx4KX1mdW5jdGlvbiBmYyhlKXtyZXR1cm4gQihlLGZ1bmN0aW9uKGUsbil7cmV0dXJuIFIoZSxmdW5jdGlvbihlKXtyZXR1cm4gZS5jb2x1bW49PT1uLmNvbHVtbn0pP2U6ZS5jb25jYXQoW25dKX0sW10pLnNvcnQoZnVuY3Rpb24oZSxuKXtyZXR1cm4gZS5jb2x1bW4tbi5jb2x1bW59KX1mdW5jdGlvbiBzYyhlKXtyZXR1cm5cInRyXCI9PT1ZZShlKXx8S2EoZSl9ZnVuY3Rpb24gbWMoZSl7cmV0dXJue2VsZW1lbnQ6ZSxjb2xzcGFuOktuKGUsXCJjb2xzcGFuXCIsMSkscm93c3BhbjpLbihlLFwicm93c3BhblwiLDEpfX1mdW5jdGlvbiBkYyhlKXtyZXR1cm4gTm4oZSxcInNjb3BlXCIpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS5zdWJzdHIoMCwzKX0pfWZ1bmN0aW9uIGdjKGUpe3JldHVybiBuPWUsdD1ZYS5wcm9wZXJ0eSgpLm5hbWUobikseShYYSx0KTt2YXIgbix0fWZ1bmN0aW9uIHBjKGUpe3JldHVybiBuPWUseShbXCJvbFwiLFwidWxcIl0sWWEucHJvcGVydHkoKS5uYW1lKG4pKTt2YXIgbn1mdW5jdGlvbiBiYyhlKXtmdW5jdGlvbiB1KGUpe3JldHVyblwiYnJcIj09PVllKGUpfWZ1bmN0aW9uIHQobyl7cmV0dXJuIGpvKG8pLmJpbmQoZnVuY3Rpb24odCl7dmFyIHI9Y24odCkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiEhZ2MoZSl8fChuPWUsISF5KFtcImJyXCIsXCJpbWdcIixcImhyXCIsXCJpbnB1dFwiXSxZYS5wcm9wZXJ0eSgpLm5hbWUobikpJiZcImltZ1wiIT09WWUoZSkpO3ZhciBufSkuZ2V0T3IoITEpO3JldHVybiBybih0KS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuITA9PT1yfHxcImxpXCI9PT1ZZShuPWUpfHxEbihuLHBjKS5pc1NvbWUoKXx8dSh0KXx8Z2MoZSkmJiFjZShvLGUpP1tdOltWZS5mcm9tVGFnKFwiYnJcIildO3ZhciBufSl9KS5nZXRPcihbXSl9dmFyIG4scj0wPT09KG49TihlLGZ1bmN0aW9uKGUpe3ZhciBuPWxuKGUpO3JldHVybiB6KG4sZnVuY3Rpb24oZSl7cmV0dXJuIHUoZSl8fHBuKGUpJiYwPT09RXQoZSkudHJpbSgpLmxlbmd0aH0pP1tdOm4uY29uY2F0KHQoZSkpfSkpLmxlbmd0aD9bVmUuZnJvbVRhZyhcImJyXCIpXTpuO0J0KGVbMF0pLEl0KGVbMF0scil9ZnVuY3Rpb24gaGMoZSl7cmV0dXJuIE51KGUsITApfWZ1bmN0aW9uIHZjKGUpezA9PT1udChlKS5sZW5ndGgmJll0KGUpfWZ1bmN0aW9uIHdjKGUsbil7cmV0dXJue2dyaWQ6ZSxjdXJzb3I6bn19ZnVuY3Rpb24geWMoZSxuLHQpe3ZhciByLG8sdSxpLGMsbD0ocj1uLG89dCxjPWd0KGUpLnJvd3MscS5mcm9tKG51bGw9PT0oaT1udWxsPT09KHU9Y1tyXSl8fHZvaWQgMD09PXU/dm9pZCAwOnUuY2VsbHNbb10pfHx2b2lkIDA9PT1pP3ZvaWQgMDppLmVsZW1lbnQpLmZpbHRlcihoYykub3JUaHVuayhmdW5jdGlvbigpe3JldHVybiBIKGMsZnVuY3Rpb24oZSl7cmV0dXJuIEgoZS5jZWxscyxmdW5jdGlvbihlKXt2YXIgbj1lLmVsZW1lbnQ7cmV0dXJuIGpuKGhjKG4pLG4pfSl9KX0pKTtyZXR1cm4gd2MoZSxsKX1mdW5jdGlvbiBDYyhlKXtyZXR1cm4gQihlLGZ1bmN0aW9uKGUsbil7cmV0dXJuIFIoZSxmdW5jdGlvbihlKXtyZXR1cm4gZS5yb3c9PT1uLnJvd30pP2U6ZS5jb25jYXQoW25dKX0sW10pLnNvcnQoZnVuY3Rpb24oZSxuKXtyZXR1cm4gZS5yb3ctbi5yb3d9KX1mdW5jdGlvbiBTYyh1LGkpe3JldHVybiBmdW5jdGlvbihlLG4sdCxyLG8pe3JldHVybiB5YyhmdW5jdGlvbihlLG4sdCxyLHUsbyxpKXt2YXIgYz1ndChlKSxsPWMuY29scyxhPWMucm93cyxmPWFbblswXV0scz1OKG4sZnVuY3Rpb24oZSl7cmV0dXJuIG89dSxOKCh0PWEpW3I9ZV0uY2VsbHMsZnVuY3Rpb24oZSxuKXtyZXR1cm4gcmModCxyLG4sbyk/W106W2VdfSk7dmFyIHQscixvfSksbT1PKGYuY2VsbHMsZnVuY3Rpb24oZSxuKXtyZXR1cm4geWkoY2MoYSxuLHUpKX0pLGQ9WChbXSxhLCEwKTtBKG4sZnVuY3Rpb24oZSl7ZFtlXT1pLnRyYW5zZm9ybVJvdyhhW2VdLHQpfSk7dmFyIGcscCxiLGgsdj1sLmNvbmNhdChkKSx3PShnPWYseihwPW0sUykmJnlpKGcuY2VsbHMpP3g6ZnVuY3Rpb24oZSxuLHQpe3JldHVybiEoXCJ0aFwiPT09WWUoZS5lbGVtZW50KSYmcFt0XSl9KSx5PShiPXIsaD1tLGZ1bmN0aW9uKGUsbix0KXtyZXR1cm4gcS5zb21lKG9jKGIsZS5lbGVtZW50LFwiY29sXCIsaFt0XSkpfSk7cmV0dXJuIGljKHYscyx1LG8saS50cmFuc2Zvcm1DZWxsLHksdyl9KGUsTyhDYyhuKSxmdW5jdGlvbihlKXtyZXR1cm4gZS5yb3d9KSx1LGksdCxyLnJlcGxhY2VPckluaXQsbyksblswXS5yb3csblswXS5jb2x1bW4pfX1mdW5jdGlvbiBUYyhlLG4sdCl7dmFyIHIsbz0ocj10LnNlY3Rpb24sdXQoZSxmdW5jdGlvbigpe3JldHVybiByfSkpO3JldHVybiBNaSgkdC5nZW5lcmF0ZShvKSxuLCEwKX1mdW5jdGlvbiB4YyhlLG4sdCxyKXt2YXIgbz1yLnNpemluZyx1PSR0LmdlbmVyYXRlKG4pO2x1KHUsby5nZXRXaWR0aHModSxvKSxvKX1mdW5jdGlvbiBSYyhlLG4sdCxyKXt2YXIgbz10LHU9ci5zaXppbmcsaT1yLnJlc2l6ZSxjPSR0LmdlbmVyYXRlKG4pLGw9dS5nZXRXaWR0aHMoYyx1KSxhPXUucGl4ZWxXaWR0aCgpLGY9aS5jYWxjUmVkZXN0cmlidXRlZFdpZHRocyhsLGEsby5waXhlbERlbHRhLHUuaXNSZWxhdGl2ZSkscz1mLm5ld1NpemVzLG09Zi5kZWx0YTtsdShjLHMsdSksdS5hZGp1c3RUYWJsZVdpZHRoKG0pfWZ1bmN0aW9uIERjKGUsbil7cmV0dXJuIFIobixmdW5jdGlvbihlKXtyZXR1cm4gMD09PWUuY29sdW1uJiZlLmlzTG9ja2VkfSl9ZnVuY3Rpb24gT2MobixlKXtyZXR1cm4gUihlLGZ1bmN0aW9uKGUpe3JldHVybiBlLmNvbHVtbitlLmNvbHNwYW4+PW4uZ3JpZC5jb2x1bW5zJiZlLmlzTG9ja2VkfSl9ZnVuY3Rpb24gQWMoZSxuKXt2YXIgdD15cihlKTtyZXR1cm4gQihmYyhuKSxmdW5jdGlvbihlLG4pe3JldHVybiBlK3Rbbi5jb2x1bW5dLm1hcCh3cikuZ2V0T3IoMCl9LDApfWZ1bmN0aW9uIGtjKHQpe3JldHVybiBmdW5jdGlvbihuLGUpe3JldHVybiBfaShuLGUpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4hKHQ/RGM6T2MpKG4sZSl9KS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJue2RldGFpbHM6ZSxwaXhlbERlbHRhOkFjKG4sZSl9fSl9fWZ1bmN0aW9uIEljKHQpe3JldHVybiBmdW5jdGlvbihuLGUpe3JldHVybiBMaShuLGUpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4hKHQ/RGM6T2MpKG4sZS5jZWxscyl9KX19ZnVuY3Rpb24gQmMoZSxuKXt2YXIgdT0kdC5mcm9tVGFibGUoZSk7cmV0dXJuIF9pKHUsbikuYmluZChmdW5jdGlvbihlKXt2YXIgbj1lW2UubGVuZ3RoLTFdLHQ9ZVswXS5jb2x1bW4scj1uLmNvbHVtbituLmNvbHNwYW4sbz1NKE8odS5hbGwsZnVuY3Rpb24oZSl7cmV0dXJuIGsoZS5jZWxscyxmdW5jdGlvbihlKXtyZXR1cm4gZS5jb2x1bW4+PXQmJmUuY29sdW1uPHJ9KX0pKTtyZXR1cm4gamEobyl9KS5nZXRPcihcIlwiKX1mdW5jdGlvbiBNYyhlLG4pe3JldHVybiBfaSgkdC5mcm9tVGFibGUoZSksbikuYmluZChqYSkuZ2V0T3IoXCJcIil9ZnVuY3Rpb24gRWMobSxkLGUpe2Z1bmN0aW9uIG4oZSl7cmV0dXJuXCJ0YWJsZVwiPT09WWUoWW8oZSkpfWZ1bmN0aW9uIHQoYyxsLGEsZixzKXtyZXR1cm4gZnVuY3Rpb24odCxlLG8pe3ZvaWQgMD09PW8mJihvPSExKSxudSh0KTt2YXIgbj1mKCkscj1WZS5mcm9tRG9tKG0uZ2V0RG9jKCkpLHU9JG8oYSxyLGcpLGk9e3NpemluZzpkaShtLHQpLHJlc2l6ZTooYWkobSk/ZHU6Z3UpKCksc2VjdGlvbjpmdW5jdGlvbihlKXtzd2l0Y2goaWkobSkpe2Nhc2VcInNlY3Rpb25cIjpyZXR1cm4gRmEoKTtjYXNlXCJzZWN0aW9uQ2VsbHNcIjpyZXR1cm4gSGEoKTtjYXNlXCJjZWxsc1wiOnJldHVybiBWYSgpO2RlZmF1bHQ6cmV0dXJuIGZ1bmN0aW9uKGUsbil7dmFyIHQ7c3dpdGNoKEgoJHQuZnJvbVRhYmxlKGUpLmFsbCxmdW5jdGlvbihlKXt2YXIgbj1DaShlKTtyZXR1cm5cImhlYWRlclwiPT09bi50eXBlP3EuZnJvbShuLnN1YlR5cGUpOnEubm9uZSgpfSkuZ2V0T3Iobikpe2Nhc2VcInNlY3Rpb25cIjpyZXR1cm4geGkoKTtjYXNlXCJzZWN0aW9uQ2VsbHNcIjpyZXR1cm4gUmkoKTtjYXNlXCJjZWxsc1wiOnJldHVybiBEaSgpfX0oZSxcInNlY3Rpb25cIil9fSh0KX07cmV0dXJuIGwodCk/YyhuLHQsZSx1LGkpLmJpbmQoZnVuY3Rpb24oZSl7QShlLm5ld1Jvd3MsZnVuY3Rpb24oZSl7cXUobSxlLmRvbSl9KSxBKGUubmV3Q2VsbHMsZnVuY3Rpb24oZSl7VXUobSxlLmRvbSl9KTt2YXIgcixuPShyPXQsZS5jdXJzb3IuZm9sZChmdW5jdGlvbigpe3JldHVybiBqKG50KHIpKS5maWx0ZXIoU24pLm1hcChmdW5jdGlvbihlKXtkLmNsZWFyKHIpO3ZhciBuPW0uZG9tLmNyZWF0ZVJuZygpO3JldHVybiBuLnNlbGVjdE5vZGUoZS5kb20pLG0uc2VsZWN0aW9uLnNldFJuZyhuKSxNbihlLFwiZGF0YS1tY2Utc2VsZWN0ZWRcIixcIjFcIiksbn0pfSxmdW5jdGlvbihlKXt2YXIgbj1MYShfYSxlKSx0PW0uZG9tLmNyZWF0ZVJuZygpO3JldHVybiB0LnNldFN0YXJ0KG4uZWxlbWVudC5kb20sbi5vZmZzZXQpLHQuc2V0RW5kKG4uZWxlbWVudC5kb20sbi5vZmZzZXQpLG0uc2VsZWN0aW9uLnNldFJuZyh0KSxkLmNsZWFyKHIpLHEuc29tZSh0KX0pKTtyZXR1cm4gU24odCkmJihudSh0KSxvfHxHdShtLHQuZG9tLHMpKSxuLm1hcChmdW5jdGlvbihlKXtyZXR1cm57cm5nOmUsZWZmZWN0OnN9fSl9KTpxLm5vbmUoKX19dmFyIGc9ZmkobSkscj1haShtKT9FOndpO3JldHVybntkZWxldGVSb3c6dChsZixmdW5jdGlvbihlKXtyZXR1cm4hMT09PW4obSl8fDE8eXUoZSkucm93c30sRSxlLFNhKSxkZWxldGVDb2x1bW46dChjZixmdW5jdGlvbihlKXtyZXR1cm4hMT09PW4obSl8fDE8eXUoZSkuY29sdW1uc30sRSxlLFNhKSxpbnNlcnRSb3dzQmVmb3JlOnQodGYseCxFLGUsU2EpLGluc2VydFJvd3NBZnRlcjp0KHJmLHgsRSxlLFNhKSxpbnNlcnRDb2x1bW5zQmVmb3JlOnQob2YseCxyLGUsU2EpLGluc2VydENvbHVtbnNBZnRlcjp0KHVmLHgscixlLFNhKSxtZXJnZUNlbGxzOnQoYmYseCxFLGUsU2EpLHVubWVyZ2VDZWxsczp0KGhmLHgsRSxlLFNhKSxwYXN0ZUNvbHNCZWZvcmU6dCh3Zix4LEUsZSxTYSkscGFzdGVDb2xzQWZ0ZXI6dCh5Zix4LEUsZSxTYSkscGFzdGVSb3dzQmVmb3JlOnQoQ2YseCxFLGUsU2EpLHBhc3RlUm93c0FmdGVyOnQoU2YseCxFLGUsU2EpLHBhc3RlQ2VsbHM6dCh2Zix4LEUsZSxUYSksbWFrZUNlbGxzSGVhZGVyOnQoZ2YseCxFLGUsU2EpLHVubWFrZUNlbGxzSGVhZGVyOnQocGYseCxFLGUsU2EpLG1ha2VDb2x1bW5zSGVhZGVyOnQoYWYseCxFLGUsU2EpLHVubWFrZUNvbHVtbnNIZWFkZXI6dChmZix4LEUsZSxTYSksbWFrZVJvd3NIZWFkZXI6dChzZix4LEUsZSxTYSksbWFrZVJvd3NCb2R5OnQobWYseCxFLGUsU2EpLG1ha2VSb3dzRm9vdGVyOnQoZGYseCxFLGUsU2EpLGdldFRhYmxlUm93VHlwZTpUZixnZXRUYWJsZUNlbGxUeXBlOk1jLGdldFRhYmxlQ29sVHlwZTpCY319ZnVuY3Rpb24gUGMoZSxuLHQscil7cmV0dXJuIEQoZSxmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oZSxuLHQscil7Zm9yKHZhciBvPVZlLmZyb21UYWcoXCJ0clwiKSx1PTA7dTxlO3UrKyl7dmFyIGk9cjxufHx1PHQ/VmUuZnJvbVRhZyhcInRoXCIpOlZlLmZyb21UYWcoXCJ0ZFwiKTt1PHQmJk1uKGksXCJzY29wZVwiLFwicm93XCIpLHI8biYmTW4oaSxcInNjb3BlXCIsXCJjb2xcIiksWHQoaSxWZS5mcm9tVGFnKFwiYnJcIikpLFh0KG8saSl9cmV0dXJuIG99KG4sdCxyLGUpfSl9ZnVuY3Rpb24gTmMoZSxuKXtlLnNlbGVjdGlvbi5zZWxlY3Qobi5kb20sITApLGUuc2VsZWN0aW9uLmNvbGxhcHNlKCEwKX1mdW5jdGlvbiB6Yyh1LGksYyxsLGEpe3ZhciBvPVF1KHUpLGY9e3N0eWxlczpvLGF0dHJpYnV0ZXM6SnUodSksY29sR3JvdXBzOnUuZ2V0UGFyYW0oXCJ0YWJsZV91c2VfY29sZ3JvdXBzXCIsITEsXCJib29sZWFuXCIpfTtyZXR1cm4gdS51bmRvTWFuYWdlci5pZ25vcmUoZnVuY3Rpb24oKXt2YXIgZT1mdW5jdGlvbihlLG4sdCxyLG8sdSl7dm9pZCAwPT09dSYmKHU9eGYpO3ZhciBpLGMsbD1WZS5mcm9tVGFnKFwidGFibGVcIiksYT1cImNlbGxzXCIhPT1vO3FuKGwsdS5zdHlsZXMpLEVuKGwsdS5hdHRyaWJ1dGVzKSx1LmNvbEdyb3VwcyYmWHQobCwoaT1uLGM9VmUuZnJvbVRhZyhcImNvbGdyb3VwXCIpLEQoaSxmdW5jdGlvbigpe3JldHVybiBYdChjLFZlLmZyb21UYWcoXCJjb2xcIikpfSksYykpO3ZhciBmLHM9TWF0aC5taW4oZSx0KTthJiYwPHQmJihmPVZlLmZyb21UYWcoXCJ0aGVhZFwiKSxYdChsLGYpLEl0KGYsUGModCxuLFwic2VjdGlvbkNlbGxzXCI9PT1vP3M6MCxyKSkpO3ZhciBtPVZlLmZyb21UYWcoXCJ0Ym9keVwiKTtyZXR1cm4gWHQobCxtKSxJdChtLFBjKGE/ZS1zOmUsbixhPzA6dCxyKSksbH0oYyxpLGEsbCxpaSh1KSxmKTtNbihlLFwiZGF0YS1tY2UtaWRcIixcIl9fbWNlXCIpO3ZhciBuLHQscixvPShuPWUsdD1WZS5mcm9tVGFnKFwiZGl2XCIpLHI9VmUuZnJvbURvbShuLmRvbS5jbG9uZU5vZGUoITApKSxYdCh0LHIpLHQuZG9tLmlubmVySFRNTCk7dS5pbnNlcnRDb250ZW50KG8pLHUuYWRkVmlzdWFsKCl9KSxrbihZbyh1KSwndGFibGVbZGF0YS1tY2UtaWQ9XCJfX21jZVwiXScpLm1hcChmdW5jdGlvbihlKXt2YXIgbix0LHI7cmV0dXJuIGthKHUpP01hKGUpOklhKHUpP0VhKGUpOih1aSh1KXx8KG49by53aWR0aCxUKG4pJiYtMSE9PW4uaW5kZXhPZihcIiVcIikpKSYmQmEoZSksbnUoZSksV3QoZSxcImRhdGEtbWNlLWlkXCIpLHQ9dSxBKGRuKGUsXCJ0clwiKSxmdW5jdGlvbihlKXtxdSh0LGUuZG9tKSxBKGRuKGUsXCJ0aCx0ZFwiKSxmdW5jdGlvbihlKXtVdSh0LGUuZG9tKX0pfSkscj11LGtuKGUsXCJ0ZCx0aFwiKS5lYWNoKFAoTmMscikpLGUuZG9tfSkuZ2V0T3IobnVsbCl9ZnVuY3Rpb24gTGMoZSxuLHQscixvKXtmdW5jdGlvbiB1KGUpe3JldHVybiBmKGUpJiYwPGV9aWYodm9pZCAwPT09ciYmKHI9e30pLHUobikmJnUodCkpe3ZhciBpPXIuaGVhZGVyUm93c3x8MDtyZXR1cm4gemMoZSx0LG4sci5oZWFkZXJDb2x1bW5zfHwwLGkpfXJldHVybiBjb25zb2xlLmVycm9yKG8pLG51bGx9ZnVuY3Rpb24gX2MoZSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUoKS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuW119LGZ1bmN0aW9uKGUpe3JldHVybiBPKGUsZnVuY3Rpb24oZSl7cmV0dXJuIGUuZG9tfSl9KX19ZnVuY3Rpb24gV2ModCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciBuPTA8ZS5sZW5ndGg/cS5zb21lKFhvKGUpKTpxLm5vbmUoKTt0KG4pfX1mdW5jdGlvbiBqYyhlLG4sdCl7dmFyIHI9S24oZSxuLDEpOzE9PT10fHxyPD0xP1d0KGUsbik6TW4oZSxuLE1hdGgubWluKHQscikpfWZ1bmN0aW9uIEZjKG8sZSx1KXtyZXR1cm4gZnVuY3Rpb24oZSxuKXtmb3IodmFyIHQ9MDt0PG4ubGVuZ3RoO3QrKyl7dmFyIHI9by5nZXRTdHlsZShuW3RdLHUpO2lmKChlPXZvaWQgMD09PWU/cjplKSE9PXIpcmV0dXJuXCJcIn1yZXR1cm4gZX0odm9pZCAwLG8uc2VsZWN0KFwidGQsdGhcIixlKSl9ZnVuY3Rpb24gSGMoZSxuLHQpe3QmJmUuZm9ybWF0dGVyLmFwcGx5KFwiYWxpZ25cIit0LHt9LG4pfWZ1bmN0aW9uIFZjKG4sdCl7UmYuZWFjaChcImxlZnQgY2VudGVyIHJpZ2h0XCIuc3BsaXQoXCIgXCIpLGZ1bmN0aW9uKGUpe24uZm9ybWF0dGVyLnJlbW92ZShcImFsaWduXCIrZSx7fSx0KX0pfWZ1bmN0aW9uIHFjKGUpe3JldHVybiBPZi50ZXN0KHQ9ZSl8fEFmLnRlc3QodCk/cS5zb21lKHt2YWx1ZTooQWUobj1lLFwiI1wiKT9uLnN1YnN0cmluZyhcIiNcIi5sZW5ndGgpOm4pLnRvVXBwZXJDYXNlKCl9KTpxLm5vbmUoKTt2YXIgbix0fWZ1bmN0aW9uIFVjKGUpe3ZhciBuPWUudG9TdHJpbmcoMTYpO3JldHVybigxPT09bi5sZW5ndGg/XCIwXCIrbjpuKS50b1VwcGVyQ2FzZSgpfWZ1bmN0aW9uIEdjKGUpe3JldHVybnt2YWx1ZTpVYyhlLnJlZCkrVWMoZS5ncmVlbikrVWMoZS5ibHVlKX19ZnVuY3Rpb24gJGMoZSxuLHQscil7cmV0dXJue3JlZDplLGdyZWVuOm4sYmx1ZTp0LGFscGhhOnJ9fWZ1bmN0aW9uIEtjKGUsbix0LHIpe3JldHVybiAkYyhwYXJzZUludChlLDEwKSxwYXJzZUludChuLDEwKSxwYXJzZUludCh0LDEwKSxwYXJzZUZsb2F0KHIpKX1mdW5jdGlvbiBYYyhlKXt2YXIgbj1lO3JldHVybntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbn0sc2V0OmZ1bmN0aW9uKGUpe249ZX19fWZ1bmN0aW9uIFljKGUpe2Z1bmN0aW9uIG4oKXtyZXR1cm4gdC5nZXQoKS5lYWNoKGUpfXZhciB0PVhjKHEubm9uZSgpKTtyZXR1cm57Y2xlYXI6ZnVuY3Rpb24oKXtuKCksdC5zZXQocS5ub25lKCkpfSxpc1NldDpmdW5jdGlvbigpe3JldHVybiB0LmdldCgpLmlzU29tZSgpfSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdC5nZXQoKX0sc2V0OmZ1bmN0aW9uKGUpe24oKSx0LnNldChxLnNvbWUoZSkpfX19ZnVuY3Rpb24gSmMoKXt2YXIgbj1ZYyhFKTtyZXR1cm4gSyhLKHt9LG4pLHtvbjpmdW5jdGlvbihlKXtyZXR1cm4gbi5nZXQoKS5lYWNoKGUpfX0pfWZ1bmN0aW9uIFFjKGUpe3JldHVybiBiZShlLFwibWVudVwiKX1mdW5jdGlvbiBaYyh0LHIpe3JldHVybiBmdW5jdGlvbihlKXt2YXIgbjt0LmV4ZWNDb21tYW5kKFwibWNlVGFibGVBcHBseUNlbGxTdHlsZVwiLCExLCgobj17fSlbcl09ZSxuKSl9fWZ1bmN0aW9uIGVsKG4sdCxyLG8sdSl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBlKE1mKG4sdCxyLG8sdSkpfX1mdW5jdGlvbiBubChyLGUsbyl7dmFyIG49TyhlLGZ1bmN0aW9uKGUpe3JldHVybnt0ZXh0OmUudGl0bGUsdmFsdWU6XCIjXCIrcWMocj1lLnZhbHVlKS5vclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKFwidHJhbnNwYXJlbnRcIj09PWUpcmV0dXJuIHEuc29tZSgkYygwLDAsMCwwKSk7dmFyIG49a2YuZXhlYyhlKTtpZihudWxsIT09bilyZXR1cm4gcS5zb21lKEtjKG5bMV0sblsyXSxuWzNdLFwiMVwiKSk7dmFyIHQ9SWYuZXhlYyhlKTtyZXR1cm4gbnVsbCE9PXQ/cS5zb21lKEtjKHRbMV0sdFsyXSx0WzNdLHRbNF0pKTpxLm5vbmUoKX0ocikubWFwKEdjKX0pLmdldE9yVGh1bmsoZnVuY3Rpb24oKXt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO2UuaGVpZ2h0PTEsZS53aWR0aD0xO3ZhciBuPWUuZ2V0Q29udGV4dChcIjJkXCIpO24uY2xlYXJSZWN0KDAsMCxlLndpZHRoLGUuaGVpZ2h0KSxuLmZpbGxTdHlsZT1cIiNGRkZGRkZcIixuLmZpbGxTdHlsZT1yLG4uZmlsbFJlY3QoMCwwLDEsMSk7dmFyIHQ9bi5nZXRJbWFnZURhdGEoMCwwLDEsMSkuZGF0YTtyZXR1cm4gR2MoJGModFswXSx0WzFdLHRbMl0sdFszXSkpfSkudmFsdWUsdHlwZTpcImNob2ljZWl0ZW1cIn07dmFyIHJ9KTtyZXR1cm5be3R5cGU6XCJmYW5jeW1lbnVpdGVtXCIsZmFuY3l0eXBlOlwiY29sb3Jzd2F0Y2hcIixpbml0RGF0YTp7Y29sb3JzOjA8bi5sZW5ndGg/bjp2b2lkIDAsYWxsb3dDdXN0b21Db2xvcnM6ITF9LG9uQWN0aW9uOmZ1bmN0aW9uKGUpe3ZhciBuLHQ9XCJyZW1vdmVcIj09PWUudmFsdWU/XCJcIjplLnZhbHVlO3IuZXhlY0NvbW1hbmQoXCJtY2VUYWJsZUFwcGx5Q2VsbFN0eWxlXCIsITEsKChuPXt9KVtvXT10LG4pKX19XX1mdW5jdGlvbiB0bChuKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZT1uLnF1ZXJ5Q29tbWFuZFZhbHVlKFwibWNlVGFibGVSb3dUeXBlXCIpO24uZXhlY0NvbW1hbmQoXCJtY2VUYWJsZVJvd1R5cGVcIiwhMSx7dHlwZTpcImhlYWRlclwiPT09ZT9cImJvZHlcIjpcImhlYWRlclwifSl9fWZ1bmN0aW9uIHJsKG4pe3JldHVybiBmdW5jdGlvbigpe3ZhciBlPW4ucXVlcnlDb21tYW5kVmFsdWUoXCJtY2VUYWJsZUNvbFR5cGVcIik7bi5leGVjQ29tbWFuZChcIm1jZVRhYmxlQ29sVHlwZVwiLCExLHt0eXBlOlwidGhcIj09PWU/XCJ0ZFwiOlwidGhcIn0pfX1mdW5jdGlvbiBvbChlKXtyZXR1cm4gUGYuY29uY2F0KCgwPChuPUJmKHJpKGUpKSkubGVuZ3RoP3Euc29tZSh7bmFtZTpcImNsYXNzXCIsdHlwZTpcImxpc3Rib3hcIixsYWJlbDpcIkNsYXNzXCIsaXRlbXM6bn0pOnEubm9uZSgpKS50b0FycmF5KCkpO3ZhciBufWZ1bmN0aW9uIHVsKGUsbil7dmFyIHQ9W3tuYW1lOlwiYm9yZGVyc3R5bGVcIix0eXBlOlwibGlzdGJveFwiLGxhYmVsOlwiQm9yZGVyIHN0eWxlXCIsaXRlbXM6W3t0ZXh0OlwiU2VsZWN0Li4uXCIsdmFsdWU6XCJcIn1dLmNvbmNhdChCZihZdShlKSkpfSx7bmFtZTpcImJvcmRlcmNvbG9yXCIsdHlwZTpcImNvbG9yaW5wdXRcIixsYWJlbDpcIkJvcmRlciBjb2xvclwifSx7bmFtZTpcImJhY2tncm91bmRjb2xvclwiLHR5cGU6XCJjb2xvcmlucHV0XCIsbGFiZWw6XCJCYWNrZ3JvdW5kIGNvbG9yXCJ9XTtyZXR1cm57dGl0bGU6XCJBZHZhbmNlZFwiLG5hbWU6XCJhZHZhbmNlZFwiLGl0ZW1zOlwiY2VsbFwiPT09bj9be25hbWU6XCJib3JkZXJ3aWR0aFwiLHR5cGU6XCJpbnB1dFwiLGxhYmVsOlwiQm9yZGVyIHdpZHRoXCJ9XS5jb25jYXQodCk6dH19ZnVuY3Rpb24gaWwodSl7cmV0dXJuIGZ1bmN0aW9uKHQscil7dmFyIG89dC5kb207cmV0dXJue3NldEF0dHJpYjpmdW5jdGlvbihlLG4pe3UmJiFufHxvLnNldEF0dHJpYihyLGUsbil9LHNldFN0eWxlOmZ1bmN0aW9uKGUsbil7dSYmIW58fG8uc2V0U3R5bGUocixlLG4pfSxzZXRGb3JtYXQ6ZnVuY3Rpb24oZSxuKXt1JiYhbnx8KFwiXCI9PT1uP3QuZm9ybWF0dGVyLnJlbW92ZShlLHt2YWx1ZTpudWxsfSxyLCEwKTp0LmZvcm1hdHRlci5hcHBseShlLHt2YWx1ZTpufSxyKSl9fX19ZnVuY3Rpb24gY2wobil7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBBZShlLFwicmdiXCIpP24udG9IZXgoZSk6ZX19ZnVuY3Rpb24gbGwoZSxuKXt2YXIgdD1WZS5mcm9tRG9tKG4pO3JldHVybntib3JkZXJ3aWR0aDpHbih0LFwiYm9yZGVyLXdpZHRoXCIpLmdldE9yKFwiXCIpLGJvcmRlcnN0eWxlOkduKHQsXCJib3JkZXItc3R5bGVcIikuZ2V0T3IoXCJcIiksYm9yZGVyY29sb3I6R24odCxcImJvcmRlci1jb2xvclwiKS5tYXAoY2woZSkpLmdldE9yKFwiXCIpLGJhY2tncm91bmRjb2xvcjpHbih0LFwiYmFja2dyb3VuZC1jb2xvclwiKS5tYXAoY2woZSkpLmdldE9yKFwiXCIpfX1mdW5jdGlvbiBhbChlKXt2YXIgbz1lWzBdO3JldHVybiBBKGUuc2xpY2UoMSksZnVuY3Rpb24oZSl7QShVZShvKSxmdW5jdGlvbihyKXthZShlLGZ1bmN0aW9uKGUsbil7dmFyIHQ9b1tyXTtcIlwiIT09dCYmcj09PW4mJnQhPT1lJiYob1tyXT1cIlwiKX0pfSl9KSxvfWZ1bmN0aW9uIGZsKGUsbix0LHIpe3JldHVybiB3KGUsZnVuY3Rpb24oZSl7cmV0dXJuIXUodC5mb3JtYXR0ZXIubWF0Y2hOb2RlKHIsbitlKSl9KS5nZXRPcihcIlwiKX1mdW5jdGlvbiBzbChlLHQpe3ZhciBuPSR0LmZyb21UYWJsZShlKTtyZXR1cm4gTyhrKCR0Lmp1c3RDZWxscyhuKSxmdW5jdGlvbihuKXtyZXR1cm4gUih0LGZ1bmN0aW9uKGUpe3JldHVybiBjZShuLmVsZW1lbnQsZSl9KX0pLGZ1bmN0aW9uKGUpe3JldHVybntlbGVtZW50OmUuZWxlbWVudC5kb20sY29sdW1uOiR0LmdldENvbHVtbkF0KG4sZS5jb2x1bW4pLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS5lbGVtZW50LmRvbX0pfX0pfWZ1bmN0aW9uIG1sKGUsbixyLHQpe3ZhciBsPXQuZ2V0RGF0YSgpO3QuY2xvc2UoKSxlLnVuZG9NYW5hZ2VyLnRyYW5zYWN0KGZ1bmN0aW9uKCl7dmFyIG8sdT1lLGk9bix0PXIsYz1zZShvPWwsZnVuY3Rpb24oZSxuKXtyZXR1cm4gdFtuXSE9PWV9KTswPGdlKGMpJiYxPD1pLmxlbmd0aCYmcnQoaVswXSkuZWFjaChmdW5jdGlvbihlKXt2YXIgcyxtLGQsbj1zbChlLGkpLHQ9MDxnZShzZShjLGZ1bmN0aW9uKGUsbil7cmV0dXJuXCJzY29wZVwiIT09biYmXCJjZWxsdHlwZVwiIT09bn0pKSxyPUtlKGMsXCJjZWxsdHlwZVwiKTsodHx8S2UoYyxcInNjb3BlXCIpKSYmKHM9dSxtPW8sZD0xPT09bi5sZW5ndGgsQShuLGZ1bmN0aW9uKGUpe3ZhciBuLHQscixvLHUsaSxjPWUuZWxlbWVudCxsPWQ/TmYubm9ybWFsKHMsYyk6TmYuaWZUcnV0aHkocyxjKSxhPWUuY29sdW1uLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZD9OZi5ub3JtYWwocyxlKTpOZi5pZlRydXRoeShzLGUpfSkuZ2V0T3IobCksZj1tOyhuPWwpLnNldEF0dHJpYihcInNjb3BlXCIsZi5zY29wZSksbi5zZXRBdHRyaWIoXCJjbGFzc1wiLGYuY2xhc3MpLG4uc2V0U3R5bGUoXCJoZWlnaHRcIixldShmLmhlaWdodCkpLGEuc2V0U3R5bGUoXCJ3aWR0aFwiLGV1KGYud2lkdGgpKSxadShzKSYmKCh0PWwpLnNldEZvcm1hdChcInRhYmxlY2VsbGJhY2tncm91bmRjb2xvclwiLChyPW0pLmJhY2tncm91bmRjb2xvciksdC5zZXRGb3JtYXQoXCJ0YWJsZWNlbGxib3JkZXJjb2xvclwiLHIuYm9yZGVyY29sb3IpLHQuc2V0Rm9ybWF0KFwidGFibGVjZWxsYm9yZGVyc3R5bGVcIixyLmJvcmRlcnN0eWxlKSx0LnNldEZvcm1hdChcInRhYmxlY2VsbGJvcmRlcndpZHRoXCIsZXUoci5ib3JkZXJ3aWR0aCkpKSxkJiYoVmMocyxjKSxvPXMsdT1jLFJmLmVhY2goXCJ0b3AgbWlkZGxlIGJvdHRvbVwiLnNwbGl0KFwiIFwiKSxmdW5jdGlvbihlKXtvLmZvcm1hdHRlci5yZW1vdmUoXCJ2YWxpZ25cIitlLHt9LHUpfSkpLG0uaGFsaWduJiZIYyhzLGMsbS5oYWxpZ24pLCFtLnZhbGlnbnx8KGk9bS52YWxpZ24pJiZzLmZvcm1hdHRlci5hcHBseShcInZhbGlnblwiK2kse30sYyl9KSksciYmdS5leGVjQ29tbWFuZChcIm1jZVRhYmxlQ2VsbFR5cGVcIiwhMSx7dHlwZTpvLmNlbGx0eXBlLG5vX2V2ZW50czohMH0pLEd1KHUsZS5kb20se3N0cnVjdHVyZTpyLHN0eWxlOnR9KX0pLGUuZm9jdXMoKX0pfWZ1bmN0aW9uIGRsKGUsbil7dmFyIHQsbCxyLG8sdSxpPVFsKG4pOzAhPT1pLmxlbmd0aCYmKGw9ZSx0PWFsKHJ0KChyPWkpWzBdKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIE8oc2woZSxyKSxmdW5jdGlvbihlKXtyZXR1cm4gdD1sLHI9ZS5lbGVtZW50LG89WnUobCksdT1lLmNvbHVtbixpPXQuZG9tLGM9dS5nZXRPcihyKSxLKHt3aWR0aDpuKGMsXCJ3aWR0aFwiKSxoZWlnaHQ6bihyLFwiaGVpZ2h0XCIpLHNjb3BlOmkuZ2V0QXR0cmliKHIsXCJzY29wZVwiKSxjZWxsdHlwZTpyLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksY2xhc3M6aS5nZXRBdHRyaWIocixcImNsYXNzXCIsXCJcIiksaGFsaWduOnpmKHQsciksdmFsaWduOkxmKHQscil9LG8/bGwoaSxyKTp7fSk7ZnVuY3Rpb24gbihlLG4pe3JldHVybiBpLmdldFN0eWxlKGUsbil8fGkuZ2V0QXR0cmliKGUsbil9dmFyIHQscixvLHUsaSxjfSl9KS5nZXRPckRpZSgpKSxvPXt0eXBlOlwidGFicGFuZWxcIix0YWJzOlt7dGl0bGU6XCJHZW5lcmFsXCIsbmFtZTpcImdlbmVyYWxcIixpdGVtczpvbChlKX0sdWwoZSxcImNlbGxcIildfSx1PXt0eXBlOlwicGFuZWxcIixpdGVtczpbe3R5cGU6XCJncmlkXCIsY29sdW1uczoyLGl0ZW1zOm9sKGUpfV19LGUud2luZG93TWFuYWdlci5vcGVuKHt0aXRsZTpcIkNlbGwgUHJvcGVydGllc1wiLHNpemU6XCJub3JtYWxcIixib2R5Olp1KGUpP286dSxidXR0b25zOlt7dHlwZTpcImNhbmNlbFwiLG5hbWU6XCJjYW5jZWxcIix0ZXh0OlwiQ2FuY2VsXCJ9LHt0eXBlOlwic3VibWl0XCIsbmFtZTpcInNhdmVcIix0ZXh0OlwiU2F2ZVwiLHByaW1hcnk6ITB9XSxpbml0aWFsRGF0YTp0LG9uU3VibWl0OlAobWwsZSxpLHQpfSkpfWZ1bmN0aW9uIGdsKGUpe3JldHVybiBfZi5jb25jYXQoKDA8KG49QmYoZS5nZXRQYXJhbShcInRhYmxlX3Jvd19jbGFzc19saXN0XCIsW10sXCJhcnJheVwiKSkpLmxlbmd0aD9xLnNvbWUoe25hbWU6XCJjbGFzc1wiLHR5cGU6XCJsaXN0Ym94XCIsbGFiZWw6XCJDbGFzc1wiLGl0ZW1zOm59KTpxLm5vbmUoKSkudG9BcnJheSgpKTt2YXIgbn1mdW5jdGlvbiBwbChzLG0sZCxlKXt2YXIgZz1lLmdldERhdGEoKTtlLmNsb3NlKCkscy51bmRvTWFuYWdlci50cmFuc2FjdChmdW5jdGlvbigpe3ZhciBlLG4sdCxpLGMsbCxhLHI9cyxvPW0sdT1kLGY9c2UoZT1nLGZ1bmN0aW9uKGUsbil7cmV0dXJuIHVbbl0hPT1lfSk7MDxnZShmKSYmKG49S2UoZixcInR5cGVcIiksKHQ9IW58fDE8Z2UoZikpJiYoaT1yLGM9ZSxsPXUsYT0xPT09by5sZW5ndGgsQShvLGZ1bmN0aW9uKGUpe3ZhciBuLHQscixvPWE/TmYubm9ybWFsKGksZSk6TmYuaWZUcnV0aHkoaSxlKSx1PWM7KG49bykuc2V0QXR0cmliKFwiY2xhc3NcIix1LmNsYXNzKSxuLnNldFN0eWxlKFwiaGVpZ2h0XCIsZXUodS5oZWlnaHQpKSxlaShpKSYmKCh0PW8pLnNldFN0eWxlKFwiYmFja2dyb3VuZC1jb2xvclwiLChyPWMpLmJhY2tncm91bmRjb2xvciksdC5zZXRTdHlsZShcImJvcmRlci1jb2xvclwiLHIuYm9yZGVyY29sb3IpLHQuc2V0U3R5bGUoXCJib3JkZXItc3R5bGVcIixyLmJvcmRlcnN0eWxlKSksYy5hbGlnbiE9PWwuYWxpZ24mJihWYyhpLGUpLEhjKGksZSxjLmFsaWduKSl9KSksbiYmci5leGVjQ29tbWFuZChcIm1jZVRhYmxlUm93VHlwZVwiLCExLHt0eXBlOmUudHlwZSxub19ldmVudHM6ITB9KSxydChWZS5mcm9tRG9tKG9bMF0pKS5lYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBHdShyLGUuZG9tLHtzdHJ1Y3R1cmU6bixzdHlsZTp0fSl9KSkscy5mb2N1cygpfSl9ZnVuY3Rpb24gYmwoaSl7dmFyIGUsdCxuLHIsbyx1LGMsbD0oZT10dShpKSx0PVhsLnNlbGVjdGVkLHI9KG49SmwoZSkpLmJpbmQoZnVuY3Rpb24oZSl7cmV0dXJuIHJ0KGUpfSkubWFwKG90KSxXbihuLHIsZnVuY3Rpb24obixlKXtyZXR1cm4gayhlLGZ1bmN0aW9uKGUpe3JldHVybiBSKFhvKGUuZG9tLmNlbGxzKSxmdW5jdGlvbihlKXtyZXR1cm5cIjFcIj09PVBuKGUsdCl8fGNlKGUsbil9KX0pfSkuZ2V0T3IoW10pKTswIT09bC5sZW5ndGgmJihvPWFsKE8obCxmdW5jdGlvbihlKXtyZXR1cm4gbj1pLHQ9ZS5kb20scj1laShpKSx1PW4uZG9tLEsoe2hlaWdodDp1LmdldFN0eWxlKHQsXCJoZWlnaHRcIil8fHUuZ2V0QXR0cmliKHQsXCJoZWlnaHRcIiksY2xhc3M6dS5nZXRBdHRyaWIodCxcImNsYXNzXCIsXCJcIiksdHlwZTpydChWZS5mcm9tRG9tKG89dCkpLm1hcChmdW5jdGlvbihlKXt2YXIgbj17c2VsZWN0aW9uOlhvKG8uY2VsbHMpfTtyZXR1cm4gVGYoZSxuKX0pLmdldE9yKFwiXCIpLGFsaWduOnpmKG4sdCl9LHI/bGwodSx0KTp7fSk7dmFyIG4sdCxyLG8sdX0pKSx1PXt0eXBlOlwidGFicGFuZWxcIix0YWJzOlt7dGl0bGU6XCJHZW5lcmFsXCIsbmFtZTpcImdlbmVyYWxcIixpdGVtczpnbChpKX0sdWwoaSxcInJvd1wiKV19LGM9e3R5cGU6XCJwYW5lbFwiLGl0ZW1zOlt7dHlwZTpcImdyaWRcIixjb2x1bW5zOjIsaXRlbXM6Z2woaSl9XX0saS53aW5kb3dNYW5hZ2VyLm9wZW4oe3RpdGxlOlwiUm93IFByb3BlcnRpZXNcIixzaXplOlwibm9ybWFsXCIsYm9keTplaShpKT91OmMsYnV0dG9uczpbe3R5cGU6XCJjYW5jZWxcIixuYW1lOlwiY2FuY2VsXCIsdGV4dDpcIkNhbmNlbFwifSx7dHlwZTpcInN1Ym1pdFwiLG5hbWU6XCJzYXZlXCIsdGV4dDpcIlNhdmVcIixwcmltYXJ5OiEwfV0saW5pdGlhbERhdGE6byxvblN1Ym1pdDpQKHBsLGksTyhsLGZ1bmN0aW9uKGUpe3JldHVybiBlLmRvbX0pLG8pfSkpfWZ1bmN0aW9uIGhsKHUsaSx0LGUpe3ZhciBjPXUuZG9tLGw9ZS5nZXREYXRhKCksYT1zZShsLGZ1bmN0aW9uKGUsbil7cmV0dXJuIHRbbl0hPT1lfSk7ZS5jbG9zZSgpLFwiXCI9PT1sLmNsYXNzJiZkZWxldGUgbC5jbGFzcyx1LnVuZG9NYW5hZ2VyLnRyYW5zYWN0KGZ1bmN0aW9uKCl7dmFyIGUsbix0LHIsbztpfHwoZT1wYXJzZUludChsLmNvbHMsMTApfHwxLG49cGFyc2VJbnQobC5yb3dzLDEwKXx8MSxpPXpjKHUsZSxuLDAsMCkpLDA8Z2UoYSkmJihmdW5jdGlvbihlLG4sdCl7dmFyIHIsbz1lLmRvbSx1PXt9LGk9e307aWYodS5jbGFzcz10LmNsYXNzLGkuaGVpZ2h0PWV1KHQuaGVpZ2h0KSxvLmdldEF0dHJpYihuLFwid2lkdGhcIikmJiF0aShlKT91LndpZHRoPShyPXQud2lkdGgpP3IucmVwbGFjZSgvcHgkLyxcIlwiKTpcIlwiOmkud2lkdGg9ZXUodC53aWR0aCksdGkoZSk/KGlbXCJib3JkZXItd2lkdGhcIl09ZXUodC5ib3JkZXIpLGlbXCJib3JkZXItc3BhY2luZ1wiXT1ldSh0LmNlbGxzcGFjaW5nKSk6KHUuYm9yZGVyPXQuYm9yZGVyLHUuY2VsbHBhZGRpbmc9dC5jZWxscGFkZGluZyx1LmNlbGxzcGFjaW5nPXQuY2VsbHNwYWNpbmcpLHRpKGUpJiZuLmNoaWxkcmVuKWZvcih2YXIgYz0wO2M8bi5jaGlsZHJlbi5sZW5ndGg7YysrKVdmKG8sbi5jaGlsZHJlbltjXSx7XCJib3JkZXItd2lkdGhcIjpldSh0LmJvcmRlcikscGFkZGluZzpldSh0LmNlbGxwYWRkaW5nKX0pLG5pKGUpJiZXZihvLG4uY2hpbGRyZW5bY10se1wiYm9yZGVyLWNvbG9yXCI6dC5ib3JkZXJjb2xvcn0pO25pKGUpJiYoaVtcImJhY2tncm91bmQtY29sb3JcIl09dC5iYWNrZ3JvdW5kY29sb3IsaVtcImJvcmRlci1jb2xvclwiXT10LmJvcmRlcmNvbG9yLGlbXCJib3JkZXItc3R5bGVcIl09dC5ib3JkZXJzdHlsZSksdS5zdHlsZT1vLnNlcmlhbGl6ZVN0eWxlKEsoSyh7fSxRdShlKSksaSkpLG8uc2V0QXR0cmlicyhuLEsoSyh7fSxKdShlKSksdSkpfSh1LGksbCksKCh0PWMuc2VsZWN0KFwiY2FwdGlvblwiLGkpWzBdKSYmIWwuY2FwdGlvbnx8IXQmJmwuY2FwdGlvbikmJnUuZXhlY0NvbW1hbmQoXCJtY2VUYWJsZVRvZ2dsZUNhcHRpb25cIiksXCJcIj09PWwuYWxpZ24/VmModSxpKTpIYyh1LGksbC5hbGlnbikpLHUuZm9jdXMoKSx1LmFkZFZpc3VhbCgpLDA8Z2UoYSkmJihvPSEocj1LZShhLFwiY2FwdGlvblwiKSl8fDE8Z2UoYSksR3UodSxpLHtzdHJ1Y3R1cmU6cixzdHlsZTpvfSkpfSl9ZnVuY3Rpb24gdmwoZSxuKXt2YXIgdCxyLG8sdSxpLGMsbCxhLGYscyxtLGQsZyxwLGIsaCx2LHcseSxDPWUuZG9tLFM9KG89bmkocj1lKSxhPVF1KHIpLGY9SnUocikscz1vPyh1PXIuZG9tLHtib3JkZXJzdHlsZTpwZShhLFwiYm9yZGVyLXN0eWxlXCIpLmdldE9yKFwiXCIpLGJvcmRlcmNvbG9yOmNsKHUpKHBlKGEsXCJib3JkZXItY29sb3JcIikuZ2V0T3IoXCJcIikpLGJhY2tncm91bmRjb2xvcjpjbCh1KShwZShhLFwiYmFja2dyb3VuZC1jb2xvclwiKS5nZXRPcihcIlwiKSl9KTp7fSxLKEsoSyhLKEsoSyh7fSx7aGVpZ2h0OlwiXCIsd2lkdGg6XCIxMDAlXCIsY2VsbHNwYWNpbmc6XCJcIixjZWxscGFkZGluZzpcIlwiLGNhcHRpb246ITEsY2xhc3M6XCJcIixhbGlnbjpcIlwiLGJvcmRlcjpcIlwifSksYSksZikscyksKGw9YVtcImJvcmRlci13aWR0aFwiXSx0aShyKSYmbD97Ym9yZGVyOmx9OnBlKGYsXCJib3JkZXJcIikuZm9sZChmdW5jdGlvbigpe3JldHVybnt9fSxmdW5jdGlvbihlKXtyZXR1cm57Ym9yZGVyOmV9fSkpKSwoaT1wZShhLFwiYm9yZGVyLXNwYWNpbmdcIikub3IocGUoZixcImNlbGxzcGFjaW5nXCIpKS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJue319LGZ1bmN0aW9uKGUpe3JldHVybntjZWxsc3BhY2luZzplfX0pLGM9cGUoYSxcImJvcmRlci1wYWRkaW5nXCIpLm9yKHBlKGYsXCJjZWxscGFkZGluZ1wiKSkuZm9sZChmdW5jdGlvbigpe3JldHVybnt9fSxmdW5jdGlvbihlKXtyZXR1cm57Y2VsbHBhZGRpbmc6ZX19KSxLKEsoe30saSksYykpKSk7ITE9PT1uPyh0PUMuZ2V0UGFyZW50KGUuc2VsZWN0aW9uLmdldFN0YXJ0KCksXCJ0YWJsZVwiLGUuZ2V0Qm9keSgpKSk/KGQ9dCxnPW5pKG09ZSksdj1tLmRvbSx3PXRpKG0pP3YuZ2V0U3R5bGUoZCxcImJvcmRlci1zcGFjaW5nXCIpfHx2LmdldEF0dHJpYihkLFwiY2VsbHNwYWNpbmdcIik6di5nZXRBdHRyaWIoZCxcImNlbGxzcGFjaW5nXCIpfHx2LmdldFN0eWxlKGQsXCJib3JkZXItc3BhY2luZ1wiKSx5PXRpKG0pP0ZjKHYsZCxcInBhZGRpbmdcIil8fHYuZ2V0QXR0cmliKGQsXCJjZWxscGFkZGluZ1wiKTp2LmdldEF0dHJpYihkLFwiY2VsbHBhZGRpbmdcIil8fEZjKHYsZCxcInBhZGRpbmdcIiksUz1LKHt3aWR0aDp2LmdldFN0eWxlKGQsXCJ3aWR0aFwiKXx8di5nZXRBdHRyaWIoZCxcIndpZHRoXCIpLGhlaWdodDp2LmdldFN0eWxlKGQsXCJoZWlnaHRcIil8fHYuZ2V0QXR0cmliKGQsXCJoZWlnaHRcIiksY2VsbHNwYWNpbmc6dyxjZWxscGFkZGluZzp5LGJvcmRlcjoocD12LGg9R24oVmUuZnJvbURvbShiPWQpLFwiYm9yZGVyLXdpZHRoXCIpLHRpKG0pJiZoLmlzU29tZSgpP2guZ2V0T3IoXCJcIik6cC5nZXRBdHRyaWIoYixcImJvcmRlclwiKXx8RmMobS5kb20sYixcImJvcmRlci13aWR0aFwiKXx8RmMobS5kb20sYixcImJvcmRlclwiKSksY2FwdGlvbjohIXYuc2VsZWN0KFwiY2FwdGlvblwiLGQpWzBdLGNsYXNzOnYuZ2V0QXR0cmliKGQsXCJjbGFzc1wiLFwiXCIpLGFsaWduOnpmKG0sZCl9LGc/bGwodixkKTp7fSkpOm5pKGUpJiYoUy5ib3JkZXJzdHlsZT1cIlwiLFMuYm9yZGVyY29sb3I9XCJcIixTLmJhY2tncm91bmRjb2xvcj1cIlwiKTooUy5jb2xzPVwiMVwiLFMucm93cz1cIjFcIixuaShlKSYmKFMuYm9yZGVyc3R5bGU9XCJcIixTLmJvcmRlcmNvbG9yPVwiXCIsUy5iYWNrZ3JvdW5kY29sb3I9XCJcIikpO3ZhciBUPUJmKG9pKGUpKTswPFQubGVuZ3RoJiZTLmNsYXNzJiYoUy5jbGFzcz1TLmNsYXNzLnJlcGxhY2UoL1xccyptY2VcXC1pdGVtXFwtdGFibGVcXHMqL2csXCJcIikpO3ZhciB4LFIsRCxPLEE9e3R5cGU6XCJncmlkXCIsY29sdW1uczoyLGl0ZW1zOih4PVQsUj1uP1t7dHlwZTpcImlucHV0XCIsbmFtZTpcImNvbHNcIixsYWJlbDpcIkNvbHNcIixpbnB1dE1vZGU6XCJudW1lcmljXCJ9LHt0eXBlOlwiaW5wdXRcIixuYW1lOlwicm93c1wiLGxhYmVsOlwiUm93c1wiLGlucHV0TW9kZTpcIm51bWVyaWNcIn1dOltdLEQ9ZS5nZXRQYXJhbShcInRhYmxlX2FwcGVhcmFuY2Vfb3B0aW9uc1wiLCEwLFwiYm9vbGVhblwiKT9be3R5cGU6XCJpbnB1dFwiLG5hbWU6XCJjZWxsc3BhY2luZ1wiLGxhYmVsOlwiQ2VsbCBzcGFjaW5nXCIsaW5wdXRNb2RlOlwibnVtZXJpY1wifSx7dHlwZTpcImlucHV0XCIsbmFtZTpcImNlbGxwYWRkaW5nXCIsbGFiZWw6XCJDZWxsIHBhZGRpbmdcIixpbnB1dE1vZGU6XCJudW1lcmljXCJ9LHt0eXBlOlwiaW5wdXRcIixuYW1lOlwiYm9yZGVyXCIsbGFiZWw6XCJCb3JkZXIgd2lkdGhcIn0se3R5cGU6XCJsYWJlbFwiLGxhYmVsOlwiQ2FwdGlvblwiLGl0ZW1zOlt7dHlwZTpcImNoZWNrYm94XCIsbmFtZTpcImNhcHRpb25cIixsYWJlbDpcIlNob3cgY2FwdGlvblwifV19XTpbXSxPPTA8eC5sZW5ndGg/W3t0eXBlOlwibGlzdGJveFwiLG5hbWU6XCJjbGFzc1wiLGxhYmVsOlwiQ2xhc3NcIixpdGVtczp4fV06W10sUi5jb25jYXQoW3t0eXBlOlwiaW5wdXRcIixuYW1lOlwid2lkdGhcIixsYWJlbDpcIldpZHRoXCJ9LHt0eXBlOlwiaW5wdXRcIixuYW1lOlwiaGVpZ2h0XCIsbGFiZWw6XCJIZWlnaHRcIn1dKS5jb25jYXQoRCkuY29uY2F0KFt7dHlwZTpcImxpc3Rib3hcIixuYW1lOlwiYWxpZ25cIixsYWJlbDpcIkFsaWdubWVudFwiLGl0ZW1zOlt7dGV4dDpcIk5vbmVcIix2YWx1ZTpcIlwifSx7dGV4dDpcIkxlZnRcIix2YWx1ZTpcImxlZnRcIn0se3RleHQ6XCJDZW50ZXJcIix2YWx1ZTpcImNlbnRlclwifSx7dGV4dDpcIlJpZ2h0XCIsdmFsdWU6XCJyaWdodFwifV19XSkuY29uY2F0KE8pKX0saz1uaShlKT97dHlwZTpcInRhYnBhbmVsXCIsdGFiczpbe3RpdGxlOlwiR2VuZXJhbFwiLG5hbWU6XCJnZW5lcmFsXCIsaXRlbXM6W0FdfSx1bChlLFwidGFibGVcIildfTp7dHlwZTpcInBhbmVsXCIsaXRlbXM6W0FdfTtlLndpbmRvd01hbmFnZXIub3Blbih7dGl0bGU6XCJUYWJsZSBQcm9wZXJ0aWVzXCIsc2l6ZTpcIm5vcm1hbFwiLGJvZHk6ayxvblN1Ym1pdDpQKGhsLGUsdCxTKSxidXR0b25zOlt7dHlwZTpcImNhbmNlbFwiLG5hbWU6XCJjYW5jZWxcIix0ZXh0OlwiQ2FuY2VsXCJ9LHt0eXBlOlwic3VibWl0XCIsbmFtZTpcInNhdmVcIix0ZXh0OlwiU2F2ZVwiLHByaW1hcnk6ITB9XSxpbml0aWFsRGF0YTpTfSl9ZnVuY3Rpb24gd2woZSl7cmV0dXJuIFlsKHR1KGUpLFpvKGUpKX1mdW5jdGlvbiB5bChsLG4sZSxhLHQpe2Z1bmN0aW9uIHUoZSl7cmV0dXJuIHJ0KGUsZCl9ZnVuY3Rpb24gZih0KXtyZXR1cm4gSmwodHUoZT1sKSxabyhlKSkuYmluZChmdW5jdGlvbihuKXtyZXR1cm4gdShuKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHQoZSxuKX0pfSk7dmFyIGV9ZnVuY3Rpb24gcyhlKXtsLmZvY3VzKCl9ZnVuY3Rpb24gcihyLG8pe3JldHVybiB2b2lkIDA9PT1vJiYobz0hMSksZihmdW5jdGlvbihlLG4pe3ZhciB0PW91KGEsZSxuKTtyKGUsdCxvKS5lYWNoKHMpfSl9ZnVuY3Rpb24gbygpe3JldHVybiBmKGZ1bmN0aW9uKGUsbil7dmFyIHQscixvLHU9b3UoYSxlLG4pLGk9JG8oRSxWZS5mcm9tRG9tKGwuZ2V0RG9jKCkpLHEubm9uZSgpKTtyZXR1cm4gdD11LHI9aSxfaShvPSR0LmZyb21UYWJsZShlKSx0KS5iaW5kKGZ1bmN0aW9uKGUpe3ZhciBuPUVpKE4oZ3QoTWkobyxyLCExKSkucm93cy5zbGljZShlWzBdLnJvdyxlW2UubGVuZ3RoLTFdLnJvdytlW2UubGVuZ3RoLTFdLnJvd3NwYW4pLGZ1bmN0aW9uKGUpe3ZhciBuPWsoZS5jZWxscyxmdW5jdGlvbihlKXtyZXR1cm4hZS5pc0xvY2tlZH0pO3JldHVybiAwPG4ubGVuZ3RoP1tLKEsoe30sZSkse2NlbGxzOm59KV06W119KSk7cmV0dXJuIGpuKDA8bi5sZW5ndGgsbil9KS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIE8oZSxmdW5jdGlvbihlKXt2YXIgdD1hcihlLmVsZW1lbnQpO3JldHVybiBBKGUuY2VsbHMsZnVuY3Rpb24oZSl7dmFyIG49ZnIoZS5lbGVtZW50KTtPaShuLFwiY29sc3BhblwiLGUuY29sc3BhbiwxKSxPaShuLFwicm93c3BhblwiLGUucm93c3BhbiwxKSxYdCh0LG4pfSksdH0pfSl9KX1mdW5jdGlvbiBpKCl7cmV0dXJuIGYoZnVuY3Rpb24oZSxuKXt2YXIgdCxsLHI9b3UoYSxlLG4pO3JldHVybiB0PXIsV2kobD0kdC5mcm9tVGFibGUoZSksdCkubWFwKGZ1bmN0aW9uKGUpe3ZhciByLG8sbj1lW2UubGVuZ3RoLTFdLHQ9ZVswXS5jb2x1bW4sdT1uLmNvbHVtbituLmNvbHNwYW4saT1mdW5jdGlvbihlLHQscil7aWYoJHQuaGFzQ29sdW1ucyhlKSl7dmFyIG49TyhrKCR0Lmp1c3RDb2x1bW5zKGUpLGZ1bmN0aW9uKGUpe3JldHVybiBlLmNvbHVtbj49dCYmZS5jb2x1bW48cn0pLGZ1bmN0aW9uKGUpe3ZhciBuPWZyKGUuZWxlbWVudCk7cmV0dXJuIGpjKG4sXCJzcGFuXCIsci10KSxufSksbz1WZS5mcm9tVGFnKFwiY29sZ3JvdXBcIik7cmV0dXJuIEl0KG8sbiksW29dfXJldHVybltdfShsLHQsdSksYz0ocj10LG89dSxPKGwuYWxsLGZ1bmN0aW9uKGUpe3ZhciBuPU8oayhlLmNlbGxzLGZ1bmN0aW9uKGUpe3JldHVybiBlLmNvbHVtbj49ciYmZS5jb2x1bW48b30pLGZ1bmN0aW9uKGUpe3ZhciBuPWZyKGUuZWxlbWVudCk7cmV0dXJuIGpjKG4sXCJjb2xzcGFuXCIsby1yKSxufSksdD1WZS5mcm9tVGFnKFwidHJcIik7cmV0dXJuIEl0KHQsbiksdH0pKTtyZXR1cm4gWChYKFtdLGksITApLGMsITApfSl9KX1mdW5jdGlvbiBjKGMsZSl7cmV0dXJuIGUoKS5lYWNoKGZ1bmN0aW9uKGUpe3ZhciBpPU8oZSxmcik7ZihmdW5jdGlvbihlLG4pe3ZhciB0LHIsbz1LbyhWZS5mcm9tRG9tKGwuZ2V0RG9jKCkpKSx1PSh0PWkscj1vLHtzZWxlY3Rpb246cnUoYSksY2xpcGJvYXJkOnQsZ2VuZXJhdG9yczpyfSk7YyhlLHUpLmVhY2gocyl9KX0pfWZ1bmN0aW9uIG0odCl7cmV0dXJuIGZ1bmN0aW9uKGUsbil7cmV0dXJuIHBlKG4sXCJ0eXBlXCIpLmVhY2goZnVuY3Rpb24oZSl7cih0KGUpLG4ubm9fZXZlbnRzKX0pfX12YXIgZD1abyhsKTthZSh7bWNlVGFibGVTcGxpdENlbGxzOmZ1bmN0aW9uKCl7cmV0dXJuIHIobi51bm1lcmdlQ2VsbHMpfSxtY2VUYWJsZU1lcmdlQ2VsbHM6ZnVuY3Rpb24oKXtyZXR1cm4gcihuLm1lcmdlQ2VsbHMpfSxtY2VUYWJsZUluc2VydFJvd0JlZm9yZTpmdW5jdGlvbigpe3JldHVybiByKG4uaW5zZXJ0Um93c0JlZm9yZSl9LG1jZVRhYmxlSW5zZXJ0Um93QWZ0ZXI6ZnVuY3Rpb24oKXtyZXR1cm4gcihuLmluc2VydFJvd3NBZnRlcil9LG1jZVRhYmxlSW5zZXJ0Q29sQmVmb3JlOmZ1bmN0aW9uKCl7cmV0dXJuIHIobi5pbnNlcnRDb2x1bW5zQmVmb3JlKX0sbWNlVGFibGVJbnNlcnRDb2xBZnRlcjpmdW5jdGlvbigpe3JldHVybiByKG4uaW5zZXJ0Q29sdW1uc0FmdGVyKX0sbWNlVGFibGVEZWxldGVDb2w6ZnVuY3Rpb24oKXtyZXR1cm4gcihuLmRlbGV0ZUNvbHVtbil9LG1jZVRhYmxlRGVsZXRlUm93OmZ1bmN0aW9uKCl7cmV0dXJuIHIobi5kZWxldGVSb3cpfSxtY2VUYWJsZUN1dENvbDpmdW5jdGlvbigpe3JldHVybiBpKCkuZWFjaChmdW5jdGlvbihlKXt0LnNldENvbHVtbnMoZSkscihuLmRlbGV0ZUNvbHVtbil9KX0sbWNlVGFibGVDdXRSb3c6ZnVuY3Rpb24oKXtyZXR1cm4gbygpLmVhY2goZnVuY3Rpb24oZSl7dC5zZXRSb3dzKGUpLHIobi5kZWxldGVSb3cpfSl9LG1jZVRhYmxlQ29weUNvbDpmdW5jdGlvbigpe3JldHVybiBpKCkuZWFjaChmdW5jdGlvbihlKXtyZXR1cm4gdC5zZXRDb2x1bW5zKGUpfSl9LG1jZVRhYmxlQ29weVJvdzpmdW5jdGlvbigpe3JldHVybiBvKCkuZWFjaChmdW5jdGlvbihlKXtyZXR1cm4gdC5zZXRSb3dzKGUpfSl9LG1jZVRhYmxlUGFzdGVDb2xCZWZvcmU6ZnVuY3Rpb24oKXtyZXR1cm4gYyhuLnBhc3RlQ29sc0JlZm9yZSx0LmdldENvbHVtbnMpfSxtY2VUYWJsZVBhc3RlQ29sQWZ0ZXI6ZnVuY3Rpb24oKXtyZXR1cm4gYyhuLnBhc3RlQ29sc0FmdGVyLHQuZ2V0Q29sdW1ucyl9LG1jZVRhYmxlUGFzdGVSb3dCZWZvcmU6ZnVuY3Rpb24oKXtyZXR1cm4gYyhuLnBhc3RlUm93c0JlZm9yZSx0LmdldFJvd3MpfSxtY2VUYWJsZVBhc3RlUm93QWZ0ZXI6ZnVuY3Rpb24oKXtyZXR1cm4gYyhuLnBhc3RlUm93c0FmdGVyLHQuZ2V0Um93cyl9LG1jZVRhYmxlRGVsZXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHdsKGwpLmVhY2goZnVuY3Rpb24oZSl7cnQoZSxkKS5maWx0ZXIocChkKSkuZWFjaChmdW5jdGlvbihlKXt2YXIgbix0PVZlLmZyb21UZXh0KFwiXCIpO0R0KGUsdCksWXQoZSksbC5kb20uaXNFbXB0eShsLmdldEJvZHkoKSk/KGwuc2V0Q29udGVudChcIlwiKSxsLnNlbGVjdGlvbi5zZXRDdXJzb3JMb2NhdGlvbigpKTooKG49bC5kb20uY3JlYXRlUm5nKCkpLnNldFN0YXJ0KHQuZG9tLDApLG4uc2V0RW5kKHQuZG9tLDApLGwuc2VsZWN0aW9uLnNldFJuZyhuKSxsLm5vZGVDaGFuZ2VkKCkpfSl9KX0sbWNlVGFibGVDZWxsVG9nZ2xlQ2xhc3M6ZnVuY3Rpb24oZSxyKXtmKGZ1bmN0aW9uKGUpe3ZhciBuPVFsKGEpLHQ9eihuLGZ1bmN0aW9uKGUpe3JldHVybiBsLmZvcm1hdHRlci5tYXRjaChcInRhYmxlY2VsbGNsYXNzXCIse3ZhbHVlOnJ9LGUuZG9tKX0pP2wuZm9ybWF0dGVyLnJlbW92ZTpsLmZvcm1hdHRlci5hcHBseTtBKG4sZnVuY3Rpb24oZSl7cmV0dXJuIHQoXCJ0YWJsZWNlbGxjbGFzc1wiLHt2YWx1ZTpyfSxlLmRvbSl9KSxHdShsLGUuZG9tLENhKX0pfSxtY2VUYWJsZVRvZ2dsZUNsYXNzOmZ1bmN0aW9uKGUsbil7ZihmdW5jdGlvbihlKXtsLmZvcm1hdHRlci50b2dnbGUoXCJ0YWJsZWNsYXNzXCIse3ZhbHVlOm59LGUuZG9tKSxHdShsLGUuZG9tLENhKX0pfSxtY2VUYWJsZVRvZ2dsZUNhcHRpb246ZnVuY3Rpb24oKXt3bChsKS5lYWNoKGZ1bmN0aW9uKG4pe3J0KG4sZCkuZWFjaChmdW5jdGlvbihyKXtBbihyLFwiY2FwdGlvblwiKS5mb2xkKGZ1bmN0aW9uKCl7dmFyIGUsbix0PVZlLmZyb21UYWcoXCJjYXB0aW9uXCIpO1h0KHQsVmUuZnJvbVRleHQoXCJDYXB0aW9uXCIpKSxuPXQsYW4oZT1yLDApLmZvbGQoZnVuY3Rpb24oKXtYdChlLG4pfSxmdW5jdGlvbihlKXtSdChlLG4pfSksbC5zZWxlY3Rpb24uc2V0Q3Vyc29yTG9jYXRpb24odC5kb20sMCl9LGZ1bmN0aW9uKGUpe2VuKFwiY2FwdGlvblwiKShuKSYmaWUoXCJ0ZFwiLHIpLmVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIGwuc2VsZWN0aW9uLnNldEN1cnNvckxvY2F0aW9uKGUuZG9tLDApfSksWXQoZSl9KSxHdShsLHIuZG9tLFNhKX0pfSl9LG1jZVRhYmxlU2l6aW5nTW9kZTpmdW5jdGlvbihlLG4pe3JldHVybiB0PW4sd2wobCkuZWFjaChmdW5jdGlvbihlKXtJYShsKXx8a2EobCl8fHVpKGwpfHxydChlLGQpLmVhY2goZnVuY3Rpb24oZSl7XCJyZWxhdGl2ZVwiIT09dHx8QmwoZSk/XCJmaXhlZFwiIT09dHx8TWwoZSk/XCJyZXNwb25zaXZlXCIhPT10fHxFbChlKXx8RWEoZSk6TWEoZSk6QmEoZSksbnUoZSksR3UobCxlLmRvbSxTYSl9KX0pO3ZhciB0fSxtY2VUYWJsZUNlbGxUeXBlOm0oZnVuY3Rpb24oZSl7cmV0dXJuXCJ0aFwiPT09ZT9uLm1ha2VDZWxsc0hlYWRlcjpuLnVubWFrZUNlbGxzSGVhZGVyfSksbWNlVGFibGVDb2xUeXBlOm0oZnVuY3Rpb24oZSl7cmV0dXJuXCJ0aFwiPT09ZT9uLm1ha2VDb2x1bW5zSGVhZGVyOm4udW5tYWtlQ29sdW1uc0hlYWRlcn0pLG1jZVRhYmxlUm93VHlwZTptKGZ1bmN0aW9uKGUpe3N3aXRjaChlKXtjYXNlXCJoZWFkZXJcIjpyZXR1cm4gbi5tYWtlUm93c0hlYWRlcjtjYXNlXCJmb290ZXJcIjpyZXR1cm4gbi5tYWtlUm93c0Zvb3RlcjtkZWZhdWx0OnJldHVybiBuLm1ha2VSb3dzQm9keX19KX0sZnVuY3Rpb24oZSxuKXtyZXR1cm4gbC5hZGRDb21tYW5kKG4sZSl9KSxhZSh7bWNlVGFibGVQcm9wczpQKHZsLGwsITEpLG1jZVRhYmxlUm93UHJvcHM6UChibCxsKSxtY2VUYWJsZUNlbGxQcm9wczpQKGRsLGwsYSl9LGZ1bmN0aW9uKGUsbil7cmV0dXJuIGwuYWRkQ29tbWFuZChuLGZ1bmN0aW9uKCl7cmV0dXJuIGUoKX0pfSksbC5hZGRDb21tYW5kKFwibWNlSW5zZXJ0VGFibGVcIixmdW5jdGlvbihlLG4pe2cobikmJjA8VWUobikubGVuZ3RoP0xjKGwsbi5yb3dzLG4uY29sdW1ucyxuLm9wdGlvbnMsXCJJbnZhbGlkIHZhbHVlcyBmb3IgbWNlSW5zZXJ0VGFibGUgLSByb3dzIGFuZCBjb2x1bW5zIHZhbHVlcyBhcmUgcmVxdWlyZWQgdG8gaW5zZXJ0IGEgdGFibGUuXCIpOnZsKGwsITApfSksbC5hZGRDb21tYW5kKFwibWNlVGFibGVBcHBseUNlbGxTdHlsZVwiLGZ1bmN0aW9uKGUsbil7ZnVuY3Rpb24gcihlKXtyZXR1cm5cInRhYmxlY2VsbFwiK2UudG9Mb3dlckNhc2UoKS5yZXBsYWNlKFwiLVwiLFwiXCIpfXZhciBvLHQ7IWcobil8fDAhPT0obz1RbChhKSkubGVuZ3RoJiYoZnVuY3Rpb24oZSl7Zm9yKHZhciBuIGluIGUpaWYoR2UuY2FsbChlLG4pKXJldHVybjtyZXR1cm4gMX0odD1zZShuLGZ1bmN0aW9uKGUsbil7cmV0dXJuIGwuZm9ybWF0dGVyLmhhcyhyKG4pKSYmVChlKX0pKXx8KGFlKHQsZnVuY3Rpb24obix0KXtBKG8sZnVuY3Rpb24oZSl7TmYubm9ybWFsKGwsZS5kb20pLnNldEZvcm1hdChyKHQpLG4pfSl9KSx1KG9bMF0pLmVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIEd1KGwsZS5kb20sQ2EpfSkpKX0pfWZ1bmN0aW9uIENsKHQsZSl7cmV0dXJuIHJ0KHQsZSkuYmluZChmdW5jdGlvbihlKXt2YXIgbj1udChlKTtyZXR1cm4gYihuLGZ1bmN0aW9uKGUpe3JldHVybiBjZSh0LGUpfSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybntpbmRleDplLGFsbDpufX0pfSl9ZnVuY3Rpb24gU2woZSxuKXt2YXIgdD1lLmRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7cmV0dXJuIHQuc2VsZWN0Tm9kZShuLmRvbSksdH1mdW5jdGlvbiBUbChlLG4pe3ZhciB0PWUuZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKTtyZXR1cm4gSmYodCxuKSx0fWZ1bmN0aW9uIHhsKGUsbix0KXt2YXIgcixvPWUuZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKSx1PW87cmV0dXJuIG4uZm9sZChmdW5jdGlvbihlKXt1LnNldFN0YXJ0QmVmb3JlKGUuZG9tKX0sZnVuY3Rpb24oZSxuKXt1LnNldFN0YXJ0KGUuZG9tLG4pfSxmdW5jdGlvbihlKXt1LnNldFN0YXJ0QWZ0ZXIoZS5kb20pfSkscj1vLHQuZm9sZChmdW5jdGlvbihlKXtyLnNldEVuZEJlZm9yZShlLmRvbSl9LGZ1bmN0aW9uKGUsbil7ci5zZXRFbmQoZS5kb20sbil9LGZ1bmN0aW9uKGUpe3Iuc2V0RW5kQWZ0ZXIoZS5kb20pfSksb31mdW5jdGlvbiBSbChlLG4sdCxyLG8pe3ZhciB1PWUuZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKTtyZXR1cm4gdS5zZXRTdGFydChuLmRvbSx0KSx1LnNldEVuZChyLmRvbSxvKSx1fWZ1bmN0aW9uIERsKGUpe3JldHVybntsZWZ0OmUubGVmdCx0b3A6ZS50b3AscmlnaHQ6ZS5yaWdodCxib3R0b206ZS5ib3R0b20sd2lkdGg6ZS53aWR0aCxoZWlnaHQ6ZS5oZWlnaHR9fWZ1bmN0aW9uIE9sKGUsbix0KXtyZXR1cm4gbihWZS5mcm9tRG9tKHQuc3RhcnRDb250YWluZXIpLHQuc3RhcnRPZmZzZXQsVmUuZnJvbURvbSh0LmVuZENvbnRhaW5lciksdC5lbmRPZmZzZXQpfWZ1bmN0aW9uIEFsKGUsbil7dmFyIG8sdCxyLHU9KG89ZSxuLm1hdGNoKHtkb21SYW5nZTpmdW5jdGlvbihlKXtyZXR1cm57bHRyOkMoZSkscnRsOnEubm9uZX19LHJlbGF0aXZlOmZ1bmN0aW9uKGUsbil7cmV0dXJue2x0cjpZKGZ1bmN0aW9uKCl7cmV0dXJuIHhsKG8sZSxuKX0pLHJ0bDpZKGZ1bmN0aW9uKCl7cmV0dXJuIHEuc29tZSh4bChvLG4sZSkpfSl9fSxleGFjdDpmdW5jdGlvbihlLG4sdCxyKXtyZXR1cm57bHRyOlkoZnVuY3Rpb24oKXtyZXR1cm4gUmwobyxlLG4sdCxyKX0pLHJ0bDpZKGZ1bmN0aW9uKCl7cmV0dXJuIHEuc29tZShSbChvLHQscixlLG4pKX0pfX19KSk7cmV0dXJuKHI9KHQ9dSkubHRyKCkpLmNvbGxhcHNlZD90LnJ0bCgpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4hMT09PWUuY29sbGFwc2VkfSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBRZi5ydGwoVmUuZnJvbURvbShlLmVuZENvbnRhaW5lciksZS5lbmRPZmZzZXQsVmUuZnJvbURvbShlLnN0YXJ0Q29udGFpbmVyKSxlLnN0YXJ0T2Zmc2V0KX0pLmdldE9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gT2woMCxRZi5sdHIscil9KTpPbCgwLFFmLmx0cixyKX1mdW5jdGlvbiBrbCh1LGUpe3JldHVybiBBbCh1LGUpLm1hdGNoKHtsdHI6ZnVuY3Rpb24oZSxuLHQscil7dmFyIG89dS5kb2N1bWVudC5jcmVhdGVSYW5nZSgpO3JldHVybiBvLnNldFN0YXJ0KGUuZG9tLG4pLG8uc2V0RW5kKHQuZG9tLHIpLG99LHJ0bDpmdW5jdGlvbihlLG4sdCxyKXt2YXIgbz11LmRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7cmV0dXJuIG8uc2V0U3RhcnQodC5kb20sciksby5zZXRFbmQoZS5kb20sbiksb319KX1mdW5jdGlvbiBJbChlLG4pe3JldHVybntwYXJlbnQ6QyhxLmZyb20oZS5kb20uZG9jdW1lbnRFbGVtZW50KS5tYXAoVmUuZnJvbURvbSkuZ2V0T3IoZSkpLHZpZXc6QyhlKSxvcmlnaW46Qyh1bygwLDApKSxpc1Jlc2l6YWJsZTpufX1mdW5jdGlvbiBCbChlKXtyZXR1cm4geW8oZSkuZXhpc3RzKGZ1bmN0aW9uKGUpe3JldHVybiBfbC50ZXN0KGUpfSl9ZnVuY3Rpb24gTWwoZSl7cmV0dXJuIHlvKGUpLmV4aXN0cyhmdW5jdGlvbihlKXtyZXR1cm4gV2wudGVzdChlKX0pfWZ1bmN0aW9uIEVsKGUpe3JldHVybiB5byhlKS5pc05vbmUoKX1mdW5jdGlvbiBQbCgpe3JldHVybnt0cmFuc2Zvcm1Sb3c6Uyx0cmFuc2Zvcm1DZWxsOlNpfX1mdW5jdGlvbiBObChvLHUpe2Z1bmN0aW9uIHIoZSl7aWYoc2MoZSkpcmV0dXJuIEthKCh0PXtlbGVtZW50OmV9KS5lbGVtZW50KT9vLmNvbGdyb3VwKHQpOm8ucm93KHQpO3ZhciBuLHQscj0obj11KGUpLCRhKG4uZWxlbWVudCk/by5jb2wobik6by5jZWxsKG4pKTtyZXR1cm4gaT1xLnNvbWUoe2l0ZW06ZSxyZXBsYWNlbWVudDpyfSkscn12b2lkIDA9PT11JiYodT1tYyk7dmFyIGk9cS5ub25lKCk7cmV0dXJue2dldE9ySW5pdDpmdW5jdGlvbihuLHQpe3JldHVybiBpLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gcihuKX0sZnVuY3Rpb24oZSl7cmV0dXJuIHQobixlLml0ZW0pP2UucmVwbGFjZW1lbnQ6cihuKX0pfX19ZnVuY3Rpb24gemwocil7cmV0dXJuIGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIHUoZSl7dmFyIG49dC5yZXBsYWNlKGUscixcInRkXCI9PT1yP3tzY29wZTpudWxsfTp7fSk7cmV0dXJuIGkucHVzaCh7aXRlbTplLHN1YjpufSksbn12YXIgaT1bXTtyZXR1cm57cmVwbGFjZU9ySW5pdDpmdW5jdGlvbihuLHQpe3JldHVybiBzYyhuKXx8JGEobik/bjoocj1uLG89dCx3KGksZnVuY3Rpb24oZSl7cmV0dXJuIG8oZS5pdGVtLHIpfSkuZm9sZChmdW5jdGlvbigpe3JldHVybiB1KG4pfSxmdW5jdGlvbihlKXtyZXR1cm4gdChuLGUuaXRlbSk/ZS5zdWI6dShuKX0pKTt2YXIgcixvfX19fWZ1bmN0aW9uIExsKHIpe3JldHVybnt1bm1lcmdlOmZ1bmN0aW9uKHQpe3ZhciBlPWRjKHQpO3JldHVybiBlLmVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIE1uKHQsXCJzY29wZVwiLGUpfSksZnVuY3Rpb24oKXt2YXIgbj1yLmNlbGwoe2VsZW1lbnQ6dCxjb2xzcGFuOjEscm93c3BhbjoxfSk7cmV0dXJuICRuKG4sXCJ3aWR0aFwiKSwkbih0LFwid2lkdGhcIiksZS5lYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBNbihuLFwic2NvcGVcIixlKX0pLG59fSxtZXJnZTpmdW5jdGlvbihyKXtyZXR1cm4gJG4oclswXSxcIndpZHRoXCIpLGZ1bmN0aW9uKCl7dmFyIGU9X24oTyhyLGRjKSk7aWYoMD09PWUubGVuZ3RoKXJldHVybiBxLm5vbmUoKTt2YXIgbj1lWzBdLHQ9W1wicm93XCIsXCJjb2xcIl07cmV0dXJuIFIoZSxmdW5jdGlvbihlKXtyZXR1cm4gZSE9PW4mJnkodCxlKX0pP3Eubm9uZSgpOnEuZnJvbShuKX0oKS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIFd0KHJbMF0sXCJzY29wZVwiKX0sZnVuY3Rpb24oZSl7cmV0dXJuIE1uKHJbMF0sXCJzY29wZVwiLGUrXCJncm91cFwiKX0pLEMoclswXSl9fX12YXIgX2w9LyhcXGQrKFxcLlxcZCspPyklLyxXbD0vKFxcZCsoXFwuXFxkKyk/KXB4fGVtLyxqbD1lbihcImNvbFwiKSxGbD1DKF9sKSxIbD1lbihcImNvbFwiKSxWbD1mdW5jdGlvbihyKXtyZXR1cm4geW8ocikuZm9sZChmdW5jdGlvbigpe3JldHVybiBlPUVvKHQ9cix2ciksbj1DKDApLHt3aWR0aDplLHBpeGVsV2lkdGg6ZSxnZXRXaWR0aHM6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gQm8oZSx0LG4pfSxnZXRDZWxsRGVsdGE6bixzaW5nbGVDb2x1bW5XaWR0aDpDKFswXSksbWluQ2VsbFdpZHRoOm4sc2V0RWxlbWVudFdpZHRoOkUsYWRqdXN0VGFibGVXaWR0aDpFLGlzUmVsYXRpdmU6ITAsbGFiZWw6XCJub25lXCJ9O3ZhciB0LGUsbn0sZnVuY3Rpb24oZSl7cmV0dXJuIG49cix0PWUsKG51bGwhPT1GbCgpLmV4ZWModCk/UG86Tm8pKG4pO3ZhciBuLHR9KX0scWw9Tm8sVWw9UG8sR2w9W1wiaW1nXCIsXCJiclwiXSwkbD1mdW5jdGlvbihlLHUpe3ZhciBpPWZ1bmN0aW9uKGUpe2Zvcih2YXIgbj1sbihlKSx0PW4ubGVuZ3RoLTE7MDw9dDt0LS0pe3ZhciByPW5bdF07aWYodShyKSlyZXR1cm4gcS5zb21lKHIpO3ZhciBvPWkocik7aWYoby5pc1NvbWUoKSlyZXR1cm4gb31yZXR1cm4gcS5ub25lKCl9O3JldHVybiBpKGUpfSxLbD17c2NvcGU6W1wicm93XCIsXCJjb2xcIl19LFhsPXtzZWxlY3RlZDpcImRhdGEtbWNlLXNlbGVjdGVkXCIsc2VsZWN0ZWRTZWxlY3RvcjpcInRkW2RhdGEtbWNlLXNlbGVjdGVkXSx0aFtkYXRhLW1jZS1zZWxlY3RlZF1cIixmaXJzdFNlbGVjdGVkOlwiZGF0YS1tY2UtZmlyc3Qtc2VsZWN0ZWRcIixmaXJzdFNlbGVjdGVkU2VsZWN0b3I6XCJ0ZFtkYXRhLW1jZS1maXJzdC1zZWxlY3RlZF0sdGhbZGF0YS1tY2UtZmlyc3Qtc2VsZWN0ZWRdXCIsbGFzdFNlbGVjdGVkOlwiZGF0YS1tY2UtbGFzdC1zZWxlY3RlZFwiLGxhc3RTZWxlY3RlZFNlbGVjdG9yOlwidGRbZGF0YS1tY2UtbGFzdC1zZWxlY3RlZF0sdGhbZGF0YS1tY2UtbGFzdC1zZWxlY3RlZF1cIn0sWWw9dXUoXCJ0aCx0ZCxjYXB0aW9uXCIpLEpsPXV1KFwidGgsdGRcIiksUWw9cnUsWmw9THIoW3tub25lOltdfSx7b25seTpbXCJpbmRleFwiXX0se2xlZnQ6W1wiaW5kZXhcIixcIm5leHRcIl19LHttaWRkbGU6W1wicHJldlwiLFwiaW5kZXhcIixcIm5leHRcIl19LHtyaWdodDpbXCJwcmV2XCIsXCJpbmRleFwiXX1dKSxlYT1LKHt9LFpsKSxuYT1tdShmdW5jdGlvbihlKXtyZXR1cm4gZTwwfSksdGE9bXUoeCkscmE9THIoW3tpbnZhbGlkOltcInJhd1wiXX0se3BpeGVsczpbXCJ2YWx1ZVwiXX0se3BlcmNlbnQ6W1widmFsdWVcIl19XSksb2E9SyhLKHt9LHJhKSx7ZnJvbTpmdW5jdGlvbihlKXtyZXR1cm4gZWUoZSxcIiVcIik/cHUoXCIlXCIscmEucGVyY2VudCxlKTplZShlLFwicHhcIik/cHUoXCJweFwiLHJhLnBpeGVscyxlKTpyYS5pbnZhbGlkKGUpfX0pLHVhPWZ1bmN0aW9uKGUpe2lmKDA9PT1lLmxlbmd0aClyZXR1cm4gZTt2YXIgbix0LHI9SShlLGZ1bmN0aW9uKGUsbil7dmFyIHQ9b2EuZnJvbShuKS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJue3ZhbHVlOm4scmVtYWluZGVyOjB9fSxmdW5jdGlvbihlKXtyZXR1cm4gbj1lLHt2YWx1ZToodD1NYXRoLmZsb29yKG4pKStcInB4XCIscmVtYWluZGVyOm4tdH07dmFyIG4sdH0sZnVuY3Rpb24oZSl7cmV0dXJue3ZhbHVlOmUrXCIlXCIscmVtYWluZGVyOjB9fSk7cmV0dXJue291dHB1dDpbdC52YWx1ZV0uY29uY2F0KGUub3V0cHV0KSxyZW1haW5kZXI6ZS5yZW1haW5kZXIrdC5yZW1haW5kZXJ9fSx7b3V0cHV0OltdLHJlbWFpbmRlcjowfSksbz1yLm91dHB1dDtyZXR1cm4gby5zbGljZSgwLG8ubGVuZ3RoLTEpLmNvbmNhdChbKG49b1tvLmxlbmd0aC0xXSx0PU1hdGgucm91bmQoci5yZW1haW5kZXIpLG9hLmZyb20obikuZm9sZChDKG4pLGZ1bmN0aW9uKGUpe3JldHVybiBlK3QrXCJweFwifSxmdW5jdGlvbihlKXtyZXR1cm4gZSt0K1wiJVwifSkpXSl9LGlhPW9hLmZyb20sY2E9UnUoW1wiY29tcGFyZVwiLFwiZXh0cmFjdFwiLFwibXV0YXRlXCIsXCJzaW5rXCJdKSxsYT1SdShbXCJlbGVtZW50XCIsXCJzdGFydFwiLFwic3RvcFwiLFwiZGVzdHJveVwiXSksYWE9UnUoW1wiZm9yY2VEcm9wXCIsXCJkcm9wXCIsXCJtb3ZlXCIsXCJkZWxheURyb3BcIl0pLGZhPWZ1bmN0aW9uKGUsbix0LHIpe2UuZG9tLnJlbW92ZUV2ZW50TGlzdGVuZXIobix0LHIpfSxzYT14LG1hPU91LGRhPUV1KFwiZXBob3gtZHJhZ3N0ZXJcIikucmVzb2x2ZSxnYT1jYSh7Y29tcGFyZTpmdW5jdGlvbihlLG4pe3JldHVybiB1byhuLmxlZnQtZS5sZWZ0LG4udG9wLWUudG9wKX0sZXh0cmFjdDpmdW5jdGlvbihlKXtyZXR1cm4gcS5zb21lKHVvKGUueCxlLnkpKX0sc2luazpmdW5jdGlvbihlLG4pe3ZhciB0LHIsbyx1PSh0PW4scj1LKHtsYXllckNsYXNzOmRhKFwiYmxvY2tlclwiKX0sdCksTW4obz1WZS5mcm9tVGFnKFwiZGl2XCIpLFwicm9sZVwiLFwicHJlc2VudGF0aW9uXCIpLHFuKG8se3Bvc2l0aW9uOlwiZml4ZWRcIixsZWZ0OlwiMHB4XCIsdG9wOlwiMHB4XCIsd2lkdGg6XCIxMDAlXCIsaGVpZ2h0OlwiMTAwJVwifSksQnUobyxkYShcImJsb2NrZXJcIikpLEJ1KG8sci5sYXllckNsYXNzKSx7ZWxlbWVudDpDKG8pLGRlc3Ryb3k6ZnVuY3Rpb24oKXtZdChvKX19KSxpPUF1KHUuZWxlbWVudCgpLFwibW91c2Vkb3duXCIsZS5mb3JjZURyb3ApLGM9QXUodS5lbGVtZW50KCksXCJtb3VzZXVwXCIsZS5kcm9wKSxsPUF1KHUuZWxlbWVudCgpLFwibW91c2Vtb3ZlXCIsZS5tb3ZlKSxhPUF1KHUuZWxlbWVudCgpLFwibW91c2VvdXRcIixlLmRlbGF5RHJvcCk7cmV0dXJuIGxhKHtlbGVtZW50OnUuZWxlbWVudCxzdGFydDpmdW5jdGlvbihlKXtYdChlLHUuZWxlbWVudCgpKX0sc3RvcDpmdW5jdGlvbigpe1l0KHUuZWxlbWVudCgpKX0sZGVzdHJveTpmdW5jdGlvbigpe3UuZGVzdHJveSgpLGMudW5iaW5kKCksbC51bmJpbmQoKSxhLnVuYmluZCgpLGkudW5iaW5kKCl9fSl9LG11dGF0ZTpmdW5jdGlvbihlLG4pe2UubXV0YXRlKG4ubGVmdCxuLnRvcCl9fSkscGE9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZG9tLmNvbnRlbnRFZGl0YWJsZX0sYmE9RXUoXCJlcGhveC1zbm9va2VyXCIpLnJlc29sdmUsaGE9YmEoXCJyZXNpemVyLWJhclwiKSx2YT1iYShcInJlc2l6ZXItcm93c1wiKSx3YT1iYShcInJlc2l6ZXItY29sc1wiKSx5YT1iYShcInJlc2l6ZXItYmFyLWRyYWdnaW5nXCIpLENhPXtzdHJ1Y3R1cmU6ITEsc3R5bGU6ITB9LFNhPXtzdHJ1Y3R1cmU6ITAsc3R5bGU6ITF9LFRhPXtzdHJ1Y3R1cmU6ITAsc3R5bGU6ITB9LHhhPXtcImJvcmRlci1jb2xsYXBzZVwiOlwiY29sbGFwc2VcIix3aWR0aDpcIjEwMCVcIn0sUmE9RCg1LGZ1bmN0aW9uKGUpe3ZhciBuPWUrMStcInB4XCI7cmV0dXJue3RpdGxlOm4sdmFsdWU6bn19KSxEYT1PKFtcIlNvbGlkXCIsXCJEb3R0ZWRcIixcIkRhc2hlZFwiLFwiRG91YmxlXCIsXCJHcm9vdmVcIixcIlJpZGdlXCIsXCJJbnNldFwiLFwiT3V0c2V0XCIsXCJOb25lXCIsXCJIaWRkZW5cIl0sZnVuY3Rpb24oZSl7cmV0dXJue3RpdGxlOmUsdmFsdWU6ZS50b0xvd2VyQ2FzZSgpfX0pLE9hPXtib3JkZXI6XCIxXCJ9LEFhPVwicHJlc2VydmV0YWJsZVwiLGthPWZ1bmN0aW9uKGUpe3JldHVyblwiZml4ZWRcIj09PSR1KGUpfHwhMT09PUt1KGUpfSxJYT1mdW5jdGlvbihlKXtyZXR1cm5cInJlc3BvbnNpdmVcIj09PSR1KGUpfSxCYT1mdW5jdGlvbihlKXt2YXIgbj1SbyhlKTt3dShlLHEuc29tZShuKSxxLm5vbmUoKSksZ2koZSl9LE1hPWZ1bmN0aW9uKGUpe3ZhciBuPXZyKGUpK1wicHhcIjt3dShlLHEuc29tZShuKSxxLm5vbmUoKSksZ2koZSl9LEVhPWZ1bmN0aW9uKGUpeyRuKGUsXCJ3aWR0aFwiKTt2YXIgbj10dChlKTtBKDA8bi5sZW5ndGg/bjpudChlKSxmdW5jdGlvbihlKXskbihlLFwid2lkdGhcIiksZ2koZSl9KSxnaShlKX0sUGE9XCJiYXItXCIsTmE9ZnVuY3Rpb24obixlLHQpe3JldHVybiBuLnByb3BlcnR5KCkuaXNUZXh0KGUpJiYwPT09bi5wcm9wZXJ0eSgpLmdldFRleHQoZSkudHJpbSgpLmxlbmd0aHx8bi5wcm9wZXJ0eSgpLmlzQ29tbWVudChlKT90KGUpLmJpbmQoZnVuY3Rpb24oZSl7cmV0dXJuIE5hKG4sZSx0KS5vclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIHEuc29tZShlKX0pfSk6cS5ub25lKCl9LHphPWZ1bmN0aW9uKGUsbil7dmFyIHQ9TmEoZSxuLGUucXVlcnkoKS5wcmV2U2libGluZykuZ2V0T3Iobik7aWYoZS5wcm9wZXJ0eSgpLmlzVGV4dCh0KSlyZXR1cm4gaGkodCx2aShlLHQpKTt2YXIgcj1lLnByb3BlcnR5KCkuY2hpbGRyZW4odCk7cmV0dXJuIDA8ci5sZW5ndGg/emEoZSxyW3IubGVuZ3RoLTFdKTpoaSh0LHZpKGUsdCkpfSxMYT16YSxfYT1adCgpLFdhPWVuKFwidGhcIiksamE9ZnVuY3Rpb24oZSl7dmFyIG49ayhlLGZ1bmN0aW9uKGUpe3JldHVybiBXYShlLmVsZW1lbnQpfSk7cmV0dXJuIDA9PT1uLmxlbmd0aD9xLnNvbWUoXCJ0ZFwiKTpuLmxlbmd0aD09PWUubGVuZ3RoP3Euc29tZShcInRoXCIpOnEubm9uZSgpfSxGYT14aSxIYT1SaSxWYT1EaSxxYT1mdW5jdGlvbih0KXtyZXR1cm57aXNWYWx1ZTp4LGlzRXJyb3I6dixnZXRPcjpDKHQpLGdldE9yVGh1bms6Qyh0KSxnZXRPckRpZTpDKHQpLG9yOmZ1bmN0aW9uKGUpe3JldHVybiBxYSh0KX0sb3JUaHVuazpmdW5jdGlvbihlKXtyZXR1cm4gcWEodCl9LGZvbGQ6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gbih0KX0sbWFwOmZ1bmN0aW9uKGUpe3JldHVybiBxYShlKHQpKX0sbWFwRXJyb3I6ZnVuY3Rpb24oZSl7cmV0dXJuIHFhKHQpfSxlYWNoOmZ1bmN0aW9uKGUpe2UodCl9LGJpbmQ6ZnVuY3Rpb24oZSl7cmV0dXJuIGUodCl9LGV4aXN0czpmdW5jdGlvbihlKXtyZXR1cm4gZSh0KX0sZm9yYWxsOmZ1bmN0aW9uKGUpe3JldHVybiBlKHQpfSx0b09wdGlvbmFsOmZ1bmN0aW9uKCl7cmV0dXJuIHEuc29tZSh0KX19fSxVYT1mdW5jdGlvbih0KXtyZXR1cm57aXNWYWx1ZTp2LGlzRXJyb3I6eCxnZXRPcjpTLGdldE9yVGh1bms6ZnVuY3Rpb24oZSl7cmV0dXJuIGUoKX0sZ2V0T3JEaWU6ZnVuY3Rpb24oKXtyZXR1cm4gZT1TdHJpbmcodCksZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoZSl9KCk7dmFyIGV9LG9yOlMsb3JUaHVuazpmdW5jdGlvbihlKXtyZXR1cm4gZSgpfSxmb2xkOmZ1bmN0aW9uKGUsbil7cmV0dXJuIGUodCl9LG1hcDpmdW5jdGlvbihlKXtyZXR1cm4gVWEodCl9LG1hcEVycm9yOmZ1bmN0aW9uKGUpe3JldHVybiBVYShlKHQpKX0sZWFjaDpFLGJpbmQ6ZnVuY3Rpb24oZSl7cmV0dXJuIFVhKHQpfSxleGlzdHM6dixmb3JhbGw6eCx0b09wdGlvbmFsOnEubm9uZX19LEdhPXt2YWx1ZTpxYSxlcnJvcjpVYSxmcm9tT3B0aW9uOmZ1bmN0aW9uKGUsbil7cmV0dXJuIGUuZm9sZChmdW5jdGlvbigpe3JldHVybiBVYShuKX0scWEpfX0sJGE9ZW4oXCJjb2xcIiksS2E9ZW4oXCJjb2xncm91cFwiKSxYYT1bXCJib2R5XCIsXCJwXCIsXCJkaXZcIixcImFydGljbGVcIixcImFzaWRlXCIsXCJmaWdjYXB0aW9uXCIsXCJmaWd1cmVcIixcImZvb3RlclwiLFwiaGVhZGVyXCIsXCJuYXZcIixcInNlY3Rpb25cIixcIm9sXCIsXCJ1bFwiLFwidGFibGVcIixcInRoZWFkXCIsXCJ0Zm9vdFwiLFwidGJvZHlcIixcImNhcHRpb25cIixcInRyXCIsXCJ0ZFwiLFwidGhcIixcImgxXCIsXCJoMlwiLFwiaDNcIixcImg0XCIsXCJoNVwiLFwiaDZcIixcImJsb2NrcXVvdGVcIixcInByZVwiLFwiYWRkcmVzc1wiXSxZYT1adCgpLEphPVNjKFwidGhlYWRcIiwhMCksUWE9U2MoXCJ0Ym9keVwiLCExKSxaYT1TYyhcInRmb290XCIsITEpLGVmPXpsKFwidGhcIiksbmY9emwoXCJ0ZFwiKSx0Zj16aShmdW5jdGlvbihlLG4sdCxyKXt2YXIgbz1uWzBdLnJvdztyZXR1cm4geWMoSShDYyhuKSxmdW5jdGlvbihlLG4pe3JldHVybntncmlkOm5jKGUuZ3JpZCxvLG4ucm93K2UuZGVsdGEsdCxyLmdldE9ySW5pdCksZGVsdGE6ZS5kZWx0YSsxfX0se2dyaWQ6ZSxkZWx0YTowfSkuZ3JpZCxvLG5bMF0uY29sdW1uKX0sX2ksRSxFLE5sKSxyZj16aShmdW5jdGlvbihlLG4sdCxyKXt2YXIgbz1DYyhuKSx1PW9bby5sZW5ndGgtMV0saT11LnJvdyt1LnJvd3NwYW47cmV0dXJuIHljKEkobyxmdW5jdGlvbihlLG4pe3JldHVybiBuYyhlLGksbi5yb3csdCxyLmdldE9ySW5pdCl9LGUpLGksblswXS5jb2x1bW4pfSxfaSxFLEUsTmwpLG9mPXppKGZ1bmN0aW9uKGUsbix0LHIpe3ZhciBvPW4uZGV0YWlscyx1PWZjKG8pLGk9dVswXS5jb2x1bW47cmV0dXJuIHljKEkodSxmdW5jdGlvbihlLG4pe3JldHVybntncmlkOnRjKGUuZ3JpZCxpLG4uY29sdW1uK2UuZGVsdGEsdCxyLmdldE9ySW5pdCksZGVsdGE6ZS5kZWx0YSsxfX0se2dyaWQ6ZSxkZWx0YTowfSkuZ3JpZCxvWzBdLnJvdyxpKX0sa2MoITApLFJjLEUsTmwpLHVmPXppKGZ1bmN0aW9uKGUsbix0LHIpe3ZhciBvPW4uZGV0YWlscyx1PW9bby5sZW5ndGgtMV0saT11LmNvbHVtbit1LmNvbHNwYW47cmV0dXJuIHljKEkoZmMobyksZnVuY3Rpb24oZSxuKXtyZXR1cm4gdGMoZSxpLG4uY29sdW1uLHQsci5nZXRPckluaXQpfSxlKSxvWzBdLnJvdyxpKX0sa2MoITEpLFJjLEUsTmwpLGNmPXppKGZ1bmN0aW9uKGUsbix0LHIpe3ZhciBvLHUsaT1mYyhuLmRldGFpbHMpLGM9KG89ZSx1PU8oaSxmdW5jdGlvbihlKXtyZXR1cm4gZS5jb2x1bW59KSxOKG8sZnVuY3Rpb24oZSl7dmFyIG49ZS5jZWxscyx0PUkodSxmdW5jdGlvbihlLG4pe3JldHVybiAwPD1uJiZuPGUubGVuZ3RoP2Uuc2xpY2UoMCxuKS5jb25jYXQoZS5zbGljZShuKzEpKTplfSxuKTtyZXR1cm4gMDx0Lmxlbmd0aD9beWUoZS5lbGVtZW50LHQsZS5zZWN0aW9uLGUuaXNOZXcpXTpbXX0pKSxsPTA8Yy5sZW5ndGg/Y1swXS5jZWxscy5sZW5ndGgtMTowO3JldHVybiB5YyhjLGlbMF0ucm93LE1hdGgubWluKGlbMF0uY29sdW1uLGwpKX0sZnVuY3Rpb24obixlKXtyZXR1cm4gV2kobixlKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJue2RldGFpbHM6ZSxwaXhlbERlbHRhOi1BYyhuLGUpfX0pfSxSYyx2YyxObCksbGY9emkoZnVuY3Rpb24oZSxuLHQscil7dmFyIG8sdSxpLGMsbD1DYyhuKSxhPShvPWxbMF0ucm93LHU9bFtsLmxlbmd0aC0xXS5yb3csYz0oaT1ndChlKSkucm93cyxpLmNvbHMuY29uY2F0KGMuc2xpY2UoMCxvKSkuY29uY2F0KGMuc2xpY2UodSsxKSkpLGY9MDxhLmxlbmd0aD9hLmxlbmd0aC0xOjA7cmV0dXJuIHljKGEsTWF0aC5taW4oblswXS5yb3csZiksblswXS5jb2x1bW4pfSxfaSxFLHZjLE5sKSxhZj16aShmdW5jdGlvbihlLG4sdCxyKXtyZXR1cm4geWMobGMoZSxPKGZjKG4pLGZ1bmN0aW9uKGUpe3JldHVybiBlLmNvbHVtbn0pLCEwLHQsci5yZXBsYWNlT3JJbml0KSxuWzBdLnJvdyxuWzBdLmNvbHVtbil9LFdpLEUsRSxlZiksZmY9emkoZnVuY3Rpb24oZSxuLHQscil7cmV0dXJuIHljKGxjKGUsTyhmYyhuKSxmdW5jdGlvbihlKXtyZXR1cm4gZS5jb2x1bW59KSwhMSx0LHIucmVwbGFjZU9ySW5pdCksblswXS5yb3csblswXS5jb2x1bW4pfSxXaSxFLEUsbmYpLHNmPXppKEphLFdpLEUsRSxlZiksbWY9emkoUWEsV2ksRSxFLG5mKSxkZj16aShaYSxXaSxFLEUsbmYpLGdmPXppKGZ1bmN0aW9uKGUsbix0LHIpe3JldHVybiB5YyhhYyhlLG4sdCxyLnJlcGxhY2VPckluaXQpLG5bMF0ucm93LG5bMF0uY29sdW1uKX0sV2ksRSxFLGVmKSxwZj16aShmdW5jdGlvbihlLG4sdCxyKXtyZXR1cm4geWMoYWMoZSxuLHQsci5yZXBsYWNlT3JJbml0KSxuWzBdLnJvdyxuWzBdLmNvbHVtbil9LFdpLEUsRSxuZiksYmY9emkoZnVuY3Rpb24oZSxuLHQscil7dmFyIG89bi5jZWxscztyZXR1cm4gYmMobyksd2MoZnVuY3Rpb24oZSxuLHQpe3ZhciByPWd0KGUpLnJvd3M7aWYoMD09PXIubGVuZ3RoKXJldHVybiBlO2Zvcih2YXIgbz1uLnN0YXJ0Um93O288PW4uZmluaXNoUm93O28rKylmb3IodmFyIHU9bi5zdGFydENvbDt1PD1uLmZpbmlzaENvbDt1Kyspe3ZhciBpPXJbb10sYz1zdChpLHUpLmlzTG9ja2VkO2Z0KGksdSx3ZSh0KCksITEsYykpfXJldHVybiBlfShlLG4uYm91bmRzLHIubWVyZ2UobykpLHEuZnJvbShvWzBdKSl9LEZpLHhjLEUsTGwpLGhmPXppKGZ1bmN0aW9uKGUsbix0LHIpe3JldHVybiB3YyhJKG4sZnVuY3Rpb24oZSxuKXtyZXR1cm4gVmkoZSxuLHQsci51bm1lcmdlKG4pKX0sZSkscS5mcm9tKG5bMF0pKX0sSGkseGMsRSxMbCksdmY9emkoZnVuY3Rpb24oZSxuLHQscil7dmFyIG8sdSxpPShvPW4uY2xpcGJvYXJkLHU9bi5nZW5lcmF0b3JzLE1pKCR0LmZyb21UYWJsZShvKSx1LCEwKSk7cmV0dXJuIFFpKHtyb3c6bi5yb3csY29sdW1uOm4uY29sdW1ufSxlLGksbi5nZW5lcmF0b3JzLHQpLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gd2MoZSxxLnNvbWUobi5lbGVtZW50KSl9LGZ1bmN0aW9uKGUpe3JldHVybiB5YyhlLG4ucm93LG4uY29sdW1uKX0pfSxmdW5jdGlvbihuLHQpe3JldHVybiBldCh0LmVsZW1lbnQpLmJpbmQoZnVuY3Rpb24oZSl7cmV0dXJuIFBpKG4sZSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBLKEsoe30sZSkse2dlbmVyYXRvcnM6dC5nZW5lcmF0b3JzLGNsaXBib2FyZDp0LmNsaXBib2FyZH0pfSl9KX0seGMsRSxObCksd2Y9emkoZnVuY3Rpb24oZSxuLHQscil7dmFyIG89Z3QoZSkucm93cyx1PW4uY2VsbHNbMF0uY29sdW1uLGk9b1tuLmNlbGxzWzBdLnJvd107cmV0dXJuIHljKFppKHUsZSxUYyhuLmNsaXBib2FyZCxuLmdlbmVyYXRvcnMsaSksbi5nZW5lcmF0b3JzLHQpLG4uY2VsbHNbMF0ucm93LG4uY2VsbHNbMF0uY29sdW1uKX0sSWMoITApLEUsRSxObCkseWY9emkoZnVuY3Rpb24oZSxuLHQscil7dmFyIG89Z3QoZSkucm93cyx1PW4uY2VsbHNbbi5jZWxscy5sZW5ndGgtMV0uY29sdW1uK24uY2VsbHNbbi5jZWxscy5sZW5ndGgtMV0uY29sc3BhbixpPW9bbi5jZWxsc1swXS5yb3ddO3JldHVybiB5YyhaaSh1LGUsVGMobi5jbGlwYm9hcmQsbi5nZW5lcmF0b3JzLGkpLG4uZ2VuZXJhdG9ycyx0KSxuLmNlbGxzWzBdLnJvdyxuLmNlbGxzWzBdLmNvbHVtbil9LEljKCExKSxFLEUsTmwpLENmPXppKGZ1bmN0aW9uKGUsbix0LHIpe3ZhciBvPWd0KGUpLnJvd3MsdT1uLmNlbGxzWzBdLnJvdyxpPW9bdV07cmV0dXJuIHljKGVjKHUsZSxUYyhuLmNsaXBib2FyZCxuLmdlbmVyYXRvcnMsaSksbi5nZW5lcmF0b3JzLHQpLG4uY2VsbHNbMF0ucm93LG4uY2VsbHNbMF0uY29sdW1uKX0sTGksRSxFLE5sKSxTZj16aShmdW5jdGlvbihlLG4sdCxyKXt2YXIgbz1ndChlKS5yb3dzLHU9bi5jZWxsc1tuLmNlbGxzLmxlbmd0aC0xXS5yb3crbi5jZWxsc1tuLmNlbGxzLmxlbmd0aC0xXS5yb3dzcGFuLGk9b1tuLmNlbGxzWzBdLnJvd107cmV0dXJuIHljKGVjKHUsZSxUYyhuLmNsaXBib2FyZCxuLmdlbmVyYXRvcnMsaSksbi5nZW5lcmF0b3JzLHQpLG4uY2VsbHNbMF0ucm93LG4uY2VsbHNbMF0uY29sdW1uKX0sTGksRSxFLE5sKSxUZj1mdW5jdGlvbihlLG4pe3ZhciBpPSR0LmZyb21UYWJsZShlKTtyZXR1cm4gX2koaSxuKS5iaW5kKGZ1bmN0aW9uKGUpe3ZhciBuPWVbZS5sZW5ndGgtMV0sbz1lWzBdLnJvdyx1PW4ucm93K24ucm93c3BhbjtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZT1PKGkuYWxsLnNsaWNlKG8sdSksZnVuY3Rpb24oZSl7cmV0dXJuIENpKGUpLnR5cGV9KSxuPXkoZSxcImhlYWRlclwiKSx0PXkoZSxcImZvb3RlclwiKTtpZihufHx0KXt2YXIgcj15KGUsXCJib2R5XCIpO3JldHVybiFufHxyfHx0P258fHJ8fCF0P3Eubm9uZSgpOnEuc29tZShcImZvb3RlclwiKTpxLnNvbWUoXCJoZWFkZXJcIil9cmV0dXJuIHEuc29tZShcImJvZHlcIil9KCl9KS5nZXRPcihcIlwiKX0seGY9e3N0eWxlczp7XCJib3JkZXItY29sbGFwc2VcIjpcImNvbGxhcHNlXCIsd2lkdGg6XCIxMDAlXCJ9LGF0dHJpYnV0ZXM6e2JvcmRlcjpcIjFcIn0sY29sR3JvdXBzOiExfSxSZj10aW55bWNlLnV0aWwuVG9vbHMucmVzb2x2ZShcInRpbnltY2UudXRpbC5Ub29sc1wiKSxEZj1be3RleHQ6XCJOb25lXCIsdmFsdWU6XCJcIn0se3RleHQ6XCJUb3BcIix2YWx1ZTpcInRvcFwifSx7dGV4dDpcIk1pZGRsZVwiLHZhbHVlOlwibWlkZGxlXCJ9LHt0ZXh0OlwiQm90dG9tXCIsdmFsdWU6XCJib3R0b21cIn1dLE9mPS9eIz8oW2EtZlxcZF0pKFthLWZcXGRdKShbYS1mXFxkXSkkL2ksQWY9L14jPyhbYS1mXFxkXXsyfSkoW2EtZlxcZF17Mn0pKFthLWZcXGRdezJ9KSQvaSxrZj0vXnJnYlxcKChcXGQrKSxcXHMqKFxcZCspLFxccyooXFxkKylcXCkvLElmPS9ecmdiYVxcKChcXGQrKSxcXHMqKFxcZCspLFxccyooXFxkKyksXFxzKihcXGQ/KD86XFwuXFxkKyk/KVxcKS8sQmY9ZnVuY3Rpb24oZSl7cmV0dXJuIE8oZSxmdW5jdGlvbihlKXt2YXIgbj1lLnRleHR8fGUudGl0bGU7cmV0dXJuIFFjKGUpP3t0ZXh0Om4saXRlbXM6QmYoZS5tZW51KX06e3RleHQ6bix2YWx1ZTplLnZhbHVlfX0pfSxNZj1mdW5jdGlvbih0LHIsZSxvLGEpe3JldHVybiBPKGUsZnVuY3Rpb24oZSl7dmFyIHUsaSxjLGwsbj1lLnRleHR8fGUudGl0bGU7cmV0dXJuIFFjKGUpP3t0eXBlOlwibmVzdGVkbWVudWl0ZW1cIix0ZXh0Om4sZ2V0U3VibWVudUl0ZW1zOmZ1bmN0aW9uKCl7cmV0dXJuIE1mKHQscixlLm1lbnUsbyxhKX19Ont0ZXh0Om4sdHlwZTpcInRvZ2dsZW1lbnVpdGVtXCIsb25BY3Rpb246ZnVuY3Rpb24oKXtyZXR1cm4gYShlLnZhbHVlKX0sb25TZXR1cDoodT10LGk9cixjPW8sbD1lLnZhbHVlLGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtmdW5jdGlvbiBlKGUpe3JldHVybiB1LmZvcm1hdHRlci5tYXRjaChjLHt2YWx1ZTpsfSxlLmRvbSxvKX12YXIgbj1RbChpKTtvPyh0LnNldEFjdGl2ZSghUihuLGUpKSxyLnNldCh1LmZvcm1hdHRlci5mb3JtYXRDaGFuZ2VkKGMsZnVuY3Rpb24oZSl7cmV0dXJuIHQuc2V0QWN0aXZlKCFlKX0sITApKSk6KHQuc2V0QWN0aXZlKHoobixlKSksci5zZXQodS5mb3JtYXR0ZXIuZm9ybWF0Q2hhbmdlZChjLHQuc2V0QWN0aXZlLCExLHt2YWx1ZTpsfSkpKX12YXIgcj1ZYyhmdW5jdGlvbihlKXtyZXR1cm4gZS51bmJpbmQoKX0pLG89IW5lKGwpO3JldHVybiB1LmluaXRpYWxpemVkP2UoKTp1Lm9uKFwiaW5pdFwiLGUpLHIuY2xlYXJ9KX19KX0sRWY9ZnVuY3Rpb24oZSl7cmV0dXJuIE4oZSxmdW5jdGlvbihlKXtyZXR1cm4gUWMoZSk/W0soSyh7fSxlKSx7bWVudTpFZihlLm1lbnUpfSldOm5lKGUudmFsdWUpP1tlXTpbXX0pfSxQZj1be25hbWU6XCJ3aWR0aFwiLHR5cGU6XCJpbnB1dFwiLGxhYmVsOlwiV2lkdGhcIn0se25hbWU6XCJoZWlnaHRcIix0eXBlOlwiaW5wdXRcIixsYWJlbDpcIkhlaWdodFwifSx7bmFtZTpcImNlbGx0eXBlXCIsdHlwZTpcImxpc3Rib3hcIixsYWJlbDpcIkNlbGwgdHlwZVwiLGl0ZW1zOlt7dGV4dDpcIkNlbGxcIix2YWx1ZTpcInRkXCJ9LHt0ZXh0OlwiSGVhZGVyIGNlbGxcIix2YWx1ZTpcInRoXCJ9XX0se25hbWU6XCJzY29wZVwiLHR5cGU6XCJsaXN0Ym94XCIsbGFiZWw6XCJTY29wZVwiLGl0ZW1zOlt7dGV4dDpcIk5vbmVcIix2YWx1ZTpcIlwifSx7dGV4dDpcIlJvd1wiLHZhbHVlOlwicm93XCJ9LHt0ZXh0OlwiQ29sdW1uXCIsdmFsdWU6XCJjb2xcIn0se3RleHQ6XCJSb3cgZ3JvdXBcIix2YWx1ZTpcInJvd2dyb3VwXCJ9LHt0ZXh0OlwiQ29sdW1uIGdyb3VwXCIsdmFsdWU6XCJjb2xncm91cFwifV19LHtuYW1lOlwiaGFsaWduXCIsdHlwZTpcImxpc3Rib3hcIixsYWJlbDpcIkhvcml6b250YWwgYWxpZ25cIixpdGVtczpbe3RleHQ6XCJOb25lXCIsdmFsdWU6XCJcIn0se3RleHQ6XCJMZWZ0XCIsdmFsdWU6XCJsZWZ0XCJ9LHt0ZXh0OlwiQ2VudGVyXCIsdmFsdWU6XCJjZW50ZXJcIn0se3RleHQ6XCJSaWdodFwiLHZhbHVlOlwicmlnaHRcIn1dfSx7bmFtZTpcInZhbGlnblwiLHR5cGU6XCJsaXN0Ym94XCIsbGFiZWw6XCJWZXJ0aWNhbCBhbGlnblwiLGl0ZW1zOkRmfV0sTmY9e25vcm1hbDppbCghMSksaWZUcnV0aHk6aWwoITApfSx6Zj1QKGZsLFtcImxlZnRcIixcImNlbnRlclwiLFwicmlnaHRcIl0sXCJhbGlnblwiKSxMZj1QKGZsLFtcInRvcFwiLFwibWlkZGxlXCIsXCJib3R0b21cIl0sXCJ2YWxpZ25cIiksX2Y9W3t0eXBlOlwibGlzdGJveFwiLG5hbWU6XCJ0eXBlXCIsbGFiZWw6XCJSb3cgdHlwZVwiLGl0ZW1zOlt7dGV4dDpcIkhlYWRlclwiLHZhbHVlOlwiaGVhZGVyXCJ9LHt0ZXh0OlwiQm9keVwiLHZhbHVlOlwiYm9keVwifSx7dGV4dDpcIkZvb3RlclwiLHZhbHVlOlwiZm9vdGVyXCJ9XX0se3R5cGU6XCJsaXN0Ym94XCIsbmFtZTpcImFsaWduXCIsbGFiZWw6XCJBbGlnbm1lbnRcIixpdGVtczpbe3RleHQ6XCJOb25lXCIsdmFsdWU6XCJcIn0se3RleHQ6XCJMZWZ0XCIsdmFsdWU6XCJsZWZ0XCJ9LHt0ZXh0OlwiQ2VudGVyXCIsdmFsdWU6XCJjZW50ZXJcIn0se3RleHQ6XCJSaWdodFwiLHZhbHVlOlwicmlnaHRcIn1dfSx7bGFiZWw6XCJIZWlnaHRcIixuYW1lOlwiaGVpZ2h0XCIsdHlwZTpcImlucHV0XCJ9XSxXZj1mdW5jdGlvbihlLG4sdCxyKXtpZihcIlREXCI9PT1uLnRhZ05hbWV8fFwiVEhcIj09PW4udGFnTmFtZSlUKHQpP2Uuc2V0U3R5bGUobix0LHIpOmUuc2V0U3R5bGUobix0KTtlbHNlIGlmKG4uY2hpbGRyZW4pZm9yKHZhciBvPTA7bzxuLmNoaWxkcmVuLmxlbmd0aDtvKyspV2YoZSxuLmNoaWxkcmVuW29dLHQscil9LGpmPXtyZW1vdmVfc2ltaWxhcjohMCxpbmhlcml0OiExfSxGZj1LKHtzZWxlY3RvcjpcInRkLHRoXCJ9LGpmKSxIZj17dGFibGVjZWxsYmFja2dyb3VuZGNvbG9yOksoe3N0eWxlczp7YmFja2dyb3VuZENvbG9yOlwiJXZhbHVlXCJ9fSxGZiksdGFibGVjZWxsdmVydGljYWxhbGlnbjpLKHtzdHlsZXM6e1widmVydGljYWwtYWxpZ25cIjpcIiV2YWx1ZVwifX0sRmYpLHRhYmxlY2VsbGJvcmRlcmNvbG9yOksoe3N0eWxlczp7Ym9yZGVyQ29sb3I6XCIldmFsdWVcIn19LEZmKSx0YWJsZWNlbGxjbGFzczpLKHtjbGFzc2VzOltcIiV2YWx1ZVwiXX0sRmYpLHRhYmxlY2xhc3M6Syh7c2VsZWN0b3I6XCJ0YWJsZVwiLGNsYXNzZXM6W1wiJXZhbHVlXCJdfSxqZiksdGFibGVjZWxsYm9yZGVyc3R5bGU6Syh7c3R5bGVzOntib3JkZXJTdHlsZTpcIiV2YWx1ZVwifX0sRmYpLHRhYmxlY2VsbGJvcmRlcndpZHRoOksoe3N0eWxlczp7Ym9yZGVyV2lkdGg6XCIldmFsdWVcIn19LEZmKX0sVmY9THIoW3tub25lOltcImN1cnJlbnRcIl19LHtmaXJzdDpbXCJjdXJyZW50XCJdfSx7bWlkZGxlOltcImN1cnJlbnRcIixcInRhcmdldFwiXX0se2xhc3Q6W1wiY3VycmVudFwiXX1dKSxxZj1LKEsoe30sVmYpLHtub25lOmZ1bmN0aW9uKGUpe3JldHVybiBWZi5ub25lKGU9dm9pZCAwPT09ZT92b2lkIDA6ZSl9fSksVWY9ZnVuY3Rpb24oZSxuLHQscixvKXt2b2lkIDA9PT1vJiYobz14KTt2YXIgdT0xPT09cjtpZighdSYmdDw9MClyZXR1cm4gcWYuZmlyc3QoZVswXSk7aWYodSYmdD49ZS5sZW5ndGgtMSlyZXR1cm4gcWYubGFzdChlW2UubGVuZ3RoLTFdKTt2YXIgaT10K3IsYz1lW2ldO3JldHVybiBvKGMpP3FmLm1pZGRsZShuLGMpOlVmKGUsbixpLHIsbyl9LEdmPWZ1bmN0aW9uKGUsbix0LHIpe3JldHVybntzdGFydDplLHNvZmZzZXQ6bixmaW5pc2g6dCxmb2Zmc2V0OnJ9fSwkZj1Mcihbe2JlZm9yZTpbXCJlbGVtZW50XCJdfSx7b246W1wiZWxlbWVudFwiLFwib2Zmc2V0XCJdfSx7YWZ0ZXI6W1wiZWxlbWVudFwiXX1dKSxLZj17YmVmb3JlOiRmLmJlZm9yZSxvbjokZi5vbixhZnRlcjokZi5hZnRlcixjYXRhOmZ1bmN0aW9uKGUsbix0LHIpe3JldHVybiBlLmZvbGQobix0LHIpfSxnZXRTdGFydDpmdW5jdGlvbihlKXtyZXR1cm4gZS5mb2xkKFMsUyxTKX19LFhmPUxyKFt7ZG9tUmFuZ2U6W1wicm5nXCJdfSx7cmVsYXRpdmU6W1wic3RhcnRTaXR1XCIsXCJmaW5pc2hTaXR1XCJdfSx7ZXhhY3Q6W1wic3RhcnRcIixcInNvZmZzZXRcIixcImZpbmlzaFwiLFwiZm9mZnNldFwiXX1dKSxZZj17ZG9tUmFuZ2U6WGYuZG9tUmFuZ2UscmVsYXRpdmU6WGYucmVsYXRpdmUsZXhhY3Q6WGYuZXhhY3QsZXhhY3RGcm9tUmFuZ2U6ZnVuY3Rpb24oZSl7cmV0dXJuIFhmLmV4YWN0KGUuc3RhcnQsZS5zb2Zmc2V0LGUuZmluaXNoLGUuZm9mZnNldCl9LGdldFdpbjpmdW5jdGlvbihlKXt2YXIgbj1lLm1hdGNoKHtkb21SYW5nZTpmdW5jdGlvbihlKXtyZXR1cm4gVmUuZnJvbURvbShlLnN0YXJ0Q29udGFpbmVyKX0scmVsYXRpdmU6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gS2YuZ2V0U3RhcnQoZSl9LGV4YWN0OmZ1bmN0aW9uKGUsbix0LHIpe3JldHVybiBlfX0pO3JldHVybiBWZS5mcm9tRG9tKHRuKG4pLmRvbS5kZWZhdWx0Vmlldyl9LHJhbmdlOkdmfSxKZj1mdW5jdGlvbihlLG4pe3JldHVybiBlLnNlbGVjdE5vZGVDb250ZW50cyhuLmRvbSl9LFFmPUxyKFt7bHRyOltcInN0YXJ0XCIsXCJzb2Zmc2V0XCIsXCJmaW5pc2hcIixcImZvZmZzZXRcIl19LHtydGw6W1wic3RhcnRcIixcInNvZmZzZXRcIixcImZpbmlzaFwiLFwiZm9mZnNldFwiXX1dKTtmdW5jdGlvbiBaZihlLG4sdCl7cmV0dXJuIG4+PWUubGVmdCYmbjw9ZS5yaWdodCYmdD49ZS50b3AmJnQ8PWUuYm90dG9tfWZ1bmN0aW9uIGVzKHQscixlLG4sbyl7ZnVuY3Rpb24gbChlKXt2YXIgbj10LmRvbS5jcmVhdGVSYW5nZSgpO3JldHVybiBuLnNldFN0YXJ0KHIuZG9tLGUpLG4uY29sbGFwc2UoITApLG59dmFyIHU9RXQocikubGVuZ3RoLGk9ZnVuY3Rpb24oZSxuLHQscil7aWYoMD09PXIpcmV0dXJuIDA7aWYoZT09PXQpcmV0dXJuIHItMTtmb3IodmFyIG89dCx1PTE7dTxyO3UrKyl7dmFyIGk9bCh1KS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxjPU1hdGguYWJzKGUtaS5sZWZ0KTtpZihuPD1pLmJvdHRvbSl7aWYobjxpLnRvcHx8bzxjKXJldHVybiB1LTE7bz1jfX1yZXR1cm4gMH0oZSxuLG8ucmlnaHQsdSk7cmV0dXJuIGwoaSl9ZnVuY3Rpb24gbnMoZSxuKXtyZXR1cm4gbi1lLmxlZnQ8ZS5yaWdodC1ufWZ1bmN0aW9uIHRzKGUsbix0KXt2YXIgcj1lLmRvbS5jcmVhdGVSYW5nZSgpO3JldHVybiByLnNlbGVjdE5vZGUobi5kb20pLHIuY29sbGFwc2UodCkscn1mdW5jdGlvbiBycyhuLGUsdCl7dmFyIHI9bi5kb20uY3JlYXRlUmFuZ2UoKTtyLnNlbGVjdE5vZGUoZS5kb20pO3ZhciBvPW5zKHIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksdCk7cmV0dXJuKCEwPT09bz9XbzpqbykoZSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiB0cyhuLGUsbyl9KX1mdW5jdGlvbiBvcyhlLG4sdCl7dmFyIHI9bnMobi5kb20uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksdCk7cmV0dXJuIHEuc29tZSh0cyhlLG4scikpfWZ1bmN0aW9uIHVzKGUsbil7dmFyIHQ9WWUoZSk7cmV0dXJuXCJpbnB1dFwiPT09dD9LZi5hZnRlcihlKTp5KFtcImJyXCIsXCJpbWdcIl0sdCk/MD09PW4/S2YuYmVmb3JlKGUpOktmLmFmdGVyKGUpOktmLm9uKGUsbil9ZnVuY3Rpb24gaXMoZSxuKXt2YXIgdD1lLmZvbGQoS2YuYmVmb3JlLHVzLEtmLmFmdGVyKSxyPW4uZm9sZChLZi5iZWZvcmUsdXMsS2YuYWZ0ZXIpO3JldHVybiBZZi5yZWxhdGl2ZSh0LHIpfWZ1bmN0aW9uIGNzKGUsbix0LHIpe3ZhciBvPXVzKGUsbiksdT11cyh0LHIpO3JldHVybiBZZi5yZWxhdGl2ZShvLHUpfWZ1bmN0aW9uIGxzKGUpe3JldHVybiBxLmZyb20oZS5nZXRTZWxlY3Rpb24oKSl9ZnVuY3Rpb24gYXMoZSxuKXtscyhlKS5lYWNoKGZ1bmN0aW9uKGUpe2UucmVtb3ZlQWxsUmFuZ2VzKCksZS5hZGRSYW5nZShuKX0pfWZ1bmN0aW9uIGZzKGUsbix0LHIsbyl7YXMoZSxSbChlLG4sdCxyLG8pKX1mdW5jdGlvbiBzcyhsLGUpe3JldHVybiBBbChsLGUpLm1hdGNoKHtsdHI6ZnVuY3Rpb24oZSxuLHQscil7ZnMobCxlLG4sdCxyKX0scnRsOmZ1bmN0aW9uKG8sdSxpLGMpe2xzKGwpLmVhY2goZnVuY3Rpb24oZSl7aWYoZS5zZXRCYXNlQW5kRXh0ZW50KWUuc2V0QmFzZUFuZEV4dGVudChvLmRvbSx1LGkuZG9tLGMpO2Vsc2UgaWYoZS5leHRlbmQpdHJ5e3Q9aSxyPWMsKG49ZSkuY29sbGFwc2Uoby5kb20sdSksbi5leHRlbmQodC5kb20scil9Y2F0Y2goZSl7ZnMobCxpLGMsbyx1KX1lbHNlIGZzKGwsaSxjLG8sdSk7dmFyIG4sdCxyfSl9fSl9ZnVuY3Rpb24gbXMoZSxuLHQscixvKXtzcyhlLGNzKG4sdCxyLG8pKX1mdW5jdGlvbiBkcyhlLG4sdCl7c3MoZSxpcyhuLHQpKX1mdW5jdGlvbiBncyhlKXtpZigwPGUucmFuZ2VDb3VudCl7dmFyIG49ZS5nZXRSYW5nZUF0KDApLHQ9ZS5nZXRSYW5nZUF0KGUucmFuZ2VDb3VudC0xKTtyZXR1cm4gcS5zb21lKEdmKFZlLmZyb21Eb20obi5zdGFydENvbnRhaW5lciksbi5zdGFydE9mZnNldCxWZS5mcm9tRG9tKHQuZW5kQ29udGFpbmVyKSx0LmVuZE9mZnNldCkpfXJldHVybiBxLm5vbmUoKX1mdW5jdGlvbiBwcyhlKXtpZihudWxsPT09ZS5hbmNob3JOb2RlfHxudWxsPT09ZS5mb2N1c05vZGUpcmV0dXJuIGdzKGUpO3ZhciBuLHQscixvLHUsaSxjLGwsYSxmLHMsbT1WZS5mcm9tRG9tKGUuYW5jaG9yTm9kZSksZD1WZS5mcm9tRG9tKGUuZm9jdXNOb2RlKTtyZXR1cm4gbj1tLHQ9ZS5hbmNob3JPZmZzZXQscj1kLG89ZS5mb2N1c09mZnNldCxpPXQsYz1yLGw9bywoYT1ubih1PW4pLmRvbS5jcmVhdGVSYW5nZSgpKS5zZXRTdGFydCh1LmRvbSxpKSxhLnNldEVuZChjLmRvbSxsKSxmPWEscz1jZShuLHIpJiZ0PT09byxmLmNvbGxhcHNlZCYmIXM/cS5zb21lKEdmKG0sZS5hbmNob3JPZmZzZXQsZCxlLmZvY3VzT2Zmc2V0KSk6Z3MoZSl9ZnVuY3Rpb24gYnMoZSxuLHQpe2FzKGUsKCh0PXZvaWQgMD09PXR8fHQpP1RsOlNsKShlLG4pKX1mdW5jdGlvbiBocyhlKXtyZXR1cm4gbHMoZSkuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiAwPGUucmFuZ2VDb3VudH0pLmJpbmQocHMpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gWWYuZXhhY3QoZS5zdGFydCxlLnNvZmZzZXQsZS5maW5pc2gsZS5mb2Zmc2V0KX0pfWZ1bmN0aW9uIHZzKGUsbix0KXtyZXR1cm4gWnMoZSxuLChvPU51LENsKHI9dCx2b2lkIDApLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gcWYubm9uZShyKX0sZnVuY3Rpb24oZSl7cmV0dXJuIFVmKGUuYWxsLHIsZS5pbmRleCwxLG8pfSkpKTt2YXIgcixvfWZ1bmN0aW9uIHdzKGUsbil7dmFyIHQ9a2woZSxuKTtyZXR1cm4gR2YoVmUuZnJvbURvbSh0LnN0YXJ0Q29udGFpbmVyKSx0LnN0YXJ0T2Zmc2V0LFZlLmZyb21Eb20odC5lbmRDb250YWluZXIpLHQuZW5kT2Zmc2V0KX1mdW5jdGlvbiB5cyhlLG4pe3JldHVybntpdGVtOmUsbW9kZTpufX1mdW5jdGlvbiBDcyhlLG4sdCxyKXtyZXR1cm4gdm9pZCAwPT09ciYmKHI9S3MpLGUucHJvcGVydHkoKS5wYXJlbnQobikubWFwKGZ1bmN0aW9uKGUpe3JldHVybiB5cyhlLHIpfSl9ZnVuY3Rpb24gU3Mobil7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiAwPT09bi5wcm9wZXJ0eSgpLmNoaWxkcmVuKGUpLmxlbmd0aH19ZnVuY3Rpb24gVHMoZSxuKXtyZXR1cm4gYW0oc20sZSxTcyhzbSksbil9ZnVuY3Rpb24geHMoZSxuKXtyZXR1cm4gZm0oc20sZSxTcyhzbSksbil9ZnVuY3Rpb24gUnMoZSl7cmV0dXJuIEluKGUsXCJ0clwiKX1mdW5jdGlvbiBEcyhlKXtyZXR1cm5cImJyXCI9PT1ZZShlKX1mdW5jdGlvbiBPcyhlLG4sdCxyKXt2YXIgbyx1LGksYyxsLGEsZjtyZXR1cm4oRHMobik/KG89ZSwoaT1yKS50cmF2ZXJzZSh1PW4pLm9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gcG0odSxpLmdhdGhlcixvKX0pLm1hcChpLnJlbGF0aXZlKSk6KGM9ZSxsPXIsYW4oYT1uLGY9dCkuZmlsdGVyKERzKS5vclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIGFuKGEsZi0xKS5maWx0ZXIoRHMpfSkuYmluZChmdW5jdGlvbihlKXtyZXR1cm4gbC50cmF2ZXJzZShlKS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIHBtKGUsbC5nYXRoZXIsYykubWFwKGwucmVsYXRpdmUpfSxmdW5jdGlvbihlKXtyZXR1cm4gcm4ocj1lKS5iaW5kKGZ1bmN0aW9uKG4pe3ZhciB0PWxuKG4pO3JldHVybiBnbSh0LHIpLm1hcChmdW5jdGlvbihlKXtyZXR1cm57cGFyZW50Om4sY2hpbGRyZW46dCxlbGVtZW50OnIsaW5kZXg6ZX19KX0pLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gS2Yub24oZS5wYXJlbnQsZS5pbmRleCl9KTt2YXIgcn0pfSkpKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJue3N0YXJ0OmUsZmluaXNoOmV9fSl9ZnVuY3Rpb24gQXMoZSxuKXtyZXR1cm57bGVmdDplLmxlZnQsdG9wOmUudG9wK24scmlnaHQ6ZS5yaWdodCxib3R0b206ZS5ib3R0b20rbn19ZnVuY3Rpb24ga3MoZSxuKXtyZXR1cm57bGVmdDplLmxlZnQsdG9wOmUudG9wLW4scmlnaHQ6ZS5yaWdodCxib3R0b206ZS5ib3R0b20tbn19ZnVuY3Rpb24gSXMoZSxuLHQpe3JldHVybntsZWZ0OmUubGVmdCtuLHRvcDplLnRvcCt0LHJpZ2h0OmUucmlnaHQrbixib3R0b206ZS5ib3R0b20rdH19ZnVuY3Rpb24gQnMoZSl7cmV0dXJue2xlZnQ6ZS5sZWZ0LHRvcDplLnRvcCxyaWdodDplLnJpZ2h0LGJvdHRvbTplLmJvdHRvbX19ZnVuY3Rpb24gTXMoZSxuKXtyZXR1cm4gcS5zb21lKGUuZ2V0UmVjdChuKSl9ZnVuY3Rpb24gRXMoZSxuLHQpe3JldHVybiBnbihuKT9NcyhlLG4pLm1hcChCcyk6cG4obik/KHI9ZSxvPW4sKDA8PSh1PXQpJiZ1PExvKG8pP3IuZ2V0UmFuZ2VkUmVjdChvLHUsbyx1KzEpOjA8dT9yLmdldFJhbmdlZFJlY3Qobyx1LTEsbyx1KTpxLm5vbmUoKSkubWFwKEJzKSk6cS5ub25lKCk7dmFyIHIsbyx1fWZ1bmN0aW9uIFBzKGUsbil7cmV0dXJuIGduKG4pP01zKGUsbikubWFwKEJzKTpwbihuKT9lLmdldFJhbmdlZFJlY3QobiwwLG4sTG8obikpLm1hcChCcyk6cS5ub25lKCl9ZnVuY3Rpb24gTnMobixlLHIpe3JldHVybiBSbihmdW5jdGlvbihlLG4pe3JldHVybiBuKGUpfSxEbixlLGdjLHZvaWQgMCkuZm9sZCh2LGZ1bmN0aW9uKGUpe3JldHVybiBQcyhuLGUpLmV4aXN0cyhmdW5jdGlvbihlKXtyZXR1cm4obj1yKS5sZWZ0PCh0PWUpLmxlZnR8fE1hdGguYWJzKHQucmlnaHQtbi5sZWZ0KTwxfHxuLmxlZnQ+dC5yaWdodDt2YXIgbix0fSl9KX1mdW5jdGlvbiB6cyhuLHQsZSl7dmFyIHIsbz1uLm1vdmUoZSw1KSx1PXZtKHQsbixlLG8sMTAwKS5nZXRPcihvKSxpPXUsYz10O3JldHVybigocj1uKS5wb2ludChpKT5jLmdldElubmVySGVpZ2h0KCk/cS5zb21lKHIucG9pbnQoaSktYy5nZXRJbm5lckhlaWdodCgpKTpyLnBvaW50KGkpPDA/cS5zb21lKC1yLnBvaW50KGkpKTpxLm5vbmUoKSkuZm9sZChmdW5jdGlvbigpe3JldHVybiB0LnNpdHVzRnJvbVBvaW50KHUubGVmdCxuLnBvaW50KHUpKX0sZnVuY3Rpb24oZSl7cmV0dXJuIHQuc2Nyb2xsQnkoMCxlKSx0LnNpdHVzRnJvbVBvaW50KHUubGVmdCxuLnBvaW50KHUpLWUpfSl9ZnVuY3Rpb24gTHMoYSxmLHMsZSxtKXtyZXR1cm4gSW4oZSxcInRkLHRoXCIsZikuYmluZChmdW5jdGlvbihsKXtyZXR1cm4gSW4obCxcInRhYmxlXCIsZikuYmluZChmdW5jdGlvbihlKXtyZXR1cm4gbj1lLERuKG0sZnVuY3Rpb24oZSl7cmV0dXJuIHJuKGUpLmV4aXN0cyhmdW5jdGlvbihlKXtyZXR1cm4gY2UoZSxuKX0pfSx2b2lkIDApLmlzU29tZSgpPyhvPXQ9YSx1PXI9ZixpPWM9cyxvLmdldFNlbGVjdGlvbigpLmJpbmQoZnVuY3Rpb24ocil7cmV0dXJuIE9zKHUsci5maW5pc2gsci5mb2Zmc2V0LGkpLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gcS5zb21lKGhpKHIuZmluaXNoLHIuZm9mZnNldCkpfSxmdW5jdGlvbihlKXt2YXIgbj1vLmZyb21TaXR1cyhlKSx0PWRtLnZlcmlmeShvLHIuZmluaXNoLHIuZm9mZnNldCxuLmZpbmlzaCxuLmZvZmZzZXQsaS5mYWlsdXJlLHUpO3JldHVybiBkbS5jYXRhKHQsZnVuY3Rpb24oZSl7cmV0dXJuIHEubm9uZSgpfSxmdW5jdGlvbigpe3JldHVybiBxLm5vbmUoKX0sZnVuY3Rpb24oZSl7cmV0dXJuIHEuc29tZShoaShlLDApKX0sZnVuY3Rpb24oZSl7cmV0dXJuIHEuc29tZShoaShlLExvKGUpKSl9KX0pfSkuYmluZChmdW5jdGlvbihlKXtyZXR1cm4geW0odCxyLGUuZWxlbWVudCxlLm9mZnNldCxjLDIwKS5tYXAodC5mcm9tU2l0dXMpfSkuYmluZChmdW5jdGlvbihuKXtyZXR1cm4gSW4obi5maW5pc2gsXCJ0ZCx0aFwiLGYpLm1hcChmdW5jdGlvbihlKXtyZXR1cm57c3RhcnQ6bCxmaW5pc2g6ZSxyYW5nZTpufX0pfSkpOnEubm9uZSgpO3ZhciBvLHUsaSxuLHQscixjfSl9KX1mdW5jdGlvbiBfcyhlLG4sdCxyLG8sdSl7cmV0dXJuIEhlKCkuYnJvd3Nlci5pc0lFKCk/cS5ub25lKCk6dShyLG4pLm9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gTHMoZSxuLHQscixvKS5tYXAoZnVuY3Rpb24oZSl7dmFyIG49ZS5yYW5nZTtyZXR1cm4gbm0ocS5zb21lKHJtKG4uc3RhcnQsbi5zb2Zmc2V0LG4uZmluaXNoLG4uZm9mZnNldCkpLCEwKX0pfSl9ZnVuY3Rpb24gV3MoZSxyKXtyZXR1cm4gSW4oZSxcInRyXCIscikuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gSW4odCxcInRhYmxlXCIscikuYmluZChmdW5jdGlvbihlKXt2YXIgbj1kbihlLFwidHJcIik7cmV0dXJuIGNlKHQsblswXSk/YW0oc20sZSxmdW5jdGlvbihlKXtyZXR1cm4gam8oZSkuaXNTb21lKCl9LHIpLm1hcChmdW5jdGlvbihlKXt2YXIgbj1MbyhlKTtyZXR1cm4gbm0ocS5zb21lKHJtKGUsbixlLG4pKSwhMCl9KTpxLm5vbmUoKX0pfSl9ZnVuY3Rpb24ganMoZSxyKXtyZXR1cm4gSW4oZSxcInRyXCIscikuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gSW4odCxcInRhYmxlXCIscikuYmluZChmdW5jdGlvbihlKXt2YXIgbj1kbihlLFwidHJcIik7cmV0dXJuIGNlKHQsbltuLmxlbmd0aC0xXSk/Zm0oc20sZSxmdW5jdGlvbihlKXtyZXR1cm4gV28oZSkuaXNTb21lKCl9LHIpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gbm0ocS5zb21lKHJtKGUsMCxlLDApKSwhMCl9KTpxLm5vbmUoKX0pfSl9ZnVuY3Rpb24gRnMoZSxuLHQscixvLHUsaSl7cmV0dXJuIExzKGUsdCxyLG8sdSkuYmluZChmdW5jdGlvbihlKXtyZXR1cm4gb20obix0LGUuc3RhcnQsZS5maW5pc2gsaSl9KX1mdW5jdGlvbiBIcyhlLG4pe3JldHVybiBJbihlLFwidGQsdGhcIixuKX1mdW5jdGlvbiBWcyhuKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT1ufX1mdW5jdGlvbiBxcyhlKXtyZXR1cm4gMzc8PWUmJmU8PTQwfWZ1bmN0aW9uIFVzKGwpe3JldHVybntlbGVtZW50RnJvbVBvaW50OmZ1bmN0aW9uKGUsbil7cmV0dXJuIFZlLmZyb21Qb2ludChWZS5mcm9tRG9tKGwuZG9jdW1lbnQpLGUsbil9LGdldFJlY3Q6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZG9tLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpfSxnZXRSYW5nZWRSZWN0OmZ1bmN0aW9uKGUsbix0LHIpe3ZhciBvLHUsaSxjPVlmLmV4YWN0KGUsbix0LHIpO3JldHVybiBpPShvPWtsKGwsYykpLmdldENsaWVudFJlY3RzKCksMDwodT0wPGkubGVuZ3RoP2lbMF06by5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSkud2lkdGh8fDA8dS5oZWlnaHQ/cS5zb21lKHUpLm1hcChEbCk6cS5ub25lKCl9LGdldFNlbGVjdGlvbjpmdW5jdGlvbigpe3JldHVybiBocyhsKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHdzKGwsZSl9KX0sZnJvbVNpdHVzOmZ1bmN0aW9uKGUpe3ZhciBuPVlmLnJlbGF0aXZlKGUuc3RhcnQsZS5maW5pc2gpO3JldHVybiB3cyhsLG4pfSxzaXR1c0Zyb21Qb2ludDpmdW5jdGlvbihlLG4pe3JldHVybiB0PWUscj1uLG89VmUuZnJvbURvbShsLmRvY3VtZW50KSxKcyhvLHQscikubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBHZihWZS5mcm9tRG9tKGUuc3RhcnRDb250YWluZXIpLGUuc3RhcnRPZmZzZXQsVmUuZnJvbURvbShlLmVuZENvbnRhaW5lciksZS5lbmRPZmZzZXQpfSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiB0bShlLnN0YXJ0LGUuc29mZnNldCxlLmZpbmlzaCxlLmZvZmZzZXQpfSk7dmFyIHQscixvfSxjbGVhclNlbGVjdGlvbjpmdW5jdGlvbigpe2xzKGwpLmVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVtb3ZlQWxsUmFuZ2VzKCl9KX0sY29sbGFwc2VTZWxlY3Rpb246ZnVuY3Rpb24oaSl7dm9pZCAwPT09aSYmKGk9ITEpLGhzKGwpLmVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIGUuZm9sZChmdW5jdGlvbihlKXtyZXR1cm4gZS5jb2xsYXBzZShpKX0sZnVuY3Rpb24oZSxuKXt2YXIgdD1pP2U6bjtkcyhsLHQsdCl9LGZ1bmN0aW9uKGUsbix0LHIpe3ZhciBvPWk/ZTp0LHU9aT9uOnI7bXMobCxvLHUsbyx1KX0pfSl9LHNldFNlbGVjdGlvbjpmdW5jdGlvbihlKXttcyhsLGUuc3RhcnQsZS5zb2Zmc2V0LGUuZmluaXNoLGUuZm9mZnNldCl9LHNldFJlbGF0aXZlU2VsZWN0aW9uOmZ1bmN0aW9uKGUsbil7ZHMobCxlLG4pfSxzZWxlY3ROb2RlOmZ1bmN0aW9uKGUpe2JzKGwsZSwhMSl9LHNlbGVjdENvbnRlbnRzOmZ1bmN0aW9uKGUpe2JzKGwsZSl9LGdldElubmVySGVpZ2h0OmZ1bmN0aW9uKCl7cmV0dXJuIGwuaW5uZXJIZWlnaHR9LGdldFNjcm9sbFk6ZnVuY3Rpb24oKXt2YXIgZT1WZS5mcm9tRG9tKGwuZG9jdW1lbnQpLG49dm9pZCAwIT09ZT9lLmRvbTpkb2N1bWVudCx0PW4uYm9keS5zY3JvbGxMZWZ0fHxuLmRvY3VtZW50RWxlbWVudC5zY3JvbGxMZWZ0LHI9bi5ib2R5LnNjcm9sbFRvcHx8bi5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wO3JldHVybiB1byh0LHIpLnRvcH0sc2Nyb2xsQnk6ZnVuY3Rpb24oZSxuKXt2YXIgdCxyPWUsbz1uLHU9VmUuZnJvbURvbShsLmRvY3VtZW50KTsodD0odm9pZCAwIT09dT91LmRvbTpkb2N1bWVudCkuZGVmYXVsdFZpZXcpJiZ0LnNjcm9sbEJ5KHIsbyl9fX1mdW5jdGlvbiBHcyhlLG4pe3JldHVybntyb3dzOmUsY29sczpufX1mdW5jdGlvbiAkcyhlKXtyZXR1cm4hMT09PU11KFZlLmZyb21Eb20oZS50YXJnZXQpLFwiZXBob3gtc25vb2tlci1yZXNpemVyLWJhclwiKX1RZi5sdHIsUWYucnRsO2Z1bmN0aW9uIEtzKGUsbix0LHIpe3JldHVybiB2b2lkIDA9PT1yJiYocj11bSksdC5zaWJsaW5nKGUsbikubWFwKGZ1bmN0aW9uKGUpe3JldHVybiB5cyhlLHIpfSl9ZnVuY3Rpb24gWHMobyx1LG4pe2Z1bmN0aW9uIHQoZSl7V3QoZSxvLnNlbGVjdGVkKSxXdChlLG8uZmlyc3RTZWxlY3RlZCksV3QoZSxvLmxhc3RTZWxlY3RlZCl9ZnVuY3Rpb24gaShlKXtNbihlLG8uc2VsZWN0ZWQsXCIxXCIpfWZ1bmN0aW9uIGMoZSl7cihlKSxuKCl9ZnVuY3Rpb24gcihlKXtBKGRuKGUsby5zZWxlY3RlZFNlbGVjdG9yK1wiLFwiK28uZmlyc3RTZWxlY3RlZFNlbGVjdG9yK1wiLFwiK28ubGFzdFNlbGVjdGVkU2VsZWN0b3IpLHQpfXJldHVybntjbGVhckJlZm9yZVVwZGF0ZTpyLGNsZWFyOmMsc2VsZWN0UmFuZ2U6ZnVuY3Rpb24oZSxuLHQscil7YyhlKSxBKG4saSksTW4odCxvLmZpcnN0U2VsZWN0ZWQsXCIxXCIpLE1uKHIsby5sYXN0U2VsZWN0ZWQsXCIxXCIpLHUobix0LHIpfSxzZWxlY3RlZFNlbGVjdG9yOm8uc2VsZWN0ZWRTZWxlY3RvcixmaXJzdFNlbGVjdGVkU2VsZWN0b3I6by5maXJzdFNlbGVjdGVkU2VsZWN0b3IsbGFzdFNlbGVjdGVkU2VsZWN0b3I6by5sYXN0U2VsZWN0ZWRTZWxlY3Rvcn19dmFyIFlzPWZ1bmN0aW9uKGUsbix0LHIpe3JldHVybiBwbihuKT8odT1uLGk9dCxjPXIsKGw9KG89ZSkuZG9tLmNyZWF0ZVJhbmdlKCkpLnNlbGVjdE5vZGUodS5kb20pLEgobC5nZXRDbGllbnRSZWN0cygpLGZ1bmN0aW9uKGUpe3JldHVybiBaZihlLGksYyk/cS5zb21lKGUpOnEubm9uZSgpfSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlcyhvLHUsaSxjLGUpfSkpOihmPW4scz10LG09cixkPShhPWUpLmRvbS5jcmVhdGVSYW5nZSgpLEgobG4oZiksZnVuY3Rpb24oZSl7cmV0dXJuIGQuc2VsZWN0Tm9kZShlLmRvbSksWmYoZC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxzLG0pP1lzKGEsZSxzLG0pOnEubm9uZSgpfSkpO3ZhciBvLHUsaSxjLGwsYSxmLHMsbSxkfSxKcz1kb2N1bWVudC5jYXJldFBvc2l0aW9uRnJvbVBvaW50P2Z1bmN0aW9uKHQsZSxuKXt2YXIgcixvO3JldHVybiBxLmZyb20obnVsbD09PShvPShyPXQuZG9tKS5jYXJldFBvc2l0aW9uRnJvbVBvaW50KXx8dm9pZCAwPT09bz92b2lkIDA6by5jYWxsKHIsZSxuKSkuYmluZChmdW5jdGlvbihlKXtpZihudWxsPT09ZS5vZmZzZXROb2RlKXJldHVybiBxLm5vbmUoKTt2YXIgbj10LmRvbS5jcmVhdGVSYW5nZSgpO3JldHVybiBuLnNldFN0YXJ0KGUub2Zmc2V0Tm9kZSxlLm9mZnNldCksbi5jb2xsYXBzZSgpLHEuc29tZShuKX0pfTpkb2N1bWVudC5jYXJldFJhbmdlRnJvbVBvaW50P2Z1bmN0aW9uKGUsbix0KXt2YXIgcixvO3JldHVybiBxLmZyb20obnVsbD09PShvPShyPWUuZG9tKS5jYXJldFJhbmdlRnJvbVBvaW50KXx8dm9pZCAwPT09bz92b2lkIDA6by5jYWxsKHIsbix0KSl9OmZ1bmN0aW9uKG8sdSxuKXtyZXR1cm4gVmUuZnJvbVBvaW50KG8sdSxuKS5iaW5kKGZ1bmN0aW9uKHIpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gZT1vLHQ9dSwoMD09PWxuKG49cikubGVuZ3RoP29zOnJzKShlLG4sdCk7dmFyIGUsbix0fXJldHVybiAwPT09bG4ocikubGVuZ3RoP2UoKTpmdW5jdGlvbihlLG4sdCxyKXt2YXIgbz1lLmRvbS5jcmVhdGVSYW5nZSgpO28uc2VsZWN0Tm9kZShuLmRvbSk7dmFyIHU9by5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtyZXR1cm4gZnVuY3Rpb24oZSxuLHQscil7dmFyIG89ZS5kb20uY3JlYXRlUmFuZ2UoKTtvLnNlbGVjdE5vZGUobi5kb20pO3ZhciB1PW8uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksaT1NYXRoLm1heCh1LmxlZnQsTWF0aC5taW4odS5yaWdodCx0KSksYz1NYXRoLm1heCh1LnRvcCxNYXRoLm1pbih1LmJvdHRvbSxyKSk7cmV0dXJuIFlzKGUsbixpLGMpfShlLG4sTWF0aC5tYXgodS5sZWZ0LE1hdGgubWluKHUucmlnaHQsdCkpLE1hdGgubWF4KHUudG9wLE1hdGgubWluKHUuYm90dG9tLHIpKSl9KG8scix1LG4pLm9yVGh1bmsoZSl9KX0sUXM9dGlueW1jZS51dGlsLlRvb2xzLnJlc29sdmUoXCJ0aW55bWNlLnV0aWwuVktcIiksWnM9ZnVuY3Rpb24obix0LGUpe3JldHVybiBlLmZvbGQocS5ub25lLHEubm9uZSxmdW5jdGlvbihlLG4pe3JldHVybiBXbyhuKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHU9WWYuZXhhY3QoZSwwLGUsMCksdD11LG89WWYuZ2V0V2luKHQpLmRvbSxyPXQubWF0Y2goe2RvbVJhbmdlOmZ1bmN0aW9uKGUpe3ZhciBuPVZlLmZyb21Eb20oZS5zdGFydENvbnRhaW5lciksdD1WZS5mcm9tRG9tKGUuZW5kQ29udGFpbmVyKTtyZXR1cm4gY3MobixlLnN0YXJ0T2Zmc2V0LHQsZS5lbmRPZmZzZXQpfSxyZWxhdGl2ZTppcyxleGFjdDpjc30pLEFsKG8scikubWF0Y2goe2x0cjpuLHJ0bDpufSk7ZnVuY3Rpb24gbihlLG4sdCxyKXtyZXR1cm4gUmwobyxlLG4sdCxyKX12YXIgdCxvLHIsdX0pfSxmdW5jdGlvbihlKXtyZXR1cm4gbi5leGVjQ29tbWFuZChcIm1jZVRhYmxlSW5zZXJ0Um93QWZ0ZXJcIiksdnMobix0LGUpfSl9LGVtPVtcInRhYmxlXCIsXCJsaVwiLFwiZGxcIl0sbm09ZnVuY3Rpb24oZSxuKXtyZXR1cm57c2VsZWN0aW9uOmUsa2lsbDpufX0sdG09ZnVuY3Rpb24oZSxuLHQscil7cmV0dXJue3N0YXJ0OktmLm9uKGUsbiksZmluaXNoOktmLm9uKHQscil9fSxybT10bSxvbT1mdW5jdGlvbih0LGUscixuLG8pe3JldHVybiBjZShyLG4pP3Eubm9uZSgpOnRyKHIsbixlKS5iaW5kKGZ1bmN0aW9uKGUpe3ZhciBuPWUuYm94ZXMuZ2V0T3IoW10pO3JldHVybiAxPG4ubGVuZ3RoPyhvKHQsbixlLnN0YXJ0LGUuZmluaXNoKSxxLnNvbWUobm0ocS5zb21lKHJtKHIsMCxyLExvKHIpKSksITApKSk6cS5ub25lKCl9KX0sdW09ZnVuY3Rpb24oZSxuLHQscil7dm9pZCAwPT09ciYmKHI9dW0pO3ZhciBvPWUucHJvcGVydHkoKS5jaGlsZHJlbihuKTtyZXR1cm4gdC5maXJzdChvKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHlzKGUscil9KX0saW09W3tjdXJyZW50OkNzLG5leHQ6S3MsZmFsbGJhY2s6cS5ub25lKCl9LHtjdXJyZW50OktzLG5leHQ6dW0sZmFsbGJhY2s6cS5zb21lKENzKX0se2N1cnJlbnQ6dW0sbmV4dDp1bSxmYWxsYmFjazpxLnNvbWUoS3MpfV0sY209ZnVuY3Rpb24obix0LHIsbyxlKXtyZXR1cm4gdyhlPXZvaWQgMD09PWU/aW06ZSxmdW5jdGlvbihlKXtyZXR1cm4gZS5jdXJyZW50PT09cn0pLmJpbmQoZnVuY3Rpb24oZSl7cmV0dXJuIGUuY3VycmVudChuLHQsbyxlLm5leHQpLm9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gZS5mYWxsYmFjay5iaW5kKGZ1bmN0aW9uKGUpe3JldHVybiBjbShuLHQsZSxvKX0pfSl9KX0sbG09ZnVuY3Rpb24obixlLHQscixvLHUpe3JldHVybiBjbShuLGUscixvKS5iaW5kKGZ1bmN0aW9uKGUpe3JldHVybiB1KGUuaXRlbSk/cS5ub25lKCk6dChlLml0ZW0pP3Euc29tZShlLml0ZW0pOmxtKG4sZS5pdGVtLHQsZS5tb2RlLG8sdSl9KX0sYW09ZnVuY3Rpb24oZSxuLHQscil7cmV0dXJuIGxtKGUsbix0LEtzLHtzaWJsaW5nOmZ1bmN0aW9uKGUsbil7cmV0dXJuIGUucXVlcnkoKS5wcmV2U2libGluZyhuKX0sZmlyc3Q6ZnVuY3Rpb24oZSl7cmV0dXJuIDA8ZS5sZW5ndGg/cS5zb21lKGVbZS5sZW5ndGgtMV0pOnEubm9uZSgpfX0scil9LGZtPWZ1bmN0aW9uKGUsbix0LHIpe3JldHVybiBsbShlLG4sdCxLcyx7c2libGluZzpmdW5jdGlvbihlLG4pe3JldHVybiBlLnF1ZXJ5KCkubmV4dFNpYmxpbmcobil9LGZpcnN0OmZ1bmN0aW9uKGUpe3JldHVybiAwPGUubGVuZ3RoP3Euc29tZShlWzBdKTpxLm5vbmUoKX19LHIpfSxzbT1adCgpLG1tPUxyKFt7bm9uZTpbXCJtZXNzYWdlXCJdfSx7c3VjY2VzczpbXX0se2ZhaWxlZFVwOltcImNlbGxcIl19LHtmYWlsZWREb3duOltcImNlbGxcIl19XSksZG09SyhLKHt9LG1tKSx7dmVyaWZ5OmZ1bmN0aW9uKGksZSxuLHQscixjLG8pe3JldHVybiBJbih0LFwidGQsdGhcIixvKS5iaW5kKGZ1bmN0aW9uKHUpe3JldHVybiBJbihlLFwidGQsdGhcIixvKS5tYXAoZnVuY3Rpb24obyl7cmV0dXJuIGNlKHUsbyk/Y2UodCx1KSYmTG8odSk9PT1yP2Mobyk6bW0ubm9uZShcImluIHNhbWUgY2VsbFwiKTplcihScyxbdSxvXSkuZm9sZChmdW5jdGlvbigpe3JldHVybiBuPXUsdD0oZT1pKS5nZXRSZWN0KG8pLChyPWUuZ2V0UmVjdChuKSkucmlnaHQ+dC5sZWZ0JiZyLmxlZnQ8dC5yaWdodD9tbS5zdWNjZXNzKCk6YyhvKTt2YXIgZSxuLHQscn0sZnVuY3Rpb24oZSl7cmV0dXJuIGMobyl9KX0pfSkuZ2V0T3IobW0ubm9uZShcImRlZmF1bHRcIikpfSxjYXRhOmZ1bmN0aW9uKGUsbix0LHIsbyl7cmV0dXJuIGUuZm9sZChuLHQscixvKX19KSxnbT1mdW5jdGlvbihlLG4pe3JldHVybiBiKGUsUChjZSxuKSl9LHBtPWZ1bmN0aW9uKGUsbix0KXtyZXR1cm4gbihlLHQpLmJpbmQoZnVuY3Rpb24oZSl7cmV0dXJuIHBuKGUpJiYwPT09RXQoZSkudHJpbSgpLmxlbmd0aD9wbShlLG4sdCk6cS5zb21lKGUpfSl9LGJtPUxyKFt7bm9uZTpbXX0se3JldHJ5OltcImNhcmV0XCJdfV0pLGhtPXtwb2ludDpmdW5jdGlvbihlKXtyZXR1cm4gZS5ib3R0b219LGFkanVzdGVyOmZ1bmN0aW9uKGUsbix0LHIsbyl7dmFyIHU9QXMobyw1KTtyZXR1cm4gTWF0aC5hYnModC5ib3R0b20tci5ib3R0b20pPDF8fHQudG9wPm8uYm90dG9tP2JtLnJldHJ5KHUpOnQudG9wPT09by5ib3R0b20/Ym0ucmV0cnkoQXMobywxKSk6TnMoZSxuLG8pP2JtLnJldHJ5KElzKHUsNSwwKSk6Ym0ubm9uZSgpfSxtb3ZlOkFzLGdhdGhlcjp4c30sdm09ZnVuY3Rpb24odCxyLG8sdSxpKXtyZXR1cm4gMD09PWk/cS5zb21lKHUpOihuPXQsYz11LmxlZnQsbD1yLnBvaW50KHUpLG4uZWxlbWVudEZyb21Qb2ludChjLGwpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm5cInRhYmxlXCI9PT1ZZShlKX0pLmlzU29tZSgpPyhlPWktMSx2bSh0LHIsbyxyLm1vdmUodSw1KSxlKSk6dC5zaXR1c0Zyb21Qb2ludCh1LmxlZnQsci5wb2ludCh1KSkuYmluZChmdW5jdGlvbihlKXtyZXR1cm4gZS5zdGFydC5mb2xkKHEubm9uZSxmdW5jdGlvbihuKXtyZXR1cm4gUHModCxuKS5iaW5kKGZ1bmN0aW9uKGUpe3JldHVybiByLmFkanVzdGVyKHQsbixlLG8sdSkuZm9sZChxLm5vbmUsZnVuY3Rpb24oZSl7cmV0dXJuIHZtKHQscixvLGUsaS0xKX0pfSkub3JUaHVuayhmdW5jdGlvbigpe3JldHVybiBxLnNvbWUodSl9KX0scS5ub25lKX0pKTt2YXIgZSxuLGMsbH0sd209e3RyeVVwOlAoenMse3BvaW50OmZ1bmN0aW9uKGUpe3JldHVybiBlLnRvcH0sYWRqdXN0ZXI6ZnVuY3Rpb24oZSxuLHQscixvKXt2YXIgdT1rcyhvLDUpO3JldHVybiBNYXRoLmFicyh0LnRvcC1yLnRvcCk8MXx8dC5ib3R0b208by50b3A/Ym0ucmV0cnkodSk6dC5ib3R0b209PT1vLnRvcD9ibS5yZXRyeShrcyhvLDEpKTpOcyhlLG4sbyk/Ym0ucmV0cnkoSXModSw1LDApKTpibS5ub25lKCl9LG1vdmU6a3MsZ2F0aGVyOlRzfSksdHJ5RG93bjpQKHpzLGhtKSxpZVRyeVVwOmZ1bmN0aW9uKGUsbil7cmV0dXJuIGUuc2l0dXNGcm9tUG9pbnQobi5sZWZ0LG4udG9wLTUpfSxpZVRyeURvd246ZnVuY3Rpb24oZSxuKXtyZXR1cm4gZS5zaXR1c0Zyb21Qb2ludChuLmxlZnQsbi5ib3R0b20rNSl9LGdldEp1bXBTaXplOkMoNSl9LHltPWZ1bmN0aW9uKHIsbyx1LGksYyxsKXtyZXR1cm4gMD09PWw/cS5ub25lKCk6VG0ocixvLHUsaSxjKS5iaW5kKGZ1bmN0aW9uKGUpe3ZhciBuPXIuZnJvbVNpdHVzKGUpLHQ9ZG0udmVyaWZ5KHIsdSxpLG4uZmluaXNoLG4uZm9mZnNldCxjLmZhaWx1cmUsbyk7cmV0dXJuIGRtLmNhdGEodCxmdW5jdGlvbigpe3JldHVybiBxLm5vbmUoKX0sZnVuY3Rpb24oKXtyZXR1cm4gcS5zb21lKGUpfSxmdW5jdGlvbihlKXtyZXR1cm4gY2UodSxlKSYmMD09PWk/Q20ocix1LGksa3MsYyk6eW0ocixvLGUsMCxjLGwtMSl9LGZ1bmN0aW9uKGUpe3JldHVybiBjZSh1LGUpJiZpPT09TG8oZSk/Q20ocix1LGksQXMsYyk6eW0ocixvLGUsTG8oZSksYyxsLTEpfSl9KX0sQ209ZnVuY3Rpb24obixlLHQscixvKXtyZXR1cm4gRXMobixlLHQpLmJpbmQoZnVuY3Rpb24oZSl7cmV0dXJuIFNtKG4sbyxyKGUsd20uZ2V0SnVtcFNpemUoKSkpfSl9LFNtPWZ1bmN0aW9uKGUsbix0KXt2YXIgcj1IZSgpLmJyb3dzZXI7cmV0dXJuIHIuaXNDaHJvbWUoKXx8ci5pc1NhZmFyaSgpfHxyLmlzRmlyZWZveCgpfHxyLmlzRWRnZSgpP24ub3RoZXJSZXRyeShlLHQpOnIuaXNJRSgpP24uaWVSZXRyeShlLHQpOnEubm9uZSgpfSxUbT1mdW5jdGlvbihuLGUsdCxyLG8pe3JldHVybiBFcyhuLHQscikuYmluZChmdW5jdGlvbihlKXtyZXR1cm4gU20obixvLGUpfSl9LHhtPXt0cmF2ZXJzZTpjbixnYXRoZXI6eHMscmVsYXRpdmU6S2YuYmVmb3JlLG90aGVyUmV0cnk6d20udHJ5RG93bixpZVJldHJ5OndtLmllVHJ5RG93bixmYWlsdXJlOmRtLmZhaWxlZERvd259LFJtPXt0cmF2ZXJzZTp1bixnYXRoZXI6VHMscmVsYXRpdmU6S2YuYmVmb3JlLG90aGVyUmV0cnk6d20udHJ5VXAsaWVSZXRyeTp3bS5pZVRyeVVwLGZhaWx1cmU6ZG0uZmFpbGVkVXB9LERtPVZzKDM4KSxPbT1Wcyg0MCksQW09e2lzQmFja3dhcmQ6VnMoMzcpLGlzRm9yd2FyZDpWcygzOSl9LGttPXtpc0JhY2t3YXJkOlZzKDM5KSxpc0ZvcndhcmQ6VnMoMzcpfSxJbT10aW55bWNlLnV0aWwuVG9vbHMucmVzb2x2ZShcInRpbnltY2UuRW52XCIpO2Z1bmN0aW9uIEJtKEksQixlKXt2YXIgTT1YcyhYbCxmdW5jdGlvbihsLGEsZil7ZS50YXJnZXRzKCkuZWFjaChmdW5jdGlvbihjKXtydChhKS5lYWNoKGZ1bmN0aW9uKGUpe3ZhciBuLG8sdSx0PWZpKEkpLHI9JG8oRSxWZS5mcm9tRG9tKEkuZ2V0RG9jKCkpLHQpLGk9KG49YyxvPXIsX2kodT0kdC5mcm9tVGFibGUoZSksbikubWFwKGZ1bmN0aW9uKGUpe3ZhciBuLHQscj1NaSh1LG8sITEpO3JldHVybnt1cE9yTGVmdENlbGxzOk4oRWkoci5zbGljZSgwLChuPWUpW24ubGVuZ3RoLTFdLnJvdysxKSksZnVuY3Rpb24oZSl7cmV0dXJuIE8oZS5jZWxscy5zbGljZSgwLG5bbi5sZW5ndGgtMV0uY29sdW1uKzEpLGZ1bmN0aW9uKGUpe3JldHVybiBlLmVsZW1lbnR9KX0pLGRvd25PclJpZ2h0Q2VsbHM6TihFaShyLnNsaWNlKCh0PWUpWzBdLnJvdyt0WzBdLnJvd3NwYW4tMSxyLmxlbmd0aCkpLGZ1bmN0aW9uKGUpe3JldHVybiBPKGUuY2VsbHMuc2xpY2UodFswXS5jb2x1bW4rdFswXS5jb2xzcGFuLTEsZS5jZWxscy5sZW5ndGgpLGZ1bmN0aW9uKGUpe3JldHVybiBlLmVsZW1lbnR9KX0pfX0pKTtJLmZpcmUoXCJUYWJsZVNlbGVjdGlvbkNoYW5nZVwiLHtjZWxsczpsLHN0YXJ0OmEsZmluaXNoOmYsb3RoZXJDZWxsczppfSl9KX0pfSxmdW5jdGlvbigpe0kuZmlyZShcIlRhYmxlU2VsZWN0aW9uQ2xlYXJcIil9KTtyZXR1cm4gSS5vbihcImluaXRcIixmdW5jdGlvbihlKXt2YXIgbix0LHIsbyx1LGksbSxkLGcsYSxjLGwsZixzLHAsYixoPUkuZ2V0V2luKCksdj1ZbyhJKSx3PVpvKEkpLHk9KG49VXMoaCkse2NsZWFyc3RhdGU6KGM9bixsPXYsZj13LHM9TSxwPUpjKCksKHQ9e2NsZWFyc3RhdGU6Yj1wLmNsZWFyLG1vdXNlZG93bjpmdW5jdGlvbihlKXtzLmNsZWFyKGwpLEhzKGUudGFyZ2V0LGYpLmVhY2gocC5zZXQpfSxtb3VzZW92ZXI6ZnVuY3Rpb24oZSl7eChlKX0sbW91c2V1cDpmdW5jdGlvbihlKXt4KGUpLGIoKX19KS5jbGVhcnN0YXRlKSxtb3VzZWRvd246dC5tb3VzZWRvd24sbW91c2VvdmVyOnQubW91c2VvdmVyLG1vdXNldXA6dC5tb3VzZXVwfSksQz0oYT1VcyhoKSx7a2V5ZG93bjpmdW5jdGlvbihlLG4sdCxyLG8saSl7dmFyIHU9ZS5yYXcsYz11LndoaWNoLGw9ITA9PT11LnNoaWZ0S2V5O3JldHVybiBycihtLGcuc2VsZWN0ZWRTZWxlY3RvcikuZm9sZChmdW5jdGlvbigpe3JldHVybiBxcyhjKSYmIWwmJmcuY2xlYXJCZWZvcmVVcGRhdGUobSksT20oYykmJmw/UChGcyxhLG0sZCx4bSxyLG4sZy5zZWxlY3RSYW5nZSk6RG0oYykmJmw/UChGcyxhLG0sZCxSbSxyLG4sZy5zZWxlY3RSYW5nZSk6T20oYyk/UChfcyxhLGQseG0scixuLGpzKTpEbShjKT9QKF9zLGEsZCxSbSxyLG4sV3MpOnEubm9uZX0sZnVuY3Rpb24odSl7ZnVuY3Rpb24gZShlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gSChlLGZ1bmN0aW9uKGUpe3JldHVybiBuPWUucm93cyx0PWUuY29scyxyPW0sdXIodSxuLHQsKG89ZykuZmlyc3RTZWxlY3RlZFNlbGVjdG9yLG8ubGFzdFNlbGVjdGVkU2VsZWN0b3IpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gby5jbGVhckJlZm9yZVVwZGF0ZShyKSxvLnNlbGVjdFJhbmdlKHIsZS5ib3hlcyxlLnN0YXJ0LGUuZmluaXNoKSxlLmJveGVzfSk7dmFyIG4sdCxyLG99KS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIG9yKG0sZy5maXJzdFNlbGVjdGVkU2VsZWN0b3IsZy5sYXN0U2VsZWN0ZWRTZWxlY3RvcikubWFwKGZ1bmN0aW9uKGUpe3ZhciBuPU9tKGMpfHxpLmlzRm9yd2FyZChjKT9LZi5hZnRlcjpLZi5iZWZvcmU7cmV0dXJuIGEuc2V0UmVsYXRpdmVTZWxlY3Rpb24oS2Yub24oZS5maXJzdCwwKSxuKGUudGFibGUpKSxnLmNsZWFyKG0pLG5tKHEubm9uZSgpLCEwKX0pfSxmdW5jdGlvbihlKXtyZXR1cm4gcS5zb21lKG5tKHEubm9uZSgpLCEwKSl9KX19cmV0dXJuIE9tKGMpJiZsP2UoW0dzKDEsMCldKTpEbShjKSYmbD9lKFtHcygtMSwwKV0pOmkuaXNCYWNrd2FyZChjKSYmbD9lKFtHcygwLC0xKSxHcygtMSwwKV0pOmkuaXNGb3J3YXJkKGMpJiZsP2UoW0dzKDAsMSksR3MoMSwwKV0pOnFzKGMpJiYhbD9UOnEubm9uZX0pKCl9LGtleXVwOmZ1bmN0aW9uKGMsbCxhLGYscyl7cmV0dXJuIHJyKG0sZy5zZWxlY3RlZFNlbGVjdG9yKS5mb2xkKGZ1bmN0aW9uKCl7dmFyIHQscixlLG8sdSxuPWMucmF3LGk9bi53aGljaDtyZXR1cm4hMD09PW4uc2hpZnRLZXkmJnFzKGkpPyh0PW0scj1kLHU9Zy5zZWxlY3RSYW5nZSxjZShlPWwsbz1mKSYmYT09PXM/cS5ub25lKCk6SW4oZSxcInRkLHRoXCIscikuYmluZChmdW5jdGlvbihuKXtyZXR1cm4gSW4obyxcInRkLHRoXCIscikuYmluZChmdW5jdGlvbihlKXtyZXR1cm4gb20odCxyLG4sZSx1KX0pfSkpOnEubm9uZSgpfSxxLm5vbmUpfX0pLFM9KHI9bT12LG89ZD13LHU9Zz1NLGk9VXMoaCksZnVuY3Rpb24oZSx0KXt1LmNsZWFyQmVmb3JlVXBkYXRlKHIpLHRyKGUsdCxvKS5lYWNoKGZ1bmN0aW9uKGUpe3ZhciBuPWUuYm94ZXMuZ2V0T3IoW10pO3Uuc2VsZWN0UmFuZ2UocixuLGUuc3RhcnQsZS5maW5pc2gpLGkuc2VsZWN0Q29udGVudHModCksaS5jb2xsYXBzZVNlbGVjdGlvbigpfSl9KTtmdW5jdGlvbiBUKCl7cmV0dXJuIGcuY2xlYXIobSkscS5ub25lKCl9ZnVuY3Rpb24geChpKXtwLm9uKGZ1bmN0aW9uKGUpe3MuY2xlYXJCZWZvcmVVcGRhdGUobCksSHMoaS50YXJnZXQsZikuZWFjaChmdW5jdGlvbih1KXt0cihlLHUsZikuZWFjaChmdW5jdGlvbihlKXt2YXIgbix0LHIsbz1lLmJveGVzLmdldE9yKFtdKTsxPT09by5sZW5ndGg/KG49b1swXSx0PVwiZmFsc2VcIj09PXBhKG4pLHI9TG4oUHUoaS50YXJnZXQpLG4sY2UpLHQmJnImJihzLnNlbGVjdFJhbmdlKGwsbyxuLG4pLGMuc2VsZWN0Q29udGVudHMobikpKToxPG8ubGVuZ3RoJiYocy5zZWxlY3RSYW5nZShsLG8sZS5zdGFydCxlLmZpbmlzaCksYy5zZWxlY3RDb250ZW50cyh1KSl9KX0pfSl9ZnVuY3Rpb24gUihlLG4peyEwPT09ZS5yYXcuc2hpZnRLZXkmJihuLmtpbGwmJmUua2lsbCgpLG4uc2VsZWN0aW9uLmVhY2goZnVuY3Rpb24oZSl7dmFyIG49WWYucmVsYXRpdmUoZS5zdGFydCxlLmZpbmlzaCksdD1rbChoLG4pO0kuc2VsZWN0aW9uLnNldFJuZyh0KX0pKX1mdW5jdGlvbiBEKGUpe3JldHVybiAwPT09ZS5idXR0b259SS5vbihcIlRhYmxlU2VsZWN0b3JDaGFuZ2VcIixmdW5jdGlvbihlKXtyZXR1cm4gUyhlLnN0YXJ0LGUuZmluaXNoKX0pO3ZhciBPLEEsaz0oTz1YYyhWZS5mcm9tRG9tKHYpKSxBPVhjKDApLHt0b3VjaEVuZDpmdW5jdGlvbihlKXt2YXIgbix0LHI9VmUuZnJvbURvbShlLnRhcmdldCk7XCJ0ZFwiIT09WWUocikmJlwidGhcIiE9PVllKHIpfHwobj1PLmdldCgpLHQ9QS5nZXQoKSxjZShuLHIpJiZlLnRpbWVTdGFtcC10PDMwMCYmKGUucHJldmVudERlZmF1bHQoKSxTKHIscikpKSxPLnNldChyKSxBLnNldChlLnRpbWVTdGFtcCl9fSk7SS5vbihcImRyYWdzdGFydFwiLGZ1bmN0aW9uKGUpe3kuY2xlYXJzdGF0ZSgpfSksSS5vbihcIm1vdXNlZG93blwiLGZ1bmN0aW9uKGUpe0QoZSkmJiRzKGUpJiZ5Lm1vdXNlZG93bihtYShlKSl9KSxJLm9uKFwibW91c2VvdmVyXCIsZnVuY3Rpb24oZSl7dmFyIG47KHZvaWQgMD09PShuPWUpLmJ1dHRvbnN8fEltLmJyb3dzZXIuaXNFZGdlKCkmJjA9PT1uLmJ1dHRvbnN8fDAhPSgxJm4uYnV0dG9ucykpJiYkcyhlKSYmeS5tb3VzZW92ZXIobWEoZSkpfSksSS5vbihcIm1vdXNldXBcIixmdW5jdGlvbihlKXtEKGUpJiYkcyhlKSYmeS5tb3VzZXVwKG1hKGUpKX0pLEkub24oXCJ0b3VjaGVuZFwiLGsudG91Y2hFbmQpLEkub24oXCJrZXl1cFwiLGZ1bmN0aW9uKGUpe3ZhciBuLHQscixvPW1hKGUpO28ucmF3LnNoaWZ0S2V5JiZxcyhvLnJhdy53aGljaCkmJihuPUkuc2VsZWN0aW9uLmdldFJuZygpLHQ9VmUuZnJvbURvbShuLnN0YXJ0Q29udGFpbmVyKSxyPVZlLmZyb21Eb20obi5lbmRDb250YWluZXIpLEMua2V5dXAobyx0LG4uc3RhcnRPZmZzZXQscixuLmVuZE9mZnNldCkuZWFjaChmdW5jdGlvbihlKXtSKG8sZSl9KSl9KSxJLm9uKFwia2V5ZG93blwiLGZ1bmN0aW9uKGUpe3ZhciBuPW1hKGUpO0IoKS5lYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmhpZGVCYXJzKCl9KTt2YXIgdD1JLnNlbGVjdGlvbi5nZXRSbmcoKSxyPVZlLmZyb21Eb20odC5zdGFydENvbnRhaW5lciksbz1WZS5mcm9tRG9tKHQuZW5kQ29udGFpbmVyKSx1PVNyKEFtLGttKShWZS5mcm9tRG9tKEkuc2VsZWN0aW9uLmdldFN0YXJ0KCkpKTtDLmtleWRvd24obixyLHQuc3RhcnRPZmZzZXQsbyx0LmVuZE9mZnNldCx1KS5lYWNoKGZ1bmN0aW9uKGUpe1IobixlKX0pLEIoKS5lYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBlLnNob3dCYXJzKCl9KX0pLEkub24oXCJOb2RlQ2hhbmdlXCIsZnVuY3Rpb24oKXt2YXIgZT1JLnNlbGVjdGlvbjtlcihydCxbVmUuZnJvbURvbShlLmdldFN0YXJ0KCkpLFZlLmZyb21Eb20oZS5nZXRFbmQoKSldKS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIE0uY2xlYXIodil9LEUpfSl9KSx7Y2xlYXI6TS5jbGVhcn19ZnVuY3Rpb24gTW0obyx1KXtmdW5jdGlvbiBuKG4pe3JldHVybiBkLmZvcmFsbChmdW5jdGlvbihlKXtyZXR1cm4hZVtuXX0pfWZ1bmN0aW9uIGUoKXtyZXR1cm4gWWwodHUobyksWm8obykpLmJpbmQoZnVuY3Rpb24ocil7cmV0dXJuIFduKHJ0KHIpLFlsKFZlLmZyb21Eb20oby5zZWxlY3Rpb24uZ2V0RW5kKCkpLFpvKG8pKS5iaW5kKHJ0KSxmdW5jdGlvbihlLG4pe3JldHVybiBjZShlLG4pP2cocik/cS5zb21lKHtlbGVtZW50OnQ9cixtZXJnYWJsZTpxLm5vbmUoKSx1bm1lcmdhYmxlOnEubm9uZSgpLHNlbGVjdGlvbjpbdF19KTpxLnNvbWUob3UodSxlLHIpKTpxLm5vbmUoKTt2YXIgdH0pLmJpbmQoUyl9KX1mdW5jdGlvbiB0KHIpe3JldHVybiBydChyLmVsZW1lbnQpLm1hcChmdW5jdGlvbihlKXt2YXIgdD0kdC5mcm9tVGFibGUoZSksbj1CKF9pKHQscikuZ2V0T3IoW10pLGZ1bmN0aW9uKGUsbil7cmV0dXJuIG4uaXNMb2NrZWQmJihlLm9uQW55PSEwLDA9PT1uLmNvbHVtbj9lLm9uRmlyc3Q9ITA6bi5jb2x1bW4rbi5jb2xzcGFuPj10LmdyaWQuY29sdW1ucyYmKGUub25MYXN0PSEwKSksZX0se29uQW55OiExLG9uRmlyc3Q6ITEsb25MYXN0OiExfSk7cmV0dXJue21lcmdlYWJsZTpGaSh0LHIpLmlzU29tZSgpLHVubWVyZ2VhYmxlOkhpKHQscikuaXNTb21lKCksbG9ja2VkOm59fSl9ZnVuY3Rpb24gcigpe3Muc2V0KFkoZSkoKSksZD1zLmdldCgpLmJpbmQodCksQShtLmdldCgpLGZ1bmN0aW9uKGUpe3JldHVybiBlKCl9KX1mdW5jdGlvbiBpKG4pe3JldHVybiBuKCksbS5zZXQobS5nZXQoKS5jb25jYXQoW25dKSksZnVuY3Rpb24oKXttLnNldChrKG0uZ2V0KCksZnVuY3Rpb24oZSl7cmV0dXJuIGUhPT1ufSkpfX1mdW5jdGlvbiBjKG4sdCl7cmV0dXJuIGkoZnVuY3Rpb24oKXtyZXR1cm4gcy5nZXQoKS5mb2xkKGZ1bmN0aW9uKCl7bi5zZXREaXNhYmxlZCghMCl9LGZ1bmN0aW9uKGUpe24uc2V0RGlzYWJsZWQodChlKSl9KX0pfWZ1bmN0aW9uIGwobix0LHIpe3JldHVybiBpKGZ1bmN0aW9uKCl7cmV0dXJuIHMuZ2V0KCkuZm9sZChmdW5jdGlvbigpe24uc2V0RGlzYWJsZWQoITApLG4uc2V0QWN0aXZlKCExKX0sZnVuY3Rpb24oZSl7bi5zZXREaXNhYmxlZCh0KGUpKSxuLnNldEFjdGl2ZShyKGUpKX0pfSl9ZnVuY3Rpb24gYShuKXtyZXR1cm4gZC5leGlzdHMoZnVuY3Rpb24oZSl7cmV0dXJuIGUubG9ja2VkW25dfSl9ZnVuY3Rpb24gZihuLHQpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gbChlLGZ1bmN0aW9uKGUpe3JldHVybiBnKGUuZWxlbWVudCl9LGZ1bmN0aW9uKCl7cmV0dXJuIG8ucXVlcnlDb21tYW5kVmFsdWUobik9PT10fSl9fXZhciBzPVhjKHEubm9uZSgpKSxtPVhjKFtdKSxkPXEubm9uZSgpLGc9ZW4oXCJjYXB0aW9uXCIpLHA9ZihcIm1jZVRhYmxlUm93VHlwZVwiLFwiaGVhZGVyXCIpLGI9ZihcIm1jZVRhYmxlQ29sVHlwZVwiLFwidGhcIik7cmV0dXJuIG8ub24oXCJOb2RlQ2hhbmdlIEV4ZWNDb21tYW5kIFRhYmxlU2VsZWN0b3JDaGFuZ2VcIixyKSx7b25TZXR1cFRhYmxlOmZ1bmN0aW9uKGUpe3JldHVybiBjKGUsZnVuY3Rpb24oZSl7cmV0dXJuITF9KX0sb25TZXR1cENlbGxPclJvdzpmdW5jdGlvbihlKXtyZXR1cm4gYyhlLGZ1bmN0aW9uKGUpe3JldHVybiBnKGUuZWxlbWVudCl9KX0sb25TZXR1cENvbHVtbjpmdW5jdGlvbihuKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIGMoZSxmdW5jdGlvbihlKXtyZXR1cm4gZyhlLmVsZW1lbnQpfHxhKG4pfSl9fSxvblNldHVwUGFzdGVhYmxlOmZ1bmN0aW9uKG4pe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gYyhlLGZ1bmN0aW9uKGUpe3JldHVybiBnKGUuZWxlbWVudCl8fG4oKS5pc05vbmUoKX0pfX0sb25TZXR1cFBhc3RlYWJsZUNvbHVtbjpmdW5jdGlvbihuLHQpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gYyhlLGZ1bmN0aW9uKGUpe3JldHVybiBnKGUuZWxlbWVudCl8fG4oKS5pc05vbmUoKXx8YSh0KX0pfX0sb25TZXR1cE1lcmdlYWJsZTpmdW5jdGlvbihlKXtyZXR1cm4gYyhlLGZ1bmN0aW9uKGUpe3JldHVybiBuKFwibWVyZ2VhYmxlXCIpfSl9LG9uU2V0dXBVbm1lcmdlYWJsZTpmdW5jdGlvbihlKXtyZXR1cm4gYyhlLGZ1bmN0aW9uKGUpe3JldHVybiBuKFwidW5tZXJnZWFibGVcIil9KX0scmVzZXRUYXJnZXRzOnIsb25TZXR1cFRhYmxlV2l0aENhcHRpb246ZnVuY3Rpb24oZSl7cmV0dXJuIGwoZSx2LGZ1bmN0aW9uKGUpe3JldHVybiBydChlLmVsZW1lbnQsWm8obykpLmV4aXN0cyhmdW5jdGlvbihlKXtyZXR1cm4gQW4oZSxcImNhcHRpb25cIikuaXNTb21lKCl9KX0pfSxvblNldHVwVGFibGVSb3dIZWFkZXJzOnAsb25TZXR1cFRhYmxlQ29sdW1uSGVhZGVyczpiLHRhcmdldHM6cy5nZXR9fVlyLmFkZChcInRhYmxlXCIsZnVuY3Rpb24oYyl7dmFyIGUsbix0LHIsbyx1LGksbCxhLGYscyxtLGQ9KGU9ZnVuY3Rpb24oKXtyZXR1cm4gWW8oYyl9LG49ZnVuY3Rpb24oKXtyZXR1cm4gSmwodHUoYyksWm8oYykpfSx0PVhsLnNlbGVjdGVkU2VsZWN0b3Ise2dldDpmdW5jdGlvbigpe3JldHVybiBVcihlKCksdCkuZm9sZChmdW5jdGlvbigpe3JldHVybiBuKCkuZm9sZCgkcixYcil9LGZ1bmN0aW9uKGUpe3JldHVybiBLcihlKX0pfX0pLGc9TW0oYyxkKSxwPWJpKGMpLGI9Qm0oYyxwLmxhenlSZXNpemUsZyksaD1FYyhjLGIscC5sYXp5V2lyZSksdj0ocj1KYygpLG89SmMoKSx7Z2V0Um93czpyLmdldCxzZXRSb3dzOmZ1bmN0aW9uKGUpe2UuZm9sZChyLmNsZWFyLHIuc2V0KSxvLmNsZWFyKCl9LGNsZWFyUm93czpyLmNsZWFyLGdldENvbHVtbnM6by5nZXQsc2V0Q29sdW1uczpmdW5jdGlvbihlKXtlLmZvbGQoby5jbGVhcixvLnNldCksci5jbGVhcigpfSxjbGVhckNvbHVtbnM6by5jbGVhcn0pO3JldHVybiB5bChjLGgsMCxkLHYpLGY9aCxzPWQsbT1abyhhPWMpLGFlKHttY2VUYWJsZVJvd1R5cGU6ZnVuY3Rpb24oKXtyZXR1cm4gdyhmLmdldFRhYmxlUm93VHlwZSl9LG1jZVRhYmxlQ2VsbFR5cGU6ZnVuY3Rpb24oKXtyZXR1cm4gdyhmLmdldFRhYmxlQ2VsbFR5cGUpfSxtY2VUYWJsZUNvbFR5cGU6ZnVuY3Rpb24oKXtyZXR1cm4gdyhmLmdldFRhYmxlQ29sVHlwZSl9fSxmdW5jdGlvbihlLG4pe3JldHVybiBhLmFkZFF1ZXJ5VmFsdWVIYW5kbGVyKG4sZSl9KSxpdShjLGQsaCksZnVuY3Rpb24obixlLHQscil7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbi5leGVjQ29tbWFuZChlKX19ZnVuY3Rpb24gdShlKXtuLmV4ZWNDb21tYW5kKFwibWNlSW5zZXJ0VGFibGVcIiwhMSx7cm93czplLm51bVJvd3MsY29sdW1uczplLm51bUNvbHVtbnN9KX12YXIgaT17dGV4dDpcIlRhYmxlIHByb3BlcnRpZXNcIixvblNldHVwOnQub25TZXR1cFRhYmxlLG9uQWN0aW9uOm8oXCJtY2VUYWJsZVByb3BzXCIpfSxjPXt0ZXh0OlwiRGVsZXRlIHRhYmxlXCIsaWNvbjpcInRhYmxlLWRlbGV0ZS10YWJsZVwiLG9uU2V0dXA6dC5vblNldHVwVGFibGUsb25BY3Rpb246byhcIm1jZVRhYmxlRGVsZXRlXCIpfTtuLnVpLnJlZ2lzdHJ5LmFkZE1lbnVJdGVtKFwidGFibGVpbnNlcnRyb3diZWZvcmVcIix7dGV4dDpcIkluc2VydCByb3cgYmVmb3JlXCIsaWNvbjpcInRhYmxlLWluc2VydC1yb3ctYWJvdmVcIixvbkFjdGlvbjpvKFwibWNlVGFibGVJbnNlcnRSb3dCZWZvcmVcIiksb25TZXR1cDp0Lm9uU2V0dXBDZWxsT3JSb3d9KSxuLnVpLnJlZ2lzdHJ5LmFkZE1lbnVJdGVtKFwidGFibGVpbnNlcnRyb3dhZnRlclwiLHt0ZXh0OlwiSW5zZXJ0IHJvdyBhZnRlclwiLGljb246XCJ0YWJsZS1pbnNlcnQtcm93LWFmdGVyXCIsb25BY3Rpb246byhcIm1jZVRhYmxlSW5zZXJ0Um93QWZ0ZXJcIiksb25TZXR1cDp0Lm9uU2V0dXBDZWxsT3JSb3d9KSxuLnVpLnJlZ2lzdHJ5LmFkZE1lbnVJdGVtKFwidGFibGVkZWxldGVyb3dcIix7dGV4dDpcIkRlbGV0ZSByb3dcIixpY29uOlwidGFibGUtZGVsZXRlLXJvd1wiLG9uQWN0aW9uOm8oXCJtY2VUYWJsZURlbGV0ZVJvd1wiKSxvblNldHVwOnQub25TZXR1cENlbGxPclJvd30pLG4udWkucmVnaXN0cnkuYWRkTWVudUl0ZW0oXCJ0YWJsZXJvd3Byb3BzXCIse3RleHQ6XCJSb3cgcHJvcGVydGllc1wiLGljb246XCJ0YWJsZS1yb3ctcHJvcGVydGllc1wiLG9uQWN0aW9uOm8oXCJtY2VUYWJsZVJvd1Byb3BzXCIpLG9uU2V0dXA6dC5vblNldHVwQ2VsbE9yUm93fSksbi51aS5yZWdpc3RyeS5hZGRNZW51SXRlbShcInRhYmxlY3V0cm93XCIse3RleHQ6XCJDdXQgcm93XCIsaWNvbjpcImN1dC1yb3dcIixvbkFjdGlvbjpvKFwibWNlVGFibGVDdXRSb3dcIiksb25TZXR1cDp0Lm9uU2V0dXBDZWxsT3JSb3d9KSxuLnVpLnJlZ2lzdHJ5LmFkZE1lbnVJdGVtKFwidGFibGVjb3B5cm93XCIse3RleHQ6XCJDb3B5IHJvd1wiLGljb246XCJkdXBsaWNhdGUtcm93XCIsb25BY3Rpb246byhcIm1jZVRhYmxlQ29weVJvd1wiKSxvblNldHVwOnQub25TZXR1cENlbGxPclJvd30pLG4udWkucmVnaXN0cnkuYWRkTWVudUl0ZW0oXCJ0YWJsZXBhc3Rlcm93YmVmb3JlXCIse3RleHQ6XCJQYXN0ZSByb3cgYmVmb3JlXCIsaWNvbjpcInBhc3RlLXJvdy1iZWZvcmVcIixvbkFjdGlvbjpvKFwibWNlVGFibGVQYXN0ZVJvd0JlZm9yZVwiKSxvblNldHVwOnQub25TZXR1cFBhc3RlYWJsZShyLmdldFJvd3MpfSksbi51aS5yZWdpc3RyeS5hZGRNZW51SXRlbShcInRhYmxlcGFzdGVyb3dhZnRlclwiLHt0ZXh0OlwiUGFzdGUgcm93IGFmdGVyXCIsaWNvbjpcInBhc3RlLXJvdy1hZnRlclwiLG9uQWN0aW9uOm8oXCJtY2VUYWJsZVBhc3RlUm93QWZ0ZXJcIiksb25TZXR1cDp0Lm9uU2V0dXBQYXN0ZWFibGUoci5nZXRSb3dzKX0pO3ZhciBsPXt0eXBlOlwibmVzdGVkbWVudWl0ZW1cIix0ZXh0OlwiUm93XCIsZ2V0U3VibWVudUl0ZW1zOkMoXCJ0YWJsZWluc2VydHJvd2JlZm9yZSB0YWJsZWluc2VydHJvd2FmdGVyIHRhYmxlZGVsZXRlcm93IHRhYmxlcm93cHJvcHMgfCB0YWJsZWN1dHJvdyB0YWJsZWNvcHlyb3cgdGFibGVwYXN0ZXJvd2JlZm9yZSB0YWJsZXBhc3Rlcm93YWZ0ZXJcIil9O24udWkucmVnaXN0cnkuYWRkTWVudUl0ZW0oXCJ0YWJsZWluc2VydGNvbHVtbmJlZm9yZVwiLHt0ZXh0OlwiSW5zZXJ0IGNvbHVtbiBiZWZvcmVcIixpY29uOlwidGFibGUtaW5zZXJ0LWNvbHVtbi1iZWZvcmVcIixvbkFjdGlvbjpvKFwibWNlVGFibGVJbnNlcnRDb2xCZWZvcmVcIiksb25TZXR1cDp0Lm9uU2V0dXBDb2x1bW4oXCJvbkZpcnN0XCIpfSksbi51aS5yZWdpc3RyeS5hZGRNZW51SXRlbShcInRhYmxlaW5zZXJ0Y29sdW1uYWZ0ZXJcIix7dGV4dDpcIkluc2VydCBjb2x1bW4gYWZ0ZXJcIixpY29uOlwidGFibGUtaW5zZXJ0LWNvbHVtbi1hZnRlclwiLG9uQWN0aW9uOm8oXCJtY2VUYWJsZUluc2VydENvbEFmdGVyXCIpLG9uU2V0dXA6dC5vblNldHVwQ29sdW1uKFwib25MYXN0XCIpfSksbi51aS5yZWdpc3RyeS5hZGRNZW51SXRlbShcInRhYmxlZGVsZXRlY29sdW1uXCIse3RleHQ6XCJEZWxldGUgY29sdW1uXCIsaWNvbjpcInRhYmxlLWRlbGV0ZS1jb2x1bW5cIixvbkFjdGlvbjpvKFwibWNlVGFibGVEZWxldGVDb2xcIiksb25TZXR1cDp0Lm9uU2V0dXBDb2x1bW4oXCJvbkFueVwiKX0pLG4udWkucmVnaXN0cnkuYWRkTWVudUl0ZW0oXCJ0YWJsZWN1dGNvbHVtblwiLHt0ZXh0OlwiQ3V0IGNvbHVtblwiLGljb246XCJjdXQtY29sdW1uXCIsb25BY3Rpb246byhcIm1jZVRhYmxlQ3V0Q29sXCIpLG9uU2V0dXA6dC5vblNldHVwQ29sdW1uKFwib25BbnlcIil9KSxuLnVpLnJlZ2lzdHJ5LmFkZE1lbnVJdGVtKFwidGFibGVjb3B5Y29sdW1uXCIse3RleHQ6XCJDb3B5IGNvbHVtblwiLGljb246XCJkdXBsaWNhdGUtY29sdW1uXCIsb25BY3Rpb246byhcIm1jZVRhYmxlQ29weUNvbFwiKSxvblNldHVwOnQub25TZXR1cENvbHVtbihcIm9uQW55XCIpfSksbi51aS5yZWdpc3RyeS5hZGRNZW51SXRlbShcInRhYmxlcGFzdGVjb2x1bW5iZWZvcmVcIix7dGV4dDpcIlBhc3RlIGNvbHVtbiBiZWZvcmVcIixpY29uOlwicGFzdGUtY29sdW1uLWJlZm9yZVwiLG9uQWN0aW9uOm8oXCJtY2VUYWJsZVBhc3RlQ29sQmVmb3JlXCIpLG9uU2V0dXA6dC5vblNldHVwUGFzdGVhYmxlQ29sdW1uKHIuZ2V0Q29sdW1ucyxcIm9uRmlyc3RcIil9KSxuLnVpLnJlZ2lzdHJ5LmFkZE1lbnVJdGVtKFwidGFibGVwYXN0ZWNvbHVtbmFmdGVyXCIse3RleHQ6XCJQYXN0ZSBjb2x1bW4gYWZ0ZXJcIixpY29uOlwicGFzdGUtY29sdW1uLWFmdGVyXCIsb25BY3Rpb246byhcIm1jZVRhYmxlUGFzdGVDb2xBZnRlclwiKSxvblNldHVwOnQub25TZXR1cFBhc3RlYWJsZUNvbHVtbihyLmdldENvbHVtbnMsXCJvbkxhc3RcIil9KTt2YXIgYT17dHlwZTpcIm5lc3RlZG1lbnVpdGVtXCIsdGV4dDpcIkNvbHVtblwiLGdldFN1Ym1lbnVJdGVtczpDKFwidGFibGVpbnNlcnRjb2x1bW5iZWZvcmUgdGFibGVpbnNlcnRjb2x1bW5hZnRlciB0YWJsZWRlbGV0ZWNvbHVtbiB8IHRhYmxlY3V0Y29sdW1uIHRhYmxlY29weWNvbHVtbiB0YWJsZXBhc3RlY29sdW1uYmVmb3JlIHRhYmxlcGFzdGVjb2x1bW5hZnRlclwiKX07bi51aS5yZWdpc3RyeS5hZGRNZW51SXRlbShcInRhYmxlY2VsbHByb3BzXCIse3RleHQ6XCJDZWxsIHByb3BlcnRpZXNcIixpY29uOlwidGFibGUtY2VsbC1wcm9wZXJ0aWVzXCIsb25BY3Rpb246byhcIm1jZVRhYmxlQ2VsbFByb3BzXCIpLG9uU2V0dXA6dC5vblNldHVwQ2VsbE9yUm93fSksbi51aS5yZWdpc3RyeS5hZGRNZW51SXRlbShcInRhYmxlbWVyZ2VjZWxsc1wiLHt0ZXh0OlwiTWVyZ2UgY2VsbHNcIixpY29uOlwidGFibGUtbWVyZ2UtY2VsbHNcIixvbkFjdGlvbjpvKFwibWNlVGFibGVNZXJnZUNlbGxzXCIpLG9uU2V0dXA6dC5vblNldHVwTWVyZ2VhYmxlfSksbi51aS5yZWdpc3RyeS5hZGRNZW51SXRlbShcInRhYmxlc3BsaXRjZWxsc1wiLHt0ZXh0OlwiU3BsaXQgY2VsbFwiLGljb246XCJ0YWJsZS1zcGxpdC1jZWxsc1wiLG9uQWN0aW9uOm8oXCJtY2VUYWJsZVNwbGl0Q2VsbHNcIiksb25TZXR1cDp0Lm9uU2V0dXBVbm1lcmdlYWJsZX0pO3ZhciBmPXt0eXBlOlwibmVzdGVkbWVudWl0ZW1cIix0ZXh0OlwiQ2VsbFwiLGdldFN1Ym1lbnVJdGVtczpDKFwidGFibGVjZWxscHJvcHMgdGFibGVtZXJnZWNlbGxzIHRhYmxlc3BsaXRjZWxsc1wiKX07ITE9PT1uLmdldFBhcmFtKFwidGFibGVfZ3JpZFwiLCEwLFwiYm9vbGVhblwiKT9uLnVpLnJlZ2lzdHJ5LmFkZE1lbnVJdGVtKFwiaW5zZXJ0dGFibGVcIix7dGV4dDpcIlRhYmxlXCIsaWNvbjpcInRhYmxlXCIsb25BY3Rpb246byhcIm1jZUluc2VydFRhYmxlXCIpfSk6bi51aS5yZWdpc3RyeS5hZGROZXN0ZWRNZW51SXRlbShcImluc2VydHRhYmxlXCIse3RleHQ6XCJUYWJsZVwiLGljb246XCJ0YWJsZVwiLGdldFN1Ym1lbnVJdGVtczpmdW5jdGlvbigpe3JldHVyblt7dHlwZTpcImZhbmN5bWVudWl0ZW1cIixmYW5jeXR5cGU6XCJpbnNlcnR0YWJsZVwiLG9uQWN0aW9uOnV9XX19KSxuLnVpLnJlZ2lzdHJ5LmFkZE1lbnVJdGVtKFwiaW5zZXJ0dGFibGVkaWFsb2dcIix7dGV4dDpcIkluc2VydCB0YWJsZVwiLGljb246XCJ0YWJsZVwiLG9uQWN0aW9uOm8oXCJtY2VJbnNlcnRUYWJsZVwiKX0pLG4udWkucmVnaXN0cnkuYWRkTWVudUl0ZW0oXCJ0YWJsZXByb3BzXCIsaSksbi51aS5yZWdpc3RyeS5hZGRNZW51SXRlbShcImRlbGV0ZXRhYmxlXCIsYyksbi51aS5yZWdpc3RyeS5hZGROZXN0ZWRNZW51SXRlbShcInJvd1wiLGwpLG4udWkucmVnaXN0cnkuYWRkTmVzdGVkTWVudUl0ZW0oXCJjb2x1bW5cIixhKSxuLnVpLnJlZ2lzdHJ5LmFkZE5lc3RlZE1lbnVJdGVtKFwiY2VsbFwiLGYpLG4udWkucmVnaXN0cnkuYWRkQ29udGV4dE1lbnUoXCJ0YWJsZVwiLHt1cGRhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gdC5yZXNldFRhcmdldHMoKSx0LnRhcmdldHMoKS5mb2xkKEMoXCJcIiksZnVuY3Rpb24oZSl7cmV0dXJuXCJjYXB0aW9uXCI9PT1ZZShlLmVsZW1lbnQpP1widGFibGVwcm9wcyBkZWxldGV0YWJsZVwiOlwiY2VsbCByb3cgY29sdW1uIHwgYWR2dGFibGVzb3J0IHwgdGFibGVwcm9wcyBkZWxldGV0YWJsZVwifSl9fSk7dmFyIHM9RWYob2kobikpOzAhPT1zLmxlbmd0aCYmbi51aS5yZWdpc3RyeS5hZGROZXN0ZWRNZW51SXRlbShcInRhYmxlY2xhc3NcIix7aWNvbjpcInRhYmxlLWNsYXNzZXNcIix0ZXh0OlwiVGFibGUgc3R5bGVzXCIsZ2V0U3VibWVudUl0ZW1zOmZ1bmN0aW9uKCl7cmV0dXJuIE1mKG4sZSxzLFwidGFibGVjbGFzc1wiLGZ1bmN0aW9uKGUpe3JldHVybiBuLmV4ZWNDb21tYW5kKFwibWNlVGFibGVUb2dnbGVDbGFzc1wiLCExLGUpfSl9LG9uU2V0dXA6dC5vblNldHVwVGFibGV9KTt2YXIgbT1FZihyaShuKSk7MCE9PW0ubGVuZ3RoJiZuLnVpLnJlZ2lzdHJ5LmFkZE5lc3RlZE1lbnVJdGVtKFwidGFibGVjZWxsY2xhc3NcIix7aWNvbjpcInRhYmxlLWNlbGwtY2xhc3Nlc1wiLHRleHQ6XCJDZWxsIHN0eWxlc1wiLGdldFN1Ym1lbnVJdGVtczpmdW5jdGlvbigpe3JldHVybiBNZihuLGUsbSxcInRhYmxlY2VsbGNsYXNzXCIsZnVuY3Rpb24oZSl7cmV0dXJuIG4uZXhlY0NvbW1hbmQoXCJtY2VUYWJsZUNlbGxUb2dnbGVDbGFzc1wiLCExLGUpfSl9LG9uU2V0dXA6dC5vblNldHVwQ2VsbE9yUm93fSksbi51aS5yZWdpc3RyeS5hZGROZXN0ZWRNZW51SXRlbShcInRhYmxlY2VsbHZhbGlnblwiLHtpY29uOlwidmVydGljYWwtYWxpZ25cIix0ZXh0OlwiVmVydGljYWwgYWxpZ25cIixnZXRTdWJtZW51SXRlbXM6ZnVuY3Rpb24oKXtyZXR1cm4gTWYobixlLERmLFwidGFibGVjZWxsdmVydGljYWxhbGlnblwiLFpjKG4sXCJ2ZXJ0aWNhbC1hbGlnblwiKSl9LG9uU2V0dXA6dC5vblNldHVwQ2VsbE9yUm93fSksbi51aS5yZWdpc3RyeS5hZGROZXN0ZWRNZW51SXRlbShcInRhYmxlY2VsbGJvcmRlcndpZHRoXCIse2ljb246XCJib3JkZXItd2lkdGhcIix0ZXh0OlwiQm9yZGVyIHdpZHRoXCIsZ2V0U3VibWVudUl0ZW1zOmZ1bmN0aW9uKCl7cmV0dXJuIE1mKG4sZSxYdShuKSxcInRhYmxlY2VsbGJvcmRlcndpZHRoXCIsWmMobixcImJvcmRlci13aWR0aFwiKSl9LG9uU2V0dXA6dC5vblNldHVwQ2VsbE9yUm93fSksbi51aS5yZWdpc3RyeS5hZGROZXN0ZWRNZW51SXRlbShcInRhYmxlY2VsbGJvcmRlcnN0eWxlXCIse2ljb246XCJib3JkZXItc3R5bGVcIix0ZXh0OlwiQm9yZGVyIHN0eWxlXCIsZ2V0U3VibWVudUl0ZW1zOmZ1bmN0aW9uKCl7cmV0dXJuIE1mKG4sZSxZdShuKSxcInRhYmxlY2VsbGJvcmRlcnN0eWxlXCIsWmMobixcImJvcmRlci1zdHlsZVwiKSl9LG9uU2V0dXA6dC5vblNldHVwQ2VsbE9yUm93fSksbi51aS5yZWdpc3RyeS5hZGRUb2dnbGVNZW51SXRlbShcInRhYmxlY2FwdGlvblwiLHtpY29uOlwidGFibGUtY2FwdGlvblwiLHRleHQ6XCJUYWJsZSBjYXB0aW9uXCIsb25BY3Rpb246byhcIm1jZVRhYmxlVG9nZ2xlQ2FwdGlvblwiKSxvblNldHVwOnQub25TZXR1cFRhYmxlV2l0aENhcHRpb259KSxuLnVpLnJlZ2lzdHJ5LmFkZE5lc3RlZE1lbnVJdGVtKFwidGFibGVjZWxsYmFja2dyb3VuZGNvbG9yXCIse2ljb246XCJjZWxsLWJhY2tncm91bmQtY29sb3JcIix0ZXh0OlwiQmFja2dyb3VuZCBjb2xvclwiLGdldFN1Ym1lbnVJdGVtczpmdW5jdGlvbigpe3JldHVybiBubChuLHNpKG4pLFwiYmFja2dyb3VuZC1jb2xvclwiKX0sb25TZXR1cDp0Lm9uU2V0dXBDZWxsT3JSb3d9KSxuLnVpLnJlZ2lzdHJ5LmFkZE5lc3RlZE1lbnVJdGVtKFwidGFibGVjZWxsYm9yZGVyY29sb3JcIix7aWNvbjpcImNlbGwtYm9yZGVyLWNvbG9yXCIsdGV4dDpcIkJvcmRlciBjb2xvclwiLGdldFN1Ym1lbnVJdGVtczpmdW5jdGlvbigpe3JldHVybiBubChuLG1pKG4pLFwiYm9yZGVyLWNvbG9yXCIpfSxvblNldHVwOnQub25TZXR1cENlbGxPclJvd30pLG4udWkucmVnaXN0cnkuYWRkVG9nZ2xlTWVudUl0ZW0oXCJ0YWJsZXJvd2hlYWRlclwiLHt0ZXh0OlwiUm93IGhlYWRlclwiLGljb246XCJ0YWJsZS10b3AtaGVhZGVyXCIsb25BY3Rpb246dGwobiksb25TZXR1cDp0Lm9uU2V0dXBUYWJsZVJvd0hlYWRlcnN9KSxuLnVpLnJlZ2lzdHJ5LmFkZFRvZ2dsZU1lbnVJdGVtKFwidGFibGVjb2xoZWFkZXJcIix7dGV4dDpcIkNvbHVtbiBoZWFkZXJcIixpY29uOlwidGFibGUtbGVmdC1oZWFkZXJcIixvbkFjdGlvbjpybChuKSxvblNldHVwOnQub25TZXR1cFRhYmxlQ29sdW1uSGVhZGVyc30pfShjLGQsZyx2KSxmdW5jdGlvbihuLGUsdCxyKXtmdW5jdGlvbiBvKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBuLmV4ZWNDb21tYW5kKGUpfX1uLnVpLnJlZ2lzdHJ5LmFkZE1lbnVCdXR0b24oXCJ0YWJsZVwiLHt0b29sdGlwOlwiVGFibGVcIixpY29uOlwidGFibGVcIixmZXRjaDpmdW5jdGlvbihlKXtyZXR1cm4gZShcImluc2VydHRhYmxlIHwgY2VsbCByb3cgY29sdW1uIHwgYWR2dGFibGVzb3J0IHwgdGFibGVwcm9wcyBkZWxldGV0YWJsZVwiKX19KSxuLnVpLnJlZ2lzdHJ5LmFkZEJ1dHRvbihcInRhYmxlcHJvcHNcIix7dG9vbHRpcDpcIlRhYmxlIHByb3BlcnRpZXNcIixvbkFjdGlvbjpvKFwibWNlVGFibGVQcm9wc1wiKSxpY29uOlwidGFibGVcIixvblNldHVwOnQub25TZXR1cFRhYmxlfSksbi51aS5yZWdpc3RyeS5hZGRCdXR0b24oXCJ0YWJsZWRlbGV0ZVwiLHt0b29sdGlwOlwiRGVsZXRlIHRhYmxlXCIsb25BY3Rpb246byhcIm1jZVRhYmxlRGVsZXRlXCIpLGljb246XCJ0YWJsZS1kZWxldGUtdGFibGVcIixvblNldHVwOnQub25TZXR1cFRhYmxlfSksbi51aS5yZWdpc3RyeS5hZGRCdXR0b24oXCJ0YWJsZWNlbGxwcm9wc1wiLHt0b29sdGlwOlwiQ2VsbCBwcm9wZXJ0aWVzXCIsb25BY3Rpb246byhcIm1jZVRhYmxlQ2VsbFByb3BzXCIpLGljb246XCJ0YWJsZS1jZWxsLXByb3BlcnRpZXNcIixvblNldHVwOnQub25TZXR1cENlbGxPclJvd30pLG4udWkucmVnaXN0cnkuYWRkQnV0dG9uKFwidGFibGVtZXJnZWNlbGxzXCIse3Rvb2x0aXA6XCJNZXJnZSBjZWxsc1wiLG9uQWN0aW9uOm8oXCJtY2VUYWJsZU1lcmdlQ2VsbHNcIiksaWNvbjpcInRhYmxlLW1lcmdlLWNlbGxzXCIsb25TZXR1cDp0Lm9uU2V0dXBNZXJnZWFibGV9KSxuLnVpLnJlZ2lzdHJ5LmFkZEJ1dHRvbihcInRhYmxlc3BsaXRjZWxsc1wiLHt0b29sdGlwOlwiU3BsaXQgY2VsbFwiLG9uQWN0aW9uOm8oXCJtY2VUYWJsZVNwbGl0Q2VsbHNcIiksaWNvbjpcInRhYmxlLXNwbGl0LWNlbGxzXCIsb25TZXR1cDp0Lm9uU2V0dXBVbm1lcmdlYWJsZX0pLG4udWkucmVnaXN0cnkuYWRkQnV0dG9uKFwidGFibGVpbnNlcnRyb3diZWZvcmVcIix7dG9vbHRpcDpcIkluc2VydCByb3cgYmVmb3JlXCIsb25BY3Rpb246byhcIm1jZVRhYmxlSW5zZXJ0Um93QmVmb3JlXCIpLGljb246XCJ0YWJsZS1pbnNlcnQtcm93LWFib3ZlXCIsb25TZXR1cDp0Lm9uU2V0dXBDZWxsT3JSb3d9KSxuLnVpLnJlZ2lzdHJ5LmFkZEJ1dHRvbihcInRhYmxlaW5zZXJ0cm93YWZ0ZXJcIix7dG9vbHRpcDpcIkluc2VydCByb3cgYWZ0ZXJcIixvbkFjdGlvbjpvKFwibWNlVGFibGVJbnNlcnRSb3dBZnRlclwiKSxpY29uOlwidGFibGUtaW5zZXJ0LXJvdy1hZnRlclwiLG9uU2V0dXA6dC5vblNldHVwQ2VsbE9yUm93fSksbi51aS5yZWdpc3RyeS5hZGRCdXR0b24oXCJ0YWJsZWRlbGV0ZXJvd1wiLHt0b29sdGlwOlwiRGVsZXRlIHJvd1wiLG9uQWN0aW9uOm8oXCJtY2VUYWJsZURlbGV0ZVJvd1wiKSxpY29uOlwidGFibGUtZGVsZXRlLXJvd1wiLG9uU2V0dXA6dC5vblNldHVwQ2VsbE9yUm93fSksbi51aS5yZWdpc3RyeS5hZGRCdXR0b24oXCJ0YWJsZXJvd3Byb3BzXCIse3Rvb2x0aXA6XCJSb3cgcHJvcGVydGllc1wiLG9uQWN0aW9uOm8oXCJtY2VUYWJsZVJvd1Byb3BzXCIpLGljb246XCJ0YWJsZS1yb3ctcHJvcGVydGllc1wiLG9uU2V0dXA6dC5vblNldHVwQ2VsbE9yUm93fSksbi51aS5yZWdpc3RyeS5hZGRCdXR0b24oXCJ0YWJsZWluc2VydGNvbGJlZm9yZVwiLHt0b29sdGlwOlwiSW5zZXJ0IGNvbHVtbiBiZWZvcmVcIixvbkFjdGlvbjpvKFwibWNlVGFibGVJbnNlcnRDb2xCZWZvcmVcIiksaWNvbjpcInRhYmxlLWluc2VydC1jb2x1bW4tYmVmb3JlXCIsb25TZXR1cDp0Lm9uU2V0dXBDb2x1bW4oXCJvbkZpcnN0XCIpfSksbi51aS5yZWdpc3RyeS5hZGRCdXR0b24oXCJ0YWJsZWluc2VydGNvbGFmdGVyXCIse3Rvb2x0aXA6XCJJbnNlcnQgY29sdW1uIGFmdGVyXCIsb25BY3Rpb246byhcIm1jZVRhYmxlSW5zZXJ0Q29sQWZ0ZXJcIiksaWNvbjpcInRhYmxlLWluc2VydC1jb2x1bW4tYWZ0ZXJcIixvblNldHVwOnQub25TZXR1cENvbHVtbihcIm9uTGFzdFwiKX0pLG4udWkucmVnaXN0cnkuYWRkQnV0dG9uKFwidGFibGVkZWxldGVjb2xcIix7dG9vbHRpcDpcIkRlbGV0ZSBjb2x1bW5cIixvbkFjdGlvbjpvKFwibWNlVGFibGVEZWxldGVDb2xcIiksaWNvbjpcInRhYmxlLWRlbGV0ZS1jb2x1bW5cIixvblNldHVwOnQub25TZXR1cENvbHVtbihcIm9uQW55XCIpfSksbi51aS5yZWdpc3RyeS5hZGRCdXR0b24oXCJ0YWJsZWN1dHJvd1wiLHt0b29sdGlwOlwiQ3V0IHJvd1wiLGljb246XCJjdXQtcm93XCIsb25BY3Rpb246byhcIm1jZVRhYmxlQ3V0Um93XCIpLG9uU2V0dXA6dC5vblNldHVwQ2VsbE9yUm93fSksbi51aS5yZWdpc3RyeS5hZGRCdXR0b24oXCJ0YWJsZWNvcHlyb3dcIix7dG9vbHRpcDpcIkNvcHkgcm93XCIsaWNvbjpcImR1cGxpY2F0ZS1yb3dcIixvbkFjdGlvbjpvKFwibWNlVGFibGVDb3B5Um93XCIpLG9uU2V0dXA6dC5vblNldHVwQ2VsbE9yUm93fSksbi51aS5yZWdpc3RyeS5hZGRCdXR0b24oXCJ0YWJsZXBhc3Rlcm93YmVmb3JlXCIse3Rvb2x0aXA6XCJQYXN0ZSByb3cgYmVmb3JlXCIsaWNvbjpcInBhc3RlLXJvdy1iZWZvcmVcIixvbkFjdGlvbjpvKFwibWNlVGFibGVQYXN0ZVJvd0JlZm9yZVwiKSxvblNldHVwOnQub25TZXR1cFBhc3RlYWJsZShyLmdldFJvd3MpfSksbi51aS5yZWdpc3RyeS5hZGRCdXR0b24oXCJ0YWJsZXBhc3Rlcm93YWZ0ZXJcIix7dG9vbHRpcDpcIlBhc3RlIHJvdyBhZnRlclwiLGljb246XCJwYXN0ZS1yb3ctYWZ0ZXJcIixvbkFjdGlvbjpvKFwibWNlVGFibGVQYXN0ZVJvd0FmdGVyXCIpLG9uU2V0dXA6dC5vblNldHVwUGFzdGVhYmxlKHIuZ2V0Um93cyl9KSxuLnVpLnJlZ2lzdHJ5LmFkZEJ1dHRvbihcInRhYmxlY3V0Y29sXCIse3Rvb2x0aXA6XCJDdXQgY29sdW1uXCIsaWNvbjpcImN1dC1jb2x1bW5cIixvbkFjdGlvbjpvKFwibWNlVGFibGVDdXRDb2xcIiksb25TZXR1cDp0Lm9uU2V0dXBDb2x1bW4oXCJvbkFueVwiKX0pLG4udWkucmVnaXN0cnkuYWRkQnV0dG9uKFwidGFibGVjb3B5Y29sXCIse3Rvb2x0aXA6XCJDb3B5IGNvbHVtblwiLGljb246XCJkdXBsaWNhdGUtY29sdW1uXCIsb25BY3Rpb246byhcIm1jZVRhYmxlQ29weUNvbFwiKSxvblNldHVwOnQub25TZXR1cENvbHVtbihcIm9uQW55XCIpfSksbi51aS5yZWdpc3RyeS5hZGRCdXR0b24oXCJ0YWJsZXBhc3RlY29sYmVmb3JlXCIse3Rvb2x0aXA6XCJQYXN0ZSBjb2x1bW4gYmVmb3JlXCIsaWNvbjpcInBhc3RlLWNvbHVtbi1iZWZvcmVcIixvbkFjdGlvbjpvKFwibWNlVGFibGVQYXN0ZUNvbEJlZm9yZVwiKSxvblNldHVwOnQub25TZXR1cFBhc3RlYWJsZUNvbHVtbihyLmdldENvbHVtbnMsXCJvbkZpcnN0XCIpfSksbi51aS5yZWdpc3RyeS5hZGRCdXR0b24oXCJ0YWJsZXBhc3RlY29sYWZ0ZXJcIix7dG9vbHRpcDpcIlBhc3RlIGNvbHVtbiBhZnRlclwiLGljb246XCJwYXN0ZS1jb2x1bW4tYWZ0ZXJcIixvbkFjdGlvbjpvKFwibWNlVGFibGVQYXN0ZUNvbEFmdGVyXCIpLG9uU2V0dXA6dC5vblNldHVwUGFzdGVhYmxlQ29sdW1uKHIuZ2V0Q29sdW1ucyxcIm9uTGFzdFwiKX0pLG4udWkucmVnaXN0cnkuYWRkQnV0dG9uKFwidGFibGVpbnNlcnRkaWFsb2dcIix7dG9vbHRpcDpcIkluc2VydCB0YWJsZVwiLG9uQWN0aW9uOm8oXCJtY2VJbnNlcnRUYWJsZVwiKSxpY29uOlwidGFibGVcIn0pO3ZhciB1PUVmKG9pKG4pKTswIT09dS5sZW5ndGgmJm4udWkucmVnaXN0cnkuYWRkTWVudUJ1dHRvbihcInRhYmxlY2xhc3NcIix7aWNvbjpcInRhYmxlLWNsYXNzZXNcIix0b29sdGlwOlwiVGFibGUgc3R5bGVzXCIsZmV0Y2g6ZWwobixlLHUsXCJ0YWJsZWNsYXNzXCIsZnVuY3Rpb24oZSl7cmV0dXJuIG4uZXhlY0NvbW1hbmQoXCJtY2VUYWJsZVRvZ2dsZUNsYXNzXCIsITEsZSl9KSxvblNldHVwOnQub25TZXR1cFRhYmxlfSk7dmFyIGk9RWYocmkobikpOzAhPT1pLmxlbmd0aCYmbi51aS5yZWdpc3RyeS5hZGRNZW51QnV0dG9uKFwidGFibGVjZWxsY2xhc3NcIix7aWNvbjpcInRhYmxlLWNlbGwtY2xhc3Nlc1wiLHRvb2x0aXA6XCJDZWxsIHN0eWxlc1wiLGZldGNoOmVsKG4sZSxpLFwidGFibGVjZWxsY2xhc3NcIixmdW5jdGlvbihlKXtyZXR1cm4gbi5leGVjQ29tbWFuZChcIm1jZVRhYmxlQ2VsbFRvZ2dsZUNsYXNzXCIsITEsZSl9KSxvblNldHVwOnQub25TZXR1cENlbGxPclJvd30pLG4udWkucmVnaXN0cnkuYWRkTWVudUJ1dHRvbihcInRhYmxlY2VsbHZhbGlnblwiLHtpY29uOlwidmVydGljYWwtYWxpZ25cIix0b29sdGlwOlwiVmVydGljYWwgYWxpZ25cIixmZXRjaDplbChuLGUsRGYsXCJ0YWJsZWNlbGx2ZXJ0aWNhbGFsaWduXCIsWmMobixcInZlcnRpY2FsLWFsaWduXCIpKSxvblNldHVwOnQub25TZXR1cENlbGxPclJvd30pLG4udWkucmVnaXN0cnkuYWRkTWVudUJ1dHRvbihcInRhYmxlY2VsbGJvcmRlcndpZHRoXCIse2ljb246XCJib3JkZXItd2lkdGhcIix0b29sdGlwOlwiQm9yZGVyIHdpZHRoXCIsZmV0Y2g6ZWwobixlLFh1KG4pLFwidGFibGVjZWxsYm9yZGVyd2lkdGhcIixaYyhuLFwiYm9yZGVyLXdpZHRoXCIpKSxvblNldHVwOnQub25TZXR1cENlbGxPclJvd30pLG4udWkucmVnaXN0cnkuYWRkTWVudUJ1dHRvbihcInRhYmxlY2VsbGJvcmRlcnN0eWxlXCIse2ljb246XCJib3JkZXItc3R5bGVcIix0b29sdGlwOlwiQm9yZGVyIHN0eWxlXCIsZmV0Y2g6ZWwobixlLFl1KG4pLFwidGFibGVjZWxsYm9yZGVyc3R5bGVcIixaYyhuLFwiYm9yZGVyLXN0eWxlXCIpKSxvblNldHVwOnQub25TZXR1cENlbGxPclJvd30pLG4udWkucmVnaXN0cnkuYWRkVG9nZ2xlQnV0dG9uKFwidGFibGVjYXB0aW9uXCIse3Rvb2x0aXA6XCJUYWJsZSBjYXB0aW9uXCIsb25BY3Rpb246byhcIm1jZVRhYmxlVG9nZ2xlQ2FwdGlvblwiKSxpY29uOlwidGFibGUtY2FwdGlvblwiLG9uU2V0dXA6dC5vblNldHVwVGFibGVXaXRoQ2FwdGlvbn0pLG4udWkucmVnaXN0cnkuYWRkTWVudUJ1dHRvbihcInRhYmxlY2VsbGJhY2tncm91bmRjb2xvclwiLHtpY29uOlwiY2VsbC1iYWNrZ3JvdW5kLWNvbG9yXCIsdG9vbHRpcDpcIkJhY2tncm91bmQgY29sb3JcIixmZXRjaDpmdW5jdGlvbihlKXtyZXR1cm4gZShubChuLHNpKG4pLFwiYmFja2dyb3VuZC1jb2xvclwiKSl9LG9uU2V0dXA6dC5vblNldHVwQ2VsbE9yUm93fSksbi51aS5yZWdpc3RyeS5hZGRNZW51QnV0dG9uKFwidGFibGVjZWxsYm9yZGVyY29sb3JcIix7aWNvbjpcImNlbGwtYm9yZGVyLWNvbG9yXCIsdG9vbHRpcDpcIkJvcmRlciBjb2xvclwiLGZldGNoOmZ1bmN0aW9uKGUpe3JldHVybiBlKG5sKG4sbWkobiksXCJib3JkZXItY29sb3JcIikpfSxvblNldHVwOnQub25TZXR1cENlbGxPclJvd30pLG4udWkucmVnaXN0cnkuYWRkVG9nZ2xlQnV0dG9uKFwidGFibGVyb3doZWFkZXJcIix7dG9vbHRpcDpcIlJvdyBoZWFkZXJcIixpY29uOlwidGFibGUtdG9wLWhlYWRlclwiLG9uQWN0aW9uOnRsKG4pLG9uU2V0dXA6dC5vblNldHVwVGFibGVSb3dIZWFkZXJzfSksbi51aS5yZWdpc3RyeS5hZGRUb2dnbGVCdXR0b24oXCJ0YWJsZWNvbGhlYWRlclwiLHt0b29sdGlwOlwiQ29sdW1uIGhlYWRlclwiLGljb246XCJ0YWJsZS1sZWZ0LWhlYWRlclwiLG9uQWN0aW9uOnJsKG4pLG9uU2V0dXA6dC5vblNldHVwVGFibGVDb2x1bW5IZWFkZXJzfSl9KGMsZCxnLHYpLDA8KGw9KGk9YykuZ2V0UGFyYW0oXCJ0YWJsZV90b29sYmFyXCIsXCJ0YWJsZXByb3BzIHRhYmxlZGVsZXRlIHwgdGFibGVpbnNlcnRyb3diZWZvcmUgdGFibGVpbnNlcnRyb3dhZnRlciB0YWJsZWRlbGV0ZXJvdyB8IHRhYmxlaW5zZXJ0Y29sYmVmb3JlIHRhYmxlaW5zZXJ0Y29sYWZ0ZXIgdGFibGVkZWxldGVjb2xcIikpLmxlbmd0aCYmaS51aS5yZWdpc3RyeS5hZGRDb250ZXh0VG9vbGJhcihcInRhYmxlXCIse3ByZWRpY2F0ZTpmdW5jdGlvbihlKXtyZXR1cm4gaS5kb20uaXMoZSxcInRhYmxlXCIpJiZpLmdldEJvZHkoKS5jb250YWlucyhlKX0saXRlbXM6bCxzY29wZTpcIm5vZGVcIixwb3NpdGlvbjpcIm5vZGVcIn0pLGMub24oXCJQcmVJbml0XCIsZnVuY3Rpb24oKXtjLnNlcmlhbGl6ZXIuYWRkVGVtcEF0dHIoWGwuZmlyc3RTZWxlY3RlZCksYy5zZXJpYWxpemVyLmFkZFRlbXBBdHRyKFhsLmxhc3RTZWxlY3RlZCksYy5mb3JtYXR0ZXIucmVnaXN0ZXIoSGYpfSksYy5nZXRQYXJhbShcInRhYmxlX3RhYl9uYXZpZ2F0aW9uXCIsITAsXCJib29sZWFuXCIpJiZjLm9uKFwia2V5ZG93blwiLGZ1bmN0aW9uKGUpe3ZhciBuLHQscixvLHU9YyxpPWI7KG49ZSkua2V5Q29kZT09PVFzLlRBQiYmKHQ9WW8odSkscj1mdW5jdGlvbihlKXt2YXIgbj1ZZShlKTtyZXR1cm4gY2UoZSx0KXx8eShlbSxuKX0sbz11LnNlbGVjdGlvbi5nZXRSbmcoKSxldChWZS5mcm9tRG9tKG4uc2hpZnRLZXk/by5zdGFydENvbnRhaW5lcjpvLmVuZENvbnRhaW5lcikscikuZWFjaChmdW5jdGlvbihlKXtuLnByZXZlbnREZWZhdWx0KCkscnQoZSxyKS5lYWNoKGkuY2xlYXIpLHUuc2VsZWN0aW9uLmNvbGxhcHNlKG4uc2hpZnRLZXkpLChuLnNoaWZ0S2V5P2Z1bmN0aW9uKGUsbix0KXtyZXR1cm4gWnMoZSxuLChvPU51LENsKHI9dCx2b2lkIDApLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gcWYubm9uZSgpfSxmdW5jdGlvbihlKXtyZXR1cm4gVWYoZS5hbGwscixlLmluZGV4LC0xLG8pfSkpKTt2YXIgcixvfTp2cykodSxyLGUpLmVhY2goZnVuY3Rpb24oZSl7dS5zZWxlY3Rpb24uc2V0Um5nKGUpfSl9KSl9KSxjLm9uKFwicmVtb3ZlXCIsZnVuY3Rpb24oKXtwLmRlc3Ryb3koKX0pLHtpbnNlcnRUYWJsZToodT1jLGZ1bmN0aW9uKGUsbix0KXt2YXIgcj1MYyh1LG4sZSx0PXZvaWQgMD09PXQ/e306dCxcIkludmFsaWQgdmFsdWVzIGZvciBpbnNlcnRUYWJsZSAtIHJvd3MgYW5kIGNvbHVtbnMgdmFsdWVzIGFyZSByZXF1aXJlZCB0byBpbnNlcnQgYSB0YWJsZS5cIik7cmV0dXJuIHUudW5kb01hbmFnZXIuYWRkKCkscn0pLHNldENsaXBib2FyZFJvd3M6V2Modi5zZXRSb3dzKSxnZXRDbGlwYm9hcmRSb3dzOl9jKHYuZ2V0Um93cyksc2V0Q2xpcGJvYXJkQ29sczpXYyh2LnNldENvbHVtbnMpLGdldENsaXBib2FyZENvbHM6X2Modi5nZXRDb2x1bW5zKSxyZXNpemVIYW5kbGVyOnAsc2VsZWN0aW9uVGFyZ2V0czpnfTtmdW5jdGlvbiB3KHIpe3JldHVybiBKbCh0dShhKSkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gcnQodCxtKS5tYXAoZnVuY3Rpb24oZSl7dmFyIG49b3UocyxlLHQpO3JldHVybiByKGUsbil9KX0pLmdldE9yKFwiXCIpfX0pfSgpOyJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLFlBQVU7RUFBQyxZQUFZOztFQUFDLFNBQVNBLENBQUNBLENBQUNDLENBQUMsRUFBQztJQUFDLE9BQU8sVUFBU0QsQ0FBQyxFQUFDO01BQUMsT0FBT0UsQ0FBQyxHQUFBQyxPQUFBLENBQVFDLENBQUMsR0FBQ0osQ0FBQyxDQUFDLEVBQUMsQ0FBQyxJQUFJLEtBQUdJLENBQUMsR0FBQyxNQUFNLEdBQUMsUUFBUSxJQUFFRixDQUFDLEtBQUdHLEtBQUssQ0FBQ0MsU0FBUyxDQUFDQyxhQUFhLENBQUNILENBQUMsQ0FBQyxJQUFFQSxDQUFDLENBQUNJLFdBQVcsSUFBRSxPQUFPLEtBQUdKLENBQUMsQ0FBQ0ksV0FBVyxDQUFDQyxJQUFJLENBQUMsR0FBQyxPQUFPLEdBQUMsUUFBUSxJQUFFUCxDQUFDLEtBQUdRLE1BQU0sQ0FBQ0osU0FBUyxDQUFDQyxhQUFhLENBQUNILENBQUMsQ0FBQyxJQUFFQSxDQUFDLENBQUNJLFdBQVcsSUFBRSxRQUFRLEtBQUdKLENBQUMsQ0FBQ0ksV0FBVyxDQUFDQyxJQUFJLENBQUMsR0FBQyxRQUFRLEdBQUNQLENBQUMsTUFBSUQsQ0FBQztNQUFDLElBQUlHLENBQUMsRUFBQ0YsQ0FBQztJQUFBLENBQUM7RUFBQTtFQUFDLFNBQVNFLENBQUNBLENBQUNBLENBQUMsRUFBQztJQUFDLE9BQU8sVUFBU0osQ0FBQyxF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QyxDQUFDLEVBQUNxQixDQUFDLENBQUM0TixFQUFFLENBQUMsUUFBUSxFQUFDLFlBQVU7TUFBQ3JOLENBQUMsQ0FBQzh0QixPQUFPLEVBQUU7SUFBQSxDQUFDLENBQUMsRUFBQztNQUFDd3JCLFdBQVcsR0FBRTk1QyxDQUFDLEdBQUNDLENBQUMsRUFBQyxVQUFTckIsQ0FBQyxFQUFDSSxDQUFDLEVBQUNGLENBQUMsRUFBQztRQUFDLElBQUlELENBQUMsR0FBQ3krQixFQUFFLENBQUN0OUIsQ0FBQyxFQUFDaEIsQ0FBQyxFQUFDSixDQUFDLEVBQUNFLENBQUMsR0FBQyxLQUFLLENBQUMsS0FBR0EsQ0FBQyxHQUFDLENBQUMsQ0FBQyxHQUFDQSxDQUFDLEVBQUMsMEZBQTBGLENBQUM7UUFBQyxPQUFPa0IsQ0FBQyxDQUFDcXlCLFdBQVcsQ0FBQ3JHLEdBQUcsRUFBRSxFQUFDbnRCLENBQUM7TUFBQSxDQUFDLENBQUM7TUFBQ2s3QyxnQkFBZ0IsRUFBQ3JjLEVBQUUsQ0FBQy84QixDQUFDLENBQUNza0MsT0FBTyxDQUFDO01BQUMrVSxnQkFBZ0IsRUFBQ3ZjLEVBQUUsQ0FBQzk4QixDQUFDLENBQUM2a0MsT0FBTyxDQUFDO01BQUN5VSxnQkFBZ0IsRUFBQ3ZjLEVBQUUsQ0FBQy84QixDQUFDLENBQUNva0MsVUFBVSxDQUFDO01BQUNtVixnQkFBZ0IsRUFBQ3pjLEVBQUUsQ0FBQzk4QixDQUFDLENBQUMwa0MsVUFBVSxDQUFDO01BQUM4VSxhQUFhLEVBQUMzNUMsQ0FBQztNQUFDNDVDLGdCQUFnQixFQUFDeDZDO0lBQUMsQ0FBQztJQUFDLFNBQVNtRCxDQUFDQSxDQUFDbEUsQ0FBQyxFQUFDO01BQUMsT0FBTzRrQyxFQUFFLENBQUMxZCxFQUFFLENBQUNsbUIsQ0FBQyxDQUFDLENBQUMsQ0FBQzhCLElBQUksQ0FBQyxVQUFTN0MsQ0FBQyxFQUFDO1FBQUMsT0FBT3lULEVBQUUsQ0FBQ3pULENBQUMsRUFBQ29DLENBQUMsQ0FBQyxDQUFDTyxHQUFHLENBQUMsVUFBUzdDLENBQUMsRUFBQztVQUFDLElBQUlJLENBQUMsR0FBQ21uQixFQUFFLENBQUN6bEIsQ0FBQyxFQUFDOUIsQ0FBQyxFQUFDRSxDQUFDLENBQUM7VUFBQyxPQUFPRCxDQUFDLENBQUNELENBQUMsRUFBQ0ksQ0FBQyxDQUFDO1FBQUEsQ0FBQyxDQUFDO01BQUEsQ0FBQyxDQUFDLENBQUNnQyxLQUFLLENBQUMsRUFBRSxDQUFDO0lBQUE7RUFBQyxDQUFDLENBQUM7QUFBQSxDQUFDLEVBQUUiLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvcGx1Z2lucy9jdXN0b20vdGlueW1jZS9wbHVnaW5zL3RhYmxlL3BsdWdpbi5taW4uanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/table/plugin.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/plugins/table/plugin.min.js"]();
/******/ 	
/******/ })()
;
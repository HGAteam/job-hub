/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/preview/plugin.js":
/*!********************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/preview/plugin.js ***!
  \********************************************************************************/
/***/ (() => {

eval("/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.7 (2022-12-06)\r\n */\n(function () {\n  'use strict';\n\n  var global$2 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n  var global$1 = tinymce.util.Tools.resolve('tinymce.Env');\n  var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n  var getContentStyle = function getContentStyle(editor) {\n    return editor.getParam('content_style', '', 'string');\n  };\n  var shouldUseContentCssCors = function shouldUseContentCssCors(editor) {\n    return editor.getParam('content_css_cors', false, 'boolean');\n  };\n  var getBodyClassByHash = function getBodyClassByHash(editor) {\n    var bodyClass = editor.getParam('body_class', '', 'hash');\n    return bodyClass[editor.id] || '';\n  };\n  var getBodyClass = function getBodyClass(editor) {\n    var bodyClass = editor.getParam('body_class', '', 'string');\n    if (bodyClass.indexOf('=') === -1) {\n      return bodyClass;\n    } else {\n      return getBodyClassByHash(editor);\n    }\n  };\n  var getBodyIdByHash = function getBodyIdByHash(editor) {\n    var bodyId = editor.getParam('body_id', '', 'hash');\n    return bodyId[editor.id] || bodyId;\n  };\n  var getBodyId = function getBodyId(editor) {\n    var bodyId = editor.getParam('body_id', 'tinymce', 'string');\n    if (bodyId.indexOf('=') === -1) {\n      return bodyId;\n    } else {\n      return getBodyIdByHash(editor);\n    }\n  };\n  var getPreviewHtml = function getPreviewHtml(editor) {\n    var headHtml = '';\n    var encode = editor.dom.encode;\n    var contentStyle = getContentStyle(editor);\n    headHtml += '<base href=\"' + encode(editor.documentBaseURI.getURI()) + '\">';\n    var cors = shouldUseContentCssCors(editor) ? ' crossorigin=\"anonymous\"' : '';\n    global.each(editor.contentCSS, function (url) {\n      headHtml += '<link type=\"text/css\" rel=\"stylesheet\" href=\"' + encode(editor.documentBaseURI.toAbsolute(url)) + '\"' + cors + '>';\n    });\n    if (contentStyle) {\n      headHtml += '<style type=\"text/css\">' + contentStyle + '</style>';\n    }\n    var bodyId = getBodyId(editor);\n    var bodyClass = getBodyClass(editor);\n    var isMetaKeyPressed = global$1.mac ? 'e.metaKey' : 'e.ctrlKey && !e.altKey';\n    var preventClicksOnLinksScript = '<script>' + 'document.addEventListener && document.addEventListener(\"click\", function(e) {' + 'for (var elm = e.target; elm; elm = elm.parentNode) {' + 'if (elm.nodeName === \"A\" && !(' + isMetaKeyPressed + ')) {' + 'e.preventDefault();' + '}' + '}' + '}, false);' + '</script> ';\n    var directionality = editor.getBody().dir;\n    var dirAttr = directionality ? ' dir=\"' + encode(directionality) + '\"' : '';\n    var previewHtml = '<!DOCTYPE html>' + '<html>' + '<head>' + headHtml + '</head>' + '<body id=\"' + encode(bodyId) + '\" class=\"mce-content-body ' + encode(bodyClass) + '\"' + dirAttr + '>' + editor.getContent() + preventClicksOnLinksScript + '</body>' + '</html>';\n    return previewHtml;\n  };\n  var open = function open(editor) {\n    var content = getPreviewHtml(editor);\n    var dataApi = editor.windowManager.open({\n      title: 'Preview',\n      size: 'large',\n      body: {\n        type: 'panel',\n        items: [{\n          name: 'preview',\n          type: 'iframe',\n          sandboxed: true\n        }]\n      },\n      buttons: [{\n        type: 'cancel',\n        name: 'close',\n        text: 'Close',\n        primary: true\n      }],\n      initialData: {\n        preview: content\n      }\n    });\n    dataApi.focus('close');\n  };\n  var register$1 = function register$1(editor) {\n    editor.addCommand('mcePreview', function () {\n      open(editor);\n    });\n  };\n  var register = function register(editor) {\n    var onAction = function onAction() {\n      return editor.execCommand('mcePreview');\n    };\n    editor.ui.registry.addButton('preview', {\n      icon: 'preview',\n      tooltip: 'Preview',\n      onAction: onAction\n    });\n    editor.ui.registry.addMenuItem('preview', {\n      icon: 'preview',\n      text: 'Preview',\n      onAction: onAction\n    });\n  };\n  function Plugin() {\n    global$2.add('preview', function (editor) {\n      register$1(editor);\n      register(editor);\n    });\n  }\n  Plugin();\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/preview/plugin.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/plugins/preview/plugin.js"]();
/******/ 	
/******/ })()
;
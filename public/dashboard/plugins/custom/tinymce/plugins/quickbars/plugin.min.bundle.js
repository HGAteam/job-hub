/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/quickbars/plugin.min.js":
/*!**************************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/quickbars/plugin.min.js ***!
  \**************************************************************************************/
/***/ (() => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.7 (2022-12-06)\r\n */\n!function () {\n  \"use strict\";\n\n  function n(a) {\n    a.ui.registry.addButton(\"quickimage\", {\n      icon: \"image\",\n      tooltip: \"Insert image\",\n      onAction: function onAction() {\n        var i = a;\n        new s(function (n) {\n          var r = document.createElement(\"input\");\n          r.type = \"file\", r.accept = \"image/*\", r.style.position = \"fixed\", r.style.left = \"0\", r.style.top = \"0\", r.style.opacity = \"0.001\", document.body.appendChild(r), r.addEventListener(\"change\", function (t) {\n            n(Array.prototype.slice.call(t.target.files));\n          });\n          var o = function o(t) {\n            function e() {\n              n([]), r.parentNode.removeChild(r);\n            }\n            d.os.isAndroid() && \"remove\" !== t.type ? f.setEditorTimeout(i, e, 0) : e(), i.off(\"focusin remove\", o);\n          };\n          i.on(\"focusin remove\", o), r.click();\n        }).then(function (t) {\n          var c, n;\n          0 < t.length && (c = t[0], n = c, new s(function (t) {\n            var e = new FileReader();\n            e.onloadend = function () {\n              t(e.result.split(\",\")[1]);\n            }, e.readAsDataURL(n);\n          }).then(function (t) {\n            var e, n, r, o, i, u;\n            n = t, r = c, i = (e = a).editorUpload.blobCache, u = i.create((o = new Date().getTime(), \"mceu_\" + Math.floor(1e9 * Math.random()) + ++l + String(o)), r, n), i.add(u), e.insertContent(e.dom.createHTML(\"img\", {\n              src: u.blobUri()\n            }));\n          }));\n        });\n      }\n    }), a.ui.registry.addButton(\"quicktable\", {\n      icon: \"table\",\n      tooltip: \"Insert table\",\n      onAction: function onAction() {\n        var t, n;\n        (t = a).plugins.table ? t.plugins.table.insertTable(2, 2) : (n = t).undoManager.transact(function () {\n          n.insertContent(function () {\n            var t = '<table data-mce-id=\"mce\" style=\"width: 100%\">';\n            t += \"<tbody>\";\n            for (var e = 0; e < 2; e++) {\n              t += \"<tr>\";\n              for (var n = 0; n < 2; n++) t += \"<td><br></td>\";\n              t += \"</tr>\";\n            }\n            return (t += \"</tbody>\") + \"</table>\";\n          }());\n          var t = n.dom.select(\"*[data-mce-id]\")[0];\n          t.removeAttribute(\"data-mce-id\");\n          var e = n.dom.select(\"td,th\", t);\n          n.selection.setCursorLocation(e[0], 0);\n        });\n      }\n    });\n  }\n  function t(r) {\n    return function (t) {\n      return n = _typeof(e = t), (null === e ? \"null\" : \"object\" == n && (Array.prototype.isPrototypeOf(e) || e.constructor && \"Array\" === e.constructor.name) ? \"array\" : \"object\" == n && (String.prototype.isPrototypeOf(e) || e.constructor && \"String\" === e.constructor.name) ? \"string\" : n) === r;\n      var e, n;\n    };\n  }\n  function e(e) {\n    return function (t) {\n      return _typeof(t) === e;\n    };\n  }\n  function i(t) {\n    return function () {\n      return t;\n    };\n  }\n  function r(t) {\n    return t;\n  }\n  function o() {\n    return y;\n  }\n  var u,\n    c = tinymce.util.Tools.resolve(\"tinymce.PluginManager\"),\n    l = 0,\n    s = tinymce.util.Tools.resolve(\"tinymce.util.Promise\"),\n    d = tinymce.util.Tools.resolve(\"tinymce.Env\"),\n    f = tinymce.util.Tools.resolve(\"tinymce.util.Delay\"),\n    a = t(\"string\"),\n    m = t(\"object\"),\n    g = t(\"array\"),\n    v = e(\"boolean\"),\n    h = e(\"function\"),\n    p = i(!1),\n    b = i(!(u = void 0)),\n    y = {\n      fold: function fold(t, e) {\n        return t();\n      },\n      isSome: p,\n      isNone: b,\n      getOr: r,\n      getOrThunk: k,\n      getOrDie: function getOrDie(t) {\n        throw new Error(t || \"error: getOrDie called on none.\");\n      },\n      getOrNull: i(null),\n      getOrUndefined: i(void 0),\n      or: r,\n      orThunk: k,\n      map: o,\n      each: function each() {},\n      bind: o,\n      exists: p,\n      forall: b,\n      filter: function filter() {\n        return y;\n      },\n      toArray: function toArray() {\n        return [];\n      },\n      toString: i(\"none()\")\n    };\n  function k(t) {\n    return t();\n  }\n  var w = function w(n) {\n      function t() {\n        return o;\n      }\n      function e(t) {\n        return t(n);\n      }\n      var r = i(n),\n        o = {\n          fold: function fold(t, e) {\n            return e(n);\n          },\n          isSome: b,\n          isNone: p,\n          getOr: r,\n          getOrThunk: r,\n          getOrDie: r,\n          getOrNull: r,\n          getOrUndefined: r,\n          or: t,\n          orThunk: t,\n          map: function map(t) {\n            return w(t(n));\n          },\n          each: function each(t) {\n            t(n);\n          },\n          bind: e,\n          exists: e,\n          forall: e,\n          filter: function filter(t) {\n            return t(n) ? o : y;\n          },\n          toArray: function toArray() {\n            return [n];\n          },\n          toString: function toString() {\n            return \"some(\" + n + \")\";\n          }\n        };\n      return o;\n    },\n    T = {\n      some: w,\n      none: o,\n      from: function from(t) {\n        return null == t ? y : w(t);\n      }\n    };\n  function E(t, e, n, r, o) {\n    return t(n, r) ? T.some(n) : h(o) && o(n) ? T.none() : e(n, r, o);\n  }\n  function N(t, e) {\n    var n = t.dom;\n    if (1 !== n.nodeType) return !1;\n    var r = n;\n    if (void 0 !== r.matches) return r.matches(e);\n    if (void 0 !== r.msMatchesSelector) return r.msMatchesSelector(e);\n    if (void 0 !== r.webkitMatchesSelector) return r.webkitMatchesSelector(e);\n    if (void 0 !== r.mozMatchesSelector) return r.mozMatchesSelector(e);\n    throw new Error(\"Browser lacks native selectors\");\n  }\n  function M(t) {\n    if (null == t) throw new Error(\"Node cannot be null or undefined\");\n    return {\n      dom: t\n    };\n  }\n  var S = {\n    fromHtml: function fromHtml(t, e) {\n      var n = (e || document).createElement(\"div\");\n      if (n.innerHTML = t, !n.hasChildNodes() || 1 < n.childNodes.length) throw console.error(\"HTML does not have a single root node\", t), new Error(\"HTML must have a single root node\");\n      return M(n.childNodes[0]);\n    },\n    fromTag: function fromTag(t, e) {\n      var n = (e || document).createElement(t);\n      return M(n);\n    },\n    fromText: function fromText(t, e) {\n      var n = (e || document).createTextNode(t);\n      return M(n);\n    },\n    fromDom: M,\n    fromPoint: function fromPoint(t, e, n) {\n      return T.from(t.dom.elementFromPoint(e, n)).map(M);\n    }\n  };\n  function C(t, e, n) {\n    for (var r = t.dom, o = h(n) ? n : p; r.parentNode;) {\n      var r = r.parentNode,\n        i = S.fromDom(r);\n      if (e(i)) return T.some(i);\n      if (o(i)) break;\n    }\n    return T.none();\n  }\n  function O(t, e, n) {\n    return C(t, function (t) {\n      return N(t, e);\n    }, n);\n  }\n  \"undefined\" != typeof window || Function(\"return this;\")();\n  var q,\n    x = (q = a, function (t, e, n) {\n      return function () {\n        if (!q(n)) throw new Error(\"Default value doesn't match requested type.\");\n      }(), function (t, e) {\n        if (g(t) || m(t)) throw new Error(\"expected a string but found: \" + t);\n        return u === t ? e : v(t) ? !1 === t ? \"\" : e : t;\n      }(t.getParam(e, n), n);\n    });\n  c.add(\"quickbars\", function (t) {\n    var o, e;\n    n(t), 0 < (e = x(o = t, \"quickbars_insert_toolbar\", \"quickimage quicktable\")).trim().length && o.ui.registry.addContextToolbar(\"quickblock\", {\n      predicate: function predicate(t) {\n        function e(t) {\n          return t.dom === o.getBody();\n        }\n        var n = S.fromDom(t),\n          r = o.schema.getTextBlockElements();\n        return E(N, O, n, \"table\", e).fold(function () {\n          return E(function (t, e) {\n            return e(t);\n          }, C, n, function (t) {\n            return t.dom.nodeName.toLowerCase() in r && o.dom.isEmpty(t.dom);\n          }, e).isSome();\n        }, p);\n      },\n      items: e,\n      position: \"line\",\n      scope: \"editor\"\n    }), function (e) {\n      function n(t) {\n        return \"IMG\" === t.nodeName || \"FIGURE\" === t.nodeName && /image/i.test(t.className);\n      }\n      var t = x(e, \"quickbars_image_toolbar\", \"alignleft aligncenter alignright\");\n      0 < t.trim().length && e.ui.registry.addContextToolbar(\"imageselection\", {\n        predicate: n,\n        items: t,\n        position: \"node\"\n      });\n      var r = x(e, \"quickbars_selection_toolbar\", \"bold italic | quicklink h2 h3 blockquote\");\n      0 < r.trim().length && e.ui.registry.addContextToolbar(\"textselection\", {\n        predicate: function predicate(t) {\n          return !n(t) && !e.selection.isCollapsed() && \"false\" !== e.dom.getContentEditableParent(t);\n        },\n        items: r,\n        position: \"selection\",\n        scope: \"editor\"\n      });\n    }(t);\n  });\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/quickbars/plugin.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/plugins/quickbars/plugin.min.js"]();
/******/ 	
/******/ })()
;
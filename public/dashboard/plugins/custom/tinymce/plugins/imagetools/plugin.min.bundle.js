/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/imagetools/plugin.min.js":
/*!***************************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/imagetools/plugin.min.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.7 (2022-12-06)\r\n */\n!function () {\n  \"use strict\";\n\n  function c(e) {\n    var t = e;\n    return {\n      get: function get() {\n        return t;\n      },\n      set: function set(e) {\n        t = e;\n      }\n    };\n  }\n  function h(e) {\n    return null != e;\n  }\n  function r() {}\n  function i(e) {\n    return function () {\n      return e;\n    };\n  }\n  function e(e) {\n    return e;\n  }\n  function t() {\n    return d;\n  }\n  function s(e) {\n    return n = _typeof(t = e), \"array\" == (null === t ? \"null\" : \"object\" == n && (Array.prototype.isPrototypeOf(t) || t.constructor && \"Array\" === t.constructor.name) ? \"array\" : \"object\" == n && (String.prototype.isPrototypeOf(t) || t.constructor && \"String\" === t.constructor.name) ? \"string\" : n);\n    var t, n;\n  }\n  var n,\n    o = tinymce.util.Tools.resolve(\"tinymce.PluginManager\"),\n    f = tinymce.util.Tools.resolve(\"tinymce.util.Tools\"),\n    a = function a(e) {\n      return _typeof(e) === n;\n    },\n    u = i(!(n = \"function\")),\n    l = i(!0),\n    d = {\n      fold: function fold(e, t) {\n        return e();\n      },\n      isSome: u,\n      isNone: l,\n      getOr: e,\n      getOrThunk: m,\n      getOrDie: function getOrDie(e) {\n        throw new Error(e || \"error: getOrDie called on none.\");\n      },\n      getOrNull: i(null),\n      getOrUndefined: i(void 0),\n      or: e,\n      orThunk: m,\n      map: t,\n      each: r,\n      bind: t,\n      exists: u,\n      forall: l,\n      filter: function filter() {\n        return d;\n      },\n      toArray: function toArray() {\n        return [];\n      },\n      toString: i(\"none()\")\n    };\n  function m(e) {\n    return e();\n  }\n  var g = function g(n) {\n      function e() {\n        return o;\n      }\n      function t(e) {\n        return e(n);\n      }\n      var r = i(n),\n        o = {\n          fold: function fold(e, t) {\n            return t(n);\n          },\n          isSome: l,\n          isNone: u,\n          getOr: r,\n          getOrThunk: r,\n          getOrDie: r,\n          getOrNull: r,\n          getOrUndefined: r,\n          or: e,\n          orThunk: e,\n          map: function map(e) {\n            return g(e(n));\n          },\n          each: function each(e) {\n            e(n);\n          },\n          bind: t,\n          exists: t,\n          forall: t,\n          filter: function filter(e) {\n            return e(n) ? o : d;\n          },\n          toArray: function toArray() {\n            return [n];\n          },\n          toString: function toString() {\n            return \"some(\" + n + \")\";\n          }\n        };\n      return o;\n    },\n    p = {\n      some: g,\n      none: t,\n      from: function from(e) {\n        return null == e ? d : g(e);\n      }\n    },\n    v = {},\n    y = {\n      exports: v\n    };\n  function w(e, t) {\n    return U(document.createElement(\"canvas\"), e, t);\n  }\n  function b(e) {\n    var t = w(e.width, e.height);\n    return R(t).drawImage(e, 0, 0), t;\n  }\n  function _(u) {\n    return new I(function (e, t) {\n      function n() {\n        o.removeEventListener(\"load\", i), o.removeEventListener(\"error\", a);\n      }\n      var r = URL.createObjectURL(u),\n        o = new Image(),\n        i = function i() {\n          n(), e(o);\n        },\n        a = function a() {\n          n(), t(\"Unable to load data of type \" + u.type + \": \" + r);\n        };\n      o.addEventListener(\"load\", i), o.addEventListener(\"error\", a), o.src = r, o.complete && setTimeout(i, 0);\n    });\n  }\n  function E(e, r, o) {\n    return r = r || \"image/png\", a(HTMLCanvasElement.prototype.toBlob) ? new I(function (t, n) {\n      e.toBlob(function (e) {\n        e ? t(e) : n();\n      }, r, o);\n    }) : j(e.toDataURL(r, o));\n  }\n  function T(e, t) {\n    for (var n = 0, r = e.length; n < r; n++) t(e[n], n);\n  }\n  function x(e, t) {\n    return function (e, t, n) {\n      for (var r = 0, o = e.length; r < o; r++) {\n        var i = e[r];\n        if (t(i, r)) return p.some(i);\n        if (n(i, r)) break;\n      }\n      return p.none();\n    }(e, t, u);\n  }\n  !function () {\n    var e = this,\n      t = function t() {\n        var e,\n          t,\n          n,\n          r = {\n            exports: {}\n          };\n        function o() {}\n        function i(e) {\n          if (\"object\" != _typeof(this)) throw new TypeError(\"Promises must be constructed via new\");\n          if (\"function\" != typeof e) throw new TypeError(\"not a function\");\n          this._state = 0, this._handled = !1, this._value = void 0, this._deferreds = [], l(e, this);\n        }\n        function a(n, r) {\n          for (; 3 === n._state;) n = n._value;\n          0 !== n._state ? (n._handled = !0, i._immediateFn(function () {\n            var e,\n              t = 1 === n._state ? r.onFulfilled : r.onRejected;\n            if (null !== t) {\n              try {\n                e = t(n._value);\n              } catch (e) {\n                return void c(r.promise, e);\n              }\n              u(r.promise, e);\n            } else (1 === n._state ? u : c)(r.promise, n._value);\n          })) : n._deferreds.push(r);\n        }\n        function u(t, e) {\n          try {\n            if (e === t) throw new TypeError(\"A promise cannot be resolved with itself.\");\n            if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) {\n              var n = e.then;\n              if (e instanceof i) return t._state = 3, t._value = e, void s(t);\n              if (\"function\" == typeof n) return void l((r = n, o = e, function () {\n                r.apply(o, arguments);\n              }), t);\n            }\n            t._state = 1, t._value = e, s(t);\n          } catch (e) {\n            c(t, e);\n          }\n          var r, o;\n        }\n        function c(e, t) {\n          e._state = 2, e._value = t, s(e);\n        }\n        function s(e) {\n          2 === e._state && 0 === e._deferreds.length && i._immediateFn(function () {\n            e._handled || i._unhandledRejectionFn(e._value);\n          });\n          for (var t = 0, n = e._deferreds.length; t < n; t++) a(e, e._deferreds[t]);\n          e._deferreds = null;\n        }\n        function f(e, t, n) {\n          this.onFulfilled = \"function\" == typeof e ? e : null, this.onRejected = \"function\" == typeof t ? t : null, this.promise = n;\n        }\n        function l(e, t) {\n          var n = !1;\n          try {\n            e(function (e) {\n              n || (n = !0, u(t, e));\n            }, function (e) {\n              n || (n = !0, c(t, e));\n            });\n          } catch (e) {\n            if (n) return;\n            n = !0, c(t, e);\n          }\n        }\n        e = r, t = \"undefined\" != typeof globalThis ? globalThis : \"undefined\" != typeof window ? window : \"undefined\" != typeof __webpack_require__.g ? __webpack_require__.g : \"undefined\" != typeof self ? self : {}, n = setTimeout, i.prototype[\"catch\"] = function (e) {\n          return this.then(null, e);\n        }, i.prototype.then = function (e, t) {\n          var n = new this.constructor(o);\n          return a(this, new f(e, t, n)), n;\n        }, i.all = function (e) {\n          var u = Array.prototype.slice.call(e);\n          return new i(function (o, i) {\n            if (0 === u.length) return o([]);\n            for (var a = u.length, e = 0; e < u.length; e++) !function t(n, e) {\n              try {\n                if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) {\n                  var r = e.then;\n                  if (\"function\" == typeof r) return r.call(e, function (e) {\n                    t(n, e);\n                  }, i), 0;\n                }\n                u[n] = e, 0 == --a && o(u);\n              } catch (e) {\n                i(e);\n              }\n            }(e, u[e]);\n          });\n        }, i.resolve = function (t) {\n          return t && \"object\" == _typeof(t) && t.constructor === i ? t : new i(function (e) {\n            e(t);\n          });\n        }, i.reject = function (n) {\n          return new i(function (e, t) {\n            t(n);\n          });\n        }, i.race = function (o) {\n          return new i(function (e, t) {\n            for (var n = 0, r = o.length; n < r; n++) o[n].then(e, t);\n          });\n        }, i._immediateFn = \"function\" == typeof setImmediate ? function (e) {\n          setImmediate(e);\n        } : function (e) {\n          n(e, 0);\n        }, i._unhandledRejectionFn = function (e) {\n          \"undefined\" != typeof console && console && console.warn(\"Possible Unhandled Promise Rejection:\", e);\n        }, i._setImmediateFn = function (e) {\n          i._immediateFn = e;\n        }, i._setUnhandledRejectionFn = function (e) {\n          i._unhandledRejectionFn = e;\n        }, e.exports ? e.exports = i : t.Promise || (t.Promise = i);\n        var d = r.exports;\n        return {\n          boltExport: (\"undefined\" != typeof window ? window : Function(\"return this;\")()).Promise || d\n        };\n      };\n    \"object\" == _typeof(v) && void 0 !== y ? y.exports = t() : (e = \"undefined\" != typeof globalThis ? globalThis : e || self).EphoxContactWrapper = t();\n  }();\n  var I = y.exports.boltExport,\n    R = function R(e) {\n      return e.getContext(\"2d\");\n    },\n    U = function U(e, t, n) {\n      return e.width = t, e.height = n, e;\n    },\n    A = function A(r) {\n      return new I(function (e, t) {\n        var n = new XMLHttpRequest();\n        n.open(\"GET\", r, !0), n.responseType = \"blob\", n.onload = function () {\n          200 === this.status && e(this.response);\n        }, n.onerror = function () {\n          var e;\n          t(0 === this.status ? ((e = new Error(\"No access to download image\")).code = 18, e.name = \"SecurityError\", e) : new Error(\"Error \" + this.status + \" downloading image\"));\n        }, n.send();\n      });\n    },\n    j = function j(h) {\n      return new I(function (e, t) {\n        !function () {\n          var e = h.split(\",\"),\n            t = /data:([^;]+)/.exec(e[0]);\n          if (!t) return p.none();\n          for (var n = t[1], r = e[1], o = atob(r), i = o.length, a = Math.ceil(i / 1024), u = new Array(a), c = 0; c < a; ++c) {\n            for (var s = 1024 * c, f = Math.min(1024 + s, i), l = new Array(f - s), d = s, m = 0; d < f; ++m, ++d) l[m] = o[d].charCodeAt(0);\n            u[c] = new Uint8Array(l);\n          }\n          return p.some(new Blob(u, {\n            type: n\n          }));\n        }().fold(function () {\n          t(\"uri is not base64: \" + h);\n        }, e);\n      });\n    },\n    S = function S(e) {\n      URL.revokeObjectURL(e.src);\n    },\n    M = _,\n    P = Array.prototype.indexOf,\n    O = Object.keys;\n  function L(e, t, n) {\n    function r(t, n) {\n      return e.then(function (e) {\n        return e.toDataURL(t || \"image/png\", n);\n      });\n    }\n    return {\n      getType: i(t.type),\n      toBlob: function toBlob() {\n        return I.resolve(t);\n      },\n      toDataURL: i(n),\n      toBase64: function toBase64() {\n        return n.split(\",\")[1];\n      },\n      toAdjustedBlob: function toAdjustedBlob(t, n) {\n        return e.then(function (e) {\n          return E(e, t, n);\n        });\n      },\n      toAdjustedDataURL: r,\n      toAdjustedBase64: function toAdjustedBase64(e, t) {\n        return r(e, t).then(function (e) {\n          return e.split(\",\")[1];\n        });\n      },\n      toCanvas: function toCanvas() {\n        return e.then(b);\n      }\n    };\n  }\n  function k(t, e) {\n    return E(t, e).then(function (e) {\n      return L(I.resolve(t), e, t.toDataURL());\n    });\n  }\n  function C(e, t) {\n    void 0 === t && (t = 2);\n    var n = Math.pow(10, t),\n      r = Math.round(e * n);\n    return Math.ceil(r / n);\n  }\n  function F(t, n, r) {\n    return void 0 === r && (r = !1), new I(function (e) {\n      var a = new XMLHttpRequest();\n      a.onreadystatechange = function () {\n        4 === a.readyState && e({\n          status: a.status,\n          blob: a.response\n        });\n      }, a.open(\"GET\", t, !0), a.withCredentials = r, function (e) {\n        for (var t, n = O(e), r = 0, o = n.length; r < o; r++) {\n          var i = n[r];\n          t = e[i], a.setRequestHeader(i, t);\n        }\n      }(n), a.responseType = \"blob\", a.send();\n    });\n  }\n  function B(e) {\n    var t,\n      n = (t = e, \"ImageProxy HTTP error: \" + x(J, function (e) {\n        return t === e.code;\n      }).fold(i(\"Unknown ImageProxy error\"), function (e) {\n        return e.message;\n      }));\n    return I.reject(n);\n  }\n  function N(t) {\n    return x(K, function (e) {\n      return e.type === t;\n    }).fold(i(\"Unknown service error\"), function (e) {\n      return e.message;\n    });\n  }\n  function D(e) {\n    return \"ImageProxy Service error: \" + function (e) {\n      try {\n        return p.some(JSON.parse(e));\n      } catch (e) {\n        return p.none();\n      }\n    }(e).bind(function (e) {\n      return n = function n(e, t) {\n        return h(e) ? e[t] : void 0;\n      }, r = e, T([\"error\", \"type\"], function (e, t) {\n        r = n(r, e);\n      }), t = r, p.from(t).map(N);\n      var n, r, t;\n    }).getOr(\"Invalid JSON in service error message\");\n  }\n  function H(e) {\n    return e < 200 || 300 <= e;\n  }\n  function z(e, t) {\n    var n,\n      r,\n      o,\n      i = {\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n        \"tiny-api-key\": t\n      };\n    return F((r = t, o = -1 === (n = e).indexOf(\"?\") ? \"?\" : \"&\", /[?&]apiKey=/.test(n) ? n : n + o + \"apiKey=\" + encodeURIComponent(r)), i).then(function (e) {\n      return H(e.status) ? (t = e.status, \"application/json\" !== (null == (n = e.blob) ? void 0 : n.type) || 400 !== t && 403 !== t && 404 !== t && 500 !== t ? B(t) : (r = n, new I(function (e, t) {\n        var n = new FileReader();\n        n.onload = function () {\n          e(n.result);\n        }, n.onerror = function (e) {\n          t(e);\n        }, n.readAsText(r);\n      }).then(function (e) {\n        var t = D(e);\n        return I.reject(t);\n      }))) : I.resolve(e.blob);\n      var r, t, n;\n    });\n  }\n  function q(e, t, n) {\n    return void 0 === n && (n = !1), t ? z(e, t) : F(e, {}, n).then(function (e) {\n      return H(e.status) ? B(e.status) : I.resolve(e.blob);\n    });\n  }\n  function W(t) {\n    return n = t, new I(function (e) {\n      var t = new FileReader();\n      t.onloadend = function () {\n        e(t.result);\n      }, t.readAsDataURL(n);\n    }).then(function (e) {\n      return L(_(t).then(function (e) {\n        S(e);\n        var t = w(e.naturalWidth || e.width, e.naturalHeight || e.height);\n        return R(t).drawImage(e, 0, 0), t;\n      }), t, e);\n    });\n    var n;\n  }\n  !function (a) {\n    if (!s(a)) throw new Error(\"cases must be an array\");\n    if (0 === a.length) throw new Error(\"there must be at least one case\");\n    var u = [],\n      n = {};\n    T(a, function (e, r) {\n      var t = O(e);\n      if (1 !== t.length) throw new Error(\"one and only one name per case\");\n      var i = t[0],\n        o = e[i];\n      if (void 0 !== n[i]) throw new Error(\"duplicate key detected:\" + i);\n      if (\"cata\" === i) throw new Error(\"cannot have a case named cata (sorry)\");\n      if (!s(o)) throw new Error(\"case arguments must be an array\");\n      u.push(i), n[i] = function () {\n        for (var n = [], e = 0; e < arguments.length; e++) n[e] = arguments[e];\n        var t = n.length;\n        if (t !== o.length) throw new Error(\"Wrong number of arguments to case \" + i + \". Expected \" + o.length + \" (\" + o + \"), got \" + t);\n        return {\n          fold: function fold() {\n            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];\n            if (e.length !== a.length) throw new Error(\"Wrong number of arguments to fold. Expected \" + a.length + \", got \" + e.length);\n            return e[r].apply(null, n);\n          },\n          match: function match(e) {\n            var o = O(e);\n            if (u.length !== o.length) throw new Error(\"Wrong number of arguments to match. Expected: \" + u.join(\",\") + \"\\nActual: \" + o.join(\",\"));\n            if (!function (e) {\n              for (var t, n = 0, r = e.length; n < r; ++n) if (!0 !== (t = e[n], function (e, t) {\n                return -1 < P.call(e, t);\n              }(o, t))) return;\n              return 1;\n            }(u)) throw new Error(\"Not all branches were specified when using match. Specified: \" + o.join(\", \") + \"\\nRequired: \" + u.join(\", \"));\n            return e[i].apply(null, n);\n          },\n          log: function log(e) {\n            console.log(e, {\n              constructors: u,\n              constructor: i,\n              params: n\n            });\n          }\n        };\n      };\n    });\n  }([{\n    bothErrors: [\"error1\", \"error2\"]\n  }, {\n    firstError: [\"error1\", \"value2\"]\n  }, {\n    secondError: [\"value1\", \"error2\"]\n  }, {\n    bothValues: [\"value1\", \"value2\"]\n  }]);\n  function $(e) {\n    if (null == e) throw new Error(\"Node cannot be null or undefined\");\n    return {\n      dom: e\n    };\n  }\n  var V = function V(e, t, n) {\n      var r = (n < 0 ? 360 + n : n) * Math.PI / 180,\n        o = e.width,\n        i = e.height,\n        a = Math.sin(r),\n        u = Math.cos(r),\n        c = C(Math.abs(o * u) + Math.abs(i * a)),\n        s = C(Math.abs(o * a) + Math.abs(i * u)),\n        f = w(c, s),\n        l = R(f);\n      return l.translate(c / 2, s / 2), l.rotate(r), l.drawImage(e, -o / 2, -i / 2), k(f, t);\n    },\n    G = function G(e, t, n) {\n      var r = w(e.width, e.height),\n        o = R(r);\n      return \"v\" === n ? (o.scale(1, -1), o.drawImage(e, 0, -r.height)) : (o.scale(-1, 1), o.drawImage(e, -r.width, 0)), k(r, t);\n    },\n    J = [{\n      code: 404,\n      message: \"Could not find Image Proxy\"\n    }, {\n      code: 403,\n      message: \"Rejected request\"\n    }, {\n      code: 0,\n      message: \"Incorrect Image Proxy URL\"\n    }],\n    K = [{\n      type: \"not_found\",\n      message: \"Failed to load image.\"\n    }, {\n      type: \"key_missing\",\n      message: \"The request did not include an api key.\"\n    }, {\n      type: \"key_not_found\",\n      message: \"The provided api key could not be found.\"\n    }, {\n      type: \"domain_not_trusted\",\n      message: \"The api key is not valid for the request origins.\"\n    }],\n    X = {\n      fromHtml: function fromHtml(e, t) {\n        var n = (t || document).createElement(\"div\");\n        if (n.innerHTML = e, !n.hasChildNodes() || 1 < n.childNodes.length) throw console.error(\"HTML does not have a single root node\", e), new Error(\"HTML must have a single root node\");\n        return $(n.childNodes[0]);\n      },\n      fromTag: function fromTag(e, t) {\n        var n = (t || document).createElement(e);\n        return $(n);\n      },\n      fromText: function fromText(e, t) {\n        var n = (t || document).createTextNode(e);\n        return $(n);\n      },\n      fromDom: $,\n      fromPoint: function fromPoint(e, t, n) {\n        return p.from(e.dom.elementFromPoint(t, n)).map($);\n      }\n    };\n  function Q(e) {\n    return e.getParam(\"imagetools_proxy\");\n  }\n  function Y(e) {\n    function t(e) {\n      return /^[0-9\\.]+px$/.test(e);\n    }\n    var n = e.style.width,\n      r = e.style.height;\n    return n || r ? t(n) && t(r) ? {\n      w: parseInt(n, 10),\n      h: parseInt(r, 10)\n    } : null : (n = e.width, r = e.height, n && r ? {\n      w: parseInt(n, 10),\n      h: parseInt(r, 10)\n    } : null);\n  }\n  function Z(e) {\n    return {\n      w: e.naturalWidth,\n      h: e.naturalHeight\n    };\n  }\n  function ee(e) {\n    return t = X.fromDom(e), n = \"img\", r = function r(_r) {\n      return function (e) {\n        var t = _r.dom;\n        if (1 !== t.nodeType) return !1;\n        var n = t;\n        if (void 0 !== n.matches) return n.matches(e);\n        if (void 0 !== n.msMatchesSelector) return n.msMatchesSelector(e);\n        if (void 0 !== n.webkitMatchesSelector) return n.webkitMatchesSelector(e);\n        if (void 0 !== n.mozMatchesSelector) return n.mozMatchesSelector(e);\n        throw new Error(\"Browser lacks native selectors\");\n      }(n);\n    }, x(t.dom.childNodes, function (e) {\n      return r(X.fromDom(e));\n    }).map(X.fromDom);\n    var t, n, r;\n  }\n  function te(e, t) {\n    return e.dom.is(t, \"figure\");\n  }\n  function ne(e, t) {\n    return e.dom.is(t, \"img:not([data-mce-object],[data-mce-placeholder])\");\n  }\n  function re(t, e) {\n    function n(e) {\n      return ne(t, e) && (be(t, e) || _e(t, e) || h(Q(t)));\n    }\n    return te(t, e) ? ee(e).bind(function (e) {\n      return n(e.dom) ? p.some(e.dom) : p.none();\n    }) : n(e) ? p.some(e) : p.none();\n  }\n  function oe(e, t) {\n    e.notificationManager.open({\n      text: t,\n      type: \"error\"\n    });\n  }\n  function ie(e) {\n    var t = e.selection.getNode(),\n      n = e.dom.getParent(t, \"figure.image\");\n    return null !== n && te(e, n) ? ee(n) : ne(e, t) ? p.some(X.fromDom(t)) : p.none();\n  }\n  function ae(e, t, n) {\n    var r = t.match(/(?:\\/|^)(([^\\/\\?]+)\\.(?:[a-z0-9.]+))(?:\\?|$)/i);\n    return h(r) ? e.dom.encode(r[n]) : null;\n  }\n  function ue(e, t) {\n    if (_e(e, t)) return q(t.src, null, (n = t, -1 !== f.inArray(e.getParam(\"imagetools_credentials_hosts\", [], \"string[]\"), new ye(n.src).host)));\n    var n, r;\n    if (be(e, t)) return (0 === (r = t.src).indexOf(\"data:\") ? j : A)(r);\n    var o = Q(e);\n    return q(o + (-1 === o.indexOf(\"?\") ? \"?\" : \"&\") + \"url=\" + encodeURIComponent(t.src), e.getParam(\"api_key\", e.getParam(\"imagetools_api_key\", \"\", \"string\"), \"string\"), !1);\n  }\n  function ce(e, t) {\n    var n,\n      r,\n      o = e.editorUpload.blobCache.getByUri(t.src);\n    return o ? ve.resolve(o.blob()) : (n = e, r = t, p.from(n.getParam(\"imagetools_fetch_image\", null, \"function\")).fold(function () {\n      return ue(n, r);\n    }, function (e) {\n      return e(r);\n    }));\n  }\n  function se(e) {\n    pe.clearTimeout(e.get());\n  }\n  function fe(u, c, s, f, l, d, m) {\n    return s.toBlob().then(function (e) {\n      var t,\n        n,\n        o,\n        r = u.editorUpload.blobCache,\n        i = d.src,\n        a = c.type === e.type;\n      return u.getParam(\"images_reuse_filename\", !1, \"boolean\") && (n = h(o = r.getByUri(i)) ? (i = o.uri(), t = o.name(), o.filename()) : (t = ae(u, i, 2), ae(u, i, 1))), o = r.create({\n        id: \"imagetools\" + we++,\n        blob: e,\n        base64: s.toBase64(),\n        uri: i,\n        name: t,\n        filename: a ? n : void 0\n      }), r.add(o), u.undoManager.transact(function () {\n        var r = function r() {\n          var e, t, n;\n          u.$(d).off(\"load\", r), u.nodeChanged(), f ? u.editorUpload.uploadImagesAuto() : (se(l), e = u, t = l, n = pe.setEditorTimeout(e, function () {\n            e.editorUpload.uploadImagesAuto();\n          }, e.getParam(\"images_upload_timeout\", 3e4, \"number\")), t.set(n));\n        };\n        u.$(d).on(\"load\", r), m && u.$(d).attr({\n          width: m.w,\n          height: m.h\n        }), u.$(d).attr({\n          src: o.blobUri()\n        }).removeAttr(\"data-mce-src\");\n      }), o;\n    });\n  }\n  function le(r, o, e, i) {\n    return function () {\n      return ie(r).fold(function () {\n        oe(r, \"Could not find selected image\");\n      }, function (n) {\n        return r._scanForImages().then(function () {\n          return ce(r, n.dom);\n        }).then(function (t) {\n          return W(t).then(e).then(function (e) {\n            return fe(r, t, e, !1, o, n.dom, i);\n          });\n        })[\"catch\"](function (e) {\n          oe(r, e);\n        });\n      });\n    };\n  }\n  function de(t, n, r) {\n    return function () {\n      var e = ie(t).map(function (e) {\n        var t = Y(e.dom);\n        return t ? {\n          w: t.h,\n          h: t.w\n        } : null;\n      }).getOrNull();\n      return le(t, n, function (e) {\n        return n = r, (t = e).toCanvas().then(function (e) {\n          return V(e, t.getType(), n);\n        });\n        var t, n;\n      }, e)();\n    };\n  }\n  function me(e, t, r) {\n    return function () {\n      return le(e, t, function (e) {\n        return n = r, (t = e).toCanvas().then(function (e) {\n          return G(e, t.getType(), n);\n        });\n        var t, n;\n      })();\n    };\n  }\n  function he(s, f) {\n    return function () {\n      var n = ie(s),\n        i = n.map(function (e) {\n          return Z(e.dom);\n        });\n      n.each(function (t) {\n        re(s, t.dom).each(function (e) {\n          ce(s, t.dom).then(function (e) {\n            var t = {\n              blob: e,\n              url: URL.createObjectURL(e)\n            };\n            s.windowManager.open({\n              title: \"Edit Image\",\n              size: \"large\",\n              body: {\n                type: \"panel\",\n                items: [{\n                  type: \"imagetools\",\n                  name: \"imagetools\",\n                  label: \"Edit Image\",\n                  currentState: t\n                }]\n              },\n              buttons: [{\n                type: \"cancel\",\n                name: \"cancel\",\n                text: \"Cancel\"\n              }, {\n                type: \"submit\",\n                name: \"save\",\n                text: \"Save\",\n                primary: !0,\n                disabled: !0\n              }],\n              onSubmit: function onSubmit(e) {\n                var o = e.getData().imagetools.blob;\n                n.each(function (r) {\n                  i.each(function (e) {\n                    var t, n, a, u, c;\n                    t = s, n = f, a = r.dom, u = e, M(c = o).then(function (e) {\n                      var t,\n                        n,\n                        r,\n                        o,\n                        i = Z(e);\n                      return u.w === i.w && u.h === i.h || Y(a) && (t = a, (n = i) && (r = t.style.width, o = t.style.height, (r || o) && (t.style.width = n.w + \"px\", t.style.height = n.h + \"px\", t.removeAttribute(\"data-mce-style\")), r = t.width, o = t.height, (r || o) && (t.setAttribute(\"width\", String(n.w)), t.setAttribute(\"height\", String(n.h))))), URL.revokeObjectURL(e.src), c;\n                    }).then(W).then(function (e) {\n                      return fe(t, c, e, !0, n, a);\n                    });\n                  });\n                }), e.close();\n              },\n              onCancel: r,\n              onAction: function onAction(e, t) {\n                switch (t.name) {\n                  case \"save-state\":\n                    t.value ? e.enable(\"save\") : e.disable(\"save\");\n                    break;\n                  case \"disable\":\n                    e.disable(\"save\"), e.disable(\"cancel\");\n                    break;\n                  case \"enable\":\n                    e.enable(\"cancel\");\n                }\n              }\n            });\n          });\n        });\n      });\n    };\n  }\n  function ge(t) {\n    function n(e) {\n      return function () {\n        return t.execCommand(e);\n      };\n    }\n    function e() {\n      return ie(t).exists(function (e) {\n        return re(t, e.dom).isSome();\n      });\n    }\n    function r(t) {\n      function i(e) {\n        return t.setDisabled(!e);\n      }\n      return i(e()), o = o.concat([i]), function () {\n        o = function (e) {\n          for (var t = [], n = 0, r = e.length; n < r; n++) {\n            var o = e[n];\n            o !== i && t.push(o);\n          }\n          return t;\n        }(o);\n      };\n    }\n    var o = [];\n    t.on(\"NodeChange\", function () {\n      var t = e();\n      T(o, function (e) {\n        return e(t);\n      });\n    }), t.ui.registry.addButton(\"rotateleft\", {\n      tooltip: \"Rotate counterclockwise\",\n      icon: \"rotate-left\",\n      onAction: n(\"mceImageRotateLeft\"),\n      onSetup: r\n    }), t.ui.registry.addButton(\"rotateright\", {\n      tooltip: \"Rotate clockwise\",\n      icon: \"rotate-right\",\n      onAction: n(\"mceImageRotateRight\"),\n      onSetup: r\n    }), t.ui.registry.addButton(\"flipv\", {\n      tooltip: \"Flip vertically\",\n      icon: \"flip-vertically\",\n      onAction: n(\"mceImageFlipVertical\"),\n      onSetup: r\n    }), t.ui.registry.addButton(\"fliph\", {\n      tooltip: \"Flip horizontally\",\n      icon: \"flip-horizontally\",\n      onAction: n(\"mceImageFlipHorizontal\"),\n      onSetup: r\n    }), t.ui.registry.addButton(\"editimage\", {\n      tooltip: \"Edit image\",\n      icon: \"edit-image\",\n      onAction: n(\"mceEditImage\"),\n      onSetup: r\n    }), t.ui.registry.addButton(\"imageoptions\", {\n      tooltip: \"Image options\",\n      icon: \"image\",\n      onAction: n(\"mceImage\")\n    }), t.ui.registry.addContextMenu(\"imagetools\", {\n      update: function update(e) {\n        return re(t, e).map(function (e) {\n          return {\n            text: \"Edit image\",\n            icon: \"edit-image\",\n            onAction: n(\"mceEditImage\")\n          };\n        }).toArray();\n      }\n    });\n  }\n  \"undefined\" != typeof window || Function(\"return this;\")();\n  var pe = tinymce.util.Tools.resolve(\"tinymce.util.Delay\"),\n    ve = tinymce.util.Tools.resolve(\"tinymce.util.Promise\"),\n    ye = tinymce.util.Tools.resolve(\"tinymce.util.URI\"),\n    we = 0,\n    be = function be(e, t) {\n      var n = t.src;\n      return 0 === n.indexOf(\"data:\") || 0 === n.indexOf(\"blob:\") || new ye(n).host === e.documentBaseURI.host;\n    },\n    _e = function _e(e, t) {\n      return -1 !== f.inArray(e.getParam(\"imagetools_cors_hosts\", [], \"string[]\"), new ye(t.src).host);\n    };\n  o.add(\"imagetools\", function (e) {\n    var t,\n      r,\n      o,\n      i,\n      n = c(0),\n      a = c(null),\n      u = e;\n    f.each({\n      mceImageRotateLeft: de(u, n, -90),\n      mceImageRotateRight: de(u, n, 90),\n      mceImageFlipVertical: me(u, n, \"v\"),\n      mceImageFlipHorizontal: me(u, n, \"h\"),\n      mceEditImage: he(u, n)\n    }, function (e, t) {\n      u.addCommand(t, e);\n    }), ge(e), (t = e).ui.registry.addContextToolbar(\"imagetools\", {\n      items: t.getParam(\"imagetools_toolbar\", \"rotateleft rotateright flipv fliph editimage imageoptions\"),\n      predicate: function predicate(e) {\n        return re(t, e).isSome();\n      },\n      position: \"node\",\n      scope: \"node\"\n    }), o = n, i = a, (r = e).on(\"NodeChange\", function (e) {\n      var t = i.get(),\n        n = re(r, e.element);\n      t && !n.exists(function (e) {\n        return t.src === e.src;\n      }) && (se(o), r.editorUpload.uploadImagesAuto(), i.set(null)), n.each(i.set);\n    });\n  });\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/imagetools/plugin.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/plugins/imagetools/plugin.min.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;
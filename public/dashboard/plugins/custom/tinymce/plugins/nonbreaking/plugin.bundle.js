/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/nonbreaking/plugin.js":
/*!************************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/nonbreaking/plugin.js ***!
  \************************************************************************************/
/***/ (() => {

eval("/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.7 (2022-12-06)\r\n */\n(function () {\n  'use strict';\n\n  var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n  var getKeyboardSpaces = function getKeyboardSpaces(editor) {\n    var spaces = editor.getParam('nonbreaking_force_tab', 0);\n    if (typeof spaces === 'boolean') {\n      return spaces === true ? 3 : 0;\n    } else {\n      return spaces;\n    }\n  };\n  var wrapNbsps = function wrapNbsps(editor) {\n    return editor.getParam('nonbreaking_wrap', true, 'boolean');\n  };\n  var stringRepeat = function stringRepeat(string, repeats) {\n    var str = '';\n    for (var index = 0; index < repeats; index++) {\n      str += string;\n    }\n    return str;\n  };\n  var isVisualCharsEnabled = function isVisualCharsEnabled(editor) {\n    return editor.plugins.visualchars ? editor.plugins.visualchars.isEnabled() : false;\n  };\n  var insertNbsp = function insertNbsp(editor, times) {\n    var classes = function classes() {\n      return isVisualCharsEnabled(editor) ? 'mce-nbsp-wrap mce-nbsp' : 'mce-nbsp-wrap';\n    };\n    var nbspSpan = function nbspSpan() {\n      return '<span class=\"' + classes() + '\" contenteditable=\"false\">' + stringRepeat('&nbsp;', times) + '</span>';\n    };\n    var shouldWrap = wrapNbsps(editor);\n    var html = shouldWrap || editor.plugins.visualchars ? nbspSpan() : stringRepeat('&nbsp;', times);\n    editor.undoManager.transact(function () {\n      return editor.insertContent(html);\n    });\n  };\n  var register$1 = function register$1(editor) {\n    editor.addCommand('mceNonBreaking', function () {\n      insertNbsp(editor, 1);\n    });\n  };\n  var global = tinymce.util.Tools.resolve('tinymce.util.VK');\n  var setup = function setup(editor) {\n    var spaces = getKeyboardSpaces(editor);\n    if (spaces > 0) {\n      editor.on('keydown', function (e) {\n        if (e.keyCode === global.TAB && !e.isDefaultPrevented()) {\n          if (e.shiftKey) {\n            return;\n          }\n          e.preventDefault();\n          e.stopImmediatePropagation();\n          insertNbsp(editor, spaces);\n        }\n      });\n    }\n  };\n  var register = function register(editor) {\n    var onAction = function onAction() {\n      return editor.execCommand('mceNonBreaking');\n    };\n    editor.ui.registry.addButton('nonbreaking', {\n      icon: 'non-breaking',\n      tooltip: 'Nonbreaking space',\n      onAction: onAction\n    });\n    editor.ui.registry.addMenuItem('nonbreaking', {\n      icon: 'non-breaking',\n      text: 'Nonbreaking space',\n      onAction: onAction\n    });\n  };\n  function Plugin() {\n    global$1.add('nonbreaking', function (editor) {\n      register$1(editor);\n      register(editor);\n      setup(editor);\n    });\n  }\n  Plugin();\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/nonbreaking/plugin.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/plugins/nonbreaking/plugin.js"]();
/******/ 	
/******/ })()
;
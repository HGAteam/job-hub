/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/themes/silver/theme.min.js":
/*!*********************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/themes/silver/theme.min.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.7 (2022-12-06)\r\n */\n!function () {\n  \"use strict\";\n\n  function t(o) {\n    return function (t) {\n      return n = _typeof(e = t), (null === e ? \"null\" : \"object\" == n && (Array.prototype.isPrototypeOf(e) || e.constructor && \"Array\" === e.constructor.name) ? \"array\" : \"object\" == n && (String.prototype.isPrototypeOf(e) || e.constructor && \"String\" === e.constructor.name) ? \"string\" : n) === o;\n      var e, n;\n    };\n  }\n  function e(e) {\n    return function (t) {\n      return _typeof(t) === e;\n    };\n  }\n  function n(e) {\n    return function (t) {\n      return e === t;\n    };\n  }\n  function g(t) {\n    return null == t;\n  }\n  function f(t, e) {\n    if (c(t)) {\n      for (var n = 0, o = t.length; n < o; ++n) if (!e(t[n])) return;\n      return 1;\n    }\n  }\n  function st() {}\n  function r(n, o) {\n    return function () {\n      for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n      return n(o.apply(null, t));\n    };\n  }\n  function rt(t) {\n    return function () {\n      return t;\n    };\n  }\n  function h(t) {\n    return t;\n  }\n  function v(t, e) {\n    return t === e;\n  }\n  var y = t(\"string\"),\n    x = t(\"object\"),\n    c = t(\"array\"),\n    b = n(null),\n    w = e(\"boolean\"),\n    E = n(void 0),\n    k = function k(t) {\n      return !g(t);\n    },\n    S = e(\"function\"),\n    u = e(\"number\");\n  function C(o) {\n    for (var r = [], t = 1; t < arguments.length; t++) r[t - 1] = arguments[t];\n    return function () {\n      for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n      var n = r.concat(t);\n      return o.apply(null, n);\n    };\n  }\n  function O(e) {\n    return function (t) {\n      return !e(t);\n    };\n  }\n  function _(t) {\n    return function () {\n      throw new Error(t);\n    };\n  }\n  var T = rt(!1),\n    D = rt(!0),\n    o = tinymce.util.Tools.resolve(\"tinymce.ThemeManager\"),\n    _lt = function lt() {\n      return (_lt = Object.assign || function (t) {\n        for (var e, n = 1, o = arguments.length; n < o; n++) for (var r in e = arguments[n]) Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);\n        return t;\n      }).apply(this, arguments);\n    };\n  function A(t, e) {\n    var n = {};\n    for (r in t) Object.prototype.hasOwnProperty.call(t, r) && e.indexOf(r) < 0 && (n[r] = t[r]);\n    if (null != t && \"function\" == typeof Object.getOwnPropertySymbols) for (var o = 0, r = Object.getOwnPropertySymbols(t); o < r.length; o++) e.indexOf(r[o]) < 0 && Object.prototype.propertyIsEnumerable.call(t, r[o]) && (n[r[o]] = t[r[o]]);\n    return n;\n  }\n  function V(t, e, n) {\n    if (n || 2 === arguments.length) for (var o, r = 0, i = e.length; r < i; r++) !o && r in e || ((o = o || Array.prototype.slice.call(e, 0, r))[r] = e[r]);\n    return t.concat(o || Array.prototype.slice.call(e));\n  }\n  function i() {\n    return a;\n  }\n  var a = {\n    fold: function fold(t, e) {\n      return t();\n    },\n    isSome: T,\n    isNone: D,\n    getOr: h,\n    getOrThunk: s,\n    getOrDie: function getOrDie(t) {\n      throw new Error(t || \"error: getOrDie called on none.\");\n    },\n    getOrNull: rt(null),\n    getOrUndefined: rt(void 0),\n    or: h,\n    orThunk: s,\n    map: i,\n    each: st,\n    bind: i,\n    exists: T,\n    forall: D,\n    filter: function filter() {\n      return a;\n    },\n    toArray: function toArray() {\n      return [];\n    },\n    toString: rt(\"none()\")\n  };\n  function s(t) {\n    return t();\n  }\n  function l(t, e) {\n    return yt.call(t, e);\n  }\n  function d(t, e) {\n    for (var n = 0, o = t.length; n < o; n++) if (e(t[n], n)) return !0;\n    return !1;\n  }\n  function m(t, e) {\n    for (var n = [], o = 0; o < t; o++) n.push(e(o));\n    return n;\n  }\n  function p(t, e) {\n    for (var n = [], o = 0; o < t.length; o += e) {\n      var r = bt.call(t, o, o + e);\n      n.push(r);\n    }\n    return n;\n  }\n  function B(t, e) {\n    for (var n = t.length, o = new Array(n), r = 0; r < n; r++) {\n      var i = t[r];\n      o[r] = e(i, r);\n    }\n    return o;\n  }\n  function M(t, e) {\n    for (var n = [], o = [], r = 0, i = t.length; r < i; r++) {\n      var u = t[r];\n      (e(u, r) ? n : o).push(u);\n    }\n    return {\n      pass: n,\n      fail: o\n    };\n  }\n  function F(t, e) {\n    for (var n = [], o = 0, r = t.length; o < r; o++) {\n      var i = t[o];\n      e(i, o) && n.push(i);\n    }\n    return n;\n  }\n  function I(t, o, r) {\n    return function (t) {\n      for (var e, n = t.length - 1; 0 <= n; n--) e = t[n], r = o(r, e, n);\n    }(t), r;\n  }\n  function R(t, n, o) {\n    return St(t, function (t, e) {\n      o = n(o, t, e);\n    }), o;\n  }\n  function N(t, e) {\n    return function (t, e, n) {\n      for (var o = 0, r = t.length; o < r; o++) {\n        var i = t[o];\n        if (e(i, o)) return vt.some(i);\n        if (n(i, o)) break;\n      }\n      return vt.none();\n    }(t, e, T);\n  }\n  function P(t, e) {\n    for (var n = 0, o = t.length; n < o; n++) if (e(t[n], n)) return vt.some(n);\n    return vt.none();\n  }\n  function ft(t) {\n    for (var e = [], n = 0, o = t.length; n < o; ++n) {\n      if (!c(t[n])) throw new Error(\"Arr.flatten item \" + n + \" was not an array, input: \" + t);\n      xt.apply(e, t[n]);\n    }\n    return e;\n  }\n  function H(t, e) {\n    return ft(B(t, e));\n  }\n  function L(t, e) {\n    for (var n = 0, o = t.length; n < o; ++n) if (!0 !== e(t[n], n)) return !1;\n    return !0;\n  }\n  function z(t) {\n    var e = bt.call(t, 0);\n    return e.reverse(), e;\n  }\n  function U(t, e) {\n    return F(t, function (t) {\n      return !wt(e, t);\n    });\n  }\n  function j(t, e) {\n    for (var n = {}, o = 0, r = t.length; o < r; o++) {\n      var i = t[o];\n      n[String(i)] = e(i, o);\n    }\n    return n;\n  }\n  function W(t) {\n    return [t];\n  }\n  function G(t, e) {\n    var n = bt.call(t, 0);\n    return n.sort(e), n;\n  }\n  function X(t, e) {\n    return 0 <= e && e < t.length ? vt.some(t[e]) : vt.none();\n  }\n  function Y(t) {\n    return X(t, 0);\n  }\n  function q(t) {\n    return X(t, t.length - 1);\n  }\n  function K(t, e) {\n    for (var n = 0; n < t.length; n++) {\n      var o = e(t[n], n);\n      if (o.isSome()) return o;\n    }\n    return vt.none();\n  }\n  function J(t, e) {\n    for (var n = Ct(t), o = 0, r = n.length; o < r; o++) {\n      var i = n[o];\n      e(t[i], i);\n    }\n  }\n  function dt(t, n) {\n    return _t(t, function (t, e) {\n      return {\n        k: e,\n        v: n(t, e)\n      };\n    });\n  }\n  function $(t, n) {\n    var o = [];\n    return J(t, function (t, e) {\n      o.push(n(t, e));\n    }), o;\n  }\n  function Q(t, e) {\n    for (var n = Ct(t), o = 0, r = n.length; o < r; o++) {\n      var i = n[o],\n        u = t[i];\n      if (e(u, i, t)) return vt.some(u);\n    }\n    return vt.none();\n  }\n  function Z(t) {\n    return $(t, h);\n  }\n  function tt(t, e) {\n    return Tt(t, e) ? vt.from(t[e]) : vt.none();\n  }\n  function et(t, e) {\n    return Tt(t, e) && void 0 !== t[e] && null !== t[e];\n  }\n  function mt(t, e, n) {\n    return void 0 === n && (n = v), t.exists(function (t) {\n      return n(t, e);\n    });\n  }\n  function nt(t) {\n    for (var e = [], n = function n(t) {\n        e.push(t);\n      }, o = 0; o < t.length; o++) t[o].each(n);\n    return e;\n  }\n  function ot(t, e) {\n    return t ? vt.some(e) : vt.none();\n  }\n  function it(t, e, n) {\n    return \"\" === e || t.length >= e.length && t.substr(n, n + e.length) === e;\n  }\n  function ut(t, e) {\n    return -1 !== t.indexOf(e);\n  }\n  function at(t) {\n    return 0 < t.length;\n  }\n  function ct(t) {\n    return void 0 !== t.style && S(t.style.getPropertyValue);\n  }\n  function gt(t) {\n    if (null == t) throw new Error(\"Node cannot be null or undefined\");\n    return {\n      dom: t\n    };\n  }\n  var pt,\n    ht = function ht(n) {\n      function t() {\n        return r;\n      }\n      function e(t) {\n        return t(n);\n      }\n      var o = rt(n),\n        r = {\n          fold: function fold(t, e) {\n            return e(n);\n          },\n          isSome: D,\n          isNone: T,\n          getOr: o,\n          getOrThunk: o,\n          getOrDie: o,\n          getOrNull: o,\n          getOrUndefined: o,\n          or: t,\n          orThunk: t,\n          map: function map(t) {\n            return ht(t(n));\n          },\n          each: function each(t) {\n            t(n);\n          },\n          bind: e,\n          exists: e,\n          forall: e,\n          filter: function filter(t) {\n            return t(n) ? r : a;\n          },\n          toArray: function toArray() {\n            return [n];\n          },\n          toString: function toString() {\n            return \"some(\" + n + \")\";\n          }\n        };\n      return r;\n    },\n    vt = {\n      some: ht,\n      none: i,\n      from: function from(t) {\n        return null == t ? a : ht(t);\n      }\n    },\n    bt = Array.prototype.slice,\n    yt = Array.prototype.indexOf,\n    xt = Array.prototype.push,\n    wt = function wt(t, e) {\n      return -1 < l(t, e);\n    },\n    St = function St(t, e) {\n      for (var n = 0, o = t.length; n < o; n++) e(t[n], n);\n    },\n    kt = S(Array.from) ? Array.from : function (t) {\n      return bt.call(t);\n    },\n    Ct = Object.keys,\n    Ot = Object.hasOwnProperty,\n    _t = function _t(t, o) {\n      var r = {};\n      return J(t, function (t, e) {\n        var n = o(t, e);\n        r[n.k] = n.v;\n      }), r;\n    },\n    Tt = function Tt(t, e) {\n      return Ot.call(t, e);\n    },\n    Et = function Et(t, e, n) {\n      return t.isSome() && e.isSome() ? vt.some(n(t.getOrDie(), e.getOrDie())) : vt.none();\n    },\n    Dt = function Dt(t, e) {\n      return it(t, e, 0);\n    },\n    At = function At(t, e) {\n      return it(t, e, t.length - e.length);\n    },\n    Bt = (pt = /^\\s+|\\s+$/g, function (t) {\n      return t.replace(pt, \"\");\n    }),\n    Mt = {\n      fromHtml: function fromHtml(t, e) {\n        var n = (e || document).createElement(\"div\");\n        if (n.innerHTML = t, !n.hasChildNodes() || 1 < n.childNodes.length) throw console.error(\"HTML does not have a single root node\", t), new Error(\"HTML must have a single root node\");\n        return gt(n.childNodes[0]);\n      },\n      fromTag: function fromTag(t, e) {\n        var n = (e || document).createElement(t);\n        return gt(n);\n      },\n      fromText: function fromText(t, e) {\n        var n = (e || document).createTextNode(t);\n        return gt(n);\n      },\n      fromDom: gt,\n      fromPoint: function fromPoint(t, e, n) {\n        return vt.from(t.dom.elementFromPoint(e, n)).map(gt);\n      }\n    };\n  function Ft(t) {\n    return t.dom.nodeName.toLowerCase();\n  }\n  function It(e) {\n    return function (t) {\n      return t.dom.nodeType === e;\n    };\n  }\n  function Rt(n) {\n    var o,\n      r = !1;\n    return function () {\n      for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n      return r || (r = !0, o = n.apply(null, t)), o;\n    };\n  }\n  function Nt(t, e) {\n    var n = String(e).toLowerCase();\n    return N(t, function (t) {\n      return t.search(n);\n    });\n  }\n  function Pt(e) {\n    return function (t) {\n      return ut(t, e);\n    };\n  }\n  function Vt(t) {\n    return window.matchMedia(t).matches;\n  }\n  function Ht(t, e) {\n    var n = t.dom;\n    if (1 !== n.nodeType) return !1;\n    var o = n;\n    if (void 0 !== o.matches) return o.matches(e);\n    if (void 0 !== o.msMatchesSelector) return o.msMatchesSelector(e);\n    if (void 0 !== o.webkitMatchesSelector) return o.webkitMatchesSelector(e);\n    if (void 0 !== o.mozMatchesSelector) return o.mozMatchesSelector(e);\n    throw new Error(\"Browser lacks native selectors\");\n  }\n  function Lt(t) {\n    return 1 !== t.nodeType && 9 !== t.nodeType && 11 !== t.nodeType || 0 === t.childElementCount;\n  }\n  function zt(t, e) {\n    return t.dom === e.dom;\n  }\n  function Ut(t, e) {\n    return ln().browser.isIE() ? (n = t.dom, o = e.dom, r = Node.DOCUMENT_POSITION_CONTAINED_BY, 0 != (n.compareDocumentPosition(o) & r)) : (i = t.dom) !== (u = e.dom) && i.contains(u);\n    var n, o, r, i, u;\n  }\n  function jt(t) {\n    return Mt.fromDom(t.dom.ownerDocument);\n  }\n  function Wt(t) {\n    return Ye(t) ? t : jt(t);\n  }\n  function Gt(t) {\n    return Mt.fromDom(Wt(t).dom.documentElement);\n  }\n  function Xt(t) {\n    return Mt.fromDom(Wt(t).dom.defaultView);\n  }\n  function Yt(t) {\n    return vt.from(t.dom.parentNode).map(Mt.fromDom);\n  }\n  function qt(t) {\n    return vt.from(t.dom.offsetParent).map(Mt.fromDom);\n  }\n  function Kt(t) {\n    return B(t.dom.childNodes, Mt.fromDom);\n  }\n  function Jt(t, e) {\n    var n = t.dom.childNodes;\n    return vt.from(n[e]).map(Mt.fromDom);\n  }\n  function $t(t, e) {\n    return {\n      element: t,\n      offset: e\n    };\n  }\n  function Qt(t, e) {\n    var n = Kt(t);\n    return 0 < n.length && e < n.length ? $t(n[e], 0) : $t(t, e);\n  }\n  function Zt(t) {\n    return qe(t) && k(t.dom.host);\n  }\n  function te(t) {\n    return Zt(t) ? t : Mt.fromDom(Wt(t).dom.body);\n  }\n  function ee(t) {\n    return Mt.fromDom(t.dom.host);\n  }\n  function ne(t, e, n) {\n    if (!(y(n) || w(n) || u(n))) throw console.error(\"Invalid call to Attribute.set. Key \", e, \":: Value \", n, \":: Element \", t), new Error(\"Attribute value was not simple\");\n    t.setAttribute(e, n + \"\");\n  }\n  function oe(t, e, n) {\n    ne(t.dom, e, n);\n  }\n  function re(t, e) {\n    var n = t.dom;\n    J(e, function (t, e) {\n      ne(n, e, t);\n    });\n  }\n  function ie(t, e) {\n    var n = t.dom.getAttribute(e);\n    return null === n ? void 0 : n;\n  }\n  function ue(t, e) {\n    return vt.from(ie(t, e));\n  }\n  function ae(t, e) {\n    var n = t.dom;\n    return !(!n || !n.hasAttribute) && n.hasAttribute(e);\n  }\n  function ce(t, e) {\n    t.dom.removeAttribute(e);\n  }\n  function se(t, e, n) {\n    if (!y(n)) throw console.error(\"Invalid call to CSS.set. Property \", e, \":: Value \", n, \":: Element \", t), new Error(\"CSS value must be a string: \" + n);\n    ct(t) && t.style.setProperty(e, n);\n  }\n  function le(t, e) {\n    ct(t) && t.style.removeProperty(e);\n  }\n  function fe(t, e, n) {\n    se(t.dom, e, n);\n  }\n  function de(t, e) {\n    var n = t.dom;\n    J(e, function (t, e) {\n      se(n, e, t);\n    });\n  }\n  function me(t, e) {\n    var n = t.dom;\n    J(e, function (t, e) {\n      t.fold(function () {\n        le(n, e);\n      }, function (t) {\n        se(n, e, t);\n      });\n    });\n  }\n  function ge(t, e) {\n    var n = t.dom,\n      o = window.getComputedStyle(n).getPropertyValue(e);\n    return \"\" !== o || vn(t) ? o : xn(n, e);\n  }\n  function pe(t, e) {\n    var n = t.dom,\n      o = xn(n, e);\n    return vt.from(o).filter(function (t) {\n      return 0 < t.length;\n    });\n  }\n  function he(t, e, n) {\n    var o = Mt.fromTag(t);\n    return fe(o, e, n), pe(o, e).isSome();\n  }\n  function ve(t, e) {\n    le(t.dom, e), mt(ue(t, \"style\").map(Bt), \"\") && ce(t, \"style\");\n  }\n  function be(t) {\n    return t.dom.offsetWidth;\n  }\n  function ye(o, r) {\n    function t(t) {\n      var e = r(t);\n      if (e <= 0 || null === e) {\n        var n = ge(t, o);\n        return parseFloat(n) || 0;\n      }\n      return e;\n    }\n    function i(r, t) {\n      return R(t, function (t, e) {\n        var n = ge(r, e),\n          o = void 0 === n ? 0 : parseInt(n, 10);\n        return isNaN(o) ? t : t + o;\n      }, 0);\n    }\n    return {\n      set: function set(t, e) {\n        if (!u(e) && !e.match(/^[0-9]+$/)) throw new Error(o + \".set accepts only positive integer values. Value was \" + e);\n        var n = t.dom;\n        ct(n) && (n.style[o] = e + \"px\");\n      },\n      get: t,\n      getOuter: t,\n      aggregate: i,\n      max: function max(t, e, n) {\n        var o = i(t, n);\n        return o < e ? e - o : 0;\n      }\n    };\n  }\n  function xe(t) {\n    return wn.get(t);\n  }\n  function we(t) {\n    return wn.getOuter(t);\n  }\n  function Se(t, e) {\n    return void 0 !== t ? t : void 0 !== e ? e : 0;\n  }\n  function ke(t) {\n    var e = t.dom.ownerDocument,\n      n = e.body,\n      o = e.defaultView,\n      r = e.documentElement;\n    if (n === t.dom) return kn(n.offsetLeft, n.offsetTop);\n    var i = Se(null == o ? void 0 : o.pageYOffset, r.scrollTop),\n      u = Se(null == o ? void 0 : o.pageXOffset, r.scrollLeft),\n      a = Se(r.clientTop, n.clientTop),\n      c = Se(r.clientLeft, n.clientLeft);\n    return Cn(t).translate(u - c, i - a);\n  }\n  function Ce(t) {\n    return On.get(t);\n  }\n  function Oe(t) {\n    return On.getOuter(t);\n  }\n  function _e(t) {\n    function e() {\n      return t.stopPropagation();\n    }\n    function n() {\n      return t.preventDefault();\n    }\n    var o = r(n, e);\n    return {\n      target: Mt.fromDom(function (t) {\n        if (mn() && k(t.target)) {\n          var e = Mt.fromDom(t.target);\n          if (Ge(e) && hn(e) && t.composed && t.composedPath) {\n            var n = t.composedPath();\n            if (n) return Y(n);\n          }\n        }\n        return vt.from(t.target);\n      }(t).getOr(t.target)),\n      x: t.clientX,\n      y: t.clientY,\n      stop: e,\n      prevent: n,\n      kill: o,\n      raw: t\n    };\n  }\n  function Te(t, e, n, o, r) {\n    var i,\n      u,\n      a = (i = n, u = o, function (t) {\n        i(t) && u(_e(t));\n      });\n    return t.dom.addEventListener(e, a, r), {\n      unbind: C(_n, t, e, a, r)\n    };\n  }\n  function Ee(e, n) {\n    Yt(e).each(function (t) {\n      t.dom.insertBefore(n.dom, e.dom);\n    });\n  }\n  function De(t, e) {\n    vt.from(t.dom.nextSibling).map(Mt.fromDom).fold(function () {\n      Yt(t).each(function (t) {\n        Tn(t, e);\n      });\n    }, function (t) {\n      Ee(t, e);\n    });\n  }\n  function Ae(e, n) {\n    Jt(e, 0).fold(function () {\n      Tn(e, n);\n    }, function (t) {\n      e.dom.insertBefore(n.dom, t.dom);\n    });\n  }\n  function Be(e, t) {\n    St(t, function (t) {\n      Tn(e, t);\n    });\n  }\n  function Me(t) {\n    t.dom.textContent = \"\", St(Kt(t), function (t) {\n      En(t);\n    });\n  }\n  function Fe(t) {\n    var e,\n      n = Kt(t);\n    0 < n.length && (e = t, St(n, function (t) {\n      Ee(e, t);\n    })), En(t);\n  }\n  function Ie(t) {\n    var e = void 0 !== t ? t.dom : document,\n      n = e.body.scrollLeft || e.documentElement.scrollLeft,\n      o = e.body.scrollTop || e.documentElement.scrollTop;\n    return kn(n, o);\n  }\n  function Re(t, e, n) {\n    var o = (void 0 !== n ? n.dom : document).defaultView;\n    o && o.scrollTo(t, e);\n  }\n  function Ne(t, e, n, o) {\n    return {\n      x: t,\n      y: e,\n      width: n,\n      height: o,\n      right: t + n,\n      bottom: e + o\n    };\n  }\n  function Pe(t) {\n    var o = void 0 === t ? window : t,\n      e = o.document,\n      r = Ie(Mt.fromDom(e)),\n      n = void 0 === o ? window : o;\n    return (ln().browser.isFirefox() ? vt.none() : vt.from(n.visualViewport)).fold(function () {\n      var t = o.document.documentElement,\n        e = t.clientWidth,\n        n = t.clientHeight;\n      return Ne(r.left, r.top, e, n);\n    }, function (t) {\n      return Ne(Math.max(t.pageLeft, r.left), Math.max(t.pageTop, r.top), t.width, t.height);\n    });\n  }\n  function Ve(o) {\n    var t,\n      r = Ie(Mt.fromDom(document)),\n      e = (t = An).owner(o),\n      n = Dn(t, e);\n    return vt.some(n).fold(C(ke, o), function (t) {\n      var e = Cn(o),\n        n = I(t, function (t, e) {\n          var n = Cn(e);\n          return {\n            left: t.left + n.left,\n            top: t.top + n.top\n          };\n        }, {\n          left: 0,\n          top: 0\n        });\n      return kn(n.left + e.left + r.left, n.top + e.top + r.top);\n    });\n  }\n  function He(t) {\n    var e = Ve(t),\n      n = Oe(t),\n      o = we(t);\n    return Bn(e.left, e.top, n, o);\n  }\n  \"undefined\" != typeof window || Function(\"return this;\")();\n  function Le() {\n    return Ke(0, 0);\n  }\n  function ze(t) {\n    function e(t) {\n      return function () {\n        return n === t;\n      };\n    }\n    var n = t.current,\n      o = t.version;\n    return {\n      current: n,\n      version: o,\n      isEdge: e(\"Edge\"),\n      isChrome: e(\"Chrome\"),\n      isIE: e(\"IE\"),\n      isOpera: e(\"Opera\"),\n      isFirefox: e(Ze),\n      isSafari: e(\"Safari\")\n    };\n  }\n  function Ue(t) {\n    function e(t) {\n      return function () {\n        return n === t;\n      };\n    }\n    var n = t.current,\n      o = t.version;\n    return {\n      current: n,\n      version: o,\n      isWindows: e(nn),\n      isiOS: e(\"iOS\"),\n      isAndroid: e(on),\n      isOSX: e(\"OSX\"),\n      isLinux: e(\"Linux\"),\n      isSolaris: e(rn),\n      isFreeBSD: e(un),\n      isChromeOS: e(an)\n    };\n  }\n  var je,\n    We,\n    Ge = It(1),\n    Xe = It(3),\n    Ye = It(9),\n    qe = It(11),\n    Ke = function Ke(t, e) {\n      return {\n        major: t,\n        minor: e\n      };\n    },\n    Je = {\n      nu: Ke,\n      detect: function detect(t, e) {\n        var n,\n          o,\n          r = String(e).toLowerCase();\n        return 0 === t.length ? Le() : (o = function (t, e) {\n          for (var n = 0; n < t.length; n++) {\n            var o = t[n];\n            if (o.test(e)) return o;\n          }\n        }(t, n = r)) ? Ke(i(1), i(2)) : {\n          major: 0,\n          minor: 0\n        };\n        function i(t) {\n          return Number(n.replace(o, \"$\" + t));\n        }\n      },\n      unknown: Le\n    },\n    $e = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n    Qe = {\n      browsers: rt([{\n        name: \"Edge\",\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: function search(t) {\n          return ut(t, \"edge/\") && ut(t, \"chrome\") && ut(t, \"safari\") && ut(t, \"applewebkit\");\n        }\n      }, {\n        name: \"Chrome\",\n        brand: \"Chromium\",\n        versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/, $e],\n        search: function search(t) {\n          return ut(t, \"chrome\") && !ut(t, \"chromeframe\");\n        }\n      }, {\n        name: \"IE\",\n        versionRegexes: [/.*?msie\\ ?([0-9]+)\\.([0-9]+).*/, /.*?rv:([0-9]+)\\.([0-9]+).*/],\n        search: function search(t) {\n          return ut(t, \"msie\") || ut(t, \"trident\");\n        }\n      }, {\n        name: \"Opera\",\n        versionRegexes: [$e, /.*?opera\\/([0-9]+)\\.([0-9]+).*/],\n        search: Pt(\"opera\")\n      }, {\n        name: \"Firefox\",\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: Pt(\"firefox\")\n      }, {\n        name: \"Safari\",\n        versionRegexes: [$e, /.*?cpu os ([0-9]+)_([0-9]+).*/],\n        search: function search(t) {\n          return (ut(t, \"safari\") || ut(t, \"mobile/\")) && ut(t, \"applewebkit\");\n        }\n      }]),\n      oses: rt([{\n        name: \"Windows\",\n        search: Pt(\"win\"),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      }, {\n        name: \"iOS\",\n        search: function search(t) {\n          return ut(t, \"iphone\") || ut(t, \"ipad\");\n        },\n        versionRegexes: [/.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/, /.*cpu os ([0-9]+)_([0-9]+).*/, /.*cpu iphone os ([0-9]+)_([0-9]+).*/]\n      }, {\n        name: \"Android\",\n        search: Pt(\"android\"),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      }, {\n        name: \"OSX\",\n        search: Pt(\"mac os x\"),\n        versionRegexes: [/.*?mac\\ os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      }, {\n        name: \"Linux\",\n        search: Pt(\"linux\"),\n        versionRegexes: []\n      }, {\n        name: \"Solaris\",\n        search: Pt(\"sunos\"),\n        versionRegexes: []\n      }, {\n        name: \"FreeBSD\",\n        search: Pt(\"freebsd\"),\n        versionRegexes: []\n      }, {\n        name: \"ChromeOS\",\n        search: Pt(\"cros\"),\n        versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/]\n      }])\n    },\n    Ze = \"Firefox\",\n    tn = function tn() {\n      return ze({\n        current: void 0,\n        version: Je.unknown()\n      });\n    },\n    en = ze,\n    nn = (rt(\"Edge\"), rt(\"Chrome\"), rt(\"IE\"), rt(\"Opera\"), rt(Ze), rt(\"Safari\"), \"Windows\"),\n    on = \"Android\",\n    rn = \"Solaris\",\n    un = \"FreeBSD\",\n    an = \"ChromeOS\",\n    cn = function cn() {\n      return Ue({\n        current: void 0,\n        version: Je.unknown()\n      });\n    },\n    sn = Ue,\n    ln = (rt(nn), rt(\"iOS\"), rt(on), rt(\"Linux\"), rt(\"OSX\"), rt(rn), rt(un), rt(an), Rt(function () {\n      return t = navigator.userAgent, e = vt.from(navigator.userAgentData), n = Vt, p = Qe.browsers(), h = Qe.oses(), v = e.bind(function (t) {\n        return o = p, K(t.brands, function (e) {\n          var n = e.brand.toLowerCase();\n          return N(o, function (t) {\n            var e;\n            return n === (null === (e = t.brand) || void 0 === e ? void 0 : e.toLowerCase());\n          }).map(function (t) {\n            return {\n              current: t.name,\n              version: Je.nu(parseInt(e.version, 10), 0)\n            };\n          });\n        });\n        var o;\n      }).orThunk(function () {\n        return Nt(p, n = t).map(function (t) {\n          var e = Je.detect(t.versionRegexes, n);\n          return {\n            current: t.name,\n            version: e\n          };\n        });\n        var n;\n      }).fold(tn, en), b = Nt(h, o = t).map(function (t) {\n        var e = Je.detect(t.versionRegexes, o);\n        return {\n          current: t.name,\n          version: e\n        };\n      }).fold(cn, sn), {\n        browser: v,\n        os: b,\n        deviceType: (i = v, u = t, a = n, c = (r = b).isiOS() && !0 === /ipad/i.test(u), s = r.isiOS() && !c, f = (l = r.isiOS() || r.isAndroid()) || a(\"(pointer:coarse)\"), d = c || !s && l && a(\"(min-device-width:768px)\"), m = s || l && !d, g = i.isSafari() && r.isiOS() && !1 === /safari/i.test(u), {\n          isiPad: rt(c),\n          isiPhone: rt(s),\n          isTablet: rt(d),\n          isPhone: rt(m),\n          isTouch: rt(f),\n          isAndroid: r.isAndroid,\n          isiOS: r.isiOS,\n          isWebView: rt(g),\n          isDesktop: rt(!m && !d && !g)\n        })\n      };\n      var t, e, n, o, r, i, u, a, c, s, l, f, d, m, g, p, h, v, b;\n    })),\n    fn = Yt,\n    dn = S(Element.prototype.attachShadow) && S(Node.prototype.getRootNode),\n    mn = rt(dn),\n    gn = dn ? function (t) {\n      return Mt.fromDom(t.dom.getRootNode());\n    } : Wt,\n    pn = function pn(t) {\n      var e = gn(t);\n      return Zt(e) ? vt.some(e) : vt.none();\n    },\n    hn = function hn(t) {\n      return k(t.dom.shadowRoot);\n    },\n    vn = function vn(t) {\n      var e = Xe(t) ? t.dom.parentNode : t.dom;\n      if (null == e || null === e.ownerDocument) return !1;\n      var n,\n        o,\n        r = e.ownerDocument;\n      return pn(Mt.fromDom(e)).fold(function () {\n        return r.body.contains(e);\n      }, (n = vn, o = ee, function (t) {\n        return n(o(t));\n      }));\n    },\n    bn = function bn() {\n      return yn(Mt.fromDom(document));\n    },\n    yn = function yn(t) {\n      var e = t.dom.body;\n      if (null == e) throw new Error(\"Body is not available yet\");\n      return Mt.fromDom(e);\n    },\n    xn = function xn(t, e) {\n      return ct(t) ? t.style.getPropertyValue(e) : \"\";\n    },\n    wn = ye(\"height\", function (t) {\n      var e = t.dom;\n      return vn(t) ? e.getBoundingClientRect().height : e.offsetHeight;\n    }),\n    Sn = function Sn(n, o) {\n      return {\n        left: n,\n        top: o,\n        translate: function translate(t, e) {\n          return Sn(n + t, o + e);\n        }\n      };\n    },\n    kn = Sn,\n    Cn = function Cn(t) {\n      var e,\n        n = t.dom,\n        o = n.ownerDocument.body;\n      return o === n ? kn(o.offsetLeft, o.offsetTop) : vn(t) ? (e = n.getBoundingClientRect(), kn(e.left, e.top)) : kn(0, 0);\n    },\n    On = ye(\"width\", function (t) {\n      return t.dom.offsetWidth;\n    }),\n    _n = function _n(t, e, n, o) {\n      t.dom.removeEventListener(e, n, o);\n    },\n    Tn = function Tn(t, e) {\n      t.dom.appendChild(e.dom);\n    },\n    En = function En(t) {\n      var e = t.dom;\n      null !== e.parentNode && e.parentNode.removeChild(e);\n    },\n    Dn = function Dn(o, t) {\n      return o.view(t).fold(rt([]), function (t) {\n        var e = o.owner(t),\n          n = Dn(o, e);\n        return [t].concat(n);\n      });\n    },\n    An = Object.freeze({\n      __proto__: null,\n      view: function view(t) {\n        var e;\n        return (t.dom === document ? vt.none() : vt.from(null === (e = t.dom.defaultView) || void 0 === e ? void 0 : e.frameElement)).map(Mt.fromDom);\n      },\n      owner: jt\n    }),\n    Bn = function Bn(t, e, n, o) {\n      return {\n        x: t,\n        y: e,\n        width: n,\n        height: o,\n        right: t + n,\n        bottom: e + o\n      };\n    },\n    Mn = function Mn(t) {\n      var e = ke(t),\n        n = Oe(t),\n        o = we(t);\n      return Bn(e.left, e.top, n, o);\n    },\n    Fn = function Fn() {\n      return Pe(window);\n    },\n    In = function In(n) {\n      return {\n        isValue: D,\n        isError: T,\n        getOr: rt(n),\n        getOrThunk: rt(n),\n        getOrDie: rt(n),\n        or: function or(t) {\n          return In(n);\n        },\n        orThunk: function orThunk(t) {\n          return In(n);\n        },\n        fold: function fold(t, e) {\n          return e(n);\n        },\n        map: function map(t) {\n          return In(t(n));\n        },\n        mapError: function mapError(t) {\n          return In(n);\n        },\n        each: function each(t) {\n          t(n);\n        },\n        bind: function bind(t) {\n          return t(n);\n        },\n        exists: function exists(t) {\n          return t(n);\n        },\n        forall: function forall(t) {\n          return t(n);\n        },\n        toOptional: function toOptional() {\n          return vt.some(n);\n        }\n      };\n    },\n    Rn = function Rn(n) {\n      return {\n        isValue: T,\n        isError: D,\n        getOr: h,\n        getOrThunk: function getOrThunk(t) {\n          return t();\n        },\n        getOrDie: function getOrDie() {\n          return _(String(n))();\n        },\n        or: h,\n        orThunk: function orThunk(t) {\n          return t();\n        },\n        fold: function fold(t, e) {\n          return t(n);\n        },\n        map: function map(t) {\n          return Rn(n);\n        },\n        mapError: function mapError(t) {\n          return Rn(t(n));\n        },\n        each: st,\n        bind: function bind(t) {\n          return Rn(n);\n        },\n        exists: T,\n        forall: D,\n        toOptional: vt.none\n      };\n    },\n    Nn = {\n      value: In,\n      error: Rn,\n      fromOption: function fromOption(t, e) {\n        return t.fold(function () {\n          return Rn(e);\n        }, In);\n      }\n    };\n  function Pn(t, e, n) {\n    return t.stype === je.Error ? e(t.serror) : n(t.svalue);\n  }\n  function Vn(t) {\n    return {\n      stype: je.Value,\n      svalue: t\n    };\n  }\n  function Hn(t) {\n    return {\n      stype: je.Error,\n      serror: t\n    };\n  }\n  function Ln(t, e, n, o) {\n    return {\n      tag: \"field\",\n      key: t,\n      newKey: e,\n      presence: n,\n      prop: o\n    };\n  }\n  function zn(t, e, n) {\n    switch (t.tag) {\n      case \"field\":\n        return e(t.key, t.newKey, t.presence, t.prop);\n      case \"custom\":\n        return n(t.newKey, t.instantiator);\n    }\n  }\n  function Un(u) {\n    return function () {\n      for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n      if (0 === t.length) throw new Error(\"Can't merge zero objects\");\n      for (var n = {}, o = 0; o < t.length; o++) {\n        var r,\n          i = t[o];\n        for (r in i) Tt(i, r) && (n[r] = u(n[r], i[r]));\n      }\n      return n;\n    };\n  }\n  function jn() {\n    return {\n      tag: \"required\",\n      process: {}\n    };\n  }\n  function Wn(t) {\n    return {\n      tag: \"defaultedThunk\",\n      process: t\n    };\n  }\n  function Gn(t) {\n    return Wn(rt(t));\n  }\n  function Xn() {\n    return {\n      tag: \"option\",\n      process: {}\n    };\n  }\n  function Yn(t) {\n    return {\n      tag: \"mergeWithThunk\",\n      process: t\n    };\n  }\n  function qn(t) {\n    return x(t) && 100 < Ct(t).length ? \" removed due to size\" : JSON.stringify(t, null, 2);\n  }\n  function Kn(t, e) {\n    return zo([{\n      path: t,\n      getErrorInfo: e\n    }]);\n  }\n  function Jn(n) {\n    return {\n      extract: function extract(e, t) {\n        return jo(n(t), function (t) {\n          return Kn(e, rt(t));\n        });\n      },\n      toString: rt(\"val\")\n    };\n  }\n  function $n(t, e, n, o) {\n    return o(tt(t, e).getOrThunk(function () {\n      return n(t);\n    }));\n  }\n  function Qn(e, n, o, r, i) {\n    function u(t) {\n      return i.extract(n.concat([r]), t);\n    }\n    function t(t) {\n      return t.fold(function () {\n        return Lo(vt.none());\n      }, function (t) {\n        var e = i.extract(n.concat([r]), t);\n        return Wo(e, vt.some);\n      });\n    }\n    var a, c, s, l, f, d;\n    switch (e.tag) {\n      case \"required\":\n        return s = n, d = u, tt(l = o, f = r).fold(function () {\n          return t = f, e = l, Kn(s, function () {\n            return 'Could not find valid *required* value for \"' + t + '\" in ' + qn(e);\n          });\n          var t, e;\n        }, d);\n      case \"defaultedThunk\":\n        return $n(o, r, e.process, u);\n      case \"option\":\n        return t(tt(o, r));\n      case \"defaultedOptionThunk\":\n        return c = e.process, t(tt(a = o, r).map(function (t) {\n          return !0 === t ? c(a) : t;\n        }));\n      case \"mergeWithThunk\":\n        return $n(o, r, rt({}), function (t) {\n          return u(Yo(e.process(o), t));\n        });\n    }\n  }\n  function Zn(n) {\n    return {\n      extract: function extract(t, e) {\n        return n().extract(t, e);\n      },\n      toString: function toString() {\n        return n().toString();\n      }\n    };\n  }\n  function to(t) {\n    var s = $o(t),\n      l = I(t, function (n, t) {\n        return zn(t, function (t) {\n          var e;\n          return Yo(n, ((e = {})[t] = !0, e));\n        }, rt(n));\n      }, {});\n    return {\n      extract: function extract(t, e) {\n        var n,\n          o,\n          r,\n          i,\n          u,\n          a,\n          c = F(w(e) ? [] : Ct((r = k, i = o = {}, u = function u(t, e) {\n            i[e] = t;\n          }, a = st, J(e, function (t, e) {\n            (r(t, e) ? u : a)(t, e);\n          }), o)), function (t) {\n            return !et(l, t);\n          });\n        return 0 === c.length ? s.extract(t, e) : (n = c, Kn(t, function () {\n          return \"There are unsupported fields: [\" + n.join(\", \") + \"] specified\";\n        }));\n      },\n      toString: s.toString\n    };\n  }\n  function eo(o) {\n    return {\n      extract: function extract(n, t) {\n        var e = B(t, function (t, e) {\n          return o.extract(n.concat([\"[\" + e + \"]\"]), t);\n        });\n        return Ko(e);\n      },\n      toString: function toString() {\n        return \"array(\" + o.toString() + \")\";\n      }\n    };\n  }\n  function no(u) {\n    return {\n      extract: function extract(t, e) {\n        for (var n = [], o = 0, r = u; o < r.length; o++) {\n          var i = r[o].extract(t, e);\n          if (i.stype === je.Value) return i;\n          n.push(i);\n        }\n        return Ko(n);\n      },\n      toString: function toString() {\n        return \"oneOf(\" + B(u, function (t) {\n          return t.toString();\n        }).join(\", \") + \")\";\n      }\n    };\n  }\n  function oo(n, o) {\n    return Jn(function (t) {\n      var e = _typeof(t);\n      return n(t) ? Lo(t) : zo(\"Expected type: \" + o + \" but got: \" + e);\n    });\n  }\n  function ro(e, a) {\n    return {\n      extract: function extract(i, u) {\n        return tt(u, e).fold(function () {\n          return t = e, Kn(i, function () {\n            return 'Choice schema did not contain choice key: \"' + t + '\"';\n          });\n          var t;\n        }, function (t) {\n          return n = i, e = u, tt(o = a, r = t).fold(function () {\n            return t = o, e = r, Kn(n, function () {\n              return 'The chosen schema: \"' + e + '\" did not exist in branches: ' + qn(t);\n            });\n            var t, e;\n          }, function (t) {\n            return t.extract(n.concat([\"branch: \" + r]), e);\n          });\n          var n, e, o, r;\n        });\n      },\n      toString: function toString() {\n        return \"chooseOn(\" + e + \"). Possible values: \" + Ct(a);\n      }\n    };\n  }\n  function io(e) {\n    return Jn(function (t) {\n      return e(t).fold(zo, Lo);\n    });\n  }\n  function uo(e, t) {\n    return r = function r(t) {\n      return e(t).fold(Hn, Vn);\n    }, i = t, {\n      extract: function extract(n, o) {\n        var t = Ct(o),\n          e = eo(Jn(r)).extract(n, t);\n        return Uo(e, function (t) {\n          var e = B(t, function (t) {\n            return Ln(t, t, jn(), i);\n          });\n          return $o(e).extract(n, o);\n        });\n      },\n      toString: function toString() {\n        return \"setOf(\" + i.toString() + \")\";\n      }\n    };\n    var r, i;\n  }\n  function ao(t, e, n) {\n    return Ho((r = e.extract([t], o = n), Go(r, function (t) {\n      return {\n        input: o,\n        errors: t\n      };\n    })));\n    var o, r;\n  }\n  function co(t) {\n    return t.fold(function (t) {\n      throw new Error(ur(t));\n    }, h);\n  }\n  function so(t, e, n) {\n    return co(ao(t, e, n));\n  }\n  function lo(t, e) {\n    return ro(t, dt(e, $o));\n  }\n  function fo(e) {\n    return io(function (t) {\n      return wt(e, t) ? Nn.value(t) : Nn.error('Unsupported value: \"' + t + '\", choose one of \"' + e.join(\", \") + '\".');\n    });\n  }\n  function mo(t) {\n    return ar(t, t, jn(), Zo());\n  }\n  function go(t, e) {\n    return ar(t, t, jn(), e);\n  }\n  function po(t) {\n    return go(t, er);\n  }\n  function ho(t, e) {\n    return ar(t, t, jn(), fo(e));\n  }\n  function vo(t) {\n    return go(t, or);\n  }\n  function bo(t, e) {\n    return ar(t, t, jn(), $o(e));\n  }\n  function yo(t, e) {\n    return ar(t, t, jn(), Qo(e));\n  }\n  function xo(t, e) {\n    return ar(t, t, jn(), eo(e));\n  }\n  function wo(t) {\n    return ar(t, t, Xn(), Zo());\n  }\n  function So(t, e) {\n    return ar(t, t, Xn(), e);\n  }\n  function ko(t) {\n    return So(t, tr);\n  }\n  function Co(t) {\n    return So(t, er);\n  }\n  function Oo(t) {\n    return So(t, or);\n  }\n  function _o(t, e) {\n    return So(t, eo(e));\n  }\n  function To(t, e) {\n    return So(t, $o(e));\n  }\n  function Eo(t, e) {\n    return ar(t, t, Gn(e), Zo());\n  }\n  function Do(t, e, n) {\n    return ar(t, t, Gn(e), n);\n  }\n  function Ao(t, e) {\n    return Do(t, e, tr);\n  }\n  function Bo(t, e) {\n    return Do(t, e, er);\n  }\n  function Mo(t, e, n) {\n    return Do(t, e, fo(n));\n  }\n  function Fo(t, e) {\n    return Do(t, e, nr);\n  }\n  function Io(t, e) {\n    return Do(t, e, or);\n  }\n  function Ro(t, e, n) {\n    return Do(t, e, eo(n));\n  }\n  function No(t, e, n) {\n    return Do(t, e, $o(n));\n  }\n  function Po(t) {\n    var e = t;\n    return {\n      get: function get() {\n        return e;\n      },\n      set: function set(t) {\n        e = t;\n      }\n    };\n  }\n  (We = je = {})[We.Error = 0] = \"Error\", We[We.Value = 1] = \"Value\";\n  function Vo(u) {\n    if (!c(u)) throw new Error(\"cases must be an array\");\n    if (0 === u.length) throw new Error(\"there must be at least one case\");\n    var a = [],\n      n = {};\n    return St(u, function (t, o) {\n      var e = Ct(t);\n      if (1 !== e.length) throw new Error(\"one and only one name per case\");\n      var r = e[0],\n        i = t[r];\n      if (void 0 !== n[r]) throw new Error(\"duplicate key detected:\" + r);\n      if (\"cata\" === r) throw new Error(\"cannot have a case named cata (sorry)\");\n      if (!c(i)) throw new Error(\"case arguments must be an array\");\n      a.push(r), n[r] = function () {\n        for (var n = [], t = 0; t < arguments.length; t++) n[t] = arguments[t];\n        var e = n.length;\n        if (e !== i.length) throw new Error(\"Wrong number of arguments to case \" + r + \". Expected \" + i.length + \" (\" + i + \"), got \" + e);\n        return {\n          fold: function fold() {\n            for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n            if (t.length !== u.length) throw new Error(\"Wrong number of arguments to fold. Expected \" + u.length + \", got \" + t.length);\n            return t[o].apply(null, n);\n          },\n          match: function match(t) {\n            var e = Ct(t);\n            if (a.length !== e.length) throw new Error(\"Wrong number of arguments to match. Expected: \" + a.join(\",\") + \"\\nActual: \" + e.join(\",\"));\n            if (!L(a, function (t) {\n              return wt(e, t);\n            })) throw new Error(\"Not all branches were specified when using match. Specified: \" + e.join(\", \") + \"\\nRequired: \" + a.join(\", \"));\n            return t[r].apply(null, n);\n          },\n          log: function log(t) {\n            console.log(t, {\n              constructors: a,\n              constructor: r,\n              params: n\n            });\n          }\n        };\n      };\n    }), n;\n  }\n  var Ho = function Ho(t) {\n      return Pn(t, Nn.error, Nn.value);\n    },\n    Lo = Vn,\n    zo = Hn,\n    Uo = function Uo(t, e) {\n      return t.stype === je.Value ? e(t.svalue) : t;\n    },\n    jo = function jo(t, e) {\n      return t.stype === je.Error ? e(t.serror) : t;\n    },\n    Wo = function Wo(t, e) {\n      return t.stype === je.Value ? {\n        stype: je.Value,\n        svalue: e(t.svalue)\n      } : t;\n    },\n    Go = function Go(t, e) {\n      return t.stype === je.Error ? {\n        stype: je.Error,\n        serror: e(t.serror)\n      } : t;\n    },\n    Xo = Pn,\n    Yo = Un(function (t, e) {\n      return x(t) && x(e) ? Yo(t, e) : e;\n    }),\n    qo = Un(function (t, e) {\n      return e;\n    }),\n    Ko = function Ko(t) {\n      var e,\n        n,\n        o = (e = [], n = [], St(t, function (t) {\n          Pn(t, function (t) {\n            return n.push(t);\n          }, function (t) {\n            return e.push(t);\n          });\n        }), {\n          values: e,\n          errors: n\n        });\n      return 0 < o.errors.length ? r(zo, ft)(o.errors) : Lo(o.values);\n    },\n    Jo = Jn(Lo),\n    $o = function $o(n) {\n      return {\n        extract: function extract(i, u) {\n          for (var a = {}, c = [], t = 0, e = n; t < e.length; t++) zn(e[t], function (t, e, n, o) {\n            var r = Qn(n, i, u, t, o);\n            Xo(r, function (t) {\n              c.push.apply(c, t);\n            }, function (t) {\n              a[e] = t;\n            });\n          }, function (t, e) {\n            a[t] = e(u);\n          });\n          return 0 < c.length ? zo(c) : Lo(a);\n        },\n        toString: function toString() {\n          return \"obj{\\n\" + B(n, function (t) {\n            return zn(t, function (t, e, n, o) {\n              return t + \" -> \" + o.toString();\n            }, function (t, e) {\n              return \"state(\" + t + \")\";\n            });\n          }).join(\"\\n\") + \"}\";\n        }\n      };\n    },\n    Qo = r(eo, $o),\n    Zo = rt(Jo),\n    tr = oo(u, \"number\"),\n    er = oo(y, \"string\"),\n    nr = oo(w, \"boolean\"),\n    or = oo(S, \"function\"),\n    rr = function rr(e) {\n      if (Object(e) !== e) return !0;\n      switch ({}.toString.call(e).slice(8, -1)) {\n        case \"Boolean\":\n        case \"Number\":\n        case \"String\":\n        case \"Date\":\n        case \"RegExp\":\n        case \"Blob\":\n        case \"FileList\":\n        case \"ImageData\":\n        case \"ImageBitmap\":\n        case \"ArrayBuffer\":\n          return !0;\n        case \"Array\":\n        case \"Object\":\n          return Object.keys(e).every(function (t) {\n            return rr(e[t]);\n          });\n        default:\n          return !1;\n      }\n    },\n    ir = Jn(function (t) {\n      return rr(t) ? Lo(t) : zo(\"Expected value to be acceptable for sending via postMessage\");\n    }),\n    ur = function ur(t) {\n      return \"Errors: \\n\" + B(10 < (e = t.errors).length ? e.slice(0, 10).concat([{\n        path: [],\n        getErrorInfo: rt(\"... (only showing first ten failures)\")\n      }]) : e, function (t) {\n        return \"Failed path: (\" + t.path.join(\" > \") + \")\\n\" + t.getErrorInfo();\n      }).join(\"\\n\") + \"\\n\\nInput object: \" + qn(t.input);\n      var e;\n    },\n    ar = Ln,\n    cr = function cr(t, e) {\n      return {\n        tag: \"custom\",\n        newKey: t,\n        instantiator: e\n      };\n    };\n  function sr(t, e) {\n    return (n = {})[t] = e, n;\n    var n;\n  }\n  function lr(t) {\n    return e = {}, St(t, function (t) {\n      e[t.key] = t.value;\n    }), e;\n    var e;\n  }\n  function fr(t) {\n    return S(t) ? t : T;\n  }\n  function dr(t, e, n) {\n    for (var o = t.dom, r = fr(n); o.parentNode;) {\n      var o = o.parentNode,\n        i = Mt.fromDom(o),\n        u = e(i);\n      if (u.isSome()) return u;\n      if (r(i)) break;\n    }\n    return vt.none();\n  }\n  function mr(t, e, n) {\n    var o = e(t),\n      r = fr(n);\n    return o.orThunk(function () {\n      return r(t) ? vt.none() : dr(t, e, r);\n    });\n  }\n  function gr(t, e) {\n    return zt(t.element, e.event.target);\n  }\n  function pr(t) {\n    if (!et(t, \"can\") && !et(t, \"abort\") && !et(t, \"run\")) throw new Error(\"EventHandler defined by: \" + JSON.stringify(t, null, 2) + \" does not have can, abort, or run!\");\n    return _lt(_lt({}, ai), t);\n  }\n  function hr(t) {\n    return rt(\"alloy.\" + t);\n  }\n  function vr(t, e) {\n    eu(t, t.element, e, {});\n  }\n  function br(t, e, n) {\n    eu(t, t.element, e, n);\n  }\n  function yr(t) {\n    vr(t, Ii());\n  }\n  function xr(t, e, n) {\n    eu(t, e, n, {});\n  }\n  function wr(t, e, n, o) {\n    t.getSystem().triggerEvent(n, e, o.event);\n  }\n  function Sr(t, e) {\n    return {\n      key: t,\n      value: pr({\n        abort: e\n      })\n    };\n  }\n  function kr(t) {\n    return {\n      key: t,\n      value: pr({\n        run: function run(t, e) {\n          e.event.prevent();\n        }\n      })\n    };\n  }\n  function Cr(t, e) {\n    return {\n      key: t,\n      value: pr({\n        run: e\n      })\n    };\n  }\n  function Or(t, n, o) {\n    return {\n      key: t,\n      value: pr({\n        run: function run(t, e) {\n          n.apply(void 0, [t, e].concat(o));\n        }\n      })\n    };\n  }\n  function _r(t) {\n    return function (n) {\n      return {\n        key: t,\n        value: pr({\n          run: function run(t, e) {\n            gr(t, e) && n(t, e);\n          }\n        })\n      };\n    };\n  }\n  function Tr(t, e, n) {\n    var o,\n      r = e.partUids[n];\n    return Cr(o = t, function (t, e) {\n      t.getSystem().getByUid(r).each(function (t) {\n        wr(t, t.element, o, e);\n      });\n    });\n  }\n  function Er(t, r) {\n    return Cr(t, function (e, t) {\n      var n = t.event,\n        o = e.getSystem().getByDom(n.target).getOrThunk(function () {\n          return mr(n.target, function (t) {\n            return e.getSystem().getByDom(t).toOptional();\n          }, T).getOr(e);\n        });\n      r(e, o, t);\n    });\n  }\n  function Dr(t) {\n    return Cr(t, function (t, e) {\n      e.cut();\n    });\n  }\n  function Ar(t, e) {\n    return _r(t)(e);\n  }\n  function Br(t) {\n    return t.dom.innerHTML;\n  }\n  function Mr(t, e) {\n    var n,\n      o,\n      r = jt(t).dom,\n      i = Mt.fromDom(r.createDocumentFragment());\n    Be(i, (n = e, (o = (r || document).createElement(\"div\")).innerHTML = n, Kt(Mt.fromDom(o)))), Me(t), Tn(t, i);\n  }\n  function Fr(t) {\n    if (Zt(t)) return \"#shadow-root\";\n    var e = Mt.fromDom(t.dom.cloneNode(!1)),\n      n = Mt.fromTag(\"div\"),\n      o = Mt.fromDom(e.dom.cloneNode(!0));\n    return Tn(n, o), Br(n);\n  }\n  function Ir(t) {\n    var e = new Date().getTime();\n    return t + \"_\" + Math.floor(1e9 * Math.random()) + ++su + String(e);\n  }\n  function Rr(t) {\n    var e = Ge(t) ? t.dom[mu] : null;\n    return vt.from(e);\n  }\n  function Nr(e) {\n    function n(t) {\n      return \"The component must be in a context to execute: \" + t + (e ? \"\\n\" + Fr(e().element) + \" is not in context.\" : \"\");\n    }\n    function t(t) {\n      return function () {\n        throw new Error(n(t));\n      };\n    }\n    function o(t) {\n      return function () {\n        console.warn(n(t));\n      };\n    }\n    return {\n      debugInfo: rt(\"fake\"),\n      triggerEvent: o(\"triggerEvent\"),\n      triggerFocus: o(\"triggerFocus\"),\n      triggerEscape: o(\"triggerEscape\"),\n      broadcast: o(\"broadcast\"),\n      broadcastOn: o(\"broadcastOn\"),\n      broadcastEvent: o(\"broadcastEvent\"),\n      build: t(\"build\"),\n      addToWorld: t(\"addToWorld\"),\n      removeFromWorld: t(\"removeFromWorld\"),\n      addToGui: t(\"addToGui\"),\n      removeFromGui: t(\"removeFromGui\"),\n      getByUid: t(\"getByUid\"),\n      getByDom: t(\"getByDom\"),\n      isConnected: T\n    };\n  }\n  function Pr(t, e) {\n    var n = t.toString(),\n      o = n.indexOf(\")\") + 1,\n      r = n.indexOf(\"(\"),\n      i = n.substring(r + 1, o - 1).split(/,\\s*/);\n    return t.toFunctionAnnotation = function () {\n      return {\n        name: e,\n        parameters: bu(i)\n      };\n    }, t;\n  }\n  function Vr(t) {\n    return sr(yu, t);\n  }\n  function Hr(o) {\n    return t = function t(_t2) {\n      for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];\n      return o.apply(void 0, V([_t2.getApis(), _t2], e, !1));\n    }, n = (e = o.toString()).indexOf(\")\") + 1, r = e.indexOf(\"(\"), i = e.substring(r + 1, n - 1).split(/,\\s*/), t.toFunctionAnnotation = function () {\n      return {\n        name: \"OVERRIDE\",\n        parameters: bu(i.slice(1))\n      };\n    }, t;\n    var t, e, n, r, i;\n  }\n  function Lr(t, r) {\n    var i = {};\n    return J(t, function (t, o) {\n      J(t, function (t, e) {\n        var n = tt(i, e).getOr([]);\n        i[e] = n.concat([r(o, t)]);\n      });\n    }), i;\n  }\n  function zr(t) {\n    return {\n      classes: E(t.classes) ? [] : t.classes,\n      attributes: E(t.attributes) ? {} : t.attributes,\n      styles: E(t.styles) ? {} : t.styles\n    };\n  }\n  function Ur(t) {\n    return t.cHandler;\n  }\n  function jr(t, e) {\n    return {\n      name: t,\n      handler: e\n    };\n  }\n  function Wr(t, e, n) {\n    var o = e[n];\n    return o ? function (u, t, a) {\n      try {\n        var e = G(t, function (t, e) {\n          var n = t.name,\n            o = e.name,\n            r = a.indexOf(n),\n            i = a.indexOf(o);\n          if (-1 === r) throw new Error(\"The ordering for \" + u + \" does not have an entry for \" + n + \".\\nOrder specified: \" + JSON.stringify(a, null, 2));\n          if (-1 === i) throw new Error(\"The ordering for \" + u + \" does not have an entry for \" + o + \".\\nOrder specified: \" + JSON.stringify(a, null, 2));\n          return r < i ? -1 : i < r ? 1 : 0;\n        });\n        return Nn.value(e);\n      } catch (t) {\n        return Nn.error([t]);\n      }\n    }(\"Event: \" + n, t, o).map(function (t) {\n      var n,\n        e,\n        o,\n        r,\n        i = B(t, function (t) {\n          return t.handler;\n        });\n      return {\n        can: function can() {\n          for (var n = [], t = 0; t < arguments.length; t++) n[t] = arguments[t];\n          return R(e, function (t, e) {\n            return t && e.can.apply(void 0, n);\n          }, !0);\n        },\n        abort: (o = e = n = i, r = function r(t) {\n          return t.abort;\n        }, function () {\n          for (var n = [], t = 0; t < arguments.length; t++) n[t] = arguments[t];\n          return R(o, function (t, e) {\n            return t || r(e).apply(void 0, n);\n          }, !1);\n        }),\n        run: function run() {\n          for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];\n          St(n, function (t) {\n            t.run.apply(void 0, e);\n          });\n        }\n      };\n    }) : Nn.error([\"The event (\" + n + ') has more than one behaviour that listens to it.\\nWhen this occurs, you must specify an event ordering for the behaviours in your spec (e.g. [ \"listing\", \"toggling\" ]).\\nThe behaviours that can trigger it are: ' + JSON.stringify(B(t, function (t) {\n      return t.name;\n    }), null, 2)]);\n  }\n  function Gr(t, e) {\n    var n = ie(t, e);\n    return void 0 === n || \"\" === n ? [] : n.split(\" \");\n  }\n  function Xr(t) {\n    return void 0 !== t.dom.classList;\n  }\n  function Yr(t, e) {\n    var n, o, r;\n    Xr(t) ? t.dom.classList.add(e) : (o = e, r = Gr(n = t, \"class\").concat([o]), oe(n, \"class\", r.join(\" \")));\n  }\n  function qr(t, e) {\n    var n, o, r, i;\n    Xr(t) ? t.dom.classList.remove(e) : (r = e, 0 < (i = F(Gr(o = t, \"class\"), function (t) {\n      return t !== r;\n    })).length ? oe(o, \"class\", i.join(\" \")) : ce(o, \"class\")), 0 === (Xr(n = t) ? n.dom.classList : Gr(n, \"class\")).length && ce(n, \"class\");\n  }\n  function Kr(t, e) {\n    return Xr(t) && t.dom.classList.contains(e);\n  }\n  function Jr(e, t) {\n    St(t, function (t) {\n      Yr(e, t);\n    });\n  }\n  function $r(e, t) {\n    St(t, function (t) {\n      qr(e, t);\n    });\n  }\n  function Qr(t) {\n    return t.dom.value;\n  }\n  function Zr(t, e) {\n    if (void 0 === e) throw new Error(\"Value.set was undefined\");\n    t.dom.value = e;\n  }\n  function ti(t) {\n    var n,\n      e,\n      o,\n      r,\n      i = (n = tt(t, \"behaviours\").getOr({}), H(Ct(n), function (t) {\n        var e = n[t];\n        return k(e) ? [e.me] : [];\n      }));\n    return e = t, r = B(o = i, function (t) {\n      return To(t.name(), [mo(\"config\"), Eo(\"state\", xu)]);\n    }), {\n      list: o,\n      data: dt(ao(\"component.behaviours\", $o(r), e.behaviours).fold(function (t) {\n        throw new Error(ur(t) + \"\\nComplete spec:\\n\" + JSON.stringify(e, null, 2));\n      }, h), function (t) {\n        return rt(t.map(function (t) {\n          return {\n            config: t.config,\n            state: t.state.init(t.config)\n          };\n        }));\n      })\n    };\n  }\n  function ei(t, e, n) {\n    var o,\n      r,\n      i = _lt(_lt({}, (o = t).dom), {\n        uid: o.uid,\n        domChildren: B(o.components, function (t) {\n          return t.element;\n        })\n      }),\n      u = t.domModification.fold(function () {\n        return zr({});\n      }, zr),\n      a = 0 < e.length ? function (e, t, n, o) {\n        var r = _lt({}, t);\n        function i(t) {\n          return I(t, function (t, e) {\n            return _lt(_lt({}, e.modification), t);\n          }, {});\n        }\n        St(n, function (t) {\n          r[t.name()] = t.exhibit(e, o);\n        });\n        var u = Lr(r, function (t, e) {\n          return {\n            name: t,\n            modification: e\n          };\n        });\n        return zr({\n          classes: I(u.classes, function (t, e) {\n            return e.modification.concat(t);\n          }, []),\n          attributes: i(u.attributes),\n          styles: i(u.styles)\n        });\n      }(n, {\n        \"alloy.base.modification\": u\n      }, e, i) : u;\n    return _lt(_lt({}, r = i), {\n      attributes: _lt(_lt({}, r.attributes), a.attributes),\n      styles: _lt(_lt({}, r.styles), a.styles),\n      classes: r.classes.concat(a.classes)\n    });\n  }\n  function ni(t, e, n) {\n    var o,\n      r,\n      i,\n      u,\n      a,\n      c = {\n        \"alloy.base.behaviour\": t.events\n      },\n      s = t.eventOrder;\n    return r = n, i = e, o = Lr(_lt(_lt({}, c), (u = r, a = {}, St(i, function (t) {\n      a[t.name()] = t.handlers(u);\n    }), a)), jr), Su(o, s).getOrDie();\n  }\n  function oi(t) {\n    var n,\n      e,\n      o,\n      r,\n      i,\n      u,\n      a,\n      c,\n      s,\n      l,\n      f = hu(t),\n      d = f.events,\n      m = A(f, [\"events\"]),\n      g = B(tt(m, \"components\").getOr([]), Tu),\n      p = _lt(_lt({}, m), {\n        events: _lt(_lt({}, cu), d),\n        components: g\n      });\n    return Nn.value((e = Po(vu), o = co(ao(\"custom.definition\", Cu, n = p)), r = ti(n), i = r.list, u = r.data, a = function (t) {\n      var e = Mt.fromTag(t.tag);\n      re(e, t.attributes), Jr(e, t.classes), de(e, t.styles), t.innerHtml.each(function (t) {\n        return Mr(e, t);\n      });\n      var n = t.domChildren;\n      return Be(e, n), t.value.each(function (t) {\n        Zr(e, t);\n      }), t.uid, gu(e, t.uid), e;\n    }(ei(o, i, u)), c = ni(o, i, u), s = Po(o.components), l = {\n      uid: n.uid,\n      getSystem: e.get,\n      config: function config(t) {\n        var e = u;\n        return (S(e[t.name()]) ? e[t.name()] : function () {\n          throw new Error(\"Could not find \" + t.name() + \" in \" + JSON.stringify(n, null, 2));\n        })();\n      },\n      hasConfigured: function hasConfigured(t) {\n        return S(u[t.name()]);\n      },\n      spec: n,\n      readState: function readState(t) {\n        return u[t]().map(function (t) {\n          return t.state.readState();\n        }).getOr(\"not enabled\");\n      },\n      getApis: function getApis() {\n        return o.apis;\n      },\n      connect: function connect(t) {\n        e.set(t);\n      },\n      disconnect: function disconnect() {\n        e.set(Nr(h));\n      },\n      element: a,\n      syncComponents: function syncComponents() {\n        var t = H(Kt(a), function (t) {\n          return e.get().getByDom(t).fold(function () {\n            return [];\n          }, W);\n        });\n        s.set(t);\n      },\n      components: s.get,\n      events: c\n    }));\n    function h() {\n      return l;\n    }\n  }\n  function ri(t) {\n    var e = Mt.fromText(t);\n    return Ou({\n      element: e\n    });\n  }\n  Vo([{\n    bothErrors: [\"error1\", \"error2\"]\n  }, {\n    firstError: [\"error1\", \"value2\"]\n  }, {\n    secondError: [\"value1\", \"error2\"]\n  }, {\n    bothValues: [\"value1\", \"value2\"]\n  }]);\n  var ii,\n    ui,\n    ai = {\n      can: D,\n      abort: T,\n      run: st\n    },\n    ci = rt,\n    si = ci(\"touchstart\"),\n    li = ci(\"touchmove\"),\n    fi = ci(\"touchend\"),\n    di = ci(\"touchcancel\"),\n    mi = ci(\"mousedown\"),\n    gi = ci(\"mousemove\"),\n    pi = ci(\"mouseout\"),\n    hi = ci(\"mouseup\"),\n    vi = ci(\"mouseover\"),\n    bi = ci(\"focusin\"),\n    yi = ci(\"focusout\"),\n    xi = ci(\"keydown\"),\n    wi = ci(\"keyup\"),\n    Si = ci(\"input\"),\n    ki = ci(\"change\"),\n    Ci = ci(\"click\"),\n    Oi = ci(\"transitioncancel\"),\n    _i = ci(\"transitionend\"),\n    Ti = ci(\"transitionstart\"),\n    Ei = ci(\"selectstart\"),\n    Di = {\n      tap: hr(\"tap\")\n    },\n    Ai = hr(\"focus\"),\n    Bi = hr(\"blur.post\"),\n    Mi = hr(\"paste.post\"),\n    Fi = hr(\"receive\"),\n    Ii = hr(\"execute\"),\n    Ri = hr(\"focus.item\"),\n    Ni = Di.tap,\n    Pi = hr(\"longpress\"),\n    Vi = hr(\"sandbox.close\"),\n    Hi = hr(\"typeahead.cancel\"),\n    Li = hr(\"system.init\"),\n    zi = hr(\"system.touchmove\"),\n    Ui = hr(\"system.touchend\"),\n    ji = hr(\"system.scroll\"),\n    Wi = hr(\"system.resize\"),\n    Gi = hr(\"system.attached\"),\n    Xi = hr(\"system.detached\"),\n    Yi = hr(\"system.dismissRequested\"),\n    qi = hr(\"system.repositionRequested\"),\n    Ki = hr(\"focusmanager.shifted\"),\n    Ji = hr(\"slotcontainer.visibility\"),\n    $i = hr(\"change.tab\"),\n    Qi = hr(\"dismiss.tab\"),\n    Zi = hr(\"highlight\"),\n    tu = hr(\"dehighlight\"),\n    eu = function eu(t, e, n, o) {\n      var r = _lt({\n        target: e\n      }, o);\n      t.getSystem().triggerEvent(n, e, r);\n    },\n    nu = lr,\n    ou = _r(Gi()),\n    ru = _r(Xi()),\n    iu = _r(Li()),\n    uu = (ii = Ii(), function (t) {\n      return Cr(ii, t);\n    }),\n    au = nu([{\n      key: Ai(),\n      value: pr({\n        can: function can(t, e) {\n          var n,\n            o = e.event,\n            r = o.originator,\n            i = o.target;\n          return !(zt(n = r, t.element) && !zt(n, i) && (console.warn(Ai() + \" did not get interpreted by the desired target. \\nOriginator: \" + Fr(r) + \"\\nTarget: \" + Fr(i) + \"\\nCheck the \" + Ai() + \" event handlers\"), 1));\n        }\n      })\n    }]),\n    cu = Object.freeze({\n      __proto__: null,\n      events: au\n    }),\n    su = 0,\n    lu = rt(\"alloy-id-\"),\n    fu = rt(\"data-alloy-id\"),\n    du = lu(),\n    mu = fu(),\n    gu = function gu(t, e) {\n      Object.defineProperty(t.dom, mu, {\n        value: e,\n        writable: !0\n      });\n    },\n    pu = Ir,\n    hu = h,\n    vu = Nr(),\n    bu = function bu(t) {\n      return B(t, function (t) {\n        return At(t, \"/*\") ? t.substring(0, t.length - \"/*\".length) : t;\n      });\n    },\n    yu = Ir(\"alloy-premade\"),\n    xu = {\n      init: function init() {\n        return wu({\n          readState: rt(\"No State required\")\n        });\n      }\n    },\n    wu = function wu(t) {\n      return t;\n    },\n    Su = function Su(t, a) {\n      var e,\n        n,\n        o,\n        r,\n        i,\n        u,\n        c = $(t, function (r, u) {\n          return (1 === r.length ? Nn.value(r[0].handler) : Wr(r, a, u)).map(function (t) {\n            var e,\n              i,\n              n = (i = S(e = t) ? {\n                can: D,\n                abort: T,\n                run: e\n              } : e, function (t, e) {\n                for (var n = [], o = 2; o < arguments.length; o++) n[o - 2] = arguments[o];\n                var r = [t, e].concat(n);\n                i.abort.apply(void 0, r) ? e.stop() : i.can.apply(void 0, r) && i.run.apply(void 0, r);\n              }),\n              o = 1 < r.length ? F(a[u], function (e) {\n                return d(r, function (t) {\n                  return t.name === e;\n                });\n              }).join(\" > \") : r[0].name;\n            return sr(u, {\n              handler: n,\n              purpose: o\n            });\n          });\n        });\n      return e = {}, n = [], o = [], St(c, function (t) {\n        t.fold(function (t) {\n          n.push(t);\n        }, function (t) {\n          o.push(t);\n        });\n      }), 0 < (u = {\n        errors: n,\n        values: o\n      }).errors.length ? Nn.error(ft(u.errors)) : (i = e, 0 === (r = u.values).length ? Nn.value(i) : Nn.value(Yo(i, qo.apply(void 0, r))));\n    },\n    ku = \"alloy.base.behaviour\",\n    Cu = $o([ar(\"dom\", \"dom\", jn(), $o([mo(\"tag\"), Eo(\"styles\", {}), Eo(\"classes\", []), Eo(\"attributes\", {}), wo(\"value\"), wo(\"innerHtml\")])), mo(\"components\"), mo(\"uid\"), Eo(\"events\", {}), Eo(\"apis\", {}), ar(\"eventOrder\", \"eventOrder\", ((ui = {})[Ii()] = [\"disabling\", ku, \"toggling\", \"typeaheadevents\"], ui[Ai()] = [ku, \"focusing\", \"keying\"], ui[Li()] = [ku, \"disabling\", \"toggling\", \"representing\"], ui[Si()] = [ku, \"representing\", \"streaming\", \"invalidating\"], ui[Xi()] = [ku, \"representing\", \"item-events\", \"tooltipping\"], ui[mi()] = [\"focusing\", ku, \"item-type-events\"], ui[si()] = [\"focusing\", ku, \"item-type-events\"], ui[vi()] = [\"item-type-events\", \"tooltipping\"], ui[Fi()] = [\"receiving\", \"reflecting\", \"tooltipping\"], Yn(rt(ui))), Zo()), wo(\"domModification\")]),\n    Ou = function Ou(t) {\n      var e = so(\"external.component\", to([mo(\"element\"), wo(\"uid\")]), t),\n        n = Po(Nr()),\n        o = e.uid.getOrThunk(function () {\n          return pu(\"external\");\n        });\n      gu(e.element, o);\n      var r = {\n        uid: o,\n        getSystem: n.get,\n        config: vt.none,\n        hasConfigured: T,\n        connect: function connect(t) {\n          n.set(t);\n        },\n        disconnect: function disconnect() {\n          n.set(Nr(function () {\n            return r;\n          }));\n        },\n        getApis: function getApis() {\n          return {};\n        },\n        element: e.element,\n        spec: t,\n        readState: rt(\"No state\"),\n        syncComponents: st,\n        components: rt([]),\n        events: {}\n      };\n      return Vr(r);\n    },\n    _u = pu,\n    Tu = function Tu(t) {\n      return tt(t, yu).getOrThunk(function () {\n        return oi(Tt(t, \"uid\") ? t : _lt({\n          uid: _u(\"\")\n        }, t)).getOrDie();\n      });\n    },\n    Eu = Vr;\n  function Du(t, e, n, o, r) {\n    return t(n, o) ? vt.some(n) : S(r) && r(n) ? vt.none() : e(n, o, r);\n  }\n  function Au(t, e, n) {\n    for (var o = t.dom, r = S(n) ? n : T; o.parentNode;) {\n      var o = o.parentNode,\n        i = Mt.fromDom(o);\n      if (e(i)) return vt.some(i);\n      if (r(i)) break;\n    }\n    return vt.none();\n  }\n  function Bu(t, e, n) {\n    return Du(function (t, e) {\n      return e(t);\n    }, Au, t, e, n);\n  }\n  function Mu(t, e, n) {\n    return Bu(t, e, n).isSome();\n  }\n  function Fu(t, e, n) {\n    return Au(t, function (t) {\n      return Ht(t, e);\n    }, n);\n  }\n  function Iu(t, e) {\n    return n = e, Lt(o = void 0 === t ? document : t.dom) ? vt.none() : vt.from(o.querySelector(n)).map(Mt.fromDom);\n    var n, o;\n  }\n  function Ru(t, e, n) {\n    return Du(Ht, Fu, t, e, n);\n  }\n  function Nu() {\n    var e = Ir(\"aria-owns\");\n    return {\n      id: e,\n      link: function link(t) {\n        oe(t, \"aria-owns\", e);\n      },\n      unlink: function unlink(t) {\n        ce(t, \"aria-owns\");\n      }\n    };\n  }\n  var Pu,\n    Vu,\n    Hu = function Hu(e, t) {\n      return Mu(t, function (t) {\n        return zt(t, e.element);\n      }, T) || (n = e, Bu(t, function (t) {\n        if (!Ge(t)) return !1;\n        var e = ie(t, \"id\");\n        return void 0 !== e && -1 < e.indexOf(\"aria-owns\");\n      }).bind(function (t) {\n        var e = ie(t, \"id\");\n        return Iu(gn(t), '[aria-owns=\"' + e + '\"]');\n      }).exists(function (t) {\n        return Hu(n, t);\n      }));\n      var n;\n    },\n    Lu = \"unknown\";\n  function zu(e, t, n) {\n    var o, r, i, u;\n    switch (tt(Uu.get(), e).orThunk(function () {\n      return K(Ct(Uu.get()), function (t) {\n        return -1 < e.indexOf(t) ? vt.some(Uu.get()[t]) : vt.none();\n      });\n    }).getOr(Pu.NORMAL)) {\n      case Pu.NORMAL:\n        return n(Wu());\n      case Pu.LOGGING:\n        var a = (o = e, r = t, i = [], u = new Date().getTime(), {\n            logEventCut: function logEventCut(t, e, n) {\n              i.push({\n                outcome: \"cut\",\n                target: e,\n                purpose: n\n              });\n            },\n            logEventStopped: function logEventStopped(t, e, n) {\n              i.push({\n                outcome: \"stopped\",\n                target: e,\n                purpose: n\n              });\n            },\n            logNoParent: function logNoParent(t, e, n) {\n              i.push({\n                outcome: \"no-parent\",\n                target: e,\n                purpose: n\n              });\n            },\n            logEventNoHandlers: function logEventNoHandlers(t, e) {\n              i.push({\n                outcome: \"no-handlers-left\",\n                target: e\n              });\n            },\n            logEventResponse: function logEventResponse(t, e, n) {\n              i.push({\n                outcome: \"response\",\n                purpose: n,\n                target: e\n              });\n            },\n            write: function write() {\n              var t = new Date().getTime();\n              wt([\"mousemove\", \"mouseover\", \"mouseout\", Li()], o) || console.log(o, {\n                event: o,\n                time: t - u,\n                target: r.dom,\n                sequence: B(i, function (t) {\n                  return wt([\"cut\", \"stopped\", \"response\"], t.outcome) ? \"{\" + t.purpose + \"} \" + t.outcome + \" at (\" + Fr(t.target) + \")\" : t.outcome;\n                })\n              });\n            }\n          }),\n          c = n(a);\n        return a.write(), c;\n      case Pu.STOP:\n        return !0;\n    }\n  }\n  (Vu = Pu = Pu || {})[Vu.STOP = 0] = \"STOP\", Vu[Vu.NORMAL = 1] = \"NORMAL\", Vu[Vu.LOGGING = 2] = \"LOGGING\";\n  var Uu = Po({}),\n    ju = [\"alloy/data/Fields\", \"alloy/debugging/Debugging\"],\n    Wu = rt({\n      logEventCut: st,\n      logEventStopped: st,\n      logNoParent: st,\n      logEventNoHandlers: st,\n      logEventResponse: st,\n      write: st\n    }),\n    Gu = rt([mo(\"menu\"), mo(\"selectedMenu\")]),\n    Xu = rt([mo(\"item\"), mo(\"selectedItem\")]);\n  function Yu() {\n    return bo(\"markers\", [mo(\"backgroundMenu\")].concat(Gu()).concat(Xu()));\n  }\n  function qu(t) {\n    return bo(\"markers\", B(t, mo));\n  }\n  function Ku(t, e, n) {\n    return void 0 !== (o = new Error()).stack && N(o.stack.split(\"\\n\"), function (e) {\n      return 0 < e.indexOf(\"alloy\") && !d(ju, function (t) {\n        return -1 < e.indexOf(t);\n      });\n    }).getOr(Lu), ar(e, e, n, io(function (n) {\n      return Nn.value(function () {\n        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n        return n.apply(void 0, t);\n      });\n    }));\n    var o;\n  }\n  function Ju(t) {\n    return Ku(0, t, Gn(st));\n  }\n  function $u(t) {\n    return Ku(0, t, Gn(vt.none));\n  }\n  function Qu(t) {\n    return Ku(0, t, jn());\n  }\n  function Zu(t) {\n    return Ku(0, t, jn());\n  }\n  function ta(t, e) {\n    return cr(t, rt(e));\n  }\n  function ea(t) {\n    return cr(t, h);\n  }\n  function na(t, e, n, o, r, i, u, a) {\n    return {\n      x: t,\n      y: e,\n      bubble: n,\n      direction: o,\n      placement: r,\n      restriction: i,\n      label: u + \"-\" + r,\n      alwaysFit: a = void 0 !== a && a\n    };\n  }\n  function oa(t, e, n, o) {\n    var r = t + e;\n    return o < r ? n : r < n ? o : r;\n  }\n  function ra(n, e) {\n    return j([\"left\", \"right\", \"top\", \"bottom\"], function (t) {\n      return tt(e, t).map(function (e) {\n        return function (t) {\n          switch (e) {\n            case 1:\n              return t.x;\n            case 0:\n              return t.x + t.width;\n            case 2:\n              return t.y;\n            case 3:\n              return t.y + t.height;\n          }\n        }(n);\n      });\n    });\n  }\n  function ia(t, e) {\n    return t.x + t.width / 2 - e.width / 2;\n  }\n  function ua(t, e) {\n    return t.x + t.width - e.width;\n  }\n  function aa(t, e) {\n    return t.y - e.height;\n  }\n  function ca(t) {\n    return t.y + t.height;\n  }\n  function sa(t, e) {\n    return t.y + t.height / 2 - e.height / 2;\n  }\n  function la(t, e, n) {\n    return na(t.x + t.width, sa(t, e), n.east(), Ua(), \"east\", ra(t, {\n      left: 0\n    }), Ga);\n  }\n  function fa(t, e, n) {\n    return na(t.x - e.width, sa(t, e), n.west(), ja(), \"west\", ra(t, {\n      right: 1\n    }), Ga);\n  }\n  function da() {\n    return [Xa, Ya, qa, Ka, $a, Ja, la, fa];\n  }\n  function ma() {\n    return [Ya, Xa, Ka, qa, $a, Ja, la, fa];\n  }\n  function ga() {\n    return [qa, Ka, Xa, Ya, Ja, $a];\n  }\n  function pa() {\n    return [Ka, qa, Ya, Xa, Ja, $a];\n  }\n  function ha() {\n    return [Xa, Ya, qa, Ka, $a, Ja];\n  }\n  function va() {\n    return [Ya, Xa, Ka, qa, $a, Ja];\n  }\n  function ba(n, o, r) {\n    return iu(function (t, e) {\n      r(t, n, o);\n    });\n  }\n  function ya(t) {\n    return {\n      key: t,\n      value: void 0\n    };\n  }\n  function xa(t) {\n    var e,\n      n,\n      o,\n      r,\n      i,\n      u,\n      a,\n      c,\n      s = so(\"Creating behaviour: \" + t.name, nc, t);\n    return e = s.fields, n = s.name, o = s.active, r = s.apis, i = s.extra, u = s.state, a = to(e), c = To(n, [So(\"config\", to(e))]), tc(a, c, n, o, r, i, u);\n  }\n  function wa(t) {\n    var e,\n      n = so(\"Creating behaviour: \" + t.name, oc, t),\n      o = lo(n.branchKey, n.branches),\n      r = n.name,\n      i = n.active,\n      u = n.apis,\n      a = n.extra,\n      c = n.state,\n      s = To(r, [So(\"config\", e = o)]);\n    return tc(e, s, r, i, u, a, c);\n  }\n  function Sa() {\n    return Mt.fromDom(document);\n  }\n  function ka(t) {\n    return t.dom.focus();\n  }\n  function Ca(t) {\n    var e = gn(t).dom;\n    return t.dom === e.activeElement;\n  }\n  function Oa(t) {\n    return void 0 === t && (t = Sa()), vt.from(t.dom.activeElement).map(Mt.fromDom);\n  }\n  function _a(e) {\n    return Oa(gn(e)).filter(function (t) {\n      return e.dom.contains(t.dom);\n    });\n  }\n  function Ta(t, n) {\n    var o = gn(n),\n      e = Oa(o).bind(function (e) {\n        function t(t) {\n          return zt(e, t);\n        }\n        var r, _i2;\n        return t(n) ? vt.some(n) : (r = t, (_i2 = function i(t) {\n          for (var e = 0; e < t.childNodes.length; e++) {\n            var n = Mt.fromDom(t.childNodes[e]);\n            if (r(n)) return vt.some(n);\n            var o = _i2(t.childNodes[e]);\n            if (o.isSome()) return o;\n          }\n          return vt.none();\n        })(n.dom));\n      }),\n      r = t(n);\n    return e.each(function (e) {\n      Oa(o).filter(function (t) {\n        return zt(t, e);\n      }).fold(function () {\n        ka(e);\n      }, st);\n    }), r;\n  }\n  function Ea(t, e, n, o, r) {\n    function i(t) {\n      return t + \"px\";\n    }\n    return {\n      position: t,\n      left: e.map(i),\n      top: n.map(i),\n      right: o.map(i),\n      bottom: r.map(i)\n    };\n  }\n  function Da(t, e) {\n    var n;\n    me(t, _lt(_lt({}, n = e), {\n      position: vt.some(n.position)\n    }));\n  }\n  function Aa(t, e, n, o, r, i) {\n    var u = e.rect,\n      a = u.x - n,\n      c = u.y - o,\n      s = r - (a + u.width),\n      l = i - (c + u.height),\n      f = vt.some(a),\n      d = vt.some(c),\n      m = vt.some(s),\n      g = vt.some(l),\n      p = vt.none();\n    return e.direction.fold(function () {\n      return Ea(t, f, d, p, p);\n    }, function () {\n      return Ea(t, p, d, m, p);\n    }, function () {\n      return Ea(t, f, p, p, g);\n    }, function () {\n      return Ea(t, p, p, m, g);\n    }, function () {\n      return Ea(t, f, d, p, p);\n    }, function () {\n      return Ea(t, f, p, p, g);\n    }, function () {\n      return Ea(t, f, d, p, p);\n    }, function () {\n      return Ea(t, p, d, m, p);\n    });\n  }\n  function Ba(t, r) {\n    return t.fold(function () {\n      var t = r.rect;\n      return Ea(\"absolute\", vt.some(t.x), vt.some(t.y), vt.none(), vt.none());\n    }, function (t, e, n, o) {\n      return Aa(\"absolute\", r, t, e, n, o);\n    }, function (t, e, n, o) {\n      return Aa(\"fixed\", r, t, e, n, o);\n    });\n  }\n  function Ma(t, e) {\n    var n = C(Ve, e),\n      o = t.fold(n, n, function () {\n        var t = Ie();\n        return Ve(e).translate(-t.left, -t.top);\n      }),\n      r = Oe(e),\n      i = we(e);\n    return Bn(o.left, o.top, r, i);\n  }\n  rt($o(Xu().concat(Gu())));\n  var Fa = rt($o(Xu())),\n    Ia = rt(bo(\"initSize\", [mo(\"numColumns\"), mo(\"numRows\")])),\n    Ra = Vo([{\n      southeast: []\n    }, {\n      southwest: []\n    }, {\n      northeast: []\n    }, {\n      northwest: []\n    }, {\n      south: []\n    }, {\n      north: []\n    }, {\n      east: []\n    }, {\n      west: []\n    }]),\n    Na = Ra.southeast,\n    Pa = Ra.southwest,\n    Va = Ra.northeast,\n    Ha = Ra.northwest,\n    La = Ra.south,\n    za = Ra.north,\n    Ua = Ra.east,\n    ja = Ra.west,\n    Wa = function Wa(t, e, n) {\n      return Math.min(Math.max(t, e), n);\n    },\n    Ga = \"layout\",\n    Xa = function Xa(t, e, n) {\n      return na(t.x, ca(t), n.southeast(), Na(), \"southeast\", ra(t, {\n        left: 1,\n        top: 3\n      }), Ga);\n    },\n    Ya = function Ya(t, e, n) {\n      return na(ua(t, e), ca(t), n.southwest(), Pa(), \"southwest\", ra(t, {\n        right: 0,\n        top: 3\n      }), Ga);\n    },\n    qa = function qa(t, e, n) {\n      return na(t.x, aa(t, e), n.northeast(), Va(), \"northeast\", ra(t, {\n        left: 1,\n        bottom: 2\n      }), Ga);\n    },\n    Ka = function Ka(t, e, n) {\n      return na(ua(t, e), aa(t, e), n.northwest(), Ha(), \"northwest\", ra(t, {\n        right: 0,\n        bottom: 2\n      }), Ga);\n    },\n    Ja = function Ja(t, e, n) {\n      return na(ia(t, e), aa(t, e), n.north(), za(), \"north\", ra(t, {\n        bottom: 2\n      }), Ga);\n    },\n    $a = function $a(t, e, n) {\n      return na(ia(t, e), ca(t), n.south(), La(), \"south\", ra(t, {\n        top: 3\n      }), Ga);\n    },\n    Qa = Object.freeze({\n      __proto__: null,\n      events: function events(a) {\n        return nu([Cr(Fi(), function (r, t) {\n          var e,\n            i = a.channels,\n            n = Ct(i),\n            u = t,\n            o = (e = u).universal ? n : F(n, function (t) {\n              return wt(e.channels, t);\n            });\n          St(o, function (t) {\n            var e = i[t],\n              n = e.schema,\n              o = so(\"channel[\" + t + \"] data\\nReceiver: \" + Fr(r.element), n, u.data);\n            e.onReceive(r, o);\n          });\n        })]);\n      }\n    }),\n    Za = [go(\"channels\", uo(Nn.value, to([Qu(\"onReceive\"), Eo(\"schema\", Zo())])))],\n    tc = function tc(n, t, f, e, o, r, i) {\n      function u(t) {\n        return et(t, f) ? t[f]() : vt.none();\n      }\n      var a = dt(o, function (t, e) {\n          return r = f, n = function n(_n2) {\n            for (var t = [], e = 1; e < arguments.length; e++) t[e - 1] = arguments[e];\n            var o = [_n2].concat(t);\n            return _n2.config({\n              name: rt(r)\n            }).fold(function () {\n              throw new Error(\"We could not find any behaviour configuration for: \" + r + \". Using API: \" + u);\n            }, function (t) {\n              var e = Array.prototype.slice.call(o, 1);\n              return i.apply(void 0, [_n2, t.config, t.state].concat(e));\n            });\n          }, o = u = e, a = (i = t).toString(), c = a.indexOf(\")\") + 1, s = a.indexOf(\"(\"), l = a.substring(s + 1, c - 1).split(/,\\s*/), n.toFunctionAnnotation = function () {\n            return {\n              name: o,\n              parameters: bu(l.slice(0, 1).concat(l.slice(3)))\n            };\n          }, n;\n          var r, i, u, n, o, a, c, s, l;\n        }),\n        c = dt(r, Pr),\n        s = _lt(_lt(_lt({}, c), a), {\n          revoke: C(ya, f),\n          config: function config(t) {\n            var e = so(f + \"-config\", n, t);\n            return {\n              key: f,\n              value: {\n                config: e,\n                me: s,\n                configAsRaw: Rt(function () {\n                  return so(f + \"-config\", n, t);\n                }),\n                initialConfig: t,\n                state: i\n              }\n            };\n          },\n          schema: rt(t),\n          exhibit: function exhibit(t, n) {\n            return Et(u(t), tt(e, \"exhibit\"), function (t, e) {\n              return e(n, t.config, t.state);\n            }).getOrThunk(function () {\n              return zr({});\n            });\n          },\n          name: rt(f),\n          handlers: function handlers(t) {\n            return u(t).map(function (t) {\n              return tt(e, \"events\").getOr(function () {\n                return {};\n              })(t.config, t.state);\n            }).getOr({});\n          }\n        });\n      return s;\n    },\n    ec = lr,\n    nc = to([mo(\"fields\"), mo(\"name\"), Eo(\"active\", {}), Eo(\"apis\", {}), Eo(\"state\", xu), Eo(\"extra\", {})]),\n    oc = to([mo(\"branchKey\"), mo(\"branches\"), mo(\"name\"), Eo(\"active\", {}), Eo(\"apis\", {}), Eo(\"state\", xu), Eo(\"extra\", {})]),\n    rc = rt(void 0),\n    ic = xa({\n      fields: Za,\n      name: \"receiving\",\n      active: Qa\n    }),\n    uc = Object.freeze({\n      __proto__: null,\n      exhibit: function exhibit(t, e) {\n        return zr({\n          classes: [],\n          styles: e.useFixed() ? {} : {\n            position: \"relative\"\n          }\n        });\n      }\n    }),\n    ac = Vo([{\n      none: []\n    }, {\n      relative: [\"x\", \"y\", \"width\", \"height\"]\n    }, {\n      fixed: [\"x\", \"y\", \"width\", \"height\"]\n    }]),\n    cc = function cc(t, e, n) {\n      var o = kn(e, n);\n      return t.fold(rt(o), rt(o), function () {\n        var t = Ie();\n        return o.translate(-t.left, -t.top);\n      });\n    };\n  function sc(t) {\n    return ue(t, Dc);\n  }\n  function lc(t, e, n, o) {\n    var r,\n      i,\n      u,\n      a,\n      c,\n      s,\n      l,\n      f,\n      d,\n      m,\n      g,\n      p,\n      h,\n      v,\n      b,\n      y,\n      x,\n      w,\n      S,\n      k,\n      C,\n      O,\n      _,\n      T,\n      E,\n      D,\n      A,\n      B,\n      M,\n      F,\n      I,\n      R,\n      N,\n      P,\n      V,\n      H,\n      L,\n      z,\n      U,\n      j = t.bubble,\n      W = j.offset,\n      G = (N = o, P = t.restriction, V = W, H = ot(\"left\", N.x), L = ot(\"top\", N.y), z = ot(\"right\", N.right), U = ot(\"bottom\", N.bottom), Bn(H, L, z - H, U - L)),\n      X = t.x + W.left,\n      Y = t.y + W.top,\n      q = Bn(X, Y, e, n),\n      K = (r = G.x, i = G.y, u = G.right, a = G.bottom, c = q.x, s = q.y, l = q.right, f = q.bottom, d = q.width, m = q.height, {\n        originInBounds: r <= c && c <= u && i <= s && s <= a,\n        sizeInBounds: l <= u && r <= l && f <= a && i <= f,\n        visibleW: Math.min(d, r <= c ? u - c : l - r),\n        visibleH: Math.min(m, i <= s ? a - s : f - i)\n      }),\n      J = K.visibleW,\n      $ = K.visibleH,\n      Q = K.originInBounds && K.sizeInBounds,\n      Z = Q ? q : (g = G.x, p = G.y, h = G.right, v = G.bottom, b = q.x, y = q.y, x = q.width, w = q.height, S = Math.max(g, h - x), k = Math.max(p, v - w), C = Wa(b, g, S), O = Wa(y, p, k), _ = Math.min(C + x, h) - C, T = Math.min(O + w, v) - O, Bn(C, O, _, T)),\n      tt = 0 < Z.width && 0 < Z.height,\n      et = (E = t.direction, B = rt((D = Z).bottom - (A = o).y), M = rt(A.bottom - D.y), F = E.fold(M, M, B, B, M, B, M, M), I = rt(D.right - A.x), R = rt(A.right - D.x), {\n        maxWidth: E.fold(R, I, R, I, R, R, R, I),\n        maxHeight: F\n      }),\n      nt = {\n        rect: Z,\n        maxHeight: et.maxHeight,\n        maxWidth: et.maxWidth,\n        direction: t.direction,\n        placement: t.placement,\n        classes: {\n          on: j.classesOn,\n          off: j.classesOff\n        },\n        layout: t.label,\n        testY: Y\n      };\n    function ot(r, i) {\n      return P[r].map(function (t) {\n        var e = \"top\" === r || \"bottom\" === r,\n          n = e ? V.top : V.left,\n          o = (\"left\" === r || \"top\" === r ? Math.max : Math.min)(t, i) + n;\n        return e ? Wa(o, N.y, N.bottom) : Wa(o, N.x, N.right);\n      }).getOr(i);\n    }\n    return Q || t.alwaysFit ? Ac.fit(nt) : Ac.nofit(nt, J, $, tt);\n  }\n  function fc(t) {\n    function e() {\n      return n.get().each(t);\n    }\n    var n = Po(vt.none());\n    return {\n      clear: function clear() {\n        e(), n.set(vt.none());\n      },\n      isSet: function isSet() {\n        return n.get().isSome();\n      },\n      get: function get() {\n        return n.get();\n      },\n      set: function set(t) {\n        e(), n.set(vt.some(t));\n      }\n    };\n  }\n  function dc() {\n    return fc(function (t) {\n      return t.destroy();\n    });\n  }\n  function mc() {\n    return fc(function (t) {\n      return t.unbind();\n    });\n  }\n  function gc() {\n    var e = fc(st);\n    return _lt(_lt({}, e), {\n      on: function on(t) {\n        return e.get().each(t);\n      }\n    });\n  }\n  function pc(t, e, n) {\n    return Te(t, e, Bc, n, !1);\n  }\n  function hc(t, e, n) {\n    return Te(t, e, Bc, n, !0);\n  }\n  function vc(o, n) {\n    function r(t) {\n      var e,\n        n = null !== (e = t.raw.pseudoElement) && void 0 !== e ? e : \"\";\n      return zt(t.target, o) && !at(n) && wt(Fc, t.raw.propertyName);\n    }\n    function t(t) {\n      var e;\n      (g(t) || r(t)) && (a.clear(), c.clear(), !g(e = null == t ? void 0 : t.raw.type) && e !== _i() || (clearTimeout(i), ce(o, Ic), $r(o, n.classes)));\n    }\n    function e() {\n      a.set(pc(o, _i(), t)), c.set(pc(o, Oi(), t));\n    }\n    var i,\n      u,\n      a = mc(),\n      c = mc();\n    \"ontransitionstart\" in o.dom ? u = pc(o, Ti(), function (t) {\n      r(t) && (u.unbind(), e());\n    }) : e();\n    var s,\n      l,\n      f = (s = o, l = d(\"transition-delay\"), R(d(\"transition-duration\"), function (t, e, n) {\n        var o = m(l[n]) + m(e);\n        return Math.max(t, o);\n      }, 0));\n    function d(t) {\n      var e = ge(s, t);\n      return F(y(e) ? e.split(/\\s*,\\s*/) : [], at);\n    }\n    function m(t) {\n      if (y(t) && /^[\\d.]+/.test(t)) {\n        var e = parseFloat(t);\n        return At(t, \"ms\") ? e : 1e3 * e;\n      }\n      return 0;\n    }\n    requestAnimationFrame(function () {\n      i = setTimeout(t, f + 17), oe(o, Ic, i);\n    });\n  }\n  function bc(t, e, n, o, r, i) {\n    var u,\n      a,\n      c,\n      s,\n      l,\n      f,\n      d,\n      m,\n      g,\n      p = (u = o, a = r, i.exists(function (t) {\n        var e = u.mode;\n        return \"all\" === e || t[e] !== a[e];\n      }));\n    function h(t) {\n      return parseFloat(t).toFixed(3);\n    }\n    p || (g = t, L(o.classes, function (t) {\n      return Kr(g, t);\n    })) ? (fe(t, \"position\", n.position), c = Ma(e, t), s = Ba(e, _lt(_lt({}, r), {\n      rect: c\n    })), l = j(Fc, function (t) {\n      return s[t];\n    }), m = n, Q(l, function (t, e) {\n      var n,\n        o,\n        r,\n        i = m[e].map(h),\n        u = t.map(h);\n      return !Et(n = i, o = u, r = void 0 === r ? v : r).getOr(n.isNone() && o.isNone());\n    }).isSome() && (me(t, l), p && (Jr(f = t, (d = o).classes), ue(f, Ic).each(function (t) {\n      clearTimeout(parseInt(t, 10)), ce(f, Ic);\n    }), vc(f, d)), be(t))) : $r(t, o.classes);\n  }\n  function yc(t, e, n, o) {\n    ve(e, \"max-height\"), ve(e, \"max-width\");\n    var r,\n      s,\n      i,\n      l,\n      f,\n      d,\n      m,\n      g,\n      p,\n      u = {\n        width: Oe(r = e),\n        height: we(r)\n      };\n    return s = e, i = o.preference, l = t, f = u, d = n, m = o.bounds, g = f.width, p = f.height, R(i, function (t, e) {\n      var n = C(a, e);\n      return t.fold(rt(t), n);\n    }, Ac.nofit({\n      rect: l,\n      maxHeight: f.height,\n      maxWidth: f.width,\n      direction: Na(),\n      placement: \"southeast\",\n      classes: {\n        on: [],\n        off: []\n      },\n      layout: \"none\",\n      testY: l.y\n    }, -1, -1, !1)).fold(h, h);\n    function a(t, r, i, u, a) {\n      var c = lc(t(l, f, d, s, m), g, p, m);\n      return c.fold(rt(c), function (t, e, n, o) {\n        return (a === o ? u < n || i < e : !a && o) ? c : Ac.nofit(r, i, u, a);\n      });\n    }\n  }\n  function xc(t, e) {\n    var n = t,\n      o = Math.floor(e);\n    fe(n, \"max-height\", wn.max(n, o, [\"margin-top\", \"border-top-width\", \"padding-top\", \"padding-bottom\", \"border-bottom-width\", \"margin-bottom\"]) + \"px\");\n  }\n  function wc(t, e, n) {\n    return void 0 === t[e] ? n : t[e];\n  }\n  function Sc(t, e, n, o) {\n    function r(t) {\n      return tt(n, t).getOr([]);\n    }\n    function i(t, e, n) {\n      var o = U(Vc, n);\n      return {\n        offset: kn(t, e),\n        classesOn: H(n, r),\n        classesOff: H(o, r)\n      };\n    }\n    var u = t * (o = void 0 === o ? 1 : o),\n      a = e * o;\n    return {\n      southeast: function southeast() {\n        return i(-t, e, [\"top\", \"alignLeft\"]);\n      },\n      southwest: function southwest() {\n        return i(t, e, [\"top\", \"alignRight\"]);\n      },\n      south: function south() {\n        return i(-t / 2, e, [\"top\", \"alignCentre\"]);\n      },\n      northeast: function northeast() {\n        return i(-t, -e, [\"bottom\", \"alignLeft\"]);\n      },\n      northwest: function northwest() {\n        return i(t, -e, [\"bottom\", \"alignRight\"]);\n      },\n      north: function north() {\n        return i(-t / 2, -e, [\"bottom\", \"alignCentre\"]);\n      },\n      east: function east() {\n        return i(t, -e / 2, [\"valignCentre\", \"left\"]);\n      },\n      west: function west() {\n        return i(-t, -e / 2, [\"valignCentre\", \"right\"]);\n      },\n      insetNortheast: function insetNortheast() {\n        return i(u, a, [\"top\", \"alignLeft\", \"inset\"]);\n      },\n      insetNorthwest: function insetNorthwest() {\n        return i(-u, a, [\"top\", \"alignRight\", \"inset\"]);\n      },\n      insetNorth: function insetNorth() {\n        return i(-u / 2, a, [\"top\", \"alignCentre\", \"inset\"]);\n      },\n      insetSoutheast: function insetSoutheast() {\n        return i(u, -a, [\"bottom\", \"alignLeft\", \"inset\"]);\n      },\n      insetSouthwest: function insetSouthwest() {\n        return i(-u, -a, [\"bottom\", \"alignRight\", \"inset\"]);\n      },\n      insetSouth: function insetSouth() {\n        return i(-u / 2, -a, [\"bottom\", \"alignCentre\", \"inset\"]);\n      },\n      insetEast: function insetEast() {\n        return i(-u, -a / 2, [\"valignCentre\", \"right\", \"inset\"]);\n      },\n      insetWest: function insetWest() {\n        return i(u, -a / 2, [\"valignCentre\", \"left\", \"inset\"]);\n      }\n    };\n  }\n  function kc() {\n    return Sc(0, 0, {});\n  }\n  function Cc(e, n) {\n    return function (t) {\n      return \"rtl\" === Lc(t) ? n : e;\n    };\n  }\n  ac.none;\n  var Oc,\n    _c,\n    Tc = ac.relative,\n    Ec = ac.fixed,\n    Dc = \"data-alloy-placement\",\n    Ac = Vo([{\n      fit: [\"reposition\"]\n    }, {\n      nofit: [\"reposition\", \"visibleW\", \"visibleH\", \"isVisible\"]\n    }]),\n    Bc = D,\n    Mc = _e,\n    Fc = [\"top\", \"bottom\", \"right\", \"left\"],\n    Ic = \"data-alloy-transition-timer\",\n    Rc = rt(function (t, e) {\n      xc(t, e), de(t, {\n        \"overflow-x\": \"hidden\",\n        \"overflow-y\": \"auto\"\n      });\n    }),\n    Nc = rt(function (t, e) {\n      xc(t, e);\n    }),\n    Pc = function Pc(t, e, n, o) {\n      var r,\n        i,\n        u,\n        a,\n        c = yc(t, e, n, o),\n        s = e,\n        l = c,\n        f = Ba((r = o).origin, l);\n      return r.transition.each(function (t) {\n        bc(s, r.origin, f, t, l, r.lastPlacement);\n      }), Da(s, f), a = c.placement, oe(e, Dc, a), $r(i = e, (u = c.classes).off), Jr(i, u.on), (0, o.maxHeightFunction)(e, c.maxHeight), (0, o.maxWidthFunction)(e, c.maxWidth), {\n        layout: c.layout,\n        placement: c.placement\n      };\n    },\n    Vc = [\"valignCentre\", \"alignLeft\", \"alignRight\", \"alignCentre\", \"top\", \"bottom\", \"left\", \"right\", \"inset\"],\n    Hc = h,\n    Lc = function Lc(t) {\n      return \"rtl\" === ge(t, \"direction\") ? \"rtl\" : \"ltr\";\n    };\n  function zc(t) {\n    return Mu(t, function (t) {\n      return Ge(t) && ie(t, \"data-alloy-vertical-dir\") === Oc.BottomToTop;\n    });\n  }\n  function Uc() {\n    return To(\"layouts\", [mo(\"onLtr\"), mo(\"onRtl\"), wo(\"onBottomLtr\"), wo(\"onBottomRtl\")]);\n  }\n  function jc(e, t, n, o, r, i, u) {\n    var a = u.map(zc).getOr(!1),\n      c = t.layouts.map(function (t) {\n        return t.onLtr(e);\n      }),\n      s = t.layouts.map(function (t) {\n        return t.onRtl(e);\n      });\n    return Cc(a ? t.layouts.bind(function (t) {\n      return t.onBottomLtr.map(function (t) {\n        return t(e);\n      });\n    }).or(c).getOr(r) : c.getOr(n), a ? t.layouts.bind(function (t) {\n      return t.onBottomRtl.map(function (t) {\n        return t(e);\n      });\n    }).or(s).getOr(i) : s.getOr(o))(e);\n  }\n  function Wc(t) {\n    return t.fold(h, function (t, e, n) {\n      return t.translate(-e, -n);\n    });\n  }\n  function Gc(t) {\n    return t.fold(h, h);\n  }\n  function Xc(t) {\n    return R(t, function (t, e) {\n      return t.translate(e.left, e.top);\n    }, kn(0, 0));\n  }\n  function Yc(t) {\n    return Xc(B(t, Gc));\n  }\n  function qc(t, e, n) {\n    var o,\n      r,\n      i = Ie(jt(t.element)),\n      u = (o = t, r = Xt(n.root).dom, vt.from(r.frameElement).map(Mt.fromDom).filter(function (t) {\n        return zt(jt(t), jt(o.element));\n      }).map(ke).getOr(i));\n    return as(u, i.left, i.top);\n  }\n  function Kc(t, e, n, o) {\n    var r = us(kn(t, e));\n    return vt.some({\n      point: r,\n      width: n,\n      height: o\n    });\n  }\n  function Jc(t, a, c, s, l) {\n    return t.map(function (t) {\n      var e = [a, t.point],\n        n = s.fold(function () {\n          return Yc(e);\n        }, function () {\n          return Yc(e);\n        }, function () {\n          return Xc(B(e, Wc));\n        }),\n        o = {\n          x: n.left,\n          y: n.top,\n          width: t.width,\n          height: t.height\n        },\n        r = (c.showAbove ? ga : ha)(),\n        i = (c.showAbove ? pa : va)(),\n        u = jc(l, c, r, i, r, i, vt.none());\n      return Hc({\n        anchorBox: o,\n        bubble: c.bubble.getOr(kc()),\n        overrides: c.overrides,\n        layouts: u,\n        placer: vt.none()\n      });\n    });\n  }\n  function $c(t, e, n) {\n    var o,\n      r = t.document.createRange(),\n      i = r;\n    return e.fold(function (t) {\n      i.setStartBefore(t.dom);\n    }, function (t, e) {\n      i.setStart(t.dom, e);\n    }, function (t) {\n      i.setStartAfter(t.dom);\n    }), o = r, n.fold(function (t) {\n      o.setEndBefore(t.dom);\n    }, function (t, e) {\n      o.setEnd(t.dom, e);\n    }, function (t) {\n      o.setEndAfter(t.dom);\n    }), r;\n  }\n  function Qc(t, e, n, o, r) {\n    var i = t.document.createRange();\n    return i.setStart(e.dom, n), i.setEnd(o.dom, r), i;\n  }\n  function Zc(t) {\n    return {\n      left: t.left,\n      top: t.top,\n      right: t.right,\n      bottom: t.bottom,\n      width: t.width,\n      height: t.height\n    };\n  }\n  function ts(t, e, n) {\n    return e(Mt.fromDom(n.startContainer), n.startOffset, Mt.fromDom(n.endContainer), n.endOffset);\n  }\n  function es(i, t) {\n    return r = i, o = t.match({\n      domRange: function domRange(t) {\n        return {\n          ltr: rt(t),\n          rtl: vt.none\n        };\n      },\n      relative: function relative(t, e) {\n        return {\n          ltr: Rt(function () {\n            return $c(r, t, e);\n          }),\n          rtl: Rt(function () {\n            return vt.some($c(r, e, t));\n          })\n        };\n      },\n      exact: function exact(t, e, n, o) {\n        return {\n          ltr: Rt(function () {\n            return Qc(r, t, e, n, o);\n          }),\n          rtl: Rt(function () {\n            return vt.some(Qc(r, n, o, t, e));\n          })\n        };\n      }\n    }), ((n = (e = o).ltr()).collapsed ? e.rtl().filter(function (t) {\n      return !1 === t.collapsed;\n    }).map(function (t) {\n      return gs.rtl(Mt.fromDom(t.endContainer), t.endOffset, Mt.fromDom(t.startContainer), t.startOffset);\n    }).getOrThunk(function () {\n      return ts(0, gs.ltr, n);\n    }) : ts(0, gs.ltr, n)).match({\n      ltr: function ltr(t, e, n, o) {\n        var r = i.document.createRange();\n        return r.setStart(t.dom, e), r.setEnd(n.dom, o), r;\n      },\n      rtl: function rtl(t, e, n, o) {\n        var r = i.document.createRange();\n        return r.setStart(n.dom, o), r.setEnd(t.dom, e), r;\n      }\n    });\n    var r, e, n, o;\n  }\n  (Oc = Oc || {}).TopToBottom = \"toptobottom\", Oc.BottomToTop = \"bottomtotop\";\n  var ns = \"data-alloy-vertical-dir\",\n    os = [mo(\"hotspot\"), wo(\"bubble\"), Eo(\"overrides\", {}), Uc(), ta(\"placement\", function (t, e, n) {\n      var o = Ma(n, e.hotspot.element),\n        r = jc(t.element, e, ha(), va(), ga(), pa(), vt.some(e.hotspot.element));\n      return vt.some(Hc({\n        anchorBox: o,\n        bubble: e.bubble.getOr(kc()),\n        overrides: e.overrides,\n        layouts: r,\n        placer: vt.none()\n      }));\n    })],\n    rs = [mo(\"x\"), mo(\"y\"), Eo(\"height\", 0), Eo(\"width\", 0), Eo(\"bubble\", kc()), Eo(\"overrides\", {}), Uc(), ta(\"placement\", function (t, e, n) {\n      var o = cc(n, e.x, e.y),\n        r = Bn(o.left, o.top, e.width, e.height),\n        i = jc(t.element, e, da(), ma(), da(), ma(), vt.none());\n      return vt.some(Hc({\n        anchorBox: r,\n        bubble: e.bubble,\n        overrides: e.overrides,\n        layouts: i,\n        placer: vt.none()\n      }));\n    })],\n    is = Vo([{\n      screen: [\"point\"]\n    }, {\n      absolute: [\"point\", \"scrollLeft\", \"scrollTop\"]\n    }]),\n    us = is.screen,\n    as = is.absolute,\n    cs = [mo(\"node\"), mo(\"root\"), wo(\"bubble\"), Uc(), Eo(\"overrides\", {}), Eo(\"showAbove\", !1), ta(\"placement\", function (r, i, u) {\n      var a = qc(r, 0, i);\n      return i.node.filter(vn).bind(function (t) {\n        var e = t.dom.getBoundingClientRect(),\n          n = Kc(e.left, e.top, e.width, e.height),\n          o = i.node.getOr(r.element);\n        return Jc(n, a, i, u, o);\n      });\n    })],\n    ss = function ss(t, e, n, o) {\n      return {\n        start: t,\n        soffset: e,\n        finish: n,\n        foffset: o\n      };\n    },\n    ls = Vo([{\n      before: [\"element\"]\n    }, {\n      on: [\"element\", \"offset\"]\n    }, {\n      after: [\"element\"]\n    }]),\n    fs = (ls.before, ls.on, ls.after, function (t) {\n      return t.fold(h, h, h);\n    }),\n    ds = Vo([{\n      domRange: [\"rng\"]\n    }, {\n      relative: [\"startSitu\", \"finishSitu\"]\n    }, {\n      exact: [\"start\", \"soffset\", \"finish\", \"foffset\"]\n    }]),\n    ms = {\n      domRange: ds.domRange,\n      relative: ds.relative,\n      exact: ds.exact,\n      exactFromRange: function exactFromRange(t) {\n        return ds.exact(t.start, t.soffset, t.finish, t.foffset);\n      },\n      getWin: function getWin(t) {\n        return Xt(t.match({\n          domRange: function domRange(t) {\n            return Mt.fromDom(t.startContainer);\n          },\n          relative: function relative(t, e) {\n            return fs(t);\n          },\n          exact: function exact(t, e, n, o) {\n            return t;\n          }\n        }));\n      },\n      range: ss\n    },\n    gs = Vo([{\n      ltr: [\"start\", \"soffset\", \"finish\", \"foffset\"]\n    }, {\n      rtl: [\"start\", \"soffset\", \"finish\", \"foffset\"]\n    }]);\n  function ps(t) {\n    return ef.getOption(t);\n  }\n  function hs(t) {\n    return ps(t).filter(function (t) {\n      return 0 !== t.trim().length || -1 < t.indexOf(\"\\xa0\");\n    }).isSome() || wt(nf, Ft(t));\n  }\n  function vs(t, e) {\n    return Lt(n = void 0 === t ? document : t.dom) ? [] : B(n.querySelectorAll(e), Mt.fromDom);\n    var n;\n  }\n  function bs(t) {\n    if (0 < t.rangeCount) {\n      var e = t.getRangeAt(0),\n        n = t.getRangeAt(t.rangeCount - 1);\n      return vt.some(ss(Mt.fromDom(e.startContainer), e.startOffset, Mt.fromDom(n.endContainer), n.endOffset));\n    }\n    return vt.none();\n  }\n  function ys(t) {\n    if (null === t.anchorNode || null === t.focusNode) return bs(t);\n    var e,\n      n,\n      o,\n      r,\n      i,\n      u,\n      a,\n      c,\n      s,\n      l,\n      f,\n      d = Mt.fromDom(t.anchorNode),\n      m = Mt.fromDom(t.focusNode);\n    return e = d, n = t.anchorOffset, o = m, r = t.focusOffset, u = n, a = o, c = r, (s = jt(i = e).dom.createRange()).setStart(i.dom, u), s.setEnd(a.dom, c), l = s, f = zt(e, o) && n === r, l.collapsed && !f ? vt.some(ss(d, t.anchorOffset, m, t.focusOffset)) : bs(t);\n  }\n  function xs(t, e) {\n    var n,\n      o,\n      r = (n = es(t, e)).getClientRects();\n    return 0 < (o = 0 < r.length ? r[0] : n.getBoundingClientRect()).width || 0 < o.height ? vt.some(o).map(Zc) : vt.none();\n  }\n  function ws(t, e) {\n    return {\n      element: t,\n      offset: e\n    };\n  }\n  function Ss(t, e) {\n    return (Xe(t) ? ws : function (t, e) {\n      var n = Kt(t);\n      if (0 === n.length) return ws(t, e);\n      if (e < n.length) return ws(n[e], 0);\n      var o = n[n.length - 1];\n      return ws(o, (Xe(o) ? ef.get(o) : Kt(o)).length);\n    })(t, e);\n  }\n  function ks(t, e) {\n    return e.getSelection.getOrThunk(function () {\n      return function () {\n        return vt.from(t.getSelection()).filter(function (t) {\n          return 0 < t.rangeCount;\n        }).bind(ys);\n      };\n    })().map(function (t) {\n      var e = Ss(t.start, t.soffset),\n        n = Ss(t.finish, t.foffset);\n      return ms.range(e.element, e.offset, n.element, n.offset);\n    });\n  }\n  function Cs(t) {\n    return t.x + t.width;\n  }\n  function Os(t, e) {\n    return t.x - e.width;\n  }\n  function _s(t, e) {\n    return t.y - e.height + t.height;\n  }\n  function Ts(t, e, n) {\n    return na(Cs(t), t.y, n.southeast(), Na(), \"southeast\", ra(t, {\n      left: 0,\n      top: 2\n    }), rf);\n  }\n  function Es(t, e, n) {\n    return na(Os(t, e), t.y, n.southwest(), Pa(), \"southwest\", ra(t, {\n      right: 1,\n      top: 2\n    }), rf);\n  }\n  function Ds(t, e, n) {\n    return na(Cs(t), _s(t, e), n.northeast(), Va(), \"northeast\", ra(t, {\n      left: 0,\n      bottom: 3\n    }), rf);\n  }\n  function As(t, e, n) {\n    return na(Os(t, e), _s(t, e), n.northwest(), Ha(), \"northwest\", ra(t, {\n      right: 1,\n      bottom: 3\n    }), rf);\n  }\n  function Bs() {\n    return [Ts, Es, Ds, As];\n  }\n  function Ms() {\n    return [Es, Ts, As, Ds];\n  }\n  function Fs(t, e, n, o, r, i, u) {\n    var a,\n      c,\n      s,\n      l,\n      f,\n      d,\n      m,\n      g,\n      p,\n      h,\n      v,\n      b,\n      y,\n      x,\n      w = {\n        anchorBox: n.anchorBox,\n        origin: e\n      };\n    return a = w, c = r.element, s = n.bubble, l = n.layouts, f = i, d = o, m = n.overrides, g = u, h = wc(m, \"maxHeightFunction\", Rc()), v = wc(m, \"maxWidthFunction\", st), b = a.anchorBox, y = a.origin, x = {\n      bounds: (p = y, d.fold(function () {\n        return p.fold(Fn, Fn, Bn);\n      }, function (n) {\n        return p.fold(n, n, function () {\n          var t = n(),\n            e = cc(p, t.x, t.y);\n          return Bn(e.left, e.top, t.width, t.height);\n        });\n      })),\n      origin: y,\n      preference: l,\n      maxHeightFunction: h,\n      maxWidthFunction: v,\n      lastPlacement: f,\n      transition: g\n    }, Pc(b, c, s, x);\n  }\n  function Is(t, e) {\n    Tn(t.element, e.element);\n  }\n  function Rs(e, t) {\n    var n,\n      o = e.components();\n    St((n = e).components(), function (t) {\n      return En(t.element);\n    }), Me(n.element), n.syncComponents();\n    var r = U(o, t);\n    St(r, function (t) {\n      df(t), e.getSystem().removeFromWorld(t);\n    }), St(t, function (t) {\n      t.getSystem().isConnected() ? Is(e, t) : (e.getSystem().addToWorld(t), Is(e, t), vn(e.element) && mf(t)), e.syncComponents();\n    });\n  }\n  function Ns(t, e) {\n    gf(t, e, Tn);\n  }\n  function Ps(t) {\n    df(t), En(t.element), t.getSystem().removeFromWorld(t);\n  }\n  function Vs(e) {\n    var t = Yt(e.element).bind(function (t) {\n      return e.getSystem().getByDom(t).toOptional();\n    });\n    Ps(e), t.each(function (t) {\n      t.syncComponents();\n    });\n  }\n  function Hs(t) {\n    var e = t.components();\n    St(e, Ps), Me(t.element), t.syncComponents();\n  }\n  function Ls(t, e) {\n    pf(t, e, Tn);\n  }\n  function zs(e) {\n    var t = Kt(e.element);\n    St(t, function (t) {\n      e.getByDom(t).each(df);\n    }), En(e.element);\n  }\n  function Us(e, t, n, o) {\n    n.get().each(function (t) {\n      Hs(e);\n    }), Ns(t.getAttachPoint(e), e);\n    var r = e.getSystem().build(o);\n    return Ns(e, r), n.set(r), r;\n  }\n  function js(t, e, n, o) {\n    var r = Us(t, e, n, o);\n    return e.onOpen(t, r), r;\n  }\n  function Ws(e, n, o) {\n    o.get().each(function (t) {\n      Hs(e), Vs(e), n.onClose(e, t), o.clear();\n    });\n  }\n  function Gs(t, e, n) {\n    return n.isOpen();\n  }\n  function Xs(t) {\n    var n = so(\"Dismissal\", Sf, t),\n      e = {};\n    return e[yf()] = {\n      schema: to([mo(\"target\")]),\n      onReceive: function onReceive(e, t) {\n        bf.isOpen(e) && (bf.isPartOf(e, t.target) || n.isExtraPart(e, t.target) || n.fireEventInstead.fold(function () {\n          return bf.close(e);\n        }, function (t) {\n          return vr(e, t.event);\n        }));\n      }\n    }, e;\n  }\n  function Ys(t) {\n    var n = so(\"Reposition\", kf, t),\n      e = {};\n    return e[xf()] = {\n      onReceive: function onReceive(e) {\n        bf.isOpen(e) && n.fireEventInstead.fold(function () {\n          return n.doReposition(e);\n        }, function (t) {\n          return vr(e, t.event);\n        });\n      }\n    }, e;\n  }\n  function qs(t, e, n) {\n    e.store.manager.onLoad(t, e, n);\n  }\n  function Ks(t, e, n) {\n    e.store.manager.onUnload(t, e, n);\n  }\n  function Js() {\n    var t = Po(null);\n    return wu({\n      set: t.set,\n      get: t.get,\n      isNotSet: function isNotSet() {\n        return null === t.get();\n      },\n      clear: function clear() {\n        t.set(null);\n      },\n      readState: function readState() {\n        return {\n          mode: \"memory\",\n          value: t.get()\n        };\n      }\n    });\n  }\n  function $s() {\n    var i = Po({}),\n      u = Po({});\n    return wu({\n      readState: function readState() {\n        return {\n          mode: \"dataset\",\n          dataByValue: i.get(),\n          dataByText: u.get()\n        };\n      },\n      lookup: function lookup(t) {\n        return tt(i.get(), t).orThunk(function () {\n          return tt(u.get(), t);\n        });\n      },\n      update: function update(t) {\n        var e = i.get(),\n          n = u.get(),\n          o = {},\n          r = {};\n        St(t, function (e) {\n          tt(o[e.value] = e, \"meta\").each(function (t) {\n            tt(t, \"text\").each(function (t) {\n              r[t] = e;\n            });\n          });\n        }), i.set(_lt(_lt({}, e), o)), u.set(_lt(_lt({}, n), r));\n      },\n      clear: function clear() {\n        i.set({}), u.set({});\n      }\n    });\n  }\n  function Qs(t, e, n, o) {\n    var r = e.store;\n    n.update([o]), r.setValue(t, o), e.onSetValue(t, o);\n  }\n  function Zs(o, t) {\n    return No(o, {}, B(t, function (t) {\n      return e = t.name(), n = \"Cannot configure \" + t.name() + \" for \" + o, ar(e, e, Xn(), Jn(function (t) {\n        return zo(\"The field: \" + e + \" is forbidden. \" + n);\n      }));\n      var e, n;\n    }).concat([cr(\"dump\", h)]));\n  }\n  function tl(t) {\n    return t.dump;\n  }\n  function el(t, e) {\n    return _lt(_lt({}, ec(e)), t.dump);\n  }\n  function nl(t) {\n    return Tt(t, \"uiType\");\n  }\n  function ol(t) {\n    return t.fold(vt.some, vt.none, vt.some, vt.some);\n  }\n  function rl(t) {\n    function e(t) {\n      return t.name;\n    }\n    return t.fold(e, e, e, e);\n  }\n  function il(n, o) {\n    return function (t) {\n      var e = so(\"Converting part type\", o, t);\n      return n(e);\n    };\n  }\n  function ul(t, e, n, o) {\n    return Yo(e.defaults(t, n, o), n, {\n      uid: t.partUids[e.name]\n    }, e.overrides(t, n, o));\n  }\n  function al(r, t) {\n    var e = {};\n    return St(t, function (t) {\n      ol(t).each(function (n) {\n        var o = nd(r, n.pname);\n        e[n.name] = function (t) {\n          var e = so(\"Part: \" + n.name + \" in \" + r, $o(n.schema), t);\n          return _lt(_lt({}, o), {\n            config: t,\n            validated: e\n          });\n        };\n      });\n    }), e;\n  }\n  function cl(t, e, n) {\n    return {\n      uiType: Pf(),\n      owner: t,\n      name: e,\n      config: n,\n      validated: {}\n    };\n  }\n  function sl(t) {\n    return H(t, function (t) {\n      return t.fold(vt.none, vt.some, vt.none, vt.none).map(function (t) {\n        return bo(t.name, t.schema.concat([ea(td())]));\n      }).toArray();\n    });\n  }\n  function ll(t) {\n    return B(t, rl);\n  }\n  function fl(t, e, n) {\n    return o = e, r = {}, i = {}, St(n, function (t) {\n      t.fold(function (o) {\n        r[o.pname] = Rf(!0, function (t, e, n) {\n          return o.factory.sketch(ul(t, o, e, n));\n        });\n      }, function (t) {\n        var e = o.parts[t.name];\n        i[t.name] = rt(t.factory.sketch(ul(o, t, e[td()]), e));\n      }, function (o) {\n        r[o.pname] = Rf(!1, function (t, e, n) {\n          return o.factory.sketch(ul(t, o, e, n));\n        });\n      }, function (o) {\n        r[o.pname] = Nf(!0, function (e, t, n) {\n          return B(e[o.name], function (t) {\n            return o.factory.sketch(Yo(o.defaults(e, t, n), t, o.overrides(e, t)));\n          });\n        });\n      });\n    }), {\n      internals: rt(r),\n      externals: rt(i)\n    };\n    var o, r, i;\n  }\n  function dl(t, e, n) {\n    return o = vt.some(t), i = (r = e).components, s = dt(n, function (t, e) {\n      return o = t, r = !1, {\n        name: rt(n = e),\n        required: function required() {\n          return o.fold(function (t, e) {\n            return t;\n          }, function (t, e) {\n            return t;\n          });\n        },\n        used: function used() {\n          return r;\n        },\n        replace: function replace() {\n          if (r) throw new Error(\"Trying to use the same placeholder more than once: \" + n);\n          return r = !0, o;\n        }\n      };\n      var n, o, r;\n    }), u = o, a = r, c = s, l = H(i, function (t) {\n      return If(u, a, t, c);\n    }), J(s, function (t) {\n      if (!1 === t.used() && t.required()) throw new Error(\"Placeholder: \" + t.name() + \" was not found in components list\\nNamespace: \" + o.getOr(\"none\") + \"\\nComponents: \" + JSON.stringify(r.components, null, 2));\n    }), l;\n    var o, r, i, u, a, c, s, l;\n  }\n  function ml(t, e, n) {\n    var o = e.partUids[n];\n    return t.getSystem().getByUid(o).toOptional();\n  }\n  function gl(t, e, n) {\n    return ml(t, e, n).getOrDie(\"Could not find part: \" + n);\n  }\n  function pl(t, e, n) {\n    var o = {},\n      r = e.partUids,\n      i = t.getSystem();\n    return St(n, function (t) {\n      o[t] = rt(i.getByUid(r[t]));\n    }), o;\n  }\n  function hl(t, e) {\n    var n = t.getSystem();\n    return dt(e.partUids, function (t, e) {\n      return rt(n.getByUid(t));\n    });\n  }\n  function vl(t) {\n    return Ct(t.partUids);\n  }\n  function bl(t, e, n) {\n    var o = {},\n      r = e.partUids,\n      i = t.getSystem();\n    return St(n, function (t) {\n      o[t] = rt(i.getByUid(r[t]).getOrDie());\n    }), o;\n  }\n  function yl(e, t) {\n    return lr(B(ll(t), function (t) {\n      return {\n        key: t,\n        value: e + \"-\" + t\n      };\n    }));\n  }\n  function xl(e) {\n    return ar(\"partUids\", \"partUids\", Yn(function (t) {\n      return yl(t.uid, e);\n    }), Zo());\n  }\n  function wl(t, e, n, o, r) {\n    var i;\n    return so(t + \" [SpecSchema]\", to((i = r, (0 < o.length ? [bo(\"parts\", o)] : []).concat([mo(\"uid\"), Eo(\"dom\", {}), Eo(\"components\", []), ea(\"originalSpec\"), Eo(\"debug.sketcher\", {})]).concat(i)).concat(e)), n);\n  }\n  function Sl(t, e, n, o, r) {\n    var i = rd(r),\n      u = wl(t, e, i, sl(n), [xl(n)]),\n      a = fl(0, u, n);\n    return o(u, dl(t, u, a.internals()), i, a.externals());\n  }\n  function kl(t) {\n    var r = so(\"Sketcher for \" + t.name, id, t),\n      e = dt(r.apis, Hr),\n      n = dt(r.extraApis, Pr);\n    return _lt(_lt({\n      name: r.name,\n      configFields: r.configFields,\n      sketch: function sketch(t) {\n        return e = r.name, n = r.configFields, (0, r.factory)(wl(e, n, o = rd(t), [], []), o);\n        var e, n, o;\n      }\n    }, e), n);\n  }\n  function Cl(t) {\n    var e = so(\"Sketcher for \" + t.name, ud, t),\n      n = al(e.name, e.partFields),\n      o = dt(e.apis, Hr),\n      r = dt(e.extraApis, Pr);\n    return _lt(_lt({\n      name: e.name,\n      partFields: e.partFields,\n      configFields: e.configFields,\n      sketch: function sketch(t) {\n        return Sl(e.name, e.configFields, e.partFields, e.factory, t);\n      },\n      parts: n\n    }, o), r);\n  }\n  function Ol(t) {\n    return \"input\" === Ft(t) && \"radio\" !== ie(t, \"type\") || \"textarea\" === Ft(t);\n  }\n  function _l(t, e, n) {\n    (e.disabled() ? ld : fd)(t, e);\n  }\n  function Tl(t, e) {\n    return !0 === e.useNative && wt(sd, Ft(t.element));\n  }\n  function El(t, e) {\n    return Tl(t, e) ? ae(t.element, \"disabled\") : \"true\" === ie(t.element, \"aria-disabled\");\n  }\n  function Dl(n, o, t, r) {\n    var e = vs(n.element, \".\" + o.highlightClass);\n    St(e, function (e) {\n      d(r, function (t) {\n        return t.element === e;\n      }) || (qr(e, o.highlightClass), n.getSystem().getByDom(e).each(function (t) {\n        o.onDehighlight(n, t), vr(t, tu());\n      }));\n    });\n  }\n  function Al(t, e, n, o) {\n    Dl(t, e, 0, [o]), Yl(0, e, 0, o) || (Yr(o.element, e.highlightClass), e.onHighlight(t, o), vr(o, Zi()));\n  }\n  function Bl(n, e, t, o) {\n    var r = vs(n.element, \".\" + e.itemClass);\n    return P(r, function (t) {\n      return Kr(t, e.highlightClass);\n    }).bind(function (t) {\n      var e = oa(t, o, 0, r.length - 1);\n      return n.getSystem().getByDom(r[e]).toOptional();\n    });\n  }\n  function Ml(t, e, n) {\n    var o = z(t.slice(0, e)),\n      r = z(t.slice(e + 1));\n    return N(o.concat(r), n);\n  }\n  function Fl(t, e, n) {\n    return N(z(t.slice(0, e)), n);\n  }\n  function Il(t, e, n) {\n    var o = t.slice(0, e);\n    return N(t.slice(e + 1).concat(o), n);\n  }\n  function Rl(t, e, n) {\n    return N(t.slice(e + 1), n);\n  }\n  function Nl(n) {\n    return function (t) {\n      var e = t.raw;\n      return wt(n, e.which);\n    };\n  }\n  function Pl(t) {\n    return function (e) {\n      return L(t, function (t) {\n        return t(e);\n      });\n    };\n  }\n  function Vl(t) {\n    return !0 === t.raw.shiftKey;\n  }\n  function Hl(t) {\n    return !0 === t.raw.ctrlKey;\n  }\n  function Ll(t, e) {\n    return {\n      matches: t,\n      classification: e\n    };\n  }\n  function zl(t, e, n) {\n    e.exists(function (e) {\n      return n.exists(function (t) {\n        return zt(t, e);\n      });\n    }) || br(t, Ki(), {\n      prevFocus: e,\n      newFocus: n\n    });\n  }\n  function Ul() {\n    function o(t) {\n      return _a(t.element);\n    }\n    return {\n      get: o,\n      set: function set(t, e) {\n        var n = o(t);\n        t.getSystem().triggerFocus(e, t.element), zl(t, n, o(t));\n      }\n    };\n  }\n  function jl() {\n    function r(t) {\n      return hd.getHighlighted(t).map(function (t) {\n        return t.element;\n      });\n    }\n    return {\n      get: r,\n      set: function set(e, t) {\n        var n = r(e);\n        e.getSystem().getByDom(t).fold(st, function (t) {\n          hd.highlight(e, t);\n        });\n        var o = r(e);\n        zl(e, n, o);\n      }\n    };\n  }\n  gs.ltr, gs.rtl;\n  function Wl(t, e, n, o, r, i) {\n    var u = i.map(Mn);\n    return lf(t, e, n, o, r, u);\n  }\n  function Gl(t, e, n) {\n    var o,\n      r,\n      i,\n      u = e.getAttachPoint(t);\n    fe(t.element, \"position\", ff.getMode(u)), i = e.cloakVisibilityAttr, pe((o = t).element, r = \"visibility\").fold(function () {\n      ce(o.element, i);\n    }, function (t) {\n      oe(o.element, i, t);\n    }), fe(o.element, r, \"hidden\");\n  }\n  function Xl(t, e, n) {\n    var o,\n      r,\n      i,\n      u = t.element;\n    d([\"top\", \"left\", \"right\", \"bottom\"], function (t) {\n      return pe(u, t).isSome();\n    }) || ve(t.element, \"position\"), r = \"visibility\", i = e.cloakVisibilityAttr, ue((o = t).element, i).fold(function () {\n      return ve(o.element, r);\n    }, function (t) {\n      return fe(o.element, r, t);\n    });\n  }\n  function Yl(t, e, n, o) {\n    return Kr(o.element, e.highlightClass);\n  }\n  function ql(e, t, n) {\n    return Iu(e.element, \".\" + t.itemClass).bind(function (t) {\n      return e.getSystem().getByDom(t).toOptional();\n    });\n  }\n  function Kl(e, t, n) {\n    var o = vs(e.element, \".\" + t.itemClass);\n    return (0 < o.length ? vt.some(o[o.length - 1]) : vt.none()).bind(function (t) {\n      return e.getSystem().getByDom(t).toOptional();\n    });\n  }\n  function Jl(e, t, n) {\n    return nt(B(vs(e.element, \".\" + t.itemClass), function (t) {\n      return e.getSystem().getByDom(t).toOptional();\n    }));\n  }\n  var $l,\n    Ql,\n    Zl,\n    tf,\n    ef = ($l = Xe, {\n      get: function get(t) {\n        if (!$l(t)) throw new Error(\"Can only get text value of a text node\");\n        return Ql(t).getOr(\"\");\n      },\n      getOption: Ql = function Ql(t) {\n        return $l(t) ? vt.from(t.dom.nodeValue) : vt.none();\n      },\n      set: function set(t, e) {\n        if (!$l(t)) throw new Error(\"Can only set raw text value of a text node\");\n        t.dom.nodeValue = e;\n      }\n    }),\n    nf = [\"img\", \"br\"],\n    of = [wo(\"getSelection\"), mo(\"root\"), wo(\"bubble\"), Uc(), Eo(\"overrides\", {}), Eo(\"showAbove\", !1), ta(\"placement\", function (t, e, n) {\n      var r = Xt(e.root).dom,\n        o = qc(t, 0, e);\n      return Jc(ks(r, e).bind(function (n) {\n        return t = r, e = ms.exactFromRange(n), (0 < (o = es(t, e).getBoundingClientRect()).width || 0 < o.height ? vt.some(o).map(Zc) : vt.none()).orThunk(function () {\n          var t = Mt.fromText(\"\\uFEFF\");\n          Ee(n.start, t);\n          var e = xs(r, ms.exact(t, 0, t, 1));\n          return En(t), e;\n        }).bind(function (t) {\n          return Kc(t.left, t.top, t.width, t.height);\n        });\n        var t, e, o;\n      }), o, e, n, ks(r, e).bind(function (t) {\n        return Ge(t.start) ? vt.some(t.start) : fn(t.start);\n      }).getOr(t.element));\n    })],\n    rf = \"link-layout\",\n    uf = lo(\"type\", {\n      selection: of,\n      node: cs,\n      hotspot: os,\n      submenu: [mo(\"item\"), Uc(), Eo(\"overrides\", {}), ta(\"placement\", function (t, e, n) {\n        var o = Ma(n, e.item.element),\n          r = jc(t.element, e, Bs(), Ms(), Bs(), Ms(), vt.none());\n        return vt.some(Hc({\n          anchorBox: o,\n          bubble: kc(),\n          overrides: e.overrides,\n          layouts: r,\n          placer: vt.none()\n        }));\n      })],\n      makeshift: rs\n    }),\n    af = [xo(\"classes\", er), Mo(\"mode\", \"all\", [\"all\", \"layout\", \"placement\"])],\n    cf = [Eo(\"useFixed\", T), wo(\"getBounds\")],\n    sf = [go(\"anchor\", uf), To(\"transition\", af)],\n    lf = function lf(c, s, l, f, t, d) {\n      var m = so(\"placement.info\", $o(sf), t),\n        g = m.anchor,\n        p = f.element,\n        h = l.get(f.uid);\n      Ta(function () {\n        fe(p, \"position\", \"fixed\");\n        var t = pe(p, \"visibility\");\n        fe(p, \"visibility\", \"hidden\");\n        var e,\n          n,\n          o,\n          r,\n          i = s.useFixed() ? (r = document.documentElement, Ec(0, 0, r.clientWidth, r.clientHeight)) : (n = ke((e = c).element), o = e.element.dom.getBoundingClientRect(), Tc(n.left, n.top, o.width, o.height)),\n          u = g.placement,\n          a = d.map(rt).or(s.getBounds);\n        u(c, g, i).each(function (t) {\n          var e = t.placer.getOr(Fs)(c, i, t, a, f, h, m.transition);\n          l.set(f.uid, e);\n        }), t.fold(function () {\n          ve(p, \"visibility\");\n        }, function (t) {\n          fe(p, \"visibility\", t);\n        }), pe(p, \"left\").isNone() && pe(p, \"top\").isNone() && pe(p, \"right\").isNone() && pe(p, \"bottom\").isNone() && mt(pe(p, \"position\"), \"fixed\") && ve(p, \"position\");\n      }, p);\n    },\n    ff = xa({\n      fields: cf,\n      name: \"positioning\",\n      active: uc,\n      apis: Object.freeze({\n        __proto__: null,\n        position: function position(t, e, n, o, r) {\n          Wl(t, e, n, o, r, vt.none());\n        },\n        positionWithin: Wl,\n        positionWithinBounds: lf,\n        getMode: function getMode(t, e, n) {\n          return e.useFixed() ? \"fixed\" : \"absolute\";\n        },\n        reset: function reset(t, e, n, o) {\n          var r = o.element;\n          St([\"position\", \"left\", \"right\", \"top\", \"bottom\"], function (t) {\n            return ve(r, t);\n          }), ce(r, Dc), n.clear(o.uid);\n        }\n      }),\n      state: Object.freeze({\n        __proto__: null,\n        init: function init() {\n          var n = {};\n          return wu({\n            readState: function readState() {\n              return n;\n            },\n            clear: function clear(t) {\n              k(t) ? delete n[t] : n = {};\n            },\n            set: function set(t, e) {\n              n[t] = e;\n            },\n            get: function get(t) {\n              return tt(n, t);\n            }\n          });\n        }\n      })\n    }),\n    df = function df(t) {\n      vr(t, Xi());\n      var e = t.components();\n      St(e, df);\n    },\n    mf = function mf(t) {\n      var e = t.components();\n      St(e, mf), vr(t, Gi());\n    },\n    gf = function gf(t, e, n) {\n      t.getSystem().addToWorld(e), n(t.element, e.element), vn(t.element) && mf(e), t.syncComponents();\n    },\n    pf = function pf(t, e, n) {\n      n(t, e.element);\n      var o = Kt(e.element);\n      St(o, function (t) {\n        e.getByDom(t).each(mf);\n      });\n    },\n    hf = Object.freeze({\n      __proto__: null,\n      cloak: Gl,\n      decloak: Xl,\n      open: js,\n      openWhileCloaked: function openWhileCloaked(t, e, n, o, r) {\n        Gl(t, e), js(t, e, n, o), r(), Xl(t, e);\n      },\n      close: Ws,\n      isOpen: Gs,\n      isPartOf: function isPartOf(e, n, t, o) {\n        return Gs(0, 0, t) && t.get().exists(function (t) {\n          return n.isPartOf(e, t, o);\n        });\n      },\n      getState: function getState(t, e, n) {\n        return n.get();\n      },\n      setContent: function setContent(t, e, n, o) {\n        return n.get().map(function () {\n          return Us(t, e, n, o);\n        });\n      }\n    }),\n    vf = Object.freeze({\n      __proto__: null,\n      events: function events(n, o) {\n        return nu([Cr(Vi(), function (t, e) {\n          Ws(t, n, o);\n        })]);\n      }\n    }),\n    bf = xa({\n      fields: [Ju(\"onOpen\"), Ju(\"onClose\"), mo(\"isPartOf\"), mo(\"getAttachPoint\"), Eo(\"cloakVisibilityAttr\", \"data-precloak-visibility\")],\n      name: \"sandboxing\",\n      active: vf,\n      apis: hf,\n      state: Object.freeze({\n        __proto__: null,\n        init: function init() {\n          var t = gc(),\n            e = rt(\"not-implemented\");\n          return wu({\n            readState: e,\n            isOpen: t.isSet,\n            clear: t.clear,\n            set: t.set,\n            get: t.get\n          });\n        }\n      })\n    }),\n    yf = rt(\"dismiss.popups\"),\n    xf = rt(\"reposition.popups\"),\n    wf = rt(\"mouse.released\"),\n    Sf = to([Eo(\"isExtraPart\", T), To(\"fireEventInstead\", [Eo(\"event\", Yi())])]),\n    kf = to([To(\"fireEventInstead\", [Eo(\"event\", qi())]), vo(\"doReposition\")]),\n    Cf = Object.freeze({\n      __proto__: null,\n      onLoad: qs,\n      onUnload: Ks,\n      setValue: function setValue(t, e, n, o) {\n        e.store.manager.setValue(t, e, n, o);\n      },\n      getValue: function getValue(t, e, n) {\n        return e.store.manager.getValue(t, e, n);\n      },\n      getState: function getState(t, e, n) {\n        return n;\n      }\n    }),\n    Of = Object.freeze({\n      __proto__: null,\n      events: function events(n, o) {\n        var t = n.resetOnDom ? [ou(function (t, e) {\n          qs(t, n, o);\n        }), ru(function (t, e) {\n          Ks(t, n, o);\n        })] : [ba(n, o, qs)];\n        return nu(t);\n      }\n    }),\n    _f = Object.freeze({\n      __proto__: null,\n      memory: Js,\n      dataset: $s,\n      manual: function manual() {\n        return wu({\n          readState: st\n        });\n      },\n      init: function init(t) {\n        return t.store.manager.state(t);\n      }\n    }),\n    Tf = [wo(\"initialValue\"), mo(\"getFallbackEntry\"), mo(\"getDataKey\"), mo(\"setValue\"), ta(\"manager\", {\n      setValue: Qs,\n      getValue: function getValue(t, e, n) {\n        var o = e.store,\n          r = o.getDataKey(t);\n        return n.lookup(r).getOrThunk(function () {\n          return o.getFallbackEntry(r);\n        });\n      },\n      onLoad: function onLoad(e, n, o) {\n        n.store.initialValue.each(function (t) {\n          Qs(e, n, o, t);\n        });\n      },\n      onUnload: function onUnload(t, e, n) {\n        n.clear();\n      },\n      state: $s\n    })],\n    Ef = [mo(\"getValue\"), Eo(\"setValue\", st), wo(\"initialValue\"), ta(\"manager\", {\n      setValue: function setValue(t, e, n, o) {\n        e.store.setValue(t, o), e.onSetValue(t, o);\n      },\n      getValue: function getValue(t, e, n) {\n        return e.store.getValue(t);\n      },\n      onLoad: function onLoad(e, n, t) {\n        n.store.initialValue.each(function (t) {\n          n.store.setValue(e, t);\n        });\n      },\n      onUnload: st,\n      state: xu.init\n    })],\n    Df = xa({\n      fields: [Do(\"store\", {\n        mode: \"memory\"\n      }, lo(\"mode\", {\n        memory: [wo(\"initialValue\"), ta(\"manager\", {\n          setValue: function setValue(t, e, n, o) {\n            n.set(o), e.onSetValue(t, o);\n          },\n          getValue: function getValue(t, e, n) {\n            return n.get();\n          },\n          onLoad: function onLoad(t, e, n) {\n            e.store.initialValue.each(function (t) {\n              n.isNotSet() && n.set(t);\n            });\n          },\n          onUnload: function onUnload(t, e, n) {\n            n.clear();\n          },\n          state: Js\n        })],\n        manual: Ef,\n        dataset: Tf\n      })), Ju(\"onSetValue\"), Eo(\"resetOnDom\", !1)],\n      name: \"representing\",\n      active: Of,\n      apis: Cf,\n      extra: {\n        setValueFrom: function setValueFrom(t, e) {\n          var n = Df.getValue(e);\n          Df.setValue(t, n);\n        }\n      },\n      state: _f\n    }),\n    Af = Zs,\n    Bf = el,\n    Mf = \"placeholder\",\n    Ff = Vo([{\n      single: [\"required\", \"valueThunk\"]\n    }, {\n      multiple: [\"required\", \"valueThunks\"]\n    }]),\n    If = function If(r, i, u, a) {\n      return t = r, n = a, (nl(e = u) && e.uiType === Mf ? (c = e, s = n, (o = t).exists(function (t) {\n        return t !== c.owner;\n      }) ? Ff.single(!0, rt(c)) : tt(s, c.name).fold(function () {\n        throw new Error(\"Unknown placeholder component: \" + c.name + \"\\nKnown: [\" + Ct(s) + \"]\\nNamespace: \" + o.getOr(\"none\") + \"\\nSpec: \" + JSON.stringify(c, null, 2));\n      }, function (t) {\n        return t.replace();\n      })) : Ff.single(!1, rt(e))).fold(function (t, e) {\n        var n = nl(u) ? e(i, u.config, u.validated) : e(i),\n          o = H(tt(n, \"components\").getOr([]), function (t) {\n            return If(r, i, t, a);\n          });\n        return [_lt(_lt({}, n), {\n          components: o\n        })];\n      }, function (t, e) {\n        if (nl(u)) {\n          var n = e(i, u.config, u.validated);\n          return u.validated.preprocess.getOr(h)(n);\n        }\n        return e(i);\n      });\n      var t, e, n, o, c, s;\n    },\n    Rf = Ff.single,\n    Nf = Ff.multiple,\n    Pf = rt(Mf),\n    Vf = Vo([{\n      required: [\"data\"]\n    }, {\n      external: [\"data\"]\n    }, {\n      optional: [\"data\"]\n    }, {\n      group: [\"data\"]\n    }]),\n    Hf = Eo(\"factory\", {\n      sketch: h\n    }),\n    Lf = Eo(\"schema\", []),\n    zf = mo(\"name\"),\n    Uf = ar(\"pname\", \"pname\", Wn(function (t) {\n      return \"<alloy.\" + Ir(t.name) + \">\";\n    }), Zo()),\n    jf = cr(\"schema\", function () {\n      return [wo(\"preprocess\")];\n    }),\n    Wf = Eo(\"defaults\", rt({})),\n    Gf = Eo(\"overrides\", rt({})),\n    Xf = $o([Hf, Lf, zf, Uf, Wf, Gf]),\n    Yf = $o([Hf, Lf, zf, Wf, Gf]),\n    qf = $o([Hf, Lf, zf, Uf, Wf, Gf]),\n    Kf = $o([Hf, jf, zf, mo(\"unit\"), Uf, Wf, Gf]),\n    Jf = il(Vf.required, Xf),\n    $f = il(Vf.external, Yf),\n    Qf = il(Vf.optional, qf),\n    Zf = il(Vf.group, Kf),\n    td = rt(\"entirety\"),\n    ed = Object.freeze({\n      __proto__: null,\n      required: Jf,\n      external: $f,\n      optional: Qf,\n      group: Zf,\n      asNamedPart: ol,\n      name: rl,\n      asCommon: function asCommon(t) {\n        return t.fold(h, h, h, h);\n      },\n      original: td\n    }),\n    nd = function nd(t, e) {\n      return {\n        uiType: Pf(),\n        owner: t,\n        name: e\n      };\n    },\n    od = Object.freeze({\n      __proto__: null,\n      generate: al,\n      generateOne: cl,\n      schemas: sl,\n      names: ll,\n      substitutes: fl,\n      components: dl,\n      defaultUids: yl,\n      defaultUidsSchema: xl,\n      getAllParts: hl,\n      getAllPartNames: vl,\n      getPart: ml,\n      getPartOrDie: gl,\n      getParts: pl,\n      getPartsOrDie: bl\n    }),\n    rd = function rd(t) {\n      return Tt(t, \"uid\") ? t : _lt(_lt({}, t), {\n        uid: pu(\"uid\")\n      });\n    },\n    id = to([mo(\"name\"), mo(\"factory\"), mo(\"configFields\"), Eo(\"apis\", {}), Eo(\"extraApis\", {})]),\n    ud = to([mo(\"name\"), mo(\"factory\"), mo(\"configFields\"), mo(\"partFields\"), Eo(\"apis\", {}), Eo(\"extraApis\", {})]),\n    ad = Object.freeze({\n      __proto__: null,\n      getCurrent: function getCurrent(t, e, n) {\n        return e.find(t);\n      }\n    }),\n    cd = xa({\n      fields: [mo(\"find\")],\n      name: \"composing\",\n      apis: ad\n    }),\n    sd = [\"input\", \"button\", \"textarea\", \"select\"],\n    ld = function ld(e, t, n) {\n      t.disableClass.each(function (t) {\n        Yr(e.element, t);\n      }), (Tl(e, t) ? function (t) {\n        oe(t.element, \"disabled\", \"disabled\");\n      } : function (t) {\n        oe(t.element, \"aria-disabled\", \"true\");\n      })(e), t.onDisabled(e);\n    },\n    fd = function fd(e, t, n) {\n      t.disableClass.each(function (t) {\n        qr(e.element, t);\n      }), (Tl(e, t) ? function (t) {\n        ce(t.element, \"disabled\");\n      } : function (t) {\n        oe(t.element, \"aria-disabled\", \"false\");\n      })(e), t.onEnabled(e);\n    },\n    dd = Object.freeze({\n      __proto__: null,\n      enable: fd,\n      disable: ld,\n      isDisabled: El,\n      onLoad: _l,\n      set: function set(t, e, n, o) {\n        (o ? ld : fd)(t, e);\n      }\n    }),\n    md = Object.freeze({\n      __proto__: null,\n      exhibit: function exhibit(t, e) {\n        return zr({\n          classes: e.disabled() ? e.disableClass.toArray() : []\n        });\n      },\n      events: function events(n, t) {\n        return nu([Sr(Ii(), function (t, e) {\n          return El(t, n);\n        }), ba(n, t, _l)]);\n      }\n    }),\n    gd = xa({\n      fields: [Io(\"disabled\", T), Eo(\"useNative\", !0), wo(\"disableClass\"), Ju(\"onDisabled\"), Ju(\"onEnabled\")],\n      name: \"disabling\",\n      active: md,\n      apis: dd\n    }),\n    pd = Object.freeze({\n      __proto__: null,\n      dehighlightAll: function dehighlightAll(t, e, n) {\n        return Dl(t, e, 0, []);\n      },\n      dehighlight: function dehighlight(t, e, n, o) {\n        Yl(0, e, 0, o) && (qr(o.element, e.highlightClass), e.onDehighlight(t, o), vr(o, tu()));\n      },\n      highlight: Al,\n      highlightFirst: function highlightFirst(e, n, t) {\n        ql(e, n).each(function (t) {\n          Al(e, n, 0, t);\n        });\n      },\n      highlightLast: function highlightLast(e, n, t) {\n        Kl(e, n).each(function (t) {\n          Al(e, n, 0, t);\n        });\n      },\n      highlightAt: function highlightAt(e, n, t, o) {\n        var r, i, u;\n        i = o, u = vs((r = e).element, \".\" + n.itemClass), vt.from(u[i]).fold(function () {\n          return Nn.error(new Error(\"No element found with index \" + i));\n        }, r.getSystem().getByDom).fold(function (t) {\n          throw t;\n        }, function (t) {\n          Al(e, n, 0, t);\n        });\n      },\n      highlightBy: function highlightBy(e, n, t, o) {\n        N(Jl(e, n), o).each(function (t) {\n          Al(e, n, 0, t);\n        });\n      },\n      isHighlighted: Yl,\n      getHighlighted: function getHighlighted(e, t, n) {\n        return Iu(e.element, \".\" + t.highlightClass).bind(function (t) {\n          return e.getSystem().getByDom(t).toOptional();\n        });\n      },\n      getFirst: ql,\n      getLast: Kl,\n      getPrevious: function getPrevious(t, e, n) {\n        return Bl(t, e, 0, -1);\n      },\n      getNext: function getNext(t, e, n) {\n        return Bl(t, e, 0, 1);\n      },\n      getCandidates: Jl\n    }),\n    hd = xa({\n      fields: [mo(\"highlightClass\"), mo(\"itemClass\"), Ju(\"onHighlight\"), Ju(\"onDehighlight\")],\n      name: \"highlighting\",\n      apis: pd\n    }),\n    vd = [8],\n    bd = [9],\n    yd = [13],\n    xd = [27],\n    wd = [32],\n    Sd = [37],\n    kd = [38],\n    Cd = [39],\n    Od = [40],\n    _d = O(Vl);\n  function Td(t, e, n, o, a) {\n    function c(e, n, t, o, r) {\n      var i = t(e, n, o, r),\n        u = n.event;\n      return N(i, function (t) {\n        return t.matches(u);\n      }).map(function (t) {\n        return t.classification;\n      }).bind(function (t) {\n        return t(e, n, o, r);\n      });\n    }\n    var r = {\n      schema: function schema() {\n        return t.concat([Eo(\"focusManager\", Ul()), Do(\"focusInside\", \"onFocus\", io(function (t) {\n          return wt([\"onFocus\", \"onEnterOrSpace\", \"onApi\"], t) ? Nn.value(t) : Nn.error(\"Invalid value for focusInside\");\n        })), ta(\"handler\", r), ta(\"state\", e), ta(\"sendFocusIn\", a)]);\n      },\n      processKey: c,\n      toEvents: function toEvents(i, u) {\n        var t = i.focusInside !== Zl.OnFocusMode ? vt.none() : a(i).map(function (n) {\n            return Cr(Ai(), function (t, e) {\n              n(t, i, u), e.stop();\n            });\n          }),\n          e = [Cr(xi(), function (o, r) {\n            c(o, r, n, i, u).fold(function () {\n              var e = o,\n                n = r,\n                t = Nl(wd.concat(yd))(n.event);\n              i.focusInside === Zl.OnEnterOrSpaceMode && t && gr(e, n) && a(i).each(function (t) {\n                t(e, i, u), n.stop();\n              });\n            }, function (t) {\n              r.stop();\n            });\n          }), Cr(wi(), function (t, e) {\n            c(t, e, o, i, u).each(function (t) {\n              e.stop();\n            });\n          })];\n        return nu(t.toArray().concat(e));\n      }\n    };\n    return r;\n  }\n  function Ed(t) {\n    function a(t, e) {\n      return 0 < xe(t.visibilitySelector.bind(function (t) {\n        return Ru(e, t);\n      }).getOr(e));\n    }\n    function e(e, n, t) {\n      var o = n,\n        r = F(vs(e.element, o.selector), function (t) {\n          return a(o, t);\n        });\n      vt.from(r[o.firstTabstop]).each(function (t) {\n        n.focusManager.set(e, t);\n      });\n    }\n    function o(n, t, r, i) {\n      var e,\n        u = vs(n.element, r.selector);\n      return (e = r).focusManager.get(n).bind(function (t) {\n        return Ru(t, e.selector);\n      }).bind(function (t) {\n        return P(u, C(zt, t)).bind(function (t) {\n          return e = n, o = r, i(u, t, function (t) {\n            return a(e = o, n = t) && e.useTabstopAt(n);\n            var e, n;\n          }).fold(function () {\n            return o.cyclic ? vt.some(!0) : vt.none();\n          }, function (t) {\n            return o.focusManager.set(e, t), vt.some(!0);\n          });\n          var e, o;\n        });\n      });\n    }\n    var n = [wo(\"onEscape\"), wo(\"onEnter\"), Eo(\"selector\", '[data-alloy-tabstop=\"true\"]:not(:disabled)'), Eo(\"firstTabstop\", 0), Eo(\"useTabstopAt\", D), wo(\"visibilitySelector\")].concat([t]),\n      r = rt([Ll(Pl([Vl, Nl(bd)]), function (t, e, n) {\n        return o(t, 0, n, n.cyclic ? Ml : Fl);\n      }), Ll(Nl(bd), function (t, e, n) {\n        return o(t, 0, n, n.cyclic ? Il : Rl);\n      }), Ll(Nl(xd), function (e, n, t) {\n        return t.onEscape.bind(function (t) {\n          return t(e, n);\n        });\n      }), Ll(Pl([_d, Nl(yd)]), function (e, n, t) {\n        return t.onEnter.bind(function (t) {\n          return t(e, n);\n        });\n      })]),\n      i = rt([]);\n    return Td(n, xu.init, r, i, function () {\n      return vt.some(e);\n    });\n  }\n  function Dd(t, e, n) {\n    return Ol(n) && Nl(wd)(e.event) ? vt.none() : (xr(t, n, Ii()), vt.some(!0));\n  }\n  function Ad(t, e) {\n    return vt.some(!0);\n  }\n  function Bd(t, e, n) {\n    return n.execute(t, e, t.element);\n  }\n  function Md() {\n    var n = gc();\n    return wu({\n      readState: function readState() {\n        return n.get().map(function (t) {\n          return {\n            numRows: String(t.numRows),\n            numColumns: String(t.numColumns)\n          };\n        }).getOr({\n          numRows: \"?\",\n          numColumns: \"?\"\n        });\n      },\n      setGridSize: function setGridSize(t, e) {\n        n.set({\n          numRows: t,\n          numColumns: e\n        });\n      },\n      getNumRows: function getNumRows() {\n        return n.get().map(function (t) {\n          return t.numRows;\n        });\n      },\n      getNumColumns: function getNumColumns() {\n        return n.get().map(function (t) {\n          return t.numColumns;\n        });\n      }\n    });\n  }\n  function Fd(i) {\n    return function (t, e, n, o) {\n      var r = i(t.element);\n      return tg(r, t, e, n, o);\n    };\n  }\n  function Id(t, e) {\n    return Fd(Cc(t, e));\n  }\n  function Rd(t, e) {\n    return Fd(Cc(e, t));\n  }\n  function Nd(r) {\n    return function (t, e, n, o) {\n      return tg(r, t, e, n, o);\n    };\n  }\n  function Pd(t) {\n    return !((e = t.dom).offsetWidth <= 0 && e.offsetHeight <= 0);\n    var e;\n  }\n  function Vd(t, e, n) {\n    var o,\n      r = F(vs(t, n), Pd);\n    return P(o = r, function (t) {\n      return zt(t, e);\n    }).map(function (t) {\n      return {\n        index: t,\n        candidates: o\n      };\n    });\n  }\n  function Hd(t, e) {\n    return P(t, function (t) {\n      return zt(e, t);\n    });\n  }\n  function Ld(n, t, o, e) {\n    return e(Math.floor(t / o), t % o).bind(function (t) {\n      var e = t.row * o + t.column;\n      return 0 <= e && e < n.length ? vt.some(n[e]) : vt.none();\n    });\n  }\n  function zd(r, t, i, u, a) {\n    return Ld(r, t, u, function (t, e) {\n      var n = t === i - 1 ? r.length - t * u : u,\n        o = oa(e, a, 0, n - 1);\n      return vt.some({\n        row: t,\n        column: o\n      });\n    });\n  }\n  function Ud(i, t, u, a, c) {\n    return Ld(i, t, a, function (t, e) {\n      var n = oa(t, c, 0, u - 1),\n        o = n === u - 1 ? i.length - n * a : a,\n        r = Wa(e, 0, o - 1);\n      return vt.some({\n        row: n,\n        column: r\n      });\n    });\n  }\n  function jd(e, n, t) {\n    Iu(e.element, n.selector).each(function (t) {\n      n.focusManager.set(e, t);\n    });\n  }\n  function Wd(r) {\n    return function (t, e, n, o) {\n      return Vd(t, e, n.selector).bind(function (t) {\n        return r(t.candidates, t.index, o.getNumRows().getOr(n.initSize.numRows), o.getNumColumns().getOr(n.initSize.numColumns));\n      });\n    };\n  }\n  function Gd(t, e, n) {\n    return n.captureTab ? vt.some(!0) : vt.none();\n  }\n  function Xd(t, e, n, i) {\n    var u = function u(t, e, n) {\n      var o,\n        r = oa(e, i, 0, n.length - 1);\n      return r === t ? vt.none() : \"button\" === Ft(o = n[r]) && \"disabled\" === ie(o, \"disabled\") ? u(t, r, n) : vt.from(n[r]);\n    };\n    return Vd(t, n, e).bind(function (t) {\n      var e = t.index,\n        n = t.candidates;\n      return u(e, e, n);\n    });\n  }\n  function Yd(e, n, o) {\n    return (r = o).focusManager.get(e).bind(function (t) {\n      return Ru(t, r.selector);\n    }).bind(function (t) {\n      return o.execute(e, n, t);\n    });\n    var r;\n  }\n  function qd(e, n, t) {\n    n.getInitial(e).orThunk(function () {\n      return Iu(e.element, n.selector);\n    }).each(function (t) {\n      n.focusManager.set(e, t);\n    });\n  }\n  function Kd(t, e, n) {\n    return Xd(t, n.selector, e, -1);\n  }\n  function Jd(t, e, n) {\n    return Xd(t, n.selector, e, 1);\n  }\n  function $d(r) {\n    return function (t, e, n, o) {\n      return r(t, e, n, o).bind(function () {\n        return n.executeOnMove ? Yd(t, e, n) : vt.some(!0);\n      });\n    };\n  }\n  function Qd(t, e, n) {\n    return n.onEscape(t, e);\n  }\n  function Zd(t, e, n) {\n    return vt.from(t[e]).bind(function (t) {\n      return vt.from(t[n]).map(function (t) {\n        return {\n          rowIndex: e,\n          columnIndex: n,\n          cell: t\n        };\n      });\n    });\n  }\n  function tm(t, e, n, o) {\n    return Zd(t, e, oa(n, o, 0, t[e].length - 1));\n  }\n  function em(t, e, n, o) {\n    var r = oa(n, o, 0, t.length - 1),\n      i = t[r].length;\n    return Zd(t, r, Wa(e, 0, i - 1));\n  }\n  function nm(t, e, n, o) {\n    var r = t[e].length;\n    return Zd(t, e, Wa(n + o, 0, r - 1));\n  }\n  function om(t, e, n, o) {\n    var r = Wa(n + o, 0, t.length - 1),\n      i = t[r].length;\n    return Zd(t, r, Wa(e, 0, i - 1));\n  }\n  function rm(e, n, t) {\n    n.previousSelector(e).orThunk(function () {\n      var t = n.selectors;\n      return Iu(e.element, t.cell);\n    }).each(function (t) {\n      n.focusManager.set(e, t);\n    });\n  }\n  function im(t, o) {\n    return function (e, n, i) {\n      var u = i.cycles ? t : o;\n      return Ru(n, i.selectors.row).bind(function (t) {\n        return Hd(vs(t, i.selectors.cell), n).bind(function (o) {\n          var r = vs(e, i.selectors.row);\n          return Hd(r, t).bind(function (t) {\n            var e,\n              n = (e = i, B(r, function (t) {\n                return vs(t, e.selectors.cell);\n              }));\n            return u(n, t, o).map(function (t) {\n              return t.cell;\n            });\n          });\n        });\n      });\n    };\n  }\n  function um(e, n, o) {\n    return o.focusManager.get(e).bind(function (t) {\n      return o.execute(e, n, t);\n    });\n  }\n  function am(e, n, t) {\n    Iu(e.element, n.selector).each(function (t) {\n      n.focusManager.set(e, t);\n    });\n  }\n  function cm(t, e, n) {\n    return Xd(t, n.selector, e, -1);\n  }\n  function sm(t, e, n) {\n    return Xd(t, n.selector, e, 1);\n  }\n  function lm(t, e, n, o) {\n    var r = t.getSystem().build(o);\n    gf(t, r, n);\n  }\n  function fm(t, e, n, o) {\n    N(Ig(t), function (t) {\n      return zt(o.element, t.element);\n    }).each(Vs);\n  }\n  function dm(e, t, n, r, o) {\n    var i = Ig(e);\n    return vt.from(i[r]).map(function (t) {\n      return fm(e, 0, 0, t), o.each(function (t) {\n        lm(e, 0, function (t, e) {\n          var n,\n            o = e;\n          Jt(n = t, r).fold(function () {\n            Tn(n, o);\n          }, function (t) {\n            Ee(t, o);\n          });\n        }, t);\n      }), t;\n    });\n  }\n  function mm(t, e) {\n    var n, o;\n    return {\n      key: t,\n      value: {\n        config: {},\n        me: (n = t, o = nu(e), xa({\n          fields: [mo(\"enabled\")],\n          name: n,\n          active: {\n            events: rt(o)\n          }\n        })),\n        configAsRaw: rt({}),\n        initialConfig: {},\n        state: xu\n      }\n    };\n  }\n  function gm(t, e) {\n    e.ignore || (ka(t.element), e.onFocus(t));\n  }\n  function pm(t, e, n) {\n    var o = e.aria;\n    o.update(t, o, n.get());\n  }\n  function hm(e, t, n) {\n    t.toggleClass.each(function (t) {\n      (n.get() ? Yr : qr)(e.element, t);\n    });\n  }\n  function vm(t, e, n) {\n    Ym(t, e, n, !n.get());\n  }\n  function bm(t, e, n) {\n    n.set(!0), hm(t, e, n), pm(t, e, n);\n  }\n  function ym(t, e, n) {\n    n.set(!1), hm(t, e, n), pm(t, e, n);\n  }\n  function xm(t, e, n) {\n    Ym(t, e, n, e.selected);\n  }\n  function wm() {\n    function t(t, e) {\n      e.stop(), yr(t);\n    }\n    return [Cr(Ci(), t), Cr(Ni(), t), Dr(si()), Dr(mi())];\n  }\n  function Sm(t) {\n    return nu(ft([t.map(function (n) {\n      return uu(function (t, e) {\n        n(t), e.stop();\n      });\n    }).toArray(), wm()]));\n  }\n  function km(t) {\n    (_a(t.element).isNone() || Vg.isFocused(t)) && (Vg.isFocused(t) || Vg.focus(t), br(t, Ug, {\n      item: t\n    }));\n  }\n  function Cm(t) {\n    br(t, jg, {\n      item: t\n    });\n  }\n  function Om(t, e) {\n    return t.x + t.width / 2 - e.width / 2;\n  }\n  function _m(t, e) {\n    return t.x + t.width - e.width;\n  }\n  function Tm(t, e) {\n    return t.y + t.height - e.height;\n  }\n  function Em(t, e) {\n    return t.y + t.height / 2 - e.height / 2;\n  }\n  function Dm(t, e, n) {\n    return na(_m(t, e), Tm(t, e), n.insetSouthwest(), Ha(), \"southwest\", ra(t, {\n      right: 0,\n      bottom: 3\n    }), ap);\n  }\n  function Am(t, e, n) {\n    return na(t.x, Tm(t, e), n.insetSoutheast(), Va(), \"southeast\", ra(t, {\n      left: 1,\n      bottom: 3\n    }), ap);\n  }\n  function Bm(t, e, n) {\n    return na(_m(t, e), t.y, n.insetNorthwest(), Pa(), \"northwest\", ra(t, {\n      right: 0,\n      top: 2\n    }), ap);\n  }\n  function Mm(t, e, n) {\n    return na(t.x, t.y, n.insetNortheast(), Na(), \"northeast\", ra(t, {\n      left: 1,\n      top: 2\n    }), ap);\n  }\n  function Fm(t, e, n) {\n    return na(_m(t, e), Em(t, e), n.insetEast(), ja(), \"east\", ra(t, {\n      right: 0\n    }), ap);\n  }\n  function Im(t, e, n) {\n    return na(t.x, Em(t, e), n.insetWest(), Ua(), \"west\", ra(t, {\n      left: 1\n    }), ap);\n  }\n  function Rm(t) {\n    switch (t) {\n      case \"north\":\n        return cp;\n      case \"northeast\":\n        return Mm;\n      case \"northwest\":\n        return Bm;\n      case \"south\":\n        return sp;\n      case \"southeast\":\n        return Am;\n      case \"southwest\":\n        return Dm;\n      case \"east\":\n        return Fm;\n      case \"west\":\n        return Im;\n    }\n  }\n  function Nm(t, e, n, o, r) {\n    return sc(o).map(Rm).getOr(cp)(t, e, n, o, r);\n  }\n  function Pm(t) {\n    switch (t) {\n      case \"north\":\n        return sp;\n      case \"northeast\":\n        return Am;\n      case \"northwest\":\n        return Dm;\n      case \"south\":\n        return cp;\n      case \"southeast\":\n        return Mm;\n      case \"southwest\":\n        return Bm;\n      case \"east\":\n        return Im;\n      case \"west\":\n        return Fm;\n    }\n  }\n  function Vm(t, e, n, o, r) {\n    return sc(o).map(Pm).getOr(cp)(t, e, n, o, r);\n  }\n  function Hm(t) {\n    var e = void 0 !== t.uid && et(t, \"uid\") ? t.uid : pu(\"memento\");\n    return {\n      get: function get(t) {\n        return t.getSystem().getByUid(e).getOrDie();\n      },\n      getOpt: function getOpt(t) {\n        return t.getSystem().getByUid(e).toOptional();\n      },\n      asSpec: function asSpec() {\n        return _lt(_lt({}, t), {\n          uid: e\n        });\n      }\n    };\n  }\n  function Lm(t) {\n    return function () {\n      return tt(t, gp).getOr(\"!not found!\");\n    };\n  }\n  function zm(t, e) {\n    var n,\n      o = t.toLowerCase();\n    if (dp.isRtl()) {\n      var r = At(n = o, \"-rtl\") ? n : n + \"-rtl\";\n      return Tt(e, r) ? r : o;\n    }\n    return o;\n  }\n  function Um(t, e) {\n    return tt(e, zm(t, e));\n  }\n  function jm(t, e) {\n    var n = e();\n    return Um(t, n).getOrThunk(Lm(n));\n  }\n  function Wm() {\n    return mm(\"add-focusable\", [ou(function (t) {\n      var e, n, o;\n      e = t.element, n = \"svg\", o = function o(t) {\n        return Ht(t, n);\n      }, N(e.dom.childNodes, function (t) {\n        return o(Mt.fromDom(t));\n      }).map(Mt.fromDom).each(function (t) {\n        return oe(t, \"focusable\", \"false\");\n      });\n    })]);\n  }\n  function Gm(t, e, n, o) {\n    var r,\n      i,\n      u,\n      a = (u = e, dp.isRtl() && Tt(mp, u) ? [\"tox-icon--flip\"] : []),\n      c = tt(n, zm(e, n)).or(o).getOrThunk(Lm(n));\n    return {\n      dom: {\n        tag: t.tag,\n        attributes: null !== (r = t.attributes) && void 0 !== r ? r : {},\n        classes: t.classes.concat(a),\n        innerHtml: c\n      },\n      behaviours: ec(V(V([], null !== (i = t.behaviours) && void 0 !== i ? i : [], !0), [Wm()], !1))\n    };\n  }\n  function Xm(t, e, n, o) {\n    return void 0 === o && (o = vt.none()), Gm(e, t, n(), o);\n  }\n  (tf = Zl = Zl || {}).OnFocusMode = \"onFocus\", tf.OnEnterOrSpaceMode = \"onEnterOrSpace\", tf.OnApiMode = \"onApi\";\n  function Ym(t, e, n, o) {\n    (o ? bm : ym)(t, e, n);\n  }\n  function qm(t, e, n) {\n    oe(t.element, \"aria-expanded\", n);\n  }\n  function Km(t) {\n    return \"prepared\" === t.type ? vt.some(t.menu) : vt.none();\n  }\n  var Jm = Ed(cr(\"cyclic\", T)),\n    $m = Ed(cr(\"cyclic\", D)),\n    Qm = Td([Eo(\"execute\", Dd), Eo(\"useSpace\", !1), Eo(\"useEnter\", !0), Eo(\"useControlEnter\", !1), Eo(\"useDown\", !1)], xu.init, function (t, e, n, o) {\n      var r = n.useSpace && !Ol(t.element) ? wd : [],\n        i = n.useEnter ? yd : [],\n        u = n.useDown ? Od : [];\n      return [Ll(Nl(r.concat(i).concat(u)), Bd)].concat(n.useControlEnter ? [Ll(Pl([Hl, Nl(yd)]), Bd)] : []);\n    }, function (t, e, n, o) {\n      return n.useSpace && !Ol(t.element) ? [Ll(Nl(wd), Ad)] : [];\n    }, function () {\n      return vt.none();\n    }),\n    Zm = Object.freeze({\n      __proto__: null,\n      flatgrid: Md,\n      init: function init(t) {\n        return t.state(t);\n      }\n    }),\n    tg = function tg(e, n, t, o, r) {\n      return o.focusManager.get(n).bind(function (t) {\n        return e(n.element, t, o, r);\n      }).map(function (t) {\n        return o.focusManager.set(n, t), !0;\n      });\n    },\n    eg = Nd,\n    ng = Nd,\n    og = Nd,\n    rg = Wd(function (t, e, n, o) {\n      return zd(t, e, n, o, -1);\n    }),\n    ig = Wd(function (t, e, n, o) {\n      return zd(t, e, n, o, 1);\n    }),\n    ug = Wd(function (t, e, n, o) {\n      return Ud(t, e, n, o, -1);\n    }),\n    ag = Wd(function (t, e, n, o) {\n      return Ud(t, e, n, o, 1);\n    }),\n    cg = Td([mo(\"selector\"), Eo(\"execute\", Dd), $u(\"onEscape\"), Eo(\"captureTab\", !1), Ia()], Md, rt([Ll(Nl(Sd), Id(rg, ig)), Ll(Nl(Cd), Rd(rg, ig)), Ll(Nl(kd), eg(ug)), Ll(Nl(Od), ng(ag)), Ll(Pl([Vl, Nl(bd)]), Gd), Ll(Pl([_d, Nl(bd)]), Gd), Ll(Nl(xd), function (t, e, n) {\n      return n.onEscape(t, e);\n    }), Ll(Nl(wd.concat(yd)), function (e, n, o, t) {\n      return (r = o).focusManager.get(e).bind(function (t) {\n        return Ru(t, r.selector);\n      }).bind(function (t) {\n        return o.execute(e, n, t);\n      });\n      var r;\n    })]), rt([Ll(Nl(wd), Ad)]), function () {\n      return vt.some(jd);\n    }),\n    sg = [mo(\"selector\"), Eo(\"getInitial\", vt.none), Eo(\"execute\", Dd), $u(\"onEscape\"), Eo(\"executeOnMove\", !1), Eo(\"allowVertical\", !0)],\n    lg = rt([Ll(Nl(wd), Ad)]),\n    fg = Td(sg, xu.init, function (t, e, n, o) {\n      var r = Sd.concat(n.allowVertical ? kd : []),\n        i = Cd.concat(n.allowVertical ? Od : []);\n      return [Ll(Nl(r), $d(Id(Kd, Jd))), Ll(Nl(i), $d(Rd(Kd, Jd))), Ll(Nl(yd), Yd), Ll(Nl(wd), Yd), Ll(Nl(xd), Qd)];\n    }, lg, function () {\n      return vt.some(qd);\n    }),\n    dg = [bo(\"selectors\", [mo(\"row\"), mo(\"cell\")]), Eo(\"cycles\", !0), Eo(\"previousSelector\", vt.none), Eo(\"execute\", Dd)],\n    mg = im(function (t, e, n) {\n      return tm(t, e, n, -1);\n    }, function (t, e, n) {\n      return nm(t, e, n, -1);\n    }),\n    gg = im(function (t, e, n) {\n      return tm(t, e, n, 1);\n    }, function (t, e, n) {\n      return nm(t, e, n, 1);\n    }),\n    pg = im(function (t, e, n) {\n      return em(t, n, e, -1);\n    }, function (t, e, n) {\n      return om(t, n, e, -1);\n    }),\n    hg = im(function (t, e, n) {\n      return em(t, n, e, 1);\n    }, function (t, e, n) {\n      return om(t, n, e, 1);\n    }),\n    vg = rt([Ll(Nl(Sd), Id(mg, gg)), Ll(Nl(Cd), Rd(mg, gg)), Ll(Nl(kd), eg(pg)), Ll(Nl(Od), ng(hg)), Ll(Nl(wd.concat(yd)), function (e, n, o) {\n      return _a(e.element).bind(function (t) {\n        return o.execute(e, n, t);\n      });\n    })]),\n    bg = rt([Ll(Nl(wd), Ad)]),\n    yg = Td(dg, xu.init, vg, bg, function () {\n      return vt.some(rm);\n    }),\n    xg = [mo(\"selector\"), Eo(\"execute\", Dd), Eo(\"moveOnTab\", !1)],\n    wg = rt([Ll(Nl(kd), og(cm)), Ll(Nl(Od), og(sm)), Ll(Pl([Vl, Nl(bd)]), function (t, e, n, o) {\n      return n.moveOnTab ? og(cm)(t, e, n, o) : vt.none();\n    }), Ll(Pl([_d, Nl(bd)]), function (t, e, n, o) {\n      return n.moveOnTab ? og(sm)(t, e, n, o) : vt.none();\n    }), Ll(Nl(yd), um), Ll(Nl(wd), um)]),\n    Sg = rt([Ll(Nl(wd), Ad)]),\n    kg = Td(xg, xu.init, wg, Sg, function () {\n      return vt.some(am);\n    }),\n    Cg = Td([$u(\"onSpace\"), $u(\"onEnter\"), $u(\"onShiftEnter\"), $u(\"onLeft\"), $u(\"onRight\"), $u(\"onTab\"), $u(\"onShiftTab\"), $u(\"onUp\"), $u(\"onDown\"), $u(\"onEscape\"), Eo(\"stopSpaceKeyup\", !1), wo(\"focusIn\")], xu.init, function (t, e, n) {\n      return [Ll(Nl(wd), n.onSpace), Ll(Pl([_d, Nl(yd)]), n.onEnter), Ll(Pl([Vl, Nl(yd)]), n.onShiftEnter), Ll(Pl([Vl, Nl(bd)]), n.onShiftTab), Ll(Pl([_d, Nl(bd)]), n.onTab), Ll(Nl(kd), n.onUp), Ll(Nl(Od), n.onDown), Ll(Nl(Sd), n.onLeft), Ll(Nl(Cd), n.onRight), Ll(Nl(wd), n.onSpace), Ll(Nl(xd), n.onEscape)];\n    }, function (t, e, n) {\n      return n.stopSpaceKeyup ? [Ll(Nl(wd), Ad)] : [];\n    }, function (t) {\n      return t.focusIn;\n    }),\n    Og = Jm.schema(),\n    _g = $m.schema(),\n    Tg = fg.schema(),\n    Eg = cg.schema(),\n    Dg = yg.schema(),\n    Ag = Qm.schema(),\n    Bg = kg.schema(),\n    Mg = Cg.schema(),\n    Fg = wa({\n      branchKey: \"mode\",\n      branches: Object.freeze({\n        __proto__: null,\n        acyclic: Og,\n        cyclic: _g,\n        flow: Tg,\n        flatgrid: Eg,\n        matrix: Dg,\n        execution: Ag,\n        menu: Bg,\n        special: Mg\n      }),\n      name: \"keying\",\n      active: {\n        events: function events(t, e) {\n          return t.handler.toEvents(t, e);\n        }\n      },\n      apis: {\n        focusIn: function focusIn(e, n, o) {\n          n.sendFocusIn(n).fold(function () {\n            e.getSystem().triggerFocus(e.element, e.element);\n          }, function (t) {\n            t(e, n, o);\n          });\n        },\n        setGridSize: function setGridSize(t, e, n, o, r) {\n          et(n, \"setGridSize\") ? n.setGridSize(o, r) : console.error(\"Layout does not support setGridSize\");\n        }\n      },\n      state: Zm\n    }),\n    Ig = function Ig(t, e) {\n      return t.components();\n    },\n    Rg = xa({\n      fields: [],\n      name: \"replacing\",\n      apis: Object.freeze({\n        __proto__: null,\n        append: function append(t, e, n, o) {\n          lm(t, 0, Tn, o);\n        },\n        prepend: function prepend(t, e, n, o) {\n          lm(t, 0, Ae, o);\n        },\n        remove: fm,\n        replaceAt: dm,\n        replaceBy: function replaceBy(e, t, n, o, r) {\n          return P(Ig(e), o).bind(function (t) {\n            return dm(e, 0, 0, t, r);\n          });\n        },\n        set: function set(e, t, n, o) {\n          Ta(function () {\n            var t = B(o, e.getSystem().build);\n            Rs(e, t);\n          }, e.element);\n        },\n        contents: Ig\n      })\n    }),\n    Ng = Object.freeze({\n      __proto__: null,\n      focus: gm,\n      blur: function blur(t, e) {\n        e.ignore || t.element.dom.blur();\n      },\n      isFocused: function isFocused(t) {\n        return Ca(t.element);\n      }\n    }),\n    Pg = Object.freeze({\n      __proto__: null,\n      exhibit: function exhibit(t, e) {\n        return zr(e.ignore ? {} : {\n          attributes: {\n            tabindex: \"-1\"\n          }\n        });\n      },\n      events: function events(n) {\n        return nu([Cr(Ai(), function (t, e) {\n          gm(t, n), e.stop();\n        })].concat(n.stopMousedown ? [Cr(mi(), function (t, e) {\n          e.event.prevent();\n        })] : []));\n      }\n    }),\n    Vg = xa({\n      fields: [Ju(\"onFocus\"), Eo(\"stopMousedown\", !1), Eo(\"ignore\", !1)],\n      name: \"focusing\",\n      active: Pg,\n      apis: Ng\n    }),\n    Hg = Object.freeze({\n      __proto__: null,\n      onLoad: xm,\n      toggle: vm,\n      isOn: function isOn(t, e, n) {\n        return n.get();\n      },\n      on: bm,\n      off: ym,\n      set: Ym\n    }),\n    Lg = Object.freeze({\n      __proto__: null,\n      exhibit: function exhibit() {\n        return zr({});\n      },\n      events: function events(t, e) {\n        var n,\n          o,\n          r,\n          i = (n = t, o = e, r = vm, uu(function (t) {\n            r(t, n, o);\n          })),\n          u = ba(t, e, xm);\n        return nu(ft([t.toggleOnExecute ? [i] : [], [u]]));\n      }\n    }),\n    zg = xa({\n      fields: [Eo(\"selected\", !1), wo(\"toggleClass\"), Eo(\"toggleOnExecute\", !0), Do(\"aria\", {\n        mode: \"none\"\n      }, lo(\"mode\", {\n        pressed: [Eo(\"syncWithExpanded\", !1), ta(\"update\", function (t, e, n) {\n          oe(t.element, \"aria-pressed\", n), e.syncWithExpanded && qm(t, 0, n);\n        })],\n        checked: [ta(\"update\", function (t, e, n) {\n          oe(t.element, \"aria-checked\", n);\n        })],\n        expanded: [ta(\"update\", qm)],\n        selected: [ta(\"update\", function (t, e, n) {\n          oe(t.element, \"aria-selected\", n);\n        })],\n        none: [ta(\"update\", st)]\n      }))],\n      name: \"toggling\",\n      active: Lg,\n      apis: Hg,\n      state: {\n        init: function init() {\n          var e = Po(!1);\n          return {\n            get: function get() {\n              return e.get();\n            },\n            set: function set(t) {\n              return e.set(t);\n            },\n            clear: function clear() {\n              return e.set(!1);\n            },\n            readState: function readState() {\n              return e.get();\n            }\n          };\n        }\n      }\n    }),\n    Ug = \"alloy.item-hover\",\n    jg = \"alloy.item-focus\",\n    Wg = rt(Ug),\n    Gg = rt(jg),\n    Xg = [mo(\"data\"), mo(\"components\"), mo(\"dom\"), Eo(\"hasSubmenu\", !1), wo(\"toggling\"), Af(\"itemBehaviours\", [zg, Vg, Fg, Df]), Eo(\"ignoreFocus\", !1), Eo(\"domModification\", {}), ta(\"builder\", function (t) {\n      return {\n        dom: t.dom,\n        domModification: _lt(_lt({}, t.domModification), {\n          attributes: _lt(_lt(_lt({\n            role: t.toggling.isSome() ? \"menuitemcheckbox\" : \"menuitem\"\n          }, t.domModification.attributes), {\n            \"aria-haspopup\": t.hasSubmenu\n          }), t.hasSubmenu ? {\n            \"aria-expanded\": !1\n          } : {})\n        }),\n        behaviours: Bf(t.itemBehaviours, [t.toggling.fold(zg.revoke, function (t) {\n          return zg.config(_lt({\n            aria: {\n              mode: \"checked\"\n            }\n          }, t));\n        }), Vg.config({\n          ignore: t.ignoreFocus,\n          stopMousedown: t.ignoreFocus,\n          onFocus: function onFocus(t) {\n            Cm(t);\n          }\n        }), Fg.config({\n          mode: \"execution\"\n        }), Df.config({\n          store: {\n            mode: \"memory\",\n            initialValue: t.data\n          }\n        }), mm(\"item-type-events\", V(V([], wm(), !0), [Cr(vi(), km), Cr(Ri(), Vg.focus)], !1))]),\n        components: t.components,\n        eventOrder: t.eventOrder\n      };\n    }), Eo(\"eventOrder\", {})],\n    Yg = [mo(\"dom\"), mo(\"components\"), ta(\"builder\", function (t) {\n      return {\n        dom: t.dom,\n        components: t.components,\n        events: nu([Cr(Ri(), function (t, e) {\n          e.stop();\n        })])\n      };\n    })],\n    qg = rt(\"item-widget\"),\n    Kg = rt([Jf({\n      name: \"widget\",\n      overrides: function overrides(e) {\n        return {\n          behaviours: ec([Df.config({\n            store: {\n              mode: \"manual\",\n              getValue: function getValue(t) {\n                return e.data;\n              },\n              setValue: st\n            }\n          })])\n        };\n      }\n    })]),\n    Jg = lo(\"type\", {\n      widget: [mo(\"uid\"), mo(\"data\"), mo(\"components\"), mo(\"dom\"), Eo(\"autofocus\", !1), Eo(\"ignoreFocus\", !1), Af(\"widgetBehaviours\", [Df, Vg, Fg]), Eo(\"domModification\", {}), xl(Kg()), ta(\"builder\", function (n) {\n        function o(t) {\n          return ml(t, n, \"widget\").map(function (t) {\n            return Fg.focusIn(t), t;\n          });\n        }\n        function t(t, e) {\n          return Ol(e.event.target) || n.autofocus && e.setSource(t.element), vt.none();\n        }\n        var e = fl(qg(), n, Kg()),\n          r = dl(qg(), n, e.internals());\n        return {\n          dom: n.dom,\n          components: r,\n          domModification: n.domModification,\n          events: nu([uu(function (t, e) {\n            o(t).each(function (t) {\n              e.stop();\n            });\n          }), Cr(vi(), km), Cr(Ri(), function (t, e) {\n            n.autofocus ? o(t) : Vg.focus(t);\n          })]),\n          behaviours: Bf(n.widgetBehaviours, [Df.config({\n            store: {\n              mode: \"memory\",\n              initialValue: n.data\n            }\n          }), Vg.config({\n            ignore: n.ignoreFocus,\n            onFocus: function onFocus(t) {\n              Cm(t);\n            }\n          }), Fg.config({\n            mode: \"special\",\n            focusIn: n.autofocus ? function (t) {\n              o(t);\n            } : rc(),\n            onLeft: t,\n            onRight: t,\n            onEscape: function onEscape(t, e) {\n              return Vg.isFocused(t) || n.autofocus ? (n.autofocus && e.setSource(t.element), vt.none()) : (Vg.focus(t), vt.some(!0));\n            }\n          })])\n        };\n      })],\n      item: Xg,\n      separator: Yg\n    }),\n    $g = rt([Zf({\n      factory: {\n        sketch: function sketch(t) {\n          var e = so(\"menu.spec item\", Jg, t);\n          return e.builder(e);\n        }\n      },\n      name: \"items\",\n      unit: \"item\",\n      defaults: function defaults(t, e) {\n        return Tt(e, \"uid\") ? e : _lt(_lt({}, e), {\n          uid: pu(\"item\")\n        });\n      },\n      overrides: function overrides(t, e) {\n        return {\n          type: e.type,\n          ignoreFocus: t.fakeFocus,\n          domModification: {\n            classes: [t.markers.item]\n          }\n        };\n      }\n    })]),\n    Qg = rt([mo(\"value\"), mo(\"items\"), mo(\"dom\"), mo(\"components\"), Eo(\"eventOrder\", {}), Zs(\"menuBehaviours\", [hd, Df, cd, Fg]), Do(\"movement\", {\n      mode: \"menu\",\n      moveOnTab: !0\n    }, lo(\"mode\", {\n      grid: [Ia(), ta(\"config\", function (t, e) {\n        return {\n          mode: \"flatgrid\",\n          selector: \".\" + t.markers.item,\n          initSize: {\n            numColumns: e.initSize.numColumns,\n            numRows: e.initSize.numRows\n          },\n          focusManager: t.focusManager\n        };\n      })],\n      matrix: [ta(\"config\", function (t, e) {\n        return {\n          mode: \"matrix\",\n          selectors: {\n            row: e.rowSelector,\n            cell: \".\" + t.markers.item\n          },\n          focusManager: t.focusManager\n        };\n      }), mo(\"rowSelector\")],\n      menu: [Eo(\"moveOnTab\", !0), ta(\"config\", function (t, e) {\n        return {\n          mode: \"menu\",\n          selector: \".\" + t.markers.item,\n          moveOnTab: e.moveOnTab,\n          focusManager: t.focusManager\n        };\n      })]\n    })), go(\"markers\", Fa()), Eo(\"fakeFocus\", !1), Eo(\"focusManager\", Ul()), Ju(\"onHighlight\")]),\n    Zg = rt(\"alloy.menu-focus\"),\n    tp = Cl({\n      name: \"Menu\",\n      configFields: Qg(),\n      partFields: $g(),\n      factory: function factory(t, e, n, o) {\n        return {\n          uid: t.uid,\n          dom: t.dom,\n          markers: t.markers,\n          behaviours: el(t.menuBehaviours, [hd.config({\n            highlightClass: t.markers.selectedItem,\n            itemClass: t.markers.item,\n            onHighlight: t.onHighlight\n          }), Df.config({\n            store: {\n              mode: \"memory\",\n              initialValue: t.value\n            }\n          }), cd.config({\n            find: vt.some\n          }), Fg.config(t.movement.config(t, t.movement))]),\n          events: nu([Cr(Gg(), function (e, n) {\n            var t = n.event;\n            e.getSystem().getByDom(t.target).each(function (t) {\n              hd.highlight(e, t), n.stop(), br(e, Zg(), {\n                menu: e,\n                item: t\n              });\n            });\n          }), Cr(Wg(), function (t, e) {\n            var n = e.event.item;\n            hd.highlight(t, n);\n          })]),\n          components: e,\n          eventOrder: t.eventOrder,\n          domModification: {\n            attributes: {\n              role: \"menu\"\n            }\n          }\n        };\n      }\n    }),\n    ep = function ep(n, o, r, t) {\n      return tt(r, t).bind(function (t) {\n        return tt(n, t).bind(function (t) {\n          var e = ep(n, o, r, t);\n          return vt.some([t].concat(e));\n        });\n      }).getOr([]);\n    },\n    np = function np() {\n      function a(t) {\n        return e(t).bind(Km);\n      }\n      function n(t) {\n        return tt(c.get(), t);\n      }\n      var c = Po({}),\n        i = Po({}),\n        s = Po({}),\n        l = gc(),\n        u = Po({}),\n        e = function e(t) {\n          return tt(i.get(), t);\n        };\n      return {\n        setMenuBuilt: function setMenuBuilt(t, e) {\n          var n;\n          i.set(_lt(_lt({}, i.get()), ((n = {})[t] = {\n            type: \"prepared\",\n            menu: e\n          }, n)));\n        },\n        setContents: function setContents(t, e, n, o) {\n          l.set(t), c.set(n), i.set(e), u.set(o);\n          var r = function (t, e) {\n            var n = {};\n            J(t, function (t, e) {\n              St(t, function (t) {\n                n[t] = e;\n              });\n            });\n            var o = e,\n              r = _t(e, function (t, e) {\n                return {\n                  k: t,\n                  v: e\n                };\n              }),\n              i = dt(r, function (t, e) {\n                return [e].concat(ep(n, o, r, e));\n              });\n            return dt(n, function (t) {\n              return tt(i, t).getOr([t]);\n            });\n          }(o, n);\n          s.set(r);\n        },\n        expand: function expand(n) {\n          return tt(c.get(), n).map(function (t) {\n            var e = tt(s.get(), n).getOr([]);\n            return [t].concat(e);\n          });\n        },\n        refresh: function refresh(t) {\n          return tt(s.get(), t);\n        },\n        collapse: function collapse(t) {\n          return tt(s.get(), t).bind(function (t) {\n            return 1 < t.length ? vt.some(t.slice(1)) : vt.none();\n          });\n        },\n        lookupMenu: e,\n        lookupItem: n,\n        otherMenus: function otherMenus(t) {\n          var e = u.get();\n          return U(Ct(e), t);\n        },\n        getPrimary: function getPrimary() {\n          return l.get().bind(a);\n        },\n        getMenus: function getMenus() {\n          return i.get();\n        },\n        clear: function clear() {\n          c.set({}), i.set({}), s.set({}), l.clear();\n        },\n        isClear: function isClear() {\n          return l.get().isNone();\n        },\n        getTriggeringPath: function getTriggeringPath(t, u) {\n          var e = F(n(t).toArray(), function (t) {\n            return a(t).isSome();\n          });\n          return tt(s.get(), t).bind(function (t) {\n            var n = z(e.concat(t));\n            return function (t) {\n              for (var e = [], n = 0; n < t.length; n++) {\n                var o = t[n];\n                if (!o.isSome()) return vt.none();\n                e.push(o.getOrDie());\n              }\n              return vt.some(e);\n            }(H(n, function (t, e) {\n              return o = t, r = u, i = n.slice(0, e + 1), a(o).bind(function (e) {\n                return n = o, Q(c.get(), function (t, e) {\n                  return t === n;\n                }).bind(function (t) {\n                  return r(t).map(function (t) {\n                    return {\n                      triggeredMenu: e,\n                      triggeringItem: t,\n                      triggeringPath: i\n                    };\n                  });\n                });\n                var n;\n              }).fold(function () {\n                return mt(l.get(), t) ? [] : [vt.none()];\n              }, function (t) {\n                return [vt.some(t)];\n              });\n              var o, r, i;\n            }));\n          });\n        }\n      };\n    },\n    op = Km,\n    rp = rt(\"collapse-item\"),\n    ip = kl({\n      name: \"TieredMenu\",\n      configFields: [Zu(\"onExecute\"), Zu(\"onEscape\"), Qu(\"onOpenMenu\"), Qu(\"onOpenSubmenu\"), Ju(\"onRepositionMenu\"), Ju(\"onCollapseMenu\"), Eo(\"highlightImmediately\", !0), bo(\"data\", [mo(\"primary\"), mo(\"menus\"), mo(\"expansions\")]), Eo(\"fakeFocus\", !1), Ju(\"onHighlight\"), Ju(\"onHover\"), Yu(), mo(\"dom\"), Eo(\"navigateOnHover\", !0), Eo(\"stayInDom\", !1), Zs(\"tmenuBehaviours\", [Fg, hd, cd, Rg]), Eo(\"eventOrder\", {})],\n      apis: {\n        collapseMenu: function collapseMenu(t, e) {\n          t.collapseMenu(e);\n        },\n        highlightPrimary: function highlightPrimary(t, e) {\n          t.highlightPrimary(e);\n        },\n        repositionMenus: function repositionMenus(t, e) {\n          t.repositionMenus(e);\n        }\n      },\n      factory: function factory(a, t) {\n        function n(t) {\n          var o,\n            r,\n            e = (o = t, r = a.data.primary, dt(a.data.menus, function (t, e) {\n              function n() {\n                return tp.sketch(_lt(_lt({}, t), {\n                  value: e,\n                  markers: a.markers,\n                  fakeFocus: a.fakeFocus,\n                  onHighlight: a.onHighlight,\n                  focusManager: (a.fakeFocus ? jl : Ul)()\n                }));\n              }\n              return e === r ? {\n                type: \"prepared\",\n                menu: o.getSystem().build(n())\n              } : {\n                type: \"notbuilt\",\n                nbMenu: n\n              };\n            })),\n            n = dt(a.data.menus, function (t, e) {\n              return H(t.items, function (t) {\n                return \"separator\" === t.type ? [] : [t.data.value];\n              });\n            });\n          return g.setContents(a.data.primary, e, a.data.expansions, n), g.getPrimary();\n        }\n        function c(t) {\n          return Df.getValue(t).value;\n        }\n        function u(e, t) {\n          hd.highlight(e, t), hd.getHighlighted(t).orThunk(function () {\n            return hd.getFirst(t);\n          }).each(function (t) {\n            xr(e, t.element, Ri());\n          });\n        }\n        function s(e, t) {\n          return nt(B(t, function (t) {\n            return e.lookupMenu(t).bind(function (t) {\n              return \"prepared\" === t.type ? vt.some(t.menu) : vt.none();\n            });\n          }));\n        }\n        function l(e, t, n) {\n          var o = s(t, t.otherMenus(n));\n          St(o, function (t) {\n            $r(t.element, [a.markers.backgroundMenu]), a.stayInDom || Rg.remove(e, t);\n          });\n        }\n        function f(t, o) {\n          var e;\n          J((e = t, r.get().getOrThunk(function () {\n            var n = {},\n              t = F(vs(e.element, \".\" + a.markers.item), function (t) {\n                return \"true\" === ie(t, \"aria-haspopup\");\n              });\n            return St(t, function (t) {\n              e.getSystem().getByDom(t).each(function (t) {\n                var e = c(t);\n                n[e] = t;\n              });\n            }), r.set(n), n;\n          })), function (t, e) {\n            var n = wt(o, e);\n            oe(t.element, \"aria-expanded\", n);\n          });\n        }\n        function d(o, r, i) {\n          return vt.from(i[0]).bind(function (t) {\n            return r.lookupMenu(t).bind(function (t) {\n              if (\"notbuilt\" === t.type) return vt.none();\n              var e = t.menu,\n                n = s(r, i.slice(1));\n              return St(n, function (t) {\n                Yr(t.element, a.markers.backgroundMenu);\n              }), vn(e.element) || Rg.append(o, Eu(e)), $r(e.element, [a.markers.backgroundMenu]), u(o, e), l(o, r, i), vt.some(e);\n            });\n          });\n        }\n        var m,\n          e,\n          r = gc(),\n          g = np();\n        function i(r, i, u) {\n          if (void 0 === u && (u = m.HighlightSubmenu), i.hasConfigured(gd) && gd.isDisabled(i)) return vt.some(i);\n          var t = c(i);\n          return g.expand(t).bind(function (o) {\n            return f(r, o), vt.from(o[0]).bind(function (n) {\n              return g.lookupMenu(n).bind(function (t) {\n                var e = function (t, e, n) {\n                  if (\"notbuilt\" !== n.type) return n.menu;\n                  var o = t.getSystem().build(n.nbMenu());\n                  return g.setMenuBuilt(e, o), o;\n                }(r, n, t);\n                return vn(e.element) || Rg.append(r, Eu(e)), a.onOpenSubmenu(r, i, e, z(o)), u === m.HighlightSubmenu ? (hd.highlightFirst(e), d(r, g, o)) : (hd.dehighlightAll(e), vt.some(i));\n              });\n            });\n          });\n        }\n        function o(e, n) {\n          var t = c(n);\n          return g.collapse(t).bind(function (t) {\n            return f(e, t), d(e, g, t).map(function (t) {\n              return a.onCollapseMenu(e, n, t), t;\n            });\n          });\n        }\n        function p(n) {\n          return function (e, t) {\n            return Ru(t.getSource(), \".\" + a.markers.item).bind(function (t) {\n              return e.getSystem().getByDom(t).toOptional().bind(function (t) {\n                return n(e, t).map(D);\n              });\n            });\n          };\n        }\n        function h(t) {\n          return hd.getHighlighted(t).bind(hd.getHighlighted);\n        }\n        (e = m = {})[e.HighlightSubmenu = 0] = \"HighlightSubmenu\", e[e.HighlightParent = 1] = \"HighlightParent\";\n        var v = nu([Cr(Zg(), function (n, o) {\n            var t = o.event.item;\n            g.lookupItem(c(t)).each(function () {\n              var t = o.event.menu;\n              hd.highlight(n, t);\n              var e = c(o.event.item);\n              g.refresh(e).each(function (t) {\n                return l(n, g, t);\n              });\n            });\n          }), uu(function (e, t) {\n            var n = t.event.target;\n            e.getSystem().getByDom(n).each(function (t) {\n              0 === c(t).indexOf(\"collapse-item\") && o(e, t), i(e, t, m.HighlightSubmenu).fold(function () {\n                a.onExecute(e, t);\n              }, st);\n            });\n          }), ou(function (e, t) {\n            n(e).each(function (t) {\n              Rg.append(e, Eu(t)), a.onOpenMenu(e, t), a.highlightImmediately && u(e, t);\n            });\n          })].concat(a.navigateOnHover ? [Cr(Wg(), function (t, e) {\n            var n = e.event.item,\n              o = t,\n              r = c(n);\n            g.refresh(r).bind(function (t) {\n              return f(o, t), d(o, g, t);\n            }), i(t, n, m.HighlightParent), a.onHover(t, n);\n          })] : [])),\n          b = {\n            collapseMenu: function collapseMenu(e) {\n              h(e).each(function (t) {\n                o(e, t);\n              });\n            },\n            highlightPrimary: function highlightPrimary(e) {\n              g.getPrimary().each(function (t) {\n                u(e, t);\n              });\n            },\n            repositionMenus: function repositionMenus(o) {\n              g.getPrimary().bind(function (e) {\n                return h(o).bind(function (t) {\n                  var e = c(t),\n                    n = nt(B(Z(g.getMenus()), op));\n                  return g.getTriggeringPath(e, function (t) {\n                    return e = t, K(n, function (t) {\n                      return t.getSystem().isConnected() ? N(hd.getCandidates(t), function (t) {\n                        return c(t) === e;\n                      }) : vt.none();\n                    });\n                    var e;\n                  });\n                }).map(function (t) {\n                  return {\n                    primary: e,\n                    triggeringPath: t\n                  };\n                });\n              }).fold(function () {\n                vt.from(o.components()[0]).filter(function (t) {\n                  return \"menu\" === ie(t.element, \"role\");\n                }).each(function (t) {\n                  a.onRepositionMenu(o, t, []);\n                });\n              }, function (t) {\n                var e = t.primary,\n                  n = t.triggeringPath;\n                a.onRepositionMenu(o, e, n);\n              });\n            }\n          };\n        return {\n          uid: a.uid,\n          dom: a.dom,\n          markers: a.markers,\n          behaviours: el(a.tmenuBehaviours, [Fg.config({\n            mode: \"special\",\n            onRight: p(function (t, e) {\n              return Ol(e.element) ? vt.none() : i(t, e, m.HighlightSubmenu);\n            }),\n            onLeft: p(function (t, e) {\n              return Ol(e.element) ? vt.none() : o(t, e);\n            }),\n            onEscape: p(function (t, e) {\n              return o(t, e).orThunk(function () {\n                return a.onEscape(t, e).map(function () {\n                  return t;\n                });\n              });\n            }),\n            focusIn: function focusIn(e, t) {\n              g.getPrimary().each(function (t) {\n                xr(e, t.element, Ri());\n              });\n            }\n          }), hd.config({\n            highlightClass: a.markers.selectedMenu,\n            itemClass: a.markers.menu\n          }), cd.config({\n            find: function find(t) {\n              return hd.getHighlighted(t);\n            }\n          }), Rg.config({})]),\n          eventOrder: a.eventOrder,\n          apis: b,\n          events: v\n        };\n      },\n      extraApis: {\n        tieredData: function tieredData(t, e, n) {\n          return {\n            primary: t,\n            menus: e,\n            expansions: n\n          };\n        },\n        singleData: function singleData(t, e) {\n          return {\n            primary: t,\n            menus: sr(t, e),\n            expansions: {}\n          };\n        },\n        collapseItem: function collapseItem(t) {\n          return {\n            value: Ir(rp()),\n            meta: {\n              text: t\n            }\n          };\n        }\n      }\n    }),\n    up = kl({\n      name: \"InlineView\",\n      configFields: [mo(\"lazySink\"), Ju(\"onShow\"), Ju(\"onHide\"), Oo(\"onEscape\"), Zs(\"inlineBehaviours\", [bf, Df, ic]), To(\"fireDismissalEventInstead\", [Eo(\"event\", Yi())]), To(\"fireRepositionEventInstead\", [Eo(\"event\", qi())]), Eo(\"getRelated\", vt.none), Eo(\"isExtraPart\", T), Eo(\"eventOrder\", vt.none)],\n      factory: function factory(d, t) {\n        function e(n) {\n          bf.isOpen(n) && Df.getValue(n).each(function (t) {\n            switch (t.mode) {\n              case \"menu\":\n                bf.getState(n).each(ip.repositionMenus);\n                break;\n              case \"position\":\n                var e = d.lazySink(n).getOrDie();\n                ff.positionWithinBounds(e, n, t.config, t.getBounds());\n            }\n          });\n        }\n        function o(t, e, n, o) {\n          i(t, e, n, function () {\n            return o.map(function (t) {\n              return Mn(t);\n            });\n          });\n        }\n        function r(t, e, n, o) {\n          var r,\n            i,\n            u,\n            a,\n            c,\n            s = (r = d, i = t, u = e, a = o, c = \"horizontal\" === n.type ? {\n              layouts: {\n                onLtr: ha,\n                onRtl: va\n              }\n            } : {}, ip.sketch({\n              dom: {\n                tag: \"div\"\n              },\n              data: n.data,\n              markers: n.menu.markers,\n              highlightImmediately: n.menu.highlightImmediately,\n              onEscape: function onEscape() {\n                return bf.close(i), r.onEscape.map(function (t) {\n                  return t(i);\n                }), vt.some(!0);\n              },\n              onExecute: function onExecute() {\n                return vt.some(!0);\n              },\n              onOpenMenu: function onOpenMenu(t, e) {\n                ff.positionWithinBounds(l().getOrDie(), e, u, a());\n              },\n              onOpenSubmenu: function onOpenSubmenu(t, e, n, o) {\n                var r = l().getOrDie();\n                ff.position(r, n, {\n                  anchor: _lt({\n                    type: \"submenu\",\n                    item: e\n                  }, f(o))\n                });\n              },\n              onRepositionMenu: function onRepositionMenu(t, e, n) {\n                var o = l().getOrDie();\n                ff.positionWithinBounds(o, e, u, a()), St(n, function (t) {\n                  var e = f(t.triggeringPath);\n                  ff.position(o, t.triggeredMenu, {\n                    anchor: _lt({\n                      type: \"submenu\",\n                      item: t.triggeringItem\n                    }, e)\n                  });\n                });\n              }\n            }));\n          function l() {\n            return r.lazySink(i);\n          }\n          function f(t) {\n            return 2 === t.length ? c : {};\n          }\n          bf.open(t, s), Df.setValue(t, vt.some({\n            mode: \"menu\",\n            menu: s\n          }));\n        }\n        var i = function i(t, e, n, o) {\n            var r = d.lazySink(t).getOrDie();\n            bf.openWhileCloaked(t, e, function () {\n              return ff.positionWithinBounds(r, t, n, o());\n            }), Df.setValue(t, vt.some({\n              mode: \"position\",\n              config: n,\n              getBounds: o\n            }));\n          },\n          n = {\n            setContent: function setContent(t, e) {\n              bf.setContent(t, e);\n            },\n            showAt: function showAt(t, e, n) {\n              o(t, e, n, vt.none());\n            },\n            showWithin: o,\n            showWithinBounds: i,\n            showMenuAt: function showMenuAt(t, e, n) {\n              r(t, e, n, vt.none);\n            },\n            showMenuWithinBounds: r,\n            hide: function hide(t) {\n              bf.isOpen(t) && (Df.setValue(t, vt.none()), bf.close(t));\n            },\n            getContent: function getContent(t) {\n              return bf.getState(t);\n            },\n            reposition: e,\n            isOpen: bf.isOpen\n          };\n        return {\n          uid: d.uid,\n          dom: d.dom,\n          behaviours: el(d.inlineBehaviours, [bf.config({\n            isPartOf: function isPartOf(t, e, n) {\n              return Hu(e, n) || (o = n, d.getRelated(t).exists(function (t) {\n                return Hu(t, o);\n              }));\n              var o;\n            },\n            getAttachPoint: function getAttachPoint(t) {\n              return d.lazySink(t).getOrDie();\n            },\n            onOpen: function onOpen(t) {\n              d.onShow(t);\n            },\n            onClose: function onClose(t) {\n              d.onHide(t);\n            }\n          }), Df.config({\n            store: {\n              mode: \"memory\",\n              initialValue: vt.none()\n            }\n          }), ic.config({\n            channels: _lt(_lt({}, Xs(_lt({\n              isExtraPart: t.isExtraPart\n            }, d.fireDismissalEventInstead.map(function (t) {\n              return {\n                fireEventInstead: {\n                  event: t.event\n                }\n              };\n            }).getOr({})))), Ys(_lt(_lt({}, d.fireRepositionEventInstead.map(function (t) {\n              return {\n                fireEventInstead: {\n                  event: t.event\n                }\n              };\n            }).getOr({})), {\n              doReposition: e\n            })))\n          })]),\n          eventOrder: d.eventOrder,\n          apis: n\n        };\n      },\n      apis: {\n        showAt: function showAt(t, e, n, o) {\n          t.showAt(e, n, o);\n        },\n        showWithin: function showWithin(t, e, n, o, r) {\n          t.showWithin(e, n, o, r);\n        },\n        showWithinBounds: function showWithinBounds(t, e, n, o, r) {\n          t.showWithinBounds(e, n, o, r);\n        },\n        showMenuAt: function showMenuAt(t, e, n, o) {\n          t.showMenuAt(e, n, o);\n        },\n        showMenuWithinBounds: function showMenuWithinBounds(t, e, n, o, r) {\n          t.showMenuWithinBounds(e, n, o, r);\n        },\n        hide: function hide(t, e) {\n          t.hide(e);\n        },\n        isOpen: function isOpen(t, e) {\n          return t.isOpen(e);\n        },\n        getContent: function getContent(t, e) {\n          return t.getContent(e);\n        },\n        setContent: function setContent(t, e, n) {\n          t.setContent(e, n);\n        },\n        reposition: function reposition(t, e) {\n          t.reposition(e);\n        }\n      }\n    }),\n    ap = \"layout-inset\",\n    cp = function cp(t, e, n) {\n      return na(Om(t, e), t.y, n.insetNorth(), La(), \"north\", ra(t, {\n        top: 2\n      }), ap);\n    },\n    sp = function sp(t, e, n) {\n      return na(Om(t, e), Tm(t, e), n.insetSouth(), za(), \"south\", ra(t, {\n        bottom: 3\n      }), ap);\n    },\n    lp = tinymce.util.Tools.resolve(\"tinymce.util.Delay\"),\n    fp = kl({\n      name: \"Button\",\n      factory: function factory(t) {\n        function n(e) {\n          return tt(t.dom, \"attributes\").bind(function (t) {\n            return tt(t, e);\n          });\n        }\n        var e = Sm(t.action),\n          o = t.dom.tag;\n        return {\n          uid: t.uid,\n          dom: t.dom,\n          components: t.components,\n          events: e,\n          behaviours: Bf(t.buttonBehaviours, [Vg.config({}), Fg.config({\n            mode: \"execution\",\n            useSpace: !0,\n            useEnter: !0\n          })]),\n          domModification: {\n            attributes: function () {\n              if (\"button\" !== o) return {\n                role: n(\"role\").getOr(\"button\")\n              };\n              var t = n(\"type\").getOr(\"button\"),\n                e = n(\"role\").map(function (t) {\n                  return {\n                    role: t\n                  };\n                }).getOr({});\n              return _lt({\n                type: t\n              }, e);\n            }()\n          },\n          eventOrder: t.eventOrder\n        };\n      },\n      configFields: [Eo(\"uid\", void 0), mo(\"dom\"), Eo(\"components\", []), Af(\"buttonBehaviours\", [Vg, Fg]), wo(\"action\"), wo(\"role\"), Eo(\"eventOrder\", {})]\n    }),\n    dp = tinymce.util.Tools.resolve(\"tinymce.util.I18n\"),\n    mp = {\n      indent: !0,\n      outdent: !0,\n      \"table-insert-column-after\": !0,\n      \"table-insert-column-before\": !0,\n      \"paste-column-after\": !0,\n      \"paste-column-before\": !0,\n      \"unordered-list\": !0,\n      \"list-bull-circle\": !0,\n      \"list-bull-default\": !0,\n      \"list-bull-square\": !0\n    },\n    gp = \"temporary-placeholder\",\n    pp = {\n      success: \"checkmark\",\n      error: \"warning\",\n      err: \"error\",\n      warning: \"warning\",\n      warn: \"warning\",\n      info: \"info\"\n    },\n    hp = kl({\n      name: \"Notification\",\n      factory: function factory(e) {\n        function n(t) {\n          return {\n            dom: {\n              tag: \"div\",\n              classes: [\"tox-bar\"],\n              attributes: {\n                style: \"width: \" + t + \"%\"\n              }\n            }\n          };\n        }\n        function o(t) {\n          return {\n            dom: {\n              tag: \"div\",\n              classes: [\"tox-text\"],\n              innerHtml: t + \"%\"\n            }\n          };\n        }\n        var t,\n          r,\n          i,\n          u,\n          a = Hm({\n            dom: {\n              tag: \"p\",\n              innerHtml: e.translationProvider(e.text)\n            },\n            behaviours: ec([Rg.config({})])\n          }),\n          c = Hm({\n            dom: {\n              tag: \"div\",\n              classes: e.progress ? [\"tox-progress-bar\", \"tox-progress-indicator\"] : [\"tox-progress-bar\"]\n            },\n            components: [{\n              dom: {\n                tag: \"div\",\n                classes: [\"tox-bar-container\"]\n              },\n              components: [n(0)]\n            }, o(0)],\n            behaviours: ec([Rg.config({})])\n          }),\n          s = {\n            updateProgress: function updateProgress(t, e) {\n              t.getSystem().isConnected() && c.getOpt(t).each(function (t) {\n                Rg.set(t, [{\n                  dom: {\n                    tag: \"div\",\n                    classes: [\"tox-bar-container\"]\n                  },\n                  components: [n(e)]\n                }, o(e)]);\n              });\n            },\n            updateText: function updateText(t, e) {\n              var n;\n              t.getSystem().isConnected() && (n = a.get(t), Rg.set(n, [ri(e)]));\n            }\n          },\n          l = ft([e.icon.toArray(), e.level.toArray(), e.level.bind(function (t) {\n            return vt.from(pp[t]);\n          }).toArray()]),\n          f = Hm(fp.sketch({\n            dom: {\n              tag: \"button\",\n              classes: [\"tox-notification__dismiss\", \"tox-button\", \"tox-button--naked\", \"tox-button--icon\"]\n            },\n            components: [Xm(\"close\", {\n              tag: \"div\",\n              classes: [\"tox-icon\"],\n              attributes: {\n                \"aria-label\": e.translationProvider(\"Close\")\n              }\n            }, e.iconProvider)],\n            action: function action(t) {\n              e.onAction(t);\n            }\n          })),\n          d = [(t = l, r = {\n            tag: \"div\",\n            classes: [\"tox-notification__icon\"]\n          }, i = e.iconProvider, u = i(), Gm(r, N(t, function (t) {\n            return Tt(u, zm(t, u));\n          }).getOr(gp), u, vt.none())), {\n            dom: {\n              tag: \"div\",\n              classes: [\"tox-notification__body\"]\n            },\n            components: [a.asSpec()],\n            behaviours: ec([Rg.config({})])\n          }];\n        return {\n          uid: e.uid,\n          dom: {\n            tag: \"div\",\n            attributes: {\n              role: \"alert\"\n            },\n            classes: e.level.map(function (t) {\n              return [\"tox-notification\", \"tox-notification--in\", \"tox-notification--\" + t];\n            }).getOr([\"tox-notification\", \"tox-notification--in\"])\n          },\n          behaviours: ec([Vg.config({}), mm(\"notification-events\", [Cr(bi(), function (t) {\n            f.getOpt(t).each(Vg.focus);\n          })])]),\n          components: d.concat(e.progress ? [c.asSpec()] : []).concat(e.closeButton ? [f.asSpec()] : []),\n          apis: s\n        };\n      },\n      configFields: [wo(\"level\"), mo(\"progress\"), mo(\"icon\"), mo(\"onAction\"), mo(\"text\"), mo(\"iconProvider\"), mo(\"translationProvider\"), Fo(\"closeButton\", !0)],\n      apis: {\n        updateProgress: function updateProgress(t, e, n) {\n          t.updateProgress(e, n);\n        },\n        updateText: function updateText(t, e, n) {\n          t.updateText(e, n);\n        }\n      }\n    });\n  function vp(n, o) {\n    function r() {\n      b(i) || (clearTimeout(i), i = null);\n    }\n    var i = null;\n    return {\n      cancel: r,\n      throttle: function throttle() {\n        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n        r(), i = setTimeout(function () {\n          i = null, n.apply(null, t);\n        }, o);\n      }\n    };\n  }\n  function bp(o, t, e, n, r) {\n    var i = Ap(o, function (t) {\n      return (e = o).isBlock(n = t) || wt([\"BR\", \"IMG\", \"HR\", \"INPUT\"], n.nodeName) || \"false\" === e.getContentEditable(n);\n      var e, n;\n    });\n    return vt.from(i.backwards(t, e, n, r));\n  }\n  function yp(n, e) {\n    return Bp(Mt.fromDom(n.selection.getNode())).getOrThunk(function () {\n      var i,\n        _u2,\n        t = Mt.fromHtml('<span data-mce-autocompleter=\"1\" data-mce-bogus=\"1\"></span>', n.getDoc());\n      return Tn(t, Mt.fromDom(e.extractContents())), e.insertNode(t.dom), Yt(t).each(function (t) {\n        return t.dom.normalize();\n      }), i = hs, (_u2 = function u(t) {\n        for (var e = Kt(t), n = e.length - 1; 0 <= n; n--) {\n          var o = e[n];\n          if (i(o)) return vt.some(o);\n          var r = _u2(o);\n          if (r.isSome()) return r;\n        }\n        return vt.none();\n      })(t).map(function (t) {\n        var e;\n        n.selection.setCursorLocation(t.dom, \"img\" === Ft(e = t) ? 1 : ps(e).fold(function () {\n          return Kt(e).length;\n        }, function (t) {\n          return t.length;\n        }));\n      }), t;\n    });\n  }\n  function xp(t) {\n    return t.toString().replace(/\\u00A0/g, \" \").replace(/\\uFEFF/g, \"\");\n  }\n  function wp(t) {\n    return \"\" !== t && -1 !== \" \\xa0\\f\\n\\r\\t\\v\".indexOf(t);\n  }\n  function Sp(t, e) {\n    return t.substring(e.length);\n  }\n  function kp(o, t, r, e) {\n    return void 0 === e && (e = 0), Bp(Mt.fromDom(t.startContainer)).fold(function () {\n      return function (t, o, i, r) {\n        if (void 0 === r && (r = 0), !o.collapsed || 3 !== o.startContainer.nodeType) return vt.none();\n        var e = t.getParent(o.startContainer, t.isBlock) || t.getRoot();\n        return bp(t, o.startContainer, o.startOffset, function (t, r, e) {\n          return function (t, e) {\n            for (var n = r - 1; 0 <= n; n--) {\n              var o = t.charAt(n);\n              if (wp(o)) return vt.none();\n              if (o === e) break;\n            }\n            return vt.some(n);\n          }(e, i).getOr(r);\n        }, e).bind(function (t) {\n          var e = o.cloneRange();\n          if (e.setStart(t.container, t.offset), e.setEnd(o.endContainer, o.endOffset), e.collapsed) return vt.none();\n          var n = xp(e);\n          return 0 !== n.lastIndexOf(i) || Sp(n, i).length < r ? vt.none() : vt.some({\n            text: Sp(n, i),\n            range: e,\n            triggerChar: i\n          });\n        });\n      }(o, t, r, e);\n    }, function (t) {\n      var e = o.createRng();\n      e.selectNode(t.dom);\n      var n = xp(e);\n      return vt.some({\n        range: e,\n        text: Sp(n, r),\n        triggerChar: r\n      });\n    });\n  }\n  function Cp(t, e) {\n    return {\n      container: t,\n      offset: e\n    };\n  }\n  function Op(t) {\n    return ao(\"toolbarbutton\", Hp, t);\n  }\n  function _p(t) {\n    return ao(\"ToggleButton\", zp, t);\n  }\n  function Tp(e, t, n, o) {\n    void 0 === o && (o = {});\n    var r = t(),\n      i = e.selection.getRng().startContainer.nodeValue,\n      u = F(r.lookupByChar(n.triggerChar), function (t) {\n        return n.text.length >= t.minChars && t.matches.getOrThunk(function () {\n          return n = e.dom, function (t) {\n            var e = Ip(t.startContainer, t.startOffset);\n            return !bp(n, e.container, e.offset, function (t, e) {\n              return 0 === e ? -1 : e;\n            }, n.getRoot()).filter(function (t) {\n              return !wp(t.container.data.charAt(t.offset - 1));\n            }).isSome();\n          };\n          var n;\n        })(n.range, i, n.text);\n      });\n    if (0 === u.length) return vt.none();\n    var a = Mp.all(B(u, function (e) {\n      return e.fetch(n.text, e.maxResults, o).then(function (t) {\n        return {\n          matchText: n.text,\n          items: t,\n          columns: e.columns,\n          onAction: e.onAction,\n          highlightOn: e.highlightOn\n        };\n      });\n    }));\n    return vt.some({\n      lookupData: a,\n      context: n\n    });\n  }\n  var Ep,\n    Dp,\n    Ap = tinymce.util.Tools.resolve(\"tinymce.dom.TextSeeker\"),\n    Bp = function Bp(t) {\n      return Ru(t, \"[data-mce-autocompleter]\");\n    },\n    Mp = tinymce.util.Tools.resolve(\"tinymce.util.Promise\"),\n    Fp = function Fp(t) {\n      if (3 === t.nodeType) return Cp(t, t.data.length);\n      var e = t.childNodes;\n      return 0 < e.length ? Fp(e[e.length - 1]) : Cp(t, e.length);\n    },\n    Ip = function Ip(t, e) {\n      var n = t.childNodes;\n      return 0 < n.length && e < n.length ? Ip(n[e], 0) : 0 < n.length && 1 === t.nodeType && n.length === e ? Fp(n[n.length - 1]) : Cp(t, e);\n    },\n    Rp = $o([po(\"type\"), Co(\"text\")]),\n    Np = $o([Eo(\"type\", \"autocompleteitem\"), Eo(\"active\", !1), Eo(\"disabled\", !1), Eo(\"meta\", {}), po(\"value\"), Co(\"text\"), Co(\"icon\")]),\n    Pp = $o([po(\"type\"), po(\"ch\"), Ao(\"minChars\", 1), Eo(\"columns\", 1), Ao(\"maxResults\", 10), Oo(\"matches\"), vo(\"fetch\"), vo(\"onAction\"), Ro(\"highlightOn\", [], er)]),\n    Vp = [Fo(\"disabled\", !1), Co(\"tooltip\"), Co(\"icon\"), Co(\"text\"), Io(\"onSetup\", function () {\n      return st;\n    })],\n    Hp = $o([po(\"type\"), vo(\"onAction\")].concat(Vp)),\n    Lp = [Fo(\"active\", !1)].concat(Vp),\n    zp = $o(Lp.concat([po(\"type\"), vo(\"onAction\")])),\n    Up = [Io(\"predicate\", T), Mo(\"scope\", \"node\", [\"node\", \"editor\"]), Mo(\"position\", \"selection\", [\"node\", \"selection\", \"line\"])],\n    jp = Vp.concat([Eo(\"type\", \"contextformbutton\"), Eo(\"primary\", !1), vo(\"onAction\"), cr(\"original\", h)]),\n    Wp = Lp.concat([Eo(\"type\", \"contextformbutton\"), Eo(\"primary\", !1), vo(\"onAction\"), cr(\"original\", h)]),\n    Gp = Vp.concat([Eo(\"type\", \"contextformbutton\")]),\n    Xp = Lp.concat([Eo(\"type\", \"contextformtogglebutton\")]),\n    Yp = lo(\"type\", {\n      contextformbutton: jp,\n      contextformtogglebutton: Wp\n    }),\n    qp = $o([Eo(\"type\", \"contextform\"), Io(\"initValue\", rt(\"\")), Co(\"label\"), xo(\"commands\", Yp), So(\"launch\", lo(\"type\", {\n      contextformbutton: Gp,\n      contextformtogglebutton: Xp\n    }))].concat(Up)),\n    Kp = $o([Eo(\"type\", \"contexttoolbar\"), po(\"items\")].concat(Up));\n  function Jp(t) {\n    return tt(_h, t).getOr(kh);\n  }\n  function $p(t) {\n    return {\n      backgroundMenu: \"tox-background-menu\",\n      selectedMenu: \"tox-selected-menu\",\n      selectedItem: \"tox-collection__item--active\",\n      hasIcons: \"tox-menu--has-icons\",\n      menu: \"color\" === t ? \"tox-swatches\" : \"tox-menu\",\n      tieredMenu: \"tox-tiered-menu\"\n    };\n  }\n  function Qp(t) {\n    var e = $p(t);\n    return {\n      backgroundMenu: e.backgroundMenu,\n      selectedMenu: e.selectedMenu,\n      menu: e.menu,\n      selectedItem: e.selectedItem,\n      item: Jp(t)\n    };\n  }\n  function Zp(t, e, n) {\n    return {\n      dom: {\n        tag: \"div\",\n        classes: ft([[$p(n).tieredMenu]])\n      },\n      markers: Qp(n)\n    };\n  }\n  function th(e, n) {\n    return function (t) {\n      return B(p(t, n), function (t) {\n        return {\n          dom: e,\n          components: t\n        };\n      });\n    };\n  }\n  function eh(t, n) {\n    var o = [],\n      r = [];\n    return St(t, function (t, e) {\n      n(t, e) ? (0 < r.length && o.push(r), r = [], Tt(t.dom, \"innerHtml\") && r.push(t)) : r.push(t);\n    }), 0 < r.length && o.push(r), B(o, function (t) {\n      return {\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-collection__group\"]\n        },\n        components: t\n      };\n    });\n  }\n  function nh(e, n) {\n    return {\n      dom: {\n        tag: \"div\",\n        classes: [\"tox-menu\", \"tox-collection\"].concat(1 === e ? [\"tox-collection--list\"] : [\"tox-collection--grid\"])\n      },\n      components: [tp.parts.items({\n        preprocess: function preprocess(t) {\n          return \"auto\" !== e && 1 < e ? th({\n            tag: \"div\",\n            classes: [\"tox-collection__group\"]\n          }, e)(t) : eh(t, function (t, e) {\n            return \"separator\" === n[e].type;\n          });\n        }\n      })]\n    };\n  }\n  function oh(t) {\n    return d(t, function (t) {\n      return \"icon\" in t && void 0 !== t.icon;\n    });\n  }\n  function rh(t) {\n    return console.error(ur(t)), console.log(t), vt.none();\n  }\n  function ih(t, e, n, o, r) {\n    var i,\n      u = (i = n, {\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-collection\", \"tox-collection--horizontal\"]\n        },\n        components: [tp.parts.items({\n          preprocess: function preprocess(t) {\n            return eh(t, function (t, e) {\n              return \"separator\" === i[e].type;\n            });\n          }\n        })]\n      });\n    return {\n      value: t,\n      dom: u.dom,\n      components: u.components,\n      items: n\n    };\n  }\n  function uh(t, e, n, o, r) {\n    var i, u;\n    return \"color\" === r ? {\n      value: t,\n      dom: (i = {\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-menu\", \"tox-swatches-menu\"]\n        },\n        components: [{\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-swatches\"]\n          },\n          components: [tp.parts.items({\n            preprocess: \"auto\" !== o ? th({\n              tag: \"div\",\n              classes: [\"tox-swatches__row\"]\n            }, o) : h\n          })]\n        }]\n      }).dom,\n      components: i.components,\n      items: n\n    } : \"normal\" === r && \"auto\" === o ? {\n      value: t,\n      dom: (i = nh(o, n)).dom,\n      components: i.components,\n      items: n\n    } : \"normal\" === r && 1 === o ? {\n      value: t,\n      dom: (i = nh(1, n)).dom,\n      components: i.components,\n      items: n\n    } : \"normal\" === r ? {\n      value: t,\n      dom: (i = nh(o, n)).dom,\n      components: i.components,\n      items: n\n    } : \"listpreview\" !== r || \"auto\" === o ? {\n      value: t,\n      dom: {\n        tag: \"div\",\n        classes: ft([[(u = $p(r)).menu, \"tox-menu-\" + o + \"-column\"], e ? [u.hasIcons] : []])\n      },\n      components: Ih,\n      items: n\n    } : {\n      value: t,\n      dom: (i = {\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-menu\", \"tox-collection\", \"tox-collection--toolbar\", \"tox-collection--toolbar-lg\"]\n        },\n        components: [tp.parts.items({\n          preprocess: th({\n            tag: \"div\",\n            classes: [\"tox-collection__group\"]\n          }, o)\n        })]\n      }).dom,\n      components: i.components,\n      items: n\n    };\n  }\n  function ah(t, o, e) {\n    var r = vs(t.element, \".\" + e);\n    if (0 < r.length) {\n      var n = P(r, function (t) {\n        var e = t.dom.getBoundingClientRect().top,\n          n = r[0].dom.getBoundingClientRect().top;\n        return Math.abs(e - n) > o;\n      }).getOr(r.length);\n      return vt.some({\n        numColumns: n,\n        numRows: Math.ceil(r.length / n)\n      });\n    }\n    return vt.none();\n  }\n  function ch(t, e, n) {\n    t.getSystem().broadcastOn([Jh], {});\n  }\n  function sh(t) {\n    return t.getParam(\"height\", Math.max(t.getElement().offsetHeight, 200));\n  }\n  function lh(t) {\n    return t.getParam(\"width\", nv.DOM.getStyle(t.getElement(), \"width\"));\n  }\n  function fh(t) {\n    return vt.from(t.getParam(\"min_width\")).filter(u);\n  }\n  function dh(t) {\n    return vt.from(t.getParam(\"min_height\")).filter(u);\n  }\n  function mh(t) {\n    return vt.from(t.getParam(\"max_width\")).filter(u);\n  }\n  function gh(t) {\n    return vt.from(t.getParam(\"max_height\")).filter(u);\n  }\n  function ph(t) {\n    return !1 !== t.getParam(\"menubar\", !0, \"boolean\");\n  }\n  function hh(t) {\n    var e = t.getParam(\"toolbar\", !0),\n      n = !0 === e,\n      o = y(e),\n      r = c(e) && 0 < e.length;\n    return !rv(t) && (r || o || n);\n  }\n  function vh(e) {\n    var t = F(m(9, function (t) {\n      return e.getParam(\"toolbar\" + (t + 1), !1, \"string\");\n    }), function (t) {\n      return \"string\" == typeof t;\n    });\n    return 0 < t.length ? vt.some(t) : vt.none();\n  }\n  (Dp = Ep = {})[Dp.CLOSE_ON_EXECUTE = 0] = \"CLOSE_ON_EXECUTE\", Dp[Dp.BUBBLE_TO_SANDBOX = 1] = \"BUBBLE_TO_SANDBOX\";\n  var bh,\n    yh,\n    xh,\n    wh,\n    Sh = Ep,\n    kh = \"tox-menu-nav__js\",\n    Ch = \"tox-collection__item\",\n    Oh = \"tox-swatch\",\n    _h = {\n      normal: kh,\n      color: Oh\n    },\n    Th = \"tox-collection__item--enabled\",\n    Eh = \"tox-collection__item-icon\",\n    Dh = \"tox-collection__item-label\",\n    Ah = \"tox-collection__item-caret\",\n    Bh = \"tox-collection__item--active\",\n    Mh = \"tox-collection__item-container\",\n    Fh = \"tox-collection__item-container--row\",\n    Ih = [tp.parts.items({})],\n    Rh = [po(\"type\"), po(\"src\"), Co(\"alt\"), Ro(\"classes\", [], er)],\n    Nh = $o(Rh),\n    Ph = [po(\"type\"), po(\"text\"), Co(\"name\"), Ro(\"classes\", [\"tox-collection__item-label\"], er)],\n    Vh = $o(Ph),\n    Hh = Zn(function () {\n      return ro(\"type\", {\n        cardimage: Nh,\n        cardtext: Vh,\n        cardcontainer: Lh\n      });\n    }),\n    Lh = $o([po(\"type\"), Bo(\"direction\", \"horizontal\"), Bo(\"align\", \"left\"), Bo(\"valign\", \"middle\"), xo(\"items\", Hh)]),\n    zh = [Fo(\"disabled\", !1), Co(\"text\"), Co(\"shortcut\"), ar(\"value\", \"value\", Wn(function () {\n      return Ir(\"menuitem-value\");\n    }), Zo()), Eo(\"meta\", {})],\n    Uh = $o([po(\"type\"), Co(\"label\"), xo(\"items\", Hh), Io(\"onSetup\", function () {\n      return st;\n    }), Io(\"onAction\", st)].concat(zh)),\n    jh = $o([po(\"type\"), Fo(\"active\", !1), Co(\"icon\")].concat(zh)),\n    Wh = [po(\"type\"), po(\"fancytype\"), Io(\"onAction\", st)],\n    Gh = lo(\"fancytype\", {\n      inserttable: [Eo(\"initData\", {})].concat(Wh),\n      colorswatch: [No(\"initData\", {}, [Fo(\"allowCustomColors\", !0), _o(\"colors\", Zo())])].concat(Wh)\n    }),\n    Xh = $o([po(\"type\"), Io(\"onSetup\", function () {\n      return st;\n    }), Io(\"onAction\", st), Co(\"icon\")].concat(zh)),\n    Yh = $o([po(\"type\"), vo(\"getSubmenuItems\"), Io(\"onSetup\", function () {\n      return st;\n    }), Co(\"icon\")].concat(zh)),\n    qh = $o([po(\"type\"), Co(\"icon\"), Fo(\"active\", !1), Io(\"onSetup\", function () {\n      return st;\n    }), vo(\"onAction\")].concat(zh)),\n    Kh = function Kh(t) {\n      return e = Ir(\"unnamed-events\"), ec([mm(e, t)]);\n      var e;\n    },\n    Jh = Ir(\"tooltip.exclusive\"),\n    $h = Ir(\"tooltip.show\"),\n    Qh = Ir(\"tooltip.hide\"),\n    Zh = Object.freeze({\n      __proto__: null,\n      hideAllExclusive: ch,\n      setComponents: function setComponents(t, e, n, o) {\n        n.getTooltip().each(function (t) {\n          t.getSystem().isConnected() && Rg.set(t, o);\n        });\n      }\n    }),\n    tv = Object.freeze({\n      __proto__: null,\n      events: function events(r, i) {\n        function n(e) {\n          i.getTooltip().each(function (t) {\n            Vs(t), r.onHide(e, t), i.clearTooltip();\n          }), i.clearTimer();\n        }\n        return nu(ft([[Cr($h, function (o) {\n          i.resetTimer(function () {\n            var t,\n              e,\n              n = o;\n            i.isShowing() || (ch(n), t = r.lazySink(n).getOrDie(), e = n.getSystem().build({\n              dom: r.tooltipDom,\n              components: r.tooltipComponents,\n              events: nu(\"normal\" === r.mode ? [Cr(vi(), function (t) {\n                vr(n, $h);\n              }), Cr(pi(), function (t) {\n                vr(n, Qh);\n              })] : []),\n              behaviours: ec([Rg.config({})])\n            }), i.setTooltip(e), Ns(t, e), r.onShow(n, e), ff.position(t, e, {\n              anchor: r.anchor(n)\n            }));\n          }, r.delay);\n        }), Cr(Qh, function (t) {\n          i.resetTimer(function () {\n            n(t);\n          }, r.delay);\n        }), Cr(Fi(), function (t, e) {\n          e.universal || wt(e.channels, Jh) && n(t);\n        }), ru(function (t) {\n          n(t);\n        })], \"normal\" === r.mode ? [Cr(bi(), function (t) {\n          vr(t, $h);\n        }), Cr(Bi(), function (t) {\n          vr(t, Qh);\n        }), Cr(vi(), function (t) {\n          vr(t, $h);\n        }), Cr(pi(), function (t) {\n          vr(t, Qh);\n        })] : [Cr(Zi(), function (t, e) {\n          vr(t, $h);\n        }), Cr(tu(), function (t) {\n          vr(t, Qh);\n        })]]));\n      }\n    }),\n    ev = xa({\n      fields: [mo(\"lazySink\"), mo(\"tooltipDom\"), Eo(\"exclusive\", !0), Eo(\"tooltipComponents\", []), Eo(\"delay\", 300), Mo(\"mode\", \"normal\", [\"normal\", \"follow-highlight\"]), Eo(\"anchor\", function (t) {\n        return {\n          type: \"hotspot\",\n          hotspot: t,\n          layouts: {\n            onLtr: rt([$a, Ja, Xa, qa, Ya, Ka]),\n            onRtl: rt([$a, Ja, Xa, qa, Ya, Ka])\n          }\n        };\n      }), Ju(\"onHide\"), Ju(\"onShow\")],\n      name: \"tooltipping\",\n      active: tv,\n      state: Object.freeze({\n        __proto__: null,\n        init: function init() {\n          function n() {\n            o.on(clearTimeout);\n          }\n          var o = gc(),\n            t = gc(),\n            e = rt(\"not-implemented\");\n          return wu({\n            getTooltip: t.get,\n            isShowing: t.isSet,\n            setTooltip: t.set,\n            clearTooltip: t.clear,\n            clearTimer: n,\n            resetTimer: function resetTimer(t, e) {\n              n(), o.set(setTimeout(t, e));\n            },\n            readState: e\n          });\n        }\n      }),\n      apis: Zh\n    }),\n    nv = tinymce.util.Tools.resolve(\"tinymce.dom.DOMUtils\"),\n    ov = tinymce.util.Tools.resolve(\"tinymce.EditorManager\"),\n    rv = function rv(t) {\n      return vh(t).fold(function () {\n        return 0 < t.getParam(\"toolbar\", [], \"string[]\").length;\n      }, D);\n    };\n  function iv(t) {\n    return t.getParam(\"toolbar_mode\", \"\", \"string\");\n  }\n  function uv(t) {\n    return t.getParam(\"toolbar_location\", xh.auto, \"string\");\n  }\n  function av(t) {\n    return uv(t) === xh.bottom;\n  }\n  function cv(t) {\n    if (!t.inline) return vt.none();\n    var e = t.getParam(\"fixed_toolbar_container\", \"\", \"string\");\n    if (0 < e.length) return Iu(bn(), e);\n    var n = t.getParam(\"fixed_toolbar_container_target\");\n    return k(n) ? vt.some(Mt.fromDom(n)) : vt.none();\n  }\n  function sv(t) {\n    return t.inline && cv(t).isSome();\n  }\n  function lv(t) {\n    return cv(t).getOrThunk(function () {\n      return te(gn(Mt.fromDom(t.getElement())));\n    });\n  }\n  function fv(t) {\n    return t.inline && !ph(t) && !hh(t) && !rv(t);\n  }\n  function dv(t) {\n    return (t.getParam(\"toolbar_sticky\", !1, \"boolean\") || t.inline) && !sv(t) && !fv(t);\n  }\n  function mv(t, e) {\n    var n = t.outerContainer.element;\n    e && (t.mothership.broadcastOn([yf()], {\n      target: n\n    }), t.uiMothership.broadcastOn([yf()], {\n      target: n\n    })), t.mothership.broadcastOn([Kv], {\n      readonly: e\n    }), t.uiMothership.broadcastOn([Kv], {\n      readonly: e\n    });\n  }\n  function gv(t, e) {\n    t.on(\"init\", function () {\n      t.mode.isReadOnly() && mv(e, !0);\n    }), t.on(\"SwitchMode\", function () {\n      return mv(e, t.mode.isReadOnly());\n    }), t.getParam(\"readonly\", !1, \"boolean\") && t.setMode(\"readonly\");\n  }\n  function pv() {\n    var t;\n    return ic.config({\n      channels: ((t = {})[Kv] = {\n        schema: Jv,\n        onReceive: function onReceive(t, e) {\n          gd.set(t, e.readonly);\n        }\n      }, t)\n    });\n  }\n  function hv(t, e) {\n    var n = t.getApi(e);\n    return function (t) {\n      t(n);\n    };\n  }\n  function vv(n, o) {\n    return ou(function (t) {\n      hv(n, t)(function (t) {\n        var e = n.onSetup(t);\n        S(e) && o.set(e);\n      });\n    });\n  }\n  function bv(e, n) {\n    return ru(function (t) {\n      return hv(e, t)(n.get());\n    });\n  }\n  function yv(t, e, n, o) {\n    var r,\n      i,\n      u = Po(st);\n    return {\n      type: \"item\",\n      dom: e.dom,\n      components: tb(e.optComponents),\n      data: t.data,\n      eventOrder: Zv,\n      hasSubmenu: t.triggersSubmenu,\n      itemBehaviours: ec([mm(\"item-events\", [(r = t, i = n, uu(function (t, e) {\n        hv(r, t)(r.onAction), r.triggersSubmenu || i !== Sh.CLOSE_ON_EXECUTE || (vr(t, Vi()), e.stop());\n      })), vv(t, u), bv(t, u)]), gd.config({\n        disabled: function disabled() {\n          return t.disabled || o.isDisabled();\n        },\n        disableClass: \"tox-collection__item--state-disabled\"\n      }), pv(), Rg.config({})].concat(t.itemBehaviours))\n    };\n  }\n  function xv(t) {\n    return {\n      value: t.value,\n      meta: _lt({\n        text: t.text.getOr(\"\")\n      }, t.meta)\n    };\n  }\n  function wv(t, e, n) {\n    return Xm(t, {\n      tag: \"div\",\n      classes: n = void 0 === n ? [Eh] : n\n    }, e);\n  }\n  function Sv(t) {\n    return {\n      dom: {\n        tag: \"div\",\n        classes: [Dh]\n      },\n      components: [ri(dp.translate(t))]\n    };\n  }\n  function kv(t, e) {\n    return {\n      dom: {\n        tag: \"div\",\n        classes: e,\n        innerHtml: t\n      }\n    };\n  }\n  function Cv(t, e) {\n    return {\n      dom: {\n        tag: \"div\",\n        classes: [Dh]\n      },\n      components: [{\n        dom: {\n          tag: t.tag,\n          styles: t.styles\n        },\n        components: [ri(dp.translate(e))]\n      }]\n    };\n  }\n  function Ov(t) {\n    return {\n      dom: {\n        tag: \"div\",\n        classes: [\"tox-collection__item-accessory\"],\n        innerHtml: (n = eb.mac ? {\n          alt: \"&#x2325;\",\n          ctrl: \"&#x2303;\",\n          shift: \"&#x21E7;\",\n          meta: \"&#x2318;\",\n          access: \"&#x2303;&#x2325;\"\n        } : {\n          meta: \"Ctrl\",\n          access: \"Shift+Alt\"\n        }, e = B(t.split(\"+\"), function (t) {\n          var e = t.toLowerCase().trim();\n          return Tt(n, e) ? n[e] : t;\n        }), eb.mac ? e.join(\"\") : e.join(\"+\"))\n      }\n    };\n    var n, e;\n  }\n  function _v(t) {\n    return wv(\"checkmark\", t, [\"tox-collection__item-checkmark\"]);\n  }\n  function Tv(t) {\n    var e = t.map(function (t) {\n      return {\n        attributes: {\n          title: dp.translate(t)\n        }\n      };\n    }).getOr({});\n    return _lt({\n      tag: \"div\",\n      classes: [kh, Ch]\n    }, e);\n  }\n  function Ev(t, e, n, o) {\n    return void 0 === o && (o = vt.none()), \"color\" === t.presets ? (r = e, i = o, c = t.ariaLabel, s = t.value, {\n      dom: (u = t.iconContent.map(function (t) {\n        return e = r.icons, n = i, Um(t, o = e()).or(n).getOrThunk(Lm(o));\n        var e, n, o;\n      }).getOr(\"\"), a = {\n        tag: \"div\",\n        attributes: c.map(function (t) {\n          return {\n            title: r.translate(t)\n          };\n        }).getOr({}),\n        classes: [\"tox-swatch\"]\n      }, _lt(_lt({}, a), \"custom\" === s ? {\n        tag: \"button\",\n        classes: V(V([], a.classes, !0), [\"tox-swatches__picker-btn\"], !1),\n        innerHtml: u\n      } : \"remove\" === s ? {\n        classes: V(V([], a.classes, !0), [\"tox-swatch--remove\"], !1),\n        innerHtml: u\n      } : {\n        attributes: _lt(_lt({}, a.attributes), {\n          \"data-mce-color\": s\n        }),\n        styles: {\n          \"background-color\": s\n        }\n      })),\n      optComponents: []\n    }) : (l = t, f = e, d = o, m = {\n      tag: \"div\",\n      classes: [Eh]\n    }, g = n ? l.iconContent.map(function (t) {\n      return Xm(t, m, f.icons, d);\n    }).orThunk(function () {\n      return vt.some({\n        dom: m\n      });\n    }) : vt.none(), p = l.checkMark, h = vt.from(l.meta).fold(function () {\n      return Sv;\n    }, function (t) {\n      return Tt(t, \"style\") ? C(Cv, t.style) : Sv;\n    }), v = l.htmlContent.fold(function () {\n      return l.textContent.map(h);\n    }, function (t) {\n      return vt.some(kv(t, [Dh]));\n    }), {\n      dom: Tv(l.ariaLabel),\n      optComponents: [g, v, l.shortcutContent.map(Ov), p, l.caret]\n    });\n    var r, i, u, a, c, s, l, f, d, m, g, p, h, v;\n  }\n  function Dv(t, e) {\n    return tt(t, \"tooltipWorker\").map(function (n) {\n      return [ev.config({\n        lazySink: e.getSink,\n        tooltipDom: {\n          tag: \"div\",\n          classes: [\"tox-tooltip-worker-container\"]\n        },\n        tooltipComponents: [],\n        anchor: function anchor(t) {\n          return {\n            type: \"submenu\",\n            item: t,\n            overrides: {\n              maxHeightFunction: Nc\n            }\n          };\n        },\n        mode: \"follow-highlight\",\n        onShow: function onShow(e, t) {\n          n(function (t) {\n            ev.setComponents(e, [Ou({\n              element: Mt.fromDom(t)\n            })]);\n          });\n        }\n      })];\n    }).getOr([]);\n  }\n  function Av(t, e) {\n    var n = dp.translate(t),\n      o = nv.DOM.encode(n);\n    if (0 < e.length) {\n      var r = new RegExp(e.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"), \"gi\");\n      return o.replace(r, function (t) {\n        return '<span class=\"tox-autocompleter-highlight\">' + t + \"</span>\";\n      });\n    }\n    return o;\n  }\n  function Bv(t) {\n    return {\n      value: t\n    };\n  }\n  function Mv(t) {\n    return rb.test(t) || ib.test(t);\n  }\n  function Fv(t) {\n    var e = t.toString(16);\n    return (1 === e.length ? \"0\" + e : e).toUpperCase();\n  }\n  function Iv(t) {\n    return Bv(Fv(t.red) + Fv(t.green) + Fv(t.blue));\n  }\n  function Rv(t, e, n, o) {\n    return {\n      red: t,\n      green: e,\n      blue: n,\n      alpha: o\n    };\n  }\n  function Nv(t) {\n    var e = parseInt(t, 10);\n    return e.toString() === t && 0 <= e && e <= 255;\n  }\n  function Pv(t) {\n    var e,\n      n,\n      o,\n      r = (t.hue || 0) % 360,\n      i = t.saturation / 100,\n      u = t.value / 100,\n      i = ab(0, ub(i, 1)),\n      u = ab(0, ub(u, 1));\n    if (0 === i) return Rv(e = n = o = cb(255 * u), n, o, 1);\n    var a = r / 60,\n      c = u * i,\n      s = c * (1 - Math.abs(a % 2 - 1)),\n      l = u - c;\n    switch (Math.floor(a)) {\n      case 0:\n        e = c, n = s, o = 0;\n        break;\n      case 1:\n        e = s, n = c, o = 0;\n        break;\n      case 2:\n        e = 0, n = c, o = s;\n        break;\n      case 3:\n        e = 0, n = s, o = c;\n        break;\n      case 4:\n        e = s, n = 0, o = c;\n        break;\n      case 5:\n        e = c, n = 0, o = s;\n        break;\n      default:\n        e = n = o = 0;\n    }\n    return Rv(e = cb(255 * (e + l)), n = cb(255 * (n + l)), o = cb(255 * (o + l)), 1);\n  }\n  function Vv(t) {\n    var e,\n      n,\n      o = (e = {\n        value: t.value.replace(rb, function (t, e, n, o) {\n          return e + e + n + n + o + o;\n        })\n      }, null === (n = ib.exec(e.value)) ? [\"FFFFFF\", \"FF\", \"FF\", \"FF\"] : n);\n    return Rv(parseInt(o[1], 16), parseInt(o[2], 16), parseInt(o[3], 16), 1);\n  }\n  function Hv(t, e, n, o) {\n    return Rv(parseInt(t, 10), parseInt(e, 10), parseInt(n, 10), parseFloat(o));\n  }\n  function Lv(t) {\n    if (\"transparent\" === t) return vt.some(Rv(0, 0, 0, 0));\n    var e = sb.exec(t);\n    if (null !== e) return vt.some(Hv(e[1], e[2], e[3], \"1\"));\n    var n = lb.exec(t);\n    return null !== n ? vt.some(Hv(n[1], n[2], n[3], n[4])) : vt.none();\n  }\n  function zv(t) {\n    return \"rgba(\" + t.red + \",\" + t.green + \",\" + t.blue + \",\" + t.alpha + \")\";\n  }\n  function Uv(t, e) {\n    return t.fire(\"ResizeContent\", e);\n  }\n  function jv(t, e, n) {\n    return {\n      hue: t,\n      saturation: e,\n      value: n\n    };\n  }\n  function Wv(t) {\n    var e,\n      n,\n      o = 0,\n      r = t.red / 255,\n      i = t.green / 255,\n      u = t.blue / 255,\n      a = Math.min(r, Math.min(i, u)),\n      c = Math.max(r, Math.max(i, u));\n    return a === c ? jv(0, 0, 100 * (o = a)) : (n = 60 * ((r === a ? 3 : u === a ? 1 : 5) - (r === a ? i - u : u === a ? r - i : u - r) / (c - a)), e = (c - a) / c, o = c, jv(Math.round(n), Math.round(100 * e), Math.round(100 * o)));\n  }\n  function Gv(t) {\n    return Iv(Pv(t));\n  }\n  function Xv(o) {\n    return (Mv(e = o) ? vt.some({\n      value: (Dt(t = e, \"#\") ? t.substring(\"#\".length) : t).toUpperCase()\n    }) : vt.none()).orThunk(function () {\n      return Lv(o).map(Iv);\n    }).getOrThunk(function () {\n      var t = document.createElement(\"canvas\");\n      t.height = 1, t.width = 1;\n      var e = t.getContext(\"2d\");\n      e.clearRect(0, 0, t.width, t.height), e.fillStyle = \"#FFFFFF\", e.fillStyle = o, e.fillRect(0, 0, 1, 1);\n      var n = e.getImageData(0, 0, 1, 1).data;\n      return Iv(Rv(n[0], n[1], n[2], n[3]));\n    });\n    var t, e;\n  }\n  (yh = bh = bh || {})[\"default\"] = \"wrap\", yh.floating = \"floating\", yh.sliding = \"sliding\", yh.scrolling = \"scrolling\", (wh = xh = xh || {}).auto = \"auto\", wh.top = \"top\", wh.bottom = \"bottom\";\n  function Yv(t) {\n    return gd.config({\n      disabled: t,\n      disableClass: \"tox-tbtn--disabled\"\n    });\n  }\n  var qv,\n    Kv = \"silver.readonly\",\n    Jv = $o([go(\"readonly\", nr)]),\n    $v = function $v(t) {\n      return gd.config({\n        disabled: t\n      });\n    },\n    Qv = function Qv(t) {\n      return gd.config({\n        disabled: t,\n        disableClass: \"tox-tbtn--disabled\",\n        useNative: !1\n      });\n    },\n    Zv = ((qv = {})[Ii()] = [\"disabling\", \"alloy.base.behaviour\", \"toggling\", \"item-events\"], qv),\n    tb = nt,\n    eb = tinymce.util.Tools.resolve(\"tinymce.Env\"),\n    nb = function nb(t, a) {\n      return B(t, function (t) {\n        switch (t.type) {\n          case \"cardcontainer\":\n            return r = nb((o = t).items, a), i = \"vertical\" === o.direction ? \"tox-collection__item-container--column\" : Fh, u = \"left\" === o.align ? \"tox-collection__item-container--align-left\" : \"tox-collection__item-container--align-right\", {\n              dom: {\n                tag: \"div\",\n                classes: [Mh, i, u, function () {\n                  switch (o.valign) {\n                    case \"top\":\n                      return \"tox-collection__item-container--valign-top\";\n                    case \"middle\":\n                      return \"tox-collection__item-container--valign-middle\";\n                    case \"bottom\":\n                      return \"tox-collection__item-container--valign-bottom\";\n                  }\n                }()]\n              },\n              components: r\n            };\n          case \"cardimage\":\n            return n = t.src, {\n              dom: {\n                tag: \"img\",\n                classes: t.classes,\n                attributes: {\n                  src: n,\n                  alt: t.alt.getOr(\"\")\n                }\n              }\n            };\n          case \"cardtext\":\n            var e = t.name.exists(function (t) {\n              return wt(a.cardText.highlightOn, t);\n            }) ? vt.from(a.cardText.matchText).getOr(\"\") : \"\";\n            return kv(Av(t.text, e), t.classes);\n        }\n        var n, o, r, i, u;\n      });\n    },\n    ob = al(qg(), Kg()),\n    rb = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,\n    ib = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i,\n    ub = Math.min,\n    ab = Math.max,\n    cb = Math.round,\n    sb = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/,\n    lb = /^rgba\\((\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d?(?:\\.\\d+)?)\\)/,\n    fb = Rv(255, 0, 0, 1),\n    db = tinymce.util.Tools.resolve(\"tinymce.util.LocalStorage\"),\n    mb = \"tinymce-custom-colors\";\n  function gb(t) {\n    return !1 !== t.getParam(\"custom_colors\");\n  }\n  function pb(t) {\n    var e = t.getParam(\"color_map\");\n    return void 0 !== e ? function (t) {\n      for (var e = [], n = 0; n < t.length; n += 2) e.push({\n        text: t[n + 1],\n        value: \"#\" + Xv(t[n]).value,\n        type: \"choiceitem\"\n      });\n      return e;\n    }(e) : Bb;\n  }\n  function hb(t) {\n    Mb.add(t);\n  }\n  function vb(t) {\n    var e,\n      n = (e = pb(t).length, Math.max(5, Math.ceil(Math.sqrt(e))));\n    return t.getParam(\"color_cols\", n, \"number\");\n  }\n  function bb(t) {\n    var e = \"choiceitem\",\n      n = {\n        type: e,\n        text: \"Remove color\",\n        icon: \"color-swatch-remove-color\",\n        value: \"remove\"\n      };\n    return t ? [n, {\n      type: e,\n      text: \"Custom color\",\n      icon: \"color-picker\",\n      value: \"custom\"\n    }] : [n];\n  }\n  function yb(e, n, t, o) {\n    \"custom\" === t ? Ib(e)(function (t) {\n      t.each(function (t) {\n        hb(t), e.execCommand(\"mceApplyTextcolor\", n, t), o(t);\n      });\n    }, Fb) : \"remove\" === t ? (o(\"\"), e.execCommand(\"mceRemoveTextcolor\", n)) : (o(t), e.execCommand(\"mceApplyTextcolor\", n, t));\n  }\n  function xb(t, e) {\n    return t.concat(B(Mb.state(), function (t) {\n      return {\n        type: Ab,\n        text: t,\n        value: t\n      };\n    }).concat(bb(e)));\n  }\n  function wb(e, n) {\n    return function (t) {\n      t(xb(e, n));\n    };\n  }\n  function Sb(t, e, n) {\n    t.setIconFill(\"forecolor\" === e ? \"tox-icon-text-color__color\" : \"tox-icon-highlight-bg-color__color\", n);\n  }\n  function kb(i, n, u, t, o) {\n    i.ui.registry.addSplitButton(n, {\n      tooltip: t,\n      presets: \"color\",\n      icon: \"forecolor\" === n ? \"text-color\" : \"highlight-bg-color\",\n      select: function select(n) {\n        var o,\n          r = u;\n        return i.dom.getParents(i.selection.getStart(), function (t) {\n          var e;\n          (e = t.style[\"forecolor\" === r ? \"color\" : \"background-color\"]) && (o = o || e);\n        }), vt.from(o).bind(function (t) {\n          return Lv(t).map(function (t) {\n            var e = Iv(t).value;\n            return ut(n.toLowerCase(), e);\n          });\n        }).getOr(!1);\n      },\n      columns: vb(i),\n      fetch: wb(pb(i), gb(i)),\n      onAction: function onAction(t) {\n        yb(i, u, o.get(), st);\n      },\n      onItemAction: function onItemAction(t, e) {\n        yb(i, u, e, function (t) {\n          o.set(t), i.fire(\"TextColorChange\", {\n            name: n,\n            color: t\n          });\n        });\n      },\n      onSetup: function onSetup(e) {\n        function t(t) {\n          t.name === n && Sb(e, t.name, t.color);\n        }\n        return Sb(e, n, o.get()), i.on(\"TextColorChange\", t), function () {\n          i.off(\"TextColorChange\", t);\n        };\n      }\n    });\n  }\n  function Cb(e, t, n, o) {\n    e.ui.registry.addNestedMenuItem(t, {\n      text: o,\n      icon: \"forecolor\" === t ? \"text-color\" : \"highlight-bg-color\",\n      getSubmenuItems: function getSubmenuItems() {\n        return [{\n          type: \"fancymenuitem\",\n          fancytype: \"colorswatch\",\n          onAction: function onAction(t) {\n            yb(e, n, t.value, st);\n          }\n        }];\n      }\n    });\n  }\n  function Ob(t, e, n, o, r, i, u, a) {\n    return uh(t, oh(e), Rb(e, n, o, \"color\" !== r ? \"normal\" : \"color\", i, u, a), o, r);\n  }\n  function _b(t, e) {\n    var n = Qp(e);\n    return 1 === t ? {\n      mode: \"menu\",\n      moveOnTab: !0\n    } : \"auto\" === t ? {\n      mode: \"grid\",\n      selector: \".\" + n.item,\n      initSize: {\n        numColumns: 1,\n        numRows: 1\n      }\n    } : {\n      mode: \"matrix\",\n      rowSelector: \".\" + (\"color\" === e ? \"tox-swatches__row\" : \"tox-collection__group\")\n    };\n  }\n  function Tb(t, e) {\n    return ri(e + \"x\" + t);\n  }\n  var Eb,\n    Db,\n    Ab = \"choiceitem\",\n    Bb = [{\n      type: Ab,\n      text: \"Light Green\",\n      value: \"#BFEDD2\"\n    }, {\n      type: Ab,\n      text: \"Light Yellow\",\n      value: \"#FBEEB8\"\n    }, {\n      type: Ab,\n      text: \"Light Red\",\n      value: \"#F8CAC6\"\n    }, {\n      type: Ab,\n      text: \"Light Purple\",\n      value: \"#ECCAFA\"\n    }, {\n      type: Ab,\n      text: \"Light Blue\",\n      value: \"#C2E0F4\"\n    }, {\n      type: Ab,\n      text: \"Green\",\n      value: \"#2DC26B\"\n    }, {\n      type: Ab,\n      text: \"Yellow\",\n      value: \"#F1C40F\"\n    }, {\n      type: Ab,\n      text: \"Red\",\n      value: \"#E03E2D\"\n    }, {\n      type: Ab,\n      text: \"Purple\",\n      value: \"#B96AD9\"\n    }, {\n      type: Ab,\n      text: \"Blue\",\n      value: \"#3598DB\"\n    }, {\n      type: Ab,\n      text: \"Dark Turquoise\",\n      value: \"#169179\"\n    }, {\n      type: Ab,\n      text: \"Orange\",\n      value: \"#E67E23\"\n    }, {\n      type: Ab,\n      text: \"Dark Red\",\n      value: \"#BA372A\"\n    }, {\n      type: Ab,\n      text: \"Dark Purple\",\n      value: \"#843FA1\"\n    }, {\n      type: Ab,\n      text: \"Dark Blue\",\n      value: \"#236FA1\"\n    }, {\n      type: Ab,\n      text: \"Light Gray\",\n      value: \"#ECF0F1\"\n    }, {\n      type: Ab,\n      text: \"Medium Gray\",\n      value: \"#CED4D9\"\n    }, {\n      type: Ab,\n      text: \"Gray\",\n      value: \"#95A5A6\"\n    }, {\n      type: Ab,\n      text: \"Dark Gray\",\n      value: \"#7E8C8D\"\n    }, {\n      type: Ab,\n      text: \"Navy Blue\",\n      value: \"#34495E\"\n    }, {\n      type: Ab,\n      text: \"Black\",\n      value: \"#000000\"\n    }, {\n      type: Ab,\n      text: \"White\",\n      value: \"#ffffff\"\n    }],\n    Mb = function (n) {\n      void 0 === n && (n = 10);\n      function o(t) {\n        i.splice(t, 1);\n      }\n      var t,\n        e = db.getItem(mb),\n        r = y(e) ? JSON.parse(e) : [],\n        i = n - (t = r).length < 0 ? t.slice(0, n) : t;\n      return {\n        add: function add(t) {\n          var e;\n          (-1 === (e = l(i, t)) ? vt.none() : vt.some(e)).each(o), i.unshift(t), i.length > n && i.pop(), db.setItem(mb, JSON.stringify(i));\n        },\n        state: function state() {\n          return i.slice(0);\n        }\n      };\n    }(10),\n    Fb = \"#000000\",\n    Ib = function Ib(r) {\n      return function (n, t) {\n        var o = !1;\n        r.windowManager.open({\n          title: \"Color Picker\",\n          size: \"normal\",\n          body: {\n            type: \"panel\",\n            items: [{\n              type: \"colorpicker\",\n              name: \"colorpicker\",\n              label: \"Color\"\n            }]\n          },\n          buttons: [{\n            type: \"cancel\",\n            name: \"cancel\",\n            text: \"Cancel\"\n          }, {\n            type: \"submit\",\n            name: \"save\",\n            text: \"Save\",\n            primary: !0\n          }],\n          initialData: {\n            colorpicker: t\n          },\n          onAction: function onAction(t, e) {\n            \"hex-valid\" === e.name && (o = e.value);\n          },\n          onSubmit: function onSubmit(t) {\n            var e = t.getData().colorpicker;\n            o ? (n(vt.from(e)), t.close()) : r.windowManager.alert(r.translate([\"Invalid hex color code: {0}\", e]));\n          },\n          onClose: st,\n          onCancel: function onCancel() {\n            n(vt.none());\n          }\n        });\n      };\n    },\n    Rb = function Rb(n, o, r, i, u, a, c) {\n      return nt(B(n, function (e) {\n        return \"choiceitem\" === e.type ? ao(\"choicemenuitem\", jh, e).fold(rh, function (t) {\n          return vt.some(function (e, t, n, o, r, i, u, a) {\n            void 0 === a && (a = !0);\n            var c = Ev({\n              presets: n,\n              textContent: t ? e.text : vt.none(),\n              htmlContent: vt.none(),\n              ariaLabel: e.text,\n              iconContent: e.icon,\n              shortcutContent: t ? e.shortcut : vt.none(),\n              checkMark: t ? vt.some(_v(u.icons)) : vt.none(),\n              caret: vt.none(),\n              value: e.value\n            }, u, a);\n            return Yo(yv({\n              data: xv(e),\n              disabled: e.disabled,\n              getApi: function getApi(e) {\n                return {\n                  setActive: function setActive(t) {\n                    zg.set(e, t);\n                  },\n                  isActive: function isActive() {\n                    return zg.isOn(e);\n                  },\n                  isDisabled: function isDisabled() {\n                    return gd.isDisabled(e);\n                  },\n                  setDisabled: function setDisabled(t) {\n                    return gd.set(e, t);\n                  }\n                };\n              },\n              onAction: function onAction(t) {\n                return o(e.value);\n              },\n              onSetup: function onSetup(t) {\n                return t.setActive(r), st;\n              },\n              triggersSubmenu: !1,\n              itemBehaviours: []\n            }, c, i, u), {\n              toggling: {\n                toggleClass: Th,\n                toggleOnExecute: !1,\n                selected: e.active\n              }\n            });\n          }(t, 1 === r, i, o, a(e.value), u, c, oh(n)));\n        }) : vt.none();\n      }));\n    },\n    Nb = Ir(\"cell-over\"),\n    Pb = Ir(\"cell-execute\"),\n    Vb = {\n      inserttable: function inserttable(u) {\n        var t = Ir(\"size-label\"),\n          a = function (t) {\n            for (var e = [], n = 0; n < 10; n++) {\n              for (var o = [], r = 0; r < 10; r++) o.push(function (e, n, t) {\n                function o(t) {\n                  return br(t, Pb, {\n                    row: e,\n                    col: n\n                  });\n                }\n                function r(t, e) {\n                  e.stop(), o(t);\n                }\n                var i;\n                return Tu({\n                  dom: {\n                    tag: \"div\",\n                    attributes: ((i = {\n                      role: \"button\"\n                    })[\"aria-labelledby\"] = t, i)\n                  },\n                  behaviours: ec([mm(\"insert-table-picker-cell\", [Cr(vi(), Vg.focus), Cr(Ii(), o), Cr(Ci(), r), Cr(Ni(), r)]), zg.config({\n                    toggleClass: \"tox-insert-table-picker__selected\",\n                    toggleOnExecute: !1\n                  }), Vg.config({\n                    onFocus: function onFocus(t) {\n                      return br(t, Nb, {\n                        row: e,\n                        col: n\n                      });\n                    }\n                  })])\n                });\n              }(n, r, t));\n              e.push(o);\n            }\n            return e;\n          }(t),\n          e = Tb(0, 0),\n          c = Hm({\n            dom: {\n              tag: \"span\",\n              classes: [\"tox-insert-table-picker__label\"],\n              attributes: {\n                id: t\n              }\n            },\n            components: [e],\n            behaviours: ec([Rg.config({})])\n          });\n        return {\n          type: \"widget\",\n          data: {\n            value: Ir(\"widget-id\")\n          },\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-fancymenuitem\"]\n          },\n          autofocus: !0,\n          components: [ob.widget({\n            dom: {\n              tag: \"div\",\n              classes: [\"tox-insert-table-picker\"]\n            },\n            components: H(a, function (t) {\n              return B(t, Eu);\n            }).concat(c.asSpec()),\n            behaviours: ec([mm(\"insert-table-picker\", [ou(function (t) {\n              Rg.set(c.get(t), [e]);\n            }), Er(Nb, function (t, e, n) {\n              var o = n.event,\n                r = o.row,\n                i = o.col;\n              !function (t, e, n) {\n                for (var o = 0; o < 10; o++) for (var r = 0; r < 10; r++) zg.set(t[o][r], o <= e && r <= n);\n              }(a, r, i), Rg.set(c.get(t), [Tb(r + 1, i + 1)]);\n            }), Er(Pb, function (t, e, n) {\n              var o = n.event,\n                r = o.row,\n                i = o.col;\n              u.onAction({\n                numRows: r + 1,\n                numColumns: i + 1\n              }), vr(t, Vi());\n            })]), Fg.config({\n              initSize: {\n                numRows: 10,\n                numColumns: 10\n              },\n              mode: \"flatgrid\",\n              selector: '[role=\"button\"]'\n            })])\n          })]\n        };\n      },\n      colorswatch: function colorswatch(e, t) {\n        var n,\n          o,\n          r,\n          i = (o = t, r = (n = e).initData.allowCustomColors && o.colorinput.hasCustomColors(), n.initData.colors.fold(function () {\n            return xb(o.colorinput.getColors(), r);\n          }, function (t) {\n            return t.concat(bb(r));\n          })),\n          u = t.colorinput.getColorCols(),\n          a = Ob(Ir(\"menu-value\"), i, function (t) {\n            e.onAction({\n              value: t\n            });\n          }, u, \"color\", Sh.CLOSE_ON_EXECUTE, T, t.shared.providers),\n          c = _lt(_lt({}, a), {\n            markers: Qp(\"color\"),\n            movement: _b(u, \"color\")\n          });\n        return {\n          type: \"widget\",\n          data: {\n            value: Ir(\"widget-id\")\n          },\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-fancymenuitem\"]\n          },\n          autofocus: !0,\n          components: [ob.widget(tp.sketch(c))]\n        };\n      }\n    },\n    Hb = function Hb(t) {\n      var e = t.text.fold(function () {\n        return {};\n      }, function (t) {\n        return {\n          innerHtml: t\n        };\n      });\n      return {\n        type: \"separator\",\n        dom: _lt({\n          tag: \"div\",\n          classes: [Ch, \"tox-collection__group-heading\"]\n        }, e),\n        components: []\n      };\n    },\n    Lb = function Lb(t, e, n, o) {\n      void 0 === o && (o = !0);\n      var r = Ev({\n        presets: \"normal\",\n        iconContent: t.icon,\n        textContent: t.text,\n        htmlContent: vt.none(),\n        ariaLabel: t.text,\n        caret: vt.none(),\n        checkMark: vt.none(),\n        shortcutContent: t.shortcut\n      }, n, o);\n      return yv({\n        data: xv(t),\n        getApi: function getApi(e) {\n          return {\n            isDisabled: function isDisabled() {\n              return gd.isDisabled(e);\n            },\n            setDisabled: function setDisabled(t) {\n              return gd.set(e, t);\n            }\n          };\n        },\n        disabled: t.disabled,\n        onAction: t.onAction,\n        onSetup: t.onSetup,\n        triggersSubmenu: !1,\n        itemBehaviours: []\n      }, r, e, n);\n    },\n    zb = function zb(t, e, n, o, r) {\n      void 0 === o && (o = !0);\n      var i = (r = void 0 !== r && r) ? wv(\"chevron-down\", n.icons, [Ah]) : wv(\"chevron-right\", n.icons, [Ah]),\n        u = Ev({\n          presets: \"normal\",\n          iconContent: t.icon,\n          textContent: t.text,\n          htmlContent: vt.none(),\n          ariaLabel: t.text,\n          caret: vt.some(i),\n          checkMark: vt.none(),\n          shortcutContent: t.shortcut\n        }, n, o);\n      return yv({\n        data: xv(t),\n        getApi: function getApi(e) {\n          return {\n            isDisabled: function isDisabled() {\n              return gd.isDisabled(e);\n            },\n            setDisabled: function setDisabled(t) {\n              return gd.set(e, t);\n            }\n          };\n        },\n        disabled: t.disabled,\n        onAction: st,\n        onSetup: t.onSetup,\n        triggersSubmenu: !0,\n        itemBehaviours: []\n      }, u, e, n);\n    },\n    Ub = function Ub(t, e, n, o) {\n      void 0 === o && (o = !0);\n      var r = Ev({\n        iconContent: t.icon,\n        textContent: t.text,\n        htmlContent: vt.none(),\n        ariaLabel: t.text,\n        checkMark: vt.some(_v(n.icons)),\n        caret: vt.none(),\n        shortcutContent: t.shortcut,\n        presets: \"normal\",\n        meta: t.meta\n      }, n, o);\n      return Yo(yv({\n        data: xv(t),\n        disabled: t.disabled,\n        getApi: function getApi(e) {\n          return {\n            setActive: function setActive(t) {\n              zg.set(e, t);\n            },\n            isActive: function isActive() {\n              return zg.isOn(e);\n            },\n            isDisabled: function isDisabled() {\n              return gd.isDisabled(e);\n            },\n            setDisabled: function setDisabled(t) {\n              return gd.set(e, t);\n            }\n          };\n        },\n        onAction: t.onAction,\n        onSetup: t.onSetup,\n        triggersSubmenu: !1,\n        itemBehaviours: []\n      }, r, e, n), {\n        toggling: {\n          toggleClass: Th,\n          toggleOnExecute: !1,\n          selected: t.active\n        }\n      });\n    },\n    jb = function jb(e, n) {\n      return tt(Vb, e.fancytype).map(function (t) {\n        return t(e, n);\n      });\n    };\n  function Wb(t, u, a, e, c, s, l) {\n    var n = 1 === e,\n      o = !n || oh(t);\n    return nt(B(t, function (t) {\n      switch (t.type) {\n        case \"separator\":\n          return ao(\"Autocompleter.Separator\", Rp, t).fold(rh, function (t) {\n            return vt.some(Hb(t));\n          });\n        case \"cardmenuitem\":\n          return ao(\"cardmenuitem\", Uh, t).fold(rh, function (e) {\n            return vt.some((t = _lt(_lt({}, e), {\n              onAction: function onAction(t) {\n                e.onAction(t), a(e.value, e.meta);\n              }\n            }), n = c, o = s, r = {\n              itemBehaviours: Dv(e.meta, s),\n              cardText: {\n                matchText: u,\n                highlightOn: l\n              }\n            }, i = {\n              dom: Tv(t.label),\n              optComponents: [vt.some({\n                dom: {\n                  tag: \"div\",\n                  classes: [Mh, Fh]\n                },\n                components: nb(t.items, r)\n              })]\n            }, yv({\n              data: xv(_lt({\n                text: vt.none()\n              }, t)),\n              disabled: t.disabled,\n              getApi: function getApi(n) {\n                return {\n                  isDisabled: function isDisabled() {\n                    return gd.isDisabled(n);\n                  },\n                  setDisabled: function setDisabled(e) {\n                    gd.set(n, e), St(vs(n.element, \"*\"), function (t) {\n                      n.getSystem().getByDom(t).each(function (t) {\n                        t.hasConfigured(gd) && gd.set(t, e);\n                      });\n                    });\n                  }\n                };\n              },\n              onAction: t.onAction,\n              onSetup: t.onSetup,\n              triggersSubmenu: !1,\n              itemBehaviours: vt.from(r.itemBehaviours).getOr([])\n            }, i, n, o.providers)));\n            var t, n, o, r, i;\n          });\n        default:\n          return ao(\"Autocompleter.Item\", Np, t).fold(rh, function (t) {\n            return vt.some(function (e, n, t, o, r, i, u, a) {\n              void 0 === a && (a = !0);\n              var c = Ev({\n                presets: o,\n                textContent: vt.none(),\n                htmlContent: t ? e.text.map(function (t) {\n                  return Av(t, n);\n                }) : vt.none(),\n                ariaLabel: e.text,\n                iconContent: e.icon,\n                shortcutContent: vt.none(),\n                checkMark: vt.none(),\n                caret: vt.none(),\n                value: e.value\n              }, u.providers, a, e.icon);\n              return yv({\n                data: xv(e),\n                disabled: e.disabled,\n                getApi: rt({}),\n                onAction: function onAction(t) {\n                  return r(e.value, e.meta);\n                },\n                onSetup: rt(st),\n                triggersSubmenu: !1,\n                itemBehaviours: Dv(e.meta, u)\n              }, c, i, u.providers);\n            }(t, u, n, \"normal\", a, c, s, o));\n          });\n      }\n    }));\n  }\n  function Gb(t, e, n, o, r) {\n    var i = oh(e),\n      u = nt(B(e, function (t) {\n        function e(t) {\n          return function (t, e, n, o, r) {\n            function i(t) {\n              return r ? _lt(_lt({}, t), {\n                shortcut: vt.none(),\n                icon: t.text.isSome() ? vt.none() : t.icon\n              }) : t;\n            }\n            var u = n.shared.providers;\n            switch (t.type) {\n              case \"menuitem\":\n                return ao(\"menuitem\", Xh, t).fold(rh, function (t) {\n                  return vt.some(Lb(i(t), e, u, o));\n                });\n              case \"nestedmenuitem\":\n                return ao(\"nestedmenuitem\", Yh, t).fold(rh, function (t) {\n                  return vt.some(zb(i(t), e, u, o, r));\n                });\n              case \"togglemenuitem\":\n                return ao(\"togglemenuitem\", qh, t).fold(rh, function (t) {\n                  return vt.some(Ub(i(t), e, u, o));\n                });\n              case \"separator\":\n                return ao(\"separatormenuitem\", Rp, t).fold(rh, function (t) {\n                  return vt.some(Hb(t));\n                });\n              case \"fancymenuitem\":\n                return ao(\"fancymenuitem\", Gh, t).fold(rh, function (t) {\n                  return jb(i(t), n);\n                });\n              default:\n                return console.error(\"Unknown item in general menu\", t), vt.none();\n            }\n          }(t, n, o, r ? !Tt(t, \"text\") : i, r);\n        }\n        return \"nestedmenuitem\" === t.type && t.getSubmenuItems().length <= 0 ? e(_lt(_lt({}, t), {\n          disabled: !0\n        })) : e(t);\n      }));\n    return (r ? ih : uh)(t, i, u, 1, \"normal\");\n  }\n  function Xb(t) {\n    return ip.singleData(t.value, t);\n  }\n  function Yb(t, e, n) {\n    return Ru(t, e, n).isSome();\n  }\n  function qb(n, o) {\n    var r = null;\n    return {\n      cancel: function cancel() {\n        null !== r && (clearTimeout(r), r = null);\n      },\n      schedule: function schedule() {\n        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n        r = setTimeout(function () {\n          n.apply(null, t), r = null;\n        }, o);\n      }\n    };\n  }\n  function Kb(t) {\n    var e = t.raw;\n    return void 0 === e.touches || 1 !== e.touches.length ? vt.none() : vt.some(e.touches[0]);\n  }\n  function Jb() {\n    return ln().browser.isFirefox();\n  }\n  function $b(e, t) {\n    var n,\n      o,\n      r,\n      i,\n      u,\n      a,\n      c,\n      s,\n      l,\n      f = _lt({\n        stopBackspace: !0\n      }, t),\n      d = (u = f, a = gc(), c = Po(!1), s = qb(function (t) {\n        u.triggerEvent(Pi(), t), c.set(!0);\n      }, 400), l = lr([{\n        key: si(),\n        value: function value(n) {\n          return Kb(n).each(function (t) {\n            s.cancel();\n            var e = {\n              x: t.clientX,\n              y: t.clientY,\n              target: n.target\n            };\n            s.schedule(n), c.set(!1), a.set(e);\n          }), vt.none();\n        }\n      }, {\n        key: li(),\n        value: function value(t) {\n          return s.cancel(), Kb(t).each(function (i) {\n            a.on(function (t) {\n              var e = i,\n                n = t,\n                o = Math.abs(e.clientX - n.x),\n                r = Math.abs(e.clientY - n.y);\n              (5 < o || 5 < r) && a.clear();\n            });\n          }), vt.none();\n        }\n      }, {\n        key: fi(),\n        value: function value(e) {\n          return s.cancel(), a.get().filter(function (t) {\n            return zt(t.target, e.target);\n          }).map(function (t) {\n            return c.get() ? (e.prevent(), !1) : u.triggerEvent(Ni(), e);\n          });\n        }\n      }]), {\n        fireIfReady: function fireIfReady(e, t) {\n          return tt(l, t).bind(function (t) {\n            return t(e);\n          });\n        }\n      }),\n      m = B([\"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\", \"gesturestart\", \"mousedown\", \"mouseup\", \"mouseover\", \"mousemove\", \"mouseout\", \"click\"].concat([\"selectstart\", \"input\", \"contextmenu\", \"change\", \"transitionend\", \"transitioncancel\", \"drag\", \"dragstart\", \"dragend\", \"dragenter\", \"dragleave\", \"dragover\", \"drop\", \"keyup\"]), function (t) {\n        return pc(e, t, function (e) {\n          d.fireIfReady(e, t).each(function (t) {\n            t && e.kill();\n          }), f.triggerEvent(t, e) && e.kill();\n        });\n      }),\n      g = gc(),\n      p = pc(e, \"paste\", function (e) {\n        d.fireIfReady(e, \"paste\").each(function (t) {\n          t && e.kill();\n        }), f.triggerEvent(\"paste\", e) && e.kill(), g.set(setTimeout(function () {\n          f.triggerEvent(Mi(), e);\n        }, 0));\n      }),\n      h = pc(e, \"keydown\", function (t) {\n        var e;\n        f.triggerEvent(\"keydown\", t) ? t.kill() : !f.stopBackspace || (e = t).raw.which !== vd[0] || wt([\"input\", \"textarea\"], Ft(e.target)) || Yb(e.target, '[contenteditable=\"true\"]') || t.prevent();\n      }),\n      v = (n = e, o = function o(t) {\n        f.triggerEvent(\"focusin\", t) && t.kill();\n      }, Jb() ? hc(n, \"focus\", o) : pc(n, \"focusin\", o)),\n      b = gc(),\n      y = (r = e, i = function i(t) {\n        f.triggerEvent(\"focusout\", t) && t.kill(), b.set(setTimeout(function () {\n          f.triggerEvent(Bi(), t);\n        }, 0));\n      }, Jb() ? hc(r, \"blur\", i) : pc(r, \"focusout\", i));\n    return {\n      unbind: function unbind() {\n        St(m, function (t) {\n          t.unbind();\n        }), h.unbind(), v.unbind(), y.unbind(), p.unbind(), g.on(clearTimeout), b.on(clearTimeout);\n      }\n    };\n  }\n  function Qb(t, e) {\n    return Po(tt(t, \"target\").getOr(e));\n  }\n  function Zb(t, o, e, n, r, i) {\n    var u,\n      a,\n      c = t(o, n),\n      s = (u = Po(!1), a = Po(!1), {\n        stop: function stop() {\n          u.set(!0);\n        },\n        cut: function cut() {\n          a.set(!0);\n        },\n        isStopped: u.get,\n        isCut: a.get,\n        event: e,\n        setSource: r.set,\n        getSource: r.get\n      });\n    return c.fold(function () {\n      return i.logEventNoHandlers(o, n), ay.complete();\n    }, function (e) {\n      var n = e.descHandler;\n      return Ur(n)(s), s.isStopped() ? (i.logEventStopped(o, e.element, n.purpose), ay.stopped()) : s.isCut() ? (i.logEventCut(o, e.element, n.purpose), ay.complete()) : Yt(e.element).fold(function () {\n        return i.logNoParent(o, e.element, n.purpose), ay.complete();\n      }, function (t) {\n        return i.logEventResponse(o, e.element, n.purpose), ay.resume(t);\n      });\n    });\n  }\n  function ty() {\n    function r(t) {\n      Rr(t.element).each(function (t) {\n        delete a[t], i.unregisterId(t);\n      });\n    }\n    var u,\n      i = (u = {}, {\n        registerId: function registerId(r, i, t) {\n          J(t, function (t, e) {\n            var n,\n              o = void 0 !== u[e] ? u[e] : {};\n            o[i] = {\n              cHandler: C.apply(void 0, [(n = t).handler].concat(r)),\n              purpose: n.purpose\n            }, u[e] = o;\n          });\n        },\n        unregisterId: function unregisterId(n) {\n          J(u, function (t, e) {\n            Tt(t, n) && delete t[n];\n          });\n        },\n        filterByType: function filterByType(t) {\n          return tt(u, t).map(function (t) {\n            return $(t, function (t, e) {\n              return {\n                id: e,\n                descHandler: t\n              };\n            });\n          }).getOr([]);\n        },\n        find: function find(t, e, n) {\n          return tt(u, e).bind(function (o) {\n            return mr(n, function (t) {\n              return e = o, Rr(n = t).bind(function (t) {\n                return tt(e, t);\n              }).map(function (t) {\n                return {\n                  element: n,\n                  descHandler: t\n                };\n              });\n              var e, n;\n            }, t);\n          });\n        }\n      }),\n      a = {};\n    return {\n      find: function find(t, e, n) {\n        return i.find(t, e, n);\n      },\n      filter: function filter(t) {\n        return i.filterByType(t);\n      },\n      register: function register(t) {\n        var n,\n          o = Rr((n = t).element).getOrThunk(function () {\n            return t = n.element, e = Ir(du + \"uid-\"), gu(t, e), e;\n            var t, e;\n          });\n        et(a, o) && function (t) {\n          var e = a[o];\n          if (e !== t) throw new Error('The tagId \"' + o + '\" is already used by: ' + Fr(e.element) + \"\\nCannot use it for: \" + Fr(t.element) + \"\\nThe conflicting element is\" + (vn(e.element) ? \" \" : \" not \") + \"already in the DOM\");\n          r(t);\n        }(t), i.registerId([t], o, t.events), a[o] = t;\n      },\n      unregister: r,\n      getById: function getById(t) {\n        return tt(a, t);\n      }\n    };\n  }\n  function ey(n) {\n    function o(e) {\n      return Yt(n.element).fold(D, function (t) {\n        return zt(e, t);\n      });\n    }\n    function s(t, e) {\n      return i.find(o, t, e);\n    }\n    function r(e) {\n      var t = i.filter(Fi());\n      St(t, function (t) {\n        Ur(t.descHandler)(e);\n      });\n    }\n    var i = ty(),\n      t = $b(n.element, {\n        triggerEvent: function triggerEvent(e, n) {\n          return zu(e, n.target, function (t) {\n            return sy(s, e, n, n.target, t);\n          });\n        }\n      }),\n      u = {\n        debugInfo: rt(\"real\"),\n        triggerEvent: function triggerEvent(e, n, o) {\n          zu(e, n, function (t) {\n            return sy(s, e, o, n, t);\n          });\n        },\n        triggerFocus: function triggerFocus(a, c) {\n          Rr(a).fold(function () {\n            ka(a);\n          }, function (t) {\n            zu(Ai(), a, function (t) {\n              var e,\n                n,\n                o = s,\n                r = Ai(),\n                i = t,\n                u = Qb(e = {\n                  originator: c,\n                  kill: st,\n                  prevent: st,\n                  target: a\n                }, n = a);\n              return Zb(o, r, e, n, u, i), !1;\n            });\n          });\n        },\n        triggerEscape: function triggerEscape(t, e) {\n          u.triggerEvent(\"keydown\", t.element, e.event);\n        },\n        getByUid: function getByUid(t) {\n          return g(t);\n        },\n        getByDom: function getByDom(t) {\n          return p(t);\n        },\n        build: Tu,\n        addToGui: function addToGui(t) {\n          c(t);\n        },\n        removeFromGui: function removeFromGui(t) {\n          l(t);\n        },\n        addToWorld: function addToWorld(t) {\n          e(t);\n        },\n        removeFromWorld: function removeFromWorld(t) {\n          a(t);\n        },\n        broadcast: function broadcast(t) {\n          f(t);\n        },\n        broadcastOn: function broadcastOn(t, e) {\n          d(t, e);\n        },\n        broadcastEvent: function broadcastEvent(t, e) {\n          m(t, e);\n        },\n        isConnected: D\n      },\n      e = function e(t) {\n        t.connect(u), Xe(t.element) || (i.register(t), St(t.components(), e), u.triggerEvent(Li(), t.element, {\n          target: t.element\n        }));\n      },\n      a = function a(t) {\n        Xe(t.element) || (St(t.components(), a), i.unregister(t)), t.disconnect();\n      },\n      c = function c(t) {\n        Ns(n, t);\n      },\n      l = function l(t) {\n        Vs(t);\n      },\n      f = function f(t) {\n        r({\n          universal: !0,\n          data: t\n        });\n      },\n      d = function d(t, e) {\n        r({\n          universal: !1,\n          channels: t,\n          data: e\n        });\n      },\n      m = function m(t, e) {\n        var n,\n          o,\n          r = i.filter(t);\n        return o = {\n          stop: function stop() {\n            n.set(!0);\n          },\n          cut: st,\n          isStopped: (n = Po(!1)).get,\n          isCut: T,\n          event: e,\n          setSource: _(\"Cannot set source of a broadcasted event\"),\n          getSource: _(\"Cannot get source of a broadcasted event\")\n        }, St(r, function (t) {\n          Ur(t.descHandler)(o);\n        }), o.isStopped();\n      },\n      g = function g(t) {\n        return i.getById(t).fold(function () {\n          return Nn.error(new Error('Could not find component with uid: \"' + t + '\" in system.'));\n        }, Nn.value);\n      },\n      p = function p(t) {\n        var e = Rr(t).getOr(\"not found\");\n        return g(e);\n      };\n    return e(n), {\n      root: n,\n      element: n.element,\n      destroy: function destroy() {\n        t.unbind(), En(n.element);\n      },\n      add: c,\n      remove: l,\n      getByUid: g,\n      getByDom: p,\n      addToWorld: e,\n      removeFromWorld: a,\n      broadcast: f,\n      broadcastOn: d,\n      broadcastEvent: m\n    };\n  }\n  function ny(t, e, n, o) {\n    var r = vy(t, e, n, o);\n    return my.sketch(r);\n  }\n  function oy(t, e) {\n    return my.parts.label({\n      dom: {\n        tag: \"label\",\n        classes: [\"tox-label\"],\n        innerHtml: e.translate(t)\n      }\n    });\n  }\n  function ry(t) {\n    return ec([Vg.config({\n      onFocus: t.selectOnFocus ? function (t) {\n        var e = t.element,\n          n = Qr(e);\n        e.dom.setSelectionRange(0, n.length);\n      } : st\n    })]);\n  }\n  function iy(t) {\n    return {\n      tag: t.tag,\n      attributes: _lt({\n        type: \"text\"\n      }, t.inputAttributes),\n      styles: t.inputStyles,\n      classes: t.inputClasses\n    };\n  }\n  (Db = Eb = {})[Db.ContentFocus = 0] = \"ContentFocus\", Db[Db.UiFocus = 1] = \"UiFocus\";\n  function uy(f, c) {\n    function n() {\n      return r.get().isSome();\n    }\n    function s() {\n      n() && up.hide(d);\n    }\n    var o,\n      t,\n      r = gc(),\n      l = Po(!1),\n      d = Tu(up.sketch({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-autocompleter\"]\n        },\n        components: [],\n        fireDismissalEventInstead: {},\n        inlineBehaviours: ec([mm(\"dismissAutocompleter\", [Cr(Yi(), function () {\n          return m();\n        })])]),\n        lazySink: c.getSink\n      })),\n      m = function m() {\n        var t;\n        n() && (t = r.get().map(function (t) {\n          return t.element;\n        }), Bp(t.getOr(Mt.fromDom(f.selection.getNode()))).each(Fe), s(), r.clear(), l.set(!1));\n      },\n      u = Rt(function () {\n        return n = dt(f.ui.registry.getAll().popups, function (t) {\n          return ao(\"Autocompleter\", Pp, t).fold(function (t) {\n            throw new Error(ur(t));\n          }, h);\n        }), t = $(n, function (t) {\n          return t.ch;\n        }), e = {}, St(t, function (t) {\n          e[t] = {};\n        }), o = Ct(e), r = Z(n), {\n          dataset: n,\n          triggerChars: o,\n          lookupByChar: function lookupByChar(e) {\n            return F(r, function (t) {\n              return t.ch === e;\n            });\n          }\n        };\n        var t, e, n, o, r;\n      }),\n      g = function g(t) {\n        var e = t;\n        r.get().map(function (t) {\n          return kp(f.dom, f.selection.getRng(), t.triggerChar).bind(function (t) {\n            return Tp(f, u, t, e);\n          });\n        }).getOrThunk(function () {\n          return e = f, t = (n = u)(), o = e.selection.getRng(), r = e.dom, i = o, K(t.triggerChars, function (t) {\n            return kp(r, i, t);\n          }).bind(function (t) {\n            return Tp(e, n, t);\n          });\n          var e, n, t, o, r, i;\n        }).fold(m, function (a) {\n          var t,\n            e = a.context;\n          n() || (t = yp(f, e.range), r.set({\n            triggerChar: e.triggerChar,\n            element: t,\n            matchLength: e.text.length\n          }), l.set(!1)), a.lookupData.then(function (u) {\n            r.get().map(function (t) {\n              var e,\n                n,\n                o,\n                r,\n                i = a.context;\n              t.triggerChar === i.triggerChar && (n = i.triggerChar, r = K(o = u, function (t) {\n                return vt.from(t.columns);\n              }).getOr(1), 0 < (e = H(o, function (i) {\n                return Wb(i.items, i.matchText, function (o, r) {\n                  var t = f.selection.getRng();\n                  kp(f.dom, t, n).fold(function () {\n                    return console.error(\"Lost context. Cursor probably moved\");\n                  }, function (t) {\n                    var e = t.range,\n                      n = {\n                        hide: function hide() {\n                          m();\n                        },\n                        reload: function reload(t) {\n                          s(), g(t);\n                        }\n                      };\n                    l.set(!0), i.onAction(n, e, o, r), l.set(!1);\n                  });\n                }, r, Sh.BUBBLE_TO_SANDBOX, c, i.highlightOn);\n              })).length ? function (t, e, n, o) {\n                t.matchLength = e.text.length;\n                var r,\n                  i,\n                  u,\n                  a,\n                  c,\n                  s,\n                  l = K(n, function (t) {\n                    return vt.from(t.columns);\n                  }).getOr(1);\n                up.showAt(d, tp.sketch((r = uh(\"autocompleter-value\", !0, o, l, \"normal\"), i = l, a = ((u = Eb.ContentFocus) === Eb.ContentFocus ? jl : Ul)(), c = _b(i, \"normal\"), s = Qp(\"normal\"), {\n                  dom: r.dom,\n                  components: r.components,\n                  items: r.items,\n                  value: r.value,\n                  markers: {\n                    selectedItem: s.selectedItem,\n                    item: s.item\n                  },\n                  movement: c,\n                  fakeFocus: u === Eb.ContentFocus,\n                  focusManager: a,\n                  menuBehaviours: Kh(\"auto\" !== i ? [] : [ou(function (o, t) {\n                    ah(o, 4, s.item).each(function (t) {\n                      var e = t.numColumns,\n                        n = t.numRows;\n                      Fg.setGridSize(o, n, e);\n                    });\n                  })])\n                })), {\n                  anchor: {\n                    type: \"node\",\n                    root: Mt.fromDom(f.getBody()),\n                    node: vt.from(t.element)\n                  }\n                }), up.getContent(d).each(hd.highlightFirst);\n              }(t, i, u, e) : (10 <= i.text.length - t.matchLength ? m : s)());\n            });\n          });\n        });\n      },\n      e = {\n        onKeypress: vp(function (t) {\n          27 !== t.which && g();\n        }, 50),\n        cancelIfNecessary: m,\n        isMenuOpen: function isMenuOpen() {\n          return up.isOpen(d);\n        },\n        isActive: n,\n        isProcessingAction: l.get,\n        getView: function getView() {\n          return up.getContent(d);\n        }\n      };\n    function i(t, e) {\n      br(t, xi(), {\n        raw: e\n      });\n    }\n    !1 === f.hasPlugin(\"rtc\") && (o = e, (t = f).on(\"keypress compositionend\", o.onKeypress.throttle), t.on(\"remove\", o.onKeypress.cancel), t.on(\"keydown\", function (e) {\n      function t() {\n        return o.getView().bind(hd.getHighlighted);\n      }\n      8 === e.which && o.onKeypress.throttle(e), o.isActive() && (27 === e.which && o.cancelIfNecessary(), o.isMenuOpen() ? 13 === e.which ? (t().each(yr), e.preventDefault()) : 40 === e.which ? (t().fold(function () {\n        o.getView().each(hd.highlightFirst);\n      }, function (t) {\n        i(t, e);\n      }), e.preventDefault(), e.stopImmediatePropagation()) : 37 !== e.which && 38 !== e.which && 39 !== e.which || t().each(function (t) {\n        i(t, e), e.preventDefault(), e.stopImmediatePropagation();\n      }) : 13 !== e.which && 38 !== e.which && 40 !== e.which || o.cancelIfNecessary());\n    }), t.on(\"NodeChange\", function (t) {\n      o.isActive() && !o.isProcessingAction() && Bp(Mt.fromDom(t.element)).isNone() && o.cancelIfNecessary();\n    }));\n  }\n  var ay = Vo([{\n      stopped: []\n    }, {\n      resume: [\"element\"]\n    }, {\n      complete: []\n    }]),\n    cy = function cy(e, n, o, t, r, i) {\n      return Zb(e, n, o, t, r, i).fold(D, function (t) {\n        return cy(e, n, o, t, r, i);\n      }, T);\n    },\n    sy = function sy(t, e, n, o, r) {\n      var i = Qb(n, o);\n      return cy(t, e, n, o, i, r);\n    },\n    ly = kl({\n      name: \"Container\",\n      factory: function factory(t) {\n        var e = t.dom,\n          n = e.attributes,\n          o = A(e, [\"attributes\"]);\n        return {\n          uid: t.uid,\n          dom: _lt({\n            tag: \"div\",\n            attributes: _lt({\n              role: \"presentation\"\n            }, n)\n          }, o),\n          components: t.components,\n          behaviours: tl(t.containerBehaviours),\n          events: t.events,\n          domModification: t.domModification,\n          eventOrder: t.eventOrder\n        };\n      },\n      configFields: [Eo(\"components\", []), Zs(\"containerBehaviours\", []), Eo(\"events\", {}), Eo(\"domModification\", {}), Eo(\"eventOrder\", {})]\n    }),\n    fy = rt([Eo(\"prefix\", \"form-field\"), Zs(\"fieldBehaviours\", [cd, Df])]),\n    dy = rt([Qf({\n      schema: [mo(\"dom\")],\n      name: \"label\"\n    }), Qf({\n      factory: {\n        sketch: function sketch(t) {\n          return {\n            uid: t.uid,\n            dom: {\n              tag: \"span\",\n              styles: {\n                display: \"none\"\n              },\n              attributes: {\n                \"aria-hidden\": \"true\"\n              },\n              innerHtml: t.text\n            }\n          };\n        }\n      },\n      schema: [mo(\"text\")],\n      name: \"aria-descriptor\"\n    }), Jf({\n      factory: {\n        sketch: function sketch(t) {\n          var n,\n            o,\n            e = (n = [\"factory\"], o = {}, J(t, function (t, e) {\n              wt(n, e) || (o[e] = t);\n            }), o);\n          return t.factory.sketch(e);\n        }\n      },\n      schema: [mo(\"factory\")],\n      name: \"field\"\n    })]),\n    my = Cl({\n      name: \"FormField\",\n      configFields: fy(),\n      partFields: dy(),\n      factory: function factory(r, t, e, n) {\n        var o = el(r.fieldBehaviours, [cd.config({\n            find: function find(t) {\n              return ml(t, r, \"field\");\n            }\n          }), Df.config({\n            store: {\n              mode: \"manual\",\n              getValue: function getValue(t) {\n                return cd.getCurrent(t).bind(Df.getValue);\n              },\n              setValue: function setValue(t, e) {\n                cd.getCurrent(t).each(function (t) {\n                  Df.setValue(t, e);\n                });\n              }\n            }\n          })]),\n          i = nu([ou(function (t, e) {\n            var o = pl(t, r, [\"label\", \"field\", \"aria-descriptor\"]);\n            o.field().each(function (n) {\n              var e = Ir(r.prefix);\n              o.label().each(function (t) {\n                oe(t.element, \"for\", e), oe(n.element, \"id\", e);\n              }), o[\"aria-descriptor\"]().each(function (t) {\n                var e = Ir(r.prefix);\n                oe(t.element, \"id\", e), oe(n.element, \"aria-describedby\", e);\n              });\n            });\n          })]);\n        return {\n          uid: r.uid,\n          dom: r.dom,\n          components: t,\n          behaviours: o,\n          events: i,\n          apis: {\n            getField: function getField(t) {\n              return ml(t, r, \"field\");\n            },\n            getLabel: function getLabel(t) {\n              return ml(t, r, \"label\");\n            }\n          }\n        };\n      },\n      apis: {\n        getField: function getField(t, e) {\n          return t.getField(e);\n        },\n        getLabel: function getLabel(t, e) {\n          return t.getLabel(e);\n        }\n      }\n    }),\n    gy = Object.freeze({\n      __proto__: null,\n      exhibit: function exhibit(t, e) {\n        return zr({\n          attributes: lr([{\n            key: e.tabAttr,\n            value: \"true\"\n          }])\n        });\n      }\n    }),\n    py = xa({\n      fields: [Eo(\"tabAttr\", \"data-alloy-tabstop\")],\n      name: \"tabstopping\",\n      active: gy\n    }),\n    hy = tinymce.util.Tools.resolve(\"tinymce.html.Entities\"),\n    vy = function vy(t, e, n, o) {\n      return {\n        dom: by(n),\n        components: t.toArray().concat([e]),\n        fieldBehaviours: ec(o)\n      };\n    },\n    by = function by(t) {\n      return {\n        tag: \"div\",\n        classes: [\"tox-form__group\"].concat(t)\n      };\n    },\n    yy = Ir(\"form-component-change\"),\n    xy = Ir(\"form-close\"),\n    wy = Ir(\"form-cancel\"),\n    Sy = Ir(\"form-action\"),\n    ky = Ir(\"form-submit\"),\n    Cy = Ir(\"form-block\"),\n    Oy = Ir(\"form-unblock\"),\n    _y = Ir(\"form-tabchange\"),\n    Ty = Ir(\"form-resize\"),\n    Ey = rt([wo(\"data\"), Eo(\"inputAttributes\", {}), Eo(\"inputStyles\", {}), Eo(\"tag\", \"input\"), Eo(\"inputClasses\", []), Ju(\"onSetValue\"), Eo(\"styles\", {}), Eo(\"eventOrder\", {}), Zs(\"inputBehaviours\", [Df, Vg]), Eo(\"selectOnFocus\", !0)]),\n    Dy = kl({\n      name: \"Input\",\n      configFields: Ey(),\n      factory: function factory(t, e) {\n        return {\n          uid: t.uid,\n          dom: iy(t),\n          components: [],\n          behaviours: _lt(_lt({}, ry(n = t)), el(n.inputBehaviours, [Df.config({\n            store: _lt(_lt({\n              mode: \"manual\"\n            }, n.data.map(function (t) {\n              return {\n                initialValue: t\n              };\n            }).getOr({})), {\n              getValue: function getValue(t) {\n                return Qr(t.element);\n              },\n              setValue: function setValue(t, e) {\n                Qr(t.element) !== e && Zr(t.element, e);\n              }\n            }),\n            onSetValue: n.onSetValue\n          })])),\n          eventOrder: t.eventOrder\n        };\n        var n;\n      }\n    }),\n    Ay = {},\n    By = {\n      exports: Ay\n    };\n  function My(t) {\n    setTimeout(function () {\n      throw t;\n    }, 0);\n  }\n  function Fy(t) {\n    var e = Ft(t);\n    return wt(Xy, e);\n  }\n  function Iy(t, e) {\n    qr(e.getRoot(t).getOr(t.element), e.invalidClass), e.notify.each(function (e) {\n      Fy(t.element) && oe(t.element, \"aria-invalid\", !1), e.getContainer(t).each(function (t) {\n        Mr(t, e.validHtml);\n      }), e.onValid(t);\n    });\n  }\n  function Ry(e, t, n, o) {\n    Yr(t.getRoot(e).getOr(e.element), t.invalidClass), t.notify.each(function (t) {\n      Fy(e.element) && oe(e.element, \"aria-invalid\", !0), t.getContainer(e).each(function (t) {\n        Mr(t, o);\n      }), t.onInvalid(e, o);\n    });\n  }\n  function Ny(e, t, n) {\n    return t.validator.fold(function () {\n      return Gy(Nn.value(!0));\n    }, function (t) {\n      return t.validate(e);\n    });\n  }\n  function Py(e, n, t) {\n    return n.notify.each(function (t) {\n      t.onValidate(e);\n    }), Ny(e, n).map(function (t) {\n      return e.getSystem().isConnected() ? t.fold(function (t) {\n        return Ry(e, n, 0, t), Nn.error(t);\n      }, function (t) {\n        return Iy(e, n), Nn.value(t);\n      }) : Nn.error(\"No longer in system\");\n    });\n  }\n  !function () {\n    var t = this,\n      e = function e() {\n        var t,\n          e,\n          n,\n          o = {\n            exports: {}\n          };\n        function r() {}\n        function i(t) {\n          if (\"object\" != _typeof(this)) throw new TypeError(\"Promises must be constructed via new\");\n          if (\"function\" != typeof t) throw new TypeError(\"not a function\");\n          this._state = 0, this._handled = !1, this._value = void 0, this._deferreds = [], f(t, this);\n        }\n        function u(n, o) {\n          for (; 3 === n._state;) n = n._value;\n          0 !== n._state ? (n._handled = !0, i._immediateFn(function () {\n            var t,\n              e = 1 === n._state ? o.onFulfilled : o.onRejected;\n            if (null !== e) {\n              try {\n                t = e(n._value);\n              } catch (t) {\n                return void c(o.promise, t);\n              }\n              a(o.promise, t);\n            } else (1 === n._state ? a : c)(o.promise, n._value);\n          })) : n._deferreds.push(o);\n        }\n        function a(e, t) {\n          try {\n            if (t === e) throw new TypeError(\"A promise cannot be resolved with itself.\");\n            if (t && (\"object\" == _typeof(t) || \"function\" == typeof t)) {\n              var n = t.then;\n              if (t instanceof i) return e._state = 3, e._value = t, void s(e);\n              if (\"function\" == typeof n) return void f((o = n, r = t, function () {\n                o.apply(r, arguments);\n              }), e);\n            }\n            e._state = 1, e._value = t, s(e);\n          } catch (t) {\n            c(e, t);\n          }\n          var o, r;\n        }\n        function c(t, e) {\n          t._state = 2, t._value = e, s(t);\n        }\n        function s(t) {\n          2 === t._state && 0 === t._deferreds.length && i._immediateFn(function () {\n            t._handled || i._unhandledRejectionFn(t._value);\n          });\n          for (var e = 0, n = t._deferreds.length; e < n; e++) u(t, t._deferreds[e]);\n          t._deferreds = null;\n        }\n        function l(t, e, n) {\n          this.onFulfilled = \"function\" == typeof t ? t : null, this.onRejected = \"function\" == typeof e ? e : null, this.promise = n;\n        }\n        function f(t, e) {\n          var n = !1;\n          try {\n            t(function (t) {\n              n || (n = !0, a(e, t));\n            }, function (t) {\n              n || (n = !0, c(e, t));\n            });\n          } catch (t) {\n            if (n) return;\n            n = !0, c(e, t);\n          }\n        }\n        t = o, e = \"undefined\" != typeof globalThis ? globalThis : \"undefined\" != typeof window ? window : \"undefined\" != typeof __webpack_require__.g ? __webpack_require__.g : \"undefined\" != typeof self ? self : {}, n = setTimeout, i.prototype[\"catch\"] = function (t) {\n          return this.then(null, t);\n        }, i.prototype.then = function (t, e) {\n          var n = new this.constructor(r);\n          return u(this, new l(t, e, n)), n;\n        }, i.all = function (t) {\n          var a = Array.prototype.slice.call(t);\n          return new i(function (r, i) {\n            if (0 === a.length) return r([]);\n            for (var u = a.length, t = 0; t < a.length; t++) !function e(n, t) {\n              try {\n                if (t && (\"object\" == _typeof(t) || \"function\" == typeof t)) {\n                  var o = t.then;\n                  if (\"function\" == typeof o) return o.call(t, function (t) {\n                    e(n, t);\n                  }, i), 0;\n                }\n                a[n] = t, 0 == --u && r(a);\n              } catch (t) {\n                i(t);\n              }\n            }(t, a[t]);\n          });\n        }, i.resolve = function (e) {\n          return e && \"object\" == _typeof(e) && e.constructor === i ? e : new i(function (t) {\n            t(e);\n          });\n        }, i.reject = function (n) {\n          return new i(function (t, e) {\n            e(n);\n          });\n        }, i.race = function (r) {\n          return new i(function (t, e) {\n            for (var n = 0, o = r.length; n < o; n++) r[n].then(t, e);\n          });\n        }, i._immediateFn = \"function\" == typeof setImmediate ? function (t) {\n          setImmediate(t);\n        } : function (t) {\n          n(t, 0);\n        }, i._unhandledRejectionFn = function (t) {\n          \"undefined\" != typeof console && console && console.warn(\"Possible Unhandled Promise Rejection:\", t);\n        }, i._setImmediateFn = function (t) {\n          i._immediateFn = t;\n        }, i._setUnhandledRejectionFn = function (t) {\n          i._unhandledRejectionFn = t;\n        }, t.exports ? t.exports = i : e.Promise || (e.Promise = i);\n        var d = o.exports;\n        return {\n          boltExport: (\"undefined\" != typeof window ? window : Function(\"return this;\")()).Promise || d\n        };\n      };\n    \"object\" == _typeof(Ay) && void 0 !== By ? By.exports = e() : (t = \"undefined\" != typeof globalThis ? globalThis : t || self).EphoxContactWrapper = e();\n  }();\n  var Vy,\n    Hy,\n    Ly = By.exports.boltExport,\n    zy = function zy(t) {\n      function o(t) {\n        r() ? i(t) : e.push(t);\n      }\n      var n = vt.none(),\n        e = [],\n        r = function r() {\n          return n.isSome();\n        },\n        i = function i(e) {\n          n.each(function (t) {\n            setTimeout(function () {\n              e(t);\n            }, 0);\n          });\n        };\n      return t(function (t) {\n        r() || (n = vt.some(t), St(e, i), e = []);\n      }), {\n        get: o,\n        map: function map(n) {\n          return zy(function (e) {\n            o(function (t) {\n              e(n(t));\n            });\n          });\n        },\n        isReady: r\n      };\n    },\n    Uy = {\n      nu: zy,\n      pure: function pure(e) {\n        return zy(function (t) {\n          t(e);\n        });\n      }\n    },\n    jy = function jy(n) {\n      function t(t) {\n        n().then(t, My);\n      }\n      return {\n        map: function map(t) {\n          return jy(function () {\n            return n().then(t);\n          });\n        },\n        bind: function bind(e) {\n          return jy(function () {\n            return n().then(function (t) {\n              return e(t).toPromise();\n            });\n          });\n        },\n        anonBind: function anonBind(t) {\n          return jy(function () {\n            return n().then(function () {\n              return t.toPromise();\n            });\n          });\n        },\n        toLazy: function toLazy() {\n          return Uy.nu(t);\n        },\n        toCached: function toCached() {\n          var t = null;\n          return jy(function () {\n            return t = null === t ? n() : t;\n          });\n        },\n        toPromise: n,\n        get: t\n      };\n    },\n    Wy = function Wy(t) {\n      return jy(function () {\n        return new Ly(t);\n      });\n    },\n    Gy = function Gy(t) {\n      return jy(function () {\n        return Ly.resolve(t);\n      });\n    },\n    Xy = [\"input\", \"textarea\"],\n    Yy = Object.freeze({\n      __proto__: null,\n      markValid: Iy,\n      markInvalid: Ry,\n      query: Ny,\n      run: Py,\n      isInvalid: function isInvalid(t, e) {\n        return Kr(e.getRoot(t).getOr(t.element), e.invalidClass);\n      }\n    }),\n    qy = Object.freeze({\n      __proto__: null,\n      events: function events(e, t) {\n        return e.validator.map(function (t) {\n          return nu([Cr(t.onEvent, function (t) {\n            Py(t, e).get(h);\n          })].concat(t.validateOnLoad ? [ou(function (t) {\n            Py(t, e).get(st);\n          })] : []));\n        }).getOr({});\n      }\n    }),\n    Ky = xa({\n      fields: [mo(\"invalidClass\"), Eo(\"getRoot\", vt.none), To(\"notify\", [Eo(\"aria\", \"alert\"), Eo(\"getContainer\", vt.none), Eo(\"validHtml\", \"\"), Ju(\"onValid\"), Ju(\"onInvalid\"), Ju(\"onValidate\")]), To(\"validator\", [mo(\"validate\"), Eo(\"onEvent\", \"input\"), Eo(\"validateOnLoad\", !0)])],\n      name: \"invalidating\",\n      active: qy,\n      apis: Yy,\n      extra: {\n        validation: function validation(n) {\n          return function (t) {\n            var e = Df.getValue(t);\n            return Gy(n(e));\n          };\n        }\n      }\n    }),\n    Jy = Object.freeze({\n      __proto__: null,\n      getCoupled: function getCoupled(t, e, n, o) {\n        return n.getOrCreate(t, e, o);\n      }\n    }),\n    $y = xa({\n      fields: [go(\"others\", uo(Nn.value, Zo()))],\n      name: \"coupling\",\n      apis: Jy,\n      state: Object.freeze({\n        __proto__: null,\n        init: function init() {\n          var i = {},\n            t = rt({});\n          return wu({\n            readState: t,\n            getOrCreate: function getOrCreate(n, o, r) {\n              var t = Ct(o.others);\n              if (t) return tt(i, r).getOrThunk(function () {\n                var t = tt(o.others, r).getOrDie(\"No information found for coupled component: \" + r)(n),\n                  e = n.getSystem().build(t);\n                return i[r] = e;\n              });\n              throw new Error(\"Cannot find coupled component: \" + r + \". Known coupled components: \" + JSON.stringify(t, null, 2));\n            }\n          });\n        }\n      })\n    }),\n    Qy = rt(\"sink\"),\n    Zy = rt(Qf({\n      name: Qy(),\n      overrides: rt({\n        dom: {\n          tag: \"div\"\n        },\n        behaviours: ec([ff.config({\n          useFixed: D\n        })]),\n        events: nu([Dr(xi()), Dr(mi()), Dr(Ci())])\n      })\n    }));\n  function tx(t, e) {\n    var n = t.getHotspot(e).getOr(e),\n      o = t.getAnchorOverrides();\n    return t.layouts.fold(function () {\n      return {\n        type: \"hotspot\",\n        hotspot: n,\n        overrides: o\n      };\n    }, function (t) {\n      return {\n        type: \"hotspot\",\n        hotspot: n,\n        overrides: o,\n        layouts: t\n      };\n    });\n  }\n  function ex(t, e, n, o, r, i, u) {\n    var a,\n      c = tx(t, n),\n      s = n,\n      l = o,\n      f = r,\n      d = u,\n      m = e,\n      g = (0, (a = t).fetch)(s).map(m),\n      p = mw(s, a);\n    return g.map(function (t) {\n      return t.bind(function (t) {\n        return vt.from(ip.sketch(_lt(_lt({}, f.menu()), {\n          uid: pu(\"\"),\n          data: t,\n          highlightImmediately: d === Vy.HighlightFirst,\n          onOpenMenu: function onOpenMenu(t, e) {\n            var n = p().getOrDie();\n            ff.position(n, e, {\n              anchor: c\n            }), bf.decloak(l);\n          },\n          onOpenSubmenu: function onOpenSubmenu(t, e, n) {\n            var o = p().getOrDie();\n            ff.position(o, n, {\n              anchor: {\n                type: \"submenu\",\n                item: e\n              }\n            }), bf.decloak(l);\n          },\n          onRepositionMenu: function onRepositionMenu(t, e, n) {\n            var o = p().getOrDie();\n            ff.position(o, e, {\n              anchor: c\n            }), St(n, function (t) {\n              ff.position(o, t.triggeredMenu, {\n                anchor: {\n                  type: \"submenu\",\n                  item: t.triggeringItem\n                }\n              });\n            });\n          },\n          onEscape: function onEscape() {\n            return Vg.focus(s), bf.close(l), vt.some(!0);\n          }\n        })));\n      });\n    }).map(function (t) {\n      return t.fold(function () {\n        bf.isOpen(o) && bf.close(o);\n      }, function (t) {\n        bf.cloak(o), bf.open(o, t), i(o);\n      }), o;\n    });\n  }\n  function nx(t, e, n, o, r, i) {\n    var u = $y.getCoupled(n, \"sandbox\");\n    return (bf.isOpen(u) ? function (t, e, n, o, r, i, u) {\n      return bf.close(o), Gy(o);\n    } : ex)(t, e, n, u, o, r, i);\n  }\n  function ox(t) {\n    bf.getState(t).each(function (t) {\n      ip.repositionMenus(t);\n    });\n  }\n  function rx(s, l, f) {\n    var d = Nu(),\n      t = mw(l, s);\n    return {\n      dom: {\n        tag: \"div\",\n        classes: s.sandboxClasses,\n        attributes: {\n          id: d.id,\n          role: \"listbox\"\n        }\n      },\n      behaviours: Bf(s.sandboxBehaviours, [Df.config({\n        store: {\n          mode: \"memory\",\n          initialValue: l\n        }\n      }), bf.config({\n        onOpen: function onOpen(t, e) {\n          var n,\n            o,\n            r,\n            i,\n            u,\n            a,\n            c = tx(s, l);\n          d.link(l.element), s.matchWidth && (n = c.hotspot, o = e, r = s.useMinWidth, u = cd.getCurrent(o).getOr(o), a = Ce(n.element), r ? fe(u.element, \"min-width\", a + \"px\") : (i = u.element, On.set(i, a))), s.onOpen(c, t, e), void 0 !== f && void 0 !== f.onOpen && f.onOpen(t, e);\n        },\n        onClose: function onClose(t, e) {\n          d.unlink(l.element), void 0 !== f && void 0 !== f.onClose && f.onClose(t, e);\n        },\n        isPartOf: function isPartOf(t, e, n) {\n          return Hu(e, n) || Hu(l, n);\n        },\n        getAttachPoint: function getAttachPoint() {\n          return t().getOrDie();\n        }\n      }), cd.config({\n        find: function find(t) {\n          return bf.getState(t).bind(function (t) {\n            return cd.getCurrent(t);\n          });\n        }\n      }), ic.config({\n        channels: _lt(_lt({}, Xs({\n          isExtraPart: T\n        })), Ys({\n          doReposition: ox\n        }))\n      })])\n    };\n  }\n  function ix(t) {\n    ox($y.getCoupled(t, \"sandbox\"));\n  }\n  function ux() {\n    return [Eo(\"sandboxClasses\", []), Af(\"sandboxBehaviours\", [cd, ic, bf, Df])];\n  }\n  function ax(e) {\n    return Qf({\n      name: e + \"-edge\",\n      overrides: function overrides(t) {\n        return t.model.manager.edgeActions[e].fold(function () {\n          return {};\n        }, function (o) {\n          return {\n            events: nu([Or(si(), function (t, e, n) {\n              return o(t, n);\n            }, [t]), Or(mi(), function (t, e, n) {\n              return o(t, n);\n            }, [t]), Or(gi(), function (t, e, n) {\n              n.mouseIsDown.get() && o(t, n);\n            }, [t])])\n          };\n        });\n      }\n    });\n  }\n  function cx(t) {\n    var e = t.event.raw;\n    return -1 === e.type.indexOf(\"touch\") ? void 0 !== e.clientX ? vt.some(e).map(function (t) {\n      return kn(t.clientX, t.clientY);\n    }) : vt.none() : void 0 !== e.touches && 1 === e.touches.length ? vt.some(e.touches[0]).map(function (t) {\n      return kn(t.clientX, t.clientY);\n    }) : vt.none();\n  }\n  function sx(t) {\n    return t.model.minX;\n  }\n  function lx(t) {\n    return t.model.minY;\n  }\n  function fx(t) {\n    return t.model.minX - 1;\n  }\n  function dx(t) {\n    return t.model.minY - 1;\n  }\n  function mx(t) {\n    return t.model.maxX;\n  }\n  function gx(t) {\n    return t.model.maxY;\n  }\n  function px(t) {\n    return t.model.maxX + 1;\n  }\n  function hx(t) {\n    return t.model.maxY + 1;\n  }\n  function vx(t, e, n) {\n    return e(t) - n(t);\n  }\n  function bx(t) {\n    return vx(t, mx, sx);\n  }\n  function yx(t) {\n    return vx(t, gx, lx);\n  }\n  function xx(t) {\n    return bx(t) / 2;\n  }\n  function wx(t) {\n    return yx(t) / 2;\n  }\n  function Sx(t) {\n    return t.stepSize;\n  }\n  function kx(t) {\n    return t.snapToGrid;\n  }\n  function Cx(t) {\n    return t.snapStart;\n  }\n  function Ox(t) {\n    return t.rounded;\n  }\n  function _x(t, e) {\n    return void 0 !== t[e + \"-edge\"];\n  }\n  function Tx(t) {\n    return _x(t, \"left\");\n  }\n  function Ex(t) {\n    return _x(t, \"right\");\n  }\n  function Dx(t) {\n    return _x(t, \"top\");\n  }\n  function Ax(t) {\n    return _x(t, \"bottom\");\n  }\n  function Bx(t) {\n    return t.model.value.get();\n  }\n  function Mx(t, e) {\n    return {\n      x: t,\n      y: e\n    };\n  }\n  function Fx(t, e) {\n    br(t, Aw(), {\n      value: e\n    });\n  }\n  function Ix(t, e, n, o) {\n    return t < e ? t : n < t ? n : t === e ? e - 1 : Math.max(e, t - o);\n  }\n  function Rx(t, e, n, o) {\n    return n < t ? t : t < e ? e : t === n ? n + 1 : Math.min(n, t + o);\n  }\n  function Nx(t, e, n) {\n    return Math.max(e, Math.min(n, t));\n  }\n  function Px(t) {\n    var e = t.min,\n      n = t.max,\n      o = t.range,\n      r = t.value,\n      i = t.step,\n      u = t.snap,\n      a = t.snapStart,\n      c = t.rounded,\n      s = t.hasMinEdge,\n      l = t.hasMaxEdge,\n      f = t.minBound,\n      d = t.maxBound,\n      m = t.screenRange,\n      g = s ? e - 1 : e,\n      p = l ? n + 1 : n;\n    if (r < f) return g;\n    if (d < r) return p;\n    var h,\n      v,\n      b,\n      y,\n      x,\n      w = Nx((x = f, Math.min(d, Math.max(r, x)) - x) / m * o + e, g, p);\n    return u && e <= w && w <= n ? (h = w, v = e, b = n, y = i, a.fold(function () {\n      var t = Math.round((h - v) / y) * y;\n      return Nx(v + t, v - 1, b + 1);\n    }, function (t) {\n      var e = Math.round((h - t) % y / y),\n        n = Math.floor((h - t) / y),\n        o = Math.floor((b - t) / y),\n        r = Math.min(o, n + e);\n      return Math.max(t, t + r * y);\n    })) : c ? Math.round(w) : w;\n  }\n  function Vx(t) {\n    var e = t.min,\n      n = t.max,\n      o = t.range,\n      r = t.value,\n      i = t.hasMinEdge,\n      u = t.hasMaxEdge,\n      a = t.maxBound,\n      c = t.maxOffset,\n      s = t.centerMinEdge,\n      l = t.centerMaxEdge;\n    return r < e ? i ? 0 : s : n < r ? u ? a : l : (r - e) / o * c;\n  }\n  function Hx(t) {\n    return t.element.dom.getBoundingClientRect();\n  }\n  function Lx(t) {\n    return Hx(t)[Bw];\n  }\n  function zx(t) {\n    return Hx(t).right;\n  }\n  function Ux(t) {\n    return Hx(t).top;\n  }\n  function jx(t) {\n    return Hx(t).bottom;\n  }\n  function Wx(t) {\n    return Hx(t).width;\n  }\n  function Gx(t) {\n    return Hx(t).height;\n  }\n  function Xx(t, e) {\n    var n = Hx(t),\n      o = Hx(e);\n    return (n[Bw] + n.right) / 2 - o[Bw];\n  }\n  function Yx(t, e) {\n    var n = Hx(t),\n      o = Hx(e);\n    return (n.top + n.bottom) / 2 - o.top;\n  }\n  function qx(t, e) {\n    br(t, Aw(), {\n      value: e\n    });\n  }\n  function Kx(t, e, n) {\n    return Px({\n      min: sx(e),\n      max: mx(e),\n      range: bx(e),\n      value: n,\n      step: Sx(e),\n      snap: kx(e),\n      snapStart: Cx(e),\n      rounded: Ox(e),\n      hasMinEdge: Tx(e),\n      hasMaxEdge: Ex(e),\n      minBound: Lx(t),\n      maxBound: zx(t),\n      screenRange: Wx(t)\n    });\n  }\n  function Jx(r) {\n    return function (t, e) {\n      return qx(t, {\n        x: o = (0 < r ? Rx : Ix)(Bx(n = e).x, sx(n), mx(n), Sx(n))\n      }), vt.some(o).map(D);\n      var n, o;\n    };\n  }\n  function $x(t, e, n, o, r, i) {\n    var u,\n      a,\n      c,\n      s,\n      l,\n      f,\n      d,\n      m,\n      g = (a = i, c = n, s = o, l = r, f = Wx(u = e), d = s.bind(function (t) {\n        return vt.some(Xx(t, u));\n      }).getOr(0), m = l.bind(function (t) {\n        return vt.some(Xx(t, u));\n      }).getOr(f), Vx({\n        min: sx(a),\n        max: mx(a),\n        range: bx(a),\n        value: c,\n        hasMinEdge: Tx(a),\n        hasMaxEdge: Ex(a),\n        minBound: Lx(u),\n        minOffset: 0,\n        maxBound: zx(u),\n        maxOffset: f,\n        centerMinEdge: d,\n        centerMaxEdge: m\n      }));\n    return Lx(e) - Lx(t) + g;\n  }\n  function Qx(t, e) {\n    br(t, Aw(), {\n      value: e\n    });\n  }\n  function Zx(t, e, n) {\n    return Px({\n      min: lx(e),\n      max: gx(e),\n      range: yx(e),\n      value: n,\n      step: Sx(e),\n      snap: kx(e),\n      snapStart: Cx(e),\n      rounded: Ox(e),\n      hasMinEdge: Dx(e),\n      hasMaxEdge: Ax(e),\n      minBound: Ux(t),\n      maxBound: jx(t),\n      screenRange: Gx(t)\n    });\n  }\n  function t0(r) {\n    return function (t, e) {\n      return Qx(t, {\n        y: o = (0 < r ? Rx : Ix)(Bx(n = e).y, lx(n), gx(n), Sx(n))\n      }), vt.some(o).map(D);\n      var n, o;\n    };\n  }\n  function e0(t, e, n, o, r, i) {\n    var u,\n      a,\n      c,\n      s,\n      l,\n      f,\n      d,\n      m,\n      g = (a = i, c = n, s = o, l = r, f = Gx(u = e), d = s.bind(function (t) {\n        return vt.some(Yx(t, u));\n      }).getOr(0), m = l.bind(function (t) {\n        return vt.some(Yx(t, u));\n      }).getOr(f), Vx({\n        min: lx(a),\n        max: gx(a),\n        range: yx(a),\n        value: c,\n        hasMinEdge: Dx(a),\n        hasMaxEdge: Ax(a),\n        minBound: Ux(u),\n        minOffset: 0,\n        maxBound: jx(u),\n        maxOffset: f,\n        centerMinEdge: d,\n        centerMaxEdge: m\n      }));\n    return Ux(e) - Ux(t) + g;\n  }\n  function n0(t, e) {\n    br(t, Aw(), {\n      value: e\n    });\n  }\n  function o0(t, e) {\n    return {\n      x: t,\n      y: e\n    };\n  }\n  function r0(u, a) {\n    return function (t, e) {\n      return o = e, r = 0 < u ? Rx : Ix, n0(t, o0(i = (n = a) ? Bx(o).x : r(Bx(o).x, sx(o), mx(o), Sx(o)), n ? r(Bx(o).y, lx(o), gx(o), Sx(o)) : Bx(o).y)), vt.some(i).map(D);\n      var n, o, r, i;\n    };\n  }\n  function i0(t) {\n    return \"<alloy.field.\" + t + \">\";\n  }\n  function u0(f, d, m, g) {\n    function p(t, e, n, o, r) {\n      var i,\n        u,\n        a = f(uS + \"range\"),\n        c = [my.parts.label({\n          dom: {\n            tag: \"label\",\n            innerHtml: n,\n            attributes: {\n              \"aria-label\": o\n            }\n          }\n        }), my.parts.field({\n          data: r,\n          factory: Dy,\n          inputAttributes: _lt({\n            type: \"text\"\n          }, \"hex\" === e ? {\n            \"aria-live\": \"polite\"\n          } : {}),\n          inputClasses: [d(\"textfield\")],\n          inputBehaviours: ec([(i = e, u = t, Ky.config({\n            invalidClass: d(\"invalid\"),\n            notify: {\n              onValidate: function onValidate(t) {\n                br(t, iS, {\n                  type: i\n                });\n              },\n              onValid: function onValid(t) {\n                br(t, oS, {\n                  type: i,\n                  value: Df.getValue(t)\n                });\n              },\n              onInvalid: function onInvalid(t) {\n                br(t, rS, {\n                  type: i,\n                  value: Df.getValue(t)\n                });\n              }\n            },\n            validator: {\n              validate: function validate(t) {\n                var e = Df.getValue(t),\n                  n = u(e) ? Nn.value(!0) : Nn.error(f(\"aria.input.invalid\"));\n                return Gy(n);\n              },\n              validateOnLoad: !1\n            }\n          })), py.config({})]),\n          onSetValue: function onSetValue(t) {\n            Ky.isInvalid(t) && Ky.run(t).get(st);\n          }\n        })],\n        s = \"hex\" !== e ? [my.parts[\"aria-descriptor\"]({\n          text: a\n        })] : [];\n      return {\n        dom: {\n          tag: \"div\",\n          attributes: {\n            role: \"presentation\"\n          }\n        },\n        components: c.concat(s)\n      };\n    }\n    function h(t, e) {\n      var n = e.red,\n        o = e.green,\n        r = e.blue;\n      Df.setValue(t, {\n        red: n,\n        green: o,\n        blue: r\n      });\n    }\n    function v(t, e) {\n      b.getOpt(t).each(function (t) {\n        fe(t.element, \"background-color\", \"#\" + e.value);\n      });\n    }\n    var b = Hm({\n      dom: {\n        tag: \"div\",\n        classes: [d(\"rgba-preview\")],\n        styles: {\n          \"background-color\": \"white\"\n        },\n        attributes: {\n          role: \"presentation\"\n        }\n      }\n    });\n    return kl({\n      factory: function factory() {\n        function a(t) {\n          return o[t].get();\n        }\n        function c(t, e) {\n          o[t].set(e);\n        }\n        function e(t, e) {\n          var n = e.event;\n          \"hex\" !== n.type ? c(n.type, vt.none()) : g(t);\n        }\n        function n(t, e) {\n          var r,\n            n,\n            o,\n            i,\n            u = e.event;\n          \"hex\" === u.type ? function (t, e) {\n            m(t);\n            var n = Bv(e);\n            c(\"hex\", vt.some(e));\n            var o = Vv(n);\n            h(t, o), s(o), br(t, Qw, {\n              hex: n\n            }), v(t, n);\n          }(t, u.value) : (r = t, n = u.type, o = u.value, i = parseInt(o, 10), c(n, vt.some(i)), a(\"red\").bind(function (n) {\n            return a(\"green\").bind(function (e) {\n              return a(\"blue\").map(function (t) {\n                return Rv(n, e, t, 1);\n              });\n            });\n          }).each(function (t) {\n            var e,\n              n,\n              o = (e = r, n = Iv(t), nS.getField(e, \"hex\").each(function (t) {\n                Vg.isFocused(t) || Df.setValue(e, {\n                  hex: n.value\n                });\n              }), n);\n            br(r, Qw, {\n              hex: o\n            }), v(r, o);\n          }));\n        }\n        function t(t) {\n          return {\n            label: f(uS + t + \".label\"),\n            description: f(uS + t + \".description\")\n          };\n        }\n        function s(t) {\n          var e = t.red,\n            n = t.green,\n            o = t.blue;\n          c(\"red\", vt.some(e)), c(\"green\", vt.some(n)), c(\"blue\", vt.some(o));\n        }\n        var o = {\n            red: Po(vt.some(255)),\n            green: Po(vt.some(255)),\n            blue: Po(vt.some(255)),\n            hex: Po(vt.some(\"ffffff\"))\n          },\n          r = t(\"red\"),\n          i = t(\"green\"),\n          u = t(\"blue\"),\n          l = t(\"hex\");\n        return Yo(nS.sketch(function (t) {\n          return {\n            dom: {\n              tag: \"form\",\n              classes: [d(\"rgb-form\")],\n              attributes: {\n                \"aria-label\": f(\"aria.color.picker\")\n              }\n            },\n            components: [t.field(\"red\", my.sketch(p(Nv, \"red\", r.label, r.description, 255))), t.field(\"green\", my.sketch(p(Nv, \"green\", i.label, i.description, 255))), t.field(\"blue\", my.sketch(p(Nv, \"blue\", u.label, u.description, 255))), t.field(\"hex\", my.sketch(p(Mv, \"hex\", l.label, l.description, \"ffffff\"))), b.asSpec()],\n            formBehaviours: ec([Ky.config({\n              invalidClass: d(\"form-invalid\")\n            }), mm(\"rgb-form-events\", [Cr(oS, n), Cr(rS, e), Cr(iS, e)])])\n          };\n        }), {\n          apis: {\n            updateHex: function updateHex(t, e) {\n              var n;\n              Df.setValue(t, {\n                hex: e.value\n              }), h(t, n = Vv(e)), s(n), v(t, e);\n            }\n          }\n        });\n      },\n      name: \"RgbForm\",\n      configFields: [],\n      apis: {\n        updateHex: function updateHex(t, e, n) {\n          t.updateHex(e, n);\n        }\n      },\n      extraApis: {}\n    });\n  }\n  function a0(x, w) {\n    return kl({\n      name: \"ColourPicker\",\n      configFields: [mo(\"dom\"), Eo(\"onValidHex\", st), Eo(\"onInvalidHex\", st)],\n      factory: function factory(t) {\n        function e(t, e, n) {\n          v.getOpt(t).each(function (t) {\n            g.setHue(t, n);\n          });\n        }\n        function n(t, e) {\n          b.getOpt(t).each(function (t) {\n            m.updateHex(t, e);\n          });\n        }\n        function r(e, n, o, t) {\n          var r = o,\n            i = Vv(n);\n          p.paletteRgba.set(i), p.paletteHue.set(r), St(t, function (t) {\n            t(e, n, o);\n          });\n        }\n        var o,\n          i,\n          u,\n          a,\n          c,\n          s,\n          l,\n          f,\n          d,\n          m = u0(x, w, t.onValidHex, t.onInvalidHex),\n          g = (l = w, f = $w.parts.spectrum({\n            dom: {\n              tag: \"canvas\",\n              attributes: {\n                role: \"presentation\"\n              },\n              classes: [l(\"sv-palette-spectrum\")]\n            }\n          }), d = $w.parts.thumb({\n            dom: {\n              tag: \"div\",\n              attributes: {\n                role: \"presentation\"\n              },\n              classes: [l(\"sv-palette-thumb\")],\n              innerHtml: \"<div class=\" + l(\"sv-palette-inner-thumb\") + ' role=\"presentation\"></div>'\n            }\n          }), kl({\n            factory: function factory(t) {\n              var e = rt({\n                  x: 0,\n                  y: 0\n                }),\n                n = ec([cd.config({\n                  find: vt.some\n                }), Vg.config({})]);\n              return $w.sketch({\n                dom: {\n                  tag: \"div\",\n                  attributes: {\n                    role: \"presentation\"\n                  },\n                  classes: [l(\"sv-palette\")]\n                },\n                model: {\n                  mode: \"xy\",\n                  getInitialValue: e\n                },\n                rounded: !1,\n                components: [f, d],\n                onChange: function onChange(t, e, n) {\n                  br(t, tS, {\n                    value: n\n                  });\n                },\n                onInit: function onInit(t, e, n, o) {\n                  y(n.element.dom, zv(fb));\n                },\n                sliderBehaviours: n\n              });\n            },\n            name: \"SaturationBrightnessPalette\",\n            configFields: [],\n            apis: {\n              setHue: function setHue(t, e, n) {\n                var o = n;\n                y(e.components()[0].element.dom, zv(Pv(jv(o, 100, 100))));\n              },\n              setThumb: function setThumb(t, e, n) {\n                var o = e,\n                  r = Wv(Vv(n));\n                $w.setValue(o, {\n                  x: r.saturation,\n                  y: 100 - r.value\n                });\n              }\n            },\n            extraApis: {}\n          })),\n          p = {\n            paletteRgba: Po(fb),\n            paletteHue: Po(0)\n          },\n          h = Hm((i = $w.parts.spectrum({\n            dom: {\n              tag: \"div\",\n              classes: [(o = w)(\"hue-slider-spectrum\")],\n              attributes: {\n                role: \"presentation\"\n              }\n            }\n          }), u = $w.parts.thumb({\n            dom: {\n              tag: \"div\",\n              classes: [o(\"hue-slider-thumb\")],\n              attributes: {\n                role: \"presentation\"\n              }\n            }\n          }), $w.sketch({\n            dom: {\n              tag: \"div\",\n              classes: [o(\"hue-slider\")],\n              attributes: {\n                role: \"presentation\"\n              }\n            },\n            rounded: !1,\n            model: {\n              mode: \"y\",\n              getInitialValue: rt({\n                y: 0\n              })\n            },\n            components: [i, u],\n            sliderBehaviours: ec([Vg.config({})]),\n            onChange: function onChange(t, e, n) {\n              br(t, Zw, {\n                value: n\n              });\n            }\n          }))),\n          v = Hm(g.sketch({})),\n          b = Hm(m.sketch({}));\n        function y(t, e) {\n          var n,\n            o,\n            r = t.width,\n            i = t.height,\n            u = t.getContext(\"2d\");\n          null !== u && (u.fillStyle = e, u.fillRect(0, 0, r, i), (n = u.createLinearGradient(0, 0, r, 0)).addColorStop(0, \"rgba(255,255,255,1)\"), n.addColorStop(1, \"rgba(255,255,255,0)\"), u.fillStyle = n, u.fillRect(0, 0, r, i), (o = u.createLinearGradient(0, 0, 0, i)).addColorStop(0, \"rgba(0,0,0,0)\"), o.addColorStop(1, \"rgba(0,0,0,1)\"), u.fillStyle = o, u.fillRect(0, 0, r, i));\n        }\n        return {\n          uid: t.uid,\n          dom: t.dom,\n          components: [v.asSpec(), h.asSpec(), b.asSpec()],\n          behaviours: ec([mm(\"colour-picker-events\", [Cr(Qw, (s = [e, function (t, e, n) {\n            h.getOpt(t).each(function (t) {\n              $w.setValue(t, {\n                y: 100 - n / 360 * 100\n              });\n            });\n          }, function (t, e) {\n            v.getOpt(t).each(function (t) {\n              g.setThumb(t, e);\n            });\n          }], function (t, e) {\n            var n = e.event.hex;\n            r(t, n, Wv(Vv(n)).hue, s);\n          })), Cr(tS, (c = [n], function (t, e) {\n            var n = e.event.value,\n              o = p.paletteHue.get();\n            r(t, Gv(jv(o, n.x, 100 - n.y)), o, c);\n          })), Cr(Zw, (a = [e, n], function (t, e) {\n            var n = (100 - e.event.value.y) / 100 * 360,\n              o = Wv(p.paletteRgba.get());\n            r(t, Gv(jv(n, o.saturation, o.value)), n, a);\n          }))]), cd.config({\n            find: function find(t) {\n              return b.getOpt(t);\n            }\n          }), Fg.config({\n            mode: \"acyclic\"\n          })])\n        };\n      }\n    });\n  }\n  function c0(t) {\n    return sS[t];\n  }\n  function s0(t, e, n) {\n    return Df.config(Yo({\n      store: {\n        mode: \"manual\",\n        getValue: e,\n        setValue: n\n      }\n    }, t.map(function (t) {\n      return {\n        store: {\n          initialValue: t\n        }\n      };\n    }).getOr({})));\n  }\n  function l0(r, i) {\n    function e(t, e) {\n      e.stop();\n    }\n    function n(t) {\n      return function (e, n) {\n        St(t, function (t) {\n          t(e, n);\n        });\n      };\n    }\n    function o(t, e) {\n      var n;\n      gd.isDisabled(t) || (n = e.event.raw, a(t, n.dataTransfer.files));\n    }\n    function u(t, e) {\n      var n = e.event.raw.target;\n      a(t, n.files);\n    }\n    function a(t, e) {\n      var n, o;\n      Df.setValue(t, (n = e, o = fS.explode(i.getSetting(\"images_file_types\", \"jpeg,jpg,jpe,jfi,jif,jfif,png,gif,bmp,webp\", \"string\")), F(kt(n), function (e) {\n        return d(o, function (t) {\n          return At(e.name.toLowerCase(), \".\" + t.toLowerCase());\n        });\n      }))), br(t, yy, {\n        name: r.name\n      });\n    }\n    var c = Hm({\n      dom: {\n        tag: \"input\",\n        attributes: {\n          type: \"file\",\n          accept: \"image/*\"\n        },\n        styles: {\n          display: \"none\"\n        }\n      },\n      behaviours: ec([mm(\"input-file-events\", [Dr(Ci()), Dr(Ni())])])\n    });\n    return ny(r.label.map(function (t) {\n      return oy(t, i);\n    }), my.parts.field({\n      factory: {\n        sketch: function sketch(t) {\n          return {\n            uid: t.uid,\n            dom: {\n              tag: \"div\",\n              classes: [\"tox-dropzone-container\"]\n            },\n            behaviours: ec([pS([]), aw(), gd.config({}), zg.config({\n              toggleClass: \"dragenter\",\n              toggleOnExecute: !1\n            }), mm(\"dropzone-events\", [Cr(\"dragenter\", n([e, zg.toggle])), Cr(\"dragleave\", n([e, zg.toggle])), Cr(\"dragover\", e), Cr(\"drop\", n([e, o])), Cr(ki(), u)])]),\n            components: [{\n              dom: {\n                tag: \"div\",\n                classes: [\"tox-dropzone\"],\n                styles: {}\n              },\n              components: [{\n                dom: {\n                  tag: \"p\",\n                  innerHtml: i.translate(\"Drop an image here\")\n                }\n              }, fp.sketch({\n                dom: {\n                  tag: \"button\",\n                  innerHtml: i.translate(\"Browse for an image\"),\n                  styles: {\n                    position: \"relative\"\n                  },\n                  classes: [\"tox-button\", \"tox-button--secondary\"]\n                },\n                components: [c.asSpec()],\n                action: function action(t) {\n                  c.get(t).element.dom.click();\n                },\n                buttonBehaviours: ec([py.config({}), $v(i.isDisabled), pv()])\n              })]\n            }]\n          };\n        }\n      }\n    }), [\"tox-form__group--stretched\"], []);\n  }\n  function f0(t) {\n    return {\n      dom: {\n        tag: \"div\",\n        styles: {\n          width: \"1px\",\n          height: \"1px\",\n          outline: \"none\"\n        },\n        attributes: {\n          tabindex: \"0\"\n        },\n        classes: t\n      },\n      behaviours: ec([Vg.config({\n        ignore: !0\n      }), py.config({})])\n    };\n  }\n  function d0(t) {\n    return {\n      dom: {\n        tag: \"div\",\n        classes: [\"tox-navobj\"]\n      },\n      components: [f0([hS]), t, f0([vS])],\n      behaviours: ec([cS(1)])\n    };\n  }\n  function m0(t, e) {\n    br(t, xi(), {\n      raw: {\n        which: 9,\n        shiftKey: e\n      }\n    });\n  }\n  function g0(t, e) {\n    var n = e.element;\n    Kr(n, hS) ? m0(t, !0) : Kr(n, vS) && m0(t, !1);\n  }\n  function p0(t) {\n    return Yb(t, [\".\" + hS, \".\" + vS].join(\",\"), T);\n  }\n  function h0(t, e) {\n    return xS(document.createElement(\"canvas\"), t, e);\n  }\n  function v0(t) {\n    var e = h0(t.width, t.height);\n    return yS(e).drawImage(t, 0, 0), e;\n  }\n  function b0(t) {\n    return t.naturalWidth || t.width;\n  }\n  function y0(t) {\n    return t.naturalHeight || t.height;\n  }\n  function x0(t, o, r) {\n    return o = o || \"image/png\", S(HTMLCanvasElement.prototype.toBlob) ? new Ly(function (e, n) {\n      t.toBlob(function (t) {\n        t ? e(t) : n();\n      }, o, r);\n    }) : (g = t.toDataURL(o, r), new Ly(function (t, e) {\n      !function () {\n        var t = g.split(\",\"),\n          e = /data:([^;]+)/.exec(t[0]);\n        if (!e) return vt.none();\n        for (var n = e[1], o = t[1], r = atob(o), i = r.length, u = Math.ceil(i / 1024), a = new Array(u), c = 0; c < u; ++c) {\n          for (var s = 1024 * c, l = Math.min(1024 + s, i), f = new Array(l - s), d = s, m = 0; d < l; ++m, ++d) f[m] = r[d].charCodeAt(0);\n          a[c] = new Uint8Array(f);\n        }\n        return vt.some(new Blob(a, {\n          type: n\n        }));\n      }().fold(function () {\n        e(\"uri is not base64: \" + g);\n      }, t);\n    }));\n    var g;\n  }\n  function w0(t, e, n) {\n    function o(e, n) {\n      return t.then(function (t) {\n        return t.toDataURL(e || \"image/png\", n);\n      });\n    }\n    return {\n      getType: rt(e.type),\n      toBlob: function toBlob() {\n        return Ly.resolve(e);\n      },\n      toDataURL: rt(n),\n      toBase64: function toBase64() {\n        return n.split(\",\")[1];\n      },\n      toAdjustedBlob: function toAdjustedBlob(e, n) {\n        return t.then(function (t) {\n          return x0(t, e, n);\n        });\n      },\n      toAdjustedDataURL: o,\n      toAdjustedBase64: function toAdjustedBase64(t, e) {\n        return o(t, e).then(function (t) {\n          return t.split(\",\")[1];\n        });\n      },\n      toCanvas: function toCanvas() {\n        return t.then(v0);\n      }\n    };\n  }\n  function S0(e, t) {\n    return x0(e, t).then(function (t) {\n      return w0(Ly.resolve(e), t, e.toDataURL());\n    });\n  }\n  function k0(e) {\n    return n = e, new Ly(function (t) {\n      var e = new FileReader();\n      e.onloadend = function () {\n        t(e.result);\n      }, e.readAsDataURL(n);\n    }).then(function (t) {\n      return w0((a = e, new Ly(function (t, e) {\n        function n() {\n          r.removeEventListener(\"load\", i), r.removeEventListener(\"error\", u);\n        }\n        var o = URL.createObjectURL(a),\n          r = new Image(),\n          i = function i() {\n            n(), t(r);\n          },\n          u = function u() {\n            n(), e(\"Unable to load data of type \" + a.type + \": \" + o);\n          };\n        r.addEventListener(\"load\", i), r.addEventListener(\"error\", u), r.src = o, r.complete && setTimeout(i, 0);\n      }).then(function (t) {\n        wS(t);\n        var e = h0(b0(t), y0(t));\n        return yS(e).drawImage(t, 0, 0), e;\n      })), e, t);\n      var a;\n    });\n    var n;\n  }\n  function C0(t, e, n) {\n    var o = \"string\" == typeof t ? parseFloat(t) : t;\n    return n < o ? o = n : o < e && (o = e), o;\n  }\n  function O0() {\n    return [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\n  }\n  function _0(t, e) {\n    for (var n = [], o = new Array(25), r = 0; r < 5; r++) {\n      for (var i = 0; i < 5; i++) n[i] = e[i + 5 * r];\n      for (i = 0; i < 5; i++) {\n        for (var u = 0, a = 0; a < 5; a++) u += t[i + 5 * a] * n[a];\n        o[i + 5 * r] = u;\n      }\n    }\n    return o;\n  }\n  function T0(e, n) {\n    return e.toCanvas().then(function (t) {\n      return kS(t, e.getType(), n);\n    });\n  }\n  function E0(n) {\n    return function (t, e) {\n      return T0(t, n(O0(), e));\n    };\n  }\n  function D0(t, e) {\n    void 0 === e && (e = 2);\n    var n = Math.pow(10, e),\n      o = Math.round(t * n);\n    return Math.ceil(o / n);\n  }\n  function A0(t) {\n    return CS(t);\n  }\n  function B0(t) {\n    return TS(t);\n  }\n  function M0(t, e) {\n    return ES(t, e);\n  }\n  function F0(t, e) {\n    return OS(t, e);\n  }\n  function I0(t, e) {\n    return _S(t, e);\n  }\n  function R0(t, e) {\n    return o = e, (n = t).toCanvas().then(function (t) {\n      return MS(t, n.getType(), o);\n    });\n    var n, o;\n  }\n  function N0(t, e) {\n    return o = e, (n = t).toCanvas().then(function (t) {\n      return BS(t, n.getType(), o);\n    });\n    var n, o;\n  }\n  function P0(t, e, n) {\n    return Xm(t, {\n      tag: \"span\",\n      classes: [\"tox-icon\", \"tox-tbtn__icon-wrap\"],\n      behaviours: n\n    }, e);\n  }\n  function V0(t, e) {\n    return P0(t, e, []);\n  }\n  function H0(t, e) {\n    return P0(t, e, [Rg.config({})]);\n  }\n  function L0(t, e, n) {\n    return {\n      dom: {\n        tag: \"span\",\n        innerHtml: n.translate(t),\n        classes: [e + \"__select-label\"]\n      },\n      behaviours: ec([Rg.config({})])\n    };\n  }\n  function z0(e, n, o) {\n    function t(t, e) {\n      var n = Df.getValue(t);\n      return Vg.focus(n), br(n, \"keydown\", {\n        raw: e.event.raw\n      }), hw.close(n), vt.some(!0);\n    }\n    var r = Po(st),\n      i = e.text.map(function (t) {\n        return Hm(L0(t, n, o.providers));\n      }),\n      u = e.icon.map(function (t) {\n        return Hm(H0(t, o.providers.icons));\n      }),\n      a = e.role.fold(function () {\n        return {};\n      }, function (t) {\n        return {\n          role: t\n        };\n      }),\n      c = e.tooltip.fold(function () {\n        return {};\n      }, function (t) {\n        var e = o.providers.translate(t);\n        return {\n          title: e,\n          \"aria-label\": e\n        };\n      }),\n      s = Xm(\"chevron-down\", {\n        tag: \"div\",\n        classes: [n + \"__select-chevron\"]\n      }, o.providers.icons);\n    return Hm(hw.sketch(_lt(_lt(_lt({}, e.uid ? {\n      uid: e.uid\n    } : {}), a), {\n      dom: {\n        tag: \"button\",\n        classes: [n, n + \"--select\"].concat(B(e.classes, function (t) {\n          return n + \"--\" + t;\n        })),\n        attributes: _lt({}, c)\n      },\n      components: tb([u.map(function (t) {\n        return t.asSpec();\n      }), i.map(function (t) {\n        return t.asSpec();\n      }), vt.some(s)]),\n      matchWidth: !0,\n      useMinWidth: !0,\n      dropdownBehaviours: ec(V(V([], e.dropdownBehaviours, !0), [$v(function () {\n        return e.disabled || o.providers.isDisabled();\n      }), pv(), vw.config({}), Rg.config({}), mm(\"dropdown-events\", [vv(e, r), bv(e, r)]), mm(\"menubutton-update-display-text\", [Cr(NS, function (e, n) {\n        i.bind(function (t) {\n          return t.getOpt(e);\n        }).each(function (t) {\n          Rg.set(t, [ri(o.providers.translate(n.event.text))]);\n        });\n      }), Cr(PS, function (e, n) {\n        u.bind(function (t) {\n          return t.getOpt(e);\n        }).each(function (t) {\n          Rg.set(t, [H0(n.event.icon, o.providers.icons)]);\n        });\n      })])], !1)),\n      eventOrder: Yo(RS, {\n        mousedown: [\"focusing\", \"alloy.base.behaviour\", \"item-type-events\", \"normal-dropdown-events\"]\n      }),\n      sandboxBehaviours: ec([Fg.config({\n        mode: \"special\",\n        onLeft: t,\n        onRight: t\n      })]),\n      lazySink: o.getSink,\n      toggleClass: n + \"--active\",\n      parts: {\n        menu: Zp(0, e.columns, e.presets)\n      },\n      fetch: function fetch(t) {\n        return Wy(C(e.fetch, t));\n      }\n    }))).asSpec();\n  }\n  function U0(t) {\n    return \"separator\" === t.type;\n  }\n  function j0(t, n, o, e) {\n    var r = Ir(\"primary-menu\"),\n      i = HS(t, o.shared.providers.menuItems());\n    if (0 === i.items.length) return vt.none();\n    var u = Gb(r, i.items, n, o, e),\n      a = dt(i.menus, function (t, e) {\n        return Gb(e, t, n, o, !1);\n      }),\n      c = Yo(a, sr(r, u));\n    return vt.from(ip.tieredData(r, c, i.expansions));\n  }\n  function W0(n) {\n    return {\n      isDisabled: function isDisabled() {\n        return gd.isDisabled(n);\n      },\n      setDisabled: function setDisabled(t) {\n        return gd.set(n, t);\n      },\n      setActive: function setActive(t) {\n        var e = n.element;\n        t ? (Yr(e, \"tox-tbtn--enabled\"), oe(e, \"aria-pressed\", !0)) : (qr(e, \"tox-tbtn--enabled\"), ce(e, \"aria-pressed\"));\n      },\n      isActive: function isActive() {\n        return Kr(n.element, \"tox-tbtn--enabled\");\n      }\n    };\n  }\n  function G0(n, t, o, e) {\n    return z0({\n      text: n.text,\n      icon: n.icon,\n      tooltip: n.tooltip,\n      role: e,\n      fetch: function fetch(t, e) {\n        n.fetch(function (t) {\n          e(j0(t, Sh.CLOSE_ON_EXECUTE, o, !1));\n        });\n      },\n      onSetup: n.onSetup,\n      getApi: W0,\n      columns: 1,\n      presets: \"normal\",\n      classes: [],\n      dropdownBehaviours: [py.config({})]\n    }, t, o.shared);\n  }\n  function X0(t, e, n, o, r, i) {\n    void 0 === n && (n = []);\n    var u = e.fold(function () {\n        return {};\n      }, function (t) {\n        return {\n          action: t\n        };\n      }),\n      a = _lt({\n        buttonBehaviours: ec([$v(function () {\n          return t.disabled || i.isDisabled();\n        }), pv(), py.config({}), mm(\"button press\", [kr(\"click\"), kr(\"mousedown\")])].concat(n)),\n        eventOrder: {\n          click: [\"button press\", \"alloy.base.behaviour\"],\n          mousedown: [\"button press\", \"alloy.base.behaviour\"]\n        }\n      }, u),\n      c = Yo(a, {\n        dom: o\n      });\n    return Yo(c, {\n      components: r\n    });\n  }\n  function Y0(t, e, n, o) {\n    void 0 === o && (o = []);\n    var r = {\n        tag: \"button\",\n        classes: [\"tox-tbtn\"],\n        attributes: t.tooltip.map(function (t) {\n          return {\n            \"aria-label\": n.translate(t),\n            title: n.translate(t)\n          };\n        }).getOr({})\n      },\n      i = t.icon.map(function (t) {\n        return V0(t, n.icons);\n      });\n    return X0(t, e, o, r, tb([i]), n);\n  }\n  function q0(t, e, n, o) {\n    void 0 === o && (o = []);\n    var r = Y0(t, vt.some(e), n, o);\n    return fp.sketch(r);\n  }\n  function K0(t, e, n, o, r) {\n    void 0 === o && (o = []), void 0 === r && (r = []);\n    var i = n.translate(t.text),\n      u = t.icon ? t.icon.map(function (t) {\n        return V0(t, n.icons);\n      }) : vt.none(),\n      a = u.isSome() ? tb([u]) : [],\n      c = u.isSome() ? {} : {\n        innerHtml: i\n      },\n      s = V(V(V(V([], t.primary || t.borderless ? [\"tox-button\"] : [\"tox-button\", \"tox-button--secondary\"], !0), u.isSome() ? [\"tox-button--icon\"] : [], !0), t.borderless ? [\"tox-button--naked\"] : [], !0), r, !0);\n    return X0(t, e, o, _lt(_lt({\n      tag: \"button\",\n      classes: s\n    }, c), {\n      attributes: {\n        title: i\n      }\n    }), a, n);\n  }\n  function J0(t, e, n, o, r) {\n    void 0 === o && (o = []), void 0 === r && (r = []);\n    var i = K0(t, vt.some(e), n, o, r);\n    return fp.sketch(i);\n  }\n  function $0(e, n) {\n    return function (t) {\n      \"custom\" === n ? br(t, Sy, {\n        name: e,\n        value: {}\n      }) : \"submit\" === n ? vr(t, ky) : \"cancel\" === n ? vr(t, wy) : console.error(\"Unknown button type: \", n);\n    };\n  }\n  function Q0(e, t, n) {\n    if (\"menu\" === t) {\n      var o = e,\n        r = Hm(G0(_lt(_lt({}, e), {\n          onSetup: function onSetup(t) {\n            return t.setDisabled(e.disabled), st;\n          },\n          fetch: (i = o.items, u = function u() {\n            return r;\n          }, a = n, function (t) {\n            t(B(i, function (t) {\n              var e,\n                n,\n                o = t.text.fold(function () {\n                  return {};\n                }, function (t) {\n                  return {\n                    text: t\n                  };\n                });\n              return _lt(_lt({\n                type: t.type,\n                active: !1\n              }, o), {\n                onAction: function onAction(t) {\n                  var e = !t.isActive();\n                  t.setActive(e), n.storage.set(e), a.shared.getSink().each(function (t) {\n                    u().getOpt(t).each(function (t) {\n                      ka(t.element), br(t, Sy, {\n                        name: n.name,\n                        value: n.storage.get()\n                      });\n                    });\n                  });\n                },\n                onSetup: (e = n = t, function (t) {\n                  t.setActive(e.storage.get());\n                })\n              });\n            }));\n          })\n        }), \"tox-tbtn\", n, vt.none()));\n      return r.asSpec();\n    }\n    var i, u, a;\n    if (\"custom\" === t || \"cancel\" === t || \"submit\" === t) {\n      var c = $0(e.name, t);\n      return J0(_lt(_lt({}, e), {\n        borderless: !1\n      }), c, n.shared.providers, []);\n    }\n    console.error(\"Unknown footer button type: \", t);\n  }\n  function Z0(t, e) {\n    return Jf({\n      factory: my,\n      name: t,\n      overrides: function overrides(o) {\n        return {\n          fieldBehaviours: ec([mm(\"coupled-input-behaviour\", [Cr(Si(), function (n) {\n            ml(n, o, e).bind(cd.getCurrent).each(function (e) {\n              ml(n, o, \"lock\").each(function (t) {\n                zg.isOn(t) && o.onLockedChange(n, e, t);\n              });\n            });\n          })])])\n        };\n      }\n    });\n  }\n  function tw(t) {\n    var e = /^\\s*(\\d+(?:\\.\\d+)?)\\s*(|cm|mm|in|px|pt|pc|em|ex|ch|rem|vw|vh|vmin|vmax|%)\\s*$/.exec(t);\n    if (null === e) return Nn.error(t);\n    var n = parseFloat(e[1]),\n      o = e[2];\n    return Nn.value({\n      value: n,\n      unit: o\n    });\n  }\n  function ew(t, e) {\n    function n(t) {\n      return Tt(o, t);\n    }\n    var o = {\n      \"\": 96,\n      px: 96,\n      pt: 72,\n      cm: 2.54,\n      pc: 12,\n      mm: 25.4,\n      \"in\": 1\n    };\n    return t.unit === e ? vt.some(t.value) : n(t.unit) && n(e) ? o[t.unit] === o[e] ? vt.some(t.value) : vt.some(t.value / o[t.unit] * o[e]) : vt.none();\n  }\n  function nw(t) {\n    return vt.none();\n  }\n  function ow(o, e) {\n    function t(t) {\n      return Xm(t, {\n        tag: \"span\",\n        classes: [\"tox-icon\", \"tox-lock-icon__\" + t]\n      }, e.icons);\n    }\n    function n(t) {\n      return {\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-form__group\"]\n        },\n        components: t\n      };\n    }\n    function r(n) {\n      return my.parts.field({\n        factory: Dy,\n        inputClasses: [\"tox-textfield\"],\n        inputBehaviours: ec([gd.config({\n          disabled: function disabled() {\n            return o.disabled || e.isDisabled();\n          }\n        }), pv(), py.config({}), mm(\"size-input-events\", [Cr(bi(), function (t, e) {\n          br(t, u, {\n            isField1: n\n          });\n        }), Cr(ki(), function (t, e) {\n          br(t, yy, {\n            name: o.name\n          });\n        })])]),\n        selectOnFocus: !1\n      });\n    }\n    function i(t) {\n      return {\n        dom: {\n          tag: \"label\",\n          classes: [\"tox-label\"],\n          innerHtml: e.translate(t)\n        }\n      };\n    }\n    var l = nw,\n      u = Ir(\"ratio-event\"),\n      a = US.parts.lock({\n        dom: {\n          tag: \"button\",\n          classes: [\"tox-lock\", \"tox-button\", \"tox-button--naked\", \"tox-button--icon\"],\n          attributes: {\n            title: e.translate(o.label.getOr(\"Constrain proportions\"))\n          }\n        },\n        components: [t(\"lock\"), t(\"unlock\")],\n        buttonBehaviours: ec([gd.config({\n          disabled: function disabled() {\n            return o.disabled || e.isDisabled();\n          }\n        }), pv(), py.config({})])\n      }),\n      c = US.parts.field1(n([my.parts.label(i(\"Width\")), r(!0)])),\n      s = US.parts.field2(n([my.parts.label(i(\"Height\")), r(!1)]));\n    return US.sketch({\n      dom: {\n        tag: \"div\",\n        classes: [\"tox-form__group\"]\n      },\n      components: [{\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-form__controls-h-stack\"]\n        },\n        components: [c, s, n([i(\"&nbsp;\"), a])]\n      }],\n      field1Name: \"width\",\n      field2Name: \"height\",\n      locked: !0,\n      markers: {\n        lockClass: \"tox-locked\"\n      },\n      onLockedChange: function onLockedChange(t, i, e) {\n        tw(Df.getValue(t)).each(function (t) {\n          l(t).each(function (t) {\n            var e, n, o, r;\n            Df.setValue(i, (r = -1 !== (r = (e = t).value.toFixed((n = e.unit) in (o = {\n              \"\": 0,\n              px: 0,\n              pt: 1,\n              mm: 1,\n              pc: 2,\n              ex: 2,\n              em: 2,\n              ch: 2,\n              rem: 2,\n              cm: 3,\n              \"in\": 4,\n              \"%\": 4\n            }) ? o[n] : 1)).indexOf(\".\") ? r.replace(/\\.?0*$/, \"\") : r) + e.unit);\n          });\n        });\n      },\n      coupledFieldBehaviours: ec([gd.config({\n        disabled: function disabled() {\n          return o.disabled || e.isDisabled();\n        },\n        onDisabled: function onDisabled(t) {\n          US.getField1(t).bind(my.getField).each(gd.disable), US.getField2(t).bind(my.getField).each(gd.disable), US.getLock(t).each(gd.disable);\n        },\n        onEnabled: function onEnabled(t) {\n          US.getField1(t).bind(my.getField).each(gd.enable), US.getField2(t).bind(my.getField).each(gd.enable), US.getLock(t).each(gd.enable);\n        }\n      }), pv(), mm(\"size-input-events2\", [Cr(u, function (t, e) {\n        var n,\n          o,\n          r,\n          i = e.event.isField1,\n          u = i ? US.getField1(t) : US.getField2(t),\n          a = i ? US.getField2(t) : US.getField1(t),\n          c = u.map(Df.getValue).getOr(\"\"),\n          s = a.map(Df.getValue).getOr(\"\");\n        n = s, o = tw(c).toOptional(), r = tw(n).toOptional(), l = Et(o, r, function (t, o) {\n          return ew(t, o.unit).map(function (t) {\n            return o.value / t;\n          }).map(function (t) {\n            return e = t, n = o.unit, function (t) {\n              return ew(t, n).map(function (t) {\n                return {\n                  value: t * e,\n                  unit: n\n                };\n              });\n            };\n            var e, n;\n          }).getOr(nw);\n        }).getOr(nw);\n      })])])\n    });\n  }\n  function rw(f, c) {\n    function t(t, e, n, o) {\n      return Hm(J0({\n        name: t,\n        text: t,\n        disabled: n,\n        primary: o,\n        icon: vt.none(),\n        borderless: !1\n      }, e, c));\n    }\n    function e(t, e, n, o) {\n      return Hm(q0({\n        name: t,\n        icon: vt.some(t),\n        tooltip: vt.some(e),\n        disabled: o,\n        primary: !1,\n        borderless: !1\n      }, n, c));\n    }\n    function d(t, n) {\n      t.map(function (t) {\n        var e = t.get(n);\n        e.hasConfigured(gd) && gd.disable(e);\n      });\n    }\n    function m(t, n) {\n      t.map(function (t) {\n        var e = t.get(n);\n        e.hasConfigured(gd) && gd.enable(e);\n      });\n    }\n    function r(t, e, n) {\n      br(t, e, n);\n    }\n    function i(t) {\n      return vr(t, YS.disable()), 0;\n    }\n    function u(t) {\n      return vr(t, YS.enable()), 0;\n    }\n    function g(t, e) {\n      i(t), r(t, jS.transform(), {\n        transform: e\n      }), u(t);\n    }\n    function n(t) {\n      return function () {\n        q.getOpt(t).each(function (t) {\n          Rg.set(t, [Y]);\n        });\n      };\n    }\n    function s(t, e) {\n      i(t), r(t, jS.transformApply(), {\n        transform: e,\n        swap: n(t)\n      }), u(t);\n    }\n    function p() {\n      return t(\"Back\", function (t) {\n        return r(t, jS.back(), {\n          swap: n(t)\n        });\n      }, !1, !1);\n    }\n    function o() {\n      return Hm({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-spacer\"]\n        },\n        behaviours: ec([gd.config({})])\n      });\n    }\n    function h() {\n      return t(\"Apply\", function (t) {\n        return r(t, jS.apply(), {\n          swap: n(t)\n        });\n      }, !0, !0);\n    }\n    function v(e, n) {\n      return function (t) {\n        return e(t, n);\n      };\n    }\n    function a(t, e) {\n      var n,\n        o = e;\n      i(n = t), r(n, jS.tempTransform(), {\n        transform: o\n      }), u(n);\n    }\n    function b(t, e, n, o, r) {\n      var i = $w.parts.label({\n          dom: {\n            tag: \"label\",\n            classes: [\"tox-label\"],\n            innerHtml: c.translate(t)\n          }\n        }),\n        u = $w.parts.spectrum({\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-slider__rail\"],\n            attributes: {\n              role: \"presentation\"\n            }\n          }\n        }),\n        a = $w.parts.thumb({\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-slider__handle\"],\n            attributes: {\n              role: \"presentation\"\n            }\n          }\n        });\n      return Hm($w.sketch({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-slider\"],\n          attributes: {\n            role: \"presentation\"\n          }\n        },\n        model: {\n          mode: \"x\",\n          minX: n,\n          maxX: r,\n          getInitialValue: rt({\n            x: o\n          })\n        },\n        components: [i, u, a],\n        sliderBehaviours: ec([Vg.config({})]),\n        onChoose: e\n      }));\n    }\n    function l(t, e, n, o, r) {\n      var i,\n        u,\n        a,\n        c,\n        s,\n        l,\n        f = (i = t, u = e, a = n, c = o, s = r, [p(), (l = u, b(i, function (t, e, n) {\n          g(t, v(l, n.x / 100));\n        }, a, c, s)), h()]);\n      return ly.sketch({\n        dom: w,\n        components: f.map(function (t) {\n          return t.asSpec();\n        }),\n        containerBehaviours: ec([mm(\"image-tools-filter-panel-buttons-events\", [Cr(YS.disable(), function (t, e) {\n          d(f, t);\n        }), Cr(YS.enable(), function (t, e) {\n          m(f, t);\n        })])])\n      });\n    }\n    function y(t) {\n      return b(t, function (l, t, e) {\n        var n = H.getOpt(l),\n          o = z.getOpt(l),\n          r = L.getOpt(l);\n        n.each(function (s) {\n          o.each(function (c) {\n            r.each(function (t) {\n              var o,\n                r,\n                i,\n                e = Df.getValue(s).x / 100,\n                n = Df.getValue(t).x / 100,\n                u = Df.getValue(c).x / 100,\n                a = (o = e, r = n, i = u, function (t) {\n                  return T0(t, (e = r, n = i, _0(O0(), [C0(o, 0, 2), 0, 0, 0, 0, 0, C0(e, 0, 2), 0, 0, 0, 0, 0, C0(n, 0, 2), 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1])));\n                  var e, n;\n                });\n              g(l, a);\n            });\n          });\n        });\n      }, 0, 100, 200);\n    }\n    function x(e, n, o) {\n      return function (t) {\n        r(t, jS.swap(), {\n          transform: n,\n          swap: function swap() {\n            q.getOpt(t).each(function (t) {\n              Rg.set(t, [e]), o(t);\n            });\n          }\n        });\n      };\n    }\n    var w = {\n        tag: \"div\",\n        classes: [\"tox-image-tools__toolbar\", \"tox-image-tools-edit-panel\"]\n      },\n      S = st,\n      k = [p(), o(), t(\"Apply\", function (t) {\n        s(t, function (t) {\n          var e,\n            n,\n            o,\n            r,\n            i,\n            u,\n            a,\n            c,\n            s,\n            l = f.getRect();\n          return e = l.x, n = l.y, o = l.w, r = l.h, u = e, a = n, c = o, s = r, (i = t).toCanvas().then(function (t) {\n            return FS(t, i.getType(), u, a, c, s);\n          });\n        }), f.hideCrop();\n      }, !1, !0)],\n      C = ly.sketch({\n        dom: w,\n        components: k.map(function (t) {\n          return t.asSpec();\n        }),\n        containerBehaviours: ec([mm(\"image-tools-crop-buttons-events\", [Cr(YS.disable(), function (t, e) {\n          d(k, t);\n        }), Cr(YS.enable(), function (t, e) {\n          m(k, t);\n        })])])\n      }),\n      O = Hm(ow({\n        name: \"size\",\n        label: vt.none(),\n        constrain: !0,\n        disabled: !1\n      }, c)),\n      _ = [p(), o(), O, o(), t(\"Apply\", function (a) {\n        O.getOpt(a).each(function (t) {\n          var r,\n            i,\n            e = Df.getValue(t),\n            n = parseInt(e.width, 10),\n            o = parseInt(e.height, 10),\n            u = (r = n, i = o, function (t) {\n              return n = r, o = i, (e = t).toCanvas().then(function (t) {\n                return DS(t, n, o).then(function (t) {\n                  return S0(t, e.getType());\n                });\n              });\n              var e, n, o;\n            });\n          s(a, u);\n        });\n      }, !1, !0)],\n      T = ly.sketch({\n        dom: w,\n        components: _.map(function (t) {\n          return t.asSpec();\n        }),\n        containerBehaviours: ec([mm(\"image-tools-resize-buttons-events\", [Cr(YS.disable(), function (t, e) {\n          d(_, t);\n        }), Cr(YS.enable(), function (t, e) {\n          m(_, t);\n        })])])\n      }),\n      E = v(R0, \"h\"),\n      D = v(R0, \"v\"),\n      A = v(N0, -90),\n      B = v(N0, 90),\n      M = [p(), o(), e(\"flip-horizontally\", \"Flip horizontally\", function (t) {\n        a(t, E);\n      }, !1), e(\"flip-vertically\", \"Flip vertically\", function (t) {\n        a(t, D);\n      }, !1), e(\"rotate-left\", \"Rotate counterclockwise\", function (t) {\n        a(t, A);\n      }, !1), e(\"rotate-right\", \"Rotate clockwise\", function (t) {\n        a(t, B);\n      }, !1), o(), h()],\n      F = ly.sketch({\n        dom: w,\n        components: M.map(function (t) {\n          return t.asSpec();\n        }),\n        containerBehaviours: ec([mm(\"image-tools-fliprotate-buttons-events\", [Cr(YS.disable(), function (t, e) {\n          d(M, t);\n        }), Cr(YS.enable(), function (t, e) {\n          m(M, t);\n        })])])\n      }),\n      I = [p(), o(), h()],\n      R = ly.sketch({\n        dom: w,\n        components: I.map(function (t) {\n          return t.asSpec();\n        })\n      }),\n      N = l(\"Brightness\", F0, -100, 0, 100),\n      P = l(\"Contrast\", I0, -100, 0, 100),\n      V = l(\"Gamma\", M0, -100, 0, 100),\n      H = y(\"R\"),\n      L = y(\"G\"),\n      z = y(\"B\"),\n      U = [p(), H, L, z, h()],\n      j = ly.sketch({\n        dom: w,\n        components: U.map(function (t) {\n          return t.asSpec();\n        })\n      }),\n      W = vt.some(B0),\n      G = vt.some(A0),\n      X = [e(\"crop\", \"Crop\", x(C, vt.none(), function (t) {\n        f.showCrop();\n      }), !1), e(\"resize\", \"Resize\", x(T, vt.none(), function (t) {\n        O.getOpt(t).each(function (t) {\n          var e = f.getMeasurements(),\n            n = e.width,\n            o = e.height;\n          Df.setValue(t, {\n            width: n,\n            height: o\n          });\n        });\n      }), !1), e(\"orientation\", \"Orientation\", x(F, vt.none(), S), !1), e(\"brightness\", \"Brightness\", x(N, vt.none(), S), !1), e(\"sharpen\", \"Sharpen\", x(R, W, S), !1), e(\"contrast\", \"Contrast\", x(P, vt.none(), S), !1), e(\"color-levels\", \"Color levels\", x(j, vt.none(), S), !1), e(\"gamma\", \"Gamma\", x(V, vt.none(), S), !1), e(\"invert\", \"Invert\", x(R, G, S), !1)],\n      Y = ly.sketch({\n        dom: w,\n        components: X.map(function (t) {\n          return t.asSpec();\n        })\n      }),\n      q = Hm(ly.sketch({\n        dom: {\n          tag: \"div\"\n        },\n        components: [Y],\n        containerBehaviours: ec([Rg.config({})])\n      }));\n    return {\n      memContainer: q,\n      getApplyButton: function getApplyButton(t) {\n        return q.getOpt(t).map(function (t) {\n          var e = t.components()[0];\n          return e.components()[e.components().length - 1];\n        });\n      }\n    };\n  }\n  function iw(t) {\n    if (k(t.changedTouches)) for (var e = \"screenX screenY pageX pageY clientX clientY\".split(\" \"), n = 0; n < e.length; n++) t[e[n]] = t.changedTouches[0][e[n]];\n  }\n  (Hy = Vy = Vy || {})[Hy.HighlightFirst = 0] = \"HighlightFirst\", Hy[Hy.HighlightNone = 1] = \"HighlightNone\";\n  function uw(o, t) {\n    return {\n      uid: o.uid,\n      dom: o.dom,\n      components: t,\n      behaviours: el(o.formBehaviours, [Df.config({\n        store: {\n          mode: \"manual\",\n          getValue: function getValue(t) {\n            return dt(hl(t, o), function (t, o) {\n              return t().bind(function (t) {\n                var e = cd.getCurrent(t),\n                  n = new Error(\"Cannot find a current component to extract the value from for form part '\" + o + \"': \" + Fr(t.element));\n                return e.fold(function () {\n                  return Nn.error(n);\n                }, Nn.value);\n              }).map(Df.getValue);\n            });\n          },\n          setValue: function setValue(n, t) {\n            J(t, function (e, t) {\n              ml(n, o, t).each(function (t) {\n                cd.getCurrent(t).each(function (t) {\n                  Df.setValue(t, e);\n                });\n              });\n            });\n          }\n        }\n      })]),\n      apis: {\n        getField: function getField(t, e) {\n          return ml(t, o, e).bind(cd.getCurrent);\n        }\n      }\n    };\n  }\n  function aw() {\n    return cd.config({\n      find: vt.some\n    });\n  }\n  function cw(t) {\n    return e = Br, n = Mr, s0(t, function (t) {\n      return e(t.element);\n    }, function (t, e) {\n      return n(t.element, e);\n    });\n    var e, n;\n  }\n  var sw,\n    lw,\n    fw,\n    dw,\n    mw = function mw(e, t) {\n      return e.getSystem().getByUid(t.uid + \"-\" + Qy()).map(function (t) {\n        return function () {\n          return Nn.value(t);\n        };\n      }).getOrThunk(function () {\n        return t.lazySink.fold(function () {\n          return function () {\n            return Nn.error(new Error(\"No internal sink is specified, nor could an external sink be found\"));\n          };\n        }, function (t) {\n          return function () {\n            return t(e);\n          };\n        });\n      });\n    },\n    gw = rt([mo(\"dom\"), mo(\"fetch\"), Ju(\"onOpen\"), $u(\"onExecute\"), Eo(\"getHotspot\", vt.some), Eo(\"getAnchorOverrides\", rt({})), Uc(), Zs(\"dropdownBehaviours\", [zg, $y, Fg, Vg]), mo(\"toggleClass\"), Eo(\"eventOrder\", {}), wo(\"lazySink\"), Eo(\"matchWidth\", !1), Eo(\"useMinWidth\", !1), wo(\"role\")].concat(ux())),\n    pw = rt([$f({\n      schema: [Yu()],\n      name: \"menu\",\n      defaults: function defaults(t) {\n        return {\n          onExecute: t.onExecute\n        };\n      }\n    }), Zy()]),\n    hw = Cl({\n      name: \"Dropdown\",\n      configFields: gw(),\n      partFields: pw(),\n      factory: function factory(e, t, n, o) {\n        function r(t) {\n          bf.getState(t).each(function (t) {\n            ip.highlightPrimary(t);\n          });\n        }\n        function i(t, e) {\n          return yr(t), vt.some(!0);\n        }\n        var u,\n          a = {\n            expand: function expand(t) {\n              zg.isOn(t) || nx(e, h, t, o, st, Vy.HighlightNone).get(st);\n            },\n            open: function open(t) {\n              zg.isOn(t) || nx(e, h, t, o, st, Vy.HighlightFirst).get(st);\n            },\n            isOpen: zg.isOn,\n            close: function close(t) {\n              zg.isOn(t) && nx(e, h, t, o, st, Vy.HighlightFirst).get(st);\n            },\n            repositionMenus: function repositionMenus(t) {\n              zg.isOn(t) && ix(t);\n            }\n          };\n        return {\n          uid: e.uid,\n          dom: e.dom,\n          components: t,\n          behaviours: el(e.dropdownBehaviours, [zg.config({\n            toggleClass: e.toggleClass,\n            aria: {\n              mode: \"expanded\"\n            }\n          }), $y.config({\n            others: {\n              sandbox: function sandbox(t) {\n                return rx(e, t, {\n                  onOpen: function onOpen() {\n                    return zg.on(t);\n                  },\n                  onClose: function onClose() {\n                    return zg.off(t);\n                  }\n                });\n              }\n            }\n          }), Fg.config({\n            mode: \"special\",\n            onSpace: i,\n            onEnter: i,\n            onDown: function onDown(t, e) {\n              return hw.isOpen(t) ? r($y.getCoupled(t, \"sandbox\")) : hw.open(t), vt.some(!0);\n            },\n            onEscape: function onEscape(t, e) {\n              return hw.isOpen(t) ? (hw.close(t), vt.some(!0)) : vt.none();\n            }\n          }), Vg.config({})]),\n          events: Sm(vt.some(function (t) {\n            nx(e, h, t, o, r, Vy.HighlightFirst).get(st);\n          })),\n          eventOrder: _lt(_lt({}, e.eventOrder), ((u = {})[Ii()] = [\"disabling\", \"toggling\", \"alloy.base.behaviour\"], u)),\n          apis: a,\n          domModification: {\n            attributes: _lt(_lt({\n              \"aria-haspopup\": \"true\"\n            }, e.role.fold(function () {\n              return {};\n            }, function (t) {\n              return {\n                role: t\n              };\n            })), \"button\" === e.dom.tag ? {\n              type: tt(e.dom, \"attributes\").bind(function (t) {\n                return tt(t, \"type\");\n              }).getOr(\"button\")\n            } : {})\n          }\n        };\n      },\n      apis: {\n        open: function open(t, e) {\n          return t.open(e);\n        },\n        expand: function expand(t, e) {\n          return t.expand(e);\n        },\n        close: function close(t, e) {\n          return t.close(e);\n        },\n        isOpen: function isOpen(t, e) {\n          return t.isOpen(e);\n        },\n        repositionMenus: function repositionMenus(t, e) {\n          return t.repositionMenus(e);\n        }\n      }\n    }),\n    vw = xa({\n      fields: [],\n      name: \"unselecting\",\n      active: Object.freeze({\n        __proto__: null,\n        events: function events() {\n          return nu([Sr(Ei(), D)]);\n        },\n        exhibit: function exhibit() {\n          return zr({\n            styles: {\n              \"-webkit-user-select\": \"none\",\n              \"user-select\": \"none\",\n              \"-ms-user-select\": \"none\",\n              \"-moz-user-select\": \"-moz-none\"\n            },\n            attributes: {\n              unselectable: \"on\"\n            }\n          });\n        }\n      })\n    }),\n    bw = Ir(\"color-input-change\"),\n    yw = Ir(\"color-swatch-change\"),\n    xw = Ir(\"color-picker-cancel\"),\n    ww = Qf({\n      schema: [mo(\"dom\")],\n      name: \"label\"\n    }),\n    Sw = ax(\"top-left\"),\n    kw = ax(\"top\"),\n    Cw = ax(\"top-right\"),\n    Ow = ax(\"right\"),\n    _w = ax(\"bottom-right\"),\n    Tw = ax(\"bottom\"),\n    Ew = ax(\"bottom-left\"),\n    Dw = [ww, ax(\"left\"), Ow, kw, Tw, Sw, Cw, Ew, _w, Jf({\n      name: \"thumb\",\n      defaults: rt({\n        dom: {\n          styles: {\n            position: \"absolute\"\n          }\n        }\n      }),\n      overrides: function overrides(t) {\n        return {\n          events: nu([Tr(si(), t, \"spectrum\"), Tr(li(), t, \"spectrum\"), Tr(fi(), t, \"spectrum\"), Tr(mi(), t, \"spectrum\"), Tr(gi(), t, \"spectrum\"), Tr(hi(), t, \"spectrum\")])\n        };\n      }\n    }), Jf({\n      schema: [cr(\"mouseIsDown\", function () {\n        return Po(!1);\n      })],\n      name: \"spectrum\",\n      overrides: function overrides(n) {\n        function o(e, t) {\n          return r.getValueFromEvent(t).map(function (t) {\n            return r.setValueFrom(e, n, t);\n          });\n        }\n        var r = n.model.manager;\n        return {\n          behaviours: ec([Fg.config({\n            mode: \"special\",\n            onLeft: function onLeft(t) {\n              return r.onLeft(t, n);\n            },\n            onRight: function onRight(t) {\n              return r.onRight(t, n);\n            },\n            onUp: function onUp(t) {\n              return r.onUp(t, n);\n            },\n            onDown: function onDown(t) {\n              return r.onDown(t, n);\n            }\n          }), Vg.config({})]),\n          events: nu([Cr(si(), o), Cr(li(), o), Cr(mi(), o), Cr(gi(), function (t, e) {\n            n.mouseIsDown.get() && o(t, e);\n          })])\n        };\n      }\n    })],\n    Aw = rt(\"slider.change.value\"),\n    Bw = \"left\",\n    Mw = Jx(-1),\n    Fw = Jx(1),\n    Iw = vt.none,\n    Rw = vt.none,\n    Nw = {\n      \"top-left\": vt.none(),\n      top: vt.none(),\n      \"top-right\": vt.none(),\n      right: vt.some(function (t, e) {\n        Fx(t, {\n          x: px(e)\n        });\n      }),\n      \"bottom-right\": vt.none(),\n      bottom: vt.none(),\n      \"bottom-left\": vt.none(),\n      left: vt.some(function (t, e) {\n        Fx(t, {\n          x: fx(e)\n        });\n      })\n    },\n    Pw = Object.freeze({\n      __proto__: null,\n      setValueFrom: function setValueFrom(t, e, n) {\n        var o = Kx(t, e, n);\n        return qx(t, {\n          x: o\n        }), o;\n      },\n      setToMin: function setToMin(t, e) {\n        qx(t, {\n          x: sx(e)\n        });\n      },\n      setToMax: function setToMax(t, e) {\n        qx(t, {\n          x: mx(e)\n        });\n      },\n      findValueOfOffset: Kx,\n      getValueFromEvent: function getValueFromEvent(t) {\n        return cx(t).map(function (t) {\n          return t.left;\n        });\n      },\n      findPositionOfValue: $x,\n      setPositionFromValue: function setPositionFromValue(t, e, n, o) {\n        var r = Bx(n),\n          i = $x(t, o.getSpectrum(t), r.x, o.getLeftEdge(t), o.getRightEdge(t), n),\n          u = Ce(e.element) / 2;\n        fe(e.element, \"left\", i - u + \"px\");\n      },\n      onLeft: Mw,\n      onRight: Fw,\n      onUp: Iw,\n      onDown: Rw,\n      edgeActions: Nw\n    }),\n    Vw = vt.none,\n    Hw = vt.none,\n    Lw = t0(-1),\n    zw = t0(1),\n    Uw = {\n      \"top-left\": vt.none(),\n      top: vt.some(function (t, e) {\n        Fx(t, {\n          y: dx(e)\n        });\n      }),\n      \"top-right\": vt.none(),\n      right: vt.none(),\n      \"bottom-right\": vt.none(),\n      bottom: vt.some(function (t, e) {\n        Fx(t, {\n          y: hx(e)\n        });\n      }),\n      \"bottom-left\": vt.none(),\n      left: vt.none()\n    },\n    jw = Object.freeze({\n      __proto__: null,\n      setValueFrom: function setValueFrom(t, e, n) {\n        var o = Zx(t, e, n);\n        return Qx(t, {\n          y: o\n        }), o;\n      },\n      setToMin: function setToMin(t, e) {\n        Qx(t, {\n          y: lx(e)\n        });\n      },\n      setToMax: function setToMax(t, e) {\n        Qx(t, {\n          y: gx(e)\n        });\n      },\n      findValueOfOffset: Zx,\n      getValueFromEvent: function getValueFromEvent(t) {\n        return cx(t).map(function (t) {\n          return t.top;\n        });\n      },\n      findPositionOfValue: e0,\n      setPositionFromValue: function setPositionFromValue(t, e, n, o) {\n        var r = Bx(n),\n          i = e0(t, o.getSpectrum(t), r.y, o.getTopEdge(t), o.getBottomEdge(t), n),\n          u = xe(e.element) / 2;\n        fe(e.element, \"top\", i - u + \"px\");\n      },\n      onLeft: Vw,\n      onRight: Hw,\n      onUp: Lw,\n      onDown: zw,\n      edgeActions: Uw\n    }),\n    Ww = cx,\n    Gw = r0(-1, !1),\n    Xw = r0(1, !1),\n    Yw = r0(-1, !0),\n    qw = r0(1, !0),\n    Kw = {\n      \"top-left\": vt.some(function (t, e) {\n        Fx(t, Mx(fx(e), dx(e)));\n      }),\n      top: vt.some(function (t, e) {\n        Fx(t, Mx(xx(e), dx(e)));\n      }),\n      \"top-right\": vt.some(function (t, e) {\n        Fx(t, Mx(px(e), dx(e)));\n      }),\n      right: vt.some(function (t, e) {\n        Fx(t, Mx(px(e), wx(e)));\n      }),\n      \"bottom-right\": vt.some(function (t, e) {\n        Fx(t, Mx(px(e), hx(e)));\n      }),\n      bottom: vt.some(function (t, e) {\n        Fx(t, Mx(xx(e), hx(e)));\n      }),\n      \"bottom-left\": vt.some(function (t, e) {\n        Fx(t, Mx(fx(e), hx(e)));\n      }),\n      left: vt.some(function (t, e) {\n        Fx(t, Mx(fx(e), wx(e)));\n      })\n    },\n    Jw = Object.freeze({\n      __proto__: null,\n      setValueFrom: function setValueFrom(t, e, n) {\n        var o = o0(Kx(t, e, n.left), Zx(t, e, n.top));\n        return n0(t, o), o;\n      },\n      setToMin: function setToMin(t, e) {\n        n0(t, o0(sx(e), lx(e)));\n      },\n      setToMax: function setToMax(t, e) {\n        n0(t, o0(mx(e), gx(e)));\n      },\n      getValueFromEvent: Ww,\n      setPositionFromValue: function setPositionFromValue(t, e, n, o) {\n        var r = Bx(n),\n          i = $x(t, o.getSpectrum(t), r.x, o.getLeftEdge(t), o.getRightEdge(t), n),\n          u = e0(t, o.getSpectrum(t), r.y, o.getTopEdge(t), o.getBottomEdge(t), n),\n          a = Ce(e.element) / 2,\n          c = xe(e.element) / 2;\n        fe(e.element, \"left\", i - a + \"px\"), fe(e.element, \"top\", u - c + \"px\");\n      },\n      onLeft: Gw,\n      onRight: Xw,\n      onUp: Yw,\n      onDown: qw,\n      edgeActions: Kw\n    }),\n    $w = Cl({\n      name: \"Slider\",\n      configFields: [Eo(\"stepSize\", 1), Eo(\"onChange\", st), Eo(\"onChoose\", st), Eo(\"onInit\", st), Eo(\"onDragStart\", st), Eo(\"onDragEnd\", st), Eo(\"snapToGrid\", !1), Eo(\"rounded\", !0), wo(\"snapStart\"), go(\"model\", lo(\"mode\", {\n        x: [Eo(\"minX\", 0), Eo(\"maxX\", 100), cr(\"value\", function (t) {\n          return Po(t.mode.minX);\n        }), mo(\"getInitialValue\"), ta(\"manager\", Pw)],\n        y: [Eo(\"minY\", 0), Eo(\"maxY\", 100), cr(\"value\", function (t) {\n          return Po(t.mode.minY);\n        }), mo(\"getInitialValue\"), ta(\"manager\", jw)],\n        xy: [Eo(\"minX\", 0), Eo(\"maxX\", 100), Eo(\"minY\", 0), Eo(\"maxY\", 100), cr(\"value\", function (t) {\n          return Po({\n            x: t.mode.minX,\n            y: t.mode.minY\n          });\n        }), mo(\"getInitialValue\"), ta(\"manager\", Jw)]\n      })), Zs(\"sliderBehaviours\", [Fg, Df]), cr(\"mouseIsDown\", function () {\n        return Po(!1);\n      })],\n      partFields: Dw,\n      factory: function factory(i, t, e, n) {\n        function u(t) {\n          return gl(t, i, \"thumb\");\n        }\n        function a(t) {\n          return gl(t, i, \"spectrum\");\n        }\n        function o(t) {\n          return ml(t, i, \"left-edge\");\n        }\n        function r(t) {\n          return ml(t, i, \"right-edge\");\n        }\n        function c(t) {\n          return ml(t, i, \"top-edge\");\n        }\n        function s(t) {\n          return ml(t, i, \"bottom-edge\");\n        }\n        function l(t, e) {\n          v.setPositionFromValue(t, e, i, {\n            getLeftEdge: o,\n            getRightEdge: r,\n            getTopEdge: c,\n            getBottomEdge: s,\n            getSpectrum: a\n          });\n        }\n        function f(t, e) {\n          h.value.set(e), l(t, u(t));\n        }\n        function d(n) {\n          var t = i.mouseIsDown.get();\n          i.mouseIsDown.set(!1), t && ml(n, i, \"thumb\").each(function (t) {\n            var e = h.value.get();\n            i.onChoose(n, t, e);\n          });\n        }\n        function m(t, e) {\n          e.stop(), i.mouseIsDown.set(!0), i.onDragStart(t, u(t));\n        }\n        function g(t, e) {\n          e.stop(), i.onDragEnd(t, u(t)), d(t);\n        }\n        var p,\n          h = i.model,\n          v = h.manager;\n        return {\n          uid: i.uid,\n          dom: i.dom,\n          components: t,\n          behaviours: el(i.sliderBehaviours, [Fg.config({\n            mode: \"special\",\n            focusIn: function focusIn(t) {\n              return ml(t, i, \"spectrum\").map(Fg.focusIn).map(D);\n            }\n          }), Df.config({\n            store: {\n              mode: \"manual\",\n              getValue: function getValue(t) {\n                return h.value.get();\n              }\n            }\n          }), ic.config({\n            channels: ((p = {})[wf()] = {\n              onReceive: d\n            }, p)\n          })]),\n          events: nu([Cr(Aw(), function (t, e) {\n            !function (t, e) {\n              f(t, e);\n              var n = u(t);\n              i.onChange(t, n, e), vt.some(!0);\n            }(t, e.event.value);\n          }), ou(function (t, e) {\n            var n = h.getInitialValue();\n            h.value.set(n);\n            var o = u(t);\n            l(t, o);\n            var r = a(t);\n            i.onInit(t, o, r, h.value.get());\n          }), Cr(si(), m), Cr(fi(), g), Cr(mi(), m), Cr(hi(), g)]),\n          apis: {\n            resetToMin: function resetToMin(t) {\n              v.setToMin(t, i);\n            },\n            resetToMax: function resetToMax(t) {\n              v.setToMax(t, i);\n            },\n            setValue: f,\n            refresh: l\n          },\n          domModification: {\n            styles: {\n              position: \"relative\"\n            }\n          }\n        };\n      },\n      apis: {\n        setValue: function setValue(t, e, n) {\n          t.setValue(e, n);\n        },\n        resetToMin: function resetToMin(t, e) {\n          t.resetToMin(e);\n        },\n        resetToMax: function resetToMax(t, e) {\n          t.resetToMax(e);\n        },\n        refresh: function refresh(t, e) {\n          t.refresh(e);\n        }\n      }\n    }),\n    Qw = Ir(\"rgb-hex-update\"),\n    Zw = Ir(\"slider-update\"),\n    tS = Ir(\"palette-update\"),\n    eS = [Zs(\"formBehaviours\", [Df])],\n    nS = {\n      getField: Hr(function (t, e, n) {\n        return t.getField(e, n);\n      }),\n      sketch: function sketch(t) {\n        var n,\n          e = {\n            field: function field(t, e) {\n              return n.push(t), cl(\"form\", i0(t), e);\n            },\n            record: rt(n = [])\n          },\n          o = t(e),\n          r = B(e.record(), function (t) {\n            return Jf({\n              name: t,\n              pname: i0(t)\n            });\n          });\n        return Sl(\"form\", eS, r, uw, o);\n      }\n    },\n    oS = Ir(\"valid-input\"),\n    rS = Ir(\"invalid-input\"),\n    iS = Ir(\"validating-input\"),\n    uS = \"colorcustom.rgb.\",\n    aS = function aS(t) {\n      return cd.config({\n        find: t.getOpt\n      });\n    },\n    cS = function cS(t) {\n      return cd.config({\n        find: function find(e) {\n          return Jt(e.element, t).bind(function (t) {\n            return e.getSystem().getByDom(t).toOptional();\n          });\n        }\n      });\n    },\n    sS = {\n      \"colorcustom.rgb.red.label\": \"R\",\n      \"colorcustom.rgb.red.description\": \"Red component\",\n      \"colorcustom.rgb.green.label\": \"G\",\n      \"colorcustom.rgb.green.description\": \"Green component\",\n      \"colorcustom.rgb.blue.label\": \"B\",\n      \"colorcustom.rgb.blue.description\": \"Blue component\",\n      \"colorcustom.rgb.hex.label\": \"#\",\n      \"colorcustom.rgb.hex.description\": \"Hex color code\",\n      \"colorcustom.rgb.range\": \"Range 0 to 255\",\n      \"colorcustom.sb.saturation\": \"Saturation\",\n      \"colorcustom.sb.brightness\": \"Brightness\",\n      \"colorcustom.sb.picker\": \"Saturation and Brightness Picker\",\n      \"colorcustom.sb.palette\": \"Saturation and Brightness Palette\",\n      \"colorcustom.sb.instructions\": \"Use arrow keys to select saturation and brightness, on x and y axes\",\n      \"colorcustom.hue.hue\": \"Hue\",\n      \"colorcustom.hue.slider\": \"Hue Slider\",\n      \"colorcustom.hue.palette\": \"Hue Palette\",\n      \"colorcustom.hue.instructions\": \"Use arrow keys to select a hue\",\n      \"aria.color.picker\": \"Color Picker\",\n      \"aria.input.invalid\": \"Invalid input\"\n    },\n    lS = tinymce.util.Tools.resolve(\"tinymce.Resource\"),\n    fS = tinymce.util.Tools.resolve(\"tinymce.util.Tools\"),\n    dS = $o([Eo(\"preprocess\", h), Eo(\"postprocess\", h)]),\n    mS = function mS(r, t) {\n      var i = so(\"RepresentingConfigs.memento processors\", dS, t);\n      return Df.config({\n        store: {\n          mode: \"manual\",\n          getValue: function getValue(t) {\n            var e = r.get(t),\n              n = Df.getValue(e);\n            return i.postprocess(n);\n          },\n          setValue: function setValue(t, e) {\n            var n = i.preprocess(e),\n              o = r.get(t);\n            Df.setValue(o, n);\n          }\n        }\n      });\n    },\n    gS = s0,\n    pS = function pS(t) {\n      return Df.config({\n        store: {\n          mode: \"memory\",\n          initialValue: t\n        }\n      });\n    },\n    hS = Ir(\"alloy-fake-before-tabstop\"),\n    vS = Ir(\"alloy-fake-after-tabstop\"),\n    bS = !(ln().browser.isIE() || ln().browser.isEdge()),\n    yS = function yS(t) {\n      return t.getContext(\"2d\");\n    },\n    xS = function xS(t, e, n) {\n      return t.width = e, t.height = n, t;\n    },\n    wS = function wS(t) {\n      URL.revokeObjectURL(t.src);\n    },\n    SS = [0, .01, .02, .04, .05, .06, .07, .08, .1, .11, .12, .14, .15, .16, .17, .18, .2, .21, .22, .24, .25, .27, .28, .3, .32, .34, .36, .38, .4, .42, .44, .46, .48, .5, .53, .56, .59, .62, .65, .68, .71, .74, .77, .8, .83, .86, .89, .92, .95, .98, 1, 1.06, 1.12, 1.18, 1.24, 1.3, 1.36, 1.42, 1.48, 1.54, 1.6, 1.66, 1.72, 1.78, 1.84, 1.9, 1.96, 2, 2.12, 2.25, 2.37, 2.5, 2.62, 2.75, 2.87, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.3, 4.7, 4.9, 5, 5.5, 6, 6.5, 6.8, 7, 7.3, 7.5, 7.8, 8, 8.4, 8.7, 9, 9.4, 9.6, 9.8, 10],\n    kS = function kS(t, e, T) {\n      var n = yS(t),\n        o = function (t) {\n          for (var e, n, o, r, i = t.data, u = T[0], a = T[1], c = T[2], s = T[3], l = T[4], f = T[5], d = T[6], m = T[7], g = T[8], p = T[9], h = T[10], v = T[11], b = T[12], y = T[13], x = T[14], w = T[15], S = T[16], k = T[17], C = T[18], O = T[19], _ = 0; _ < i.length; _ += 4) e = i[_], n = i[_ + 1], o = i[_ + 2], r = i[_ + 3], i[_] = e * u + n * a + o * c + r * s + l, i[_ + 1] = e * f + n * d + o * m + r * g + p, i[_ + 2] = e * h + n * v + o * b + r * y + x, i[_ + 3] = e * w + n * S + o * k + r * C + O;\n          return t;\n        }(n.getImageData(0, 0, t.width, t.height));\n      return n.putImageData(o, 0, 0), S0(t, e);\n    },\n    CS = (sw = [-1, 0, 0, 0, 255, 0, -1, 0, 0, 255, 0, 0, -1, 0, 255, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], function (t) {\n      return T0(t, sw);\n    }),\n    OS = E0(function (t, e) {\n      return _0(t, [1, 0, 0, 0, e = C0(255 * e, -255, 255), 0, 1, 0, 0, e, 0, 0, 1, 0, e, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n    }),\n    _S = E0(function (t, e) {\n      var n;\n      return e = C0(e, -1, 1), _0(t, [(n = (e *= 100) < 0 ? 127 + e / 100 * 127 : 127 * (0 == (n = e % 1) ? SS[e] : SS[Math.floor(e)] * (1 - n) + SS[Math.floor(e) + 1] * n) + 127) / 127, 0, 0, 0, .5 * (127 - n), 0, n / 127, 0, 0, .5 * (127 - n), 0, 0, n / 127, 0, .5 * (127 - n), 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n    }),\n    TS = (lw = [0, -1, 0, -1, 5, -1, 0, -1, 0], function (t) {\n      return a = lw, (u = t).toCanvas().then(function (t) {\n        return e = t, n = u.getType(), o = a, r = yS(e), i = function (t, e, n) {\n          for (var o = function o(t, e, n) {\n              return n < t ? t = n : t < e && (t = e), t;\n            }, r = Math.round(Math.sqrt(n.length)), i = Math.floor(r / 2), u = t.data, a = e.data, c = t.width, s = t.height, l = 0; l < s; l++) for (var f = 0; f < c; f++) {\n            for (var d = 0, m = 0, g = 0, p = 0; p < r; p++) for (var h = 0; h < r; h++) {\n              var v = o(f + h - i, 0, c - 1),\n                b = 4 * (o(l + p - i, 0, s - 1) * c + v),\n                y = n[p * r + h];\n              d += u[b] * y, m += u[1 + b] * y, g += u[2 + b] * y;\n            }\n            var x = 4 * (l * c + f);\n            a[x] = o(d, 0, 255), a[1 + x] = o(m, 0, 255), a[2 + x] = o(g, 0, 255);\n          }\n          return e;\n        }(r.getImageData(0, 0, e.width, e.height), r.getImageData(0, 0, e.width, e.height), o), r.putImageData(i, 0, 0), S0(e, n);\n        var e, n, o, r, i;\n      });\n      var u, a;\n    }),\n    ES = (fw = function fw(t, e) {\n      return 255 * Math.pow(t / 255, 1 - e);\n    }, function (e, n) {\n      return e.toCanvas().then(function (t) {\n        return function (t, e, n) {\n          for (var o = yS(t), r = new Array(256), i = 0; i < r.length; i++) r[i] = fw(i, n);\n          var u = function (t, e) {\n            for (var n = t.data, o = 0; o < n.length; o += 4) n[o] = e[n[o]], n[o + 1] = e[n[o + 1]], n[o + 2] = e[n[o + 2]];\n            return t;\n          }(o.getImageData(0, 0, t.width, t.height), r);\n          return o.putImageData(u, 0, 0), S0(t, e);\n        }(t, e.getType(), n);\n      });\n    }),\n    DS = function DS(t, e, n) {\n      var o = b0(t),\n        r = y0(t),\n        i = e / o,\n        u = n / r,\n        a = !1;\n      (i < .5 || 2 < i) && (i = i < .5 ? .5 : 2, a = !0), (u < .5 || 2 < u) && (u = u < .5 ? .5 : 2, a = !0);\n      var c = AS(t, i, u);\n      return a ? c.then(function (t) {\n        return DS(t, e, n);\n      }) : c;\n    },\n    AS = function AS(u, a, c) {\n      return new Ly(function (t) {\n        var e = b0(u),\n          n = y0(u),\n          o = Math.floor(e * a),\n          r = Math.floor(n * c),\n          i = h0(o, r);\n        yS(i).drawImage(u, 0, 0, e, n, 0, 0, o, r), t(i);\n      });\n    },\n    BS = function BS(t, e, n) {\n      var o = (n < 0 ? 360 + n : n) * Math.PI / 180,\n        r = t.width,\n        i = t.height,\n        u = Math.sin(o),\n        a = Math.cos(o),\n        c = D0(Math.abs(r * a) + Math.abs(i * u)),\n        s = D0(Math.abs(r * u) + Math.abs(i * a)),\n        l = h0(c, s),\n        f = yS(l);\n      return f.translate(c / 2, s / 2), f.rotate(o), f.drawImage(t, -r / 2, -i / 2), S0(l, e);\n    },\n    MS = function MS(t, e, n) {\n      var o = h0(t.width, t.height),\n        r = yS(o);\n      return \"v\" === n ? (r.scale(1, -1), r.drawImage(t, 0, -o.height)) : (r.scale(-1, 1), r.drawImage(t, -o.width, 0)), S0(o, e);\n    },\n    FS = function FS(t, e, n, o, r, i) {\n      var u = h0(r, i);\n      return yS(u).drawImage(t, -n, -o), S0(u, e);\n    },\n    IS = Ir(\"toolbar.button.execute\"),\n    RS = ((dw = {})[Ii()] = [\"disabling\", \"alloy.base.behaviour\", \"toggling\", \"toolbar-button-events\"], dw),\n    NS = Ir(\"update-menu-text\"),\n    PS = Ir(\"update-menu-icon\"),\n    VS = {\n      type: \"separator\"\n    },\n    HS = function HS(t, l) {\n      var e, n, o;\n      return I((e = y(t) ? t.split(\" \") : t, n = l, 0 < (o = R(e, function (t, e) {\n        return y(e) ? \"\" === e ? t : \"|\" === e ? 0 < t.length && !U0(t[t.length - 1]) ? t.concat([VS]) : t : Tt(n, e.toLowerCase()) ? t.concat([n[e.toLowerCase()]]) : t : t.concat([e]);\n      }, [])).length && U0(o[o.length - 1]) && o.pop(), o), function (t, e) {\n        var n,\n          o,\n          r,\n          i,\n          u,\n          a,\n          c = function (t) {\n            if (U0(t)) return t;\n            var e = tt(t, \"value\").getOrThunk(function () {\n              return Ir(\"generated-menu-item\");\n            });\n            return Yo({\n              value: e\n            }, t);\n          }(e),\n          s = (o = l, Tt(n = c, \"getSubmenuItems\") ? (i = o, u = (r = n).getSubmenuItems(), a = HS(u, i), {\n            item: r,\n            menus: Yo(a.menus, sr(r.value, a.items)),\n            expansions: Yo(a.expansions, sr(r.value, r.value))\n          }) : {\n            item: n,\n            menus: {},\n            expansions: {}\n          });\n        return {\n          menus: Yo(t.menus, s.menus),\n          items: [s.item].concat(t.items),\n          expansions: Yo(t.expansions, s.expansions)\n        };\n      }, {\n        menus: {},\n        expansions: {},\n        items: []\n      });\n    },\n    LS = rt([Eo(\"field1Name\", \"field1\"), Eo(\"field2Name\", \"field2\"), Qu(\"onLockedChange\"), qu([\"lockClass\"]), Eo(\"locked\", !1), Af(\"coupledFieldBehaviours\", [cd, Df])]),\n    zS = rt([Z0(\"field1\", \"field2\"), Z0(\"field2\", \"field1\"), Jf({\n      factory: fp,\n      schema: [mo(\"dom\")],\n      name: \"lock\",\n      overrides: function overrides(t) {\n        return {\n          buttonBehaviours: ec([zg.config({\n            selected: t.locked,\n            toggleClass: t.markers.lockClass,\n            aria: {\n              mode: \"pressed\"\n            }\n          })])\n        };\n      }\n    })]),\n    US = Cl({\n      name: \"FormCoupledInputs\",\n      configFields: LS(),\n      partFields: zS(),\n      factory: function factory(o, t, e, n) {\n        return {\n          uid: o.uid,\n          dom: o.dom,\n          components: t,\n          behaviours: Bf(o.coupledFieldBehaviours, [cd.config({\n            find: vt.some\n          }), Df.config({\n            store: {\n              mode: \"manual\",\n              getValue: function getValue(t) {\n                var e = bl(t, o, [\"field1\", \"field2\"]),\n                  n = {};\n                return n[o.field1Name] = Df.getValue(e.field1()), n[o.field2Name] = Df.getValue(e.field2()), n;\n              },\n              setValue: function setValue(t, e) {\n                var n = bl(t, o, [\"field1\", \"field2\"]);\n                et(e, o.field1Name) && Df.setValue(n.field1(), e[o.field1Name]), et(e, o.field2Name) && Df.setValue(n.field2(), e[o.field2Name]);\n              }\n            }\n          })]),\n          apis: {\n            getField1: function getField1(t) {\n              return ml(t, o, \"field1\");\n            },\n            getField2: function getField2(t) {\n              return ml(t, o, \"field2\");\n            },\n            getLock: function getLock(t) {\n              return ml(t, o, \"lock\");\n            }\n          }\n        };\n      },\n      apis: {\n        getField1: function getField1(t, e) {\n          return t.getField1(e);\n        },\n        getField2: function getField2(t, e) {\n          return t.getField2(e);\n        },\n        getLock: function getLock(t, e) {\n          return t.getLock(e);\n        }\n      }\n    }),\n    jS = {\n      undo: rt(Ir(\"undo\")),\n      redo: rt(Ir(\"redo\")),\n      zoom: rt(Ir(\"zoom\")),\n      back: rt(Ir(\"back\")),\n      apply: rt(Ir(\"apply\")),\n      swap: rt(Ir(\"swap\")),\n      transform: rt(Ir(\"transform\")),\n      tempTransform: rt(Ir(\"temp-transform\")),\n      transformApply: rt(Ir(\"transform-apply\"))\n    },\n    WS = rt(\"save-state\"),\n    GS = rt(\"disable\"),\n    XS = rt(\"enable\"),\n    YS = {\n      formActionEvent: Sy,\n      saveState: WS,\n      disable: GS,\n      enable: XS\n    },\n    qS = tinymce.util.Tools.resolve(\"tinymce.geom.Rect\"),\n    KS = tinymce.util.Tools.resolve(\"tinymce.util.Observable\"),\n    JS = tinymce.util.Tools.resolve(\"tinymce.util.VK\");\n  function $S(t, d) {\n    function e(t) {\n      var e,\n        n,\n        o,\n        r,\n        i,\n        u,\n        a,\n        c,\n        s = t.raw,\n        l = (e = Math.max, n = y.documentElement, o = y.body, r = e(n.scrollWidth, o.scrollWidth), i = e(n.clientWidth, o.clientWidth), u = e(n.offsetWidth, o.offsetWidth), a = e(n.scrollHeight, o.scrollHeight), c = e(n.clientHeight, o.clientHeight), {\n          width: r < u ? i : r,\n          height: a < e(n.offsetHeight, o.offsetHeight) ? c : a\n        });\n      iw(s), t.prevent(), p = s.button, h = s.screenX, v = s.screenY;\n      var f = ge(w, \"cursor\");\n      de(g = Mt.fromTag(\"div\", y), {\n        position: \"absolute\",\n        top: \"0\",\n        left: \"0\",\n        width: l.width + \"px\",\n        height: l.height + \"px\",\n        \"z-index\": \"2147483647\",\n        opacity: \"0.0001\",\n        cursor: f\n      }), Tn(yn(x), g), b.push(pc(x, \"mousemove\", m), pc(x, \"touchmove\", m), pc(x, \"mouseup\", S), pc(x, \"touchend\", S)), d.start(s);\n    }\n    function m(t) {\n      var e = t.raw;\n      if (iw(e), e.button !== p) return S(t);\n      e.deltaX = e.screenX - h, e.deltaY = e.screenY - v, t.prevent(), d.drag(e);\n    }\n    var n,\n      o,\n      r,\n      g,\n      p,\n      h,\n      v,\n      i = [],\n      b = [],\n      y = null !== (n = d.document) && void 0 !== n ? n : document,\n      u = null !== (o = d.root) && void 0 !== o ? o : y,\n      x = Mt.fromDom(y),\n      w = Mt.fromDom(u.getElementById(null !== (r = d.handle) && void 0 !== r ? r : t)),\n      S = function S(t) {\n        iw(t.raw), St(b, function (t) {\n          return t.unbind();\n        }), b = [], En(g), d.stop && d.stop(t.raw);\n      };\n    return i.push(pc(w, \"mousedown\", e), pc(w, \"touchstart\", e)), {\n      destroy: function destroy() {\n        St(b.concat(i), function (t) {\n          return t.unbind();\n        }), b = [], i = [], k(g) && En(g);\n      }\n    };\n  }\n  function QS(t, e, n, o, r) {\n    return q0({\n      name: t,\n      icon: vt.some(e),\n      disabled: n,\n      tooltip: vt.some(t),\n      primary: !1,\n      borderless: !1\n    }, o, r);\n  }\n  function ZS(t, e) {\n    e ? gd.enable(t) : gd.disable(t);\n  }\n  var tk = 0,\n    ek = function ek(s, e, l, t, n) {\n      function f(t, e) {\n        return {\n          x: e.x - t.x,\n          y: e.y - t.y,\n          w: e.w,\n          h: e.h\n        };\n      }\n      function u(t, e, n, o) {\n        var r = e.x + n * t.deltaX,\n          i = e.y + o * t.deltaY,\n          u = Math.max(20, e.w + n * t.deltaW),\n          a = Math.max(20, e.h + o * t.deltaH),\n          c = (s = qS.clamp({\n            x: r,\n            y: i,\n            w: u,\n            h: a\n          }, l, \"move\" === t.name), f(l, s));\n        b.fire(\"updateRect\", {\n          rect: c\n        }), h(c);\n      }\n      function o(t) {\n        r(s = t);\n      }\n      function r(n) {\n        function t(t, e) {\n          Iu(m, \"#\" + d + \"-\" + t).each(function (t) {\n            de(t, {\n              left: e.x + \"px\",\n              top: e.y + \"px\",\n              width: Math.max(0, e.w) + \"px\",\n              height: Math.max(0, e.h) + \"px\"\n            });\n          });\n        }\n        St(g, function (e) {\n          Iu(m, \"#\" + d + \"-\" + e.name).each(function (t) {\n            de(t, {\n              left: n.w * e.xMul + n.x + \"px\",\n              top: n.h * e.yMul + n.y + \"px\"\n            });\n          });\n        }), t(\"top\", {\n          x: e.x,\n          y: e.y,\n          w: e.w,\n          h: n.y - e.y\n        }), t(\"right\", {\n          x: n.x + n.w,\n          y: n.y,\n          w: e.w - n.x - n.w + e.x,\n          h: n.h\n        }), t(\"bottom\", {\n          x: e.x,\n          y: n.y + n.h,\n          w: e.w,\n          h: e.h - n.y - n.h + e.y\n        }), t(\"left\", {\n          x: e.x,\n          y: n.y,\n          w: n.x - e.x,\n          h: n.h\n        }), t(\"move\", n);\n      }\n      var i,\n        a,\n        c = [],\n        d = \"tox-crid-\" + tk++,\n        m = Mt.fromDom(t),\n        g = [{\n          name: \"move\",\n          xMul: 0,\n          yMul: 0,\n          deltaX: 1,\n          deltaY: 1,\n          deltaW: 0,\n          deltaH: 0,\n          label: \"Crop Mask\"\n        }, {\n          name: \"nw\",\n          xMul: 0,\n          yMul: 0,\n          deltaX: 1,\n          deltaY: 1,\n          deltaW: -1,\n          deltaH: -1,\n          label: \"Top Left Crop Handle\"\n        }, {\n          name: \"ne\",\n          xMul: 1,\n          yMul: 0,\n          deltaX: 0,\n          deltaY: 1,\n          deltaW: 1,\n          deltaH: -1,\n          label: \"Top Right Crop Handle\"\n        }, {\n          name: \"sw\",\n          xMul: 0,\n          yMul: 1,\n          deltaX: 1,\n          deltaY: 0,\n          deltaW: -1,\n          deltaH: 1,\n          label: \"Bottom Left Crop Handle\"\n        }, {\n          name: \"se\",\n          xMul: 1,\n          yMul: 1,\n          deltaX: 0,\n          deltaY: 0,\n          deltaW: 1,\n          deltaH: 1,\n          label: \"Bottom Right Crop Handle\"\n        }],\n        p = [\"top\", \"right\", \"bottom\", \"left\"],\n        h = function h(t) {\n          var e;\n          o((e = l, {\n            x: t.x + e.x,\n            y: t.y + e.y,\n            w: t.w,\n            h: t.h\n          }));\n        };\n      function v(t) {\n        oe(t.target, \"aria-grabbed\", \"focus\" === t.raw.type ? \"true\" : \"false\");\n      }\n      re(a = Mt.fromTag(\"div\"), {\n        id: d,\n        \"class\": \"tox-croprect-container\",\n        role: \"grid\",\n        \"aria-dropeffect\": \"execute\"\n      }), Tn(m, a), St(p, function (n) {\n        Iu(m, \"#\" + d).each(function (t) {\n          var e = Mt.fromTag(\"div\");\n          re(e, {\n            id: d + \"-\" + n,\n            \"class\": \"tox-croprect-block\",\n            \"data-mce-bogus\": \"all\"\n          }), fe(e, \"display\", \"none\"), Tn(t, e);\n        });\n      }), St(g, function (n) {\n        Iu(m, \"#\" + d).each(function (t) {\n          var e = Mt.fromTag(\"div\");\n          re(e, {\n            id: d + \"-\" + n.name,\n            \"aria-label\": n.label,\n            \"aria-grabbed\": \"false\",\n            \"data-mce-bogus\": \"all\",\n            role: \"gridcell\",\n            tabindex: \"-1\",\n            title: n.label\n          }), Jr(e, [\"tox-croprect-handle\", \"tox-croprect-handle-\" + n.name]), fe(e, \"display\", \"none\"), Tn(t, e);\n        });\n      }), i = B(g, function (e) {\n        var n;\n        return $S(d, {\n          document: t.ownerDocument,\n          root: gn(m).dom,\n          handle: d + \"-\" + e.name,\n          start: function start() {\n            n = s;\n          },\n          drag: function drag(t) {\n            u(e, n, t.deltaX, t.deltaY);\n          }\n        });\n      }), r(s), c.push(pc(m, \"focusin\", v), pc(m, \"focusout\", v), pc(m, \"keydown\", function (e) {\n        var i;\n        function t(t, e, n, o, r) {\n          t.stopPropagation(), t.preventDefault(), u(i, n, o, r);\n        }\n        switch (St(g, function (t) {\n          if (ie(e.target, \"id\") === d + \"-\" + t.name) return i = t, !1;\n        }), e.raw.keyCode) {\n          case JS.LEFT:\n            t(e, 0, s, -10, 0);\n            break;\n          case JS.RIGHT:\n            t(e, 0, s, 10, 0);\n            break;\n          case JS.UP:\n            t(e, 0, s, 0, -10);\n            break;\n          case JS.DOWN:\n            t(e, 0, s, 0, 10);\n            break;\n          case JS.ENTER:\n          case JS.SPACEBAR:\n            e.prevent(), n();\n        }\n      }));\n      var b = _lt(_lt({}, KS), {\n        toggleVisibility: function toggleVisibility(t) {\n          var e = V(V([], B(g, function (t) {\n              return \"#\" + d + \"-\" + t.name;\n            }), !0), B(p, function (t) {\n              return \"#\" + d + \"-\" + t;\n            }), !0).join(\",\"),\n            n = vs(m, e);\n          St(n, t ? function (t) {\n            return ve(t, \"display\");\n          } : function (t) {\n            return fe(t, \"display\", \"none\");\n          });\n        },\n        setClampRect: function setClampRect(t) {\n          l = t, r(s);\n        },\n        setRect: o,\n        getInnerRect: function getInnerRect() {\n          return f(l, s);\n        },\n        setInnerRect: h,\n        setViewPortRect: function setViewPortRect(t) {\n          e = t, r(s);\n        },\n        destroy: function destroy() {\n          St(i, function (t) {\n            return t.destroy();\n          }), i = [], St(c, function (t) {\n            return t.unbind();\n          }), c = [];\n        }\n      });\n      return b;\n    };\n  function nk(t) {\n    var n,\n      o,\n      e,\n      r,\n      i = Po(t),\n      u = gc(),\n      a = (o = -1, {\n        data: n = [],\n        add: function add(t) {\n          var e = n.splice(++o);\n          return n.push(t), {\n            state: t,\n            removed: e\n          };\n        },\n        undo: function undo() {\n          if (e()) return n[--o];\n        },\n        redo: function redo() {\n          if (r()) return n[++o];\n        },\n        canUndo: e = function e() {\n          return 0 < o;\n        },\n        canRedo: r = function r() {\n          return -1 !== o && o < n.length - 1;\n        }\n      });\n    function c(t) {\n      i.set(t);\n    }\n    function s(t) {\n      URL.revokeObjectURL(t.url);\n    }\n    function l(t) {\n      var e = f(t);\n      c(e);\n      var n = a.add(e).removed;\n      return fS.each(n, s), e.url;\n    }\n    a.add(t);\n    function f(t) {\n      return {\n        blob: t,\n        url: URL.createObjectURL(t)\n      };\n    }\n    function d() {\n      u.on(s), u.clear();\n    }\n    return {\n      getBlobState: function getBlobState() {\n        return i.get();\n      },\n      setBlobState: c,\n      addBlobState: l,\n      getTempState: function getTempState() {\n        return u.get().getOrThunk(i.get);\n      },\n      updateTempState: function updateTempState(t) {\n        var e = f(t);\n        return d(), u.set(e), e.url;\n      },\n      addTempState: function addTempState(t) {\n        var e = f(t);\n        return u.set(e), e.url;\n      },\n      applyTempState: function applyTempState(e) {\n        return u.get().fold(st, function (t) {\n          l(t.blob), e();\n        });\n      },\n      destroyTempState: d,\n      undo: function undo() {\n        var t = a.undo();\n        return c(t), t.url;\n      },\n      redo: function redo() {\n        var t = a.redo();\n        return c(t), t.url;\n      },\n      getHistoryStates: function getHistoryStates() {\n        return {\n          undoEnabled: a.canUndo(),\n          redoEnabled: a.canRedo()\n        };\n      }\n    };\n  }\n  function ok(t, e) {\n    function i(t) {\n      var e = y.getHistoryStates();\n      k.updateButtonUndoStates(t, e.undoEnabled, e.redoEnabled), br(t, YS.formActionEvent, {\n        name: YS.saveState(),\n        value: e.undoEnabled\n      });\n    }\n    function u(t) {\n      return t.toBlob();\n    }\n    function a(t) {\n      br(t, YS.formActionEvent, {\n        name: YS.disable(),\n        value: {}\n      });\n    }\n    function c(e, t, n, o, r) {\n      a(e), k0(t).then(n).then(u).then(o).then(function (t) {\n        return w(e, t);\n      }).then(function () {\n        i(e), r(), x(e);\n      })[\"catch\"](function (t) {\n        console.log(t), e.getSystem().isConnected() && x(e);\n      });\n    }\n    function r(t, e, n) {\n      c(t, y.getBlobState().blob, e, function (t) {\n        return y.updateTempState(t);\n      }, n);\n    }\n    function s(t) {\n      var e = y.getBlobState().url;\n      return y.destroyTempState(), i(t), e;\n    }\n    var n,\n      o,\n      l,\n      f,\n      d,\n      m,\n      g,\n      p,\n      h,\n      v,\n      b,\n      y = nk(t.currentState),\n      x = function x(t) {\n        C.getApplyButton(t).each(function (t) {\n          gd.enable(t);\n        }), br(t, YS.formActionEvent, {\n          name: YS.enable(),\n          value: {}\n        });\n      },\n      w = function w(t, e) {\n        return a(t), S.updateSrc(t, e);\n      },\n      S = (f = t.currentState.url, m = Hm({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-image-tools__image-bg\"],\n          attributes: {\n            role: \"presentation\"\n          }\n        }\n      }), g = Po(1), d = dc(), p = _lt(_lt({}, d), {\n        run: function run(t) {\n          return d.get().each(t);\n        }\n      }), h = Po({\n        x: 0,\n        y: 0,\n        w: 1,\n        h: 1\n      }), v = Po({\n        x: 0,\n        y: 0,\n        w: 1,\n        h: 1\n      }), {\n        memContainer: b = Hm(ly.sketch({\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-image-tools__image\"]\n          },\n          components: [m.asSpec(), {\n            dom: {\n              tag: \"img\",\n              attributes: {\n                src: f\n              }\n            }\n          }, {\n            dom: {\n              tag: \"div\"\n            },\n            behaviours: ec([mm(\"image-panel-crop-events\", [ou(function (t) {\n              b.getOpt(t).each(function (t) {\n                var e = t.element.dom,\n                  n = ek({\n                    x: 10,\n                    y: 10,\n                    w: 100,\n                    h: 100\n                  }, {\n                    x: 0,\n                    y: 0,\n                    w: 200,\n                    h: 200\n                  }, {\n                    x: 0,\n                    y: 0,\n                    w: 200,\n                    h: 200\n                  }, e, st);\n                n.toggleVisibility(!1), n.on(\"updateRect\", function (t) {\n                  var e = t.rect,\n                    n = g.get(),\n                    o = {\n                      x: Math.round(e.x / n),\n                      y: Math.round(e.y / n),\n                      w: Math.round(e.w / n),\n                      h: Math.round(e.h / n)\n                    };\n                  h.set(o);\n                }), p.set(n);\n              });\n            }), ru(function () {\n              p.clear();\n            })])])\n          }],\n          containerBehaviours: ec([Rg.config({}), mm(\"image-panel-events\", [ou(function (t) {\n            _(t, f);\n          })])])\n        })),\n        updateSrc: _,\n        zoom: function zoom(t, e) {\n          var n = g.get(),\n            o = 0 < e ? Math.min(2, n + .1) : Math.max(.1, n - .1);\n          g.set(o), b.getOpt(t).each(function (t) {\n            var e = t.components()[1].element;\n            O(t, e);\n          });\n        },\n        showCrop: function showCrop() {\n          p.run(function (t) {\n            t.toggleVisibility(!0);\n          });\n        },\n        hideCrop: function hideCrop() {\n          p.run(function (t) {\n            t.toggleVisibility(!1);\n          });\n        },\n        getRect: function getRect() {\n          return h.get();\n        },\n        getMeasurements: function getMeasurements() {\n          var t = v.get();\n          return {\n            width: t.w,\n            height: t.h\n          };\n        }\n      }),\n      k = (o = Hm(QS(\"Undo\", \"undo\", !0, function (t) {\n        br(t, jS.undo(), {\n          direction: 1\n        });\n      }, n = e)), l = Hm(QS(\"Redo\", \"redo\", !0, function (t) {\n        br(t, jS.redo(), {\n          direction: 1\n        });\n      }, n)), {\n        container: ly.sketch({\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-image-tools__toolbar\", \"tox-image-tools__sidebar\"]\n          },\n          components: [o.asSpec(), l.asSpec(), QS(\"Zoom in\", \"zoom-in\", !1, function (t) {\n            br(t, jS.zoom(), {\n              direction: 1\n            });\n          }, n), QS(\"Zoom out\", \"zoom-out\", !1, function (t) {\n            br(t, jS.zoom(), {\n              direction: -1\n            });\n          }, n)]\n        }),\n        updateButtonUndoStates: function updateButtonUndoStates(t, e, n) {\n          o.getOpt(t).each(function (t) {\n            ZS(t, e);\n          }), l.getOpt(t).each(function (t) {\n            ZS(t, n);\n          });\n        }\n      }),\n      C = rw(S, e);\n    function O(t, s) {\n      b.getOpt(t).each(function (t) {\n        var n = g.get(),\n          o = Ce(t.element),\n          r = xe(t.element),\n          i = s.dom.naturalWidth * n,\n          u = s.dom.naturalHeight * n,\n          a = Math.max(0, o / 2 - i / 2),\n          c = Math.max(0, r / 2 - u / 2),\n          e = {\n            left: a.toString() + \"px\",\n            top: c.toString() + \"px\",\n            width: i.toString() + \"px\",\n            height: u.toString() + \"px\",\n            position: \"absolute\"\n          };\n        de(s, e), m.getOpt(t).each(function (t) {\n          de(t.element, e);\n        }), p.run(function (t) {\n          var e = h.get();\n          t.setRect({\n            x: e.x * n + a,\n            y: e.y * n + c,\n            w: e.w * n,\n            h: e.h * n\n          }), t.setClampRect({\n            x: a,\n            y: c,\n            w: i,\n            h: u\n          }), t.setViewPortRect({\n            x: 0,\n            y: 0,\n            w: o,\n            h: r\n          });\n        });\n      });\n    }\n    function _(t, e) {\n      var n,\n        i = Mt.fromTag(\"img\");\n      return oe(i, \"src\", e), n = i.dom, new Mp(function (t) {\n        var e = function e() {\n          n.removeEventListener(\"load\", e), t(n);\n        };\n        n.complete ? t(n) : n.addEventListener(\"load\", e);\n      }).then(function () {\n        t.getSystem().isConnected() && b.getOpt(t).map(function (t) {\n          var e = Ou({\n            element: i\n          });\n          Rg.replaceAt(t, 1, vt.some(e));\n          var n = v.get(),\n            o = {\n              x: 0,\n              y: 0,\n              w: i.dom.naturalWidth,\n              h: i.dom.naturalHeight\n            };\n          v.set(o);\n          var u,\n            r = qS.inflate(o, -20, -20);\n          h.set(r), n.w === o.w && n.h === o.h || (u = i, b.getOpt(t).each(function (t) {\n            var e = Ce(t.element),\n              n = xe(t.element),\n              o = u.dom.naturalWidth,\n              r = u.dom.naturalHeight,\n              i = Math.min(e / o, n / r);\n            1 <= i ? g.set(1) : g.set(i);\n          })), O(t, i);\n        });\n      });\n    }\n    return {\n      dom: {\n        tag: \"div\",\n        attributes: {\n          role: \"presentation\"\n        }\n      },\n      components: [C.memContainer.asSpec(), S.memContainer.asSpec(), k.container],\n      behaviours: ec([Df.config({\n        store: {\n          mode: \"manual\",\n          getValue: function getValue() {\n            return y.getBlobState();\n          }\n        }\n      }), mm(\"image-tools-events\", [Cr(jS.undo(), function (e, t) {\n        var n = y.undo();\n        w(e, n).then(function (t) {\n          x(e), i(e);\n        });\n      }), Cr(jS.redo(), function (e, t) {\n        var n = y.redo();\n        w(e, n).then(function (t) {\n          x(e), i(e);\n        });\n      }), Cr(jS.zoom(), function (t, e) {\n        var n = e.event.direction;\n        S.zoom(t, n);\n      }), Cr(jS.back(), function (t, e) {\n        var n,\n          o = s(n = t);\n        w(n, o).then(function (t) {\n          x(n);\n        }), (0, e.event.swap)(), S.hideCrop();\n      }), Cr(jS.apply(), function (t, e) {\n        y.applyTempState(function () {\n          s(t), (0, e.event.swap)();\n        });\n      }), Cr(jS.transform(), function (t, e) {\n        return r(t, e.event.transform, st);\n      }), Cr(jS.tempTransform(), function (t, e) {\n        var n = e.event.transform;\n        c(t, y.getTempState().blob, n, function (t) {\n          return y.addTempState(t);\n        }, st);\n      }), Cr(jS.transformApply(), function (t, e) {\n        var n = t,\n          o = e.event.transform,\n          r = e.event.swap,\n          i = y.getBlobState().blob;\n        c(n, i, o, function (t) {\n          var e = y.addBlobState(t);\n          return s(n), e;\n        }, r);\n      }), Cr(jS.swap(), function (e, t) {\n        k.updateButtonUndoStates(e, !1, !1);\n        var n = t.event.transform,\n          o = t.event.swap;\n        n.fold(function () {\n          o();\n        }, function (t) {\n          r(e, t, o);\n        });\n      })]), aw()])\n    };\n  }\n  function rk(t) {\n    return !Tt(t, \"items\");\n  }\n  function ik(t, e) {\n    function n(t) {\n      return {\n        dom: {\n          tag: \"td\",\n          innerHtml: e.translate(t)\n        }\n      };\n    }\n    return {\n      dom: {\n        tag: \"table\",\n        classes: [\"tox-dialog__table\"]\n      },\n      components: [{\n        dom: {\n          tag: \"thead\"\n        },\n        components: [{\n          dom: {\n            tag: \"tr\"\n          },\n          components: B(t.header, function (t) {\n            return {\n              dom: {\n                tag: \"th\",\n                innerHtml: e.translate(t)\n              }\n            };\n          })\n        }]\n      }, {\n        dom: {\n          tag: \"tbody\"\n        },\n        components: B(t.cells, function (t) {\n          return {\n            dom: {\n              tag: \"tr\"\n            },\n            components: B(t, n)\n          };\n        })\n      }],\n      behaviours: ec([py.config({}), Vg.config({})])\n    };\n  }\n  function uk(n, e) {\n    var t = n.label.map(function (t) {\n        return oy(t, e);\n      }),\n      o = [gd.config({\n        disabled: function disabled() {\n          return n.disabled || e.isDisabled();\n        }\n      }), pv(), Fg.config({\n        mode: \"execution\",\n        useEnter: !0 !== n.multiline,\n        useControlEnter: !0 === n.multiline,\n        execute: function execute(t) {\n          return vr(t, ky), vt.some(!0);\n        }\n      }), mm(\"textfield-change\", [Cr(Si(), function (t, e) {\n        br(t, yy, {\n          name: n.name\n        });\n      }), Cr(Mi(), function (t, e) {\n        br(t, yy, {\n          name: n.name\n        });\n      })]), py.config({})],\n      r = n.validation.map(function (o) {\n        return Ky.config({\n          getRoot: function getRoot(t) {\n            return Yt(t.element);\n          },\n          invalidClass: \"tox-invalid\",\n          validator: {\n            validate: function validate(t) {\n              var e = Df.getValue(t),\n                n = o.validator(e);\n              return Gy(!0 === n ? Nn.value(e) : Nn.error(n));\n            },\n            validateOnLoad: o.validateOnLoad\n          }\n        });\n      }).toArray(),\n      i = n.placeholder.fold(rt({}), function (t) {\n        return {\n          placeholder: e.translate(t)\n        };\n      }),\n      u = n.inputMode.fold(rt({}), function (t) {\n        return {\n          inputmode: t\n        };\n      }),\n      a = _lt(_lt({}, i), u);\n    return ny(t, my.parts.field({\n      tag: !0 === n.multiline ? \"textarea\" : \"input\",\n      inputAttributes: a,\n      inputClasses: [n.classname],\n      inputBehaviours: ec(ft([o, r])),\n      selectOnFocus: !1,\n      factory: Dy\n    }), (n.flex ? [\"tox-form__group--stretched\"] : []).concat(n.maximized ? [\"tox-form-group--maximize\"] : []), [gd.config({\n      disabled: function disabled() {\n        return n.disabled || e.isDisabled();\n      },\n      onDisabled: function onDisabled(t) {\n        my.getField(t).each(gd.disable);\n      },\n      onEnabled: function onEnabled(t) {\n        my.getField(t).each(gd.enable);\n      }\n    }), pv()]);\n  }\n  function ak(t) {\n    var e = Po(null);\n    return wu({\n      readState: function readState() {\n        return {\n          timer: null !== e.get() ? \"set\" : \"unset\"\n        };\n      },\n      setTimer: function setTimer(t) {\n        e.set(t);\n      },\n      cancel: function cancel() {\n        var t = e.get();\n        null !== t && t.cancel();\n      }\n    });\n  }\n  function ck(t, e, n) {\n    var o = Df.getValue(n);\n    Df.setValue(e, o), s1(e);\n  }\n  function sk(t, e) {\n    var n = t.element,\n      o = Qr(n),\n      r = n.dom;\n    \"number\" !== ie(n, \"type\") && e(r, o);\n  }\n  function lk(t) {\n    return {\n      type: \"menuitem\",\n      value: t.url,\n      text: t.title,\n      meta: {\n        attach: t.attach\n      },\n      onAction: st\n    };\n  }\n  function fk(t, e) {\n    return {\n      type: \"menuitem\",\n      value: e,\n      text: t,\n      meta: {\n        attach: void 0\n      },\n      onAction: st\n    };\n  }\n  function dk(t, e) {\n    return n = t, B(F(e, function (t) {\n      return t.type === n;\n    }), lk);\n    var n;\n  }\n  function mk(t, e) {\n    var n = t.toLowerCase();\n    return F(e, function (t) {\n      return ut((void 0 !== t.meta && void 0 !== t.meta.text ? t.meta : t).text.toLowerCase(), n) || ut(t.value.toLowerCase(), n);\n    });\n  }\n  function gk(u, a, c) {\n    function r(t) {\n      var e = Df.getValue(t);\n      c.addToHistory(e.value, u.filetype);\n    }\n    var t,\n      e,\n      n,\n      o,\n      i = a.shared.providers,\n      s = my.parts.field({\n        factory: m1,\n        dismissOnBlur: !0,\n        inputClasses: [\"tox-textfield\"],\n        sandboxClasses: [\"tox-dialog__popups\"],\n        inputAttributes: {\n          \"aria-errormessage\": v1,\n          type: \"url\"\n        },\n        minChars: 0,\n        responseTime: 0,\n        fetch: function fetch(t) {\n          var n,\n            o,\n            e,\n            r,\n            i = j0((n = u.filetype, o = c, e = Df.getValue(t), r = void 0 !== e.meta.text ? e.meta.text : e.value, o.getLinkInformation().fold(function () {\n              return [];\n            }, function (t) {\n              var e = mk(r, B(o.getHistory(n), function (t) {\n                return fk(t, t);\n              }));\n              return \"file\" === n ? R([e, mk(r, dk(\"header\", t.targets)), mk(r, ft([vt.from(t.anchorTop).map(function (t) {\n                return fk(\"<top>\", t);\n              }).toArray(), dk(\"anchor\", t.targets), vt.from(t.anchorBottom).map(function (t) {\n                return fk(\"<bottom>\", t);\n              }).toArray()]))], function (t, e) {\n                return 0 === t.length || 0 === e.length ? t.concat(e) : t.concat(h1, e);\n              }, []) : e;\n            })), Sh.BUBBLE_TO_SANDBOX, a, !1);\n          return Gy(i);\n        },\n        getHotspot: function getHotspot(t) {\n          return p.getOpt(t);\n        },\n        onSetValue: function onSetValue(t, e) {\n          t.hasConfigured(Ky) && Ky.run(t).get(st);\n        },\n        typeaheadBehaviours: ec(ft([c.getValidationHandler().map(function (n) {\n          return Ky.config({\n            getRoot: function getRoot(t) {\n              return Yt(t.element);\n            },\n            invalidClass: \"tox-control-wrap--status-invalid\",\n            notify: {\n              onInvalid: function onInvalid(t, e) {\n                f.getOpt(t).each(function (t) {\n                  oe(t.element, \"title\", i.translate(e));\n                });\n              }\n            },\n            validator: {\n              validate: function validate(t) {\n                var e = Df.getValue(t);\n                return p1(function (o) {\n                  n({\n                    type: u.filetype,\n                    url: e.value\n                  }, function (t) {\n                    var e, n;\n                    \"invalid\" === t.status ? (e = Nn.error(t.message), o(e)) : (n = Nn.value(t.message), o(n));\n                  });\n                });\n              },\n              validateOnLoad: !1\n            }\n          });\n        }).toArray(), [gd.config({\n          disabled: function disabled() {\n            return u.disabled || i.isDisabled();\n          }\n        }), py.config({}), mm(\"urlinput-events\", ft([\"file\" === u.filetype ? [Cr(Si(), function (t) {\n          br(t, yy, {\n            name: u.name\n          });\n        })] : [], [Cr(ki(), function (t) {\n          br(t, yy, {\n            name: u.name\n          }), r(t);\n        }), Cr(Mi(), function (t) {\n          br(t, yy, {\n            name: u.name\n          }), r(t);\n        })]]))]])),\n        eventOrder: ((t = {})[Si()] = [\"streaming\", \"urlinput-events\", \"invalidating\"], t),\n        model: {\n          getDisplayText: function getDisplayText(t) {\n            return t.value;\n          },\n          selectsOver: !1,\n          populateFromBrowse: !1\n        },\n        markers: {\n          openClass: \"tox-textfield--popup-open\"\n        },\n        lazySink: a.shared.getSink,\n        parts: {\n          menu: Zp(0, 0, \"normal\")\n        },\n        onExecute: function onExecute(t, e, n) {\n          br(e, ky, {});\n        },\n        onItemExecute: function onItemExecute(t, e, n, o) {\n          r(t), br(t, yy, {\n            name: u.name\n          });\n        }\n      }),\n      l = u.label.map(function (t) {\n        return oy(t, i);\n      }),\n      f = Hm((e = \"invalid\", n = vt.some(v1), Xm(\"warning\", {\n        tag: \"div\",\n        classes: [\"tox-icon\", \"tox-control-wrap__status-icon-\" + e],\n        attributes: _lt({\n          title: i.translate(o = void 0 === o ? e : o),\n          \"aria-live\": \"polite\"\n        }, n.fold(function () {\n          return {};\n        }, function (t) {\n          return {\n            id: t\n          };\n        }))\n      }, i.icons))),\n      d = Hm({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-control-wrap__status-icon-wrap\"]\n        },\n        components: [f.asSpec()]\n      }),\n      m = c.getUrlPicker(u.filetype),\n      g = Ir(\"browser.url.event\"),\n      p = Hm({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-control-wrap\"]\n        },\n        components: [s, d.asSpec()],\n        behaviours: ec([gd.config({\n          disabled: function disabled() {\n            return u.disabled || i.isDisabled();\n          }\n        })])\n      }),\n      h = Hm(J0({\n        name: u.name,\n        icon: vt.some(\"browse\"),\n        text: u.label.getOr(\"\"),\n        disabled: u.disabled,\n        primary: !1,\n        borderless: !0\n      }, function (t) {\n        return vr(t, g);\n      }, i, [], [\"tox-browse-url\"]));\n    return my.sketch({\n      dom: by([]),\n      components: l.toArray().concat([{\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-form__controls-h-stack\"]\n        },\n        components: ft([[p.asSpec()], m.map(function () {\n          return h.asSpec();\n        }).toArray()])\n      }]),\n      fieldBehaviours: ec([gd.config({\n        disabled: function disabled() {\n          return u.disabled || i.isDisabled();\n        },\n        onDisabled: function onDisabled(t) {\n          my.getField(t).each(gd.disable), h.getOpt(t).each(gd.disable);\n        },\n        onEnabled: function onEnabled(t) {\n          my.getField(t).each(gd.enable), h.getOpt(t).each(gd.enable);\n        }\n      }), pv(), mm(\"url-input-events\", [Cr(g, function (o) {\n        cd.getCurrent(o).each(function (e) {\n          var t = Df.getValue(e),\n            n = _lt({\n              fieldname: u.name\n            }, t);\n          m.each(function (t) {\n            t(n).get(function (t) {\n              Df.setValue(e, t), br(o, yy, {\n                name: u.name\n              });\n            });\n          });\n        });\n      })])])\n    });\n  }\n  function pk(r) {\n    return function (e, n, o) {\n      return tt(n, \"name\").fold(function () {\n        return r(n, o);\n      }, function (t) {\n        return e.field(t, r(n, o));\n      });\n    };\n  }\n  function hk(e, t, n) {\n    var o = Yo(n, {\n      shared: {\n        interpreter: function interpreter(t) {\n          return x1(e, t, o);\n        }\n      }\n    });\n    return x1(e, t, o);\n  }\n  function vk(t, e, n) {\n    function o() {\n      return Mt.fromDom(t.getContentAreaContainer());\n    }\n    function r() {\n      return p || !n();\n    }\n    var i,\n      u,\n      a,\n      c,\n      s,\n      l,\n      f,\n      d,\n      m,\n      g,\n      p = sv(t);\n    return {\n      inlineDialog: (f = o, d = e, m = r, g = {\n        maxHeightFunction: Nc()\n      }, function () {\n        return m() ? {\n          type: \"node\",\n          root: te(f()),\n          node: vt.from(f()),\n          bubble: Sc(12, 12, w1),\n          layouts: {\n            onRtl: function onRtl() {\n              return [Mm];\n            },\n            onLtr: function onLtr() {\n              return [Bm];\n            }\n          },\n          overrides: g\n        } : {\n          type: \"hotspot\",\n          hotspot: d(),\n          bubble: Sc(-12, 12, w1),\n          layouts: {\n            onRtl: function onRtl() {\n              return [Xa];\n            },\n            onLtr: function onLtr() {\n              return [Ya];\n            }\n          },\n          overrides: g\n        };\n      }),\n      banner: (c = o, s = e, l = r, function () {\n        return l() ? {\n          type: \"node\",\n          root: te(c()),\n          node: vt.from(c()),\n          layouts: {\n            onRtl: function onRtl() {\n              return [cp];\n            },\n            onLtr: function onLtr() {\n              return [cp];\n            }\n          }\n        } : {\n          type: \"hotspot\",\n          hotspot: s(),\n          layouts: {\n            onRtl: function onRtl() {\n              return [$a];\n            },\n            onLtr: function onLtr() {\n              return [$a];\n            }\n          }\n        };\n      }),\n      cursor: (u = t, function () {\n        return {\n          type: \"selection\",\n          root: a(),\n          getSelection: function getSelection() {\n            var t = u.selection.getRng();\n            return vt.some(ms.range(Mt.fromDom(t.startContainer), t.startOffset, Mt.fromDom(t.endContainer), t.endOffset));\n          }\n        };\n      }),\n      node: (i = a = function a() {\n        return Mt.fromDom(t.getBody());\n      }, function (t) {\n        return {\n          type: \"node\",\n          root: i(),\n          node: t\n        };\n      })\n    };\n  }\n  function bk(i) {\n    return vt.from(i.getParam(\"style_formats\")).filter(c).map(function (t) {\n      var e,\n        n,\n        o = (e = i, n = k1(t), e.formatter ? r(n.customFormats) : e.on(\"init\", function () {\n          r(n.customFormats);\n        }), n.formats);\n      function r(t) {\n        St(t, function (t) {\n          e.formatter.has(t.name) || e.formatter.register(t.name, t.format);\n        });\n      }\n      return i.getParam(\"style_formats_merge\", !1, \"boolean\") ? S1.concat(o) : o;\n    }).getOr(S1);\n  }\n  function yk(t, e, n) {\n    var o = {\n      type: \"formatter\",\n      isSelected: e(t.format),\n      getStylePreview: n(t.format)\n    };\n    return Yo(t, o);\n  }\n  function xk(c, t, s, l) {\n    var f = function f(t) {\n      return B(t, function (t) {\n        var e,\n          n,\n          o,\n          r,\n          i,\n          u = Ct(t);\n        if (et(t, \"items\")) {\n          var a = f(t.items);\n          return Yo(Yo(t, {\n            type: \"submenu\"\n          }), {\n            getStyleItems: rt(a)\n          });\n        }\n        return et(t, \"format\") ? yk(t, s, l) : 1 === u.length && wt(u, \"title\") ? Yo(t, {\n          type: \"separator\"\n        }) : (r = {\n          type: \"formatter\",\n          format: o = \"custom-\" + (n = y((e = t).name) ? e.name : Ir(e.title)),\n          isSelected: s(o),\n          getStylePreview: l(o)\n        }, i = Yo(e, r), c.formatter.register(n, i), i);\n      });\n    };\n    return f(t);\n  }\n  function wk(n) {\n    return function (t) {\n      if (k(e = t) && 1 === e.nodeType) {\n        if (t.contentEditable === n) return !0;\n        if (t.getAttribute(\"data-mce-contenteditable\") === n) return !0;\n      }\n      var e;\n      return !1;\n    };\n  }\n  function Sk(t, e, n, o, r) {\n    return {\n      type: t,\n      title: e,\n      url: n,\n      level: o,\n      attach: r\n    };\n  }\n  function kk(t) {\n    return t.innerText || t.textContent;\n  }\n  function Ck(t) {\n    return t && \"A\" === t.nodeName && void 0 !== (t.id || t.name) && JC(t);\n  }\n  function Ok(t) {\n    return t && /^(H[1-6])$/.test(t.nodeName);\n  }\n  function _k(t) {\n    return Ok(t) && JC(t);\n  }\n  function Tk(t) {\n    var e,\n      n = t.id || Ir(\"h\");\n    return Sk(\"header\", kk(t), \"#\" + n, Ok(e = t) ? parseInt(e.nodeName.substr(1), 10) : 0, function () {\n      t.id = n;\n    });\n  }\n  function Ek(t) {\n    var e = t.id || t.name;\n    return Sk(\"anchor\", kk(t) || \"#\" + e, \"#\" + e, 0, st);\n  }\n  function Dk(t) {\n    return 0 < C1(t.title).length;\n  }\n  function Ak(t) {\n    return y(t) && /^https?/.test(t);\n  }\n  function Bk(t) {\n    return x(t) && Q(t, function (t) {\n      return !(c(e = t) && e.length <= 5 && L(e, Ak));\n      var e;\n    }).isNone();\n  }\n  function Mk() {\n    var t,\n      e = db.getItem(E1);\n    if (null === e) return {};\n    try {\n      t = JSON.parse(e);\n    } catch (t) {\n      if (t instanceof SyntaxError) return console.log(\"Local storage \" + E1 + \" was not valid JSON\", t), {};\n      throw t;\n    }\n    return Bk(t) ? t : (console.log(\"Local storage \" + E1 + \" was not valid format\", t), {});\n  }\n  function Fk(t) {\n    return tt(Mk(), t).getOr([]);\n  }\n  function Ik(e, t) {\n    var n, o;\n    Ak(e) && (o = F(tt(n = Mk(), t).getOr([]), function (t) {\n      return t !== e;\n    }), n[t] = [e].concat(o).slice(0, 5), function (t) {\n      if (!Bk(t)) throw new Error(\"Bad format for history:\\n\" + JSON.stringify(t));\n      db.setItem(E1, JSON.stringify(t));\n    }(n));\n  }\n  function Rk(t) {\n    return !!t;\n  }\n  function Nk(t) {\n    return dt(fS.makeMap(t, /[, ]/), Rk);\n  }\n  function Pk(t) {\n    return vt.from(t.getParam(\"file_picker_callback\")).filter(S);\n  }\n  function Vk(t) {\n    return vt.from(t).filter(y).getOrUndefined();\n  }\n  function Hk(l) {\n    return {\n      getHistory: Fk,\n      addToHistory: Ik,\n      getLinkInformation: function getLinkInformation() {\n        return !1 === (t = l).getParam(\"typeahead_urls\") ? vt.none() : vt.some({\n          targets: T1(t.getBody()),\n          anchorTop: Vk(t.getParam(\"anchor_top\", \"#top\")),\n          anchorBottom: Vk(t.getParam(\"anchor_bottom\", \"#bottom\"))\n        });\n        var t;\n      },\n      getValidationHandler: function getValidationHandler() {\n        return vt.from(void 0 === (e = (t = l).getParam(\"file_picker_validator_handler\", void 0, \"function\")) ? t.getParam(\"filepicker_validator_handler\", void 0, \"function\") : e);\n        var t, e;\n      },\n      getUrlPicker: function getUrlPicker(t) {\n        return e = c = l, n = s = t, r = vt.some((o = e).getParam(\"file_picker_types\")).filter(Rk), i = vt.some(o.getParam(\"file_browser_callback_types\")).filter(Rk), u = r.or(i).map(Nk), a = Pk(o).fold(T, function (t) {\n          return u.fold(D, function (t) {\n            return 0 < Ct(t).length && t;\n          });\n        }), (w(a) ? a ? Pk(e) : vt.none() : a[n] ? Pk(e) : vt.none()).map(function (o) {\n          return function (e) {\n            return Wy(function (n) {\n              var t = _lt({\n                filetype: s,\n                fieldname: e.fieldname\n              }, vt.from(e.meta).getOr({}));\n              o.call(c, function (t, e) {\n                if (!y(t)) throw new Error(\"Expected value to be string\");\n                if (void 0 !== e && !x(e)) throw new Error(\"Expected meta to be a object\");\n                n({\n                  value: t,\n                  meta: e\n                });\n              }, e.value, t);\n            });\n          };\n        });\n        var e, n, o, r, i, u, a, c, s;\n      }\n    };\n  }\n  function Lk(t, e, n) {\n    var o,\n      r,\n      i,\n      u,\n      a,\n      c,\n      s,\n      _l2,\n      f,\n      d,\n      m,\n      g,\n      p,\n      h = Po(!1),\n      v = {\n        isPositionedAtTop: function isPositionedAtTop() {\n          return \"top\" === o.get();\n        },\n        getDockingMode: (o = Po(av(e) ? \"bottom\" : \"top\")).get,\n        setDockingMode: o.set\n      },\n      b = {\n        shared: {\n          providers: {\n            icons: function icons() {\n              return e.ui.registry.getAll().icons;\n            },\n            menuItems: function menuItems() {\n              return e.ui.registry.getAll().menuItems;\n            },\n            translate: dp.translate,\n            isDisabled: function isDisabled() {\n              return e.mode.isReadOnly() || e.ui.isDisabled();\n            },\n            getSetting: e.getParam.bind(e)\n          },\n          interpreter: function interpreter(t) {\n            return x1(y1, t, b);\n          },\n          anchors: vk(e, n, v.isPositionedAtTop),\n          header: v,\n          getSink: function getSink() {\n            return Nn.value(t);\n          }\n        },\n        urlinput: Hk(e),\n        styleselect: (f = Po([]), d = Po([]), m = Po([]), g = Po([]), p = Po(!(_l2 = function l(t) {\n          var e = t.items;\n          return void 0 !== e && 0 < e.length ? H(e, _l2) : [t.format];\n        })), (s = e).on(\"PreInit\", function (t) {\n          var e = bk(s),\n            n = xk(s, e, y, x);\n          f.set(n), d.set(H(n, _l2));\n        }), s.on(\"addStyleModifications\", function (t) {\n          var e = xk(s, t.items, y, x);\n          m.set(e), p.set(t.replace), g.set(H(e, _l2));\n        }), {\n          getData: function getData() {\n            var t = p.get() ? [] : f.get(),\n              e = m.get();\n            return t.concat(e);\n          },\n          getFlattenedKeys: function getFlattenedKeys() {\n            var t = p.get() ? [] : d.get(),\n              e = g.get();\n            return t.concat(e);\n          }\n        }),\n        colorinput: {\n          colorPicker: function colorPicker(t, e) {\n            Ib(c)(t, e);\n          },\n          hasCustomColors: function hasCustomColors() {\n            return gb(a);\n          },\n          getColors: function getColors() {\n            return pb(u);\n          },\n          getColorCols: (i = u = a = c = e, function () {\n            return vb(i);\n          })\n        },\n        dialog: {\n          isDraggableModal: (r = e, function () {\n            return r.getParam(\"draggable_modal\", !1, \"boolean\");\n          })\n        },\n        isContextMenuOpen: function isContextMenuOpen() {\n          return h.get();\n        },\n        setContextMenuState: function setContextMenuState(t) {\n          return h.set(t);\n        }\n      };\n    function y(t) {\n      return function () {\n        return s.formatter.match(t);\n      };\n    }\n    function x(e) {\n      return function () {\n        var t = s.formatter.get(e);\n        return void 0 !== t ? vt.some({\n          tag: 0 < t.length && (t[0].inline || t[0].block) || \"div\",\n          styles: s.dom.parseStyle(s.formatter.getCssText(e))\n        }) : vt.none();\n      };\n    }\n    return b;\n  }\n  function zk(t) {\n    return (mt(pe(t, \"position\"), \"fixed\") ? vt.none() : qt(t)).orThunk(function () {\n      var n = Mt.fromTag(\"span\");\n      return Yt(t).bind(function (t) {\n        Tn(t, n);\n        var e = qt(n);\n        return En(n), e;\n      });\n    });\n  }\n  function Uk(t) {\n    return zk(t).map(ke).getOrThunk(function () {\n      return kn(0, 0);\n    });\n  }\n  function jk(t, e) {\n    var n = t.element;\n    Yr(n, e.transitionClass), qr(n, e.fadeOutClass), Yr(n, e.fadeInClass), e.onShow(t);\n  }\n  function Wk(t, e) {\n    var n = t.element;\n    Yr(n, e.transitionClass), qr(n, e.fadeInClass), Yr(n, e.fadeOutClass), e.onHide(t);\n  }\n  function Gk(t, e, n) {\n    return L(t, function (t) {\n      switch (t) {\n        case \"bottom\":\n          return e.bottom <= n.bottom;\n        case \"top\":\n          return e.y >= n.y;\n      }\n    });\n  }\n  function Xk(e, t) {\n    return t.getInitialPos().map(function (t) {\n      return Bn(t.bounds.x, t.bounds.y, Ce(e), xe(e));\n    });\n  }\n  function Yk(n, o, r) {\n    return r.getInitialPos().bind(function (t) {\n      switch (r.clearInitialPos(), t.position) {\n        case \"static\":\n          return vt.some(H1[\"static\"]());\n        case \"absolute\":\n          var e = zk(n).map(Mn).getOrThunk(function () {\n            return Mn(bn());\n          });\n          return vt.some(H1.absolute(Ea(\"absolute\", tt(t.style, \"left\").map(function (t) {\n            return o.x - e.x;\n          }), tt(t.style, \"top\").map(function (t) {\n            return o.y - e.y;\n          }), tt(t.style, \"right\").map(function (t) {\n            return e.right - o.right;\n          }), tt(t.style, \"bottom\").map(function (t) {\n            return e.bottom - o.bottom;\n          }))));\n        default:\n          return vt.none();\n      }\n    });\n  }\n  function qk(t, e, n) {\n    var o,\n      r,\n      i,\n      u = t.element;\n    return mt(pe(u, \"position\"), \"fixed\") ? (r = e, Xk(o = u, i = n).filter(function (t) {\n      return Gk(i.getModes(), t, r);\n    }).bind(function (t) {\n      return Yk(o, t, i);\n    })) : function (t, e, n) {\n      var r,\n        o,\n        i = Mn(t);\n      if (Gk(n.getModes(), i, e)) return vt.none();\n      r = t, o = i, n.setInitialPos({\n        style: function () {\n          var t = {},\n            e = r.dom;\n          if (ct(e)) for (var n = 0; n < e.style.length; n++) {\n            var o = e.style.item(n);\n            t[o] = e.style[o];\n          }\n          return t;\n        }(),\n        position: ge(r, \"position\") || \"static\",\n        bounds: o\n      });\n      var u = Fn(),\n        a = i.x - u.x,\n        c = e.y - u.y,\n        s = u.bottom - e.bottom,\n        l = i.y <= e.y;\n      return vt.some(H1.fixed(Ea(\"fixed\", vt.some(a), l ? vt.some(c) : vt.none(), vt.none(), l ? vt.none() : vt.some(s))));\n    }(u, e, n);\n  }\n  function Kk(e, t, n) {\n    n.setDocked(!1), St([\"left\", \"right\", \"top\", \"bottom\", \"position\"], function (t) {\n      return ve(e.element, t);\n    }), t.onUndocked(e);\n  }\n  function Jk(t, e, n, o) {\n    var r = \"fixed\" === o.position;\n    n.setDocked(r), Da(t.element, o), (r ? e.onDocked : e.onUndocked)(t);\n  }\n  function $k(o, t, r, i, u) {\n    void 0 === u && (u = !1), t.contextual.each(function (n) {\n      n.lazyContext(o).each(function (t) {\n        var e = t.y < i.bottom && t.bottom > i.y;\n        e !== r.isVisible() && (r.setVisible(e), u && !e ? (Jr(o.element, [n.fadeOutClass]), n.onHide(o)) : (e ? jk : Wk)(o, n));\n      });\n    });\n  }\n  function Qk(t, e, n) {\n    var o, r, i, u, a, c;\n    n.isDocked() && (r = e, i = n, c = (o = t).element, i.setDocked(!1), Xk(a = o.element, u = i).bind(function (t) {\n      return Yk(a, t, u);\n    }).each(function (t) {\n      t.fold(function () {\n        return Kk(o, r, i);\n      }, function (t) {\n        return Jk(o, r, i, t);\n      }, st);\n    }), i.setVisible(!0), r.contextual.each(function (t) {\n      $r(c, [t.fadeInClass, t.fadeOutClass, t.transitionClass]), t.onShow(o);\n    }), L1(o, r, i));\n  }\n  function Zk(t, e) {\n    return wt(j1.getModes(t), e);\n  }\n  function tC(r) {\n    var i = r.element;\n    Yt(i).each(function (t) {\n      var e,\n        n,\n        o = \"padding-\" + j1.getModes(r)[0];\n      j1.isDocked(r) ? (e = Ce(t), fe(i, \"width\", e + \"px\"), fe(t, o, we(n = i) + (parseInt(ge(n, \"margin-top\"), 10) || 0) + (parseInt(ge(n, \"margin-bottom\"), 10) || 0) + \"px\")) : (ve(i, \"width\"), ve(t, o));\n    });\n  }\n  function eC(t, e) {\n    e ? (qr(t, G1.fadeOutClass), Jr(t, [G1.transitionClass, G1.fadeInClass])) : (qr(t, G1.fadeInClass), Jr(t, [G1.fadeOutClass, G1.transitionClass]));\n  }\n  function nC(t, e) {\n    var n = Mt.fromDom(t.getContainer());\n    e ? (Yr(n, X1), qr(n, Y1)) : (Yr(n, Y1), qr(n, X1));\n  }\n  function oC(u, t) {\n    function o(e) {\n      r().each(function (t) {\n        return e(t.element);\n      });\n    }\n    function e(t) {\n      u.inline || tC(t), nC(u, j1.isDocked(t)), t.getSystem().broadcastOn([xf()], {}), r().each(function (t) {\n        return t.getSystem().broadcastOn([xf()], {});\n      });\n    }\n    var n,\n      i = gc(),\n      r = t.getSink,\n      a = u.inline ? [] : [ic.config({\n        channels: ((n = {})[W1()] = {\n          onReceive: tC\n        }, n)\n      })];\n    return V([Vg.config({}), j1.config({\n      contextual: _lt({\n        lazyContext: function lazyContext(t) {\n          var e = we(t.element),\n            n = u.inline ? u.getContentAreaContainer() : u.getContainer(),\n            o = Mn(Mt.fromDom(n)),\n            r = o.height - e,\n            i = o.y + (Zk(t, \"top\") ? 0 : e);\n          return vt.some(Bn(o.x, i, o.width, r));\n        },\n        onShow: function onShow() {\n          o(function (t) {\n            return eC(t, !0);\n          });\n        },\n        onShown: function onShown(r) {\n          o(function (t) {\n            return $r(t, [G1.transitionClass, G1.fadeInClass]);\n          }), i.get().each(function (t) {\n            var e,\n              n = r.element,\n              o = jt(e = t);\n            Oa(o).filter(function (t) {\n              return !zt(e, t);\n            }).filter(function (t) {\n              return zt(t, Mt.fromDom(o.dom.body)) || Ut(n, t);\n            }).each(function () {\n              return ka(e);\n            }), i.clear();\n          });\n        },\n        onHide: function onHide(t) {\n          var e = t.element,\n            n = r;\n          _a(e).orThunk(function () {\n            return n().toOptional().bind(function (t) {\n              return _a(t.element);\n            });\n          }).fold(i.clear, i.set), o(function (t) {\n            return eC(t, !1);\n          });\n        },\n        onHidden: function onHidden() {\n          o(function (t) {\n            return $r(t, [G1.transitionClass]);\n          });\n        }\n      }, G1),\n      lazyViewport: function lazyViewport(t) {\n        var e = Fn(),\n          n = u.getParam(\"toolbar_sticky_offset\", 0, \"number\"),\n          o = e.y + (Zk(t, \"top\") ? n : 0),\n          r = e.height - (Zk(t, \"bottom\") ? n : 0);\n        return Bn(e.x, o, e.width, r);\n      },\n      modes: [t.header.getDockingMode()],\n      onDocked: e,\n      onUndocked: e\n    })], a, !0);\n  }\n  function rC(t) {\n    return ao(\"menubutton\", $1, t);\n  }\n  function iC(e, t) {\n    return t.getAnimationRoot.fold(function () {\n      return e.element;\n    }, function (t) {\n      return t(e);\n    });\n  }\n  function uC(t) {\n    return t.dimension.property;\n  }\n  function aC(t, e) {\n    return t.dimension.getDimension(e);\n  }\n  function cC(t, e) {\n    $r(iC(t, e), [e.shrinkingClass, e.growingClass]);\n  }\n  function sC(t, e) {\n    qr(t.element, e.openClass), Yr(t.element, e.closedClass), fe(t.element, uC(e), \"0px\"), be(t.element);\n  }\n  function lC(t, e) {\n    qr(t.element, e.closedClass), Yr(t.element, e.openClass), ve(t.element, uC(e));\n  }\n  function fC(t, e, n, o) {\n    n.setCollapsed(), fe(t.element, uC(e), aC(e, t.element)), be(t.element), cC(t, e), sC(t, e), e.onStartShrink(t), e.onShrunk(t);\n  }\n  function dC(t, e, n) {\n    var o = aC(e, t.element);\n    (\"0px\" === o ? fC : function (t, e, n, o) {\n      var r = o.getOrThunk(function () {\n        return aC(e, t.element);\n      });\n      n.setCollapsed(), fe(t.element, uC(e), r), be(t.element);\n      var i = iC(t, e);\n      qr(i, e.growingClass), Yr(i, e.shrinkingClass), sC(t, e), e.onStartShrink(t);\n    })(t, e, n, vt.some(o));\n  }\n  function mC(t, e, n) {\n    var o = iC(t, e),\n      r = Kr(o, e.shrinkingClass),\n      i = aC(e, t.element);\n    lC(t, e);\n    var u = aC(e, t.element);\n    (r ? function () {\n      fe(t.element, uC(e), i), be(t.element);\n    } : function () {\n      sC(t, e);\n    })(), qr(o, e.shrinkingClass), Yr(o, e.growingClass), lC(t, e), fe(t.element, uC(e), u), n.setExpanded(), e.onStartGrow(t);\n  }\n  function gC(t, e, n) {\n    return !0 === Kr(iC(t, e), e.growingClass);\n  }\n  function pC(t, e, n) {\n    return !0 === Kr(iC(t, e), e.shrinkingClass);\n  }\n  function hC(t) {\n    return \"<alloy.field.\" + t + \">\";\n  }\n  function vC(t) {\n    return {\n      element: function element() {\n        return t.element.dom;\n      }\n    };\n  }\n  function bC(t, n) {\n    cd.getCurrent(t).each(function (t) {\n      return Rg.set(t, [(e = n, uO.sketch(function (t) {\n        return {\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-sidebar__pane-container\"]\n          },\n          components: (n = t, r = B(Ct(o = e), function (t) {\n            var e = o[t],\n              n = co(ao(\"sidebar\", aO, e));\n            return {\n              name: t,\n              getApi: vC,\n              onSetup: n.onSetup,\n              onShow: n.onShow,\n              onHide: n.onHide\n            };\n          }), B(r, function (t) {\n            var e = Po(st);\n            return n.slot(t.name, {\n              dom: {\n                tag: \"div\",\n                classes: [\"tox-sidebar__pane\"]\n              },\n              behaviours: Kh([vv(t, e), bv(t, e), Cr(Ji(), function (e, t) {\n                var n = t.event;\n                N(r, function (t) {\n                  return t.name === n.name;\n                }).each(function (t) {\n                  (n.visible ? t.onShow : t.onHide)(t.getApi(e));\n                });\n              })])\n            });\n          })),\n          slotBehaviours: Kh([ou(function (t) {\n            return uO.hideAllSlots(t);\n          })])\n        };\n        var n, o, r;\n      }))]);\n      var e;\n    });\n  }\n  function yC(t) {\n    return cd.getCurrent(t).bind(function (t) {\n      return nO.isGrowing(t) || nO.hasGrown(t) ? cd.getCurrent(t).bind(function (e) {\n        return N(uO.getSlotNames(e), function (t) {\n          return uO.isShowing(e, t);\n        });\n      }) : vt.none();\n    });\n  }\n  function xC(t) {\n    var e = Mt.fromHtml(t),\n      n = Kt(e),\n      o = R(void 0 !== e.dom.attributes ? e.dom.attributes : [], function (t, e) {\n        var n;\n        return \"class\" === e.name ? t : _lt(_lt({}, t), ((n = {})[e.name] = e.value, n));\n      }, {}),\n      r = Array.prototype.slice.call(e.dom.classList, 0),\n      i = 0 === n.length ? {} : {\n        innerHtml: Br(e)\n      };\n    return _lt({\n      tag: Ft(e),\n      classes: r,\n      attributes: o\n    }, i);\n  }\n  function wC(t) {\n    return cd.getCurrent(t).each(function (t) {\n      return ka(t.element);\n    });\n  }\n  function SC(f, d, m) {\n    function e(t) {\n      var e;\n      !g.get() || \"focusin\" === (e = t).type && (e.composed ? Y(e.composedPath()) : vt.from(e.target)).map(Mt.fromDom).filter(Ge).exists(function (t) {\n        return Kr(t, \"mce-pastebin\");\n      }) || (t.preventDefault(), wC(d()), f.editorManager.setActive(f));\n    }\n    var g = Po(!1),\n      n = gc();\n    function o(t) {\n      var e, n, o, r, i, u, a, c, s, l;\n      t !== g.get() && (g.set(t), e = f, n = d(), o = t, r = m.providers, c = n.element, s = o, l = \"data-mce-\" + (i = \"tabindex\"), vt.from(e.iframeElement).map(Mt.fromDom).each(function (e) {\n        s ? (ue(e, i).each(function (t) {\n          return oe(e, l, t);\n        }), oe(e, i, -1)) : (ce(e, i), ue(e, l).each(function (t) {\n          oe(e, i, t), ce(e, l);\n        }));\n      }), o ? (fO.block(n, (a = r, function (t, e) {\n        return {\n          dom: {\n            tag: \"div\",\n            attributes: {\n              \"aria-label\": a.translate(\"Loading...\"),\n              tabindex: \"0\"\n            },\n            classes: [\"tox-throbber__busy-spinner\"]\n          },\n          components: [{\n            dom: xC('<div class=\"tox-spinner\"><div></div><div></div><div></div></div>')\n          }]\n        };\n      })), ve(c, \"display\"), ce(c, \"aria-hidden\"), e.hasFocus() && wC(n)) : (u = cd.getCurrent(n).exists(function (t) {\n        return Ca(t.element);\n      }), fO.unblock(n), fe(c, \"display\", \"none\"), oe(c, \"aria-hidden\", \"true\"), u && e.focus()), f.fire(\"AfterProgressState\", {\n        state: t\n      }));\n    }\n    f.inline || f.on(\"PreInit\", function () {\n      f.dom.bind(f.getWin(), \"focusin\", e), f.on(\"BeforeExecCommand\", function (t) {\n        \"mcefocus\" === t.command.toLowerCase() && !0 !== t.value && e(t);\n      });\n    }), f.on(\"ProgressState\", function (t) {\n      var e;\n      n.on(lp.clearTimeout), u(t.time) ? (e = lp.setEditorTimeout(f, function () {\n        return o(t.state);\n      }, t.time), n.set(e)) : (o(t.state), n.clear());\n    });\n  }\n  function kC(t, e, n) {\n    return {\n      within: t,\n      extra: e,\n      withinWidth: n\n    };\n  }\n  function CC(t, e, o) {\n    var n,\n      r = (n = function n(t, e) {\n        var n = o(t);\n        return vt.some({\n          element: t,\n          start: e,\n          finish: e + n,\n          width: n\n        });\n      }, R(t, function (e, t) {\n        return n(t, e.len).fold(rt(e), function (t) {\n          return {\n            len: t.finish,\n            list: e.list.concat([t])\n          };\n        });\n      }, {\n        len: 0,\n        list: []\n      }).list),\n      i = F(r, function (t) {\n        return t.finish <= e;\n      }),\n      u = I(i, function (t, e) {\n        return t + e.width;\n      }, 0);\n    return {\n      within: i,\n      extra: r.slice(i.length),\n      withinWidth: u\n    };\n  }\n  function OC(t) {\n    return B(t, function (t) {\n      return t.element;\n    });\n  }\n  function _C(t, e) {\n    var n = B(e, function (t) {\n      return Eu(t);\n    });\n    N1.setGroups(t, n);\n  }\n  function TC(t, e, n) {\n    var o,\n      r,\n      i,\n      u,\n      a,\n      c,\n      s,\n      l,\n      f,\n      d,\n      m,\n      g,\n      p,\n      h,\n      v,\n      b,\n      y,\n      x,\n      w,\n      S,\n      k = e.builtGroups.get();\n    0 !== k.length && (o = gl(t, e, \"primary\"), r = $y.getCoupled(t, \"overflowGroup\"), fe(o.element, \"visibility\", \"hidden\"), u = K(i = k.concat([r]), function (e) {\n      return _a(e.element).bind(function (t) {\n        return e.getSystem().getByDom(t).toOptional();\n      });\n    }), n([]), _C(o, i), a = Ce(o.element), 0 === (s = a, l = e.builtGroups.get(), d = r, y = (0 === (m = CC(l, s, f = function f(t) {\n      return Ce(t.element);\n    })).extra.length ? vt.some(m) : vt.none()).getOrThunk(function () {\n      return CC(l, s - f(d), f);\n    }), x = y.within, w = y.extra, S = y.withinWidth, (c = 1 === w.length && w[0].width <= f(d) ? (b = S, kC(OC(x.concat(w)), [], b)) : 1 <= w.length ? (p = w, h = d, v = S, kC(OC(x).concat([h]), OC(p), v)) : (g = S, kC(OC(x), [], g))).extra.length) ? (Rg.remove(o, r), n([])) : (_C(o, c.within), n(c.extra)), ve(o.element, \"visibility\"), be(o.element), u.each(Vg.focus));\n  }\n  function EC(t, e) {\n    var n = $y.getCoupled(t, \"toolbarSandbox\");\n    bf.isOpen(n) ? bf.close(n) : bf.open(n, e.toolbar());\n  }\n  function DC(t, e, n, o) {\n    var r = n.getBounds.map(function (t) {\n        return t();\n      }),\n      i = n.lazySink(t).getOrDie();\n    ff.positionWithinBounds(i, e, {\n      anchor: {\n        type: \"hotspot\",\n        hotspot: t,\n        layouts: o,\n        overrides: {\n          maxWidthFunction: pO()\n        }\n      }\n    }, r);\n  }\n  function AC(t, e, n, o, r) {\n    N1.setGroups(e, r), DC(t, e, n, o), zg.on(t);\n  }\n  function BC(t) {\n    return B(t, function (t) {\n      return Eu(t);\n    });\n  }\n  function MC(t, n, o) {\n    TC(t, o, function (e) {\n      o.overflowGroups.set(e), n.getOpt(t).each(function (t) {\n        bO.setGroups(t, BC(e));\n      });\n    });\n  }\n  function FC(e, n) {\n    ml(e, n, \"overflow-button\").bind(function () {\n      return ml(e, n, \"overflow\");\n    }).each(function (t) {\n      QC(e, n), nO.toggleGrow(t);\n    });\n  }\n  function IC(t) {\n    var e = t.title.fold(function () {\n      return {};\n    }, function (t) {\n      return {\n        attributes: {\n          title: t\n        }\n      };\n    });\n    return {\n      dom: _lt({\n        tag: \"div\",\n        classes: [\"tox-toolbar__group\"]\n      }, e),\n      components: [wO.parts.items({})],\n      items: t.items,\n      markers: {\n        itemSelector: \"*:not(.tox-split-button) > .tox-tbtn:not([disabled]), .tox-split-button:not([disabled]), .tox-toolbar-nav-js:not([disabled])\"\n      },\n      tgroupBehaviours: ec([py.config({}), Vg.config({})])\n    };\n  }\n  function RC(t) {\n    return wO.sketch(IC(t));\n  }\n  function NC(n, t) {\n    var e = ou(function (t) {\n      var e = B(n.initGroups, RC);\n      N1.setGroups(t, e);\n    });\n    return ec([Qv(n.providers.isDisabled), pv(), Fg.config({\n      mode: t,\n      onEscape: n.onEscape,\n      selector: \".tox-toolbar__group\"\n    }), mm(\"toolbar-events\", [e])]);\n  }\n  function PC(t) {\n    var e = t.cyclicKeying ? \"cyclic\" : \"acyclic\";\n    return {\n      uid: t.uid,\n      dom: {\n        tag: \"div\",\n        classes: [\"tox-toolbar-overlord\"]\n      },\n      parts: {\n        \"overflow-group\": IC({\n          title: vt.none(),\n          items: []\n        }),\n        \"overflow-button\": Y0({\n          name: \"more\",\n          icon: vt.some(\"more-drawer\"),\n          disabled: !1,\n          tooltip: vt.some(\"More...\"),\n          primary: !1,\n          borderless: !1\n        }, vt.none(), t.providers)\n      },\n      splitToolbarBehaviours: NC(t, e)\n    };\n  }\n  function VC(t) {\n    var e = t.cyclicKeying ? \"cyclic\" : \"acyclic\";\n    return N1.sketch({\n      uid: t.uid,\n      dom: {\n        tag: \"div\",\n        classes: [\"tox-toolbar\"].concat(t.type === bh.scrolling ? [\"tox-toolbar--scrolling\"] : [])\n      },\n      components: [N1.parts.groups({})],\n      toolbarBehaviours: NC(t, e)\n    });\n  }\n  function HC(t) {\n    return \"string\" == typeof t ? t.split(\" \") : t;\n  }\n  function LC(i, u) {\n    var a = _lt(_lt({}, IO), u.menus),\n      n = 0 < Ct(u.menus).length,\n      t = F(void 0 === u.menubar || !0 === u.menubar ? HC(\"file edit view insert format tools table help\") : HC(!1 === u.menubar ? \"\" : u.menubar), function (t) {\n        var e = Tt(IO, t);\n        return n ? e || tt(u.menus, t).exists(function (t) {\n          return Tt(t, \"items\");\n        }) : e;\n      });\n    return F(B(t, function (t) {\n      var e = a[t],\n        n = {\n          title: e.title,\n          items: HC(e.items)\n        },\n        o = u,\n        r = i.getParam(\"removed_menuitems\", \"\").split(/[ ,]/);\n      return {\n        text: n.title,\n        getItems: function getItems() {\n          return H(n.items, function (t) {\n            var e = t.toLowerCase();\n            return 0 === e.trim().length || d(r, function (t) {\n              return t === e;\n            }) ? [] : \"separator\" === e || \"|\" === e ? [{\n              type: \"separator\"\n            }] : o.menuItems[e] ? [o.menuItems[e]] : [];\n          });\n        }\n      };\n    }), function (t) {\n      return 0 < t.getItems().length && d(t.getItems(), function (t) {\n        return \"separator\" !== t.type;\n      });\n    });\n  }\n  function zC(t) {\n    function e() {\n      t._skinLoaded = !0, t.fire(\"SkinLoaded\");\n    }\n    return function () {\n      t.initialized ? e() : t.on(\"init\", e);\n    };\n  }\n  function UC(n, o, r) {\n    return new Mp(function (t, e) {\n      r.load(o, t, e), n.on(\"remove\", function () {\n        return r.unload(o);\n      });\n    });\n  }\n  function jC(t, e) {\n    var n,\n      o,\n      r,\n      i,\n      u,\n      a,\n      c,\n      s,\n      l,\n      f = (r = (n = e).getParam(\"skin\"), i = n.getParam(\"skin_url\"), !1 !== r && (o = r || \"oxide\", i = i ? n.documentBaseURI.toAbsolute(i) : ov.baseURL + \"/skins/ui/\" + o), i);\n    f && e.contentCSS.push(f + (t ? \"/content.inline\" : \"/content\") + \".min.css\"), !1 === e.getParam(\"skin\") == 0 && y(f) ? Mp.all([UC(e, f + \"/skin.min.css\", e.ui.styleSheetLoader), (c = e, s = f, l = Mt.fromDom(c.getElement()), pn(l).isSome() ? UC(c, s + \"/skin.shadowdom.min.css\", nv.DOM.styleSheetLoader) : Mp.resolve())]).then(zC(e), (u = e, a = \"Skin could not be loaded\", function () {\n      return u.fire(\"SkinLoadError\", {\n        message: a\n      });\n    })) : zC(e)();\n  }\n  function WC(o, r) {\n    return function (e) {\n      function t() {\n        e.setActive(o.formatter.match(r));\n        var t = o.formatter.formatChanged(r, e.setActive);\n        n.set(t);\n      }\n      var n = mc();\n      return o.initialized ? t() : o.once(\"init\", t), function () {\n        o.off(\"init\", t), n.clear();\n      };\n    };\n  }\n  function GC(o, r, i) {\n    return function (t) {\n      function e() {\n        return i(t);\n      }\n      function n() {\n        i(t), o.on(r, e);\n      }\n      return o.initialized ? n() : o.once(\"init\", n), function () {\n        o.off(\"init\", n), o.off(r, e);\n      };\n    };\n  }\n  function XC(e) {\n    return function (t) {\n      return function () {\n        e.undoManager.transact(function () {\n          e.focus(), e.execCommand(\"mceToggleFormat\", !1, t.format);\n        });\n      };\n    };\n  }\n  function YC(t, e) {\n    return function () {\n      return t.execCommand(e);\n    };\n  }\n  function qC(t, e, n) {\n    var u,\n      a,\n      c,\n      o = n.dataset,\n      r = \"basic\" === o.type ? function () {\n        return B(o.data, function (t) {\n          return yk(t, n.isSelectedFor, n.getPreviewFor);\n        });\n      } : o.getData;\n    return {\n      items: (u = e, a = n, c = function c(t, e, n) {\n        var o = \"formatter\" === t.type && a.isInvalid(t);\n        return 0 === e ? o ? [] : i(t, e, !1, n).toArray() : i(t, e, o, n).toArray();\n      }, {\n        validateItems: s,\n        getFetch: function getFetch(n, o) {\n          return function (t, e) {\n            e(j0(s(o()), Sh.CLOSE_ON_EXECUTE, n, !1));\n          };\n        }\n      }),\n      getStyleItems: r\n    };\n    function i(t, e, n, o) {\n      var r = u.shared.providers.translate(t.title);\n      if (\"separator\" === t.type) return vt.some({\n        type: \"separator\",\n        text: r\n      });\n      if (\"submenu\" !== t.type) return vt.some(_lt({\n        type: \"togglemenuitem\",\n        text: r,\n        icon: t.icon,\n        active: t.isSelected(o),\n        disabled: n,\n        onAction: a.onAction(t)\n      }, t.getStylePreview().fold(function () {\n        return {};\n      }, function (t) {\n        return {\n          meta: {\n            style: t\n          }\n        };\n      })));\n      var i = H(t.getStyleItems(), function (t) {\n        return c(t, e, o);\n      });\n      return 0 === e && i.length <= 0 ? vt.none() : vt.some({\n        type: \"nestedmenuitem\",\n        text: r,\n        disabled: i.length <= 0,\n        getSubmenuItems: function getSubmenuItems() {\n          return H(t.getStyleItems(), function (t) {\n            return c(t, e, o);\n          });\n        }\n      });\n    }\n    function s(t) {\n      var e = a.getCurrentValue(),\n        n = a.shouldHide ? 0 : 1;\n      return H(t, function (t) {\n        return c(t, n, e);\n      });\n    }\n  }\n  function KC(t, e, n) {\n    var o = qC(0, e, n),\n      r = o.items,\n      i = o.getStyleItems,\n      u = GC(t, \"NodeChange\", function (t) {\n        var e = t.getComponent();\n        n.updateText(e);\n      });\n    return z0({\n      text: n.icon.isSome() ? vt.none() : n.text,\n      icon: n.icon,\n      tooltip: vt.from(n.tooltip),\n      role: vt.none(),\n      fetch: r.getFetch(e, i),\n      onSetup: u,\n      getApi: function getApi(t) {\n        return {\n          getComponent: rt(t)\n        };\n      },\n      columns: 1,\n      presets: \"normal\",\n      classes: n.icon.isSome() ? [] : [\"bespoke\"],\n      dropdownBehaviours: []\n    }, \"tox-tbtn\", e.shared);\n  }\n  function JC(t) {\n    return function (t) {\n      for (; t = t.parentNode;) {\n        var e = t.contentEditable;\n        if (e && \"inherit\" !== e) return O1(t);\n      }\n      return !1;\n    }(t) && !_1(t);\n  }\n  function $C(r, t) {\n    function e(t) {\n      return vl(r);\n    }\n    function n(n, o) {\n      return function (t, e) {\n        return ml(t, r, e).map(function (t) {\n          return n(t, e);\n        }).getOr(o);\n      };\n    }\n    function o(t, e) {\n      return \"true\" !== ie(t.element, \"aria-hidden\");\n    }\n    var i,\n      u = n(o, !1),\n      a = n(function (t, e) {\n        var n;\n        o(t) && (fe(n = t.element, \"display\", \"none\"), oe(n, \"aria-hidden\", \"true\"), br(t, Ji(), {\n          name: e,\n          visible: !1\n        }));\n      }),\n      c = (i = a, function (e, t) {\n        St(t, function (t) {\n          return i(e, t);\n        });\n      }),\n      s = n(function (t, e) {\n        var n;\n        o(t) || (ve(n = t.element, \"display\"), ce(n, \"aria-hidden\"), br(t, Ji(), {\n          name: e,\n          visible: !0\n        }));\n      });\n    return {\n      uid: r.uid,\n      dom: r.dom,\n      components: t,\n      behaviours: tl(r.slotBehaviours),\n      apis: {\n        getSlotNames: e,\n        getSlot: function getSlot(t, e) {\n          return ml(t, r, e);\n        },\n        isShowing: u,\n        hideSlot: a,\n        hideAllSlots: function hideAllSlots(t) {\n          return c(t, e());\n        },\n        showSlot: s\n      }\n    };\n  }\n  function QC(t, e) {\n    ml(t, e, \"overflow\").each(function (n) {\n      TC(t, e, function (t) {\n        var e = B(t, function (t) {\n          return Eu(t);\n        });\n        N1.setGroups(n, e);\n      }), ml(t, e, \"overflow-button\").each(function (t) {\n        nO.hasGrown(n) && zg.on(t);\n      }), nO.refresh(n);\n    });\n  }\n  var ZC,\n    t1,\n    e1,\n    n1 = \"data-value\",\n    o1 = function o1(e, n, t, o) {\n      return B(t, function (t) {\n        return rk(t) ? {\n          type: \"togglemenuitem\",\n          text: t.text,\n          value: t.value,\n          active: t.value === o,\n          onAction: function onAction() {\n            Df.setValue(e, t.value), br(e, yy, {\n              name: n\n            }), Vg.focus(e);\n          }\n        } : {\n          type: \"nestedmenuitem\",\n          text: t.text,\n          getSubmenuItems: function getSubmenuItems() {\n            return o1(e, n, t.items, o);\n          }\n        };\n      });\n    },\n    r1 = function r1(t, e) {\n      return K(t, function (t) {\n        return rk(t) ? ot(t.value === e, t) : r1(t.items, e);\n      });\n    },\n    i1 = kl({\n      name: \"HtmlSelect\",\n      configFields: [mo(\"options\"), Zs(\"selectBehaviours\", [Vg, Df]), Eo(\"selectClasses\", []), Eo(\"selectAttributes\", {}), wo(\"data\")],\n      factory: function factory(n, t) {\n        var e = B(n.options, function (t) {\n            return {\n              dom: {\n                tag: \"option\",\n                value: t.value,\n                innerHtml: t.text\n              }\n            };\n          }),\n          o = n.data.map(function (t) {\n            return sr(\"initialValue\", t);\n          }).getOr({});\n        return {\n          uid: n.uid,\n          dom: {\n            tag: \"select\",\n            classes: n.selectClasses,\n            attributes: n.selectAttributes\n          },\n          components: e,\n          behaviours: el(n.selectBehaviours, [Vg.config({}), Df.config({\n            store: _lt({\n              mode: \"manual\",\n              getValue: function getValue(t) {\n                return Qr(t.element);\n              },\n              setValue: function setValue(t, e) {\n                N(n.options, function (t) {\n                  return t.value === e;\n                }).isSome() && Zr(t.element, e);\n              }\n            }, o)\n          })])\n        };\n      }\n    }),\n    u1 = Object.freeze({\n      __proto__: null,\n      events: function events(t, e) {\n        var n = t.stream.streams.setup(t, e);\n        return nu([Cr(t.event, n), ru(function () {\n          return e.cancel();\n        })].concat(t.cancelEvent.map(function (t) {\n          return [Cr(t, function () {\n            return e.cancel();\n          })];\n        }).getOr([])));\n      }\n    }),\n    a1 = Object.freeze({\n      __proto__: null,\n      throttle: ak,\n      init: function init(t) {\n        return t.stream.streams.state(t);\n      }\n    }),\n    c1 = xa({\n      fields: [go(\"stream\", lo(\"mode\", {\n        throttle: [mo(\"delay\"), Eo(\"stopEvent\", !0), ta(\"streams\", {\n          setup: function setup(t, e) {\n            var n = t.stream,\n              o = vp(t.onStream, n.delay);\n            return e.setTimer(o), function (t, e) {\n              o.throttle(t, e), n.stopEvent && e.stop();\n            };\n          },\n          state: ak\n        })]\n      })), Eo(\"event\", \"input\"), wo(\"cancelEvent\"), Qu(\"onStream\")],\n      name: \"streaming\",\n      active: u1,\n      state: a1\n    }),\n    s1 = function s1(t) {\n      sk(t, function (t, e) {\n        return t.setSelectionRange(e.length, e.length);\n      });\n    },\n    l1 = rt(\"alloy.typeahead.itemexecute\"),\n    f1 = rt([wo(\"lazySink\"), mo(\"fetch\"), Eo(\"minChars\", 5), Eo(\"responseTime\", 1e3), Ju(\"onOpen\"), Eo(\"getHotspot\", vt.some), Eo(\"getAnchorOverrides\", rt({})), Eo(\"layouts\", vt.none()), Eo(\"eventOrder\", {}), No(\"model\", {}, [Eo(\"getDisplayText\", function (t) {\n      return void 0 !== t.meta && void 0 !== t.meta.text ? t.meta.text : t.value;\n    }), Eo(\"selectsOver\", !0), Eo(\"populateFromBrowse\", !0)]), Ju(\"onSetValue\"), $u(\"onExecute\"), Ju(\"onItemExecute\"), Eo(\"inputClasses\", []), Eo(\"inputAttributes\", {}), Eo(\"inputStyles\", {}), Eo(\"matchWidth\", !0), Eo(\"useMinWidth\", !1), Eo(\"dismissOnBlur\", !0), qu([\"openClass\"]), wo(\"initialData\"), Zs(\"typeaheadBehaviours\", [Vg, Df, c1, Fg, zg, $y]), cr(\"previewing\", function () {\n      return Po(!0);\n    })].concat(Ey()).concat(ux())),\n    d1 = rt([$f({\n      schema: [Yu()],\n      name: \"menu\",\n      overrides: function overrides(o) {\n        return {\n          fakeFocus: !0,\n          onHighlight: function onHighlight(e, n) {\n            o.previewing.get() ? e.getSystem().getByUid(o.uid).each(function (t) {\n              !function (t, e, o) {\n                if (t.selectsOver) {\n                  var n = Df.getValue(e),\n                    r = t.getDisplayText(n),\n                    i = Df.getValue(o);\n                  return 0 === t.getDisplayText(i).indexOf(r) ? vt.some(function () {\n                    var n;\n                    ck(0, e, o), n = r.length, sk(e, function (t, e) {\n                      return t.setSelectionRange(n, e.length);\n                    });\n                  }) : vt.none();\n                }\n                return vt.none();\n              }(o.model, t, n).fold(function () {\n                return hd.dehighlight(e, n);\n              }, function (t) {\n                return t();\n              });\n            }) : e.getSystem().getByUid(o.uid).each(function (t) {\n              o.model.populateFromBrowse && ck(o.model, t, n);\n            }), o.previewing.set(!1);\n          },\n          onExecute: function onExecute(t, e) {\n            return t.getSystem().getByUid(o.uid).toOptional().map(function (t) {\n              return br(t, l1(), {\n                item: e\n              }), !0;\n            });\n          },\n          onHover: function onHover(t, e) {\n            o.previewing.set(!1), t.getSystem().getByUid(o.uid).each(function (t) {\n              o.model.populateFromBrowse && ck(o.model, t, e);\n            });\n          }\n        };\n      }\n    })]),\n    m1 = Cl({\n      name: \"Typeahead\",\n      configFields: f1(),\n      partFields: d1(),\n      factory: function factory(r, t, e, i) {\n        function n(t, e, n) {\n          r.previewing.set(!1);\n          var o = $y.getCoupled(t, \"sandbox\");\n          bf.isOpen(o) ? cd.getCurrent(o).each(function (t) {\n            hd.getHighlighted(t).fold(function () {\n              n(t);\n            }, function () {\n              wr(o, t.element, \"keydown\", e);\n            });\n          }) : ex(r, u(t), t, o, i, function (t) {\n            cd.getCurrent(t).each(n);\n          }, Vy.HighlightFirst).get(st);\n        }\n        function u(n) {\n          return function (t) {\n            return t.map(function (t) {\n              var e = H(Z(t.menus), function (t) {\n                return F(t.items, function (t) {\n                  return \"item\" === t.type;\n                });\n              });\n              return Df.getState(n).update(B(e, function (t) {\n                return t.data;\n              })), t;\n            });\n          };\n        }\n        var o = ry(r),\n          a = [Vg.config({}), Df.config({\n            onSetValue: r.onSetValue,\n            store: _lt({\n              mode: \"dataset\",\n              getDataKey: function getDataKey(t) {\n                return Qr(t.element);\n              },\n              getFallbackEntry: function getFallbackEntry(t) {\n                return {\n                  value: t,\n                  meta: {}\n                };\n              },\n              setValue: function setValue(t, e) {\n                Zr(t.element, r.model.getDisplayText(e));\n              }\n            }, r.initialData.map(function (t) {\n              return sr(\"initialValue\", t);\n            }).getOr({}))\n          }), c1.config({\n            stream: {\n              mode: \"throttle\",\n              delay: r.responseTime,\n              stopEvent: !1\n            },\n            onStream: function onStream(t, e) {\n              var n,\n                o = $y.getCoupled(t, \"sandbox\");\n              Vg.isFocused(t) && Qr(t.element).length >= r.minChars && (n = cd.getCurrent(o).bind(function (t) {\n                return hd.getHighlighted(t).map(Df.getValue);\n              }), r.previewing.set(!0), ex(r, u(t), t, o, i, function (t) {\n                cd.getCurrent(o).each(function (t) {\n                  n.fold(function () {\n                    r.model.selectsOver && hd.highlightFirst(t);\n                  }, function (e) {\n                    hd.highlightBy(t, function (t) {\n                      return Df.getValue(t).value === e.value;\n                    }), hd.getHighlighted(t).orThunk(function () {\n                      return hd.highlightFirst(t), vt.none();\n                    });\n                  });\n                });\n              }, Vy.HighlightFirst).get(st));\n            },\n            cancelEvent: Hi()\n          }), Fg.config({\n            mode: \"special\",\n            onDown: function onDown(t, e) {\n              return n(t, e, hd.highlightFirst), vt.some(!0);\n            },\n            onEscape: function onEscape(t) {\n              var e = $y.getCoupled(t, \"sandbox\");\n              return bf.isOpen(e) ? (bf.close(e), vt.some(!0)) : vt.none();\n            },\n            onUp: function onUp(t, e) {\n              return n(t, e, hd.highlightLast), vt.some(!0);\n            },\n            onEnter: function onEnter(e) {\n              var t = $y.getCoupled(e, \"sandbox\"),\n                n = bf.isOpen(t);\n              if (n && !r.previewing.get()) return cd.getCurrent(t).bind(function (t) {\n                return hd.getHighlighted(t);\n              }).map(function (t) {\n                return br(e, l1(), {\n                  item: t\n                }), !0;\n              });\n              var o = Df.getValue(e);\n              return vr(e, Hi()), r.onExecute(t, e, o), n && bf.close(t), vt.some(!0);\n            }\n          }), zg.config({\n            toggleClass: r.markers.openClass,\n            aria: {\n              mode: \"expanded\"\n            }\n          }), $y.config({\n            others: {\n              sandbox: function sandbox(t) {\n                return rx(r, t, {\n                  onOpen: function onOpen() {\n                    return zg.on(t);\n                  },\n                  onClose: function onClose() {\n                    return zg.off(t);\n                  }\n                });\n              }\n            }\n          }), mm(\"typeaheadevents\", [uu(function (t) {\n            nx(r, u(t), t, i, st, Vy.HighlightFirst).get(st);\n          }), Cr(l1(), function (t, e) {\n            var n = $y.getCoupled(t, \"sandbox\");\n            ck(r.model, t, e.event.item), vr(t, Hi()), r.onItemExecute(t, n, e.event.item, Df.getValue(t)), bf.close(n), s1(t);\n          })].concat(r.dismissOnBlur ? [Cr(Bi(), function (t) {\n            var e = $y.getCoupled(t, \"sandbox\");\n            _a(e.element).isNone() && bf.close(e);\n          })] : []))];\n        return {\n          uid: r.uid,\n          dom: iy(Yo(r, {\n            inputAttributes: {\n              role: \"combobox\",\n              \"aria-autocomplete\": \"list\",\n              \"aria-haspopup\": \"true\"\n            }\n          })),\n          behaviours: _lt(_lt({}, o), el(r.typeaheadBehaviours, a)),\n          eventOrder: r.eventOrder\n        };\n      }\n    }),\n    g1 = function g1(i) {\n      return _lt(_lt({}, i), {\n        toCached: function toCached() {\n          return g1(i.toCached());\n        },\n        bindFuture: function bindFuture(e) {\n          return g1(i.bind(function (t) {\n            return t.fold(function (t) {\n              return Gy(Nn.error(t));\n            }, function (t) {\n              return e(t);\n            });\n          }));\n        },\n        bindResult: function bindResult(e) {\n          return g1(i.map(function (t) {\n            return t.bind(e);\n          }));\n        },\n        mapResult: function mapResult(e) {\n          return g1(i.map(function (t) {\n            return t.map(e);\n          }));\n        },\n        mapError: function mapError(e) {\n          return g1(i.map(function (t) {\n            return t.mapError(e);\n          }));\n        },\n        foldResult: function foldResult(e, n) {\n          return i.map(function (t) {\n            return t.fold(e, n);\n          });\n        },\n        withTimeout: function withTimeout(t, r) {\n          return g1(Wy(function (e) {\n            var n = !1,\n              o = setTimeout(function () {\n                n = !0, e(Nn.error(r()));\n              }, t);\n            i.get(function (t) {\n              n || (clearTimeout(o), e(t));\n            });\n          }));\n        }\n      });\n    },\n    p1 = function p1(t) {\n      return g1(Wy(t));\n    },\n    h1 = {\n      type: \"separator\"\n    },\n    v1 = Ir(\"aria-invalid\"),\n    b1 = {\n      bar: pk(function (t, e) {\n        return n = e.shared, {\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-bar\", \"tox-form__controls-h-stack\"]\n          },\n          components: B(t.items, n.interpreter)\n        };\n        var n;\n      }),\n      collection: pk(function (t, e) {\n        return u = t, a = e.shared.providers, c = u.label.map(function (t) {\n          return oy(t, a);\n        }), s = n(function (t, e, n, o) {\n          e.stop(), a.isDisabled() || br(t, Sy, {\n            name: u.name,\n            value: o\n          });\n        }), l = [Cr(vi(), n(function (t, e, n) {\n          ka(n);\n        })), Cr(Ci(), s), Cr(Ni(), s), Cr(bi(), n(function (t, e, n) {\n          Iu(t.element, \".\" + Bh).each(function (t) {\n            qr(t, Bh);\n          }), Yr(n, Bh);\n        })), Cr(yi(), n(function (t) {\n          Iu(t.element, \".\" + Bh).each(function (t) {\n            qr(t, Bh);\n          });\n        })), uu(n(function (t, e, n, o) {\n          br(t, Sy, {\n            name: u.name,\n            value: o\n          });\n        }))], ny(c, my.parts.field({\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-collection\"].concat(1 !== u.columns ? [\"tox-collection--grid\"] : [\"tox-collection--list\"])\n          },\n          components: [],\n          factory: {\n            sketch: h\n          },\n          behaviours: ec([gd.config({\n            disabled: a.isDisabled,\n            onDisabled: function onDisabled(t) {\n              o(t, function (t) {\n                Yr(t, \"tox-collection__item--state-disabled\"), oe(t, \"aria-disabled\", !0);\n              });\n            },\n            onEnabled: function onEnabled(t) {\n              o(t, function (t) {\n                qr(t, \"tox-collection__item--state-disabled\"), ce(t, \"aria-disabled\");\n              });\n            }\n          }), pv(), Rg.config({}), Df.config({\n            store: {\n              mode: \"memory\",\n              initialValue: []\n            },\n            onSetValue: function onSetValue(o, t) {\n              var e = o,\n                n = B(t, function (t) {\n                  var e = dp.translate(t.text),\n                    n = 1 === u.columns ? '<div class=\"tox-collection__item-label\">' + e + \"</div>\" : \"\",\n                    o = '<div class=\"tox-collection__item-icon\">' + t.icon + \"</div>\",\n                    r = {\n                      _: \" \",\n                      \" - \": \" \",\n                      \"-\": \" \"\n                    },\n                    i = e.replace(/\\_| \\- |\\-/g, function (t) {\n                      return r[t];\n                    });\n                  return '<div class=\"tox-collection__item' + (a.isDisabled() ? \" tox-collection__item--state-disabled\" : \"\") + '\" tabindex=\"-1\" data-collection-item-value=\"' + hy.encodeAllRaw(t.value) + '\" title=\"' + i + '\" aria-label=\"' + i + '\">' + o + n + \"</div>\";\n                }),\n                r = B(\"auto\" !== u.columns && 1 < u.columns ? p(n, u.columns) : [n], function (t) {\n                  return '<div class=\"tox-collection__group\">' + t.join(\"\") + \"</div>\";\n                });\n              Mr(e.element, r.join(\"\")), \"auto\" === u.columns && ah(o, 5, \"tox-collection__item\").each(function (t) {\n                var e = t.numRows,\n                  n = t.numColumns;\n                Fg.setGridSize(o, e, n);\n              }), vr(o, Ty);\n            }\n          }), py.config({}), Fg.config(1 === (i = u.columns) ? {\n            mode: \"menu\",\n            moveOnTab: !1,\n            selector: \".tox-collection__item\"\n          } : \"auto\" === i ? {\n            mode: \"flatgrid\",\n            selector: \".tox-collection__item\",\n            initSize: {\n              numColumns: 1,\n              numRows: 1\n            }\n          } : {\n            mode: \"matrix\",\n            selectors: {\n              row: \".tox-collection__group\",\n              cell: \".\" + Ch\n            }\n          }), mm(\"collection-events\", l)]),\n          eventOrder: ((r = {})[Ii()] = [\"disabling\", \"alloy.base.behaviour\", \"collection-events\"], r)\n        }), [\"tox-form__group--collection\"], []);\n        function n(o) {\n          return function (e, n) {\n            Ru(n.event.target, \"[data-collection-item-value]\").each(function (t) {\n              o(e, n, t, ie(t, \"data-collection-item-value\"));\n            });\n          };\n        }\n        function o(t, e) {\n          return B(vs(t.element, \".tox-collection__item\"), e);\n        }\n        var u, a, r, i, c, s, l;\n      }),\n      alertbanner: pk(function (t, e) {\n        return o = e.shared.providers, ly.sketch({\n          dom: {\n            tag: \"div\",\n            attributes: {\n              role: \"alert\"\n            },\n            classes: [\"tox-notification\", \"tox-notification--in\", \"tox-notification--\" + (n = t).level]\n          },\n          components: [{\n            dom: {\n              tag: \"div\",\n              classes: [\"tox-notification__icon\"]\n            },\n            components: [fp.sketch({\n              dom: {\n                tag: \"button\",\n                classes: [\"tox-button\", \"tox-button--naked\", \"tox-button--icon\"],\n                innerHtml: jm(n.icon, o.icons),\n                attributes: {\n                  title: o.translate(n.iconTooltip)\n                }\n              },\n              action: function action(t) {\n                br(t, Sy, {\n                  name: \"alert-banner\",\n                  value: n.url\n                });\n              },\n              buttonBehaviours: ec([Wm()])\n            })]\n          }, {\n            dom: {\n              tag: \"div\",\n              classes: [\"tox-notification__body\"],\n              innerHtml: o.translate(n.text)\n            }\n          }]\n        });\n        var n, o;\n      }),\n      input: pk(function (t, e) {\n        return o = e.shared.providers, uk({\n          name: (n = t).name,\n          multiline: !1,\n          label: n.label,\n          inputMode: n.inputMode,\n          placeholder: n.placeholder,\n          flex: !1,\n          disabled: n.disabled,\n          classname: \"tox-textfield\",\n          validation: vt.none(),\n          maximized: n.maximized\n        }, o);\n        var n, o;\n      }),\n      textarea: pk(function (t, e) {\n        return o = e.shared.providers, uk({\n          name: (n = t).name,\n          multiline: !0,\n          label: n.label,\n          inputMode: vt.none(),\n          placeholder: n.placeholder,\n          flex: !0,\n          disabled: n.disabled,\n          classname: \"tox-textarea\",\n          validation: vt.none(),\n          maximized: n.maximized\n        }, o);\n        var n, o;\n      }),\n      label: pk(function (t, e) {\n        return r = {\n          dom: {\n            tag: \"label\",\n            innerHtml: (o = e.shared).providers.translate((n = t).label),\n            classes: [\"tox-label\"]\n          }\n        }, i = B(n.items, o.interpreter), {\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-form__group\"]\n          },\n          components: [r].concat(i),\n          behaviours: ec([aw(), Rg.config({}), cw(vt.none()), Fg.config({\n            mode: \"acyclic\"\n          })])\n        };\n        var n, o, r, i;\n      }),\n      iframe: (ZC = function ZC(t, e) {\n        return n = t, o = e.shared.providers, u = bS && n.sandboxed, a = _lt(_lt({}, n.label.map(function (t) {\n          return {\n            title: t\n          };\n        }).getOr({})), u ? {\n          sandbox: \"allow-scripts allow-same-origin\"\n        } : {}), r = u, i = Po(\"\"), c = {\n          getValue: function getValue(t) {\n            return i.get();\n          },\n          setValue: function setValue(t, e) {\n            var n;\n            r ? oe(t.element, \"srcdoc\", e) : (oe(t.element, \"src\", \"javascript:''\"), (n = t.element.dom.contentWindow.document).open(), n.write(e), n.close()), i.set(e);\n          }\n        }, ny(n.label.map(function (t) {\n          return oy(t, o);\n        }), my.parts.field({\n          factory: {\n            sketch: function sketch(t) {\n              return d0({\n                uid: t.uid,\n                dom: {\n                  tag: \"iframe\",\n                  attributes: a\n                },\n                behaviours: ec([py.config({}), Vg.config({}), gS(vt.none(), c.getValue, c.setValue)])\n              });\n            }\n          }\n        }), [\"tox-form__group--stretched\"], []);\n        var n, o, r, i, u, a, c;\n      }, function (t, e, n) {\n        var o = Yo(e, {\n          source: \"dynamic\"\n        });\n        return pk(ZC)(t, o, n);\n      }),\n      button: pk(function (t, e) {\n        return n = t, o = e.shared.providers, r = $0(n.name, \"custom\"), ny(vt.none(), my.parts.field(_lt({\n          factory: fp\n        }, K0(n, vt.some(r), o, [pS(\"\"), aw()]))), [], []);\n        var n, o, r;\n      }),\n      checkbox: pk(function (t, e) {\n        return r = t, i = e.shared.providers, u = Df.config({\n          store: {\n            mode: \"manual\",\n            getValue: function getValue(t) {\n              return t.element.dom.checked;\n            },\n            setValue: function setValue(t, e) {\n              t.element.dom.checked = e;\n            }\n          }\n        }), a = my.parts.field({\n          factory: {\n            sketch: h\n          },\n          dom: {\n            tag: \"input\",\n            classes: [\"tox-checkbox__input\"],\n            attributes: {\n              type: \"checkbox\"\n            }\n          },\n          behaviours: ec([aw(), gd.config({\n            disabled: function disabled() {\n              return r.disabled || i.isDisabled();\n            }\n          }), py.config({}), Vg.config({}), u, Fg.config({\n            mode: \"special\",\n            onEnter: n,\n            onSpace: n,\n            stopSpaceKeyup: !0\n          }), mm(\"checkbox-events\", [Cr(ki(), function (t, e) {\n            br(t, yy, {\n              name: r.name\n            });\n          })])])\n        }), c = my.parts.label({\n          dom: {\n            tag: \"span\",\n            classes: [\"tox-checkbox__label\"],\n            innerHtml: i.translate(r.label)\n          },\n          behaviours: ec([vw.config({})])\n        }), s = Hm({\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-checkbox__icons\"]\n          },\n          components: [o(\"checked\"), o(\"unchecked\")]\n        }), my.sketch({\n          dom: {\n            tag: \"label\",\n            classes: [\"tox-checkbox\"]\n          },\n          components: [a, s.asSpec(), c],\n          fieldBehaviours: ec([gd.config({\n            disabled: function disabled() {\n              return r.disabled || i.isDisabled();\n            },\n            disableClass: \"tox-checkbox--disabled\",\n            onDisabled: function onDisabled(t) {\n              my.getField(t).each(gd.disable);\n            },\n            onEnabled: function onEnabled(t) {\n              my.getField(t).each(gd.enable);\n            }\n          }), pv()])\n        });\n        function n(t) {\n          return t.element.dom.click(), vt.some(!0);\n        }\n        function o(t) {\n          return Xm(\"checked\" === t ? \"selected\" : \"unselected\", {\n            tag: \"span\",\n            classes: [\"tox-icon\", \"tox-checkbox-icon__\" + t]\n          }, i.icons);\n        }\n        var r, i, u, a, c, s;\n      }),\n      colorinput: pk(function (t, e) {\n        return n = t, r = e.shared, i = e.colorinput, c = my.parts.field({\n          factory: Dy,\n          inputClasses: [\"tox-textfield\"],\n          onSetValue: function onSetValue(t) {\n            return Ky.run(t).get(st);\n          },\n          inputBehaviours: ec([gd.config({\n            disabled: r.providers.isDisabled\n          }), pv(), py.config({}), Ky.config({\n            invalidClass: \"tox-textbox-field-invalid\",\n            getRoot: function getRoot(t) {\n              return Yt(t.element);\n            },\n            notify: {\n              onValid: function onValid(t) {\n                var e = Df.getValue(t);\n                br(t, bw, {\n                  color: e\n                });\n              }\n            },\n            validator: {\n              validateOnLoad: !1,\n              validate: function validate(t) {\n                var e = Df.getValue(t);\n                if (0 === e.length) return Gy(Nn.value(!0));\n                var n = Mt.fromTag(\"span\");\n                fe(n, \"background-color\", e);\n                var o = pe(n, \"background-color\").fold(function () {\n                  return Nn.error(\"blah\");\n                }, function (t) {\n                  return Nn.value(e);\n                });\n                return Gy(o);\n              }\n            }\n          })]),\n          selectOnFocus: !1\n        }), s = n.label.map(function (t) {\n          return oy(t, r.providers);\n        }), l = Hm((u = {\n          dom: {\n            tag: \"span\",\n            attributes: {\n              \"aria-label\": r.providers.translate(\"Color swatch\")\n            }\n          },\n          layouts: {\n            onRtl: function onRtl() {\n              return [Ya, Xa, $a];\n            },\n            onLtr: function onLtr() {\n              return [Xa, Ya, $a];\n            }\n          },\n          components: [],\n          fetch: wb(i.getColors(), i.hasCustomColors()),\n          columns: i.getColorCols(),\n          presets: \"color\",\n          onItemAction: function onItemAction(t, n) {\n            l.getOpt(t).each(function (e) {\n              \"custom\" === n ? i.colorPicker(function (t) {\n                t.fold(function () {\n                  return vr(e, xw);\n                }, function (t) {\n                  o(e, t), hb(t);\n                });\n              }, \"#ffffff\") : o(e, \"remove\" === n ? \"\" : n);\n            });\n          }\n        }, hw.sketch({\n          dom: u.dom,\n          components: u.components,\n          toggleClass: \"mce-active\",\n          dropdownBehaviours: ec([$v((a = r).providers.isDisabled), pv(), vw.config({}), py.config({})]),\n          layouts: u.layouts,\n          sandboxClasses: [\"tox-dialog__popups\"],\n          lazySink: a.getSink,\n          fetch: function fetch(e) {\n            return Wy(function (t) {\n              return u.fetch(t);\n            }).map(function (t) {\n              return vt.from(Xb(Yo(Ob(Ir(\"menu-value\"), t, function (t) {\n                u.onItemAction(e, t);\n              }, u.columns, u.presets, Sh.CLOSE_ON_EXECUTE, T, a.providers), {\n                movement: _b(u.columns, u.presets)\n              })));\n            });\n          },\n          parts: {\n            menu: Zp(0, 0, u.presets)\n          }\n        }))), my.sketch({\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-form__group\"]\n          },\n          components: s.toArray().concat([{\n            dom: {\n              tag: \"div\",\n              classes: [\"tox-color-input\"]\n            },\n            components: [c, l.asSpec()]\n          }]),\n          fieldBehaviours: ec([mm(\"form-field-events\", [Cr(bw, function (t, e) {\n            l.getOpt(t).each(function (t) {\n              fe(t.element, \"background-color\", e.event.color);\n            }), br(t, yy, {\n              name: n.name\n            });\n          }), Cr(yw, function (e, n) {\n            my.getField(e).each(function (t) {\n              Df.setValue(t, n.event.value), cd.getCurrent(e).each(Vg.focus);\n            });\n          }), Cr(xw, function (e, t) {\n            my.getField(e).each(function (t) {\n              cd.getCurrent(e).each(Vg.focus);\n            });\n          })])])\n        });\n        function o(t, e) {\n          br(t, yw, {\n            value: e\n          });\n        }\n        var n, r, i, u, a, c, s, l;\n      }),\n      colorpicker: pk(function (t) {\n        var r = Hm(a0(c0, function (t) {\n          return \"tox-\" + t;\n        }).sketch({\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-color-picker-container\"],\n            attributes: {\n              role: \"presentation\"\n            }\n          },\n          onValidHex: function onValidHex(t) {\n            br(t, Sy, {\n              name: \"hex-valid\",\n              value: !0\n            });\n          },\n          onInvalidHex: function onInvalidHex(t) {\n            br(t, Sy, {\n              name: \"hex-valid\",\n              value: !1\n            });\n          }\n        }));\n        return {\n          dom: {\n            tag: \"div\"\n          },\n          components: [r.asSpec()],\n          behaviours: ec([Df.config({\n            store: {\n              mode: \"manual\",\n              getValue: function getValue(t) {\n                var e = r.get(t);\n                return cd.getCurrent(e).bind(function (t) {\n                  return Df.getValue(t).hex;\n                }).map(function (t) {\n                  return \"#\" + t;\n                }).getOr(\"\");\n              },\n              setValue: function setValue(t, e) {\n                var n = /^#([a-fA-F0-9]{3}(?:[a-fA-F0-9]{3})?)/.exec(e),\n                  o = r.get(t);\n                cd.getCurrent(o).fold(function () {\n                  console.log(\"Can not find form\");\n                }, function (t) {\n                  Df.setValue(t, {\n                    hex: vt.from(n[1]).getOr(\"\")\n                  }), nS.getField(t, \"hex\").each(function (t) {\n                    vr(t, Si());\n                  });\n                });\n              }\n            }\n          }), aw()])\n        };\n      }),\n      dropzone: pk(function (t, e) {\n        return l0(t, e.shared.providers);\n      }),\n      grid: pk(function (t, e) {\n        return n = e.shared, {\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-form__grid\", \"tox-form__grid--\" + t.columns + \"col\"]\n          },\n          components: B(t.items, n.interpreter)\n        };\n        var n;\n      }),\n      listbox: pk(function (t, e) {\n        return n = t, r = (o = e).shared.providers, i = Y(n.items).filter(rk), u = n.label.map(function (t) {\n          return oy(t, r);\n        }), a = {\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-listboxfield\"]\n          },\n          components: [my.parts.field({\n            dom: {},\n            factory: {\n              sketch: function sketch(t) {\n                return z0({\n                  uid: t.uid,\n                  text: i.map(function (t) {\n                    return t.text;\n                  }),\n                  icon: vt.none(),\n                  tooltip: n.label,\n                  role: vt.none(),\n                  fetch: function fetch(t, e) {\n                    e(j0(o1(t, n.name, n.items, Df.getValue(t)), Sh.CLOSE_ON_EXECUTE, o, !1));\n                  },\n                  onSetup: rt(st),\n                  getApi: rt({}),\n                  columns: 1,\n                  presets: \"normal\",\n                  classes: [],\n                  dropdownBehaviours: [py.config({}), Df.config({\n                    store: {\n                      mode: \"manual\",\n                      initialValue: i.map(function (t) {\n                        return t.value;\n                      }).getOr(\"\"),\n                      getValue: function getValue(t) {\n                        return ie(t.element, n1);\n                      },\n                      setValue: function setValue(e, t) {\n                        r1(n.items, t).each(function (t) {\n                          oe(e.element, n1, t.value), br(e, NS, {\n                            text: t.text\n                          });\n                        });\n                      }\n                    }\n                  })]\n                }, \"tox-listbox\", o.shared);\n              }\n            }\n          })]\n        }, my.sketch({\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-form__group\"]\n          },\n          components: ft([u.toArray(), [a]]),\n          fieldBehaviours: ec([gd.config({\n            disabled: rt(n.disabled),\n            onDisabled: function onDisabled(t) {\n              my.getField(t).each(gd.disable);\n            },\n            onEnabled: function onEnabled(t) {\n              my.getField(t).each(gd.enable);\n            }\n          })])\n        });\n        var n, o, r, i, u, a;\n      }),\n      selectbox: pk(function (t, e) {\n        return n = t, o = e.shared.providers, r = B(n.items, function (t) {\n          return {\n            text: o.translate(t.text),\n            value: t.value\n          };\n        }), i = n.label.map(function (t) {\n          return oy(t, o);\n        }), u = {\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-selectfield\"]\n          },\n          components: ft([[my.parts.field({\n            dom: {},\n            selectAttributes: {\n              size: n.size\n            },\n            options: r,\n            factory: i1,\n            selectBehaviours: ec([gd.config({\n              disabled: function disabled() {\n                return n.disabled || o.isDisabled();\n              }\n            }), py.config({}), mm(\"selectbox-change\", [Cr(ki(), function (t, e) {\n              br(t, yy, {\n                name: n.name\n              });\n            })])])\n          })], (1 < n.size ? vt.none() : vt.some(Xm(\"chevron-down\", {\n            tag: \"div\",\n            classes: [\"tox-selectfield__icon-js\"]\n          }, o.icons))).toArray()])\n        }, my.sketch({\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-form__group\"]\n          },\n          components: ft([i.toArray(), [u]]),\n          fieldBehaviours: ec([gd.config({\n            disabled: function disabled() {\n              return n.disabled || o.isDisabled();\n            },\n            onDisabled: function onDisabled(t) {\n              my.getField(t).each(gd.disable);\n            },\n            onEnabled: function onEnabled(t) {\n              my.getField(t).each(gd.enable);\n            }\n          }), pv()])\n        });\n        var n, o, r, i, u;\n      }),\n      sizeinput: pk(function (t, e) {\n        return ow(t, e.shared.providers);\n      }),\n      urlinput: pk(function (t, e) {\n        return gk(t, e, e.urlinput);\n      }),\n      customeditor: pk(function (n) {\n        var o = gc(),\n          e = Hm({\n            dom: {\n              tag: n.tag\n            }\n          }),\n          r = gc();\n        return {\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-custom-editor\"]\n          },\n          behaviours: ec([mm(\"custom-editor-events\", [ou(function (t) {\n            e.getOpt(t).each(function (e) {\n              (Tt(n, \"init\") ? n.init(e.element.dom) : lS.load(n.scriptId, n.scriptUrl).then(function (t) {\n                return t(e.element.dom, n.settings);\n              })).then(function (e) {\n                r.on(function (t) {\n                  e.setValue(t);\n                }), r.clear(), o.set(e);\n              });\n            });\n          })]), Df.config({\n            store: {\n              mode: \"manual\",\n              getValue: function getValue() {\n                return o.get().fold(function () {\n                  return r.get().getOr(\"\");\n                }, function (t) {\n                  return t.getValue();\n                });\n              },\n              setValue: function setValue(t, e) {\n                o.get().fold(function () {\n                  r.set(e);\n                }, function (t) {\n                  return t.setValue(e);\n                });\n              }\n            }\n          }), aw()]),\n          components: [e.asSpec()]\n        };\n      }),\n      htmlpanel: pk(function (t) {\n        return \"presentation\" === t.presets ? ly.sketch({\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-form__group\"],\n            innerHtml: t.html\n          }\n        }) : ly.sketch({\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-form__group\"],\n            innerHtml: t.html,\n            attributes: {\n              role: \"document\"\n            }\n          },\n          containerBehaviours: ec([py.config({}), Vg.config({})])\n        });\n      }),\n      imagetools: pk(function (t, e) {\n        return ok(t, e.shared.providers);\n      }),\n      table: pk(function (t, e) {\n        return ik(t, e.shared.providers);\n      }),\n      panel: pk(function (t, e) {\n        return {\n          dom: {\n            tag: \"div\",\n            classes: t.classes\n          },\n          components: B(t.items, e.shared.interpreter)\n        };\n      })\n    },\n    y1 = {\n      field: function field(t, e) {\n        return e;\n      }\n    },\n    x1 = function x1(e, n, o) {\n      return tt(b1, n.type).fold(function () {\n        return console.error('Unknown factory type \"' + n.type + '\", defaulting to container: ', n), n;\n      }, function (t) {\n        return t(e, n, o);\n      });\n    },\n    w1 = {\n      valignCentre: [],\n      alignCentre: [],\n      alignLeft: [],\n      alignRight: [],\n      right: [],\n      left: [],\n      bottom: [],\n      top: []\n    },\n    S1 = [{\n      title: \"Headings\",\n      items: [{\n        title: \"Heading 1\",\n        format: \"h1\"\n      }, {\n        title: \"Heading 2\",\n        format: \"h2\"\n      }, {\n        title: \"Heading 3\",\n        format: \"h3\"\n      }, {\n        title: \"Heading 4\",\n        format: \"h4\"\n      }, {\n        title: \"Heading 5\",\n        format: \"h5\"\n      }, {\n        title: \"Heading 6\",\n        format: \"h6\"\n      }]\n    }, {\n      title: \"Inline\",\n      items: [{\n        title: \"Bold\",\n        format: \"bold\"\n      }, {\n        title: \"Italic\",\n        format: \"italic\"\n      }, {\n        title: \"Underline\",\n        format: \"underline\"\n      }, {\n        title: \"Strikethrough\",\n        format: \"strikethrough\"\n      }, {\n        title: \"Superscript\",\n        format: \"superscript\"\n      }, {\n        title: \"Subscript\",\n        format: \"subscript\"\n      }, {\n        title: \"Code\",\n        format: \"code\"\n      }]\n    }, {\n      title: \"Blocks\",\n      items: [{\n        title: \"Paragraph\",\n        format: \"p\"\n      }, {\n        title: \"Blockquote\",\n        format: \"blockquote\"\n      }, {\n        title: \"Div\",\n        format: \"div\"\n      }, {\n        title: \"Pre\",\n        format: \"pre\"\n      }]\n    }, {\n      title: \"Align\",\n      items: [{\n        title: \"Left\",\n        format: \"alignleft\"\n      }, {\n        title: \"Center\",\n        format: \"aligncenter\"\n      }, {\n        title: \"Right\",\n        format: \"alignright\"\n      }, {\n        title: \"Justify\",\n        format: \"alignjustify\"\n      }]\n    }],\n    k1 = function k1(t) {\n      return R(t, function (t, e) {\n        if (Tt(e, \"items\")) {\n          var n = k1(e.items);\n          return {\n            customFormats: t.customFormats.concat(n.customFormats),\n            formats: t.formats.concat([{\n              title: e.title,\n              items: n.formats\n            }])\n          };\n        }\n        if (Tt(e, \"inline\") || Tt(e, \"block\") || Tt(e, \"selector\")) {\n          var o = \"custom-\" + (y(e.name) ? e.name : e.title.toLowerCase());\n          return {\n            customFormats: t.customFormats.concat([{\n              name: o,\n              format: e\n            }]),\n            formats: t.formats.concat([{\n              title: e.title,\n              format: o,\n              icon: e.icon\n            }])\n          };\n        }\n        return _lt(_lt({}, t), {\n          formats: t.formats.concat(e)\n        });\n      }, {\n        customFormats: [],\n        formats: []\n      });\n    },\n    C1 = fS.trim,\n    O1 = wk(\"true\"),\n    _1 = wk(\"false\"),\n    T1 = function T1(t) {\n      var e = B(vs(Mt.fromDom(t), \"h1,h2,h3,h4,h5,h6,a:not([href])\"), function (t) {\n        return t.dom;\n      });\n      return F(B(F(e, _k), Tk).concat(B(F(e, Ck), Ek)), Dk);\n    },\n    E1 = \"tinymce-url-history\",\n    D1 = od,\n    A1 = ed,\n    B1 = rt([Eo(\"shell\", !1), mo(\"makeItem\"), Eo(\"setupItem\", st), Af(\"listBehaviours\", [Rg])]),\n    M1 = rt([Qf({\n      name: \"items\",\n      overrides: function overrides() {\n        return {\n          behaviours: ec([Rg.config({})])\n        };\n      }\n    })]),\n    F1 = Cl({\n      name: rt(\"CustomList\")(),\n      configFields: B1(),\n      partFields: M1(),\n      factory: function factory(s, t, e, n) {\n        var o = s.shell ? {\n          behaviours: [Rg.config({})],\n          components: []\n        } : {\n          behaviours: [],\n          components: t\n        };\n        return {\n          uid: s.uid,\n          dom: s.dom,\n          components: o.components,\n          behaviours: el(s.listBehaviours, o.behaviours),\n          apis: {\n            setItems: function setItems(a, c) {\n              var t;\n              t = a, (s.shell ? vt.some(t) : ml(t, s, \"items\")).fold(function () {\n                throw console.error(\"Custom List was defined to not be a shell, but no item container was specified in components\"), new Error(\"Custom List was defined to not be a shell, but no item container was specified in components\");\n              }, function (e) {\n                var t = Rg.contents(e),\n                  n = c.length,\n                  o = n - t.length,\n                  r = 0 < o ? m(o, function () {\n                    return s.makeItem();\n                  }) : [],\n                  i = t.slice(n);\n                St(i, function (t) {\n                  return Rg.remove(e, t);\n                }), St(r, function (t) {\n                  return Rg.append(e, t);\n                });\n                var u = Rg.contents(e);\n                St(u, function (t, e) {\n                  s.setupItem(a, t, c[e], e);\n                });\n              });\n            }\n          }\n        };\n      },\n      apis: {\n        setItems: function setItems(t, e, n) {\n          t.setItems(e, n);\n        }\n      }\n    }),\n    I1 = rt([mo(\"dom\"), Eo(\"shell\", !0), Zs(\"toolbarBehaviours\", [Rg])]),\n    R1 = rt([Qf({\n      name: \"groups\",\n      overrides: function overrides() {\n        return {\n          behaviours: ec([Rg.config({})])\n        };\n      }\n    })]),\n    N1 = Cl({\n      name: \"Toolbar\",\n      configFields: I1(),\n      partFields: R1(),\n      factory: function factory(o, t, e, n) {\n        var r = o.shell ? {\n          behaviours: [Rg.config({})],\n          components: []\n        } : {\n          behaviours: [],\n          components: t\n        };\n        return {\n          uid: o.uid,\n          dom: o.dom,\n          components: r.components,\n          behaviours: el(o.toolbarBehaviours, r.behaviours),\n          apis: {\n            setGroups: function setGroups(t, e) {\n              var n;\n              n = t, (o.shell ? vt.some(n) : ml(n, o, \"groups\")).fold(function () {\n                throw console.error(\"Toolbar was defined to not be a shell, but no groups container was specified in components\"), new Error(\"Toolbar was defined to not be a shell, but no groups container was specified in components\");\n              }, function (t) {\n                Rg.set(t, e);\n              });\n            }\n          },\n          domModification: {\n            attributes: {\n              role: \"group\"\n            }\n          }\n        };\n      },\n      apis: {\n        setGroups: function setGroups(t, e, n) {\n          t.setGroups(e, n);\n        }\n      }\n    }),\n    P1 = rt([]),\n    V1 = Object.freeze({\n      __proto__: null,\n      setup: st,\n      isDocked: T,\n      getBehaviours: P1\n    }),\n    H1 = Vo([{\n      \"static\": []\n    }, {\n      absolute: [\"positionCss\"]\n    }, {\n      fixed: [\"positionCss\"]\n    }]),\n    L1 = function L1(t, e, n) {\n      var o, r, i, u;\n      t.getSystem().isConnected() && (i = n, u = (r = e).lazyViewport(o = t), i.isDocked() && $k(o, r, i, u), qk(o, u, i).each(function (t) {\n        t.fold(function () {\n          return Kk(o, r, i);\n        }, function (t) {\n          return Jk(o, r, i, t);\n        }, function (t) {\n          $k(o, r, i, u, !0), Jk(o, r, i, t);\n        });\n      }));\n    },\n    z1 = Object.freeze({\n      __proto__: null,\n      refresh: L1,\n      reset: Qk,\n      isDocked: function isDocked(t, e, n) {\n        return n.isDocked();\n      },\n      getModes: function getModes(t, e, n) {\n        return n.getModes();\n      },\n      setModes: function setModes(t, e, n, o) {\n        return n.setModes(o);\n      }\n    }),\n    U1 = Object.freeze({\n      __proto__: null,\n      events: function events(o, r) {\n        return nu([Ar(_i(), function (e, n) {\n          o.contextual.each(function (t) {\n            Kr(e.element, t.transitionClass) && ($r(e.element, [t.transitionClass, t.fadeInClass]), (r.isVisible() ? t.onShown : t.onHidden)(e)), n.stop();\n          });\n        }), Cr(ji(), function (t, e) {\n          L1(t, o, r);\n        }), Cr(Wi(), function (t, e) {\n          Qk(t, o, r);\n        })]);\n      }\n    }),\n    j1 = xa({\n      fields: [To(\"contextual\", [po(\"fadeInClass\"), po(\"fadeOutClass\"), po(\"transitionClass\"), vo(\"lazyContext\"), Ju(\"onShow\"), Ju(\"onShown\"), Ju(\"onHide\"), Ju(\"onHidden\")]), Io(\"lazyViewport\", Fn), Ro(\"modes\", [\"top\", \"bottom\"], er), Ju(\"onDocked\"), Ju(\"onUndocked\")],\n      name: \"docking\",\n      active: U1,\n      apis: z1,\n      state: Object.freeze({\n        __proto__: null,\n        init: function init(t) {\n          var e = Po(!1),\n            n = Po(!0),\n            o = gc(),\n            r = Po(t.modes);\n          return wu({\n            isDocked: e.get,\n            setDocked: e.set,\n            getInitialPos: o.get,\n            setInitialPos: o.set,\n            clearInitialPos: o.clear,\n            isVisible: n.get,\n            setVisible: n.set,\n            getModes: r.get,\n            setModes: r.set,\n            readState: function readState() {\n              return \"docked:  \" + e.get() + \", visible: \" + n.get() + \", modes: \" + r.get().join(\",\");\n            }\n          });\n        }\n      })\n    }),\n    W1 = rt(Ir(\"toolbar-height-change\")),\n    G1 = {\n      fadeInClass: \"tox-editor-dock-fadein\",\n      fadeOutClass: \"tox-editor-dock-fadeout\",\n      transitionClass: \"tox-editor-dock-transition\"\n    },\n    X1 = \"tox-tinymce--toolbar-sticky-on\",\n    Y1 = \"tox-tinymce--toolbar-sticky-off\",\n    q1 = Object.freeze({\n      __proto__: null,\n      setup: function setup(t, e, n) {\n        t.inline || (e.header.isPositionedAtTop() || t.on(\"ResizeEditor\", function () {\n          n().each(j1.reset);\n        }), t.on(\"ResizeWindow ResizeEditor\", function () {\n          n().each(tC);\n        }), t.on(\"SkinLoaded\", function () {\n          n().each(function (t) {\n            j1.isDocked(t) ? j1.reset(t) : j1.refresh(t);\n          });\n        }), t.on(\"FullscreenStateChanged\", function () {\n          n().each(j1.reset);\n        })), t.on(\"AfterScrollIntoView\", function (b) {\n          n().each(function (t) {\n            j1.refresh(t);\n            var e,\n              n,\n              o,\n              r,\n              i,\n              u,\n              a,\n              c,\n              s,\n              l,\n              f,\n              d,\n              m,\n              g,\n              p,\n              h,\n              v = t.element;\n            Pd(v) && (e = b, r = (o = jt(n = v)).dom.defaultView.innerHeight, i = Ie(o), a = He(u = Mt.fromDom(e.elm)), c = xe(u), l = (s = a.y) + c, f = ke(n), d = xe(n), g = (m = f.top) + d, p = Math.abs(m - i.top) < 2, h = Math.abs(g - (i.top + r)) < 2, p && s < g ? Re(i.left, s - d, o) : h && m < l && Re(i.left, s - r + c + d, o));\n          });\n        }), t.on(\"PostRender\", function () {\n          nC(t, !1);\n        });\n      },\n      isDocked: function isDocked(t) {\n        return t().map(j1.isDocked).getOr(!1);\n      },\n      getBehaviours: oC\n    }),\n    K1 = $o([po(\"type\"), go(\"items\", no([Qo([po(\"name\"), xo(\"items\", er)]), er]))].concat(Vp)),\n    J1 = [Co(\"text\"), Co(\"tooltip\"), Co(\"icon\"), vo(\"fetch\"), Io(\"onSetup\", function () {\n      return st;\n    })],\n    $1 = $o(V([po(\"type\")], J1, !0)),\n    Q1 = $o([po(\"type\"), Co(\"tooltip\"), Co(\"icon\"), Co(\"text\"), Oo(\"select\"), vo(\"fetch\"), Io(\"onSetup\", function () {\n      return st;\n    }), Mo(\"presets\", \"normal\", [\"normal\", \"color\", \"listpreview\"]), Eo(\"columns\", 1), vo(\"onAction\"), vo(\"onItemAction\")]),\n    Z1 = kl({\n      factory: function factory(e, o) {\n        var t = {\n          focus: Fg.focusIn,\n          setMenus: function setMenus(t, e) {\n            var n = B(e, function (e) {\n              return G0(rC({\n                type: \"menubutton\",\n                text: e.text,\n                fetch: function fetch(t) {\n                  t(e.getItems());\n                }\n              }).mapError(function (t) {\n                return ur(t);\n              }).getOrDie(), \"tox-mbtn\", o.backstage, vt.some(\"menuitem\"));\n            });\n            Rg.set(t, n);\n          }\n        };\n        return {\n          uid: e.uid,\n          dom: e.dom,\n          components: [],\n          behaviours: ec([Rg.config({}), mm(\"menubar-events\", [ou(function (t) {\n            e.onSetup(t);\n          }), Cr(vi(), function (n, t) {\n            Iu(n.element, \".tox-mbtn--active\").each(function (e) {\n              Ru(t.event.target, \".tox-mbtn\").each(function (t) {\n                zt(e, t) || n.getSystem().getByDom(e).each(function (e) {\n                  n.getSystem().getByDom(t).each(function (t) {\n                    hw.expand(t), hw.close(e), Vg.focus(t);\n                  });\n                });\n              });\n            });\n          }), Cr(Ki(), function (n, t) {\n            t.event.prevFocus.bind(function (t) {\n              return n.getSystem().getByDom(t).toOptional();\n            }).each(function (e) {\n              t.event.newFocus.bind(function (t) {\n                return n.getSystem().getByDom(t).toOptional();\n              }).each(function (t) {\n                hw.isOpen(e) && (hw.expand(t), hw.close(e));\n              });\n            });\n          })]), Fg.config({\n            mode: \"flow\",\n            selector: \".tox-mbtn\",\n            onEscape: function onEscape(t) {\n              return e.onEscape(t), vt.some(!0);\n            }\n          }), py.config({})]),\n          apis: t,\n          domModification: {\n            attributes: {\n              role: \"menubar\"\n            }\n          }\n        };\n      },\n      name: \"silver.Menubar\",\n      configFields: [mo(\"dom\"), mo(\"uid\"), mo(\"onEscape\"), mo(\"backstage\"), Eo(\"onSetup\", st)],\n      apis: {\n        focus: function focus(t, e) {\n          t.focus(e);\n        },\n        setMenus: function setMenus(t, e, n) {\n          t.setMenus(e, n);\n        }\n      }\n    }),\n    tO = Object.freeze({\n      __proto__: null,\n      refresh: function refresh(t, e, n) {\n        var o;\n        n.isExpanded() && (ve(t.element, uC(e)), o = aC(e, t.element), fe(t.element, uC(e), o));\n      },\n      grow: function grow(t, e, n) {\n        n.isExpanded() || mC(t, e, n);\n      },\n      shrink: function shrink(t, e, n) {\n        n.isExpanded() && dC(t, e, n);\n      },\n      immediateShrink: function immediateShrink(t, e, n) {\n        n.isExpanded() && fC(t, e, n);\n      },\n      hasGrown: function hasGrown(t, e, n) {\n        return n.isExpanded();\n      },\n      hasShrunk: function hasShrunk(t, e, n) {\n        return n.isCollapsed();\n      },\n      isGrowing: gC,\n      isShrinking: pC,\n      isTransitioning: function isTransitioning(t, e, n) {\n        return gC(t, e) || pC(t, e);\n      },\n      toggleGrow: function toggleGrow(t, e, n) {\n        (n.isExpanded() ? dC : mC)(t, e, n);\n      },\n      disableTransitions: cC\n    }),\n    eO = Object.freeze({\n      __proto__: null,\n      exhibit: function exhibit(t, e, n) {\n        return zr(e.expanded ? {\n          classes: [e.openClass],\n          styles: {}\n        } : {\n          classes: [e.closedClass],\n          styles: sr(e.dimension.property, \"0px\")\n        });\n      },\n      events: function events(n, o) {\n        return nu([Ar(_i(), function (t, e) {\n          e.event.raw.propertyName === n.dimension.property && (cC(t, n), o.isExpanded() && ve(t.element, n.dimension.property), (o.isExpanded() ? n.onGrown : n.onShrunk)(t));\n        })]);\n      }\n    }),\n    nO = xa({\n      fields: [mo(\"closedClass\"), mo(\"openClass\"), mo(\"shrinkingClass\"), mo(\"growingClass\"), wo(\"getAnimationRoot\"), Ju(\"onShrunk\"), Ju(\"onStartShrink\"), Ju(\"onGrown\"), Ju(\"onStartGrow\"), Eo(\"expanded\", !1), go(\"dimension\", lo(\"property\", {\n        width: [ta(\"property\", \"width\"), ta(\"getDimension\", function (t) {\n          return Ce(t) + \"px\";\n        })],\n        height: [ta(\"property\", \"height\"), ta(\"getDimension\", function (t) {\n          return xe(t) + \"px\";\n        })]\n      }))],\n      name: \"sliding\",\n      active: eO,\n      apis: tO,\n      state: Object.freeze({\n        __proto__: null,\n        init: function init(t) {\n          var e = Po(t.expanded);\n          return wu({\n            isExpanded: function isExpanded() {\n              return !0 === e.get();\n            },\n            isCollapsed: function isCollapsed() {\n              return !1 === e.get();\n            },\n            setCollapsed: C(e.set, !1),\n            setExpanded: C(e.set, !0),\n            readState: function readState() {\n              return \"expanded: \" + e.get();\n            }\n          });\n        }\n      })\n    }),\n    oO = \"container\",\n    rO = [Zs(\"slotBehaviours\", [])],\n    iO = dt({\n      getSlotNames: function getSlotNames(t, e) {\n        return t.getSlotNames(e);\n      },\n      getSlot: function getSlot(t, e, n) {\n        return t.getSlot(e, n);\n      },\n      isShowing: function isShowing(t, e, n) {\n        return t.isShowing(e, n);\n      },\n      hideSlot: function hideSlot(t, e, n) {\n        return t.hideSlot(e, n);\n      },\n      hideAllSlots: function hideAllSlots(t, e) {\n        return t.hideAllSlots(e);\n      },\n      showSlot: function showSlot(t, e, n) {\n        return t.showSlot(e, n);\n      }\n    }, Hr),\n    uO = _lt(_lt({}, iO), {\n      sketch: function sketch(t) {\n        var n,\n          e = {\n            slot: function slot(t, e) {\n              return n.push(t), cl(oO, hC(t), e);\n            },\n            record: rt(n = [])\n          },\n          o = t(e),\n          r = B(e.record(), function (t) {\n            return Jf({\n              name: t,\n              pname: hC(t)\n            });\n          });\n        return Sl(oO, rO, r, $C, o);\n      }\n    }),\n    aO = $o([Co(\"icon\"), Co(\"tooltip\"), Io(\"onShow\", st), Io(\"onHide\", st), Io(\"onSetup\", function () {\n      return st;\n    })]),\n    cO = Ir(\"FixSizeEvent\"),\n    sO = Ir(\"AutoSizeEvent\"),\n    lO = Object.freeze({\n      __proto__: null,\n      block: function block(t, e, n, o) {\n        oe(t.element, \"aria-busy\", !0);\n        var r = e.getRoot(t).getOr(t),\n          i = ec([Fg.config({\n            mode: \"special\",\n            onTab: function onTab() {\n              return vt.some(!0);\n            },\n            onShiftTab: function onShiftTab() {\n              return vt.some(!0);\n            }\n          }), Vg.config({})]),\n          u = o(r, i),\n          a = r.getSystem().build(u);\n        Rg.append(r, Eu(a)), a.hasConfigured(Fg) && e.focus && Fg.focusIn(a), n.isBlocked() || e.onBlock(t), n.blockWith(function () {\n          return Rg.remove(r, a);\n        });\n      },\n      unblock: function unblock(t, e, n) {\n        ce(t.element, \"aria-busy\"), n.isBlocked() && e.onUnblock(t), n.clear();\n      }\n    }),\n    fO = xa({\n      fields: [Io(\"getRoot\", vt.none), Fo(\"focus\", !0), Ju(\"onBlock\"), Ju(\"onUnblock\")],\n      name: \"blocking\",\n      apis: lO,\n      state: Object.freeze({\n        __proto__: null,\n        init: function init() {\n          var e = dc();\n          return wu({\n            readState: e.isSet,\n            blockWith: function blockWith(t) {\n              e.set({\n                destroy: t\n              });\n            },\n            clear: e.clear,\n            isBlocked: e.isSet\n          });\n        }\n      })\n    }),\n    dO = rt([Zs(\"splitToolbarBehaviours\", [$y]), cr(\"builtGroups\", function () {\n      return Po([]);\n    })]),\n    mO = rt([qu([\"overflowToggledClass\"]), Oo(\"getOverflowBounds\"), mo(\"lazySink\"), cr(\"overflowGroups\", function () {\n      return Po([]);\n    })].concat(dO())),\n    gO = rt([Jf({\n      factory: N1,\n      schema: I1(),\n      name: \"primary\"\n    }), $f({\n      schema: I1(),\n      name: \"overflow\"\n    }), $f({\n      name: \"overflow-button\"\n    }), $f({\n      name: \"overflow-group\"\n    })]),\n    pO = rt(function (t, e) {\n      var n = t,\n        o = Math.floor(e);\n      fe(n, \"max-width\", On.max(n, o, [\"margin-left\", \"border-left-width\", \"padding-left\", \"padding-right\", \"border-right-width\", \"margin-right\"]) + \"px\");\n    }),\n    hO = rt([qu([\"toggledClass\"]), mo(\"lazySink\"), vo(\"fetch\"), Oo(\"getBounds\"), To(\"fireDismissalEventInstead\", [Eo(\"event\", Yi())]), Uc()]),\n    vO = rt([$f({\n      name: \"button\",\n      overrides: function overrides(t) {\n        return {\n          dom: {\n            attributes: {\n              \"aria-haspopup\": \"true\"\n            }\n          },\n          buttonBehaviours: ec([zg.config({\n            toggleClass: t.markers.toggledClass,\n            aria: {\n              mode: \"expanded\"\n            },\n            toggleOnExecute: !1\n          })])\n        };\n      }\n    }), $f({\n      factory: N1,\n      schema: I1(),\n      name: \"toolbar\",\n      overrides: function overrides(e) {\n        return {\n          toolbarBehaviours: ec([Fg.config({\n            mode: \"cyclic\",\n            onEscape: function onEscape(t) {\n              return ml(t, e, \"button\").each(Vg.focus), vt.none();\n            }\n          })])\n        };\n      }\n    })]),\n    bO = Cl({\n      name: \"FloatingToolbarButton\",\n      factory: function factory(u, t, a, e) {\n        return _lt(_lt({}, fp.sketch(_lt(_lt({}, e.button()), {\n          action: function action(t) {\n            EC(t, e);\n          },\n          buttonBehaviours: Bf({\n            dump: e.button().buttonBehaviours\n          }, [$y.config({\n            others: {\n              toolbarSandbox: function toolbarSandbox(t) {\n                return o = t, n = a, r = u, {\n                  dom: {\n                    tag: \"div\",\n                    attributes: {\n                      id: (i = Nu()).id\n                    }\n                  },\n                  behaviours: ec([Fg.config({\n                    mode: \"special\",\n                    onEscape: function onEscape(t) {\n                      return bf.close(t), vt.some(!0);\n                    }\n                  }), bf.config({\n                    onOpen: function onOpen(t, e) {\n                      r.fetch().get(function (t) {\n                        AC(o, e, r, n.layouts, t), i.link(o.element), Fg.focusIn(e);\n                      });\n                    },\n                    onClose: function onClose() {\n                      zg.off(o), Vg.focus(o), i.unlink(o.element);\n                    },\n                    isPartOf: function isPartOf(t, e, n) {\n                      return Hu(e, n) || Hu(o, n);\n                    },\n                    getAttachPoint: function getAttachPoint() {\n                      return r.lazySink(o).getOrDie();\n                    }\n                  }), ic.config({\n                    channels: _lt(_lt({}, Xs(_lt({\n                      isExtraPart: T\n                    }, r.fireDismissalEventInstead.map(function (t) {\n                      return {\n                        fireEventInstead: {\n                          event: t.event\n                        }\n                      };\n                    }).getOr({})))), Ys({\n                      doReposition: function doReposition() {\n                        bf.getState($y.getCoupled(o, \"toolbarSandbox\")).each(function (t) {\n                          DC(o, t, r, n.layouts);\n                        });\n                      }\n                    }))\n                  })])\n                };\n                var o, n, r, i;\n              }\n            }\n          })])\n        }))), {\n          apis: {\n            setGroups: function setGroups(e, n) {\n              bf.getState($y.getCoupled(e, \"toolbarSandbox\")).each(function (t) {\n                AC(e, t, u, a.layouts, n);\n              });\n            },\n            reposition: function reposition(e) {\n              bf.getState($y.getCoupled(e, \"toolbarSandbox\")).each(function (t) {\n                DC(e, t, u, a.layouts);\n              });\n            },\n            toggle: function toggle(t) {\n              EC(t, e);\n            },\n            getToolbar: function getToolbar(t) {\n              return bf.getState($y.getCoupled(t, \"toolbarSandbox\"));\n            },\n            isOpen: function isOpen(t) {\n              return bf.isOpen($y.getCoupled(t, \"toolbarSandbox\"));\n            }\n          }\n        });\n      },\n      configFields: hO(),\n      partFields: vO(),\n      apis: {\n        setGroups: function setGroups(t, e, n) {\n          t.setGroups(e, n);\n        },\n        reposition: function reposition(t, e) {\n          t.reposition(e);\n        },\n        toggle: function toggle(t, e) {\n          t.toggle(e);\n        },\n        getToolbar: function getToolbar(t, e) {\n          return t.getToolbar(e);\n        },\n        isOpen: function isOpen(t, e) {\n          return t.isOpen(e);\n        }\n      }\n    }),\n    yO = rt([mo(\"items\"), qu([\"itemSelector\"]), Zs(\"tgroupBehaviours\", [Fg])]),\n    xO = rt([Zf({\n      name: \"items\",\n      unit: \"item\"\n    })]),\n    wO = Cl({\n      name: \"ToolbarGroup\",\n      configFields: yO(),\n      partFields: xO(),\n      factory: function factory(t, e, n, o) {\n        return {\n          uid: t.uid,\n          dom: t.dom,\n          components: e,\n          behaviours: el(t.tgroupBehaviours, [Fg.config({\n            mode: \"flow\",\n            selector: t.markers.itemSelector\n          })]),\n          domModification: {\n            attributes: {\n              role: \"toolbar\"\n            }\n          }\n        };\n      }\n    }),\n    SO = Cl({\n      name: \"SplitFloatingToolbar\",\n      configFields: mO(),\n      partFields: gO(),\n      factory: function factory(n, t, e, o) {\n        var r = Hm(bO.sketch({\n          fetch: function fetch() {\n            return Wy(function (t) {\n              t(BC(n.overflowGroups.get()));\n            });\n          },\n          layouts: {\n            onLtr: function onLtr() {\n              return [Ya, Xa];\n            },\n            onRtl: function onRtl() {\n              return [Xa, Ya];\n            },\n            onBottomLtr: function onBottomLtr() {\n              return [Ka, qa];\n            },\n            onBottomRtl: function onBottomRtl() {\n              return [qa, Ka];\n            }\n          },\n          getBounds: e.getOverflowBounds,\n          lazySink: n.lazySink,\n          fireDismissalEventInstead: {},\n          markers: {\n            toggledClass: n.markers.overflowToggledClass\n          },\n          parts: {\n            button: o[\"overflow-button\"](),\n            toolbar: o.overflow()\n          }\n        }));\n        return {\n          uid: n.uid,\n          dom: n.dom,\n          components: t,\n          behaviours: el(n.splitToolbarBehaviours, [$y.config({\n            others: {\n              overflowGroup: function overflowGroup() {\n                return wO.sketch(_lt(_lt({}, o[\"overflow-group\"]()), {\n                  items: [r.asSpec()]\n                }));\n              }\n            }\n          })]),\n          apis: {\n            setGroups: function setGroups(t, e) {\n              n.builtGroups.set(B(e, t.getSystem().build)), MC(t, r, n);\n            },\n            refresh: function refresh(t) {\n              return MC(t, r, n);\n            },\n            toggle: function toggle(t) {\n              r.getOpt(t).each(function (t) {\n                bO.toggle(t);\n              });\n            },\n            isOpen: function isOpen(t) {\n              return r.getOpt(t).map(bO.isOpen).getOr(!1);\n            },\n            reposition: function reposition(t) {\n              r.getOpt(t).each(function (t) {\n                bO.reposition(t);\n              });\n            },\n            getOverflow: function getOverflow(t) {\n              return r.getOpt(t).bind(bO.getToolbar);\n            }\n          },\n          domModification: {\n            attributes: {\n              role: \"group\"\n            }\n          }\n        };\n      },\n      apis: {\n        setGroups: function setGroups(t, e, n) {\n          t.setGroups(e, n);\n        },\n        refresh: function refresh(t, e) {\n          t.refresh(e);\n        },\n        reposition: function reposition(t, e) {\n          t.reposition(e);\n        },\n        toggle: function toggle(t, e) {\n          t.toggle(e);\n        },\n        isOpen: function isOpen(t, e) {\n          return t.isOpen(e);\n        },\n        getOverflow: function getOverflow(t, e) {\n          return t.getOverflow(e);\n        }\n      }\n    }),\n    kO = rt([qu([\"closedClass\", \"openClass\", \"shrinkingClass\", \"growingClass\", \"overflowToggledClass\"]), Ju(\"onOpened\"), Ju(\"onClosed\")].concat(dO())),\n    CO = rt([Jf({\n      factory: N1,\n      schema: I1(),\n      name: \"primary\"\n    }), Jf({\n      factory: N1,\n      schema: I1(),\n      name: \"overflow\",\n      overrides: function overrides(e) {\n        return {\n          toolbarBehaviours: ec([nO.config({\n            dimension: {\n              property: \"height\"\n            },\n            closedClass: e.markers.closedClass,\n            openClass: e.markers.openClass,\n            shrinkingClass: e.markers.shrinkingClass,\n            growingClass: e.markers.growingClass,\n            onShrunk: function onShrunk(t) {\n              ml(t, e, \"overflow-button\").each(function (t) {\n                zg.off(t), Vg.focus(t);\n              }), e.onClosed(t);\n            },\n            onGrown: function onGrown(t) {\n              Fg.focusIn(t), e.onOpened(t);\n            },\n            onStartGrow: function onStartGrow(t) {\n              ml(t, e, \"overflow-button\").each(zg.on);\n            }\n          }), Fg.config({\n            mode: \"acyclic\",\n            onEscape: function onEscape(t) {\n              return ml(t, e, \"overflow-button\").each(Vg.focus), vt.some(!0);\n            }\n          })])\n        };\n      }\n    }), $f({\n      name: \"overflow-button\",\n      overrides: function overrides(t) {\n        return {\n          buttonBehaviours: ec([zg.config({\n            toggleClass: t.markers.overflowToggledClass,\n            aria: {\n              mode: \"pressed\"\n            },\n            toggleOnExecute: !1\n          })])\n        };\n      }\n    }), $f({\n      name: \"overflow-group\"\n    })]),\n    OO = Cl({\n      name: \"SplitSlidingToolbar\",\n      configFields: kO(),\n      partFields: CO(),\n      factory: function factory(o, t, e, n) {\n        var r = \"alloy.toolbar.toggle\";\n        return {\n          uid: o.uid,\n          dom: o.dom,\n          components: t,\n          behaviours: el(o.splitToolbarBehaviours, [$y.config({\n            others: {\n              overflowGroup: function overflowGroup(e) {\n                return wO.sketch(_lt(_lt({}, n[\"overflow-group\"]()), {\n                  items: [fp.sketch(_lt(_lt({}, n[\"overflow-button\"]()), {\n                    action: function action(t) {\n                      vr(e, r);\n                    }\n                  }))]\n                }));\n              }\n            }\n          }), mm(\"toolbar-toggle-events\", [Cr(r, function (t) {\n            FC(t, o);\n          })])]),\n          apis: {\n            setGroups: function setGroups(t, e) {\n              var n = B(e, t.getSystem().build);\n              o.builtGroups.set(n), QC(t, o);\n            },\n            refresh: function refresh(t) {\n              return QC(t, o);\n            },\n            toggle: function toggle(t) {\n              return FC(t, o);\n            },\n            isOpen: function isOpen(t) {\n              return ml(t, o, \"overflow\").map(nO.hasGrown).getOr(!1);\n            }\n          },\n          domModification: {\n            attributes: {\n              role: \"group\"\n            }\n          }\n        };\n      },\n      apis: {\n        setGroups: function setGroups(t, e, n) {\n          t.setGroups(e, n);\n        },\n        refresh: function refresh(t, e) {\n          t.refresh(e);\n        },\n        toggle: function toggle(t, e) {\n          t.toggle(e);\n        },\n        isOpen: function isOpen(t, e) {\n          return t.isOpen(e);\n        }\n      }\n    }),\n    _O = A1.optional({\n      factory: Z1,\n      name: \"menubar\",\n      schema: [mo(\"backstage\")]\n    }),\n    TO = A1.optional({\n      factory: {\n        sketch: function sketch(t) {\n          return F1.sketch({\n            uid: t.uid,\n            dom: t.dom,\n            listBehaviours: ec([Fg.config({\n              mode: \"acyclic\",\n              selector: \".tox-toolbar\"\n            })]),\n            makeItem: function makeItem() {\n              return VC({\n                type: t.type,\n                uid: Ir(\"multiple-toolbar-item\"),\n                cyclicKeying: !1,\n                initGroups: [],\n                providers: t.providers,\n                onEscape: function onEscape() {\n                  return t.onEscape(), vt.some(!0);\n                }\n              });\n            },\n            setupItem: function setupItem(t, e, n, o) {\n              N1.setGroups(e, n);\n            },\n            shell: !0\n          });\n        }\n      },\n      name: \"multiple-toolbar\",\n      schema: [mo(\"dom\"), mo(\"onEscape\")]\n    }),\n    EO = A1.optional({\n      factory: {\n        sketch: function sketch(t) {\n          return (t.type === bh.sliding ? function (t) {\n            var e = OO.parts.primary({\n                dom: {\n                  tag: \"div\",\n                  classes: [\"tox-toolbar__primary\"]\n                }\n              }),\n              n = OO.parts.overflow({\n                dom: {\n                  tag: \"div\",\n                  classes: [\"tox-toolbar__overflow\"]\n                }\n              }),\n              o = PC(t);\n            return OO.sketch(_lt(_lt({}, o), {\n              components: [e, n],\n              markers: {\n                openClass: \"tox-toolbar__overflow--open\",\n                closedClass: \"tox-toolbar__overflow--closed\",\n                growingClass: \"tox-toolbar__overflow--growing\",\n                shrinkingClass: \"tox-toolbar__overflow--shrinking\",\n                overflowToggledClass: \"tox-tbtn--enabled\"\n              },\n              onOpened: function onOpened(t) {\n                t.getSystem().broadcastOn([W1()], {\n                  type: \"opened\"\n                });\n              },\n              onClosed: function onClosed(t) {\n                t.getSystem().broadcastOn([W1()], {\n                  type: \"closed\"\n                });\n              }\n            }));\n          } : t.type === bh.floating ? function (i) {\n            var t = PC(i),\n              e = SO.parts.primary({\n                dom: {\n                  tag: \"div\",\n                  classes: [\"tox-toolbar__primary\"]\n                }\n              });\n            return SO.sketch(_lt(_lt({}, t), {\n              lazySink: i.getSink,\n              getOverflowBounds: function getOverflowBounds() {\n                var t = i.moreDrawerData.lazyHeader().element,\n                  e = He(t),\n                  n = Gt(t),\n                  o = He(n),\n                  r = Math.max(n.dom.scrollHeight, o.height);\n                return Bn(e.x + 4, o.y, e.width - 8, r);\n              },\n              parts: _lt(_lt({}, t.parts), {\n                overflow: {\n                  dom: {\n                    tag: \"div\",\n                    classes: [\"tox-toolbar__overflow\"],\n                    attributes: i.attributes\n                  }\n                }\n              }),\n              components: [e],\n              markers: {\n                overflowToggledClass: \"tox-tbtn--enabled\"\n              }\n            }));\n          } : VC)({\n            type: t.type,\n            uid: t.uid,\n            onEscape: function onEscape() {\n              return t.onEscape(), vt.some(!0);\n            },\n            cyclicKeying: !1,\n            initGroups: [],\n            getSink: t.getSink,\n            providers: t.providers,\n            moreDrawerData: {\n              lazyToolbar: t.lazyToolbar,\n              lazyMoreButton: t.lazyMoreButton,\n              lazyHeader: t.lazyHeader\n            },\n            attributes: t.attributes\n          });\n        }\n      },\n      name: \"toolbar\",\n      schema: [mo(\"dom\"), mo(\"onEscape\"), mo(\"getSink\")]\n    }),\n    DO = A1.optional({\n      factory: {\n        sketch: function sketch(t) {\n          var e = t.editor,\n            n = t.sticky ? oC : P1;\n          return {\n            uid: t.uid,\n            dom: t.dom,\n            components: t.components,\n            behaviours: ec(n(e, t.sharedBackstage))\n          };\n        }\n      },\n      name: \"header\",\n      schema: [mo(\"dom\")]\n    }),\n    AO = A1.optional({\n      name: \"socket\",\n      schema: [mo(\"dom\")]\n    }),\n    BO = A1.optional({\n      factory: {\n        sketch: function sketch(t) {\n          return {\n            uid: t.uid,\n            dom: {\n              tag: \"div\",\n              classes: [\"tox-sidebar\"],\n              attributes: {\n                role: \"complementary\"\n              }\n            },\n            components: [{\n              dom: {\n                tag: \"div\",\n                classes: [\"tox-sidebar__slider\"]\n              },\n              components: [],\n              behaviours: ec([py.config({}), Vg.config({}), nO.config({\n                dimension: {\n                  property: \"width\"\n                },\n                closedClass: \"tox-sidebar--sliding-closed\",\n                openClass: \"tox-sidebar--sliding-open\",\n                shrinkingClass: \"tox-sidebar--sliding-shrinking\",\n                growingClass: \"tox-sidebar--sliding-growing\",\n                onShrunk: function onShrunk(t) {\n                  cd.getCurrent(t).each(uO.hideAllSlots), vr(t, sO);\n                },\n                onGrown: function onGrown(t) {\n                  vr(t, sO);\n                },\n                onStartGrow: function onStartGrow(t) {\n                  br(t, cO, {\n                    width: pe(t.element, \"width\").getOr(\"\")\n                  });\n                },\n                onStartShrink: function onStartShrink(t) {\n                  br(t, cO, {\n                    width: Ce(t.element) + \"px\"\n                  });\n                }\n              }), Rg.config({}), cd.config({\n                find: function find(t) {\n                  return Y(Rg.contents(t));\n                }\n              })])\n            }],\n            behaviours: ec([cS(0), mm(\"sidebar-sliding-events\", [Cr(cO, function (t, e) {\n              fe(t.element, \"width\", e.event.width);\n            }), Cr(sO, function (t, e) {\n              ve(t.element, \"width\");\n            })])])\n          };\n        }\n      },\n      name: \"sidebar\",\n      schema: [mo(\"dom\")]\n    }),\n    MO = A1.optional({\n      factory: {\n        sketch: function sketch(t) {\n          return {\n            uid: t.uid,\n            dom: {\n              tag: \"div\",\n              attributes: {\n                \"aria-hidden\": \"true\"\n              },\n              classes: [\"tox-throbber\"],\n              styles: {\n                display: \"none\"\n              }\n            },\n            behaviours: ec([Rg.config({}), fO.config({\n              focus: !1\n            }), cd.config({\n              find: function find(t) {\n                return Y(t.components());\n              }\n            })]),\n            components: []\n          };\n        }\n      },\n      name: \"throbber\",\n      schema: [mo(\"dom\")]\n    }),\n    FO = Cl({\n      name: \"OuterContainer\",\n      factory: function factory(n, t, e) {\n        return {\n          uid: n.uid,\n          dom: n.dom,\n          components: t,\n          apis: {\n            getSocket: function getSocket(t) {\n              return D1.getPart(t, n, \"socket\");\n            },\n            setSidebar: function setSidebar(t, e) {\n              D1.getPart(t, n, \"sidebar\").each(function (t) {\n                return bC(t, e);\n              });\n            },\n            toggleSidebar: function toggleSidebar(t, e) {\n              D1.getPart(t, n, \"sidebar\").each(function (t) {\n                var n = e;\n                cd.getCurrent(t).each(function (e) {\n                  cd.getCurrent(e).each(function (t) {\n                    nO.hasGrown(e) ? uO.isShowing(t, n) ? nO.shrink(e) : (uO.hideAllSlots(t), uO.showSlot(t, n)) : (uO.hideAllSlots(t), uO.showSlot(t, n), nO.grow(e));\n                  });\n                });\n              });\n            },\n            whichSidebar: function whichSidebar(t) {\n              return D1.getPart(t, n, \"sidebar\").bind(yC).getOrNull();\n            },\n            getHeader: function getHeader(t) {\n              return D1.getPart(t, n, \"header\");\n            },\n            getToolbar: function getToolbar(t) {\n              return D1.getPart(t, n, \"toolbar\");\n            },\n            setToolbar: function setToolbar(t, e) {\n              D1.getPart(t, n, \"toolbar\").each(function (t) {\n                t.getApis().setGroups(t, e);\n              });\n            },\n            setToolbars: function setToolbars(t, e) {\n              D1.getPart(t, n, \"multiple-toolbar\").each(function (t) {\n                F1.setItems(t, e);\n              });\n            },\n            refreshToolbar: function refreshToolbar(t) {\n              D1.getPart(t, n, \"toolbar\").each(function (t) {\n                return t.getApis().refresh(t);\n              });\n            },\n            toggleToolbarDrawer: function toggleToolbarDrawer(t) {\n              D1.getPart(t, n, \"toolbar\").each(function (e) {\n                var t = e.getApis().toggle;\n                null != t ? vt.some(function (t) {\n                  return t(e);\n                }(t)) : vt.none();\n              });\n            },\n            isToolbarDrawerToggled: function isToolbarDrawerToggled(t) {\n              return D1.getPart(t, n, \"toolbar\").bind(function (e) {\n                return vt.from(e.getApis().isOpen).map(function (t) {\n                  return t(e);\n                });\n              }).getOr(!1);\n            },\n            getThrobber: function getThrobber(t) {\n              return D1.getPart(t, n, \"throbber\");\n            },\n            focusToolbar: function focusToolbar(t) {\n              D1.getPart(t, n, \"toolbar\").orThunk(function () {\n                return D1.getPart(t, n, \"multiple-toolbar\");\n              }).each(function (t) {\n                Fg.focusIn(t);\n              });\n            },\n            setMenubar: function setMenubar(t, e) {\n              D1.getPart(t, n, \"menubar\").each(function (t) {\n                Z1.setMenus(t, e);\n              });\n            },\n            focusMenubar: function focusMenubar(t) {\n              D1.getPart(t, n, \"menubar\").each(function (t) {\n                Z1.focus(t);\n              });\n            }\n          },\n          behaviours: n.behaviours\n        };\n      },\n      configFields: [mo(\"dom\"), mo(\"behaviours\")],\n      partFields: [DO, _O, EO, TO, AO, BO, MO],\n      apis: {\n        getSocket: function getSocket(t, e) {\n          return t.getSocket(e);\n        },\n        setSidebar: function setSidebar(t, e, n) {\n          t.setSidebar(e, n);\n        },\n        toggleSidebar: function toggleSidebar(t, e, n) {\n          t.toggleSidebar(e, n);\n        },\n        whichSidebar: function whichSidebar(t, e) {\n          return t.whichSidebar(e);\n        },\n        getHeader: function getHeader(t, e) {\n          return t.getHeader(e);\n        },\n        getToolbar: function getToolbar(t, e) {\n          return t.getToolbar(e);\n        },\n        setToolbar: function setToolbar(t, e, n) {\n          var o = B(n, RC);\n          t.setToolbar(e, o);\n        },\n        setToolbars: function setToolbars(t, e, n) {\n          var o = B(n, function (t) {\n            return B(t, RC);\n          });\n          t.setToolbars(e, o);\n        },\n        refreshToolbar: function refreshToolbar(t, e) {\n          return t.refreshToolbar(e);\n        },\n        toggleToolbarDrawer: function toggleToolbarDrawer(t, e) {\n          t.toggleToolbarDrawer(e);\n        },\n        isToolbarDrawerToggled: function isToolbarDrawerToggled(t, e) {\n          return t.isToolbarDrawerToggled(e);\n        },\n        getThrobber: function getThrobber(t, e) {\n          return t.getThrobber(e);\n        },\n        setMenubar: function setMenubar(t, e, n) {\n          t.setMenubar(e, n);\n        },\n        focusMenubar: function focusMenubar(t, e) {\n          t.focusMenubar(e);\n        },\n        focusToolbar: function focusToolbar(t, e) {\n          t.focusToolbar(e);\n        }\n      }\n    }),\n    IO = {\n      file: {\n        title: \"File\",\n        items: \"newdocument restoredraft | preview | export print | deleteallconversations\"\n      },\n      edit: {\n        title: \"Edit\",\n        items: \"undo redo | cut copy paste pastetext | selectall | searchreplace\"\n      },\n      view: {\n        title: \"View\",\n        items: \"code | visualaid visualchars visualblocks | spellchecker | preview fullscreen | showcomments\"\n      },\n      insert: {\n        title: \"Insert\",\n        items: \"image link media addcomment pageembed template codesample inserttable | charmap emoticons hr | pagebreak nonbreaking anchor toc | insertdatetime\"\n      },\n      format: {\n        title: \"Format\",\n        items: \"bold italic underline strikethrough superscript subscript codeformat | formats blockformats fontformats fontsizes align lineheight | forecolor backcolor | language | removeformat\"\n      },\n      tools: {\n        title: \"Tools\",\n        items: \"spellchecker spellcheckerlanguage | a11ycheck code wordcount\"\n      },\n      table: {\n        title: \"Table\",\n        items: \"inserttable | cell row column | advtablesort | tableprops deletetable\"\n      },\n      help: {\n        title: \"Help\",\n        items: \"help\"\n      }\n    },\n    RO = C(jC, !1),\n    NO = C(jC, !0);\n  function PO(t, e, n, o) {\n    var r;\n    return {\n      type: \"basic\",\n      data: (r = t.getParam(e, n, \"string\"), B(o === t1.SemiColon ? r.replace(/;$/, \"\").split(\";\") : r.split(\" \"), function (t) {\n        var e = t,\n          n = t,\n          o = t.split(\"=\");\n        return 1 < o.length && (e = o[0], n = o[1]), {\n          title: e,\n          format: n\n        };\n      }))\n    };\n  }\n  function VO(n) {\n    var t = {\n      type: \"basic\",\n      data: v_\n    };\n    return {\n      tooltip: \"Align\",\n      text: vt.none(),\n      icon: vt.some(\"align-left\"),\n      isSelectedFor: function isSelectedFor(t) {\n        return function () {\n          return n.formatter.match(t);\n        };\n      },\n      getCurrentValue: vt.none,\n      getPreviewFor: function getPreviewFor(t) {\n        return vt.none;\n      },\n      onAction: function onAction(e) {\n        return function () {\n          return N(v_, function (t) {\n            return t.format === e.format;\n          }).each(function (t) {\n            return n.execCommand(t.command);\n          });\n        };\n      },\n      updateText: function updateText(t) {\n        var e = N(v_, function (t) {\n          return n.formatter.match(t.format);\n        }).fold(rt(\"left\"), function (t) {\n          return t.title.toLowerCase();\n        });\n        br(t, PS, {\n          icon: \"align-\" + e\n        });\n      },\n      dataset: t,\n      shouldHide: !1,\n      isInvalid: function isInvalid(t) {\n        return !n.formatter.canApply(t.format);\n      }\n    };\n  }\n  function HO(t) {\n    return B(t.split(/\\s*,\\s*/), function (t) {\n      return t.replace(/^['\"]+|['\"]+$/g, \"\");\n    });\n  }\n  function LO(r) {\n    function i() {\n      function n(t) {\n        return t ? HO(t)[0] : \"\";\n      }\n      var t = r.queryCommandValue(\"FontName\"),\n        e = a.data,\n        o = t ? t.toLowerCase() : \"\";\n      return {\n        matchOpt: N(e, function (t) {\n          var e = t.format;\n          return e.toLowerCase() === o || n(e).toLowerCase() === n(o).toLowerCase();\n        }).orThunk(function () {\n          return ot(0 === (t = o).indexOf(\"-apple-system\") && (e = HO(t.toLowerCase()), L(b_, function (t) {\n            return -1 < e.indexOf(t.toLowerCase());\n          })), {\n            title: u,\n            format: o\n          });\n          var t, e;\n        }),\n        font: t\n      };\n    }\n    var u = \"System Font\",\n      a = PO(r, \"font_formats\", \"Andale Mono=andale mono,monospace;Arial=arial,helvetica,sans-serif;Arial Black=arial black,sans-serif;Book Antiqua=book antiqua,palatino,serif;Comic Sans MS=comic sans ms,sans-serif;Courier New=courier new,courier,monospace;Georgia=georgia,palatino,serif;Helvetica=helvetica,arial,sans-serif;Impact=impact,sans-serif;Symbol=symbol;Tahoma=tahoma,arial,helvetica,sans-serif;Terminal=terminal,monaco,monospace;Times New Roman=times new roman,times,serif;Trebuchet MS=trebuchet ms,geneva,sans-serif;Verdana=verdana,geneva,sans-serif;Webdings=webdings;Wingdings=wingdings,zapf dingbats\", t1.SemiColon);\n    return {\n      tooltip: \"Fonts\",\n      text: vt.some(u),\n      icon: vt.none(),\n      isSelectedFor: function isSelectedFor(e) {\n        return function (t) {\n          return t.exists(function (t) {\n            return t.format === e;\n          });\n        };\n      },\n      getCurrentValue: function getCurrentValue() {\n        return i().matchOpt;\n      },\n      getPreviewFor: function getPreviewFor(t) {\n        return function () {\n          return vt.some({\n            tag: \"div\",\n            styles: -1 === t.indexOf(\"dings\") ? {\n              \"font-family\": t\n            } : {}\n          });\n        };\n      },\n      onAction: function onAction(t) {\n        return function () {\n          r.undoManager.transact(function () {\n            r.focus(), r.execCommand(\"FontName\", !1, t.format);\n          });\n        };\n      },\n      updateText: function updateText(t) {\n        var e = i(),\n          n = e.matchOpt,\n          o = e.font,\n          r = n.fold(rt(o), function (t) {\n            return t.title;\n          });\n        br(t, NS, {\n          text: r\n        });\n      },\n      dataset: a,\n      shouldHide: !1,\n      isInvalid: T\n    };\n  }\n  function zO(n) {\n    function i() {\n      var a = vt.none(),\n        c = o.data,\n        s = n.queryCommandValue(\"FontSize\");\n      if (s) for (var t = function t(_t3) {\n          var e,\n            n,\n            o,\n            r,\n            i = (n = _t3, /[0-9.]+px$/.test(e = s) ? (o = 72 * parseInt(e, 10) / 96, r = Math.pow(10, n || 0), Math.round(o * r) / r + \"pt\") : tt(x_, e).getOr(e)),\n            u = tt(y_, i).getOr(\"\");\n          a = N(c, function (t) {\n            return t.format === s || t.format === i || t.format === u;\n          });\n        }, e = 3; a.isNone() && 0 <= e; e--) t(e);\n      return {\n        matchOpt: a,\n        size: s\n      };\n    }\n    var t = rt(vt.none),\n      o = PO(n, \"fontsize_formats\", \"8pt 10pt 12pt 14pt 18pt 24pt 36pt\", t1.Space);\n    return {\n      tooltip: \"Font sizes\",\n      text: vt.some(\"12pt\"),\n      icon: vt.none(),\n      isSelectedFor: function isSelectedFor(e) {\n        return function (t) {\n          return t.exists(function (t) {\n            return t.format === e;\n          });\n        };\n      },\n      getPreviewFor: t,\n      getCurrentValue: function getCurrentValue() {\n        return i().matchOpt;\n      },\n      onAction: function onAction(t) {\n        return function () {\n          n.undoManager.transact(function () {\n            n.focus(), n.execCommand(\"FontSize\", !1, t.format);\n          });\n        };\n      },\n      updateText: function updateText(t) {\n        var e = i(),\n          n = e.matchOpt,\n          o = e.size,\n          r = n.fold(rt(o), function (t) {\n            return t.title;\n          });\n        br(t, NS, {\n          text: r\n        });\n      },\n      dataset: o,\n      shouldHide: !1,\n      isInvalid: T\n    };\n  }\n  function UO(t, e) {\n    var n = e(),\n      o = B(n, function (t) {\n        return t.format;\n      });\n    return vt.from(t.formatter.closest(o)).bind(function (e) {\n      return N(n, function (t) {\n        return t.format === e;\n      });\n    }).orThunk(function () {\n      return ot(t.formatter.match(\"p\"), {\n        title: \"Paragraph\",\n        format: \"p\"\n      });\n    });\n  }\n  function jO(n) {\n    var o = PO(n, \"block_formats\", \"Paragraph=p;Heading 1=h1;Heading 2=h2;Heading 3=h3;Heading 4=h4;Heading 5=h5;Heading 6=h6;Preformatted=pre\", t1.SemiColon);\n    return {\n      tooltip: \"Blocks\",\n      text: vt.some(\"Paragraph\"),\n      icon: vt.none(),\n      isSelectedFor: function isSelectedFor(t) {\n        return function () {\n          return n.formatter.match(t);\n        };\n      },\n      getCurrentValue: vt.none,\n      getPreviewFor: function getPreviewFor(e) {\n        return function () {\n          var t = n.formatter.get(e);\n          return vt.some({\n            tag: 0 < t.length && (t[0].inline || t[0].block) || \"div\",\n            styles: n.dom.parseStyle(n.formatter.getCssText(e))\n          });\n        };\n      },\n      onAction: XC(n),\n      updateText: function updateText(t) {\n        var e = UO(n, function () {\n          return o.data;\n        }).fold(rt(\"Paragraph\"), function (t) {\n          return t.title;\n        });\n        br(t, NS, {\n          text: e\n        });\n      },\n      dataset: o,\n      shouldHide: !1,\n      isInvalid: function isInvalid(t) {\n        return !n.formatter.canApply(t.format);\n      }\n    };\n  }\n  function WO(r, t) {\n    return {\n      tooltip: \"Formats\",\n      text: vt.some(\"Paragraph\"),\n      icon: vt.none(),\n      isSelectedFor: function isSelectedFor(t) {\n        return function () {\n          return r.formatter.match(t);\n        };\n      },\n      getCurrentValue: vt.none,\n      getPreviewFor: function getPreviewFor(e) {\n        return function () {\n          var t = r.formatter.get(e);\n          return void 0 !== t ? vt.some({\n            tag: 0 < t.length && (t[0].inline || t[0].block) || \"div\",\n            styles: r.dom.parseStyle(r.formatter.getCssText(e))\n          }) : vt.none();\n        };\n      },\n      onAction: XC(r),\n      updateText: function updateText(t) {\n        var n = function n(t) {\n            var e = t.items;\n            return void 0 !== e && 0 < e.length ? H(e, n) : [{\n              title: t.title,\n              format: t.format\n            }];\n          },\n          e = H(bk(r), n),\n          o = UO(r, rt(e)).fold(rt(\"Paragraph\"), function (t) {\n            return t.title;\n          });\n        br(t, NS, {\n          text: o\n        });\n      },\n      shouldHide: r.getParam(\"style_formats_autohide\", !1, \"boolean\"),\n      isInvalid: function isInvalid(t) {\n        return !r.formatter.canApply(t.format);\n      },\n      dataset: t\n    };\n  }\n  function GO(e) {\n    return {\n      isDisabled: function isDisabled() {\n        return gd.isDisabled(e);\n      },\n      setDisabled: function setDisabled(t) {\n        return gd.set(e, t);\n      }\n    };\n  }\n  function XO(e) {\n    return {\n      setActive: function setActive(t) {\n        zg.set(e, t);\n      },\n      isActive: function isActive() {\n        return zg.isOn(e);\n      },\n      isDisabled: function isDisabled() {\n        return gd.isDisabled(e);\n      },\n      setDisabled: function setDisabled(t) {\n        return gd.set(e, t);\n      }\n    };\n  }\n  function YO(t, e) {\n    return t.map(function (t) {\n      return {\n        \"aria-label\": e.translate(t),\n        title: e.translate(t)\n      };\n    }).getOr({});\n  }\n  function qO(e, n, t, o, r, i) {\n    var u;\n    return {\n      dom: {\n        tag: \"button\",\n        classes: [\"tox-tbtn\"].concat(n.isSome() ? [\"tox-tbtn--select\"] : []),\n        attributes: YO(t, i)\n      },\n      components: tb([e.map(function (t) {\n        return V0(t, i.icons);\n      }), n.map(function (t) {\n        return L0(t, \"tox-tbtn\", i);\n      })]),\n      eventOrder: ((u = {})[mi()] = [\"focusing\", \"alloy.base.behaviour\", \"common-button-display-events\"], u),\n      buttonBehaviours: ec([Qv(i.isDisabled), pv(), mm(\"common-button-display-events\", [Cr(mi(), function (t, e) {\n        e.event.prevent(), vr(t, T_);\n      })])].concat(o.map(function (t) {\n        return k_.config({\n          channel: t,\n          initialData: {\n            icon: e,\n            text: n\n          },\n          renderComponents: function renderComponents(t, e) {\n            return tb([t.icon.map(function (t) {\n              return V0(t, i.icons);\n            }), t.text.map(function (t) {\n              return L0(t, \"tox-tbtn\", i);\n            })]);\n          }\n        });\n      }).toArray()).concat(r.getOr([])))\n    };\n  }\n  function KO(t, e, n) {\n    var o,\n      r = Po(st),\n      i = qO(t.icon, t.text, t.tooltip, vt.none(), vt.none(), n);\n    return fp.sketch({\n      dom: i.dom,\n      components: i.components,\n      eventOrder: RS,\n      buttonBehaviours: ec([mm(\"toolbar-button-events\", [(o = {\n        onAction: t.onAction,\n        getApi: e.getApi\n      }, uu(function (e, t) {\n        hv(o, e)(function (t) {\n          br(e, IS, {\n            buttonApi: t\n          }), o.onAction(t);\n        });\n      })), vv(e, r), bv(e, r)]), Qv(function () {\n        return t.disabled || n.isDisabled();\n      }), pv()].concat(e.toolbarButtonBehaviours))\n    });\n  }\n  function JO(r, i) {\n    return function (t, e, n) {\n      var o = r(t).mapError(function (t) {\n        return ur(t);\n      }).getOrDie();\n      return i(o, e, n);\n    };\n  }\n  function $O(n, t, o, r) {\n    var e,\n      i = t.outerContainer,\n      u = o.toolbar,\n      a = o.buttons;\n    f(u, y) ? (e = u.map(function (t) {\n      var e = {\n        toolbar: t,\n        buttons: a,\n        allowToolbarGroups: o.allowToolbarGroups\n      };\n      return F_(n, e, {\n        backstage: r\n      }, vt.none());\n    }), FO.setToolbars(i, e)) : FO.setToolbar(i, F_(n, o, {\n      backstage: r\n    }, vt.none()));\n  }\n  function QO(t) {\n    return /^[0-9\\.]+(|px)$/i.test(\"\" + t) ? vt.some(parseInt(\"\" + t, 10)) : vt.none();\n  }\n  function ZO(t) {\n    return u(t) ? t + \"px\" : t;\n  }\n  function t_(e, t, n) {\n    var o = t.filter(function (t) {\n        return e < t;\n      }),\n      r = n.filter(function (t) {\n        return t < e;\n      });\n    return o.or(r).getOr(e);\n  }\n  function e_(t) {\n    var e = lh(t),\n      n = fh(t),\n      o = mh(t);\n    return QO(e).map(function (t) {\n      return t_(t, n, o);\n    });\n  }\n  function n_(u, a, t, e, c) {\n    function s() {\n      return x.get() && !u.removed;\n    }\n    function l(t) {\n      return y ? t.fold(rt(0), function (t) {\n        return 1 < t.components().length ? xe(t.components()[1].element) : 0;\n      }) : 0;\n    }\n    function f() {\n      r.broadcastOn([xf()], {});\n    }\n    function o(t) {\n      var e, n, o, r, i;\n      void 0 === t && (t = !1), s() && (m || (e = p.getOrThunk(function () {\n        var t = QO(ge(bn(), \"margin-left\")).getOr(0);\n        return Ce(bn()) - ke(a).left + t;\n      }), fe(c.get().element, \"max-width\", e + \"px\")), y && FO.refreshToolbar(d), m || (n = l(FO.getToolbar(d)), o = Mn(a), r = v() ? Math.max(o.y - xe(c.get().element) + n, 0) : o.bottom, de(d.element, {\n        position: \"absolute\",\n        top: Math.round(r) + \"px\",\n        left: Math.round(o.x) + \"px\"\n      })), g && (i = c.get(), t ? j1.reset(i) : j1.refresh(i)), f());\n    }\n    function n(t) {\n      var e, n;\n      void 0 === t && (t = !0), !m && g && s() && (e = h.getDockingMode(), (n = function (t) {\n        switch (uv(u)) {\n          case xh.auto:\n            var e = l(FO.getToolbar(d)),\n              n = xe(t.element) - e,\n              o = Mn(a);\n            if (o.y > n) return \"top\";\n            var r = Gt(a),\n              i = Math.max(r.dom.scrollHeight, xe(r));\n            return o.bottom < i - n || Fn().bottom < o.bottom - n ? \"bottom\" : \"top\";\n          case xh.bottom:\n            return \"bottom\";\n          default:\n            return xh.top, \"top\";\n        }\n      }(c.get())) !== e && (function (t) {\n        var e = c.get();\n        j1.setModes(e, [t]), h.setDockingMode(t);\n        var n = v() ? Oc.TopToBottom : Oc.BottomToTop;\n        oe(e.element, ns, n);\n      }(n), t && o(!0)));\n    }\n    var r = t.uiMothership,\n      d = t.outerContainer,\n      i = nv.DOM,\n      m = sv(u),\n      g = dv(u),\n      p = mh(u).or(e_(u)),\n      h = e.shared.header,\n      v = h.isPositionedAtTop,\n      b = iv(u),\n      y = b === bh.sliding || b === bh.floating,\n      x = Po(!1);\n    return {\n      isVisible: s,\n      isPositionedAtTop: v,\n      show: function show() {\n        x.set(!0), fe(d.element, \"display\", \"flex\"), i.addClass(u.getBody(), \"mce-edit-focus\"), ve(r.element, \"display\"), n(!1), o();\n      },\n      hide: function hide() {\n        x.set(!1), t.outerContainer && (fe(d.element, \"display\", \"none\"), i.removeClass(u.getBody(), \"mce-edit-focus\")), fe(r.element, \"display\", \"none\");\n      },\n      update: o,\n      updateMode: n,\n      repositionPopups: f\n    };\n  }\n  function o_(t, e) {\n    var n = Mn(t);\n    return {\n      pos: e ? n.y : n.bottom,\n      bounds: n\n    };\n  }\n  function r_(i, u) {\n    return Cr(IS, function (t, e) {\n      var n,\n        o = i.get(t),\n        r = (n = o, {\n          hide: function hide() {\n            return vr(n, Vi());\n          },\n          getValue: function getValue() {\n            return Df.getValue(n);\n          }\n        });\n      u.onAction(r, e.event.buttonApi);\n    });\n  }\n  function i_(t, e, n) {\n    return e.bottom - t.y >= (n = void 0 === n ? .01 : n) && t.bottom - e.y >= n;\n  }\n  function u_(t) {\n    var e = function (t) {\n      var e = t.getBoundingClientRect();\n      if (e.height <= 0 && e.width <= 0) {\n        var n = Qt(Mt.fromDom(t.startContainer), t.startOffset).element;\n        return (Xe(n) ? Yt(n) : vt.some(n)).filter(Ge).map(function (t) {\n          return t.dom.getBoundingClientRect();\n        }).getOr(e);\n      }\n      return e;\n    }(t.selection.getRng());\n    if (t.inline) {\n      var n = Ie();\n      return Bn(n.left + e.left, n.top + e.top, e.width, e.height);\n    }\n    var o = He(Mt.fromDom(t.getBody()));\n    return Bn(o.x + e.left, o.y + e.top, e.width, e.height);\n  }\n  function a_(t, e, n, o) {\n    void 0 === o && (o = 0);\n    var r,\n      i,\n      u,\n      a,\n      c = Pe(window),\n      s = Mn(Mt.fromDom(t.getContentAreaContainer())),\n      l = ph(t) || hh(t) || rv(t),\n      f = (r = s, i = c, u = o, {\n        x: a = Math.max(r.x + u, i.x),\n        width: Math.min(r.right - u, i.right) - a\n      }),\n      d = f.x,\n      m = f.width;\n    if (t.inline && !l) return Bn(d, c.y, m, c.height);\n    var g = function (t, e, n, o, r, i) {\n        var u = Mt.fromDom(t.getContainer()),\n          a = Iu(u, \".tox-editor-header\").getOr(u),\n          c = Mn(a),\n          s = c.y >= e.bottom,\n          l = o && !s;\n        if (t.inline && l) return {\n          y: Math.max(c.bottom + i, n.y),\n          bottom: n.bottom\n        };\n        if (t.inline && !l) return {\n          y: n.y,\n          bottom: Math.min(c.y - i, n.bottom)\n        };\n        var f = \"line\" === r ? Mn(u) : e;\n        return l ? {\n          y: Math.max(c.bottom + i, n.y),\n          bottom: Math.min(f.bottom - i, n.bottom)\n        } : {\n          y: Math.max(f.y + i, n.y),\n          bottom: Math.min(c.y - i, n.bottom)\n        };\n      }(t, s, c, e.header.isPositionedAtTop(), n, o),\n      p = g.y,\n      h = g.bottom;\n    return Bn(d, p, m, h - p);\n  }\n  function c_(t) {\n    return \"node\" === t;\n  }\n  function s_(t, r, e, i, n) {\n    var u = u_(t),\n      o = i.lastElement().exists(function (t) {\n        return zt(e, t);\n      }),\n      a = e,\n      c = t.selection.getRng(),\n      s = Qt(Mt.fromDom(c.startContainer), c.startOffset);\n    return c.startContainer === c.endContainer && c.startOffset === c.endOffset - 1 && zt(s.element, a) ? o ? Nm : cp : o ? function (e, t) {\n      var n = pe(e, \"position\");\n      fe(e, \"position\", t);\n      var o = i_(u, Mn(r)) && !i.isReposition() ? Vm : Nm;\n      return n.each(function (t) {\n        return fe(e, \"position\", t);\n      }), o;\n    }(r, i.getMode()) : (\"fixed\" === i.getMode() ? n.y + Ie().top : n.y) + (xe(r) + 12) <= u.y ? cp : sp;\n  }\n  function l_(e, t) {\n    var n = M(F(t, function (t) {\n      return t.predicate(e.dom);\n    }), function (t) {\n      return \"contexttoolbar\" === t.type;\n    });\n    return {\n      contextToolbars: n.pass,\n      contextForms: n.fail\n    };\n  }\n  function f_(n, t) {\n    function o(t) {\n      return zt(t, r);\n    }\n    var e,\n      r = Mt.fromDom(t.getBody()),\n      i = Mt.fromDom(t.selection.getNode());\n    return o(e = i) || Ut(r, e) ? function (t, e, n) {\n      var o = l_(t, e);\n      if (0 < o.contextForms.length) return vt.some({\n        elem: t,\n        toolbars: [o.contextForms[0]]\n      });\n      var r = l_(t, n);\n      if (0 < r.contextForms.length) return vt.some({\n        elem: t,\n        toolbars: [r.contextForms[0]]\n      });\n      if (0 < o.contextToolbars.length || 0 < r.contextToolbars.length) {\n        var i = function (t) {\n          if (t.length <= 1) return t;\n          function e(e) {\n            return d(t, function (t) {\n              return t.position === e;\n            });\n          }\n          function n(e) {\n            return F(t, function (t) {\n              return t.position === e;\n            });\n          }\n          var o = e(\"selection\"),\n            r = e(\"node\");\n          if (o || r) {\n            if (r && o) {\n              var i = n(\"node\"),\n                u = B(n(\"selection\"), function (t) {\n                  return _lt(_lt({}, t), {\n                    position: \"node\"\n                  });\n                });\n              return i.concat(u);\n            }\n            return n(o ? \"selection\" : \"node\");\n          }\n          return n(\"line\");\n        }(o.contextToolbars.concat(r.contextToolbars));\n        return vt.some({\n          elem: t,\n          toolbars: i\n        });\n      }\n      return vt.none();\n    }(i, n.inNodeScope, n.inEditorScope).orThunk(function () {\n      return a = n, (t = o)(e = i) ? vt.none() : dr(e, function (t) {\n        if (Ge(t)) {\n          var e = l_(t, a.inNodeScope),\n            n = e.contextToolbars,\n            o = e.contextForms,\n            r = 0 < o.length ? o : (u = n).length <= 1 ? u : i(\"selection\").orThunk(function () {\n              return i(\"node\");\n            }).orThunk(function () {\n              return i(\"line\");\n            }).map(function (t) {\n              return t.position;\n            }).fold(function () {\n              return [];\n            }, function (e) {\n              return F(u, function (t) {\n                return t.position === e;\n              });\n            });\n          return 0 < r.length ? vt.some({\n            elem: t,\n            toolbars: r\n          }) : vt.none();\n        }\n        function i(e) {\n          return N(u, function (t) {\n            return t.position === e;\n          });\n        }\n        var u;\n        return vt.none();\n      }, t);\n      var t, e, a;\n    }) : vt.none();\n  }\n  function d_(a, c) {\n    var s = {},\n      l = [],\n      f = [],\n      d = {},\n      m = {},\n      t = Ct(a);\n    return St(t, function (t) {\n      var e,\n        n,\n        o,\n        r,\n        i,\n        u = a[t];\n      \"contextform\" === u.type ? (o = t, i = co(ao(\"ContextForm\", qp, r = u)), (s[o] = i).launch.map(function (t) {\n        d[\"form:\" + o] = _lt(_lt({}, r.launch), {\n          type: \"contextformtogglebutton\" === t.type ? \"togglebutton\" : \"button\",\n          onAction: function onAction() {\n            c(i);\n          }\n        });\n      }), (\"editor\" === i.scope ? f : l).push(i), m[o] = i) : \"contexttoolbar\" === u.type && (e = t, ao(\"ContextToolbar\", Kp, n = u).each(function (t) {\n        (\"editor\" === n.scope ? f : l).push(t), m[e] = t;\n      }));\n    }), {\n      forms: s,\n      inNodeScope: l,\n      inEditorScope: f,\n      lookupTable: m,\n      formNavigators: d\n    };\n  }\n  function m_(d, t, m, u) {\n    function a() {\n      var t = y.get().getOr(\"node\"),\n        e = c_(t) ? 1 : 0;\n      return a_(d, p, t, e);\n    }\n    function c() {\n      return !(d.removed || h() && g.isContextMenuOpen());\n    }\n    function s() {\n      if (c()) {\n        var t = a(),\n          e = mt(y.get(), \"node\") ? (n = d, v.get().filter(vn).map(He).getOrThunk(function () {\n            return u_(n);\n          })) : u_(d);\n        return t.height <= 0 || !i_(e, t);\n      }\n      return 1;\n      var n;\n    }\n    function e() {\n      v.clear(), b.clear(), y.clear(), up.hide(x);\n    }\n    function n() {\n      var t;\n      up.isOpen(x) && (ve(t = x.element, \"display\"), s() ? fe(t, \"display\", \"none\") : (b.set(0), up.reposition(x)));\n    }\n    function l(t) {\n      return {\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-pop__dialog\"]\n        },\n        components: [t],\n        behaviours: ec([Fg.config({\n          mode: \"acyclic\"\n        }), mm(\"pop-dialog-wrap-events\", [ou(function (t) {\n          d.shortcuts.add(\"ctrl+F9\", \"focus statusbar\", function () {\n            return Fg.focusIn(t);\n          });\n        }), ru(function (t) {\n          d.shortcuts.remove(\"ctrl+F9\");\n        })])])\n      };\n    }\n    function f(t, e) {\n      var n,\n        o,\n        r,\n        i,\n        c,\n        s,\n        u,\n        a = \"node\" === t ? p.anchors.node(e) : p.anchors.cursor(),\n        l = (n = d, o = t, r = h(), i = {\n          lastElement: v.get,\n          isReposition: function isReposition() {\n            return mt(b.get(), 0);\n          },\n          getMode: function getMode() {\n            return ff.getMode(m);\n          }\n        }, \"line\" === o ? {\n          bubble: Sc(12, 0, L_),\n          layouts: {\n            onLtr: function onLtr() {\n              return [la];\n            },\n            onRtl: function onRtl() {\n              return [fa];\n            }\n          },\n          overrides: z_\n        } : {\n          bubble: Sc(0, 12, L_, 1 / 12),\n          layouts: (c = n, s = i, u = o, r ? {\n            onLtr: function onLtr(t) {\n              return [$a, Xa, Ya, qa, Ka, Ja].concat(f(t));\n            },\n            onRtl: function onRtl(t) {\n              return [$a, Ya, Xa, Ka, qa, Ja].concat(f(t));\n            }\n          } : {\n            onLtr: function onLtr(t) {\n              return [Ja, $a, qa, Xa, Ka, Ya].concat(f(t));\n            },\n            onRtl: function onRtl(t) {\n              return [Ja, $a, Ka, Ya, qa, Xa].concat(f(t));\n            }\n          }),\n          overrides: z_\n        });\n      function f(t) {\n        return c_(u) ? [(a = t, function (t, e, n, o, r) {\n          var i = s_(c, o, a, s, r),\n            u = _lt(_lt({}, t), {\n              y: r.y,\n              height: r.height\n            });\n          return _lt(_lt({}, i(u, e, n, o, r)), {\n            alwaysFit: !0\n          });\n        })] : [];\n        var a;\n      }\n      return Yo(a, l);\n    }\n    function o(t, e) {\n      var n, o, r, i;\n      k.cancel(), c() && (n = S(t), r = f(o = t[0].position, e), y.set(o), b.set(1), ve(i = x.element, \"display\"), mt(Et(e, v.get(), zt), !0) || (qr(i, X_), ff.reset(m, x)), up.showWithinBounds(x, l(n), {\n        anchor: r,\n        transition: {\n          classes: [X_],\n          mode: \"placement\"\n        }\n      }, function () {\n        return vt.some(a());\n      }), e.fold(v.clear, v.set), s() && fe(i, \"display\", \"none\"));\n    }\n    var r,\n      i,\n      g = u.backstage,\n      p = g.shared,\n      h = ln().deviceType.isTouch,\n      v = gc(),\n      b = gc(),\n      y = gc(),\n      x = Tu((r = {\n        sink: m,\n        onEscape: function onEscape() {\n          return d.focus(), vt.some(!0);\n        }\n      }, i = Po([]), up.sketch({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-pop\"]\n        },\n        fireDismissalEventInstead: {\n          event: \"doNotDismissYet\"\n        },\n        onShow: function onShow(t) {\n          i.set([]), up.getContent(t).each(function (t) {\n            ve(t.element, \"visibility\");\n          }), qr(t.element, G_), ve(t.element, \"width\");\n        },\n        inlineBehaviours: ec([mm(\"context-toolbar-events\", [Ar(_i(), function (t, e) {\n          \"width\" === e.event.raw.propertyName && (qr(t.element, G_), ve(t.element, \"width\"));\n        }), Cr(W_, function (t, e) {\n          var n = t.element;\n          ve(n, \"width\");\n          var o = Ce(n);\n          up.setContent(t, e.event.contents), Yr(n, G_);\n          var r = Ce(n);\n          fe(n, \"width\", o + \"px\"), up.getContent(t).each(function (t) {\n            e.event.focus.bind(function (t) {\n              return ka(t), _a(n);\n            }).orThunk(function () {\n              return Fg.focusIn(t), Oa(gn(n));\n            });\n          }), lp.setTimeout(function () {\n            fe(t.element, \"width\", r + \"px\");\n          }, 0);\n        }), Cr(U_, function (e, t) {\n          up.getContent(e).each(function (t) {\n            i.set(i.get().concat([{\n              bar: t,\n              focus: Oa(gn(e.element))\n            }]));\n          }), br(e, W_, {\n            contents: t.event.forwardContents,\n            focus: vt.none()\n          });\n        }), Cr(j_, function (e, t) {\n          q(i.get()).each(function (t) {\n            i.set(i.get().slice(0, i.get().length - 1)), br(e, W_, {\n              contents: Eu(t.bar),\n              focus: t.focus\n            });\n          });\n        })]), Fg.config({\n          mode: \"special\",\n          onEscape: function onEscape(e) {\n            return q(i.get()).fold(function () {\n              return r.onEscape();\n            }, function (t) {\n              return vr(e, j_), vt.some(!0);\n            });\n          }\n        })]),\n        lazySink: function lazySink() {\n          return Nn.value(r.sink);\n        }\n      }))),\n      w = Rt(function () {\n        return d_(t, function (t) {\n          var e = S([t]);\n          br(x, U_, {\n            forwardContents: l(e)\n          });\n        });\n      }),\n      S = function S(t) {\n        var e = d.ui.registry.getAll().buttons,\n          n = w(),\n          o = _lt(_lt({}, e), n.formNavigators),\n          r = iv(d) === bh.scrolling ? bh.scrolling : bh[\"default\"],\n          i = ft(B(t, function (t) {\n            return \"contexttoolbar\" === t.type ? F_(d, {\n              buttons: o,\n              toolbar: t.items,\n              allowToolbarGroups: !1\n            }, u, vt.some([\"form:\"])) : (e = p.providers, H_(t, e));\n            var e;\n          }));\n        return VC({\n          type: r,\n          uid: Ir(\"context-toolbar\"),\n          initGroups: i,\n          onEscape: vt.none,\n          cyclicKeying: !0,\n          providers: p.providers\n        });\n      },\n      k = vp(function () {\n        d.hasFocus() && !d.removed && (Kr(x.element, X_) ? k.throttle() : f_(w(), d).fold(e, function (t) {\n          o(t.toolbars, vt.some(t.elem));\n        }));\n      }, 17);\n    d.on(\"init\", function () {\n      d.on(\"remove\", e), d.on(\"ScrollContent ScrollWindow ObjectResized ResizeEditor longpress\", n), d.on(\"click keyup focus SetContent\", k.throttle), d.on(V_, e), d.on(\"contexttoolbar-show\", function (e) {\n        tt(w().lookupTable, e.toolbarKey).each(function (t) {\n          o([t], ot(e.target !== d, e.target)), up.getContent(x).each(Fg.focusIn);\n        });\n      }), d.on(\"focusout\", function (t) {\n        lp.setEditorTimeout(d, function () {\n          _a(m.element).isNone() && _a(x.element).isNone() && e();\n        }, 0);\n      }), d.on(\"SwitchMode\", function () {\n        d.mode.isReadOnly() && e();\n      }), d.on(\"AfterProgressState\", function (t) {\n        t.state ? e() : d.hasFocus() && k.throttle();\n      }), d.on(\"NodeChange\", function (t) {\n        _a(x.element).fold(k.throttle, st);\n      });\n    });\n  }\n  (e1 = t1 = t1 || {})[e1.SemiColon = 0] = \"SemiColon\", e1[e1.Space = 1] = \"Space\";\n  var g_,\n    p_,\n    h_,\n    v_ = [{\n      title: \"Left\",\n      icon: \"align-left\",\n      format: \"alignleft\",\n      command: \"JustifyLeft\"\n    }, {\n      title: \"Center\",\n      icon: \"align-center\",\n      format: \"aligncenter\",\n      command: \"JustifyCenter\"\n    }, {\n      title: \"Right\",\n      icon: \"align-right\",\n      format: \"alignright\",\n      command: \"JustifyRight\"\n    }, {\n      title: \"Justify\",\n      icon: \"align-justify\",\n      format: \"alignjustify\",\n      command: \"JustifyFull\"\n    }],\n    b_ = [\"-apple-system\", \"Segoe UI\", \"Roboto\", \"Helvetica Neue\", \"sans-serif\"],\n    y_ = {\n      \"8pt\": \"1\",\n      \"10pt\": \"2\",\n      \"12pt\": \"3\",\n      \"14pt\": \"4\",\n      \"18pt\": \"5\",\n      \"24pt\": \"6\",\n      \"36pt\": \"7\"\n    },\n    x_ = {\n      \"xx-small\": \"7pt\",\n      \"x-small\": \"8pt\",\n      small: \"10pt\",\n      medium: \"12pt\",\n      large: \"14pt\",\n      \"x-large\": \"18pt\",\n      \"xx-large\": \"24pt\"\n    },\n    w_ = Object.freeze({\n      __proto__: null,\n      events: function events(r, i) {\n        function u(n, o) {\n          r.updateState.each(function (t) {\n            var e = t(n, o);\n            i.set(e);\n          }), r.renderComponents.each(function (t) {\n            var e = B(t(o, i.get()), n.getSystem().build);\n            Rs(n, e);\n          });\n        }\n        return nu([Cr(Fi(), function (t, e) {\n          var n,\n            o = e;\n          o.universal || (n = r.channel, wt(o.channels, n) && u(t, o.data));\n        }), ou(function (e, t) {\n          r.initialData.each(function (t) {\n            u(e, t);\n          });\n        })]);\n      }\n    }),\n    S_ = Object.freeze({\n      __proto__: null,\n      getState: function getState(t, e, n) {\n        return n;\n      }\n    }),\n    k_ = xa({\n      fields: [mo(\"channel\"), wo(\"renderComponents\"), wo(\"updateState\"), wo(\"initialData\")],\n      name: \"reflecting\",\n      active: w_,\n      apis: S_,\n      state: Object.freeze({\n        __proto__: null,\n        init: function init() {\n          var t = Po(vt.none());\n          return {\n            readState: function readState() {\n              return t.get().getOr(\"none\");\n            },\n            get: t.get,\n            set: t.set,\n            clear: function clear() {\n              return t.set(vt.none());\n            }\n          };\n        }\n      })\n    }),\n    C_ = rt([mo(\"toggleClass\"), mo(\"fetch\"), Qu(\"onExecute\"), Eo(\"getHotspot\", vt.some), Eo(\"getAnchorOverrides\", rt({})), Uc(), Qu(\"onItemExecute\"), wo(\"lazySink\"), mo(\"dom\"), Ju(\"onOpen\"), Zs(\"splitDropdownBehaviours\", [$y, Fg, Vg]), Eo(\"matchWidth\", !1), Eo(\"useMinWidth\", !1), Eo(\"eventOrder\", {}), wo(\"role\")].concat(ux())),\n    O_ = rt([Jf({\n      factory: fp,\n      schema: [mo(\"dom\")],\n      name: \"arrow\",\n      defaults: function defaults() {\n        return {\n          buttonBehaviours: ec([Vg.revoke()])\n        };\n      },\n      overrides: function overrides(e) {\n        return {\n          dom: {\n            tag: \"span\",\n            attributes: {\n              role: \"presentation\"\n            }\n          },\n          action: function action(t) {\n            t.getSystem().getByUid(e.uid).each(yr);\n          },\n          buttonBehaviours: ec([zg.config({\n            toggleOnExecute: !1,\n            toggleClass: e.toggleClass\n          })])\n        };\n      }\n    }), Jf({\n      factory: fp,\n      schema: [mo(\"dom\")],\n      name: \"button\",\n      defaults: function defaults() {\n        return {\n          buttonBehaviours: ec([Vg.revoke()])\n        };\n      },\n      overrides: function overrides(n) {\n        return {\n          dom: {\n            tag: \"span\",\n            attributes: {\n              role: \"presentation\"\n            }\n          },\n          action: function action(e) {\n            e.getSystem().getByUid(n.uid).each(function (t) {\n              n.onExecute(t, e);\n            });\n          }\n        };\n      }\n    }), Qf({\n      factory: {\n        sketch: function sketch(t) {\n          return {\n            uid: t.uid,\n            dom: {\n              tag: \"span\",\n              styles: {\n                display: \"none\"\n              },\n              attributes: {\n                \"aria-hidden\": \"true\"\n              },\n              innerHtml: t.text\n            }\n          };\n        }\n      },\n      schema: [mo(\"text\")],\n      name: \"aria-descriptor\"\n    }), $f({\n      schema: [Yu()],\n      name: \"menu\",\n      defaults: function defaults(o) {\n        return {\n          onExecute: function onExecute(e, n) {\n            e.getSystem().getByUid(o.uid).each(function (t) {\n              o.onItemExecute(t, e, n);\n            });\n          }\n        };\n      }\n    }), Zy()]),\n    __ = Cl({\n      name: \"SplitDropdown\",\n      configFields: C_(),\n      partFields: O_(),\n      factory: function factory(o, t, e, n) {\n        function r(t) {\n          cd.getCurrent(t).each(function (t) {\n            hd.highlightFirst(t), Fg.focusIn(t);\n          });\n        }\n        function i(t) {\n          nx(o, h, t, n, r, Vy.HighlightFirst).get(st);\n        }\n        function u(t) {\n          return yr(gl(t, o, \"button\")), vt.some(!0);\n        }\n        var a,\n          c = _lt(_lt({}, nu([ou(function (n, t) {\n            ml(n, o, \"aria-descriptor\").each(function (t) {\n              var e = Ir(\"aria\");\n              oe(t.element, \"id\", e), oe(n.element, \"aria-describedby\", e);\n            });\n          })])), Sm(vt.some(i))),\n          s = {\n            repositionMenus: function repositionMenus(t) {\n              zg.isOn(t) && ix(t);\n            }\n          };\n        return {\n          uid: o.uid,\n          dom: o.dom,\n          components: t,\n          apis: s,\n          eventOrder: _lt(_lt({}, o.eventOrder), ((a = {})[Ii()] = [\"disabling\", \"toggling\", \"alloy.base.behaviour\"], a)),\n          events: c,\n          behaviours: el(o.splitDropdownBehaviours, [$y.config({\n            others: {\n              sandbox: function sandbox(t) {\n                var e = gl(t, o, \"arrow\");\n                return rx(o, t, {\n                  onOpen: function onOpen() {\n                    zg.on(e), zg.on(t);\n                  },\n                  onClose: function onClose() {\n                    zg.off(e), zg.off(t);\n                  }\n                });\n              }\n            }\n          }), Fg.config({\n            mode: \"special\",\n            onSpace: u,\n            onEnter: u,\n            onDown: function onDown(t) {\n              return i(t), vt.some(!0);\n            }\n          }), Vg.config({}), zg.config({\n            toggleOnExecute: !1,\n            aria: {\n              mode: \"expanded\"\n            }\n          })]),\n          domModification: {\n            attributes: {\n              role: o.role.getOr(\"button\"),\n              \"aria-haspopup\": !0\n            }\n          }\n        };\n      },\n      apis: {\n        repositionMenus: function repositionMenus(t, e) {\n          return t.repositionMenus(e);\n        }\n      }\n    }),\n    T_ = Ir(\"focus-button\"),\n    E_ = function E_(t, e, n) {\n      return KO(t, {\n        toolbarButtonBehaviours: [].concat(0 < n.length ? [mm(\"toolbarButtonWith\", n)] : []),\n        getApi: GO,\n        onSetup: t.onSetup\n      }, e);\n    },\n    D_ = function D_(t, e, n) {\n      return Yo(KO(t, {\n        toolbarButtonBehaviours: [Rg.config({}), zg.config({\n          toggleClass: \"tox-tbtn--enabled\",\n          aria: {\n            mode: \"pressed\"\n          },\n          toggleOnExecute: !1\n        })].concat(0 < n.length ? [mm(\"toolbarToggleButtonWith\", n)] : []),\n        getApi: XO,\n        onSetup: t.onSetup\n      }, e));\n    },\n    A_ = [{\n      name: \"history\",\n      items: [\"undo\", \"redo\"]\n    }, {\n      name: \"styles\",\n      items: [\"styleselect\"]\n    }, {\n      name: \"formatting\",\n      items: [\"bold\", \"italic\"]\n    }, {\n      name: \"alignment\",\n      items: [\"alignleft\", \"aligncenter\", \"alignright\", \"alignjustify\"]\n    }, {\n      name: \"indentation\",\n      items: [\"outdent\", \"indent\"]\n    }, {\n      name: \"permanent pen\",\n      items: [\"permanentpen\"]\n    }, {\n      name: \"comments\",\n      items: [\"addcomment\"]\n    }],\n    B_ = {\n      button: JO(Op, function (t, e) {\n        return n = e.backstage.shared.providers, E_(t, n, []);\n        var n;\n      }),\n      togglebutton: JO(_p, function (t, e) {\n        return n = e.backstage.shared.providers, D_(t, n, []);\n        var n;\n      }),\n      menubutton: JO(rC, function (t, e) {\n        return G0(t, \"tox-tbtn\", e.backstage, vt.none());\n      }),\n      splitbutton: JO(function (t) {\n        return ao(\"SplitButton\", Q1, t);\n      }, function (t, e) {\n        return o = t, r = e.backstage.shared, s = Ir(\"channel-update-split-dropdown-display\"), l = Po(st), f = {\n          getApi: n,\n          onSetup: o.onSetup\n        }, __.sketch({\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-split-button\"],\n            attributes: _lt({\n              \"aria-pressed\": !1\n            }, YO(o.tooltip, r.providers))\n          },\n          onExecute: function onExecute(t) {\n            o.onAction(n(t));\n          },\n          onItemExecute: function onItemExecute(t, e, n) {},\n          splitDropdownBehaviours: ec([Yv(r.providers.isDisabled), pv(), mm(\"split-dropdown-events\", [Cr(T_, Vg.focus), vv(f, l), bv(f, l)]), vw.config({})]),\n          eventOrder: ((i = {})[Gi()] = [\"alloy.base.behaviour\", \"split-dropdown-events\"], i),\n          toggleClass: \"tox-tbtn--enabled\",\n          lazySink: r.getSink,\n          fetch: (u = n, a = o, c = r.providers, function (e) {\n            return Wy(function (t) {\n              return a.fetch(t);\n            }).map(function (t) {\n              return vt.from(Xb(Yo(Ob(Ir(\"menu-value\"), t, function (t) {\n                a.onItemAction(u(e), t);\n              }, a.columns, a.presets, Sh.CLOSE_ON_EXECUTE, a.select.getOr(T), c), {\n                movement: _b(a.columns, a.presets),\n                menuBehaviours: Kh(\"auto\" !== a.columns ? [] : [ou(function (o, t) {\n                  ah(o, 4, Jp(a.presets)).each(function (t) {\n                    var e = t.numRows,\n                      n = t.numColumns;\n                    Fg.setGridSize(o, e, n);\n                  });\n                })])\n              })));\n            });\n          }),\n          parts: {\n            menu: Zp(0, o.columns, o.presets)\n          },\n          components: [__.parts.button(qO(o.icon, o.text, vt.none(), vt.some(s), vt.some([zg.config({\n            toggleClass: \"tox-tbtn--enabled\",\n            toggleOnExecute: !1\n          })]), r.providers)), __.parts.arrow({\n            dom: {\n              tag: \"button\",\n              classes: [\"tox-tbtn\", \"tox-split-button__chevron\"],\n              innerHtml: jm(\"chevron-down\", r.providers.icons)\n            },\n            buttonBehaviours: ec([Yv(r.providers.isDisabled), pv(), Wm()])\n          }), __.parts[\"aria-descriptor\"]({\n            text: r.providers.translate(\"To open the popup, press Shift+Enter\")\n          })]\n        });\n        function n(n) {\n          return {\n            isDisabled: function isDisabled() {\n              return gd.isDisabled(n);\n            },\n            setDisabled: function setDisabled(t) {\n              return gd.set(n, t);\n            },\n            setIconFill: function setIconFill(t, e) {\n              Iu(n.element, 'svg path[id=\"' + t + '\"], rect[id=\"' + t + '\"]').each(function (t) {\n                oe(t, \"fill\", e);\n              });\n            },\n            setIconStroke: function setIconStroke(t, e) {\n              Iu(n.element, 'svg path[id=\"' + t + '\"], rect[id=\"' + t + '\"]').each(function (t) {\n                oe(t, \"stroke\", e);\n              });\n            },\n            setActive: function setActive(e) {\n              oe(n.element, \"aria-pressed\", e), Iu(n.element, \"span\").each(function (t) {\n                n.getSystem().getByDom(t).each(function (t) {\n                  return zg.set(t, e);\n                });\n              });\n            },\n            isActive: function isActive() {\n              return Iu(n.element, \"span\").exists(function (t) {\n                return n.getSystem().getByDom(t).exists(zg.isOn);\n              });\n            }\n          };\n        }\n        var o, r, i, u, a, c, s, l, f;\n      }),\n      grouptoolbarbutton: JO(function (t) {\n        return ao(\"GroupToolbarButton\", K1, t);\n      }, function (t, e, n) {\n        var o,\n          r,\n          i,\n          u,\n          a,\n          c,\n          s = n.ui.registry.getAll().buttons,\n          l = ((o = {})[ns] = e.backstage.shared.header.isPositionedAtTop() ? Oc.TopToBottom : Oc.BottomToTop, o);\n        if (iv(n) !== bh.floating) throw new Error(\"Toolbar groups are only supported when using floating toolbar mode\");\n        return i = e.backstage, u = function u(t) {\n          return F_(n, {\n            buttons: s,\n            toolbar: t,\n            allowToolbarGroups: !1\n          }, e, vt.none());\n        }, a = l, c = i.shared, bO.sketch({\n          lazySink: c.getSink,\n          fetch: function fetch() {\n            return Wy(function (t) {\n              t(B(u(r.items), RC));\n            });\n          },\n          markers: {\n            toggledClass: \"tox-tbtn--enabled\"\n          },\n          parts: {\n            button: qO((r = t).icon, r.text, r.tooltip, vt.none(), vt.none(), c.providers),\n            toolbar: {\n              dom: {\n                tag: \"div\",\n                classes: [\"tox-toolbar__overflow\"],\n                attributes: a\n              }\n            }\n          }\n        });\n      }),\n      styleSelectButton: function styleSelectButton(t, e) {\n        return KC(t, n = e.backstage, WO(t, _lt({\n          type: \"advanced\"\n        }, n.styleselect)));\n        var n;\n      },\n      fontsizeSelectButton: function fontsizeSelectButton(t, e) {\n        return KC(t, e.backstage, zO(t));\n      },\n      fontSelectButton: function fontSelectButton(t, e) {\n        return KC(t, e.backstage, LO(t));\n      },\n      formatButton: function formatButton(t, e) {\n        return KC(t, e.backstage, jO(t));\n      },\n      alignMenuButton: function alignMenuButton(t, e) {\n        return KC(t, e.backstage, VO(t));\n      }\n    },\n    M_ = {\n      styleselect: B_.styleSelectButton,\n      fontsizeselect: B_.fontsizeSelectButton,\n      fontselect: B_.fontSelectButton,\n      formatselect: B_.formatButton,\n      align: B_.alignMenuButton\n    },\n    F_ = function F_(o, c, s, l) {\n      var n,\n        t,\n        e,\n        r,\n        i = (e = c.toolbar, r = c.buttons, !1 === e ? [] : void 0 === e || !0 === e ? (n = r, t = B(A_, function (t) {\n          var e = F(t.items, function (t) {\n            return Tt(n, t) || Tt(M_, t);\n          });\n          return {\n            name: t.name,\n            items: e\n          };\n        }), F(t, function (t) {\n          return 0 < t.items.length;\n        })) : y(e) ? B(e.split(\"|\"), function (t) {\n          return {\n            items: t.trim().split(\" \")\n          };\n        }) : f(e, function (t) {\n          return Tt(t, \"name\") && Tt(t, \"items\");\n        }) ? e : (console.error(\"Toolbar type should be string, string[], boolean or ToolbarGroup[]\"), []));\n      return F(B(i, function (t) {\n        var e = H(t.items, function (t) {\n          return 0 === t.trim().length ? [] : (r = o, e = c.buttons, i = t, u = c.allowToolbarGroups, a = s, n = l, tt(e, i.toLowerCase()).orThunk(function () {\n            return n.bind(function (t) {\n              return K(t, function (t) {\n                return tt(e, t + i.toLowerCase());\n              });\n            });\n          }).fold(function () {\n            return tt(M_, i.toLowerCase()).map(function (t) {\n              return t(r, a);\n            }).orThunk(function () {\n              return vt.none();\n            });\n          }, function (t) {\n            return \"grouptoolbarbutton\" !== t.type || u ? (n = a, o = r, tt(B_, (e = t).type).fold(function () {\n              return console.error(\"skipping button defined by\", e), vt.none();\n            }, function (t) {\n              return vt.some(t(e, n, o));\n            })) : (console.warn(\"Ignoring the '\" + i + \"' toolbar button. Group toolbar buttons are only supported when using floating toolbar mode and cannot be nested.\"), vt.none());\n            var e, n, o;\n          }).toArray());\n          var r, e, i, u, a, n;\n        });\n        return {\n          title: vt.from(o.translate(t.name)),\n          items: e\n        };\n      }), function (t) {\n        return 0 < t.items.length;\n      });\n    },\n    I_ = ln(),\n    R_ = I_.os.isiOS() && I_.os.version.major <= 12,\n    N_ = Object.freeze({\n      __proto__: null,\n      render: function render(n, e, t, o, r) {\n        var i = Po(0),\n          u = e.outerContainer;\n        RO(n);\n        var a = Mt.fromDom(r.targetNode),\n          c = te(gn(a)),\n          s = e.mothership;\n        pf(a, s, De), Ls(c, e.uiMothership), n.on(\"PostRender\", function () {\n          $O(n, e, t, o), i.set(n.getWin().innerWidth), FO.setMenubar(u, LC(n, t)), FO.setSidebar(u, t.sidebar), function (n, t) {\n            function e() {\n              var t = c.get();\n              t.left === u.innerWidth && t.top === u.innerHeight || (c.set(kn(u.innerWidth, u.innerHeight)), Uv(n));\n            }\n            function o() {\n              var t = n.getDoc().documentElement,\n                e = s.get();\n              e.left === t.offsetWidth && e.top === t.offsetHeight || (s.set(kn(t.offsetWidth, t.offsetHeight)), Uv(n));\n            }\n            function r(t) {\n              return n.fire(\"ScrollContent\", t);\n            }\n            var i = n.dom,\n              u = n.getWin(),\n              a = n.getDoc().documentElement,\n              c = Po(kn(u.innerWidth, u.innerHeight)),\n              s = Po(kn(a.offsetWidth, a.offsetHeight));\n            i.bind(u, \"resize\", e), i.bind(u, \"scroll\", r);\n            var l = hc(Mt.fromDom(n.getBody()), \"load\", o),\n              f = t.uiMothership.element;\n            n.on(\"hide\", function () {\n              fe(f, \"display\", \"none\");\n            }), n.on(\"show\", function () {\n              ve(f, \"display\");\n            }), n.on(\"NodeChange\", o), n.on(\"remove\", function () {\n              l.unbind(), i.unbind(u, \"resize\", e), i.unbind(u, \"scroll\", r), u = null;\n            });\n          }(n, e);\n        });\n        var l,\n          f,\n          d,\n          m,\n          g = FO.getSocket(u).getOrDie(\"Could not find expected socket element\");\n        R_ && (de(g.element, {\n          overflow: \"scroll\",\n          \"-webkit-overflow-scrolling\": \"touch\"\n        }), f = function f() {\n          n.fire(\"ScrollContent\");\n        }, d = null, m = function m() {\n          for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n          b(d) && (d = setTimeout(function () {\n            d = null, f.apply(null, t);\n          }, 20));\n        }, l = pc(g.element, \"scroll\", m), n.on(\"remove\", l.unbind)), gv(n, e), n.addCommand(\"ToggleSidebar\", function (t, e) {\n          FO.toggleSidebar(u, e), n.fire(\"ToggleSidebar\");\n        }), n.addQueryValueHandler(\"ToggleSidebar\", function () {\n          return FO.whichSidebar(u);\n        });\n        var p = iv(n);\n        p !== bh.sliding && p !== bh.floating || n.on(\"ResizeWindow ResizeEditor ResizeContent\", function () {\n          var t = n.getWin().innerWidth;\n          t !== i.get() && (FO.refreshToolbar(e.outerContainer), i.set(t));\n        });\n        var h = {\n          enable: function enable() {\n            mv(e, !1);\n          },\n          disable: function disable() {\n            mv(e, !0);\n          },\n          isDisabled: function isDisabled() {\n            return gd.isDisabled(u);\n          }\n        };\n        return {\n          iframeContainer: g.element.dom,\n          editorContainer: u.element.dom,\n          api: h\n        };\n      }\n    }),\n    P_ = Object.freeze({\n      __proto__: null,\n      render: function render(e, n, o, r, t) {\n        var i = n.mothership,\n          u = n.uiMothership,\n          a = n.outerContainer,\n          c = Po(null),\n          s = Mt.fromDom(t.targetNode),\n          l = n_(e, s, n, r, c),\n          f = e.getParam(\"toolbar_persist\", !1, \"boolean\");\n        function d() {\n          var t;\n          c.get() ? l.show() : (c.set(FO.getHeader(a).getOrDie()), Ls(t = lv(e), i), Ls(t, u), $O(e, n, o, r), FO.setMenubar(a, LC(e, o)), l.show(), function (c, s, l, t) {\n            function e(t) {\n              var e = o_(s, l.isPositionedAtTop()),\n                n = e.pos,\n                o = e.bounds,\n                r = f.get(),\n                i = r.pos,\n                u = r.bounds,\n                a = o.height !== u.height || o.width !== u.width;\n              f.set({\n                pos: n,\n                bounds: o\n              }), a && Uv(c, t), l.isVisible() && (i !== n ? l.update(!0) : a && (l.updateMode(), l.repositionPopups()));\n            }\n            var f = Po(o_(s, l.isPositionedAtTop()));\n            t || (c.on(\"activate\", l.show), c.on(\"deactivate\", l.hide)), c.on(\"SkinLoaded ResizeWindow\", function () {\n              return l.update(!0);\n            }), c.on(\"NodeChange keydown\", function (t) {\n              lp.requestAnimationFrame(function () {\n                return e(t);\n              });\n            }), c.on(\"ScrollWindow\", function () {\n              return l.updateMode();\n            });\n            var n = mc();\n            n.set(hc(Mt.fromDom(c.getBody()), \"load\", e)), c.on(\"remove\", function () {\n              n.clear();\n            });\n          }(e, s, l, f), e.nodeChanged());\n        }\n        NO(e), e.on(\"show\", d), e.on(\"hide\", l.hide), f || (e.on(\"focus\", d), e.on(\"blur\", l.hide)), e.on(\"init\", function () {\n          (e.hasFocus() || f) && d();\n        }), gv(e, n);\n        var m = {\n          show: function show() {\n            l.show();\n          },\n          hide: function hide() {\n            l.hide();\n          },\n          enable: function enable() {\n            mv(n, !1);\n          },\n          disable: function disable() {\n            mv(n, !0);\n          },\n          isDisabled: function isDisabled() {\n            return gd.isDisabled(a);\n          }\n        };\n        return {\n          editorContainer: a.element.dom,\n          api: m\n        };\n      }\n    }),\n    V_ = \"contexttoolbar-hide\",\n    H_ = function H_(t, e) {\n      var n,\n        o,\n        r,\n        i,\n        u = t.label.fold(function () {\n          return {};\n        }, function (t) {\n          return {\n            \"aria-label\": t\n          };\n        }),\n        a = Hm(Dy.sketch({\n          inputClasses: [\"tox-toolbar-textfield\", \"tox-toolbar-nav-js\"],\n          data: t.initValue(),\n          inputAttributes: u,\n          selectOnFocus: !0,\n          inputBehaviours: ec([Fg.config({\n            mode: \"special\",\n            onEnter: function onEnter(t) {\n              return c.findPrimary(t).map(function (t) {\n                return yr(t), !0;\n              });\n            },\n            onLeft: function onLeft(t, e) {\n              return e.cut(), vt.none();\n            },\n            onRight: function onRight(t, e) {\n              return e.cut(), vt.none();\n            }\n          })])\n        })),\n        c = (n = a, o = t.commands, r = e, i = B(o, function (t) {\n          return Hm((\"contextformtogglebutton\" === t.type ? function (t, e, n) {\n            var o = e.original;\n            o.primary;\n            var r = A(o, [\"primary\"]),\n              i = co(_p(_lt(_lt({}, r), {\n                type: \"togglebutton\",\n                onAction: st\n              })));\n            return D_(i, n.backstage.shared.providers, [r_(t, e)]);\n          } : function (t, e, n) {\n            var o = e.original;\n            o.primary;\n            var r = A(o, [\"primary\"]),\n              i = co(Op(_lt(_lt({}, r), {\n                type: \"button\",\n                onAction: st\n              })));\n            return E_(i, n.backstage.shared.providers, [r_(t, e)]);\n          })(n, t, {\n            backstage: {\n              shared: {\n                providers: r\n              }\n            }\n          }));\n        }), {\n          asSpecs: function asSpecs() {\n            return B(i, function (t) {\n              return t.asSpec();\n            });\n          },\n          findPrimary: function findPrimary(n) {\n            return K(o, function (t, e) {\n              return t.primary ? vt.from(i[e]).bind(function (t) {\n                return t.getOpt(n);\n              }).filter(O(gd.isDisabled)) : vt.none();\n            });\n          }\n        });\n      return [{\n        title: vt.none(),\n        items: [a.asSpec()]\n      }, {\n        title: vt.none(),\n        items: c.asSpecs()\n      }];\n    },\n    L_ = {\n      valignCentre: [],\n      alignCentre: [],\n      alignLeft: [\"tox-pop--align-left\"],\n      alignRight: [\"tox-pop--align-right\"],\n      right: [\"tox-pop--right\"],\n      left: [\"tox-pop--left\"],\n      bottom: [\"tox-pop--bottom\"],\n      top: [\"tox-pop--top\"],\n      inset: [\"tox-pop--inset\"]\n    },\n    z_ = {\n      maxHeightFunction: Nc(),\n      maxWidthFunction: pO()\n    },\n    U_ = Ir(\"forward-slide\"),\n    j_ = Ir(\"backward-slide\"),\n    W_ = Ir(\"change-slide-event\"),\n    G_ = \"tox-pop--resizing\",\n    X_ = \"tox-pop--transition\",\n    Y_ = {\n      unsupportedLength: [\"em\", \"ex\", \"cap\", \"ch\", \"ic\", \"rem\", \"lh\", \"rlh\", \"vw\", \"vh\", \"vi\", \"vb\", \"vmin\", \"vmax\", \"cm\", \"mm\", \"Q\", \"in\", \"pc\", \"pt\", \"px\"],\n      fixed: [\"px\", \"pt\"],\n      relative: [\"%\"],\n      empty: [\"\"]\n    },\n    q_ = (h_ = [\"Infinity\", (g_ = \"[0-9]+\") + \"\\\\.\" + K_(g_) + K_(p_ = \"[eE][+-]?[0-9]+\"), \"\\\\.\" + g_ + K_(p_), g_ + K_(p_)].join(\"|\"), new RegExp(\"^([+-]?(?:\" + h_ + \"))(.*)$\"));\n  function K_(t) {\n    return \"(?:\" + t + \")?\";\n  }\n  function J_(u, a) {\n    function e() {\n      var t = a.getOptions(u),\n        r = a.getCurrent(u).map(a.hash),\n        i = gc();\n      return B(t, function (o) {\n        return {\n          type: \"togglemenuitem\",\n          text: a.display(o),\n          onSetup: function onSetup(e) {\n            function t(t) {\n              t && (i.on(function (t) {\n                return t.setActive(!1);\n              }), i.set(e)), e.setActive(t);\n            }\n            t(mt(r, a.hash(o)));\n            var n = a.watcher(u, o, t);\n            return function () {\n              i.clear(), n();\n            };\n          },\n          onAction: function onAction() {\n            return a.setCurrent(u, o);\n          }\n        };\n      });\n    }\n    u.ui.registry.addMenuButton(a.name, {\n      tooltip: a.text,\n      icon: a.icon,\n      fetch: function fetch(t) {\n        return t(e());\n      },\n      onSetup: a.onToolbarSetup\n    }), u.ui.registry.addNestedMenuItem(a.name, {\n      type: \"nestedmenuitem\",\n      text: a.text,\n      getSubmenuItems: e,\n      onSetup: a.onMenuSetup\n    });\n  }\n  function $_(t, e) {\n    return function () {\n      t.execCommand(\"mceToggleFormat\", !1, e);\n    };\n  }\n  function Q_(t) {\n    var e, n;\n    !function (n) {\n      fS.each([{\n        name: \"bold\",\n        text: \"Bold\",\n        icon: \"bold\"\n      }, {\n        name: \"italic\",\n        text: \"Italic\",\n        icon: \"italic\"\n      }, {\n        name: \"underline\",\n        text: \"Underline\",\n        icon: \"underline\"\n      }, {\n        name: \"strikethrough\",\n        text: \"Strikethrough\",\n        icon: \"strike-through\"\n      }, {\n        name: \"subscript\",\n        text: \"Subscript\",\n        icon: \"subscript\"\n      }, {\n        name: \"superscript\",\n        text: \"Superscript\",\n        icon: \"superscript\"\n      }], function (t, e) {\n        n.ui.registry.addToggleButton(t.name, {\n          tooltip: t.text,\n          icon: t.icon,\n          onSetup: WC(n, t.name),\n          onAction: $_(n, t.name)\n        });\n      });\n      for (var t = 1; t <= 6; t++) {\n        var e = \"h\" + t;\n        n.ui.registry.addToggleButton(e, {\n          text: e.toUpperCase(),\n          tooltip: \"Heading \" + t,\n          onSetup: WC(n, e),\n          onAction: $_(n, e)\n        });\n      }\n    }(t), e = t, fS.each([{\n      name: \"cut\",\n      text: \"Cut\",\n      action: \"Cut\",\n      icon: \"cut\"\n    }, {\n      name: \"copy\",\n      text: \"Copy\",\n      action: \"Copy\",\n      icon: \"copy\"\n    }, {\n      name: \"paste\",\n      text: \"Paste\",\n      action: \"Paste\",\n      icon: \"paste\"\n    }, {\n      name: \"help\",\n      text: \"Help\",\n      action: \"mceHelp\",\n      icon: \"help\"\n    }, {\n      name: \"selectall\",\n      text: \"Select all\",\n      action: \"SelectAll\",\n      icon: \"select-all\"\n    }, {\n      name: \"newdocument\",\n      text: \"New document\",\n      action: \"mceNewDocument\",\n      icon: \"new-document\"\n    }, {\n      name: \"removeformat\",\n      text: \"Clear formatting\",\n      action: \"RemoveFormat\",\n      icon: \"remove-formatting\"\n    }, {\n      name: \"remove\",\n      text: \"Remove\",\n      action: \"Delete\",\n      icon: \"remove\"\n    }], function (t) {\n      e.ui.registry.addButton(t.name, {\n        tooltip: t.text,\n        icon: t.icon,\n        onAction: YC(e, t.action)\n      });\n    }), n = t, fS.each([{\n      name: \"blockquote\",\n      text: \"Blockquote\",\n      action: \"mceBlockQuote\",\n      icon: \"quote\"\n    }], function (t) {\n      n.ui.registry.addToggleButton(t.name, {\n        tooltip: t.text,\n        icon: t.icon,\n        onAction: YC(n, t.action),\n        onSetup: WC(n, t.name)\n      });\n    });\n  }\n  function Z_(e, n) {\n    return GC(e, \"Undo Redo AddUndo TypingUndo ClearUndos SwitchMode\", function (t) {\n      t.setDisabled(e.mode.isReadOnly() || !e.undoManager[n]());\n    });\n  }\n  function tT(t) {\n    var e;\n    t.ui.registry.addButton(\"visualaid\", {\n      tooltip: \"Visual aids\",\n      text: \"Visual aids\",\n      onAction: YC(t, \"mceToggleVisualAid\")\n    }), t.ui.registry.addToggleMenuItem(\"visualaid\", {\n      text: \"Visual aids\",\n      onSetup: GC(e = t, \"VisualAid\", function (t) {\n        t.setActive(e.hasVisual);\n      }),\n      onAction: YC(t, \"mceToggleVisualAid\")\n    });\n  }\n  function eT(t, e) {\n    var n,\n      o,\n      r,\n      i,\n      u,\n      a,\n      c,\n      s,\n      l,\n      f,\n      d,\n      m,\n      g,\n      p,\n      h,\n      v,\n      b,\n      y,\n      x,\n      w,\n      S,\n      k,\n      C,\n      O,\n      _,\n      T = t;\n    St([{\n      name: \"alignleft\",\n      text: \"Align left\",\n      cmd: \"JustifyLeft\",\n      icon: \"align-left\"\n    }, {\n      name: \"aligncenter\",\n      text: \"Align center\",\n      cmd: \"JustifyCenter\",\n      icon: \"align-center\"\n    }, {\n      name: \"alignright\",\n      text: \"Align right\",\n      cmd: \"JustifyRight\",\n      icon: \"align-right\"\n    }, {\n      name: \"alignjustify\",\n      text: \"Justify\",\n      cmd: \"JustifyFull\",\n      icon: \"align-justify\"\n    }], function (t) {\n      T.ui.registry.addToggleButton(t.name, {\n        tooltip: t.text,\n        icon: t.icon,\n        onAction: YC(T, t.cmd),\n        onSetup: WC(T, t.name)\n      });\n    }), T.ui.registry.addButton(\"alignnone\", {\n      tooltip: \"No alignment\",\n      icon: \"align-none\",\n      onAction: YC(T, \"JustifyNone\")\n    }), Q_(O = t), _ = O, fS.each([{\n      name: \"bold\",\n      text: \"Bold\",\n      action: \"Bold\",\n      icon: \"bold\",\n      shortcut: \"Meta+B\"\n    }, {\n      name: \"italic\",\n      text: \"Italic\",\n      action: \"Italic\",\n      icon: \"italic\",\n      shortcut: \"Meta+I\"\n    }, {\n      name: \"underline\",\n      text: \"Underline\",\n      action: \"Underline\",\n      icon: \"underline\",\n      shortcut: \"Meta+U\"\n    }, {\n      name: \"strikethrough\",\n      text: \"Strikethrough\",\n      action: \"Strikethrough\",\n      icon: \"strike-through\",\n      shortcut: \"\"\n    }, {\n      name: \"subscript\",\n      text: \"Subscript\",\n      action: \"Subscript\",\n      icon: \"subscript\",\n      shortcut: \"\"\n    }, {\n      name: \"superscript\",\n      text: \"Superscript\",\n      action: \"Superscript\",\n      icon: \"superscript\",\n      shortcut: \"\"\n    }, {\n      name: \"removeformat\",\n      text: \"Clear formatting\",\n      action: \"RemoveFormat\",\n      icon: \"remove-formatting\",\n      shortcut: \"\"\n    }, {\n      name: \"newdocument\",\n      text: \"New document\",\n      action: \"mceNewDocument\",\n      icon: \"new-document\",\n      shortcut: \"\"\n    }, {\n      name: \"cut\",\n      text: \"Cut\",\n      action: \"Cut\",\n      icon: \"cut\",\n      shortcut: \"Meta+X\"\n    }, {\n      name: \"copy\",\n      text: \"Copy\",\n      action: \"Copy\",\n      icon: \"copy\",\n      shortcut: \"Meta+C\"\n    }, {\n      name: \"paste\",\n      text: \"Paste\",\n      action: \"Paste\",\n      icon: \"paste\",\n      shortcut: \"Meta+V\"\n    }, {\n      name: \"selectall\",\n      text: \"Select all\",\n      action: \"SelectAll\",\n      icon: \"select-all\",\n      shortcut: \"Meta+A\"\n    }], function (t) {\n      _.ui.registry.addMenuItem(t.name, {\n        text: t.text,\n        icon: t.icon,\n        shortcut: t.shortcut,\n        onAction: YC(_, t.action)\n      });\n    }), _.ui.registry.addMenuItem(\"codeformat\", {\n      text: \"Code\",\n      icon: \"sourcecode\",\n      onAction: $_(_, \"code\")\n    }), C = qC(0, d = l = e, VO(f = s = t)), f.ui.registry.addNestedMenuItem(\"align\", {\n      text: d.shared.providers.translate(\"Align\"),\n      getSubmenuItems: function getSubmenuItems() {\n        return C.items.validateItems(C.getStyleItems());\n      }\n    }), p = qC(0, g = l, LO(m = s)), m.ui.registry.addNestedMenuItem(\"fontformats\", {\n      text: g.shared.providers.translate(\"Fonts\"),\n      getSubmenuItems: function getSubmenuItems() {\n        return p.items.validateItems(p.getStyleItems());\n      }\n    }), h = s, b = _lt({\n      type: \"advanced\"\n    }, (v = l).styleselect), y = qC(0, v, WO(h, b)), h.ui.registry.addNestedMenuItem(\"formats\", {\n      text: \"Formats\",\n      getSubmenuItems: function getSubmenuItems() {\n        return y.items.validateItems(y.getStyleItems());\n      }\n    }), w = qC(0, l, jO(x = s)), x.ui.registry.addNestedMenuItem(\"blockformats\", {\n      text: \"Blocks\",\n      getSubmenuItems: function getSubmenuItems() {\n        return w.items.validateItems(w.getStyleItems());\n      }\n    }), k = qC(0, l, zO(S = s)), S.ui.registry.addNestedMenuItem(\"fontsizes\", {\n      text: \"Font sizes\",\n      getSubmenuItems: function getSubmenuItems() {\n        return k.items.validateItems(k.getStyleItems());\n      }\n    }), (a = u = t).ui.registry.addMenuItem(\"undo\", {\n      text: \"Undo\",\n      icon: \"undo\",\n      shortcut: \"Meta+Z\",\n      onSetup: Z_(a, \"hasUndo\"),\n      onAction: YC(a, \"undo\")\n    }), a.ui.registry.addMenuItem(\"redo\", {\n      text: \"Redo\",\n      icon: \"redo\",\n      shortcut: \"Meta+Y\",\n      onSetup: Z_(a, \"hasRedo\"),\n      onAction: YC(a, \"redo\")\n    }), (c = u).ui.registry.addButton(\"undo\", {\n      tooltip: \"Undo\",\n      icon: \"undo\",\n      disabled: !0,\n      onSetup: Z_(c, \"hasUndo\"),\n      onAction: YC(c, \"undo\")\n    }), c.ui.registry.addButton(\"redo\", {\n      tooltip: \"Redo\",\n      icon: \"redo\",\n      disabled: !0,\n      onSetup: Z_(c, \"hasRedo\"),\n      onAction: YC(c, \"redo\")\n    }), function (t) {\n      var i;\n      (i = t).addCommand(\"mceApplyTextcolor\", function (t, e) {\n        var n,\n          o = t,\n          r = e;\n        (n = i).undoManager.transact(function () {\n          n.focus(), n.formatter.apply(o, {\n            value: r\n          }), n.nodeChanged();\n        });\n      }), i.addCommand(\"mceRemoveTextcolor\", function (t) {\n        var e,\n          n = t;\n        (e = i).undoManager.transact(function () {\n          e.focus(), e.formatter.remove(n, {\n            value: null\n          }, null, !0), e.nodeChanged();\n        });\n      });\n      var e = Po(Fb),\n        n = Po(Fb);\n      kb(t, \"forecolor\", \"forecolor\", \"Text color\", e), kb(t, \"backcolor\", \"hilitecolor\", \"Background color\", n), Cb(t, \"forecolor\", \"forecolor\", \"Text color\"), Cb(t, \"backcolor\", \"hilitecolor\", \"Background color\");\n    }(t), tT(t), (r = t).ui.registry.addButton(\"outdent\", {\n      tooltip: \"Decrease indent\",\n      icon: \"outdent\",\n      onSetup: GC(i = r, \"NodeChange\", function (t) {\n        t.setDisabled(!i.queryCommandState(\"outdent\"));\n      }),\n      onAction: YC(r, \"outdent\")\n    }), r.ui.registry.addButton(\"indent\", {\n      tooltip: \"Increase indent\",\n      icon: \"indent\",\n      onAction: YC(r, \"indent\")\n    }), J_(n = t, LT), o = n, vt.from(o.getParam(\"content_langs\", void 0, \"array\")).map(function (t) {\n      return {\n        name: \"language\",\n        text: \"Language\",\n        icon: \"language\",\n        getOptions: rt(t),\n        hash: function hash(t) {\n          return E(t.customCode) ? t.code : t.code + \"/\" + t.customCode;\n        },\n        display: function display(t) {\n          return t.title;\n        },\n        watcher: function watcher(t, e, n) {\n          return t.formatter.formatChanged(\"lang\", n, !1, {\n            value: e.code,\n            customValue: e.customCode\n          }).unbind;\n        },\n        getCurrent: function getCurrent(t) {\n          return mr(Mt.fromDom(t.selection.getNode()), function (t) {\n            return vt.some(t).filter(Ge).bind(function (e) {\n              return ue(e, \"lang\").map(function (t) {\n                return {\n                  code: t,\n                  customCode: ue(e, \"data-mce-lang\").getOrUndefined(),\n                  title: \"\"\n                };\n              });\n            });\n          });\n        },\n        setCurrent: function setCurrent(t, e) {\n          return t.execCommand(\"Lang\", !1, e);\n        },\n        onToolbarSetup: function onToolbarSetup(t) {\n          var e = mc();\n          return t.setActive(o.formatter.match(\"lang\", {}, void 0, !0)), e.set(o.formatter.formatChanged(\"lang\", t.setActive, !0)), e.clear;\n        }\n      };\n    }).each(function (t) {\n      return J_(n, t);\n    });\n  }\n  function nT(t, e) {\n    return {\n      type: \"makeshift\",\n      x: t,\n      y: e\n    };\n  }\n  function oT(t) {\n    return \"longpress\" === t.type || 0 === t.type.indexOf(\"touch\");\n  }\n  function rT(t, e) {\n    return \"contextmenu\" === e.type || \"longpress\" === e.type ? t.inline ? function (t) {\n      if (oT(t)) {\n        var e = t.touches[0];\n        return nT(e.pageX, e.pageY);\n      }\n      return nT(t.pageX, t.pageY);\n    }(e) : (n = t.getContentAreaContainer(), o = function (t) {\n      if (oT(t)) {\n        var e = t.touches[0];\n        return nT(e.clientX, e.clientY);\n      }\n      return nT(t.clientX, t.clientY);\n    }(e), r = nv.DOM.getPos(n), i = r.x, u = r.y, nT(o.x + i, o.y + u)) : zT(t);\n    var n, o, r, i, u;\n  }\n  function iT(t, e, n) {\n    switch (n) {\n      case \"node\":\n        return {\n          type: \"node\",\n          node: vt.some(Mt.fromDom((o = t).selection.getNode())),\n          root: Mt.fromDom(o.getBody())\n        };\n      case \"point\":\n        return rT(t, e);\n      case \"selection\":\n        return zT(t);\n    }\n    var o;\n  }\n  function uT(f, d, m, g, p, h) {\n    function t() {\n      var e,\n        n,\n        t,\n        o,\n        r,\n        i,\n        u,\n        a,\n        c,\n        s,\n        l = m();\n      t = l, o = g, r = p, u = !(y || v || b && x), c = iT(e = f, n = d, a = i = h), s = _lt({\n        bubble: Sc(0, \"point\" === a ? 12 : 0, jT),\n        layouts: UT,\n        overrides: {\n          maxWidthFunction: pO(),\n          maxHeightFunction: Nc()\n        }\n      }, c), j0(t, Sh.CLOSE_ON_EXECUTE, o, !0).map(function (t) {\n        n.preventDefault(), up.showMenuWithinBounds(r, {\n          anchor: s\n        }, {\n          menu: {\n            markers: Qp(\"normal\"),\n            highlightImmediately: u\n          },\n          data: t,\n          type: \"horizontal\"\n        }, function () {\n          return vt.some(a_(e, o.shared, \"node\" === i ? \"node\" : \"selection\"));\n        }), e.fire(V_);\n      });\n    }\n    var e,\n      n = ln(),\n      v = n.os.isiOS(),\n      b = n.os.isOSX(),\n      y = n.os.isAndroid(),\n      x = n.deviceType.isTouch();\n    (b || v) && \"node\" !== h ? (e = function e() {\n      (function (t) {\n        function e() {\n          lp.setEditorTimeout(t, function () {\n            t.selection.setRng(n);\n          }, 10), i();\n        }\n        var n = t.selection.getRng();\n        function o(t) {\n          t.preventDefault(), t.stopImmediatePropagation();\n        }\n        function r() {\n          return i();\n        }\n        t.once(\"touchend\", e), t.on(\"mousedown\", o, !0), t.once(\"longpresscancel\", r);\n        var i = function i() {\n          t.off(\"touchend\", e), t.off(\"longpresscancel\", r), t.off(\"mousedown\", o);\n        };\n      })(f), t();\n    }, function (t, e) {\n      var n = t.selection;\n      if (!(n.isCollapsed() || e.touches.length < 1)) {\n        var o = e.touches[0],\n          r = n.getRng();\n        return xs(t.getWin(), ms.domRange(r)).exists(function (t) {\n          return t.left <= o.clientX && t.right >= o.clientX && t.top <= o.clientY && t.bottom >= o.clientY;\n        });\n      }\n    }(f, d) ? e() : (f.once(\"selectionchange\", e), f.once(\"touchend\", function () {\n      return f.off(\"selectionchange\", e);\n    }))) : t();\n  }\n  function aT(t) {\n    return \"string\" == typeof t ? t.split(/[ ,]/) : t;\n  }\n  function cT(t) {\n    return t.getParam(\"contextmenu_never_use_native\", !1, \"boolean\");\n  }\n  function sT(t) {\n    return y(t) ? \"|\" === t : \"separator\" === t.type;\n  }\n  function lT(t, e) {\n    if (0 === e.length) return t;\n    var n = q(t).filter(function (t) {\n      return !sT(t);\n    }).fold(function () {\n      return [];\n    }, function (t) {\n      return [WT];\n    });\n    return t.concat(n).concat(e).concat([WT]);\n  }\n  function fT(t, e) {\n    return \"longpress\" !== e.type && (2 !== e.button || e.target === t.getBody() && \"\" === e.pointerType);\n  }\n  function dT(t, e) {\n    return fT(t, e) ? t.selection.getStart(!0) : e.target;\n  }\n  function mT(s, t, e) {\n    function n(t) {\n      return up.hide(i);\n    }\n    function o(c) {\n      var t;\n      cT(s) && c.preventDefault(), c.ctrlKey && !cT(s) || !1 === s.getParam(\"contextmenu\") || (t = function (t, e) {\n        var n = t.getParam(\"contextmenu_avoid_overlap\", \"\", \"string\"),\n          o = fT(t, e) ? \"selection\" : \"point\";\n        if (at(n)) {\n          var r = dT(t, e);\n          return Yb(Mt.fromDom(r), n) ? \"node\" : o;\n        }\n        return o;\n      }(s, c), (r() ? uT : function (t, e, n, o, r, i) {\n        var u = n(),\n          a = iT(t, e, i);\n        j0(u, Sh.CLOSE_ON_EXECUTE, o, !1).map(function (t) {\n          e.preventDefault(), up.showMenuAt(r, {\n            anchor: a\n          }, {\n            menu: {\n              markers: Qp(\"normal\")\n            },\n            data: t\n          });\n        });\n      })(s, c, function () {\n        var t,\n          e,\n          n,\n          o = dT(s, c),\n          r = s.ui.registry.getAll(),\n          i = (n = (e = s).ui.registry.getAll().contextMenus, vt.from(e.getParam(\"contextmenu\")).map(aT).getOrThunk(function () {\n            return F(aT(\"link linkchecker image imagetools table spellchecker configurepermanentpen\"), function (t) {\n              return Tt(n, t);\n            });\n          })),\n          u = r.contextMenus,\n          a = o;\n        return 0 < (t = R(i, function (o, t) {\n          return tt(u, t.toLowerCase()).map(function (t) {\n            var e = t.update(a);\n            if (y(e)) return lT(o, e.split(\" \"));\n            if (0 < e.length) {\n              var n = B(e, GT);\n              return lT(o, n);\n            }\n            return o;\n          }).getOrThunk(function () {\n            return o.concat([t]);\n          });\n        }, [])).length && sT(t[t.length - 1]) && t.pop(), t;\n      }, e, i, t));\n    }\n    var r = ln().deviceType.isTouch,\n      i = Tu(up.sketch({\n        dom: {\n          tag: \"div\"\n        },\n        lazySink: t,\n        onEscape: function onEscape() {\n          return s.focus();\n        },\n        onShow: function onShow() {\n          return e.setContextMenuState(!0);\n        },\n        onHide: function onHide() {\n          return e.setContextMenuState(!1);\n        },\n        fireDismissalEventInstead: {},\n        inlineBehaviours: ec([mm(\"dismissContextMenu\", [Cr(Yi(), function (t, e) {\n          bf.close(t), s.focus();\n        })])])\n      }));\n    s.on(\"init\", function () {\n      var t = \"ResizeEditor ScrollContent ScrollWindow longpresscancel\" + (r() ? \"\" : \" ResizeWindow\");\n      s.on(t, n), s.on(\"longpress contextmenu\", o);\n    });\n  }\n  function gT(e) {\n    return function (t) {\n      return t.translate(-e.left, -e.top);\n    };\n  }\n  function pT(e) {\n    return function (t) {\n      return t.translate(e.left, e.top);\n    };\n  }\n  function hT(n) {\n    return function (t, e) {\n      return R(n, function (t, e) {\n        return e(t);\n      }, kn(t, e));\n    };\n  }\n  function vT(t, e, n) {\n    return t.fold(hT([pT(n), gT(e)]), hT([gT(e)]), hT([]));\n  }\n  function bT(t, e, n) {\n    return t.fold(hT([pT(n)]), hT([]), hT([pT(e)]));\n  }\n  function yT(t, e, n) {\n    return t.fold(hT([]), hT([gT(n)]), hT([pT(e), gT(n)]));\n  }\n  function xT(t, e, n) {\n    var o = t.fold(function (t, e) {\n      return {\n        position: vt.some(\"absolute\"),\n        left: vt.some(t + \"px\"),\n        top: vt.some(e + \"px\")\n      };\n    }, function (t, e) {\n      return {\n        position: vt.some(\"absolute\"),\n        left: vt.some(t - n.left + \"px\"),\n        top: vt.some(e - n.top + \"px\")\n      };\n    }, function (t, e) {\n      return {\n        position: vt.some(\"fixed\"),\n        left: vt.some(t + \"px\"),\n        top: vt.some(e + \"px\")\n      };\n    });\n    return _lt({\n      right: vt.none(),\n      bottom: vt.none()\n    }, o);\n  }\n  function wT(t, i, u, a) {\n    function e(o, r) {\n      return function (t, e) {\n        var n = o(i, u, a);\n        return r(t.getOr(n.left), e.getOr(n.top));\n      };\n    }\n    return t.fold(e(yT, YT), e(bT, qT), e(vT, KT));\n  }\n  function ST(t, e) {\n    var n = ie(t, e);\n    return E(n) ? NaN : parseInt(n, 10);\n  }\n  function kT(t, e, n, o, r, i) {\n    var u,\n      a,\n      c,\n      s,\n      l,\n      f,\n      d = (u = n, a = o, l = ST(s = t.element, (c = e).leftAttr), f = ST(s, c.topAttr), (isNaN(l) || isNaN(f) ? vt.none() : vt.some(kn(l, f))).fold(function () {\n        return u;\n      }, function (t) {\n        return KT(t.left + a.left, t.top + a.top);\n      })),\n      m = (e.mustSnap ? JT : $T)(t, e, d, r, i),\n      g = vT(d, r, i),\n      p = e,\n      h = g,\n      v = t.element;\n    return oe(v, p.leftAttr, h.left + \"px\"), oe(v, p.topAttr, h.top + \"px\"), m.fold(function () {\n      return {\n        coord: KT(g.left, g.top),\n        extra: vt.none()\n      };\n    }, function (t) {\n      return {\n        coord: t.output,\n        extra: t.extra\n      };\n    });\n  }\n  function CT(t, c, s, l) {\n    return K(t, function (t) {\n      var e,\n        n,\n        o = t.sensor,\n        r = t.range.left,\n        i = t.range.top,\n        u = bT(c, e = s, n = l),\n        a = bT(o, e, n);\n      return Math.abs(u.left - a.left) <= r && Math.abs(u.top - a.top) <= i ? vt.some({\n        output: wT(t.output, c, s, l),\n        extra: t.extra\n      }) : vt.none();\n    });\n  }\n  function OT(t, e) {\n    var n;\n    t.getSystem().addToGui(e), Yt((n = e).element).filter(Ge).each(function (e) {\n      pe(e, \"z-index\").each(function (t) {\n        oe(e, ZT, t);\n      }), fe(e, \"z-index\", ge(n.element, \"z-index\"));\n    });\n  }\n  function _T(t) {\n    Yt(t.element).filter(Ge).each(function (e) {\n      ue(e, ZT).fold(function () {\n        return ve(e, \"z-index\");\n      }, function (t) {\n        return fe(e, \"z-index\", t);\n      }), ce(e, ZT);\n    }), t.getSystem().removeFromGui(t);\n  }\n  function TT(t, e, n) {\n    return t.getSystem().build(ly.sketch({\n      dom: {\n        styles: {\n          left: \"0px\",\n          top: \"0px\",\n          width: \"100%\",\n          height: \"100%\",\n          position: \"fixed\",\n          \"z-index\": \"1000000000000000\"\n        },\n        classes: [e]\n      },\n      events: n\n    }));\n  }\n  function ET(t, e) {\n    return {\n      bounds: t.getBounds(),\n      height: we(e.element),\n      width: Oe(e.element)\n    };\n  }\n  function DT(A, B, t, e, n) {\n    var o = t.update(e, n),\n      M = t.getStartData().getOrThunk(function () {\n        return ET(B, A);\n      });\n    o.each(function (t) {\n      var e,\n        n,\n        o,\n        r,\n        i,\n        u,\n        a,\n        c,\n        s,\n        l,\n        f,\n        d,\n        m,\n        g,\n        p,\n        h,\n        v,\n        b,\n        y,\n        x,\n        w,\n        S,\n        k,\n        C,\n        O,\n        _ = A,\n        T = M,\n        E = t,\n        D = (e = B).getTarget(_.element);\n      e.repositionTarget && (n = Ie(jt(_.element)), o = Uk(D), S = pe(w = D, \"left\"), k = pe(w, \"top\"), C = pe(w, \"position\"), O = function O(t, e, n) {\n        return (\"fixed\" === n ? KT : YT)(parseInt(t, 10), parseInt(e, 10));\n      }, r = (S.isSome() && k.isSome() && C.isSome() ? vt.some(O(S.getOrDie(), k.getOrDie(), C.getOrDie())) : vt.none()).getOrThunk(function () {\n        var t = ke(w);\n        return qT(t.left, t.top);\n      }), i = _, u = e.snaps, a = r, c = n, s = o, l = E, f = T, m = u.fold(function () {\n        var n,\n          o,\n          t = vT((n = l.left, o = l.top, a.fold(function (t, e) {\n            return YT(t + n, e + o);\n          }, function (t, e) {\n            return qT(t + n, e + o);\n          }, function (t, e) {\n            return KT(t + n, e + o);\n          })), c, s);\n        return KT(t.left, t.top);\n      }, function (e) {\n        var t = kT(i, e, a, l, c, s);\n        return t.extra.each(function (t) {\n          e.onSensor(i, t);\n        }), t.coord;\n      }), g = c, p = s, h = (d = f).bounds, v = bT(m, g, p), b = Wa(v.left, h.x, h.x + h.width - d.width), y = Wa(v.top, h.y, h.y + h.height - d.height), x = qT(b, y), me(D, xT(m.fold(function () {\n        var t = yT(x, g, p);\n        return YT(t.left, t.top);\n      }, rt(x), function () {\n        var t = vT(x, g, p);\n        return KT(t.left, t.top);\n      }), 0, o))), e.onDrag(_, D, E);\n    });\n  }\n  function AT(o, t, e, n) {\n    t.each(_T), e.snaps.each(function (t) {\n      var e, n;\n      e = t, ce(n = o.element, e.leftAttr), ce(n, e.topAttr);\n    });\n    var r = e.getTarget(o.element);\n    n.reset(), e.onDrop(o, r);\n  }\n  function BT(t) {\n    return function (e, n) {\n      function o(t) {\n        n.setStartData(ET(e, t));\n      }\n      return nu(V([Cr(ji(), function (t) {\n        n.getStartData().each(function () {\n          return o(t);\n        });\n      })], t(e, n, o), !0));\n    };\n  }\n  function MT(a, c, s) {\n    return [Cr(mi(), function (e, t) {\n      var n, o, r, i, u;\n      0 === t.event.raw.button && (t.stop(), r = {\n        drop: n = function n() {\n          return AT(e, vt.some(i), a, c);\n        },\n        delayDrop: (o = qb(n, 200)).schedule,\n        forceDrop: n,\n        move: function move(t) {\n          o.cancel(), DT(e, a, c, nE, t);\n        }\n      }, i = TT(e, a.blockerClass, (u = r, nu([Cr(mi(), u.forceDrop), Cr(hi(), u.drop), Cr(gi(), function (t, e) {\n        u.move(e.event);\n      }), Cr(pi(), u.delayDrop)]))), s(e), OT(e, i));\n    })];\n  }\n  function FT(a, c, s) {\n    function l(t) {\n      AT(t, f.get(), a, c), f.clear();\n    }\n    var f = gc();\n    return [Cr(si(), function (e, t) {\n      function n() {\n        return l(e);\n      }\n      t.stop();\n      var o,\n        r,\n        i,\n        u = TT(e, a.blockerClass, (r = o = n, i = function i(t) {\n          DT(e, a, c, rE, t);\n        }, nu([Cr(si(), r), Cr(fi(), o), Cr(di(), o), Cr(li(), function (t, e) {\n          i(e.event);\n        })])));\n      f.set(u), s(e), OT(e, u);\n    }), Cr(li(), function (t, e) {\n      e.stop(), DT(t, a, c, rE, e.event);\n    }), Cr(fi(), function (t, e) {\n      e.stop(), l(t);\n    }), Cr(di(), l)];\n  }\n  function IT(t, r, i, u, e, n) {\n    return t.fold(function () {\n      return aE.snap({\n        sensor: qT(i - 20, u - 20),\n        range: kn(e, n),\n        output: qT(vt.some(i), vt.some(u)),\n        extra: {\n          td: r\n        }\n      });\n    }, function (t) {\n      var e = i - 20,\n        n = u - 20,\n        o = t.element.dom.getBoundingClientRect();\n      return aE.snap({\n        sensor: qT(e, n),\n        range: kn(40, 40),\n        output: qT(vt.some(i - o.width / 2), vt.some(u - o.height / 2)),\n        extra: {\n          td: r\n        }\n      });\n    });\n  }\n  function RT(t, i, u) {\n    return {\n      getSnapPoints: t,\n      leftAttr: \"data-drag-left\",\n      topAttr: \"data-drag-top\",\n      onSensor: function onSensor(t, e) {\n        var n = e.td,\n          o = i.get(),\n          r = n;\n        o.exists(function (t) {\n          return zt(t, r);\n        }) || (i.set(n), u(n));\n      },\n      mustSnap: !0\n    };\n  }\n  function NT(t) {\n    return Hm(fp.sketch({\n      dom: {\n        tag: \"div\",\n        classes: [\"tox-selector\"]\n      },\n      buttonBehaviours: ec([aE.config({\n        mode: \"mouseOrTouch\",\n        blockerClass: \"blocker\",\n        snaps: t\n      }), vw.config({})]),\n      eventOrder: {\n        mousedown: [\"dragging\", \"alloy.base.behaviour\"],\n        touchstart: [\"dragging\", \"alloy.base.behaviour\"]\n      }\n    }));\n  }\n  function PT(a, n) {\n    function e(t) {\n      var e = He(t);\n      return IT(g.getOpt(n), t, e.x, e.y, e.width, e.height);\n    }\n    function o(t) {\n      var e = He(t);\n      return IT(p.getOpt(n), t, e.right, e.bottom, e.width, e.height);\n    }\n    function r(t, i, e, u) {\n      var n = e(i);\n      aE.snapTo(t, n), function (t) {\n        var e = i.dom.getBoundingClientRect();\n        ve(t.element, \"display\");\n        var n = Xt(Mt.fromDom(a.getBody())).dom.innerHeight,\n          o = e[u] < 0,\n          r = e[u] > n;\n        (o || r) && fe(t.element, \"display\", \"none\");\n      }(t);\n    }\n    function i(t) {\n      return r(h, t, e, \"top\");\n    }\n    function u(t) {\n      return r(v, t, o, \"bottom\");\n    }\n    var c = Po([]),\n      s = Po([]),\n      t = Po(!1),\n      l = gc(),\n      f = gc(),\n      d = RT(function () {\n        return B(c.get(), e);\n      }, l, function (e) {\n        f.get().each(function (t) {\n          a.fire(\"TableSelectorChange\", {\n            start: e,\n            finish: t\n          });\n        });\n      }),\n      m = RT(function () {\n        return B(s.get(), o);\n      }, f, function (e) {\n        l.get().each(function (t) {\n          a.fire(\"TableSelectorChange\", {\n            start: t,\n            finish: e\n          });\n        });\n      }),\n      g = NT(d),\n      p = NT(m),\n      h = Tu(g.asSpec()),\n      v = Tu(p.asSpec());\n    ln().deviceType.isTouch() && (a.on(\"TableSelectionChange\", function (e) {\n      t.get() || (Ns(n, h), Ns(n, v), t.set(!0)), l.set(e.start), f.set(e.finish), e.otherCells.each(function (t) {\n        c.set(t.upOrLeftCells), s.set(t.downOrRightCells), i(e.start), u(e.finish);\n      });\n    }), a.on(\"ResizeEditor ResizeWindow ScrollContent\", function () {\n      l.get().each(i), f.get().each(u);\n    }), a.on(\"TableSelectionClear\", function () {\n      t.get() && (Vs(h), Vs(v), t.set(!1)), l.clear(), f.clear();\n    }));\n  }\n  var VT,\n    HT,\n    LT = {\n      name: \"lineheight\",\n      text: \"Line height\",\n      icon: \"line-height\",\n      getOptions: function getOptions(t) {\n        return t.getParam(\"lineheight_formats\", \"1 1.1 1.2 1.3 1.4 1.5 2\", \"string\").split(\" \");\n      },\n      hash: function hash(t) {\n        return r = [\"fixed\", \"relative\", \"empty\"], vt.from(q_.exec(t)).bind(function (t) {\n          var e = Number(t[1]),\n            n = t[2],\n            o = n;\n          return d(r, function (t) {\n            return d(Y_[t], function (t) {\n              return o === t;\n            });\n          }) ? vt.some({\n            value: e,\n            unit: n\n          }) : vt.none();\n        }).map(function (t) {\n          return t.value + t.unit;\n        }).getOr(t);\n        var r;\n      },\n      display: h,\n      watcher: function watcher(t, e, n) {\n        return t.formatter.formatChanged(\"lineheight\", n, !1, {\n          value: e\n        }).unbind;\n      },\n      getCurrent: function getCurrent(t) {\n        return vt.from(t.queryCommandValue(\"LineHeight\"));\n      },\n      setCurrent: function setCurrent(t, e) {\n        return t.execCommand(\"LineHeight\", !1, e);\n      }\n    },\n    zT = function zT(t) {\n      return {\n        type: \"selection\",\n        root: Mt.fromDom(t.selection.getNode())\n      };\n    },\n    UT = {\n      onLtr: function onLtr() {\n        return [$a, Xa, Ya, qa, Ka, Ja, cp, sp, Mm, Am, Bm, Dm];\n      },\n      onRtl: function onRtl() {\n        return [$a, Ya, Xa, Ka, qa, Ja, cp, sp, Bm, Dm, Mm, Am];\n      }\n    },\n    jT = {\n      valignCentre: [],\n      alignCentre: [],\n      alignLeft: [\"tox-pop--align-left\"],\n      alignRight: [\"tox-pop--align-right\"],\n      right: [\"tox-pop--right\"],\n      left: [\"tox-pop--left\"],\n      bottom: [\"tox-pop--bottom\"],\n      top: [\"tox-pop--top\"]\n    },\n    WT = {\n      type: \"separator\"\n    },\n    GT = function GT(e) {\n      function t(t) {\n        return {\n          text: t.text,\n          icon: t.icon,\n          disabled: t.disabled,\n          shortcut: t.shortcut\n        };\n      }\n      var n;\n      if (y(e)) return e;\n      switch (e.type) {\n        case \"separator\":\n          return WT;\n        case \"submenu\":\n          return _lt(_lt({\n            type: \"nestedmenuitem\"\n          }, t(e)), {\n            getSubmenuItems: function getSubmenuItems() {\n              var t = e.getSubmenuItems();\n              return y(t) ? t : B(t, GT);\n            }\n          });\n        default:\n          return _lt(_lt({\n            type: \"menuitem\"\n          }, t(e)), {\n            onAction: (n = e.onAction, function () {\n              return n();\n            })\n          });\n      }\n    },\n    XT = Vo([{\n      offset: [\"x\", \"y\"]\n    }, {\n      absolute: [\"x\", \"y\"]\n    }, {\n      fixed: [\"x\", \"y\"]\n    }]),\n    YT = XT.offset,\n    qT = XT.absolute,\n    KT = XT.fixed,\n    JT = function JT(t, e, l, f, d) {\n      var n = e.getSnapPoints(t);\n      return CT(n, l, f, d).orThunk(function () {\n        return R(n, function (e, n) {\n          var t,\n            o,\n            r,\n            i,\n            u,\n            a,\n            c,\n            s = (t = n.sensor, n.range.left, n.range.top, i = bT(l, o = f, r = d), u = bT(t, o, r), a = Math.abs(i.left - u.left), c = Math.abs(i.top - u.top), kn(a, c));\n          return e.deltas.fold(function () {\n            return {\n              deltas: vt.some(s),\n              snap: vt.some(n)\n            };\n          }, function (t) {\n            return (s.left + s.top) / 2 <= (t.left + t.top) / 2 ? {\n              deltas: vt.some(s),\n              snap: vt.some(n)\n            } : e;\n          });\n        }, {\n          deltas: vt.none(),\n          snap: vt.none()\n        }).snap.map(function (t) {\n          return {\n            output: wT(t.output, l, f, d),\n            extra: t.extra\n          };\n        });\n      });\n    },\n    $T = function $T(t, e, n, o, r) {\n      return CT(e.getSnapPoints(t), n, o, r);\n    },\n    QT = Object.freeze({\n      __proto__: null,\n      snapTo: function snapTo(t, e, n, o) {\n        var r,\n          i,\n          u,\n          a = e.getTarget(t.element);\n        e.repositionTarget && (r = Ie(jt(t.element)), i = Uk(a), me(a, xT({\n          coord: wT((u = o).output, u.output, r, i),\n          extra: u.extra\n        }.coord, 0, i)));\n      }\n    }),\n    ZT = \"data-initial-z-index\",\n    tE = To(\"snaps\", [mo(\"getSnapPoints\"), Ju(\"onSensor\"), mo(\"leftAttr\"), mo(\"topAttr\"), Eo(\"lazyViewport\", Fn), Eo(\"mustSnap\", !1)]),\n    eE = [Eo(\"useFixed\", T), mo(\"blockerClass\"), Eo(\"getTarget\", h), Eo(\"onDrag\", st), Eo(\"repositionTarget\", !0), Eo(\"onDrop\", st), Io(\"getBounds\", Fn), tE],\n    nE = Object.freeze({\n      __proto__: null,\n      getData: function getData(t) {\n        return vt.from(kn(t.x, t.y));\n      },\n      getDelta: function getDelta(t, e) {\n        return kn(e.left - t.left, e.top - t.top);\n      }\n    }),\n    oE = V(V([], eE, !0), [ta(\"dragger\", {\n      handlers: BT(MT)\n    })], !1),\n    rE = Object.freeze({\n      __proto__: null,\n      getData: function getData(t) {\n        var e,\n          n = t.raw.touches;\n        return 1 === n.length ? (e = n[0], vt.some(kn(e.clientX, e.clientY))) : vt.none();\n      },\n      getDelta: function getDelta(t, e) {\n        return kn(e.left - t.left, e.top - t.top);\n      }\n    }),\n    iE = V(V([], eE, !0), [ta(\"dragger\", {\n      handlers: BT(FT)\n    })], !1),\n    uE = V(V([], eE, !0), [ta(\"dragger\", {\n      handlers: BT(function (t, e, n) {\n        return V(V([], MT(t, e, n), !0), FT(t, e, n), !0);\n      })\n    })], !1),\n    aE = wa({\n      branchKey: \"mode\",\n      branches: Object.freeze({\n        __proto__: null,\n        mouse: oE,\n        touch: iE,\n        mouseOrTouch: uE\n      }),\n      name: \"dragging\",\n      active: {\n        events: function events(t, e) {\n          return t.dragger.handlers(t, e);\n        }\n      },\n      extra: {\n        snap: function snap(t) {\n          return {\n            sensor: t.sensor,\n            range: t.range,\n            output: t.output,\n            extra: vt.from(t.extra)\n          };\n        }\n      },\n      state: Object.freeze({\n        __proto__: null,\n        init: function init() {\n          var i = vt.none(),\n            e = vt.none(),\n            t = rt({});\n          return wu({\n            readState: t,\n            reset: function reset() {\n              i = vt.none(), e = vt.none();\n            },\n            update: function update(r, t) {\n              return r.getData(t).bind(function (t) {\n                return e = r, n = t, o = i.map(function (t) {\n                  return e.getDelta(t, n);\n                }), i = vt.some(n), o;\n                var e, n, o;\n              });\n            },\n            getStartData: function getStartData() {\n              return e;\n            },\n            setStartData: function setStartData(t) {\n              e = vt.some(t);\n            }\n          });\n        }\n      }),\n      apis: QT\n    });\n  function cE(t, e, n) {\n    var o,\n      r,\n      i,\n      u,\n      a,\n      c,\n      s = Mt.fromDom(t.getContainer());\n    J((o = t, r = e, i = n, u = xe(s), a = Ce(s), (c = {}).height = t_(u + r.top, dh(o), gh(o)), i === VT.Both && (c.width = t_(a + r.left, fh(o), mh(o))), c), function (t, e) {\n      return fe(s, e, ZO(t)), 0;\n    }), t.fire(\"ResizeEditor\");\n  }\n  function sE(t, e, n, o) {\n    return cE(t, kn(20 * n, 20 * o), e), vt.some(!0);\n  }\n  function lE(t, e) {\n    var n, o, r, i, u, a, c, s, l, f, d, m, g, p, h, v;\n    return {\n      dom: {\n        tag: \"div\",\n        classes: [\"tox-statusbar\"]\n      },\n      components: (v = [], t.getParam(\"elementpath\", !0, \"boolean\") && v.push((g = t, h = e, (p = {}).delimiter || (p.delimiter = \"\\xbb\"), {\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-statusbar__path\"],\n          attributes: {\n            role: \"navigation\"\n          }\n        },\n        behaviours: ec([Fg.config({\n          mode: \"flow\",\n          selector: \"div[role=button]\"\n        }), gd.config({\n          disabled: h.isDisabled\n        }), pv(), py.config({}), Rg.config({}), mm(\"elementPathEvents\", [ou(function (r, t) {\n          g.shortcuts.add(\"alt+F11\", \"focus statusbar elementpath\", function () {\n            return Fg.focusIn(r);\n          }), g.on(\"NodeChange\", function (t) {\n            var e,\n              o,\n              n = function (t) {\n                for (var e = [], n = t.length; 0 < n--;) {\n                  var o = t[n];\n                  if (1 === o.nodeType && !function (t) {\n                    if (1 === t.nodeType) {\n                      if (\"BR\" === t.nodeName || t.getAttribute(\"data-mce-bogus\")) return 1;\n                      if (\"bookmark\" === t.getAttribute(\"data-mce-type\")) return 1;\n                    }\n                  }(o)) {\n                    var r = g.fire(\"ResolveName\", {\n                      name: o.nodeName.toLowerCase(),\n                      target: o\n                    });\n                    if (r.isDefaultPrevented() || e.push({\n                      name: r.name,\n                      element: o\n                    }), r.isPropagationStopped()) break;\n                  }\n                }\n                return e;\n              }(t.parents);\n            0 < n.length ? Rg.set(r, (e = B(n || [], function (e, t) {\n              return fp.sketch({\n                dom: {\n                  tag: \"div\",\n                  classes: [\"tox-statusbar__path-item\"],\n                  attributes: {\n                    role: \"button\",\n                    \"data-index\": t,\n                    \"tab-index\": -1,\n                    \"aria-level\": t + 1\n                  },\n                  innerHtml: e.name\n                },\n                action: function action(t) {\n                  g.focus(), g.selection.select(e.element), g.nodeChanged();\n                },\n                buttonBehaviours: ec([$v(h.isDisabled), pv()])\n              });\n            }), o = {\n              dom: {\n                tag: \"div\",\n                classes: [\"tox-statusbar__path-divider\"],\n                attributes: {\n                  \"aria-hidden\": !0\n                },\n                innerHtml: \" \" + p.delimiter + \" \"\n              }\n            }, R(e.slice(1), function (t, e) {\n              var n = t;\n              return n.push(o), n.push(e), n;\n            }, [e[0]]))) : Rg.set(r, []);\n          });\n        })])]),\n        components: []\n      })), t.hasPlugin(\"wordcount\") && v.push((f = t, d = e, fp.sketch({\n        dom: {\n          tag: \"button\",\n          classes: [\"tox-statusbar__wordcount\"]\n        },\n        components: [],\n        buttonBehaviours: ec([$v(d.isDisabled), pv(), py.config({}), Rg.config({}), Df.config({\n          store: {\n            mode: \"memory\",\n            initialValue: {\n              mode: \"words\",\n              count: {\n                words: 0,\n                characters: 0\n              }\n            }\n          }\n        }), mm(\"wordcount-events\", [uu(function (t) {\n          var e = Df.getValue(t),\n            n = \"words\" === e.mode ? \"characters\" : \"words\";\n          Df.setValue(t, {\n            mode: n,\n            count: e.count\n          }), b(t, e.count, n);\n        }), ou(function (n) {\n          f.on(\"wordCountUpdate\", function (t) {\n            var e = Df.getValue(n).mode;\n            Df.setValue(n, {\n              mode: e,\n              count: t.wordCount\n            }), b(n, t.wordCount, e);\n          });\n        })])]),\n        eventOrder: ((m = {})[Ii()] = [\"disabling\", \"alloy.base.behaviour\", \"wordcount-events\"], m)\n      }))), t.getParam(\"branding\", !0, \"boolean\") && v.push({\n        dom: {\n          tag: \"span\",\n          classes: [\"tox-statusbar__branding\"],\n          innerHtml: '<a href=\"https://www.tiny.cloud/?utm_campaign=editor_referral&amp;utm_medium=poweredby&amp;utm_source=tinymce&amp;utm_content=v5\" rel=\"noopener\" target=\"_blank\" tabindex=\"-1\" aria-label=\"' + (l = dp.translate([\"Powered by {0}\", \"Tiny\"])) + '\">' + l + \"</a>\"\n        }\n      }), n = 0 < v.length ? [{\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-statusbar__text-container\"]\n        },\n        components: v\n      }] : [], i = e, a = !(u = r = t).hasPlugin(\"autoresize\"), o = (s = !1 === (c = u.getParam(\"resize\", a)) ? VT.None : \"both\" === c ? VT.Both : VT.Vertical) === VT.None ? vt.none() : vt.some(Xm(\"resize-handle\", {\n        tag: \"div\",\n        classes: [\"tox-statusbar__resize-handle\"],\n        attributes: {\n          title: i.translate(\"Resize\")\n        },\n        behaviours: [aE.config({\n          mode: \"mouse\",\n          repositionTarget: !1,\n          onDrag: function onDrag(t, e, n) {\n            return cE(r, n, s);\n          },\n          blockerClass: \"tox-blocker\"\n        }), Fg.config({\n          mode: \"special\",\n          onLeft: function onLeft() {\n            return sE(r, s, -1, 0);\n          },\n          onRight: function onRight() {\n            return sE(r, s, 1, 0);\n          },\n          onUp: function onUp() {\n            return sE(r, s, 0, -1);\n          },\n          onDown: function onDown() {\n            return sE(r, s, 0, 1);\n          }\n        }), py.config({}), Vg.config({})]\n      }, i.icons)), n.concat(o.toArray()))\n    };\n    function b(t, e, n) {\n      return Rg.set(t, [ri(d.translate([\"{0} \" + n, e[n]]))]);\n    }\n  }\n  function fE(d) {\n    function m() {\n      return i.bind(FO.getHeader);\n    }\n    function g() {\n      return Nn.value(y);\n    }\n    function p() {\n      return i.bind(function (t) {\n        return FO.getThrobber(t);\n      }).getOrDie(\"Could not find throbber element\");\n    }\n    var t,\n      e,\n      n,\n      o,\n      r = d.inline,\n      h = r ? P_ : N_,\n      v = dv(d) ? q1 : V1,\n      i = vt.none(),\n      u = ln(),\n      a = u.browser.isIE() ? [\"tox-platform-ie\"] : [],\n      c = u.deviceType.isTouch() ? [\"tox-platform-touch\"] : [],\n      s = av(d),\n      l = lv(d),\n      f = dp.isRtl() ? {\n        attributes: {\n          dir: \"rtl\"\n        }\n      } : {},\n      b = {\n        attributes: ((t = {})[ns] = s ? Oc.BottomToTop : Oc.TopToBottom, t)\n      },\n      y = Tu((e = zt(bn(), l) && \"grid\" === ge(l, \"display\"), n = {\n        dom: _lt({\n          tag: \"div\",\n          classes: [\"tox\", \"tox-silver-sink\", \"tox-tinymce-aux\"].concat(a).concat(c)\n        }, f),\n        behaviours: ec([ff.config({\n          useFixed: function useFixed() {\n            return v.isDocked(m);\n          }\n        })])\n      }, o = {\n        dom: {\n          styles: {\n            width: document.body.clientWidth + \"px\"\n          }\n        },\n        events: nu([Cr(Wi(), function () {\n          fe(J.element, \"width\", document.body.clientWidth + \"px\");\n        })])\n      }, Yo(n, e ? o : {}))),\n      x = Hm({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-anchorbar\"]\n        }\n      }),\n      w = Lk(y, d, function () {\n        return i.bind(function (t) {\n          return x.getOpt(t);\n        }).getOrDie(\"Could not find a anchor bar element\");\n      }),\n      S = FO.parts.menubar({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-menubar\"]\n        },\n        backstage: w,\n        onEscape: function onEscape() {\n          d.focus();\n        }\n      }),\n      k = iv(d),\n      C = FO.parts.toolbar(_lt({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-toolbar\"]\n        },\n        getSink: g,\n        providers: w.shared.providers,\n        onEscape: function onEscape() {\n          d.focus();\n        },\n        type: k,\n        lazyToolbar: function lazyToolbar() {\n          return i.bind(function (t) {\n            return FO.getToolbar(t);\n          }).getOrDie(\"Could not find more toolbar element\");\n        },\n        lazyHeader: function lazyHeader() {\n          return m().getOrDie(\"Could not find header element\");\n        }\n      }, b)),\n      O = FO.parts[\"multiple-toolbar\"]({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-toolbar-overlord\"]\n        },\n        providers: w.shared.providers,\n        onEscape: function onEscape() {\n          d.focus();\n        },\n        type: k\n      }),\n      _ = FO.parts.socket({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-edit-area\"]\n        }\n      }),\n      T = FO.parts.sidebar({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-sidebar\"]\n        }\n      }),\n      E = FO.parts.throbber({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-throbber\"]\n        },\n        backstage: w\n      }),\n      D = d.getParam(\"statusbar\", !0, \"boolean\") && !r ? vt.some(lE(d, w.shared.providers)) : vt.none(),\n      A = {\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-sidebar-wrap\"]\n        },\n        components: [_, T]\n      },\n      B = rv(d),\n      M = hh(d),\n      F = ph(d),\n      I = FO.parts.header({\n        dom: _lt({\n          tag: \"div\",\n          classes: [\"tox-editor-header\"]\n        }, b),\n        components: ft([F ? [S] : [], B ? [O] : M ? [C] : [], sv(d) ? [] : [x.asSpec()]]),\n        sticky: dv(d),\n        editor: d,\n        sharedBackstage: w.shared\n      }),\n      R = ft([s ? [] : [I], r ? [] : [A], s ? [I] : []]),\n      N = ft([[{\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-editor-container\"]\n        },\n        components: R\n      }], r ? [] : D.toArray(), [E]]),\n      P = fv(d),\n      V = _lt(_lt({\n        role: \"application\"\n      }, dp.isRtl() ? {\n        dir: \"rtl\"\n      } : {}), P ? {\n        \"aria-hidden\": \"true\"\n      } : {}),\n      H = Tu(FO.sketch({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox\", \"tox-tinymce\"].concat(r ? [\"tox-tinymce-inline\"] : []).concat(s ? [\"tox-tinymce--toolbar-bottom\"] : []).concat(c).concat(a),\n          styles: _lt({\n            visibility: \"hidden\"\n          }, P ? {\n            opacity: \"0\",\n            border: \"0\"\n          } : {}),\n          attributes: V\n        },\n        components: N,\n        behaviours: ec([pv(), gd.config({\n          disableClass: \"tox-tinymce--disabled\"\n        }), Fg.config({\n          mode: \"cyclic\",\n          selector: \".tox-menubar, .tox-toolbar, .tox-toolbar__primary, .tox-toolbar__overflow--open, .tox-sidebar__overflow--open, .tox-statusbar__path, .tox-statusbar__wordcount, .tox-statusbar__branding a, .tox-statusbar__resize-handle\"\n        })])\n      })),\n      i = vt.some(H);\n    d.shortcuts.add(\"alt+F9\", \"focus menubar\", function () {\n      FO.focusMenubar(H);\n    }), d.shortcuts.add(\"alt+F10\", \"focus toolbar\", function () {\n      FO.focusToolbar(H);\n    }), d.addCommand(\"ToggleToolbarDrawer\", function () {\n      FO.toggleToolbarDrawer(H);\n    }), d.addQueryStateHandler(\"ToggleToolbarDrawer\", function () {\n      return FO.isToolbarDrawerToggled(H);\n    });\n    var L,\n      z,\n      U,\n      j,\n      W,\n      G,\n      X,\n      Y,\n      q,\n      K = ey(H),\n      J = ey(y);\n    function $() {\n      var t,\n        e,\n        n,\n        o,\n        r,\n        i,\n        u = ZO((o = sh(n = e = d), r = dh(n), i = gh(n), QO(o).map(function (t) {\n          return t_(t, r, i);\n        }).getOr(sh(e)))),\n        a = ZO(e_(t = d).getOr(lh(t)));\n      return d.inline || (he(\"div\", \"width\", a) && fe(H.element, \"width\", a), he(\"div\", \"height\", u) ? fe(H.element, \"height\", u) : fe(H.element, \"height\", \"200px\")), u;\n    }\n    return L = d, z = K, U = J, j = Sa(), W = pc(j, \"touchstart\", tt), G = pc(j, \"touchmove\", function (t) {\n      return Q(zi(), t);\n    }), X = pc(j, \"touchend\", function (t) {\n      return Q(Ui(), t);\n    }), Y = pc(j, \"mousedown\", tt), q = pc(j, \"mouseup\", function (t) {\n      0 === t.raw.button && Z(wf(), {\n        target: t.target\n      });\n    }), L.on(\"PostRender\", function () {\n      L.on(\"click\", et), L.on(\"tap\", et), L.on(\"mouseup\", nt), L.on(\"mousedown\", ot), L.on(\"ScrollWindow\", rt), L.on(\"ResizeWindow\", it), L.on(\"ResizeEditor\", ut), L.on(\"AfterProgressState\", at), L.on(\"DismissPopups\", ct);\n    }), L.on(\"remove\", function () {\n      L.off(\"click\", et), L.off(\"tap\", et), L.off(\"mouseup\", nt), L.off(\"mousedown\", ot), L.off(\"ScrollWindow\", rt), L.off(\"ResizeWindow\", it), L.off(\"ResizeEditor\", ut), L.off(\"AfterProgressState\", at), L.off(\"DismissPopups\", ct), Y.unbind(), W.unbind(), G.unbind(), X.unbind(), q.unbind();\n    }), L.on(\"detach\", function () {\n      zs(z), zs(U), z.destroy(), U.destroy();\n    }), {\n      mothership: K,\n      uiMothership: J,\n      backstage: w,\n      renderUI: function renderUI() {\n        var o, r;\n        v.setup(d, w.shared, m), eT(d, w), mT(d, g, w), r = (o = d).ui.registry.getAll().sidebars, St(Ct(r), function (e) {\n          function n() {\n            return mt(vt.from(o.queryCommandValue(\"ToggleSidebar\")), e);\n          }\n          var t = r[e];\n          o.ui.registry.addToggleButton(e, {\n            icon: t.icon,\n            tooltip: t.tooltip,\n            onAction: function onAction(t) {\n              o.execCommand(\"ToggleSidebar\", !1, e), t.setActive(n());\n            },\n            onSetup: function onSetup(t) {\n              function e() {\n                return t.setActive(n());\n              }\n              return o.on(\"ToggleSidebar\", e), function () {\n                o.off(\"ToggleSidebar\", e);\n              };\n            }\n          });\n        }), SC(d, p, w.shared), dt(d.getParam(\"toolbar_groups\", {}, \"object\"), function (t, e) {\n          d.ui.registry.addGroupToolbarButton(e, t);\n        });\n        var t,\n          e = d.ui.registry.getAll(),\n          n = e.buttons,\n          i = e.menuItems,\n          u = e.contextToolbars,\n          a = e.sidebars,\n          c = vh(d),\n          s = {\n            menuItems: i,\n            menus: (t = d.getParam(\"menu\")) ? dt(t, function (t) {\n              return _lt(_lt({}, t), {\n                items: t.items\n              });\n            }) : {},\n            menubar: d.getParam(\"menubar\"),\n            toolbar: c.getOrThunk(function () {\n              return d.getParam(\"toolbar\", !0);\n            }),\n            allowToolbarGroups: k === bh.floating,\n            buttons: n,\n            sidebar: a\n          };\n        m_(d, u, y, {\n          backstage: w\n        }), PT(d, y);\n        var l = d.getElement(),\n          f = $();\n        return h.render(d, {\n          mothership: K,\n          uiMothership: J,\n          outerContainer: H\n        }, s, w, {\n          targetNode: l,\n          height: f\n        });\n      },\n      getUi: function getUi() {\n        return {\n          channels: {\n            broadcastAll: J.broadcast,\n            broadcastOn: J.broadcastOn,\n            register: st\n          }\n        };\n      }\n    };\n    function Q(e, n) {\n      St([z, U], function (t) {\n        t.broadcastEvent(e, n);\n      });\n    }\n    function Z(e, n) {\n      St([z, U], function (t) {\n        t.broadcastOn([e], n);\n      });\n    }\n    function tt(t) {\n      return Z(yf(), {\n        target: t.target\n      });\n    }\n    function et(t) {\n      return Z(yf(), {\n        target: Mt.fromDom(t.target)\n      });\n    }\n    function nt(t) {\n      0 === t.button && Z(wf(), {\n        target: Mt.fromDom(t.target)\n      });\n    }\n    function ot() {\n      St(L.editorManager.get(), function (t) {\n        L !== t && t.fire(\"DismissPopups\", {\n          relatedTarget: L\n        });\n      });\n    }\n    function rt(t) {\n      return Q(ji(), Mc(t));\n    }\n    function it(t) {\n      Z(xf(), {}), Q(Wi(), Mc(t));\n    }\n    function ut() {\n      return Z(xf(), {});\n    }\n    function at(t) {\n      t.state && Z(yf(), {\n        target: Mt.fromDom(L.getContainer())\n      });\n    }\n    function ct(t) {\n      Z(yf(), {\n        target: Mt.fromDom(t.relatedTarget.getContainer())\n      });\n    }\n  }\n  function dE(e) {\n    return ar(\"items\", \"items\", jn(), eo(io(function (t) {\n      return ao(\"Checking item of \" + e, AD, t).fold(function (t) {\n        return Nn.error(ur(t));\n      }, function (t) {\n        return Nn.value(t);\n      });\n    })));\n  }\n  function mE(t) {\n    return y(t.type) && y(t.name);\n  }\n  function gE(t) {\n    return {\n      internalDialog: co(ao(\"dialog\", VD, t)),\n      dataValidator: (e = H(F(zD(t), mE), function (e) {\n        return vt.from(UD[e.type]).fold(function () {\n          return [];\n        }, function (t) {\n          return [go(e.name, t)];\n        });\n      }), $o(e)),\n      initialData: t.initialData\n    };\n    var e;\n  }\n  function pE(t) {\n    var n = [],\n      o = {};\n    return J(t, function (t, e) {\n      t.fold(function () {\n        n.push(e);\n      }, function (t) {\n        o[e] = t;\n      });\n    }), 0 < n.length ? Nn.error(n) : Nn.value(o);\n  }\n  function hE(t, e) {\n    fe(t, \"height\", e + \"px\"), ln().browser.isIE() ? ve(t, \"flex-basis\") : fe(t, \"flex-basis\", e + \"px\");\n  }\n  function vE(t, d, e) {\n    Fu(t, '[role=\"dialog\"]').each(function (f) {\n      Iu(f, '[role=\"tablist\"]').each(function (l) {\n        e.get().map(function (t) {\n          return fe(d, \"height\", \"0\"), fe(d, \"flex-basis\", \"0\"), Math.min(t, (n = d, o = l, r = Gt(e = f).dom, i = \"fixed\" === ge(Fu(e, \".tox-dialog-wrap\").getOr(e), \"position\") ? Math.max(r.clientHeight, window.innerHeight) : Math.max(r.offsetHeight, r.scrollHeight), u = xe(n), a = n.dom.offsetLeft >= o.dom.offsetLeft + Ce(o) ? Math.max(xe(o), u) : u, c = parseInt(ge(e, \"margin-top\"), 10) || 0, s = parseInt(ge(e, \"margin-bottom\"), 10) || 0, i - (xe(e) + c + s - a)));\n          var e, n, o, r, i, u, a, c, s;\n        }).each(function (t) {\n          hE(d, t);\n        });\n      });\n    });\n  }\n  function bE(t) {\n    return Iu(t, '[role=\"tabpanel\"]');\n  }\n  function yE(t, n) {\n    function o(t) {\n      var e = pE(Df.getValue(t)).getOr({}),\n        n = i.get(),\n        o = Yo(n, e);\n      i.set(o);\n    }\n    function r(t) {\n      var e = i.get();\n      Df.setValue(t, e);\n    }\n    var u,\n      a,\n      i = Po({}),\n      c = Po(null),\n      e = B(t.tabs, function (t) {\n        return {\n          value: t.name,\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-dialog__body-nav-item\"],\n            innerHtml: n.shared.providers.translate(t.title)\n          },\n          view: function view() {\n            return [nS.sketch(function (e) {\n              return {\n                dom: {\n                  tag: \"div\",\n                  classes: [\"tox-form\"]\n                },\n                components: B(t.items, function (t) {\n                  return hk(e, t, n);\n                }),\n                formBehaviours: ec([Fg.config({\n                  mode: \"acyclic\",\n                  useTabstopAt: O(p0)\n                }), mm(\"TabView.form.events\", [ou(r), ru(o)]), ic.config({\n                  channels: lr([{\n                    key: QD,\n                    value: {\n                      onReceive: o\n                    }\n                  }, {\n                    key: ZD,\n                    value: {\n                      onReceive: r\n                    }\n                  }])\n                })])\n              };\n            })];\n          }\n        };\n      }),\n      s = (u = e, a = gc(), {\n        extraEvents: [ou(function (t) {\n          var o = t.element;\n          bE(o).each(function (e) {\n            var n;\n            fe(e, \"visibility\", \"hidden\"), t.getSystem().getByDom(e).toOptional().each(function (t) {\n              var o, r, i;\n              Y(G((r = e, i = t, B(o = u, function (t, e) {\n                Rg.set(i, o[e].view());\n                var n = r.dom.getBoundingClientRect();\n                return Rg.set(i, []), n.height;\n              })), function (t, e) {\n                return e < t ? -1 : t < e ? 1 : 0;\n              })).fold(a.clear, a.set);\n            }), vE(o, e, a), ve(e, \"visibility\"), n = t, Y(u).each(function (t) {\n              return $D.showTab(n, t.value);\n            }), lp.requestAnimationFrame(function () {\n              vE(o, e, a);\n            });\n          });\n        }), Cr(Wi(), function (t) {\n          var e = t.element;\n          bE(e).each(function (t) {\n            vE(e, t, a);\n          });\n        }), Cr(Ty, function (t, e) {\n          var r = t.element;\n          bE(r).each(function (e) {\n            var t = Oa(gn(e));\n            fe(e, \"visibility\", \"hidden\");\n            var n = pe(e, \"height\").map(function (t) {\n              return parseInt(t, 10);\n            });\n            ve(e, \"height\"), ve(e, \"flex-basis\");\n            var o = e.dom.getBoundingClientRect().height;\n            n.forall(function (t) {\n              return t < o;\n            }) ? (a.set(o), vE(r, e, a)) : n.each(function (t) {\n              hE(e, t);\n            }), ve(e, \"visibility\"), t.each(ka);\n          });\n        })],\n        selectFirst: !1\n      });\n    return $D.sketch({\n      dom: {\n        tag: \"div\",\n        classes: [\"tox-dialog__body\"]\n      },\n      onChangeTab: function onChangeTab(t, e, n) {\n        var o = Df.getValue(e);\n        br(t, _y, {\n          name: o,\n          oldName: c.get()\n        }), c.set(o);\n      },\n      tabs: e,\n      components: [$D.parts.tabbar({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-dialog__body-nav\"]\n        },\n        components: [YD.parts.tabs({})],\n        markers: {\n          tabClass: \"tox-tab\",\n          selectedClass: \"tox-dialog__body-nav-item--active\"\n        },\n        tabbarBehaviours: ec([py.config({})])\n      }), $D.parts.tabview({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-dialog__body-content\"]\n        }\n      })],\n      selectFirst: s.selectFirst,\n      tabSectionBehaviours: ec([mm(\"tabpanel\", s.extraEvents), Fg.config({\n        mode: \"acyclic\"\n      }), cd.config({\n        find: function find(t) {\n          return Y($D.getViewItems(t));\n        }\n      }), Df.config({\n        store: {\n          mode: \"manual\",\n          getValue: function getValue(t) {\n            return t.getSystem().broadcastOn([QD], {}), i.get();\n          },\n          setValue: function setValue(t, e) {\n            i.set(e), t.getSystem().broadcastOn([ZD], {});\n          }\n        }\n      })])\n    });\n  }\n  function xE(t, e, r, n) {\n    return {\n      dom: {\n        tag: \"div\",\n        classes: [\"tox-dialog__content-js\"],\n        attributes: _lt(_lt({}, e.map(function (t) {\n          return {\n            id: t\n          };\n        }).getOr({})), n ? {\n          \"aria-live\": \"polite\"\n        } : {})\n      },\n      components: [],\n      behaviours: ec([cS(0), k_.config({\n        channel: nA,\n        updateState: function updateState(t, e) {\n          return vt.some({\n            isTabPanel: function isTabPanel() {\n              return \"tabpanel\" === e.body.type;\n            }\n          });\n        },\n        renderComponents: function renderComponents(t) {\n          return \"tabpanel\" !== t.body.type ? [(n = t.body, o = r, {\n            dom: {\n              tag: \"div\",\n              classes: [\"tox-dialog__body\"]\n            },\n            components: [{\n              dom: {\n                tag: \"div\",\n                classes: [\"tox-dialog__body-content\"]\n              },\n              components: [(e = Hm(nS.sketch(function (e) {\n                return {\n                  dom: {\n                    tag: \"div\",\n                    classes: [\"tox-form\"].concat(n.classes)\n                  },\n                  components: B(n.items, function (t) {\n                    return hk(e, t, o);\n                  })\n                };\n              }))).asSpec()]\n            }],\n            behaviours: ec([Fg.config({\n              mode: \"acyclic\",\n              useTabstopAt: O(p0)\n            }), aS(e), mS(e, {\n              postprocess: function postprocess(t) {\n                return pE(t).fold(function (t) {\n                  return console.error(t), {};\n                }, h);\n              }\n            })])\n          })] : [yE(t.body, r)];\n          var n, o, e;\n        },\n        initialData: t\n      })])\n    };\n  }\n  (HT = VT = VT || {})[HT.None = 0] = \"None\", HT[HT.Both = 1] = \"Both\", HT[HT.Vertical = 2] = \"Vertical\";\n  var wE,\n    SE = rt([mo(\"lazySink\"), wo(\"dragBlockClass\"), Io(\"getBounds\", Fn), Eo(\"useTabstopAt\", D), Eo(\"eventOrder\", {}), Zs(\"modalBehaviours\", [Fg]), $u(\"onExecute\"), Zu(\"onEscape\")]),\n    kE = {\n      sketch: h\n    },\n    CE = rt([Qf({\n      name: \"draghandle\",\n      overrides: function overrides(t, e) {\n        return {\n          behaviours: ec([aE.config({\n            mode: \"mouse\",\n            getTarget: function getTarget(t) {\n              return Fu(t, '[role=\"dialog\"]').getOr(t);\n            },\n            blockerClass: t.dragBlockClass.getOrDie(new Error(\"The drag blocker class was not specified for a dialog with a drag handle: \\n\" + JSON.stringify(e, null, 2)).message),\n            getBounds: t.getDragBounds\n          })])\n        };\n      }\n    }), Jf({\n      schema: [mo(\"dom\")],\n      name: \"title\"\n    }), Jf({\n      factory: kE,\n      schema: [mo(\"dom\")],\n      name: \"close\"\n    }), Jf({\n      factory: kE,\n      schema: [mo(\"dom\")],\n      name: \"body\"\n    }), Qf({\n      factory: kE,\n      schema: [mo(\"dom\")],\n      name: \"footer\"\n    }), $f({\n      factory: {\n        sketch: function sketch(t, e) {\n          return _lt(_lt({}, t), {\n            dom: e.dom,\n            components: e.components\n          });\n        }\n      },\n      schema: [Eo(\"dom\", {\n        tag: \"div\",\n        styles: {\n          position: \"fixed\",\n          left: \"0px\",\n          top: \"0px\",\n          right: \"0px\",\n          bottom: \"0px\"\n        }\n      }), Eo(\"components\", [])],\n      name: \"blocker\"\n    })]),\n    OE = Cl({\n      name: \"ModalDialog\",\n      configFields: SE(),\n      partFields: CE(),\n      factory: function factory(a, t, e, r) {\n        var n,\n          i = gc(),\n          o = Ir(\"modal-events\"),\n          u = _lt(_lt({}, a.eventOrder), ((n = {})[Gi()] = [o].concat(a.eventOrder[\"alloy.system.attached\"] || []), n));\n        return {\n          uid: a.uid,\n          dom: a.dom,\n          components: t,\n          apis: {\n            show: function show(t) {\n              i.set(t);\n              var e = a.lazySink(t).getOrDie(),\n                n = r.blocker(),\n                o = e.getSystem().build(_lt(_lt({}, n), {\n                  components: n.components.concat([Eu(t)]),\n                  behaviours: ec([Vg.config({}), mm(\"dialog-blocker-events\", [Ar(bi(), function () {\n                    Fg.focusIn(t);\n                  })])])\n                }));\n              Ns(e, o), Fg.focusIn(t);\n            },\n            hide: function hide(e) {\n              i.clear(), Yt(e.element).each(function (t) {\n                e.getSystem().getByDom(t).each(function (t) {\n                  Vs(t);\n                });\n              });\n            },\n            getBody: function getBody(t) {\n              return gl(t, a, \"body\");\n            },\n            getFooter: function getFooter(t) {\n              return gl(t, a, \"footer\");\n            },\n            setIdle: function setIdle(t) {\n              fO.unblock(t);\n            },\n            setBusy: function setBusy(t, e) {\n              fO.block(t, e);\n            }\n          },\n          eventOrder: u,\n          domModification: {\n            attributes: {\n              role: \"dialog\",\n              \"aria-modal\": \"true\"\n            }\n          },\n          behaviours: el(a.modalBehaviours, [Rg.config({}), Fg.config({\n            mode: \"cyclic\",\n            onEnter: a.onExecute,\n            onEscape: a.onEscape,\n            useTabstopAt: a.useTabstopAt\n          }), fO.config({\n            getRoot: i.get\n          }), mm(o, [ou(function (t) {\n            var e,\n              n,\n              o,\n              r = t.element,\n              i = gl(t, a, \"title\").element,\n              u = ue(r, \"id\").fold(function () {\n                var t = Ir(\"dialog-label\");\n                return oe(i, \"id\", t), t;\n              }, h);\n            oe(r, \"aria-labelledby\", u), e = t.element, n = gl(t, a, \"body\").element, o = vt.from(ie(e, \"id\")).fold(function () {\n              var t = Ir(\"dialog-describe\");\n              return oe(n, \"id\", t), t;\n            }, h), oe(e, \"aria-describedby\", o);\n          })])])\n        };\n      },\n      apis: {\n        show: function show(t, e) {\n          t.show(e);\n        },\n        hide: function hide(t, e) {\n          t.hide(e);\n        },\n        getBody: function getBody(t, e) {\n          return t.getBody(e);\n        },\n        getFooter: function getFooter(t, e) {\n          return t.getFooter(e);\n        },\n        setBusy: function setBusy(t, e, n) {\n          t.setBusy(e, n);\n        },\n        setIdle: function setIdle(t, e) {\n          t.setIdle(e);\n        }\n      }\n    }),\n    _E = $o([po(\"type\"), po(\"name\")].concat(zh)),\n    TE = nr,\n    EE = [ar(\"name\", \"name\", Wn(function () {\n      return Ir(\"button-name\");\n    }), er), Co(\"icon\"), Mo(\"align\", \"end\", [\"start\", \"end\"]), Fo(\"primary\", !1), Fo(\"disabled\", !1)],\n    DE = V(V([], EE, !0), [po(\"text\")], !1),\n    AE = V([ho(\"type\", [\"submit\", \"cancel\", \"custom\"])], DE, !0),\n    BE = lo(\"type\", {\n      submit: AE,\n      cancel: AE,\n      custom: AE,\n      menu: V([ho(\"type\", [\"menu\"]), Co(\"text\"), Co(\"tooltip\"), Co(\"icon\"), xo(\"items\", _E)], EE, !0)\n    }),\n    ME = [po(\"type\"), po(\"text\"), ho(\"level\", [\"info\", \"warn\", \"error\", \"success\"]), po(\"icon\"), Eo(\"url\", \"\")],\n    FE = $o(ME),\n    IE = [po(\"type\"), po(\"text\"), Fo(\"disabled\", !1), Fo(\"primary\", !1), ar(\"name\", \"name\", Wn(function () {\n      return Ir(\"button-name\");\n    }), er), Co(\"icon\"), Fo(\"borderless\", !1)],\n    RE = $o(IE),\n    NE = [po(\"type\"), po(\"name\"), po(\"label\"), Fo(\"disabled\", !1)],\n    PE = $o(NE),\n    VE = nr,\n    HE = [po(\"type\"), po(\"name\")],\n    LE = HE.concat([Co(\"label\")]),\n    zE = LE.concat([Eo(\"columns\", \"auto\")]),\n    UE = $o(zE),\n    jE = Qo([po(\"value\"), po(\"text\"), po(\"icon\")]),\n    WE = $o(LE),\n    GE = er,\n    XE = $o(LE),\n    YE = er,\n    qE = HE.concat([Bo(\"tag\", \"textarea\"), po(\"scriptId\"), po(\"scriptUrl\"), Do(\"settings\", void 0, ir)]),\n    KE = HE.concat([Bo(\"tag\", \"textarea\"), vo(\"init\")]),\n    JE = io(function (t) {\n      return ao(\"customeditor.old\", to(KE), t).orThunk(function () {\n        return ao(\"customeditor.new\", to(qE), t);\n      });\n    }),\n    $E = er,\n    QE = $o(LE),\n    ZE = eo(Jo),\n    tD = [po(\"type\"), po(\"html\"), Mo(\"presets\", \"presentation\", [\"presentation\", \"document\"])],\n    eD = $o(tD),\n    nD = LE.concat([Fo(\"sandboxed\", !0)]),\n    oD = $o(nD),\n    rD = er,\n    iD = LE.concat([go(\"currentState\", $o([mo(\"blob\"), po(\"url\")]))]),\n    uD = $o(iD),\n    aD = LE.concat([Co(\"inputMode\"), Co(\"placeholder\"), Fo(\"maximized\", !1), Fo(\"disabled\", !1)]),\n    cD = $o(aD),\n    sD = er,\n    lD = [po(\"text\"), po(\"value\")],\n    fD = [po(\"text\"), xo(\"items\", (wE = Rt(function () {\n      return dD;\n    }), {\n      extract: function extract(t, e) {\n        return wE().extract(t, e);\n      },\n      toString: function toString() {\n        return wE().toString();\n      }\n    }))],\n    dD = no([$o(lD), $o(fD)]),\n    mD = LE.concat([xo(\"items\", dD), Fo(\"disabled\", !1)]),\n    gD = $o(mD),\n    pD = er,\n    hD = LE.concat([yo(\"items\", [po(\"text\"), po(\"value\")]), Ao(\"size\", 1), Fo(\"disabled\", !1)]),\n    vD = $o(hD),\n    bD = er,\n    yD = LE.concat([Fo(\"constrain\", !0), Fo(\"disabled\", !1)]),\n    xD = $o(yD),\n    wD = $o([po(\"width\"), po(\"height\")]),\n    SD = [po(\"type\"), xo(\"header\", er), xo(\"cells\", eo(er))],\n    kD = $o(SD),\n    CD = LE.concat([Co(\"placeholder\"), Fo(\"maximized\", !1), Fo(\"disabled\", !1)]),\n    OD = $o(CD),\n    _D = er,\n    TD = LE.concat([Mo(\"filetype\", \"file\", [\"image\", \"media\", \"file\"]), Eo(\"disabled\", !1)]),\n    ED = $o(TD),\n    DD = $o([po(\"value\"), Eo(\"meta\", {})]),\n    AD = Zn(function () {\n      return ro(\"type\", {\n        alertbanner: FE,\n        bar: $o((n = dE(\"bar\"), [po(\"type\"), n])),\n        button: RE,\n        checkbox: PE,\n        colorinput: WE,\n        colorpicker: XE,\n        dropzone: QE,\n        grid: $o((t = dE(\"grid\"), [po(\"type\"), go(\"columns\", tr), t])),\n        iframe: oD,\n        input: cD,\n        listbox: gD,\n        selectbox: vD,\n        sizeinput: xD,\n        textarea: OD,\n        urlinput: ED,\n        customeditor: JE,\n        htmlpanel: eD,\n        imagetools: uD,\n        collection: UE,\n        label: $o((e = dE(\"label\"), [po(\"type\"), po(\"label\"), e])),\n        table: kD,\n        panel: MD\n      });\n      var t, e, n;\n    }),\n    BD = [po(\"type\"), Eo(\"classes\", []), xo(\"items\", AD)],\n    MD = $o(BD),\n    FD = [ar(\"name\", \"name\", Wn(function () {\n      return Ir(\"tab-name\");\n    }), er), po(\"title\"), xo(\"items\", AD)],\n    ID = [po(\"type\"), yo(\"tabs\", FD)],\n    RD = $o(ID),\n    ND = DE,\n    PD = BE,\n    VD = $o([po(\"title\"), go(\"body\", ro(\"type\", {\n      panel: MD,\n      tabpanel: RD\n    })), Bo(\"size\", \"normal\"), xo(\"buttons\", PD), Eo(\"initialData\", {}), Io(\"onAction\", st), Io(\"onChange\", st), Io(\"onSubmit\", st), Io(\"onClose\", st), Io(\"onCancel\", st), Eo(\"onTabChange\", st)]),\n    HD = $o(V([ho(\"type\", [\"cancel\", \"custom\"])], ND, !0)),\n    LD = $o([po(\"title\"), po(\"url\"), ko(\"height\"), ko(\"width\"), _o(\"buttons\", HD), Io(\"onAction\", st), Io(\"onCancel\", st), Io(\"onClose\", st), Io(\"onMessage\", st)]),\n    zD = function zD(t) {\n      return x(t) ? [t].concat(H(Z(t), zD)) : c(t) ? H(t, zD) : [];\n    },\n    UD = {\n      checkbox: VE,\n      colorinput: GE,\n      colorpicker: YE,\n      dropzone: ZE,\n      input: sD,\n      iframe: rD,\n      sizeinput: wD,\n      selectbox: bD,\n      listbox: pD,\n      size: wD,\n      textarea: _D,\n      urlinput: DD,\n      customeditor: $E,\n      collection: jE,\n      togglemenuitem: TE\n    },\n    jD = {\n      open: function open(t, e) {\n        var n = gE(e);\n        return t(n.internalDialog, n.initialData, n.dataValidator);\n      },\n      openUrl: function openUrl(t, e) {\n        return t(co(ao(\"dialog\", LD, e)));\n      },\n      redial: gE\n    },\n    WD = kl({\n      name: \"TabButton\",\n      configFields: [Eo(\"uid\", void 0), mo(\"value\"), ar(\"dom\", \"dom\", Yn(function () {\n        return {\n          attributes: {\n            role: \"tab\",\n            id: Ir(\"aria\"),\n            \"aria-selected\": \"false\"\n          }\n        };\n      }), Zo()), wo(\"action\"), Eo(\"domModification\", {}), Zs(\"tabButtonBehaviours\", [Vg, Fg, Df]), mo(\"view\")],\n      factory: function factory(t, e) {\n        return {\n          uid: t.uid,\n          dom: t.dom,\n          components: t.components,\n          events: Sm(t.action),\n          behaviours: el(t.tabButtonBehaviours, [Vg.config({}), Fg.config({\n            mode: \"execution\",\n            useSpace: !0,\n            useEnter: !0\n          }), Df.config({\n            store: {\n              mode: \"memory\",\n              initialValue: t.value\n            }\n          })]),\n          domModification: t.domModification\n        };\n      }\n    }),\n    GD = rt([mo(\"tabs\"), mo(\"dom\"), Eo(\"clickToDismiss\", !1), Zs(\"tabbarBehaviours\", [hd, Fg]), qu([\"tabClass\", \"selectedClass\"])]),\n    XD = rt([Zf({\n      factory: WD,\n      name: \"tabs\",\n      unit: \"tab\",\n      overrides: function overrides(o) {\n        return {\n          action: function action(t) {\n            var e = t.getSystem().getByUid(o.uid).getOrDie(),\n              n = hd.isHighlighted(e, t);\n            (n && o.clickToDismiss ? function (t, e) {\n              hd.dehighlight(t, e), br(t, Qi(), {\n                tabbar: t,\n                button: e\n              });\n            } : n ? st : function (t, e) {\n              hd.highlight(t, e), br(t, $i(), {\n                tabbar: t,\n                button: e\n              });\n            })(e, t);\n          },\n          domModification: {\n            classes: [o.markers.tabClass]\n          }\n        };\n      }\n    })]),\n    YD = Cl({\n      name: \"Tabbar\",\n      configFields: GD(),\n      partFields: XD(),\n      factory: function factory(t, e, n, o) {\n        return {\n          uid: t.uid,\n          dom: t.dom,\n          components: e,\n          \"debug.sketcher\": \"Tabbar\",\n          domModification: {\n            attributes: {\n              role: \"tablist\"\n            }\n          },\n          behaviours: el(t.tabbarBehaviours, [hd.config({\n            highlightClass: t.markers.selectedClass,\n            itemClass: t.markers.tabClass,\n            onHighlight: function onHighlight(t, e) {\n              oe(e.element, \"aria-selected\", \"true\");\n            },\n            onDehighlight: function onDehighlight(t, e) {\n              oe(e.element, \"aria-selected\", \"false\");\n            }\n          }), Fg.config({\n            mode: \"flow\",\n            getInitial: function getInitial(t) {\n              return hd.getHighlighted(t).map(function (t) {\n                return t.element;\n              });\n            },\n            selector: \".\" + t.markers.tabClass,\n            executeOnMove: !0\n          })])\n        };\n      }\n    }),\n    qD = kl({\n      name: \"Tabview\",\n      configFields: [Zs(\"tabviewBehaviours\", [Rg])],\n      factory: function factory(t, e) {\n        return {\n          uid: t.uid,\n          dom: t.dom,\n          behaviours: el(t.tabviewBehaviours, [Rg.config({})]),\n          domModification: {\n            attributes: {\n              role: \"tabpanel\"\n            }\n          }\n        };\n      }\n    }),\n    KD = rt([Eo(\"selectFirst\", !0), Ju(\"onChangeTab\"), Ju(\"onDismissTab\"), Eo(\"tabs\", []), Zs(\"tabSectionBehaviours\", [])]),\n    JD = rt([Jf({\n      factory: YD,\n      schema: [mo(\"dom\"), bo(\"markers\", [mo(\"tabClass\"), mo(\"selectedClass\")])],\n      name: \"tabbar\",\n      defaults: function defaults(t) {\n        return {\n          tabs: t.tabs\n        };\n      }\n    }), Jf({\n      factory: qD,\n      name: \"tabview\"\n    })]),\n    $D = Cl({\n      name: \"TabSection\",\n      configFields: KD(),\n      partFields: JD(),\n      factory: function factory(i, t, e, n) {\n        function o(t, e) {\n          ml(t, i, \"tabbar\").each(function (t) {\n            e(t).each(yr);\n          });\n        }\n        return {\n          uid: i.uid,\n          dom: i.dom,\n          components: t,\n          behaviours: tl(i.tabSectionBehaviours),\n          events: nu(ft([i.selectFirst ? [ou(function (t, e) {\n            o(t, hd.getFirst);\n          })] : [], [Cr($i(), function (t, e) {\n            var o = e.event.button,\n              r = Df.getValue(o);\n            ml(o, i, \"tabview\").each(function (n) {\n              N(i.tabs, function (t) {\n                return t.value === r;\n              }).each(function (t) {\n                var e = t.view();\n                ue(o.element, \"id\").each(function (t) {\n                  oe(n.element, \"aria-labelledby\", t);\n                }), Rg.set(n, e), i.onChangeTab(n, o, e);\n              });\n            });\n          }), Cr(Qi(), function (t, e) {\n            var n = e.event.button;\n            i.onDismissTab(t, n);\n          })]])),\n          apis: {\n            getViewItems: function getViewItems(t) {\n              return ml(t, i, \"tabview\").map(function (t) {\n                return Rg.contents(t);\n              }).getOr([]);\n            },\n            showTab: function showTab(t, n) {\n              o(t, function (e) {\n                return N(hd.getCandidates(e), function (t) {\n                  return Df.getValue(t) === n;\n                }).filter(function (t) {\n                  return !hd.isHighlighted(e, t);\n                });\n              });\n            }\n          }\n        };\n      },\n      apis: {\n        getViewItems: function getViewItems(t, e) {\n          return t.getViewItems(e);\n        },\n        showTab: function showTab(t, e, n) {\n          t.showTab(e, n);\n        }\n      }\n    }),\n    QD = \"send-data-to-section\",\n    ZD = \"send-data-to-view\",\n    tA = Ir(\"update-dialog\"),\n    eA = Ir(\"update-title\"),\n    nA = Ir(\"update-body\"),\n    oA = Ir(\"update-footer\"),\n    rA = Ir(\"body-send-message\");\n  function iA(t) {\n    return (iA = \"function\" == typeof Symbol && \"symbol\" == _typeof(Symbol.iterator) ? function (t) {\n      return _typeof(t);\n    } : function (t) {\n      return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : _typeof(t);\n    })(t);\n  }\n  function uA(t, e) {\n    return (uA = Object.setPrototypeOf || function (t, e) {\n      return t.__proto__ = e, t;\n    })(t, e);\n  }\n  function aA(t, e, n) {\n    return (aA = function () {\n      if (\"undefined\" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {\n        if (\"function\" == typeof Proxy) return 1;\n        try {\n          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), 1;\n        } catch (t) {\n          return;\n        }\n      }\n    }() ? Reflect.construct : function (t, e, n) {\n      var o = [null];\n      o.push.apply(o, e);\n      var r = new (Function.bind.apply(t, o))();\n      return n && uA(r, n.prototype), r;\n    }).apply(null, arguments);\n  }\n  function cA(t) {\n    return function (t) {\n      if (Array.isArray(t)) return sA(t);\n    }(t) || function () {\n      if (\"undefined\" != typeof Symbol && null != t[Symbol.iterator] || null != t[\"@@iterator\"]) return Array.from(t);\n    }() || function (t) {\n      if (t) {\n        if (\"string\" == typeof t) return sA(t, void 0);\n        var e = Object.prototype.toString.call(t).slice(8, -1);\n        return \"Map\" === (e = \"Object\" === e && t.constructor ? t.constructor.name : e) || \"Set\" === e ? Array.from(t) : \"Arguments\" === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e) ? sA(t, void 0) : void 0;\n      }\n    }(t) || function () {\n      throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }();\n  }\n  function sA(t, e) {\n    (null == e || e > t.length) && (e = t.length);\n    for (var n = 0, o = new Array(e); n < e; n++) o[n] = t[n];\n    return o;\n  }\n  var lA,\n    fA = Object.hasOwnProperty,\n    dA = Object.setPrototypeOf,\n    mA = Object.isFrozen,\n    gA = Object.getPrototypeOf,\n    pA = Object.getOwnPropertyDescriptor,\n    hA = Object.freeze,\n    vA = Object.seal,\n    bA = Object.create,\n    yA = \"undefined\" != typeof Reflect && Reflect,\n    xA = yA.apply || function (t, e, n) {\n      return t.apply(e, n);\n    },\n    hA = hA || function (t) {\n      return t;\n    },\n    vA = vA || function (t) {\n      return t;\n    },\n    wA = yA.construct || function (t, e) {\n      return aA(t, cA(e));\n    },\n    SA = MA(Array.prototype.forEach),\n    kA = MA(Array.prototype.pop),\n    CA = MA(Array.prototype.push),\n    OA = MA(String.prototype.toLowerCase),\n    _A = MA(String.prototype.match),\n    TA = MA(String.prototype.replace),\n    EA = MA(String.prototype.indexOf),\n    DA = MA(String.prototype.trim),\n    AA = MA(RegExp.prototype.test),\n    BA = (lA = TypeError, function () {\n      for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) e[n] = arguments[n];\n      return wA(lA, e);\n    });\n  function MA(r) {\n    return function (t) {\n      for (var e = arguments.length, n = new Array(1 < e ? e - 1 : 0), o = 1; o < e; o++) n[o - 1] = arguments[o];\n      return xA(r, t, n);\n    };\n  }\n  function FA(t, e) {\n    dA && dA(t, null);\n    for (var n = e.length; n--;) {\n      var o,\n        r = e[n];\n      \"string\" != typeof r || (o = OA(r)) !== r && (mA(e) || (e[n] = o), r = o), t[r] = !0;\n    }\n    return t;\n  }\n  function IA(t) {\n    var e,\n      n = bA(null);\n    for (e in t) xA(fA, t, [e]) && (n[e] = t[e]);\n    return n;\n  }\n  function RA(t, e) {\n    for (; null !== t;) {\n      var n = pA(t, e);\n      if (n) {\n        if (n.get) return MA(n.get);\n        if (\"function\" == typeof n.value) return MA(n.value);\n      }\n      t = gA(t);\n    }\n    return function (t) {\n      return console.warn(\"fallback value for\", t), null;\n    };\n  }\n  var NA = hA([\"a\", \"abbr\", \"acronym\", \"address\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"bdi\", \"bdo\", \"big\", \"blink\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"center\", \"cite\", \"code\", \"col\", \"colgroup\", \"content\", \"data\", \"datalist\", \"dd\", \"decorator\", \"del\", \"details\", \"dfn\", \"dialog\", \"dir\", \"div\", \"dl\", \"dt\", \"element\", \"em\", \"fieldset\", \"figcaption\", \"figure\", \"font\", \"footer\", \"form\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"img\", \"input\", \"ins\", \"kbd\", \"label\", \"legend\", \"li\", \"main\", \"map\", \"mark\", \"marquee\", \"menu\", \"menuitem\", \"meter\", \"nav\", \"nobr\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"picture\", \"pre\", \"progress\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"section\", \"select\", \"shadow\", \"small\", \"source\", \"spacer\", \"span\", \"strike\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"tr\", \"track\", \"tt\", \"u\", \"ul\", \"var\", \"video\", \"wbr\"]),\n    PA = hA([\"svg\", \"a\", \"altglyph\", \"altglyphdef\", \"altglyphitem\", \"animatecolor\", \"animatemotion\", \"animatetransform\", \"circle\", \"clippath\", \"defs\", \"desc\", \"ellipse\", \"filter\", \"font\", \"g\", \"glyph\", \"glyphref\", \"hkern\", \"image\", \"line\", \"lineargradient\", \"marker\", \"mask\", \"metadata\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialgradient\", \"rect\", \"stop\", \"style\", \"switch\", \"symbol\", \"text\", \"textpath\", \"title\", \"tref\", \"tspan\", \"view\", \"vkern\"]),\n    VA = hA([\"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\"]),\n    HA = hA([\"animate\", \"color-profile\", \"cursor\", \"discard\", \"fedropshadow\", \"font-face\", \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \"foreignobject\", \"hatch\", \"hatchpath\", \"mesh\", \"meshgradient\", \"meshpatch\", \"meshrow\", \"missing-glyph\", \"script\", \"set\", \"solidcolor\", \"unknown\", \"use\"]),\n    LA = hA([\"math\", \"menclose\", \"merror\", \"mfenced\", \"mfrac\", \"mglyph\", \"mi\", \"mlabeledtr\", \"mmultiscripts\", \"mn\", \"mo\", \"mover\", \"mpadded\", \"mphantom\", \"mroot\", \"mrow\", \"ms\", \"mspace\", \"msqrt\", \"mstyle\", \"msub\", \"msup\", \"msubsup\", \"mtable\", \"mtd\", \"mtext\", \"mtr\", \"munder\", \"munderover\"]),\n    zA = hA([\"maction\", \"maligngroup\", \"malignmark\", \"mlongdiv\", \"mscarries\", \"mscarry\", \"msgroup\", \"mstack\", \"msline\", \"msrow\", \"semantics\", \"annotation\", \"annotation-xml\", \"mprescripts\", \"none\"]),\n    UA = hA([\"#text\"]),\n    jA = hA([\"accept\", \"action\", \"align\", \"alt\", \"autocapitalize\", \"autocomplete\", \"autopictureinpicture\", \"autoplay\", \"background\", \"bgcolor\", \"border\", \"capture\", \"cellpadding\", \"cellspacing\", \"checked\", \"cite\", \"class\", \"clear\", \"color\", \"cols\", \"colspan\", \"controls\", \"controlslist\", \"coords\", \"crossorigin\", \"datetime\", \"decoding\", \"default\", \"dir\", \"disabled\", \"disablepictureinpicture\", \"disableremoteplayback\", \"download\", \"draggable\", \"enctype\", \"enterkeyhint\", \"face\", \"for\", \"headers\", \"height\", \"hidden\", \"high\", \"href\", \"hreflang\", \"id\", \"inputmode\", \"integrity\", \"ismap\", \"kind\", \"label\", \"lang\", \"list\", \"loading\", \"loop\", \"low\", \"max\", \"maxlength\", \"media\", \"method\", \"min\", \"minlength\", \"multiple\", \"muted\", \"name\", \"nonce\", \"noshade\", \"novalidate\", \"nowrap\", \"open\", \"optimum\", \"pattern\", \"placeholder\", \"playsinline\", \"poster\", \"preload\", \"pubdate\", \"radiogroup\", \"readonly\", \"rel\", \"required\", \"rev\", \"reversed\", \"role\", \"rows\", \"rowspan\", \"spellcheck\", \"scope\", \"selected\", \"shape\", \"size\", \"sizes\", \"span\", \"srclang\", \"start\", \"src\", \"srcset\", \"step\", \"style\", \"summary\", \"tabindex\", \"title\", \"translate\", \"type\", \"usemap\", \"valign\", \"value\", \"width\", \"xmlns\", \"slot\"]),\n    WA = hA([\"accent-height\", \"accumulate\", \"additive\", \"alignment-baseline\", \"ascent\", \"attributename\", \"attributetype\", \"azimuth\", \"basefrequency\", \"baseline-shift\", \"begin\", \"bias\", \"by\", \"class\", \"clip\", \"clippathunits\", \"clip-path\", \"clip-rule\", \"color\", \"color-interpolation\", \"color-interpolation-filters\", \"color-profile\", \"color-rendering\", \"cx\", \"cy\", \"d\", \"dx\", \"dy\", \"diffuseconstant\", \"direction\", \"display\", \"divisor\", \"dur\", \"edgemode\", \"elevation\", \"end\", \"fill\", \"fill-opacity\", \"fill-rule\", \"filter\", \"filterunits\", \"flood-color\", \"flood-opacity\", \"font-family\", \"font-size\", \"font-size-adjust\", \"font-stretch\", \"font-style\", \"font-variant\", \"font-weight\", \"fx\", \"fy\", \"g1\", \"g2\", \"glyph-name\", \"glyphref\", \"gradientunits\", \"gradienttransform\", \"height\", \"href\", \"id\", \"image-rendering\", \"in\", \"in2\", \"k\", \"k1\", \"k2\", \"k3\", \"k4\", \"kerning\", \"keypoints\", \"keysplines\", \"keytimes\", \"lang\", \"lengthadjust\", \"letter-spacing\", \"kernelmatrix\", \"kernelunitlength\", \"lighting-color\", \"local\", \"marker-end\", \"marker-mid\", \"marker-start\", \"markerheight\", \"markerunits\", \"markerwidth\", \"maskcontentunits\", \"maskunits\", \"max\", \"mask\", \"media\", \"method\", \"mode\", \"min\", \"name\", \"numoctaves\", \"offset\", \"operator\", \"opacity\", \"order\", \"orient\", \"orientation\", \"origin\", \"overflow\", \"paint-order\", \"path\", \"pathlength\", \"patterncontentunits\", \"patterntransform\", \"patternunits\", \"points\", \"preservealpha\", \"preserveaspectratio\", \"primitiveunits\", \"r\", \"rx\", \"ry\", \"radius\", \"refx\", \"refy\", \"repeatcount\", \"repeatdur\", \"restart\", \"result\", \"rotate\", \"scale\", \"seed\", \"shape-rendering\", \"specularconstant\", \"specularexponent\", \"spreadmethod\", \"startoffset\", \"stddeviation\", \"stitchtiles\", \"stop-color\", \"stop-opacity\", \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-linejoin\", \"stroke-miterlimit\", \"stroke-opacity\", \"stroke\", \"stroke-width\", \"style\", \"surfacescale\", \"systemlanguage\", \"tabindex\", \"targetx\", \"targety\", \"transform\", \"transform-origin\", \"text-anchor\", \"text-decoration\", \"text-rendering\", \"textlength\", \"type\", \"u1\", \"u2\", \"unicode\", \"values\", \"viewbox\", \"visibility\", \"version\", \"vert-adv-y\", \"vert-origin-x\", \"vert-origin-y\", \"width\", \"word-spacing\", \"wrap\", \"writing-mode\", \"xchannelselector\", \"ychannelselector\", \"x\", \"x1\", \"x2\", \"xmlns\", \"y\", \"y1\", \"y2\", \"z\", \"zoomandpan\"]),\n    GA = hA([\"accent\", \"accentunder\", \"align\", \"bevelled\", \"close\", \"columnsalign\", \"columnlines\", \"columnspan\", \"denomalign\", \"depth\", \"dir\", \"display\", \"displaystyle\", \"encoding\", \"fence\", \"frame\", \"height\", \"href\", \"id\", \"largeop\", \"length\", \"linethickness\", \"lspace\", \"lquote\", \"mathbackground\", \"mathcolor\", \"mathsize\", \"mathvariant\", \"maxsize\", \"minsize\", \"movablelimits\", \"notation\", \"numalign\", \"open\", \"rowalign\", \"rowlines\", \"rowspacing\", \"rowspan\", \"rspace\", \"rquote\", \"scriptlevel\", \"scriptminsize\", \"scriptsizemultiplier\", \"selection\", \"separator\", \"separators\", \"stretchy\", \"subscriptshift\", \"supscriptshift\", \"symmetric\", \"voffset\", \"width\", \"xmlns\"]),\n    XA = hA([\"xlink:href\", \"xml:id\", \"xlink:title\", \"xml:space\", \"xmlns:xlink\"]),\n    YA = vA(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm),\n    qA = vA(/<%[\\w\\W]*|[\\w\\W]*%>/gm),\n    KA = vA(/^data-[\\-\\w.\\u00B7-\\uFFFF]/),\n    JA = vA(/^aria-[\\-\\w]+$/),\n    $A = vA(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i),\n    QA = vA(/^(?:\\w+script|data):/i),\n    ZA = vA(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g),\n    tB = vA(/^html$/i);\n  function eB(t, e) {\n    return {\n      dom: {\n        tag: \"div\",\n        styles: {\n          display: \"none\"\n        },\n        classes: [\"tox-dialog__header\"]\n      },\n      components: [t, e]\n    };\n  }\n  function nB(t, e) {\n    return OE.parts.close(fp.sketch({\n      dom: {\n        tag: \"button\",\n        classes: [\"tox-button\", \"tox-button--icon\", \"tox-button--naked\"],\n        attributes: {\n          type: \"button\",\n          \"aria-label\": e.translate(\"Close\")\n        }\n      },\n      action: t,\n      buttonBehaviours: ec([py.config({})])\n    }));\n  }\n  function oB() {\n    return OE.parts.title({\n      dom: {\n        tag: \"div\",\n        classes: [\"tox-dialog__title\"],\n        innerHtml: \"\",\n        styles: {\n          display: \"none\"\n        }\n      }\n    });\n  }\n  function rB(t, e) {\n    return OE.parts.body({\n      dom: {\n        tag: \"div\",\n        classes: [\"tox-dialog__body\"]\n      },\n      components: [{\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-dialog__body-content\"]\n        },\n        components: [{\n          dom: xC(\"<p>\" + (n = e.translate(t), _B().sanitize(n)) + \"</p>\")\n        }]\n      }]\n    });\n    var n;\n  }\n  function iB(t) {\n    return OE.parts.footer({\n      dom: {\n        tag: \"div\",\n        classes: [\"tox-dialog__footer\"]\n      },\n      components: t\n    });\n  }\n  function uB(t, e) {\n    return [ly.sketch({\n      dom: {\n        tag: \"div\",\n        classes: [\"tox-dialog__footer-start\"]\n      },\n      components: t\n    }), ly.sketch({\n      dom: {\n        tag: \"div\",\n        classes: [\"tox-dialog__footer-end\"]\n      },\n      components: e\n    })];\n  }\n  function aB(e) {\n    var t,\n      n = \"tox-dialog\",\n      o = n + \"-wrap\",\n      r = o + \"__backdrop\",\n      i = n + \"__disable-scroll\";\n    return OE.sketch({\n      lazySink: e.lazySink,\n      onEscape: function onEscape(t) {\n        return e.onEscape(t), vt.some(!0);\n      },\n      useTabstopAt: function useTabstopAt(t) {\n        return !p0(t);\n      },\n      dom: {\n        tag: \"div\",\n        classes: [n].concat(e.extraClasses),\n        styles: _lt({\n          position: \"relative\"\n        }, e.extraStyles)\n      },\n      components: V([e.header, e.body], e.footer.toArray(), !0),\n      parts: {\n        blocker: {\n          dom: xC('<div class=\"' + o + '\"></div>'),\n          components: [{\n            dom: {\n              tag: \"div\",\n              classes: TB ? [r, r + \"--opaque\"] : [r]\n            }\n          }]\n        }\n      },\n      dragBlockClass: o,\n      modalBehaviours: ec(V([Vg.config({}), mm(\"dialog-events\", e.dialogEvents.concat([Ar(bi(), function (t, e) {\n        Fg.focusIn(t);\n      })])), mm(\"scroll-lock\", [ou(function () {\n        Yr(bn(), i);\n      }), ru(function () {\n        qr(bn(), i);\n      })])], e.extraBehaviours, !0)),\n      eventOrder: _lt(((t = {})[Ii()] = [\"dialog-events\"], t[Gi()] = [\"scroll-lock\", \"dialog-events\", \"alloy.base.behaviour\"], t[Xi()] = [\"alloy.base.behaviour\", \"dialog-events\", \"scroll-lock\"], t), e.eventOrder)\n    });\n  }\n  function cB(t) {\n    return fp.sketch({\n      dom: {\n        tag: \"button\",\n        classes: [\"tox-button\", \"tox-button--icon\", \"tox-button--naked\"],\n        attributes: {\n          type: \"button\",\n          \"aria-label\": t.translate(\"Close\"),\n          title: t.translate(\"Close\")\n        }\n      },\n      components: [Xm(\"close\", {\n        tag: \"div\",\n        classes: [\"tox-icon\"]\n      }, t.icons)],\n      action: function action(t) {\n        vr(t, wy);\n      }\n    });\n  }\n  function sB(t, e, n) {\n    function o(t) {\n      return [ri(n.translate(t.title))];\n    }\n    return {\n      dom: {\n        tag: \"div\",\n        classes: [\"tox-dialog__title\"],\n        attributes: _lt({}, e.map(function (t) {\n          return {\n            id: t\n          };\n        }).getOr({}))\n      },\n      components: o(t),\n      behaviours: ec([k_.config({\n        channel: eA,\n        renderComponents: o\n      })])\n    };\n  }\n  function lB() {\n    return {\n      dom: xC('<div class=\"tox-dialog__draghandle\"></div>')\n    };\n  }\n  function fB(t, e) {\n    return n = {\n      title: e.shared.providers.translate(t),\n      draggable: e.dialog.isDraggableModal()\n    }, o = e.shared.providers, r = OE.parts.title(sB(n, vt.none(), o)), i = OE.parts.draghandle(lB()), u = OE.parts.close(cB(o)), a = [r].concat(n.draggable ? [i] : []).concat([u]), ly.sketch({\n      dom: xC('<div class=\"tox-dialog__header\"></div>'),\n      components: a\n    });\n    var n, o, r, i, u, a;\n  }\n  function dB(t, e, n) {\n    return {\n      dom: {\n        tag: \"div\",\n        classes: [\"tox-dialog__busy-spinner\"],\n        attributes: {\n          \"aria-label\": n.translate(t)\n        },\n        styles: {\n          left: \"0px\",\n          right: \"0px\",\n          bottom: \"0px\",\n          top: \"0px\",\n          position: \"absolute\"\n        }\n      },\n      behaviours: e,\n      components: [{\n        dom: xC('<div class=\"tox-spinner\"><div></div><div></div><div></div></div>')\n      }]\n    };\n  }\n  function mB(t, o, e) {\n    return {\n      onClose: function onClose() {\n        return e.closeWindow();\n      },\n      onBlock: function onBlock(n) {\n        OE.setBusy(t(), function (t, e) {\n          return dB(n.message, e, o);\n        });\n      },\n      onUnblock: function onUnblock() {\n        OE.setIdle(t());\n      }\n    };\n  }\n  function gB(t, e, n, o) {\n    var r;\n    return Tu(aB(_lt(_lt({}, t), {\n      lazySink: o.shared.getSink,\n      extraBehaviours: V([k_.config({\n        channel: tA,\n        updateState: function updateState(t, e) {\n          return vt.some(e);\n        },\n        initialData: e\n      }), pS({})], t.extraBehaviours, !0),\n      onEscape: function onEscape(t) {\n        vr(t, wy);\n      },\n      dialogEvents: n,\n      eventOrder: ((r = {})[Fi()] = [k_.name(), ic.name()], r[Gi()] = [\"scroll-lock\", k_.name(), \"messages\", \"dialog-events\", \"alloy.base.behaviour\"], r[Xi()] = [\"alloy.base.behaviour\", \"dialog-events\", \"messages\", k_.name(), \"scroll-lock\"], r)\n    })));\n  }\n  function pB(t) {\n    return B(t, function (t) {\n      return \"menu\" === t.type ? (n = B((e = t).items, function (t) {\n        var e = Po(!1);\n        return _lt(_lt({}, t), {\n          storage: e\n        });\n      }), _lt(_lt({}, e), {\n        items: n\n      })) : t;\n      var e, n;\n    });\n  }\n  function hB(t) {\n    return R(t, function (t, e) {\n      return \"menu\" !== e.type ? t : R(e.items, function (t, e) {\n        return t[e.name] = e.storage, t;\n      }, t);\n    }, {});\n  }\n  function vB(t, n) {\n    return [Er(bi(), g0), t(xy, function (t, e) {\n      n.onClose(), e.onClose();\n    }), t(wy, function (t, e, n, o) {\n      e.onCancel(t), vr(o, xy);\n    }), Cr(Oy, function (t, e) {\n      return n.onUnblock();\n    }), Cr(Cy, function (t, e) {\n      return n.onBlock(e.event);\n    })];\n  }\n  function bB(t, e) {\n    function n(t, e) {\n      return ly.sketch({\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-dialog__footer-\" + t]\n        },\n        components: B(e, function (t) {\n          return t.memento.asSpec();\n        })\n      });\n    }\n    var o = M(e.map(function (t) {\n      return t.footerButtons;\n    }).getOr([]), function (t) {\n      return \"start\" === t.align;\n    });\n    return [n(\"start\", o.pass), n(\"end\", o.fail)];\n  }\n  function yB(t, n) {\n    return {\n      dom: xC('<div class=\"tox-dialog__footer\"></div>'),\n      components: [],\n      behaviours: ec([k_.config({\n        channel: oA,\n        initialData: t,\n        updateState: function updateState(t, e) {\n          var r = B(e.buttons, function (t) {\n            var e = Hm(Q0(t, t.type, n));\n            return {\n              name: t.name,\n              align: t.align,\n              memento: e\n            };\n          });\n          return vt.some({\n            lookupByName: function lookupByName(t, e) {\n              return n = t, o = e, N(r, function (t) {\n                return t.name === o;\n              }).bind(function (t) {\n                return t.memento.getOpt(n);\n              });\n              var n, o;\n            },\n            footerButtons: r\n          });\n        },\n        renderComponents: bB\n      })])\n    };\n  }\n  function xB(t, e) {\n    return OE.parts.footer(yB(t, e));\n  }\n  function wB(e, n) {\n    if (e.getRoot().getSystem().isConnected()) {\n      var o = cd.getCurrent(e.getFormWrapper()).getOr(e.getFormWrapper());\n      return nS.getField(o, n).fold(function () {\n        var t = e.getFooter();\n        return k_.getState(t).get().bind(function (t) {\n          return t.lookupByName(o, n);\n        });\n      }, function (t) {\n        return vt.some(t);\n      });\n    }\n    return vt.none();\n  }\n  function SB(c, o, s) {\n    function t(t) {\n      var e = c.getRoot();\n      e.getSystem().isConnected() && t(e);\n    }\n    var l = {\n      getData: function getData() {\n        var t = c.getRoot(),\n          e = t.getSystem().isConnected() ? c.getFormWrapper() : t,\n          n = Df.getValue(e),\n          o = dt(s, function (t) {\n            return t.get();\n          });\n        return _lt(_lt({}, n), o);\n      },\n      setData: function setData(a) {\n        t(function (t) {\n          var e,\n            n,\n            o = l.getData(),\n            r = _lt(_lt({}, o), a),\n            i = (e = r, n = c.getRoot(), k_.getState(n).get().map(function (t) {\n              return co(ao(\"data\", t.dataValidator, e));\n            }).getOr(e)),\n            u = c.getFormWrapper();\n          Df.setValue(u, i), J(s, function (t, e) {\n            Tt(r, e) && t.set(r[e]);\n          });\n        });\n      },\n      disable: function disable(t) {\n        wB(c, t).each(gd.disable);\n      },\n      enable: function enable(t) {\n        wB(c, t).each(gd.enable);\n      },\n      focus: function focus(t) {\n        wB(c, t).each(Vg.focus);\n      },\n      block: function block(e) {\n        if (!y(e)) throw new Error(\"The dialogInstanceAPI.block function should be passed a blocking message of type string as an argument\");\n        t(function (t) {\n          br(t, Cy, {\n            message: e\n          });\n        });\n      },\n      unblock: function unblock() {\n        t(function (t) {\n          vr(t, Oy);\n        });\n      },\n      showTab: function showTab(n) {\n        t(function (t) {\n          var e = c.getBody();\n          k_.getState(e).get().exists(function (t) {\n            return t.isTabPanel();\n          }) && cd.getCurrent(e).each(function (t) {\n            $D.showTab(t, n);\n          });\n        });\n      },\n      redial: function redial(n) {\n        t(function (t) {\n          var e = o(n);\n          t.getSystem().broadcastOn([tA], e), t.getSystem().broadcastOn([eA], e.internalDialog), t.getSystem().broadcastOn([nA], e.internalDialog), t.getSystem().broadcastOn([oA], e.internalDialog), l.setData(e.initialData);\n        });\n      },\n      close: function close() {\n        t(function (t) {\n          vr(t, xy);\n        });\n      }\n    };\n    return l;\n  }\n  function kB(t) {\n    return x(t) && -1 !== MB.indexOf(t.mceAction);\n  }\n  function CB(o, t, r, e) {\n    var n,\n      i,\n      u,\n      a = fB(o.title, e),\n      c = (i = {\n        dom: {\n          tag: \"div\",\n          classes: [\"tox-dialog__content-js\"]\n        },\n        components: [{\n          dom: {\n            tag: \"div\",\n            classes: [\"tox-dialog__body-iframe\"]\n          },\n          components: [d0({\n            dom: {\n              tag: \"iframe\",\n              attributes: {\n                src: o.url\n              }\n            },\n            behaviours: ec([py.config({}), Vg.config({})])\n          })]\n        }],\n        behaviours: ec([Fg.config({\n          mode: \"acyclic\",\n          useTabstopAt: O(p0)\n        })])\n      }, OE.parts.body(i)),\n      s = o.buttons.bind(function (t) {\n        return 0 === t.length ? vt.none() : vt.some(xB({\n          buttons: t\n        }, e));\n      }),\n      l = EB(function () {\n        return v;\n      }, mB(function () {\n        return h;\n      }, e.shared.providers, t)),\n      f = _lt(_lt({}, o.height.fold(function () {\n        return {};\n      }, function (t) {\n        return {\n          height: t + \"px\",\n          \"max-height\": t + \"px\"\n        };\n      })), o.width.fold(function () {\n        return {};\n      }, function (t) {\n        return {\n          width: t + \"px\",\n          \"max-width\": t + \"px\"\n        };\n      })),\n      d = o.width.isNone() && o.height.isNone() ? [\"tox-dialog--width-lg\"] : [],\n      m = new BB(o.url, {\n        base_uri: new BB(window.location.href)\n      }),\n      g = m.protocol + \"://\" + m.host + (m.port ? \":\" + m.port : \"\"),\n      p = mc(),\n      h = gB({\n        header: a,\n        body: c,\n        footer: s,\n        extraClasses: d,\n        extraBehaviours: [mm(\"messages\", [ou(function () {\n          var t = pc(Mt.fromDom(window), \"message\", function (t) {\n            var e, n;\n            m.isSameOrigin(new BB(t.raw.origin)) && (kB(e = t.raw.data) ? function (t, e, n) {\n              switch (n.mceAction) {\n                case \"insertContent\":\n                  t.insertContent(n.content);\n                  break;\n                case \"setContent\":\n                  t.setContent(n.content);\n                  break;\n                case \"execCommand\":\n                  var o = !!w(n.ui) && n.ui;\n                  t.execCommand(n.cmd, o, n.value);\n                  break;\n                case \"close\":\n                  e.close();\n                  break;\n                case \"block\":\n                  e.block(n.message);\n                  break;\n                case \"unblock\":\n                  e.unblock();\n              }\n            }(r, v, e) : !kB(n = e) && x(n) && Tt(n, \"mceAction\") && o.onMessage(v, e));\n          });\n          p.set(t);\n        }), ru(p.clear)]), ic.config({\n          channels: ((n = {})[rA] = {\n            onReceive: function onReceive(t, e) {\n              Iu(t.element, \"iframe\").each(function (t) {\n                t.dom.contentWindow.postMessage(e, g);\n              });\n            }\n          }, n)\n        })],\n        extraStyles: f\n      }, o, l, e),\n      v = {\n        block: function block(e) {\n          if (!y(e)) throw new Error(\"The urlDialogInstanceAPI.block function should be passed a blocking message of type string as an argument\");\n          b(function (t) {\n            br(t, Cy, {\n              message: e\n            });\n          });\n        },\n        unblock: function unblock() {\n          b(function (t) {\n            vr(t, Oy);\n          });\n        },\n        close: function close() {\n          b(function (t) {\n            vr(t, xy);\n          });\n        },\n        sendMessage: function sendMessage(e) {\n          b(function (t) {\n            t.getSystem().broadcastOn([rA], e);\n          });\n        }\n      };\n    function b(t) {\n      u.getSystem().isConnected() && t(u);\n    }\n    return {\n      dialog: u = h,\n      instanceApi: v\n    };\n  }\n  function OB(t) {\n    function o(t, y) {\n      return jD.open(function (t, e, n) {\n        var o,\n          r,\n          i,\n          u,\n          a,\n          c,\n          s,\n          l,\n          f,\n          d,\n          m,\n          g,\n          p,\n          h,\n          v = e,\n          b = (r = {\n            redial: jD.redial,\n            closeWindow: function closeWindow() {\n              OE.hide(b.dialog), y(b.instanceApi);\n            }\n          }, i = R, c = fB((o = {\n            dataValidator: n,\n            initialData: v,\n            internalDialog: t\n          }).internalDialog.title, i), u = i, a = xE({\n            body: o.internalDialog.body\n          }, vt.none(), u, !1), s = OE.parts.body(a), l = pB(o.internalDialog.buttons), f = hB(l), d = xB({\n            buttons: l\n          }, i), m = DB(function () {\n            return h;\n          }, mB(function () {\n            return p;\n          }, i.shared.providers, r), i.shared.getSink), g = function () {\n            switch (o.internalDialog.size) {\n              case \"large\":\n                return [\"tox-dialog--width-lg\"];\n              case \"medium\":\n                return [\"tox-dialog--width-md\"];\n              default:\n                return [];\n            }\n          }(), p = gB({\n            header: c,\n            body: s,\n            footer: vt.some(d),\n            extraClasses: g,\n            extraBehaviours: [],\n            extraStyles: {}\n          }, o, m, i), h = SB({\n            getRoot: rt(p),\n            getBody: function getBody() {\n              return OE.getBody(p);\n            },\n            getFooter: function getFooter() {\n              return OE.getFooter(p);\n            },\n            getFormWrapper: function getFormWrapper() {\n              var t = OE.getBody(p);\n              return cd.getCurrent(t).getOr(t);\n            }\n          }, r.redial, f), {\n            dialog: p,\n            instanceApi: h\n          });\n        return OE.show(b.dialog), b.instanceApi.setData(v), b.instanceApi;\n      }, t);\n    }\n    function r(t, M, F, I) {\n      return jD.open(function (t, e, n) {\n        function o() {\n          return E.on(function (t) {\n            up.reposition(t), j1.refresh(t);\n          });\n        }\n        var r,\n          i,\n          u,\n          a,\n          c,\n          s,\n          l,\n          f,\n          d,\n          m,\n          g,\n          p,\n          h,\n          v,\n          b,\n          y,\n          x,\n          w,\n          S,\n          k,\n          C,\n          O,\n          _,\n          T = co(ao(\"data\", n, e)),\n          E = gc(),\n          D = R.shared.header.isPositionedAtTop(),\n          A = (i = {\n            dataValidator: n,\n            initialData: T,\n            internalDialog: t\n          }, u = {\n            redial: jD.redial,\n            closeWindow: function closeWindow() {\n              E.on(up.hide), N.off(\"ResizeEditor\", o), E.clear(), F(A.instanceApi);\n            }\n          }, a = R, c = I, v = Ir(\"dialog-label\"), b = Ir(\"dialog-content\"), y = Hm((f = {\n            title: i.internalDialog.title,\n            draggable: !0\n          }, d = v, m = a.shared.providers, ly.sketch({\n            dom: xC('<div class=\"tox-dialog__header\"></div>'),\n            components: [sB(f, vt.some(d), m), lB(), cB(m)],\n            containerBehaviours: ec([aE.config({\n              mode: \"mouse\",\n              blockerClass: \"blocker\",\n              getTarget: function getTarget(t) {\n                return Ru(t, '[role=\"dialog\"]').getOrDie();\n              },\n              snaps: {\n                getSnapPoints: function getSnapPoints() {\n                  return [];\n                },\n                leftAttr: \"data-drag-left\",\n                topAttr: \"data-drag-top\"\n              }\n            })])\n          }))), x = Hm((g = {\n            body: i.internalDialog.body\n          }, p = a, h = c, xE(g, vt.some(b), p, h))), w = pB(i.internalDialog.buttons), S = hB(w), k = Hm(AB({\n            buttons: w\n          }, a)), C = DB(function () {\n            return _;\n          }, {\n            onBlock: function onBlock(n) {\n              fO.block(O, function (t, e) {\n                return dB(n.message, e, a.shared.providers);\n              });\n            },\n            onUnblock: function onUnblock() {\n              fO.unblock(O);\n            },\n            onClose: function onClose() {\n              return u.closeWindow();\n            }\n          }, a.shared.getSink), O = Tu({\n            dom: {\n              tag: \"div\",\n              classes: [\"tox-dialog\", \"tox-dialog-inline\"],\n              attributes: ((s = {\n                role: \"dialog\"\n              })[\"aria-labelledby\"] = v, s[\"aria-describedby\"] = b, s)\n            },\n            eventOrder: ((l = {})[Fi()] = [k_.name(), ic.name()], l[Ii()] = [\"execute-on-form\"], l[Gi()] = [\"reflecting\", \"execute-on-form\"], l),\n            behaviours: ec([Fg.config({\n              mode: \"cyclic\",\n              onEscape: function onEscape(t) {\n                return vr(t, xy), vt.some(!0);\n              },\n              useTabstopAt: function useTabstopAt(t) {\n                return !p0(t) && (\"button\" !== Ft(t) || \"disabled\" !== ie(t, \"disabled\"));\n              }\n            }), k_.config({\n              channel: tA,\n              updateState: function updateState(t, e) {\n                return vt.some(e);\n              },\n              initialData: i\n            }), Vg.config({}), mm(\"execute-on-form\", C.concat([Ar(bi(), function (t, e) {\n              Fg.focusIn(t);\n            })])), fO.config({\n              getRoot: function getRoot() {\n                return vt.some(O);\n              }\n            }), Rg.config({}), pS({})]),\n            components: [y.asSpec(), x.asSpec(), k.asSpec()]\n          }), _ = SB({\n            getRoot: rt(O),\n            getFooter: function getFooter() {\n              return k.get(O);\n            },\n            getBody: function getBody() {\n              return x.get(O);\n            },\n            getFormWrapper: function getFormWrapper() {\n              var t = x.get(O);\n              return cd.getCurrent(t).getOr(t);\n            }\n          }, u.redial, S), {\n            dialog: O,\n            instanceApi: _\n          }),\n          B = Tu(up.sketch(_lt(_lt({\n            lazySink: R.shared.getSink,\n            dom: {\n              tag: \"div\",\n              classes: []\n            },\n            fireDismissalEventInstead: {}\n          }, D ? {} : {\n            fireRepositionEventInstead: {}\n          }), {\n            inlineBehaviours: ec(V([mm(\"window-manager-inline-events\", [Cr(Yi(), function (t, e) {\n              vr(A.dialog, wy);\n            })])], (r = N, P && D ? [] : [j1.config({\n              contextual: {\n                lazyContext: function lazyContext() {\n                  return vt.some(Mn(Mt.fromDom(r.getContentAreaContainer())));\n                },\n                fadeInClass: \"tox-dialog-dock-fadein\",\n                fadeOutClass: \"tox-dialog-dock-fadeout\",\n                transitionClass: \"tox-dialog-dock-transition\"\n              },\n              modes: [\"top\"]\n            })]), !0)),\n            isExtraPart: function isExtraPart(t, e) {\n              return Yb(n = e, \".tox-alert-dialog\") || Yb(n, \".tox-confirm-dialog\");\n              var n;\n            }\n          })));\n        return E.set(B), up.showWithin(B, Eu(A.dialog), {\n          anchor: M\n        }, vt.some(bn())), P && D || (j1.refresh(B), N.on(\"ResizeEditor\", o)), A.instanceApi.setData(T), Fg.focusIn(A.dialog), A.instanceApi;\n      }, t);\n    }\n    var c,\n      s,\n      l,\n      f,\n      R = t.backstage,\n      N = t.editor,\n      P = dv(N),\n      n = (s = (c = t).backstage.shared, {\n        open: function open(t, e) {\n          function n() {\n            OE.hide(u), e();\n          }\n          var o = Hm(Q0({\n              name: \"close-alert\",\n              text: \"OK\",\n              primary: !0,\n              align: \"end\",\n              disabled: !1,\n              icon: vt.none()\n            }, \"cancel\", c.backstage)),\n            r = oB(),\n            i = nB(n, s.providers),\n            u = Tu(aB({\n              lazySink: function lazySink() {\n                return s.getSink();\n              },\n              header: eB(r, i),\n              body: rB(t, s.providers),\n              footer: vt.some(iB(uB([], [o.asSpec()]))),\n              onEscape: n,\n              extraClasses: [\"tox-alert-dialog\"],\n              extraBehaviours: [],\n              extraStyles: {},\n              dialogEvents: [Cr(wy, n)],\n              eventOrder: {}\n            }));\n          OE.show(u);\n          var a = o.get(u);\n          Vg.focus(a);\n        }\n      }),\n      i = (f = (l = t).backstage.shared, {\n        open: function open(t, e) {\n          function n(t) {\n            OE.hide(a), e(t);\n          }\n          var o = Hm(Q0({\n              name: \"yes\",\n              text: \"Yes\",\n              primary: !0,\n              align: \"end\",\n              disabled: !1,\n              icon: vt.none()\n            }, \"submit\", l.backstage)),\n            r = Q0({\n              name: \"no\",\n              text: \"No\",\n              primary: !1,\n              align: \"end\",\n              disabled: !1,\n              icon: vt.none()\n            }, \"cancel\", l.backstage),\n            i = oB(),\n            u = nB(function () {\n              return n(!1);\n            }, f.providers),\n            a = Tu(aB({\n              lazySink: function lazySink() {\n                return f.getSink();\n              },\n              header: eB(i, u),\n              body: rB(t, f.providers),\n              footer: vt.some(iB(uB([], [r, o.asSpec()]))),\n              onEscape: function onEscape() {\n                return n(!1);\n              },\n              extraClasses: [\"tox-confirm-dialog\"],\n              extraBehaviours: [],\n              extraStyles: {},\n              dialogEvents: [Cr(wy, function () {\n                return n(!1);\n              }), Cr(ky, function () {\n                return n(!0);\n              })],\n              eventOrder: {}\n            }));\n          OE.show(a);\n          var c = o.get(a);\n          Vg.focus(c);\n        }\n      });\n    return {\n      open: function open(t, e, n) {\n        return void 0 !== e && \"toolbar\" === e.inline ? r(t, R.shared.anchors.inlineDialog(), n, e.ariaAttrs) : void 0 !== e && \"cursor\" === e.inline ? r(t, R.shared.anchors.cursor(), n, e.ariaAttrs) : o(t, n);\n      },\n      openUrl: function openUrl(t, e) {\n        return n = e, jD.openUrl(function (t) {\n          var e = CB(t, {\n            closeWindow: function closeWindow() {\n              OE.hide(e.dialog), n(e.instanceApi);\n            }\n          }, N, R);\n          return OE.show(e.dialog), e.instanceApi;\n        }, t);\n        var n;\n      },\n      alert: function alert(t, e) {\n        n.open(t, function () {\n          e();\n        });\n      },\n      close: function close(t) {\n        t.close();\n      },\n      confirm: function confirm(t, e) {\n        i.open(t, function (t) {\n          e(t);\n        });\n      }\n    };\n  }\n  var _B = function e(t) {\n      function l(t) {\n        return e(t);\n      }\n      var f = 0 < arguments.length && void 0 !== t ? t : \"undefined\" == typeof window ? null : window;\n      if (l.version = \"2.3.8\", l.removed = [], !f || !f.document || 9 !== f.document.nodeType) return l.isSupported = !1, l;\n      var n,\n        d = f.document,\n        u = f.document,\n        m = f.DocumentFragment,\n        o = f.HTMLTemplateElement,\n        g = f.Node,\n        a = f.Element,\n        r = f.NodeFilter,\n        i = f.NamedNodeMap,\n        c = void 0 === i ? f.NamedNodeMap || f.MozNamedAttrMap : i,\n        s = f.HTMLFormElement,\n        p = f.DOMParser,\n        h = f.trustedTypes,\n        v = a.prototype,\n        b = RA(v, \"cloneNode\"),\n        y = RA(v, \"nextSibling\"),\n        x = RA(v, \"childNodes\"),\n        w = RA(v, \"parentNode\");\n      \"function\" != typeof o || (n = u.createElement(\"template\")).content && n.content.ownerDocument && (u = n.content.ownerDocument);\n      var S = function (t, e) {\n          if (\"object\" !== iA(t) || \"function\" != typeof t.createPolicy) return null;\n          var n = null,\n            o = \"data-tt-policy-suffix\",\n            r = \"dompurify\" + ((n = e.currentScript && e.currentScript.hasAttribute(o) ? e.currentScript.getAttribute(o) : n) ? \"#\" + n : \"\");\n          try {\n            return t.createPolicy(r, {\n              createHTML: function createHTML(t) {\n                return t;\n              }\n            });\n          } catch (t) {\n            return console.warn(\"TrustedTypes policy \" + r + \" could not be created.\"), null;\n          }\n        }(h, d),\n        k = S ? S.createHTML(\"\") : \"\",\n        C = u,\n        O = C.implementation,\n        _ = C.createNodeIterator,\n        T = C.createDocumentFragment,\n        E = C.getElementsByTagName,\n        D = d.importNode,\n        A = {};\n      try {\n        A = IA(u).documentMode ? u.documentMode : {};\n      } catch (t) {}\n      var B = {};\n      function M(t) {\n        return t instanceof RegExp || t instanceof Function;\n      }\n      function F(t) {\n        St && St === t || (t = IA(t = t && \"object\" === iA(t) ? t : {}), G = \"ALLOWED_TAGS\" in t ? FA({}, t.ALLOWED_TAGS) : X, Y = \"ALLOWED_ATTR\" in t ? FA({}, t.ALLOWED_ATTR) : q, pt = \"ADD_URI_SAFE_ATTR\" in t ? FA(IA(ht), t.ADD_URI_SAFE_ATTR) : ht, mt = \"ADD_DATA_URI_TAGS\" in t ? FA(IA(gt), t.ADD_DATA_URI_TAGS) : gt, ft = \"FORBID_CONTENTS\" in t ? FA({}, t.FORBID_CONTENTS) : dt, J = \"FORBID_TAGS\" in t ? FA({}, t.FORBID_TAGS) : {}, $ = \"FORBID_ATTR\" in t ? FA({}, t.FORBID_ATTR) : {}, I = \"USE_PROFILES\" in t && t.USE_PROFILES, Q = !1 !== t.ALLOW_ARIA_ATTR, Z = !1 !== t.ALLOW_DATA_ATTR, tt = t.ALLOW_UNKNOWN_PROTOCOLS || !1, et = t.SAFE_FOR_TEMPLATES || !1, nt = t.WHOLE_DOCUMENT || !1, it = t.RETURN_DOM || !1, ut = t.RETURN_DOM_FRAGMENT || !1, at = t.RETURN_TRUSTED_TYPE || !1, rt = t.FORCE_BODY || !1, ct = !1 !== t.SANITIZE_DOM, st = !1 !== t.KEEP_CONTENT, lt = t.IN_PLACE || !1, W = t.ALLOWED_URI_REGEXP || W, xt = t.NAMESPACE || yt, t.CUSTOM_ELEMENT_HANDLING && M(t.CUSTOM_ELEMENT_HANDLING.tagNameCheck) && (K.tagNameCheck = t.CUSTOM_ELEMENT_HANDLING.tagNameCheck), t.CUSTOM_ELEMENT_HANDLING && M(t.CUSTOM_ELEMENT_HANDLING.attributeNameCheck) && (K.attributeNameCheck = t.CUSTOM_ELEMENT_HANDLING.attributeNameCheck), t.CUSTOM_ELEMENT_HANDLING && \"boolean\" == typeof t.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (K.allowCustomizedBuiltInElements = t.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements), R = -1 === wt.indexOf(t.PARSER_MEDIA_TYPE) ? \"text/html\" : t.PARSER_MEDIA_TYPE, N = \"application/xhtml+xml\" === R ? function (t) {\n          return t;\n        } : OA, et && (Z = !1), ut && (it = !0), I && (G = FA({}, cA(UA)), Y = [], !0 === I.html && (FA(G, NA), FA(Y, jA)), !0 === I.svg && (FA(G, PA), FA(Y, WA), FA(Y, XA)), !0 === I.svgFilters && (FA(G, VA), FA(Y, WA), FA(Y, XA)), !0 === I.mathMl && (FA(G, LA), FA(Y, GA), FA(Y, XA))), t.ADD_TAGS && FA(G = G === X ? IA(G) : G, t.ADD_TAGS), t.ADD_ATTR && FA(Y = Y === q ? IA(Y) : Y, t.ADD_ATTR), t.ADD_URI_SAFE_ATTR && FA(pt, t.ADD_URI_SAFE_ATTR), t.FORBID_CONTENTS && FA(ft = ft === dt ? IA(ft) : ft, t.FORBID_CONTENTS), st && (G[\"#text\"] = !0), nt && FA(G, [\"html\", \"head\", \"body\"]), G.table && (FA(G, [\"tbody\"]), delete J.tbody), hA && hA(t), St = t);\n      }\n      l.isSupported = \"function\" == typeof w && O && void 0 !== O.createHTMLDocument && 9 !== A;\n      var I,\n        R,\n        N,\n        P,\n        V = YA,\n        H = qA,\n        L = KA,\n        z = JA,\n        U = QA,\n        j = ZA,\n        W = $A,\n        G = null,\n        X = FA({}, [].concat(cA(NA), cA(PA), cA(VA), cA(LA), cA(UA))),\n        Y = null,\n        q = FA({}, [].concat(cA(jA), cA(WA), cA(GA), cA(XA))),\n        K = Object.seal(Object.create(null, {\n          tagNameCheck: {\n            writable: !0,\n            configurable: !1,\n            enumerable: !0,\n            value: null\n          },\n          attributeNameCheck: {\n            writable: !0,\n            configurable: !1,\n            enumerable: !0,\n            value: null\n          },\n          allowCustomizedBuiltInElements: {\n            writable: !0,\n            configurable: !1,\n            enumerable: !0,\n            value: !1\n          }\n        })),\n        J = null,\n        $ = null,\n        Q = !0,\n        Z = !0,\n        tt = !1,\n        et = !1,\n        nt = !1,\n        ot = !1,\n        rt = !1,\n        it = !1,\n        ut = !1,\n        at = !1,\n        ct = !0,\n        st = !0,\n        lt = !1,\n        ft = null,\n        dt = FA({}, [\"annotation-xml\", \"audio\", \"colgroup\", \"desc\", \"foreignobject\", \"head\", \"iframe\", \"math\", \"mi\", \"mn\", \"mo\", \"ms\", \"mtext\", \"noembed\", \"noframes\", \"noscript\", \"plaintext\", \"script\", \"style\", \"svg\", \"template\", \"thead\", \"title\", \"video\", \"xmp\"]),\n        mt = null,\n        gt = FA({}, [\"audio\", \"video\", \"img\", \"source\", \"image\", \"track\"]),\n        pt = null,\n        ht = FA({}, [\"alt\", \"class\", \"for\", \"id\", \"label\", \"name\", \"pattern\", \"placeholder\", \"role\", \"summary\", \"title\", \"value\", \"style\", \"xmlns\"]),\n        vt = \"http://www.w3.org/1998/Math/MathML\",\n        bt = \"http://www.w3.org/2000/svg\",\n        yt = \"http://www.w3.org/1999/xhtml\",\n        xt = yt,\n        wt = [\"application/xhtml+xml\", \"text/html\"],\n        St = null,\n        kt = u.createElement(\"form\"),\n        Ct = FA({}, [\"mi\", \"mo\", \"mn\", \"ms\", \"mtext\"]),\n        Ot = FA({}, [\"foreignobject\", \"desc\", \"title\", \"annotation-xml\"]),\n        _t = FA({}, [\"title\", \"style\", \"font\", \"a\", \"script\"]),\n        Tt = FA({}, PA);\n      FA(Tt, VA), FA(Tt, HA);\n      var Et = FA({}, LA);\n      function Dt(e) {\n        CA(l.removed, {\n          element: e\n        });\n        try {\n          e.parentNode.removeChild(e);\n        } catch (t) {\n          try {\n            e.outerHTML = k;\n          } catch (t) {\n            e.remove();\n          }\n        }\n      }\n      function At(t, e) {\n        try {\n          CA(l.removed, {\n            attribute: e.getAttributeNode(t),\n            from: e\n          });\n        } catch (t) {\n          CA(l.removed, {\n            attribute: null,\n            from: e\n          });\n        }\n        if (e.removeAttribute(t), \"is\" === t && !Y[t]) if (it || ut) try {\n          Dt(e);\n        } catch (t) {} else try {\n          e.setAttribute(t, \"\");\n        } catch (t) {}\n      }\n      function Bt(t) {\n        var e, n, o;\n        rt ? t = \"<remove></remove>\" + t : o = (n = _A(t, /^[\\r\\n\\t ]+/)) && n[0], \"application/xhtml+xml\" === R && (t = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + t + \"</body></html>\");\n        var r = S ? S.createHTML(t) : t;\n        if (xt === yt) try {\n          e = new p().parseFromString(r, R);\n        } catch (t) {}\n        if (!e || !e.documentElement) {\n          e = O.createDocument(xt, \"template\", null);\n          try {\n            e.documentElement.innerHTML = P ? \"\" : r;\n          } catch (t) {}\n        }\n        var i = e.body || e.documentElement;\n        return t && o && i.insertBefore(u.createTextNode(o), i.childNodes[0] || null), xt === yt ? E.call(e, nt ? \"html\" : \"body\")[0] : nt ? e.documentElement : i;\n      }\n      function Mt(t) {\n        return _.call(t.ownerDocument || t, t, r.SHOW_ELEMENT | r.SHOW_COMMENT | r.SHOW_TEXT, null, !1);\n      }\n      function Ft(t) {\n        return \"object\" === iA(g) ? t instanceof g : t && \"object\" === iA(t) && \"number\" == typeof t.nodeType && \"string\" == typeof t.nodeName;\n      }\n      function It(t, e, n) {\n        B[t] && SA(B[t], function (t) {\n          t.call(l, e, n, St);\n        });\n      }\n      function Rt(t) {\n        var e;\n        if (It(\"beforeSanitizeElements\", t, null), t instanceof s && (\"string\" != typeof t.nodeName || \"string\" != typeof t.textContent || \"function\" != typeof t.removeChild || !(t.attributes instanceof c) || \"function\" != typeof t.removeAttribute || \"function\" != typeof t.setAttribute || \"string\" != typeof t.namespaceURI || \"function\" != typeof t.insertBefore)) return Dt(t), 1;\n        if (AA(/[\\u0080-\\uFFFF]/, t.nodeName)) return Dt(t), 1;\n        var n = N(t.nodeName);\n        if (It(\"uponSanitizeElement\", t, {\n          tagName: n,\n          allowedTags: G\n        }), t.hasChildNodes() && !Ft(t.firstElementChild) && (!Ft(t.content) || !Ft(t.content.firstElementChild)) && AA(/<[/\\w]/g, t.innerHTML) && AA(/<[/\\w]/g, t.textContent)) return Dt(t), 1;\n        if (\"select\" === n && AA(/<template/i, t.innerHTML)) return Dt(t), 1;\n        if (G[n] && !J[n]) return t instanceof a && !function (t) {\n          var e = w(t);\n          e && e.tagName || (e = {\n            namespaceURI: yt,\n            tagName: \"template\"\n          });\n          var n = OA(t.tagName),\n            o = OA(e.tagName);\n          return t.namespaceURI === bt ? e.namespaceURI === yt ? \"svg\" === n : e.namespaceURI === vt ? \"svg\" === n && (\"annotation-xml\" === o || Ct[o]) : Boolean(Tt[n]) : t.namespaceURI === vt ? e.namespaceURI === yt ? \"math\" === n : e.namespaceURI === bt ? \"math\" === n && Ot[o] : Boolean(Et[n]) : t.namespaceURI === yt && (e.namespaceURI !== bt || Ot[o]) && (e.namespaceURI !== vt || Ct[o]) && !Et[n] && (_t[n] || !Tt[n]);\n        }(t) || (\"noscript\" === n || \"noembed\" === n) && AA(/<\\/no(script|embed)/i, t.innerHTML) ? (Dt(t), 1) : (et && 3 === t.nodeType && (e = t.textContent, e = TA(e, V, \" \"), e = TA(e, H, \" \"), t.textContent !== e && (CA(l.removed, {\n          element: t.cloneNode()\n        }), t.textContent = e)), It(\"afterSanitizeElements\", t, null), 0);\n        if (!J[n] && Vt(n)) {\n          if (K.tagNameCheck instanceof RegExp && AA(K.tagNameCheck, n)) return;\n          if (K.tagNameCheck instanceof Function && K.tagNameCheck(n)) return;\n        }\n        if (st && !ft[n]) {\n          var o = w(t) || t.parentNode,\n            r = x(t) || t.childNodes;\n          if (r && o) for (var i = r.length - 1; 0 <= i; --i) o.insertBefore(b(r[i], !0), y(t));\n        }\n        return Dt(t), 1;\n      }\n      function Nt(t, e, n) {\n        if (ct && (\"id\" === e || \"name\" === e) && (n in u || n in kt)) return !1;\n        if ((!Z || $[e] || !AA(L, e)) && (!Q || !AA(z, e))) if (!Y[e] || $[e]) {\n          if (!(Vt(t) && (K.tagNameCheck instanceof RegExp && AA(K.tagNameCheck, t) || K.tagNameCheck instanceof Function && K.tagNameCheck(t)) && (K.attributeNameCheck instanceof RegExp && AA(K.attributeNameCheck, e) || K.attributeNameCheck instanceof Function && K.attributeNameCheck(e)) || \"is\" === e && K.allowCustomizedBuiltInElements && (K.tagNameCheck instanceof RegExp && AA(K.tagNameCheck, n) || K.tagNameCheck instanceof Function && K.tagNameCheck(n)))) return !1;\n        } else if (!pt[e] && !AA(W, TA(n, j, \"\")) && (\"src\" !== e && \"xlink:href\" !== e && \"href\" !== e || \"script\" === t || 0 !== EA(n, \"data:\") || !mt[t]) && (!tt || AA(U, TA(n, j, \"\"))) && n) return !1;\n        return !0;\n      }\n      function Pt(t) {\n        It(\"beforeSanitizeAttributes\", t, null);\n        var e = t.attributes;\n        if (e) {\n          for (var n = {\n              attrName: \"\",\n              attrValue: \"\",\n              keepAttr: !0,\n              allowedAttributes: Y\n            }, o = e.length; o--;) {\n            var r,\n              i = (r = e[o]).name,\n              u = r.namespaceURI,\n              a = \"value\" === i ? r.value : DA(r.value),\n              c = N(i);\n            if (n.attrName = c, n.attrValue = a, n.keepAttr = !0, n.forceKeepAttr = void 0, It(\"uponSanitizeAttribute\", t, n), a = n.attrValue, !n.forceKeepAttr && (At(i, t), n.keepAttr)) if (AA(/\\/>/i, a)) At(i, t);else if (et && (a = TA(a, V, \" \"), a = TA(a, H, \" \")), Nt(N(t.nodeName), c, a)) try {\n              u ? t.setAttributeNS(u, i, a) : t.setAttribute(i, a), kA(l.removed);\n            } catch (t) {}\n          }\n          It(\"afterSanitizeAttributes\", t, null);\n        }\n      }\n      FA(Et, zA);\n      var Vt = function Vt(t) {\n        return 0 < t.indexOf(\"-\");\n      };\n      return l.sanitize = function (t, e) {\n        var n, o, r, i, u;\n        if (\"string\" != typeof (t = (P = !t) ? \"\\x3c!--\\x3e\" : t) && !Ft(t)) {\n          if (\"function\" != typeof t.toString) throw BA(\"toString is not a function\");\n          if (\"string\" != typeof (t = t.toString())) throw BA(\"dirty is not a string, aborting\");\n        }\n        if (!l.isSupported) {\n          if (\"object\" === iA(f.toStaticHTML) || \"function\" == typeof f.toStaticHTML) {\n            if (\"string\" == typeof t) return f.toStaticHTML(t);\n            if (Ft(t)) return f.toStaticHTML(t.outerHTML);\n          }\n          return t;\n        }\n        if (ot || F(e), l.removed = [], lt = \"string\" != typeof t && lt) {\n          if (t.nodeName) {\n            var a = N(t.nodeName);\n            if (!G[a] || J[a]) throw BA(\"root node is forbidden and cannot be sanitized in-place\");\n          }\n        } else if (t instanceof g) 1 === (o = (n = Bt(\"\\x3c!----\\x3e\")).ownerDocument.importNode(t, !0)).nodeType && \"BODY\" === o.nodeName || \"HTML\" === o.nodeName ? n = o : n.appendChild(o);else {\n          if (!it && !et && !nt && -1 === t.indexOf(\"<\")) return S && at ? S.createHTML(t) : t;\n          if (!(n = Bt(t))) return it ? null : at ? k : \"\";\n        }\n        n && rt && Dt(n.firstChild);\n        for (var c = Mt(lt ? t : n); r = c.nextNode();) 3 === r.nodeType && r === i || Rt(r) || (r.content instanceof m && function t(e) {\n          var n,\n            o = Mt(e);\n          for (It(\"beforeSanitizeShadowDOM\", e, null); n = o.nextNode();) It(\"uponSanitizeShadowNode\", n, null), Rt(n) || (n.content instanceof m && t(n.content), Pt(n));\n          It(\"afterSanitizeShadowDOM\", e, null);\n        }(r.content), Pt(r), i = r);\n        if (i = null, lt) return t;\n        if (it) {\n          if (ut) for (u = T.call(n.ownerDocument); n.firstChild;) u.appendChild(n.firstChild);else u = n;\n          return Y.shadowroot ? D.call(d, u, !0) : u;\n        }\n        var s = nt ? n.outerHTML : n.innerHTML;\n        return nt && G[\"!doctype\"] && n.ownerDocument && n.ownerDocument.doctype && n.ownerDocument.doctype.name && AA(tB, n.ownerDocument.doctype.name) && (s = \"<!DOCTYPE \" + n.ownerDocument.doctype.name + \">\\n\" + s), et && (s = TA(s, V, \" \"), s = TA(s, H, \" \")), S && at ? S.createHTML(s) : s;\n      }, l.setConfig = function (t) {\n        F(t), ot = !0;\n      }, l.clearConfig = function () {\n        St = null, ot = !1;\n      }, l.isValidAttribute = function (t, e, n) {\n        return St || F({}), Nt(N(t), N(e), n);\n      }, l.addHook = function (t, e) {\n        \"function\" == typeof e && (B[t] = B[t] || [], CA(B[t], e));\n      }, l.removeHook = function (t) {\n        if (B[t]) return kA(B[t]);\n      }, l.removeHooks = function (t) {\n        B[t] && (B[t] = []);\n      }, l.removeAllHooks = function () {\n        B = {};\n      }, l;\n    }(),\n    TB = eb.deviceType.isTouch(),\n    EB = function EB(u, t) {\n      function e(t, i) {\n        return Cr(t, function (n, o) {\n          var e, r;\n          e = n, r = function r(t, e) {\n            i(u(), t, o.event, n);\n          }, k_.getState(e).get().each(function (t) {\n            r(t, e);\n          });\n        });\n      }\n      return V(V([], vB(e, t), !0), [e(Sy, function (t, e, n) {\n        e.onAction(t, {\n          name: n.name\n        });\n      })], !1);\n    },\n    DB = function DB(u, t, c) {\n      function e(t, i) {\n        return Cr(t, function (n, o) {\n          var e, r;\n          e = n, r = function r(t, e) {\n            i(u(), t, o.event, n);\n          }, k_.getState(e).get().each(function (t) {\n            r(t.internalDialog, e);\n          });\n        });\n      }\n      return V(V([], vB(e, t), !0), [e(ky, function (t, e) {\n        return e.onSubmit(t);\n      }), e(yy, function (t, e, n) {\n        e.onChange(t, {\n          name: n.name\n        });\n      }), e(Sy, function (t, e, n, o) {\n        function r() {\n          return Fg.focusIn(o);\n        }\n        function i(t) {\n          return ae(t, \"disabled\") || ue(t, \"aria-disabled\").exists(function (t) {\n            return \"true\" === t;\n          });\n        }\n        var u = gn(o.element),\n          a = Oa(u);\n        e.onAction(t, {\n          name: n.name,\n          value: n.value\n        }), Oa(u).fold(r, function (e) {\n          i(e) || a.exists(function (t) {\n            return Ut(e, t) && i(t);\n          }) ? r() : c().toOptional().filter(function (t) {\n            return !Ut(t.element, e);\n          }).each(r);\n        });\n      }), e(_y, function (t, e, n) {\n        e.onTabChange(t, {\n          newTabName: n.name,\n          oldTabName: n.oldName\n        });\n      }), ru(function (t) {\n        var e = u();\n        Df.setValue(t, e.getData());\n      })], !1);\n    },\n    AB = yB,\n    BB = tinymce.util.Tools.resolve(\"tinymce.util.URI\"),\n    MB = [\"insertContent\", \"setContent\", \"execCommand\", \"close\", \"block\", \"unblock\"];\n  o.add(\"silver\", function (t) {\n    var e = fE(t),\n      n = e.uiMothership,\n      o = e.backstage,\n      r = e.renderUI,\n      i = e.getUi;\n    return uy(t, o.shared), {\n      renderUI: r,\n      getWindowManagerImpl: rt(OB({\n        editor: t,\n        backstage: o\n      })),\n      getNotificationManagerImpl: function getNotificationManagerImpl() {\n        return u = t, r = n, l = {\n          backstage: o\n        }.backstage.shared, {\n          open: function open(t, e) {\n            function n() {\n              e(), up.hide(c);\n            }\n            var o = !t.closeButton && t.timeout && (0 < t.timeout || t.timeout < 0),\n              a = Tu(hp.sketch({\n                text: t.text,\n                level: wt([\"success\", \"error\", \"warning\", \"warn\", \"info\"], t.type) ? t.type : void 0,\n                progress: !0 === t.progressBar,\n                icon: vt.from(t.icon),\n                closeButton: !o,\n                onAction: n,\n                iconProvider: l.providers.icons,\n                translationProvider: l.providers.translate\n              })),\n              c = Tu(up.sketch(_lt({\n                dom: {\n                  tag: \"div\",\n                  classes: [\"tox-notifications-container\"]\n                },\n                lazySink: l.getSink,\n                fireDismissalEventInstead: {}\n              }, l.header.isPositionedAtTop() ? {} : {\n                fireRepositionEventInstead: {}\n              })));\n            function s() {\n              var t = Mn(Mt.fromDom(u.getContentAreaContainer())),\n                e = Fn(),\n                n = Wa(e.x, t.x, t.right),\n                o = Wa(e.y, t.y, t.bottom),\n                r = Math.max(t.right, e.right),\n                i = Math.max(t.bottom, e.bottom);\n              return vt.some(Bn(n, o, r - n, i - o));\n            }\n            return r.add(c), 0 < t.timeout && lp.setTimeout(function () {\n              n();\n            }, t.timeout), {\n              close: n,\n              moveTo: function moveTo(t, e) {\n                up.showAt(c, Eu(a), {\n                  anchor: {\n                    type: \"makeshift\",\n                    x: t,\n                    y: e\n                  }\n                });\n              },\n              moveRel: function moveRel(t, e) {\n                var n,\n                  o,\n                  r,\n                  i = Eu(a),\n                  u = {\n                    maxHeightFunction: Nc()\n                  };\n                \"banner\" !== e && k(t) ? (n = function () {\n                  switch (e) {\n                    case \"bc-bc\":\n                      return sp;\n                    case \"tc-tc\":\n                      return cp;\n                    case \"tc-bc\":\n                      return Ja;\n                    default:\n                      return $a;\n                  }\n                }(), o = {\n                  type: \"node\",\n                  root: bn(),\n                  node: vt.some(Mt.fromDom(t)),\n                  overrides: u,\n                  layouts: {\n                    onRtl: function onRtl() {\n                      return [n];\n                    },\n                    onLtr: function onLtr() {\n                      return [n];\n                    }\n                  }\n                }, up.showWithinBounds(c, i, {\n                  anchor: o\n                }, s)) : (r = _lt(_lt({}, l.anchors.banner()), {\n                  overrides: u\n                }), up.showWithinBounds(c, i, {\n                  anchor: r\n                }, s));\n              },\n              text: function text(t) {\n                hp.updateText(a, t);\n              },\n              settings: t,\n              getEl: function getEl() {\n                return a.element.dom;\n              },\n              progressBar: {\n                value: function value(t) {\n                  hp.updateProgress(a, t);\n                }\n              }\n            };\n          },\n          close: function close(t) {\n            t.close();\n          },\n          reposition: function reposition(n) {\n            0 < n.length && St(n, function (t, e) {\n              0 === e ? t.moveRel(null, \"banner\") : t.moveRel(n[e - 1].getEl(), \"bc-tc\");\n            });\n          },\n          getArgs: function getArgs(t) {\n            return t.settings;\n          }\n        };\n        var u, r, l;\n      },\n      ui: i()\n    };\n  });\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvcGx1Z2lucy9jdXN0b20vdGlueW1jZS90aGVtZXMvc2lsdmVyL3RoZW1lLm1pbi5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsWUFBVTtFQUFDLFlBQVk7O0VBQUMsU0FBU0EsQ0FBQ0EsQ0FBQ0MsQ0FBQyxFQUFDO0lBQUMsT0FBTyxVQUFTRCxDQUFDLEVBQUM7TUFBQyxPQUFPRSxDQUFDLEdBQUFDLE9BQUEsQ0FBUUMsQ0FBQyxHQUFDSixDQUFDLENBQUMsRUFBQyxDQUFDLElBQUksS0FBR0ksQ0FBQyxHQUFDLE1BQU0sR0FBQyxRQUFRLElBQUVGLENBQUMsS0FBR0csS0FBSyxDQUFDQyxTQUFTLENBQUNDLGFBQWEsQ0FBQ0gsQ0FBQyxDQUFDLElBQUVBLENBQUMsQ0FBQ0ksV0FBVyxJQUFFLE9BQU8sS0FBR0osQ0FBQyxDQUFDSSxXQUFXLENBQUNDLElBQUksQ0FBQyxHQUFDLE9BQU8sR0FBQyxRQUFRLElBQUVQLENBQUMsS0FBR1EsTUFBTSxDQUFDSixTQUFTLENBQUNDLGFBQWEsQ0FBQ0gsQ0FBQyxDQUFDLElBQUVBLENBQUMsQ0FBQ0ksV0FBVyxJQUFFLFFBQVEsS0FBR0osQ0FBQyxDQUFDSSxXQUFXLENBQUNDLElBQUksQ0FBQyxHQUFDLFFBQVEsR0FBQ1AsQ0FBQyxNQUFJRCxDQUFDO01BQUMsSUFBSUcsQ0FBQyxFQUFDRixDQUFDO0lBQUEsQ0FBQztFQUFBO0VBQUMsU0FBU0UsQ0FBQ0EsQ0FBQ0EsQ0FBQyxFQUFDO0lBQUMsT0FBTyxVQUFTSixDQUFDLEVBQUM7TUFBQyxPQUFPRyxPQUFBLENBQU9ILENBQUMsTUFBR0ksQ0FBQztJQUFBLENBQUM7RUFBQTtFQUFDLFNBQVNGLENBQUNBLENBQUNFLENBQUMsRUFBQztJQUFDLE9BQU8sVUFBU0osQ0FBQyxFQUFDO01BQUMsT0FBT0ksQ0FBQyxLQUFHSixDQUFDO0lBQUEsQ0FBQztF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RUFBQ0ksQ0FBQyxDQUFDLEVBQUNGLENBQUMsQ0FBQ216QixTQUFTLEVBQUUsRUFBQ00sRUFBRSxFQUFFLEVBQUMsV0FBVyxFQUFDL0QsRUFBRSxDQUFDNXZCLENBQUMsRUFBQztRQUFDb1QsSUFBSSxFQUFDLENBQUM7UUFBQ04sTUFBTSxFQUFDO01BQUMsQ0FBQyxDQUFDLEVBQUN1ZCxFQUFFLENBQUM7SUFBQSxDQUFDO0lBQUNRLEVBQUUsR0FBQyxTQUFIQSxFQUFFQSxDQUFVN3dCLENBQUMsRUFBQ0ksQ0FBQyxFQUFDRixDQUFDLEVBQUM7TUFBQyxPQUFPa3ZCLEVBQUUsQ0FBQ1UsRUFBRSxDQUFDOXZCLENBQUMsRUFBQ0ksQ0FBQyxDQUFDLEVBQUMydkIsRUFBRSxDQUFDL3ZCLENBQUMsRUFBQ0ksQ0FBQyxDQUFDLEVBQUNGLENBQUMsQ0FBQ296QixTQUFTLEVBQUUsRUFBQ00sRUFBRSxFQUFFLEVBQUMsV0FBVyxFQUFDaEUsRUFBRSxDQUFDNXZCLENBQUMsRUFBQztRQUFDNlMsS0FBSyxFQUFDLENBQUM7UUFBQ0MsTUFBTSxFQUFDO01BQUMsQ0FBQyxDQUFDLEVBQUN1ZCxFQUFFLENBQUM7SUFBQSxDQUFDO0lBQUNVLEVBQUUsR0FBQyxTQUFIQSxFQUFFQSxDQUFVL3dCLENBQUMsRUFBQ0ksQ0FBQyxFQUFDRixDQUFDLEVBQUM7TUFBQyxPQUFPa3ZCLEVBQUUsQ0FBQ1MsRUFBRSxDQUFDN3ZCLENBQUMsRUFBQ0ksQ0FBQyxDQUFDLEVBQUMydkIsRUFBRSxDQUFDL3ZCLENBQUMsRUFBQ0ksQ0FBQyxDQUFDLEVBQUNGLENBQUMsQ0FBQ3N6QixLQUFLLEVBQUUsRUFBQ00sRUFBRSxFQUFFLEVBQUMsT0FBTyxFQUFDbEUsRUFBRSxDQUFDNXZCLENBQUMsRUFBQztRQUFDOFMsTUFBTSxFQUFDO01BQUMsQ0FBQyxDQUFDLEVBQUN1ZCxFQUFFLENBQUM7SUFBQSxDQUFDO0lBQUNTLEVBQUUsR0FBQyxTQUFIQSxFQUFFQSxDQUFVOXdCLENBQUMsRUFBQ0ksQ0FBQyxFQUFDRixDQUFDLEVBQUM7TUFBQyxP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QUFPRCxDQUFDLEdBQUM2TyxVQUFVLENBQUM3TyxDQUFDLENBQUMsR0FBQ0EsQ0FBQztJQUFDLE9BQU9FLENBQUMsR0FBQ0QsQ0FBQyxHQUFDQSxDQUFDLEdBQUNDLENBQUMsR0FBQ0QsQ0FBQyxHQUFDRyxDQUFDLEtBQUdILENBQUMsR0FBQ0csQ0FBQyxDQUFDLEVBQUNILENBQUM7RUFBQTtFQUFDLFNBQVN5dkUsRUFBRUEsQ0FBQSxFQUFFO0lBQUMsT0FBTSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQztFQUFBO0VBQUMsU0FBU0MsRUFBRUEsQ0FBQzN2RSxDQUFDLEVBQUNJLENBQUMsRUFBQztJQUFDLEtBQUksSUFBSUYsQ0FBQyxHQUFDLEVBQUUsRUFBQ0QsQ0FBQyxHQUFDLElBQUlJLEtBQUssQ0FBQyxFQUFFLENBQUMsRUFBQ1csQ0FBQyxHQUFDLENBQUMsRUFBQ0EsQ0FBQyxHQUFDLENBQUMsRUFBQ0EsQ0FBQyxFQUFFLEVBQUM7TUFBQyxLQUFJLElBQUltQyxDQUFDLEdBQUMsQ0FBQyxFQUFDQSxDQUFDLEdBQUMsQ0FBQyxFQUFDQSxDQUFDLEVBQUUsRUFBQ2pELENBQUMsQ0FBQ2lELENBQUMsQ0FBQyxHQUFDL0MsQ0FBQyxDQUFDK0MsQ0FBQyxHQUFDLENBQUMsR0FBQ25DLENBQUMsQ0FBQztNQUFDLEtBQUltQyxDQUFDLEdBQUMsQ0FBQyxFQUFDQSxDQUFDLEdBQUMsQ0FBQyxFQUFDQSxDQUFDLEVBQUUsRUFBQztRQUFDLEtBQUksSUFBSXRCLENBQUMsR0FBQyxDQUFDLEVBQUN3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R0FBRyxFQUFDLEVBQUUsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxDQUFDLEVBQUMsSUFBSSxFQUFDLElBQUksRUFBQyxJQUFJLEVBQUMsSUFBSSxFQUFDLEdBQUcsRUFBQyxJQUFJLEVBQUMsSUFBSSxFQUFDLElBQUksRUFBQyxJQUFJLEVBQUMsR0FBRyxFQUFDLElBQUksRUFBQyxJQUFJLEVBQUMsSUFBSSxFQUFDLElBQUksRUFBQyxHQUFHLEVBQUMsSUFBSSxFQUFDLENBQUMsRUFBQyxJQUFJLEVBQUMsSUFBSSxFQUFDLElBQUksRUFBQyxHQUFHLEVBQUMsSUFBSSxFQUFDLElBQUksRUFBQyxJQUFJLEVBQUMsQ0FBQyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxDQUFDLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsQ0FBQyxFQUFDLEdBQUcsRUFBQyxDQUFDLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxDQUFDLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsQ0FBQyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsQ0FBQyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEVBQUUsQ0FBQztJQUFDeEosRUFBRSxHQUFDLFNBQUhBLEVBQUVBLENBQVU3dkUsQ0FBQyxFQUFDSSxDQUFDLEVBQUMrQixDQUFDLEVBQUM7TUFBQyxJQUFJakMsQ0FBQyxHQUFDd3RFLEVBQUUsQ0FBQzF0RSxDQUFDLENBQUM7UUFBQ0MsQ0FBQyxHQUFDLFVBQVNELENBQUMsRUFBQztVQUFDLEtBQUksSUFBSUksQ0FBQyxFQUFDRixDQUFDLEVBQUNELENBQUMsRUFBQ2UsQ0FBQyxFQUFDbUMsQ0FBQyxHQUFDbkQsQ0FBQyxDQUFDZ21CLElBQUksRUFBQ25rQixDQUFDLEdBQUNNLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBQ2tCLENBQUMsR0FBQ2xCLENBQUMsQ0FBQyxD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QUFDLElBQUksRUFBQyxTQUFTLEVBQUMsSUFBSSxFQUFDLFVBQVUsRUFBQyxZQUFZLEVBQUMsUUFBUSxFQUFDLE1BQU0sRUFBQyxRQUFRLEVBQUMsTUFBTSxFQUFDLElBQUksRUFBQyxJQUFJLEVBQUMsSUFBSSxFQUFDLElBQUksRUFBQyxJQUFJLEVBQUMsSUFBSSxFQUFDLE1BQU0sRUFBQyxRQUFRLEVBQUMsUUFBUSxFQUFDLElBQUksRUFBQyxNQUFNLEVBQUMsR0FBRyxFQUFDLEtBQUssRUFBQyxPQUFPLEVBQUMsS0FBSyxFQUFDLEtBQUssRUFBQyxPQUFPLEVBQUMsUUFBUSxFQUFDLElBQUksRUFBQyxNQUFNLEVBQUMsS0FBSyxFQUFDLE1BQU0sRUFBQyxTQUFTLEVBQUMsTUFBTSxFQUFDLFVBQVUsRUFBQyxPQUFPLEVBQUMsS0FBSyxFQUFDLE1BQU0sRUFBQyxJQUFJLEVBQUMsVUFBVSxFQUFDLFFBQVEsRUFBQyxRQUFRLEVBQUMsR0FBRyxFQUFDLFNBQVMsRUFBQyxLQUFLLEVBQUMsVUFBVSxFQUFDLEdBQUcsRUFBQyxJQUFJLEVBQUMsSUFBSSxFQUFDLE1BQU0sRUFBQyxHQUFHLEVBQUMsTUFBTSxFQUFDLFNBQVMsRUFBQyxRQUFRLEVBQUMsUUFBUSxFQUFDLE9BQU8sRUFBQyxRQUFRLEVBQUMsUUFBUSxFQUFDLE1BQU0sRUFBQyxRQUFRLEVBQUMsUUFBUSxFQUFDLE9BQU8sRUFBQyxLQUFLLEVBQUMsU0FBUyxFQUFDLEtBQUssRUFBQyxPQUFPLEVBQUMsT0FBTyxFQUFDLElBQUksRUFBQyxVQUFVLEVBQUMsVUFBVSxFQUFDLE9BQU8sRUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFDLE1BQU0sRUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFDLElBQUksRUFBQyxHQUFHLEVBQUMsSUFBSSxFQUFDLEtBQUssRUFBQyxPQUFPLEVBQUMsS0FBSyxDQUFDLENBQUM7SUFBQ3dCLEVBQUUsR0FBQ3hCLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBQyxHQUFHLEVBQUMsVUFBVSxFQUFDLGFBQWEsRUFBQyxjQUFjLEVB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USxFQUFDLGFBQWEsRUFBQyxVQUFVLEVBQUMsVUFBVSxFQUFDLFNBQVMsRUFBQyxLQUFLLEVBQUMsVUFBVSxFQUFDLHlCQUF5QixFQUFDLHVCQUF1QixFQUFDLFVBQVUsRUFBQyxXQUFXLEVBQUMsU0FBUyxFQUFDLGNBQWMsRUFBQyxNQUFNLEVBQUMsS0FBSyxFQUFDLFNBQVMsRUFBQyxRQUFRLEVBQUMsUUFBUSxFQUFDLE1BQU0sRUFBQyxNQUFNLEVBQUMsVUFBVSxFQUFDLElBQUksRUFBQyxXQUFXLEVBQUMsV0FBVyxFQUFDLE9BQU8sRUFBQyxNQUFNLEVBQUMsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLEVBQUMsU0FBUyxFQUFDLE1BQU0sRUFBQyxLQUFLLEVBQUMsS0FBSyxFQUFDLFdBQVcsRUFBQyxPQUFPLEVBQUMsUUFBUSxFQUFDLEtBQUssRUFBQyxXQUFXLEVBQUMsVUFBVSxFQUFDLE9BQU8sRUFBQyxNQUFNLEVBQUMsT0FBTyxFQUFDLFNBQVMsRUFBQyxZQUFZLEVBQUMsUUFBUSxFQUFDLE1BQU0sRUFBQyxTQUFTLEVBQUMsU0FBUyxFQUFDLGFBQWEsRUFBQyxhQUFhLEVBQUMsUUFBUSxFQUFDLFNBQVMsRUFBQyxTQUFTLEVBQUMsWUFBWSxFQUFDLFVBQVUsRUFBQyxLQUFLLEVBQUMsVUFBVSxFQUFDLEtBQUssRUFBQyxVQUFVLEVBQUMsTUFBTSxFQUFDLE1BQU0sRUFBQyxTQUFTLEVBQUMsWUFBWSxFQUFDLE9BQU8sRUFBQyxVQUFVLEVBQUMsT0FBTyxFQUFDLE1BQU0sRUFBQyxPQUFPLEVBQUMsTUFBTSxFQUFDLFNBQVMsRUFBQyxPQUFPLEVBQUMsS0FBSyxFQUFDLFFBQVEsRUFBQyxNQUFNLEVBQUMsT0FBTyxFQUFDLFNBQVMsRUFBQyxVQUFVLEVBQUMsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLEVBQUMsUUFBUSxFQUFDLFFBQVEsRUFBQyxPQUFPLEVBQUMsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLENBQUMsQ0FBQztJQUFDK0IsRUFBRSxHQUFDL0IsRUFBRSxDQUFDLENBQUMs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QUNDLE9BQU8sRUFBQyxTQUFBQSxRQUFTcmlILENBQUMsRUFBQztZQUFDLE9BQU9BLENBQUMsQ0FBQ2d6RixRQUFRO1VBQUE7UUFBQyxDQUFDO1FBQUMsSUFBSW54RixDQUFDLEVBQUNiLENBQUMsRUFBQ3lELENBQUM7TUFBQSxDQUFDO01BQUM4akIsRUFBRSxFQUFDcGxCLENBQUM7SUFBRSxDQUFDO0VBQUEsQ0FBQyxDQUFDO0FBQUEsQ0FBQyxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2Fzc2V0cy9jb3JlL3BsdWdpbnMvY3VzdG9tL3RpbnltY2UvdGhlbWVzL3NpbHZlci90aGVtZS5taW4uanM/MzliYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29weXJpZ2h0IChjKSBUaW55IFRlY2hub2xvZ2llcywgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTEdQTCBvciBhIGNvbW1lcmNpYWwgbGljZW5zZS5cclxuICogRm9yIExHUEwgc2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqIEZvciBjb21tZXJjaWFsIGxpY2Vuc2VzIHNlZSBodHRwczovL3d3dy50aW55LmNsb3VkL1xyXG4gKlxyXG4gKiBWZXJzaW9uOiA1LjEwLjcgKDIwMjItMTItMDYpXHJcbiAqL1xyXG4hZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiB0KG8pe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gbj10eXBlb2YoZT10KSwobnVsbD09PWU/XCJudWxsXCI6XCJvYmplY3RcIj09biYmKEFycmF5LnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGUpfHxlLmNvbnN0cnVjdG9yJiZcIkFycmF5XCI9PT1lLmNvbnN0cnVjdG9yLm5hbWUpP1wiYXJyYXlcIjpcIm9iamVjdFwiPT1uJiYoU3RyaW5nLnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGUpfHxlLmNvbnN0cnVjdG9yJiZcIlN0cmluZ1wiPT09ZS5jb25zdHJ1Y3Rvci5uYW1lKT9cInN0cmluZ1wiOm4pPT09bzt2YXIgZSxufX1mdW5jdGlvbiBlKGUpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHQ9PT1lfX1mdW5jdGlvbiBuKGUpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gZT09PXR9fWZ1bmN0aW9uIGcodCl7cmV0dXJuIG51bGw9PXR9ZnVuY3Rpb24gZih0LGUpe2lmKGModCkpe2Zvcih2YXIgbj0wLG89dC5sZW5ndGg7bjxvOysrbilpZighZSh0W25dKSlyZXR1cm47cmV0dXJuIDF9fWZ1bmN0aW9uIHN0KCl7fWZ1bmN0aW9uIHIobixvKXtyZXR1cm4gZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlXT1hcmd1bWVudHNbZV07cmV0dXJuIG4oby5hcHBseShudWxsLHQpKX19ZnVuY3Rpb24gcnQodCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHR9fWZ1bmN0aW9uIGgodCl7cmV0dXJuIHR9ZnVuY3Rpb24gdih0LGUpe3JldHVybiB0PT09ZX12YXIgeT10KFwic3RyaW5nXCIpLHg9dChcIm9iamVjdFwiKSxjPXQoXCJhcnJheVwiKSxiPW4obnVsbCksdz1lKFwiYm9vbGVhblwiKSxFPW4odm9pZCAwKSxrPWZ1bmN0aW9uKHQpe3JldHVybiFnKHQpfSxTPWUoXCJmdW5jdGlvblwiKSx1PWUoXCJudW1iZXJcIik7ZnVuY3Rpb24gQyhvKXtmb3IodmFyIHI9W10sdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspclt0LTFdPWFyZ3VtZW50c1t0XTtyZXR1cm4gZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlXT1hcmd1bWVudHNbZV07dmFyIG49ci5jb25jYXQodCk7cmV0dXJuIG8uYXBwbHkobnVsbCxuKX19ZnVuY3Rpb24gTyhlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIWUodCl9fWZ1bmN0aW9uIF8odCl7cmV0dXJuIGZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKHQpfX12YXIgVD1ydCghMSksRD1ydCghMCksbz10aW55bWNlLnV0aWwuVG9vbHMucmVzb2x2ZShcInRpbnltY2UuVGhlbWVNYW5hZ2VyXCIpLGx0PWZ1bmN0aW9uKCl7cmV0dXJuKGx0PU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxuPTEsbz1hcmd1bWVudHMubGVuZ3RoO248bztuKyspZm9yKHZhciByIGluIGU9YXJndW1lbnRzW25dKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdH0pLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07ZnVuY3Rpb24gQSh0LGUpe3ZhciBuPXt9O2ZvcihyIGluIHQpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQscikmJmUuaW5kZXhPZihyKTwwJiYobltyXT10W3JdKTtpZihudWxsIT10JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKWZvcih2YXIgbz0wLHI9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyh0KTtvPHIubGVuZ3RoO28rKyllLmluZGV4T2YocltvXSk8MCYmT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHQscltvXSkmJihuW3Jbb11dPXRbcltvXV0pO3JldHVybiBufWZ1bmN0aW9uIFYodCxlLG4pe2lmKG58fDI9PT1hcmd1bWVudHMubGVuZ3RoKWZvcih2YXIgbyxyPTAsaT1lLmxlbmd0aDtyPGk7cisrKSFvJiZyIGluIGV8fCgobz1vfHxBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChlLDAscikpW3JdPWVbcl0pO3JldHVybiB0LmNvbmNhdChvfHxBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChlKSl9ZnVuY3Rpb24gaSgpe3JldHVybiBhfXZhciBhPXtmb2xkOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQoKX0saXNTb21lOlQsaXNOb25lOkQsZ2V0T3I6aCxnZXRPclRodW5rOnMsZ2V0T3JEaWU6ZnVuY3Rpb24odCl7dGhyb3cgbmV3IEVycm9yKHR8fFwiZXJyb3I6IGdldE9yRGllIGNhbGxlZCBvbiBub25lLlwiKX0sZ2V0T3JOdWxsOnJ0KG51bGwpLGdldE9yVW5kZWZpbmVkOnJ0KHZvaWQgMCksb3I6aCxvclRodW5rOnMsbWFwOmksZWFjaDpzdCxiaW5kOmksZXhpc3RzOlQsZm9yYWxsOkQsZmlsdGVyOmZ1bmN0aW9uKCl7cmV0dXJuIGF9LHRvQXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm5bXX0sdG9TdHJpbmc6cnQoXCJub25lKClcIil9O2Z1bmN0aW9uIHModCl7cmV0dXJuIHQoKX1mdW5jdGlvbiBsKHQsZSl7cmV0dXJuIHl0LmNhbGwodCxlKX1mdW5jdGlvbiBkKHQsZSl7Zm9yKHZhciBuPTAsbz10Lmxlbmd0aDtuPG87bisrKWlmKGUodFtuXSxuKSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBtKHQsZSl7Zm9yKHZhciBuPVtdLG89MDtvPHQ7bysrKW4ucHVzaChlKG8pKTtyZXR1cm4gbn1mdW5jdGlvbiBwKHQsZSl7Zm9yKHZhciBuPVtdLG89MDtvPHQubGVuZ3RoO28rPWUpe3ZhciByPWJ0LmNhbGwodCxvLG8rZSk7bi5wdXNoKHIpfXJldHVybiBufWZ1bmN0aW9uIEIodCxlKXtmb3IodmFyIG49dC5sZW5ndGgsbz1uZXcgQXJyYXkobikscj0wO3I8bjtyKyspe3ZhciBpPXRbcl07b1tyXT1lKGkscil9cmV0dXJuIG99ZnVuY3Rpb24gTSh0LGUpe2Zvcih2YXIgbj1bXSxvPVtdLHI9MCxpPXQubGVuZ3RoO3I8aTtyKyspe3ZhciB1PXRbcl07KGUodSxyKT9uOm8pLnB1c2godSl9cmV0dXJue3Bhc3M6bixmYWlsOm99fWZ1bmN0aW9uIEYodCxlKXtmb3IodmFyIG49W10sbz0wLHI9dC5sZW5ndGg7bzxyO28rKyl7dmFyIGk9dFtvXTtlKGksbykmJm4ucHVzaChpKX1yZXR1cm4gbn1mdW5jdGlvbiBJKHQsbyxyKXtyZXR1cm4gZnVuY3Rpb24odCl7Zm9yKHZhciBlLG49dC5sZW5ndGgtMTswPD1uO24tLSllPXRbbl0scj1vKHIsZSxuKX0odCkscn1mdW5jdGlvbiBSKHQsbixvKXtyZXR1cm4gU3QodCxmdW5jdGlvbih0LGUpe289bihvLHQsZSl9KSxvfWZ1bmN0aW9uIE4odCxlKXtyZXR1cm4gZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgbz0wLHI9dC5sZW5ndGg7bzxyO28rKyl7dmFyIGk9dFtvXTtpZihlKGksbykpcmV0dXJuIHZ0LnNvbWUoaSk7aWYobihpLG8pKWJyZWFrfXJldHVybiB2dC5ub25lKCl9KHQsZSxUKX1mdW5jdGlvbiBQKHQsZSl7Zm9yKHZhciBuPTAsbz10Lmxlbmd0aDtuPG87bisrKWlmKGUodFtuXSxuKSlyZXR1cm4gdnQuc29tZShuKTtyZXR1cm4gdnQubm9uZSgpfWZ1bmN0aW9uIGZ0KHQpe2Zvcih2YXIgZT1bXSxuPTAsbz10Lmxlbmd0aDtuPG87KytuKXtpZighYyh0W25dKSl0aHJvdyBuZXcgRXJyb3IoXCJBcnIuZmxhdHRlbiBpdGVtIFwiK24rXCIgd2FzIG5vdCBhbiBhcnJheSwgaW5wdXQ6IFwiK3QpO3h0LmFwcGx5KGUsdFtuXSl9cmV0dXJuIGV9ZnVuY3Rpb24gSCh0LGUpe3JldHVybiBmdChCKHQsZSkpfWZ1bmN0aW9uIEwodCxlKXtmb3IodmFyIG49MCxvPXQubGVuZ3RoO248bzsrK24paWYoITAhPT1lKHRbbl0sbikpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24geih0KXt2YXIgZT1idC5jYWxsKHQsMCk7cmV0dXJuIGUucmV2ZXJzZSgpLGV9ZnVuY3Rpb24gVSh0LGUpe3JldHVybiBGKHQsZnVuY3Rpb24odCl7cmV0dXJuIXd0KGUsdCl9KX1mdW5jdGlvbiBqKHQsZSl7Zm9yKHZhciBuPXt9LG89MCxyPXQubGVuZ3RoO288cjtvKyspe3ZhciBpPXRbb107bltTdHJpbmcoaSldPWUoaSxvKX1yZXR1cm4gbn1mdW5jdGlvbiBXKHQpe3JldHVyblt0XX1mdW5jdGlvbiBHKHQsZSl7dmFyIG49YnQuY2FsbCh0LDApO3JldHVybiBuLnNvcnQoZSksbn1mdW5jdGlvbiBYKHQsZSl7cmV0dXJuIDA8PWUmJmU8dC5sZW5ndGg/dnQuc29tZSh0W2VdKTp2dC5ub25lKCl9ZnVuY3Rpb24gWSh0KXtyZXR1cm4gWCh0LDApfWZ1bmN0aW9uIHEodCl7cmV0dXJuIFgodCx0Lmxlbmd0aC0xKX1mdW5jdGlvbiBLKHQsZSl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciBvPWUodFtuXSxuKTtpZihvLmlzU29tZSgpKXJldHVybiBvfXJldHVybiB2dC5ub25lKCl9ZnVuY3Rpb24gSih0LGUpe2Zvcih2YXIgbj1DdCh0KSxvPTAscj1uLmxlbmd0aDtvPHI7bysrKXt2YXIgaT1uW29dO2UodFtpXSxpKX19ZnVuY3Rpb24gZHQodCxuKXtyZXR1cm4gX3QodCxmdW5jdGlvbih0LGUpe3JldHVybntrOmUsdjpuKHQsZSl9fSl9ZnVuY3Rpb24gJCh0LG4pe3ZhciBvPVtdO3JldHVybiBKKHQsZnVuY3Rpb24odCxlKXtvLnB1c2gobih0LGUpKX0pLG99ZnVuY3Rpb24gUSh0LGUpe2Zvcih2YXIgbj1DdCh0KSxvPTAscj1uLmxlbmd0aDtvPHI7bysrKXt2YXIgaT1uW29dLHU9dFtpXTtpZihlKHUsaSx0KSlyZXR1cm4gdnQuc29tZSh1KX1yZXR1cm4gdnQubm9uZSgpfWZ1bmN0aW9uIFoodCl7cmV0dXJuICQodCxoKX1mdW5jdGlvbiB0dCh0LGUpe3JldHVybiBUdCh0LGUpP3Z0LmZyb20odFtlXSk6dnQubm9uZSgpfWZ1bmN0aW9uIGV0KHQsZSl7cmV0dXJuIFR0KHQsZSkmJnZvaWQgMCE9PXRbZV0mJm51bGwhPT10W2VdfWZ1bmN0aW9uIG10KHQsZSxuKXtyZXR1cm4gdm9pZCAwPT09biYmKG49diksdC5leGlzdHMoZnVuY3Rpb24odCl7cmV0dXJuIG4odCxlKX0pfWZ1bmN0aW9uIG50KHQpe2Zvcih2YXIgZT1bXSxuPWZ1bmN0aW9uKHQpe2UucHVzaCh0KX0sbz0wO288dC5sZW5ndGg7bysrKXRbb10uZWFjaChuKTtyZXR1cm4gZX1mdW5jdGlvbiBvdCh0LGUpe3JldHVybiB0P3Z0LnNvbWUoZSk6dnQubm9uZSgpfWZ1bmN0aW9uIGl0KHQsZSxuKXtyZXR1cm5cIlwiPT09ZXx8dC5sZW5ndGg+PWUubGVuZ3RoJiZ0LnN1YnN0cihuLG4rZS5sZW5ndGgpPT09ZX1mdW5jdGlvbiB1dCh0LGUpe3JldHVybi0xIT09dC5pbmRleE9mKGUpfWZ1bmN0aW9uIGF0KHQpe3JldHVybiAwPHQubGVuZ3RofWZ1bmN0aW9uIGN0KHQpe3JldHVybiB2b2lkIDAhPT10LnN0eWxlJiZTKHQuc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSl9ZnVuY3Rpb24gZ3QodCl7aWYobnVsbD09dCl0aHJvdyBuZXcgRXJyb3IoXCJOb2RlIGNhbm5vdCBiZSBudWxsIG9yIHVuZGVmaW5lZFwiKTtyZXR1cm57ZG9tOnR9fXZhciBwdCxodD1mdW5jdGlvbihuKXtmdW5jdGlvbiB0KCl7cmV0dXJuIHJ9ZnVuY3Rpb24gZSh0KXtyZXR1cm4gdChuKX12YXIgbz1ydChuKSxyPXtmb2xkOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUobil9LGlzU29tZTpELGlzTm9uZTpULGdldE9yOm8sZ2V0T3JUaHVuazpvLGdldE9yRGllOm8sZ2V0T3JOdWxsOm8sZ2V0T3JVbmRlZmluZWQ6byxvcjp0LG9yVGh1bms6dCxtYXA6ZnVuY3Rpb24odCl7cmV0dXJuIGh0KHQobikpfSxlYWNoOmZ1bmN0aW9uKHQpe3Qobil9LGJpbmQ6ZSxleGlzdHM6ZSxmb3JhbGw6ZSxmaWx0ZXI6ZnVuY3Rpb24odCl7cmV0dXJuIHQobik/cjphfSx0b0FycmF5OmZ1bmN0aW9uKCl7cmV0dXJuW25dfSx0b1N0cmluZzpmdW5jdGlvbigpe3JldHVyblwic29tZShcIituK1wiKVwifX07cmV0dXJuIHJ9LHZ0PXtzb21lOmh0LG5vbmU6aSxmcm9tOmZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT10P2E6aHQodCl9fSxidD1BcnJheS5wcm90b3R5cGUuc2xpY2UseXQ9QXJyYXkucHJvdG90eXBlLmluZGV4T2YseHQ9QXJyYXkucHJvdG90eXBlLnB1c2gsd3Q9ZnVuY3Rpb24odCxlKXtyZXR1cm4tMTxsKHQsZSl9LFN0PWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPTAsbz10Lmxlbmd0aDtuPG87bisrKWUodFtuXSxuKX0sa3Q9UyhBcnJheS5mcm9tKT9BcnJheS5mcm9tOmZ1bmN0aW9uKHQpe3JldHVybiBidC5jYWxsKHQpfSxDdD1PYmplY3Qua2V5cyxPdD1PYmplY3QuaGFzT3duUHJvcGVydHksX3Q9ZnVuY3Rpb24odCxvKXt2YXIgcj17fTtyZXR1cm4gSih0LGZ1bmN0aW9uKHQsZSl7dmFyIG49byh0LGUpO3Jbbi5rXT1uLnZ9KSxyfSxUdD1mdW5jdGlvbih0LGUpe3JldHVybiBPdC5jYWxsKHQsZSl9LEV0PWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdC5pc1NvbWUoKSYmZS5pc1NvbWUoKT92dC5zb21lKG4odC5nZXRPckRpZSgpLGUuZ2V0T3JEaWUoKSkpOnZ0Lm5vbmUoKX0sRHQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gaXQodCxlLDApfSxBdD1mdW5jdGlvbih0LGUpe3JldHVybiBpdCh0LGUsdC5sZW5ndGgtZS5sZW5ndGgpfSxCdD0ocHQ9L15cXHMrfFxccyskL2csZnVuY3Rpb24odCl7cmV0dXJuIHQucmVwbGFjZShwdCxcIlwiKX0pLE10PXtmcm9tSHRtbDpmdW5jdGlvbih0LGUpe3ZhciBuPShlfHxkb2N1bWVudCkuY3JlYXRlRWxlbWVudChcImRpdlwiKTtpZihuLmlubmVySFRNTD10LCFuLmhhc0NoaWxkTm9kZXMoKXx8MTxuLmNoaWxkTm9kZXMubGVuZ3RoKXRocm93IGNvbnNvbGUuZXJyb3IoXCJIVE1MIGRvZXMgbm90IGhhdmUgYSBzaW5nbGUgcm9vdCBub2RlXCIsdCksbmV3IEVycm9yKFwiSFRNTCBtdXN0IGhhdmUgYSBzaW5nbGUgcm9vdCBub2RlXCIpO3JldHVybiBndChuLmNoaWxkTm9kZXNbMF0pfSxmcm9tVGFnOmZ1bmN0aW9uKHQsZSl7dmFyIG49KGV8fGRvY3VtZW50KS5jcmVhdGVFbGVtZW50KHQpO3JldHVybiBndChuKX0sZnJvbVRleHQ6ZnVuY3Rpb24odCxlKXt2YXIgbj0oZXx8ZG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKHQpO3JldHVybiBndChuKX0sZnJvbURvbTpndCxmcm9tUG9pbnQ6ZnVuY3Rpb24odCxlLG4pe3JldHVybiB2dC5mcm9tKHQuZG9tLmVsZW1lbnRGcm9tUG9pbnQoZSxuKSkubWFwKGd0KX19O2Z1bmN0aW9uIEZ0KHQpe3JldHVybiB0LmRvbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpfWZ1bmN0aW9uIEl0KGUpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gdC5kb20ubm9kZVR5cGU9PT1lfX1mdW5jdGlvbiBSdChuKXt2YXIgbyxyPSExO3JldHVybiBmdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPTA7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl0W2VdPWFyZ3VtZW50c1tlXTtyZXR1cm4gcnx8KHI9ITAsbz1uLmFwcGx5KG51bGwsdCkpLG99fWZ1bmN0aW9uIE50KHQsZSl7dmFyIG49U3RyaW5nKGUpLnRvTG93ZXJDYXNlKCk7cmV0dXJuIE4odCxmdW5jdGlvbih0KXtyZXR1cm4gdC5zZWFyY2gobil9KX1mdW5jdGlvbiBQdChlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIHV0KHQsZSl9fWZ1bmN0aW9uIFZ0KHQpe3JldHVybiB3aW5kb3cubWF0Y2hNZWRpYSh0KS5tYXRjaGVzfWZ1bmN0aW9uIEh0KHQsZSl7dmFyIG49dC5kb207aWYoMSE9PW4ubm9kZVR5cGUpcmV0dXJuITE7dmFyIG89bjtpZih2b2lkIDAhPT1vLm1hdGNoZXMpcmV0dXJuIG8ubWF0Y2hlcyhlKTtpZih2b2lkIDAhPT1vLm1zTWF0Y2hlc1NlbGVjdG9yKXJldHVybiBvLm1zTWF0Y2hlc1NlbGVjdG9yKGUpO2lmKHZvaWQgMCE9PW8ud2Via2l0TWF0Y2hlc1NlbGVjdG9yKXJldHVybiBvLndlYmtpdE1hdGNoZXNTZWxlY3RvcihlKTtpZih2b2lkIDAhPT1vLm1vek1hdGNoZXNTZWxlY3RvcilyZXR1cm4gby5tb3pNYXRjaGVzU2VsZWN0b3IoZSk7dGhyb3cgbmV3IEVycm9yKFwiQnJvd3NlciBsYWNrcyBuYXRpdmUgc2VsZWN0b3JzXCIpfWZ1bmN0aW9uIEx0KHQpe3JldHVybiAxIT09dC5ub2RlVHlwZSYmOSE9PXQubm9kZVR5cGUmJjExIT09dC5ub2RlVHlwZXx8MD09PXQuY2hpbGRFbGVtZW50Q291bnR9ZnVuY3Rpb24genQodCxlKXtyZXR1cm4gdC5kb209PT1lLmRvbX1mdW5jdGlvbiBVdCh0LGUpe3JldHVybiBsbigpLmJyb3dzZXIuaXNJRSgpPyhuPXQuZG9tLG89ZS5kb20scj1Ob2RlLkRPQ1VNRU5UX1BPU0lUSU9OX0NPTlRBSU5FRF9CWSwwIT0obi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihvKSZyKSk6KGk9dC5kb20pIT09KHU9ZS5kb20pJiZpLmNvbnRhaW5zKHUpO3ZhciBuLG8scixpLHV9ZnVuY3Rpb24ganQodCl7cmV0dXJuIE10LmZyb21Eb20odC5kb20ub3duZXJEb2N1bWVudCl9ZnVuY3Rpb24gV3QodCl7cmV0dXJuIFllKHQpP3Q6anQodCl9ZnVuY3Rpb24gR3QodCl7cmV0dXJuIE10LmZyb21Eb20oV3QodCkuZG9tLmRvY3VtZW50RWxlbWVudCl9ZnVuY3Rpb24gWHQodCl7cmV0dXJuIE10LmZyb21Eb20oV3QodCkuZG9tLmRlZmF1bHRWaWV3KX1mdW5jdGlvbiBZdCh0KXtyZXR1cm4gdnQuZnJvbSh0LmRvbS5wYXJlbnROb2RlKS5tYXAoTXQuZnJvbURvbSl9ZnVuY3Rpb24gcXQodCl7cmV0dXJuIHZ0LmZyb20odC5kb20ub2Zmc2V0UGFyZW50KS5tYXAoTXQuZnJvbURvbSl9ZnVuY3Rpb24gS3QodCl7cmV0dXJuIEIodC5kb20uY2hpbGROb2RlcyxNdC5mcm9tRG9tKX1mdW5jdGlvbiBKdCh0LGUpe3ZhciBuPXQuZG9tLmNoaWxkTm9kZXM7cmV0dXJuIHZ0LmZyb20obltlXSkubWFwKE10LmZyb21Eb20pfWZ1bmN0aW9uICR0KHQsZSl7cmV0dXJue2VsZW1lbnQ6dCxvZmZzZXQ6ZX19ZnVuY3Rpb24gUXQodCxlKXt2YXIgbj1LdCh0KTtyZXR1cm4gMDxuLmxlbmd0aCYmZTxuLmxlbmd0aD8kdChuW2VdLDApOiR0KHQsZSl9ZnVuY3Rpb24gWnQodCl7cmV0dXJuIHFlKHQpJiZrKHQuZG9tLmhvc3QpfWZ1bmN0aW9uIHRlKHQpe3JldHVybiBadCh0KT90Ok10LmZyb21Eb20oV3QodCkuZG9tLmJvZHkpfWZ1bmN0aW9uIGVlKHQpe3JldHVybiBNdC5mcm9tRG9tKHQuZG9tLmhvc3QpfWZ1bmN0aW9uIG5lKHQsZSxuKXtpZighKHkobil8fHcobil8fHUobikpKXRocm93IGNvbnNvbGUuZXJyb3IoXCJJbnZhbGlkIGNhbGwgdG8gQXR0cmlidXRlLnNldC4gS2V5IFwiLGUsXCI6OiBWYWx1ZSBcIixuLFwiOjogRWxlbWVudCBcIix0KSxuZXcgRXJyb3IoXCJBdHRyaWJ1dGUgdmFsdWUgd2FzIG5vdCBzaW1wbGVcIik7dC5zZXRBdHRyaWJ1dGUoZSxuK1wiXCIpfWZ1bmN0aW9uIG9lKHQsZSxuKXtuZSh0LmRvbSxlLG4pfWZ1bmN0aW9uIHJlKHQsZSl7dmFyIG49dC5kb207SihlLGZ1bmN0aW9uKHQsZSl7bmUobixlLHQpfSl9ZnVuY3Rpb24gaWUodCxlKXt2YXIgbj10LmRvbS5nZXRBdHRyaWJ1dGUoZSk7cmV0dXJuIG51bGw9PT1uP3ZvaWQgMDpufWZ1bmN0aW9uIHVlKHQsZSl7cmV0dXJuIHZ0LmZyb20oaWUodCxlKSl9ZnVuY3Rpb24gYWUodCxlKXt2YXIgbj10LmRvbTtyZXR1cm4hKCFufHwhbi5oYXNBdHRyaWJ1dGUpJiZuLmhhc0F0dHJpYnV0ZShlKX1mdW5jdGlvbiBjZSh0LGUpe3QuZG9tLnJlbW92ZUF0dHJpYnV0ZShlKX1mdW5jdGlvbiBzZSh0LGUsbil7aWYoIXkobikpdGhyb3cgY29uc29sZS5lcnJvcihcIkludmFsaWQgY2FsbCB0byBDU1Muc2V0LiBQcm9wZXJ0eSBcIixlLFwiOjogVmFsdWUgXCIsbixcIjo6IEVsZW1lbnQgXCIsdCksbmV3IEVycm9yKFwiQ1NTIHZhbHVlIG11c3QgYmUgYSBzdHJpbmc6IFwiK24pO2N0KHQpJiZ0LnN0eWxlLnNldFByb3BlcnR5KGUsbil9ZnVuY3Rpb24gbGUodCxlKXtjdCh0KSYmdC5zdHlsZS5yZW1vdmVQcm9wZXJ0eShlKX1mdW5jdGlvbiBmZSh0LGUsbil7c2UodC5kb20sZSxuKX1mdW5jdGlvbiBkZSh0LGUpe3ZhciBuPXQuZG9tO0ooZSxmdW5jdGlvbih0LGUpe3NlKG4sZSx0KX0pfWZ1bmN0aW9uIG1lKHQsZSl7dmFyIG49dC5kb207SihlLGZ1bmN0aW9uKHQsZSl7dC5mb2xkKGZ1bmN0aW9uKCl7bGUobixlKX0sZnVuY3Rpb24odCl7c2UobixlLHQpfSl9KX1mdW5jdGlvbiBnZSh0LGUpe3ZhciBuPXQuZG9tLG89d2luZG93LmdldENvbXB1dGVkU3R5bGUobikuZ2V0UHJvcGVydHlWYWx1ZShlKTtyZXR1cm5cIlwiIT09b3x8dm4odCk/bzp4bihuLGUpfWZ1bmN0aW9uIHBlKHQsZSl7dmFyIG49dC5kb20sbz14bihuLGUpO3JldHVybiB2dC5mcm9tKG8pLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gMDx0Lmxlbmd0aH0pfWZ1bmN0aW9uIGhlKHQsZSxuKXt2YXIgbz1NdC5mcm9tVGFnKHQpO3JldHVybiBmZShvLGUsbikscGUobyxlKS5pc1NvbWUoKX1mdW5jdGlvbiB2ZSh0LGUpe2xlKHQuZG9tLGUpLG10KHVlKHQsXCJzdHlsZVwiKS5tYXAoQnQpLFwiXCIpJiZjZSh0LFwic3R5bGVcIil9ZnVuY3Rpb24gYmUodCl7cmV0dXJuIHQuZG9tLm9mZnNldFdpZHRofWZ1bmN0aW9uIHllKG8scil7ZnVuY3Rpb24gdCh0KXt2YXIgZT1yKHQpO2lmKGU8PTB8fG51bGw9PT1lKXt2YXIgbj1nZSh0LG8pO3JldHVybiBwYXJzZUZsb2F0KG4pfHwwfXJldHVybiBlfWZ1bmN0aW9uIGkocix0KXtyZXR1cm4gUih0LGZ1bmN0aW9uKHQsZSl7dmFyIG49Z2UocixlKSxvPXZvaWQgMD09PW4/MDpwYXJzZUludChuLDEwKTtyZXR1cm4gaXNOYU4obyk/dDp0K299LDApfXJldHVybntzZXQ6ZnVuY3Rpb24odCxlKXtpZighdShlKSYmIWUubWF0Y2goL15bMC05XSskLykpdGhyb3cgbmV3IEVycm9yKG8rXCIuc2V0IGFjY2VwdHMgb25seSBwb3NpdGl2ZSBpbnRlZ2VyIHZhbHVlcy4gVmFsdWUgd2FzIFwiK2UpO3ZhciBuPXQuZG9tO2N0KG4pJiYobi5zdHlsZVtvXT1lK1wicHhcIil9LGdldDp0LGdldE91dGVyOnQsYWdncmVnYXRlOmksbWF4OmZ1bmN0aW9uKHQsZSxuKXt2YXIgbz1pKHQsbik7cmV0dXJuIG88ZT9lLW86MH19fWZ1bmN0aW9uIHhlKHQpe3JldHVybiB3bi5nZXQodCl9ZnVuY3Rpb24gd2UodCl7cmV0dXJuIHduLmdldE91dGVyKHQpfWZ1bmN0aW9uIFNlKHQsZSl7cmV0dXJuIHZvaWQgMCE9PXQ/dDp2b2lkIDAhPT1lP2U6MH1mdW5jdGlvbiBrZSh0KXt2YXIgZT10LmRvbS5vd25lckRvY3VtZW50LG49ZS5ib2R5LG89ZS5kZWZhdWx0VmlldyxyPWUuZG9jdW1lbnRFbGVtZW50O2lmKG49PT10LmRvbSlyZXR1cm4ga24obi5vZmZzZXRMZWZ0LG4ub2Zmc2V0VG9wKTt2YXIgaT1TZShudWxsPT1vP3ZvaWQgMDpvLnBhZ2VZT2Zmc2V0LHIuc2Nyb2xsVG9wKSx1PVNlKG51bGw9PW8/dm9pZCAwOm8ucGFnZVhPZmZzZXQsci5zY3JvbGxMZWZ0KSxhPVNlKHIuY2xpZW50VG9wLG4uY2xpZW50VG9wKSxjPVNlKHIuY2xpZW50TGVmdCxuLmNsaWVudExlZnQpO3JldHVybiBDbih0KS50cmFuc2xhdGUodS1jLGktYSl9ZnVuY3Rpb24gQ2UodCl7cmV0dXJuIE9uLmdldCh0KX1mdW5jdGlvbiBPZSh0KXtyZXR1cm4gT24uZ2V0T3V0ZXIodCl9ZnVuY3Rpb24gX2UodCl7ZnVuY3Rpb24gZSgpe3JldHVybiB0LnN0b3BQcm9wYWdhdGlvbigpfWZ1bmN0aW9uIG4oKXtyZXR1cm4gdC5wcmV2ZW50RGVmYXVsdCgpfXZhciBvPXIobixlKTtyZXR1cm57dGFyZ2V0Ok10LmZyb21Eb20oZnVuY3Rpb24odCl7aWYobW4oKSYmayh0LnRhcmdldCkpe3ZhciBlPU10LmZyb21Eb20odC50YXJnZXQpO2lmKEdlKGUpJiZobihlKSYmdC5jb21wb3NlZCYmdC5jb21wb3NlZFBhdGgpe3ZhciBuPXQuY29tcG9zZWRQYXRoKCk7aWYobilyZXR1cm4gWShuKX19cmV0dXJuIHZ0LmZyb20odC50YXJnZXQpfSh0KS5nZXRPcih0LnRhcmdldCkpLHg6dC5jbGllbnRYLHk6dC5jbGllbnRZLHN0b3A6ZSxwcmV2ZW50Om4sa2lsbDpvLHJhdzp0fX1mdW5jdGlvbiBUZSh0LGUsbixvLHIpe3ZhciBpLHUsYT0oaT1uLHU9byxmdW5jdGlvbih0KXtpKHQpJiZ1KF9lKHQpKX0pO3JldHVybiB0LmRvbS5hZGRFdmVudExpc3RlbmVyKGUsYSxyKSx7dW5iaW5kOkMoX24sdCxlLGEscil9fWZ1bmN0aW9uIEVlKGUsbil7WXQoZSkuZWFjaChmdW5jdGlvbih0KXt0LmRvbS5pbnNlcnRCZWZvcmUobi5kb20sZS5kb20pfSl9ZnVuY3Rpb24gRGUodCxlKXt2dC5mcm9tKHQuZG9tLm5leHRTaWJsaW5nKS5tYXAoTXQuZnJvbURvbSkuZm9sZChmdW5jdGlvbigpe1l0KHQpLmVhY2goZnVuY3Rpb24odCl7VG4odCxlKX0pfSxmdW5jdGlvbih0KXtFZSh0LGUpfSl9ZnVuY3Rpb24gQWUoZSxuKXtKdChlLDApLmZvbGQoZnVuY3Rpb24oKXtUbihlLG4pfSxmdW5jdGlvbih0KXtlLmRvbS5pbnNlcnRCZWZvcmUobi5kb20sdC5kb20pfSl9ZnVuY3Rpb24gQmUoZSx0KXtTdCh0LGZ1bmN0aW9uKHQpe1RuKGUsdCl9KX1mdW5jdGlvbiBNZSh0KXt0LmRvbS50ZXh0Q29udGVudD1cIlwiLFN0KEt0KHQpLGZ1bmN0aW9uKHQpe0VuKHQpfSl9ZnVuY3Rpb24gRmUodCl7dmFyIGUsbj1LdCh0KTswPG4ubGVuZ3RoJiYoZT10LFN0KG4sZnVuY3Rpb24odCl7RWUoZSx0KX0pKSxFbih0KX1mdW5jdGlvbiBJZSh0KXt2YXIgZT12b2lkIDAhPT10P3QuZG9tOmRvY3VtZW50LG49ZS5ib2R5LnNjcm9sbExlZnR8fGUuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnQsbz1lLmJvZHkuc2Nyb2xsVG9wfHxlLmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3A7cmV0dXJuIGtuKG4sbyl9ZnVuY3Rpb24gUmUodCxlLG4pe3ZhciBvPSh2b2lkIDAhPT1uP24uZG9tOmRvY3VtZW50KS5kZWZhdWx0VmlldztvJiZvLnNjcm9sbFRvKHQsZSl9ZnVuY3Rpb24gTmUodCxlLG4sbyl7cmV0dXJue3g6dCx5OmUsd2lkdGg6bixoZWlnaHQ6byxyaWdodDp0K24sYm90dG9tOmUrb319ZnVuY3Rpb24gUGUodCl7dmFyIG89dm9pZCAwPT09dD93aW5kb3c6dCxlPW8uZG9jdW1lbnQscj1JZShNdC5mcm9tRG9tKGUpKSxuPXZvaWQgMD09PW8/d2luZG93Om87cmV0dXJuKGxuKCkuYnJvd3Nlci5pc0ZpcmVmb3goKT92dC5ub25lKCk6dnQuZnJvbShuLnZpc3VhbFZpZXdwb3J0KSkuZm9sZChmdW5jdGlvbigpe3ZhciB0PW8uZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGU9dC5jbGllbnRXaWR0aCxuPXQuY2xpZW50SGVpZ2h0O3JldHVybiBOZShyLmxlZnQsci50b3AsZSxuKX0sZnVuY3Rpb24odCl7cmV0dXJuIE5lKE1hdGgubWF4KHQucGFnZUxlZnQsci5sZWZ0KSxNYXRoLm1heCh0LnBhZ2VUb3Asci50b3ApLHQud2lkdGgsdC5oZWlnaHQpfSl9ZnVuY3Rpb24gVmUobyl7dmFyIHQscj1JZShNdC5mcm9tRG9tKGRvY3VtZW50KSksZT0odD1Bbikub3duZXIobyksbj1Ebih0LGUpO3JldHVybiB2dC5zb21lKG4pLmZvbGQoQyhrZSxvKSxmdW5jdGlvbih0KXt2YXIgZT1DbihvKSxuPUkodCxmdW5jdGlvbih0LGUpe3ZhciBuPUNuKGUpO3JldHVybntsZWZ0OnQubGVmdCtuLmxlZnQsdG9wOnQudG9wK24udG9wfX0se2xlZnQ6MCx0b3A6MH0pO3JldHVybiBrbihuLmxlZnQrZS5sZWZ0K3IubGVmdCxuLnRvcCtlLnRvcCtyLnRvcCl9KX1mdW5jdGlvbiBIZSh0KXt2YXIgZT1WZSh0KSxuPU9lKHQpLG89d2UodCk7cmV0dXJuIEJuKGUubGVmdCxlLnRvcCxuLG8pfVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3d8fEZ1bmN0aW9uKFwicmV0dXJuIHRoaXM7XCIpKCk7ZnVuY3Rpb24gTGUoKXtyZXR1cm4gS2UoMCwwKX1mdW5jdGlvbiB6ZSh0KXtmdW5jdGlvbiBlKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBuPT09dH19dmFyIG49dC5jdXJyZW50LG89dC52ZXJzaW9uO3JldHVybntjdXJyZW50Om4sdmVyc2lvbjpvLGlzRWRnZTplKFwiRWRnZVwiKSxpc0Nocm9tZTplKFwiQ2hyb21lXCIpLGlzSUU6ZShcIklFXCIpLGlzT3BlcmE6ZShcIk9wZXJhXCIpLGlzRmlyZWZveDplKFplKSxpc1NhZmFyaTplKFwiU2FmYXJpXCIpfX1mdW5jdGlvbiBVZSh0KXtmdW5jdGlvbiBlKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBuPT09dH19dmFyIG49dC5jdXJyZW50LG89dC52ZXJzaW9uO3JldHVybntjdXJyZW50Om4sdmVyc2lvbjpvLGlzV2luZG93czplKG5uKSxpc2lPUzplKFwiaU9TXCIpLGlzQW5kcm9pZDplKG9uKSxpc09TWDplKFwiT1NYXCIpLGlzTGludXg6ZShcIkxpbnV4XCIpLGlzU29sYXJpczplKHJuKSxpc0ZyZWVCU0Q6ZSh1biksaXNDaHJvbWVPUzplKGFuKX19dmFyIGplLFdlLEdlPUl0KDEpLFhlPUl0KDMpLFllPUl0KDkpLHFlPUl0KDExKSxLZT1mdW5jdGlvbih0LGUpe3JldHVybnttYWpvcjp0LG1pbm9yOmV9fSxKZT17bnU6S2UsZGV0ZWN0OmZ1bmN0aW9uKHQsZSl7dmFyIG4sbyxyPVN0cmluZyhlKS50b0xvd2VyQ2FzZSgpO3JldHVybiAwPT09dC5sZW5ndGg/TGUoKToobz1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgbz10W25dO2lmKG8udGVzdChlKSlyZXR1cm4gb319KHQsbj1yKSk/S2UoaSgxKSxpKDIpKTp7bWFqb3I6MCxtaW5vcjowfTtmdW5jdGlvbiBpKHQpe3JldHVybiBOdW1iZXIobi5yZXBsYWNlKG8sXCIkXCIrdCkpfX0sdW5rbm93bjpMZX0sJGU9Ly4qP3ZlcnNpb25cXC9cXCA/KFswLTldKylcXC4oWzAtOV0rKS4qLyxRZT17YnJvd3NlcnM6cnQoW3tuYW1lOlwiRWRnZVwiLHZlcnNpb25SZWdleGVzOlsvLio/ZWRnZVxcLyA/KFswLTldKylcXC4oWzAtOV0rKSQvXSxzZWFyY2g6ZnVuY3Rpb24odCl7cmV0dXJuIHV0KHQsXCJlZGdlL1wiKSYmdXQodCxcImNocm9tZVwiKSYmdXQodCxcInNhZmFyaVwiKSYmdXQodCxcImFwcGxld2Via2l0XCIpfX0se25hbWU6XCJDaHJvbWVcIixicmFuZDpcIkNocm9taXVtXCIsdmVyc2lvblJlZ2V4ZXM6Wy8uKj9jaHJvbWVcXC8oWzAtOV0rKVxcLihbMC05XSspLiovLCRlXSxzZWFyY2g6ZnVuY3Rpb24odCl7cmV0dXJuIHV0KHQsXCJjaHJvbWVcIikmJiF1dCh0LFwiY2hyb21lZnJhbWVcIil9fSx7bmFtZTpcIklFXCIsdmVyc2lvblJlZ2V4ZXM6Wy8uKj9tc2llXFwgPyhbMC05XSspXFwuKFswLTldKykuKi8sLy4qP3J2OihbMC05XSspXFwuKFswLTldKykuKi9dLHNlYXJjaDpmdW5jdGlvbih0KXtyZXR1cm4gdXQodCxcIm1zaWVcIil8fHV0KHQsXCJ0cmlkZW50XCIpfX0se25hbWU6XCJPcGVyYVwiLHZlcnNpb25SZWdleGVzOlskZSwvLio/b3BlcmFcXC8oWzAtOV0rKVxcLihbMC05XSspLiovXSxzZWFyY2g6UHQoXCJvcGVyYVwiKX0se25hbWU6XCJGaXJlZm94XCIsdmVyc2lvblJlZ2V4ZXM6Wy8uKj9maXJlZm94XFwvXFwgPyhbMC05XSspXFwuKFswLTldKykuKi9dLHNlYXJjaDpQdChcImZpcmVmb3hcIil9LHtuYW1lOlwiU2FmYXJpXCIsdmVyc2lvblJlZ2V4ZXM6WyRlLC8uKj9jcHUgb3MgKFswLTldKylfKFswLTldKykuKi9dLHNlYXJjaDpmdW5jdGlvbih0KXtyZXR1cm4odXQodCxcInNhZmFyaVwiKXx8dXQodCxcIm1vYmlsZS9cIikpJiZ1dCh0LFwiYXBwbGV3ZWJraXRcIil9fV0pLG9zZXM6cnQoW3tuYW1lOlwiV2luZG93c1wiLHNlYXJjaDpQdChcIndpblwiKSx2ZXJzaW9uUmVnZXhlczpbLy4qP3dpbmRvd3NcXCBudFxcID8oWzAtOV0rKVxcLihbMC05XSspLiovXX0se25hbWU6XCJpT1NcIixzZWFyY2g6ZnVuY3Rpb24odCl7cmV0dXJuIHV0KHQsXCJpcGhvbmVcIil8fHV0KHQsXCJpcGFkXCIpfSx2ZXJzaW9uUmVnZXhlczpbLy4qP3ZlcnNpb25cXC9cXCA/KFswLTldKylcXC4oWzAtOV0rKS4qLywvLipjcHUgb3MgKFswLTldKylfKFswLTldKykuKi8sLy4qY3B1IGlwaG9uZSBvcyAoWzAtOV0rKV8oWzAtOV0rKS4qL119LHtuYW1lOlwiQW5kcm9pZFwiLHNlYXJjaDpQdChcImFuZHJvaWRcIiksdmVyc2lvblJlZ2V4ZXM6Wy8uKj9hbmRyb2lkXFwgPyhbMC05XSspXFwuKFswLTldKykuKi9dfSx7bmFtZTpcIk9TWFwiLHNlYXJjaDpQdChcIm1hYyBvcyB4XCIpLHZlcnNpb25SZWdleGVzOlsvLio/bWFjXFwgb3NcXCB4XFwgPyhbMC05XSspXyhbMC05XSspLiovXX0se25hbWU6XCJMaW51eFwiLHNlYXJjaDpQdChcImxpbnV4XCIpLHZlcnNpb25SZWdleGVzOltdfSx7bmFtZTpcIlNvbGFyaXNcIixzZWFyY2g6UHQoXCJzdW5vc1wiKSx2ZXJzaW9uUmVnZXhlczpbXX0se25hbWU6XCJGcmVlQlNEXCIsc2VhcmNoOlB0KFwiZnJlZWJzZFwiKSx2ZXJzaW9uUmVnZXhlczpbXX0se25hbWU6XCJDaHJvbWVPU1wiLHNlYXJjaDpQdChcImNyb3NcIiksdmVyc2lvblJlZ2V4ZXM6Wy8uKj9jaHJvbWVcXC8oWzAtOV0rKVxcLihbMC05XSspLiovXX1dKX0sWmU9XCJGaXJlZm94XCIsdG49ZnVuY3Rpb24oKXtyZXR1cm4gemUoe2N1cnJlbnQ6dm9pZCAwLHZlcnNpb246SmUudW5rbm93bigpfSl9LGVuPXplLG5uPShydChcIkVkZ2VcIikscnQoXCJDaHJvbWVcIikscnQoXCJJRVwiKSxydChcIk9wZXJhXCIpLHJ0KFplKSxydChcIlNhZmFyaVwiKSxcIldpbmRvd3NcIiksb249XCJBbmRyb2lkXCIscm49XCJTb2xhcmlzXCIsdW49XCJGcmVlQlNEXCIsYW49XCJDaHJvbWVPU1wiLGNuPWZ1bmN0aW9uKCl7cmV0dXJuIFVlKHtjdXJyZW50OnZvaWQgMCx2ZXJzaW9uOkplLnVua25vd24oKX0pfSxzbj1VZSxsbj0ocnQobm4pLHJ0KFwiaU9TXCIpLHJ0KG9uKSxydChcIkxpbnV4XCIpLHJ0KFwiT1NYXCIpLHJ0KHJuKSxydCh1bikscnQoYW4pLFJ0KGZ1bmN0aW9uKCl7cmV0dXJuIHQ9bmF2aWdhdG9yLnVzZXJBZ2VudCxlPXZ0LmZyb20obmF2aWdhdG9yLnVzZXJBZ2VudERhdGEpLG49VnQscD1RZS5icm93c2VycygpLGg9UWUub3NlcygpLHY9ZS5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiBvPXAsSyh0LmJyYW5kcyxmdW5jdGlvbihlKXt2YXIgbj1lLmJyYW5kLnRvTG93ZXJDYXNlKCk7cmV0dXJuIE4obyxmdW5jdGlvbih0KXt2YXIgZTtyZXR1cm4gbj09PShudWxsPT09KGU9dC5icmFuZCl8fHZvaWQgMD09PWU/dm9pZCAwOmUudG9Mb3dlckNhc2UoKSl9KS5tYXAoZnVuY3Rpb24odCl7cmV0dXJue2N1cnJlbnQ6dC5uYW1lLHZlcnNpb246SmUubnUocGFyc2VJbnQoZS52ZXJzaW9uLDEwKSwwKX19KX0pO3ZhciBvfSkub3JUaHVuayhmdW5jdGlvbigpe3JldHVybiBOdChwLG49dCkubWFwKGZ1bmN0aW9uKHQpe3ZhciBlPUplLmRldGVjdCh0LnZlcnNpb25SZWdleGVzLG4pO3JldHVybntjdXJyZW50OnQubmFtZSx2ZXJzaW9uOmV9fSk7dmFyIG59KS5mb2xkKHRuLGVuKSxiPU50KGgsbz10KS5tYXAoZnVuY3Rpb24odCl7dmFyIGU9SmUuZGV0ZWN0KHQudmVyc2lvblJlZ2V4ZXMsbyk7cmV0dXJue2N1cnJlbnQ6dC5uYW1lLHZlcnNpb246ZX19KS5mb2xkKGNuLHNuKSx7YnJvd3Nlcjp2LG9zOmIsZGV2aWNlVHlwZTooaT12LHU9dCxhPW4sYz0ocj1iKS5pc2lPUygpJiYhMD09PS9pcGFkL2kudGVzdCh1KSxzPXIuaXNpT1MoKSYmIWMsZj0obD1yLmlzaU9TKCl8fHIuaXNBbmRyb2lkKCkpfHxhKFwiKHBvaW50ZXI6Y29hcnNlKVwiKSxkPWN8fCFzJiZsJiZhKFwiKG1pbi1kZXZpY2Utd2lkdGg6NzY4cHgpXCIpLG09c3x8bCYmIWQsZz1pLmlzU2FmYXJpKCkmJnIuaXNpT1MoKSYmITE9PT0vc2FmYXJpL2kudGVzdCh1KSx7aXNpUGFkOnJ0KGMpLGlzaVBob25lOnJ0KHMpLGlzVGFibGV0OnJ0KGQpLGlzUGhvbmU6cnQobSksaXNUb3VjaDpydChmKSxpc0FuZHJvaWQ6ci5pc0FuZHJvaWQsaXNpT1M6ci5pc2lPUyxpc1dlYlZpZXc6cnQoZyksaXNEZXNrdG9wOnJ0KCFtJiYhZCYmIWcpfSl9O3ZhciB0LGUsbixvLHIsaSx1LGEsYyxzLGwsZixkLG0sZyxwLGgsdixifSkpLGZuPVl0LGRuPVMoRWxlbWVudC5wcm90b3R5cGUuYXR0YWNoU2hhZG93KSYmUyhOb2RlLnByb3RvdHlwZS5nZXRSb290Tm9kZSksbW49cnQoZG4pLGduPWRuP2Z1bmN0aW9uKHQpe3JldHVybiBNdC5mcm9tRG9tKHQuZG9tLmdldFJvb3ROb2RlKCkpfTpXdCxwbj1mdW5jdGlvbih0KXt2YXIgZT1nbih0KTtyZXR1cm4gWnQoZSk/dnQuc29tZShlKTp2dC5ub25lKCl9LGhuPWZ1bmN0aW9uKHQpe3JldHVybiBrKHQuZG9tLnNoYWRvd1Jvb3QpfSx2bj1mdW5jdGlvbih0KXt2YXIgZT1YZSh0KT90LmRvbS5wYXJlbnROb2RlOnQuZG9tO2lmKG51bGw9PWV8fG51bGw9PT1lLm93bmVyRG9jdW1lbnQpcmV0dXJuITE7dmFyIG4sbyxyPWUub3duZXJEb2N1bWVudDtyZXR1cm4gcG4oTXQuZnJvbURvbShlKSkuZm9sZChmdW5jdGlvbigpe3JldHVybiByLmJvZHkuY29udGFpbnMoZSl9LChuPXZuLG89ZWUsZnVuY3Rpb24odCl7cmV0dXJuIG4obyh0KSl9KSl9LGJuPWZ1bmN0aW9uKCl7cmV0dXJuIHluKE10LmZyb21Eb20oZG9jdW1lbnQpKX0seW49ZnVuY3Rpb24odCl7dmFyIGU9dC5kb20uYm9keTtpZihudWxsPT1lKXRocm93IG5ldyBFcnJvcihcIkJvZHkgaXMgbm90IGF2YWlsYWJsZSB5ZXRcIik7cmV0dXJuIE10LmZyb21Eb20oZSl9LHhuPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGN0KHQpP3Quc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZShlKTpcIlwifSx3bj15ZShcImhlaWdodFwiLGZ1bmN0aW9uKHQpe3ZhciBlPXQuZG9tO3JldHVybiB2bih0KT9lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodDplLm9mZnNldEhlaWdodH0pLFNuPWZ1bmN0aW9uKG4sbyl7cmV0dXJue2xlZnQ6bix0b3A6byx0cmFuc2xhdGU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gU24obit0LG8rZSl9fX0sa249U24sQ249ZnVuY3Rpb24odCl7dmFyIGUsbj10LmRvbSxvPW4ub3duZXJEb2N1bWVudC5ib2R5O3JldHVybiBvPT09bj9rbihvLm9mZnNldExlZnQsby5vZmZzZXRUb3ApOnZuKHQpPyhlPW4uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksa24oZS5sZWZ0LGUudG9wKSk6a24oMCwwKX0sT249eWUoXCJ3aWR0aFwiLGZ1bmN0aW9uKHQpe3JldHVybiB0LmRvbS5vZmZzZXRXaWR0aH0pLF9uPWZ1bmN0aW9uKHQsZSxuLG8pe3QuZG9tLnJlbW92ZUV2ZW50TGlzdGVuZXIoZSxuLG8pfSxUbj1mdW5jdGlvbih0LGUpe3QuZG9tLmFwcGVuZENoaWxkKGUuZG9tKX0sRW49ZnVuY3Rpb24odCl7dmFyIGU9dC5kb207bnVsbCE9PWUucGFyZW50Tm9kZSYmZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpfSxEbj1mdW5jdGlvbihvLHQpe3JldHVybiBvLnZpZXcodCkuZm9sZChydChbXSksZnVuY3Rpb24odCl7dmFyIGU9by5vd25lcih0KSxuPURuKG8sZSk7cmV0dXJuW3RdLmNvbmNhdChuKX0pfSxBbj1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCx2aWV3OmZ1bmN0aW9uKHQpe3ZhciBlO3JldHVybih0LmRvbT09PWRvY3VtZW50P3Z0Lm5vbmUoKTp2dC5mcm9tKG51bGw9PT0oZT10LmRvbS5kZWZhdWx0Vmlldyl8fHZvaWQgMD09PWU/dm9pZCAwOmUuZnJhbWVFbGVtZW50KSkubWFwKE10LmZyb21Eb20pfSxvd25lcjpqdH0pLEJuPWZ1bmN0aW9uKHQsZSxuLG8pe3JldHVybnt4OnQseTplLHdpZHRoOm4saGVpZ2h0Om8scmlnaHQ6dCtuLGJvdHRvbTplK299fSxNbj1mdW5jdGlvbih0KXt2YXIgZT1rZSh0KSxuPU9lKHQpLG89d2UodCk7cmV0dXJuIEJuKGUubGVmdCxlLnRvcCxuLG8pfSxGbj1mdW5jdGlvbigpe3JldHVybiBQZSh3aW5kb3cpfSxJbj1mdW5jdGlvbihuKXtyZXR1cm57aXNWYWx1ZTpELGlzRXJyb3I6VCxnZXRPcjpydChuKSxnZXRPclRodW5rOnJ0KG4pLGdldE9yRGllOnJ0KG4pLG9yOmZ1bmN0aW9uKHQpe3JldHVybiBJbihuKX0sb3JUaHVuazpmdW5jdGlvbih0KXtyZXR1cm4gSW4obil9LGZvbGQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gZShuKX0sbWFwOmZ1bmN0aW9uKHQpe3JldHVybiBJbih0KG4pKX0sbWFwRXJyb3I6ZnVuY3Rpb24odCl7cmV0dXJuIEluKG4pfSxlYWNoOmZ1bmN0aW9uKHQpe3Qobil9LGJpbmQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQobil9LGV4aXN0czpmdW5jdGlvbih0KXtyZXR1cm4gdChuKX0sZm9yYWxsOmZ1bmN0aW9uKHQpe3JldHVybiB0KG4pfSx0b09wdGlvbmFsOmZ1bmN0aW9uKCl7cmV0dXJuIHZ0LnNvbWUobil9fX0sUm49ZnVuY3Rpb24obil7cmV0dXJue2lzVmFsdWU6VCxpc0Vycm9yOkQsZ2V0T3I6aCxnZXRPclRodW5rOmZ1bmN0aW9uKHQpe3JldHVybiB0KCl9LGdldE9yRGllOmZ1bmN0aW9uKCl7cmV0dXJuIF8oU3RyaW5nKG4pKSgpfSxvcjpoLG9yVGh1bms6ZnVuY3Rpb24odCl7cmV0dXJuIHQoKX0sZm9sZDpmdW5jdGlvbih0LGUpe3JldHVybiB0KG4pfSxtYXA6ZnVuY3Rpb24odCl7cmV0dXJuIFJuKG4pfSxtYXBFcnJvcjpmdW5jdGlvbih0KXtyZXR1cm4gUm4odChuKSl9LGVhY2g6c3QsYmluZDpmdW5jdGlvbih0KXtyZXR1cm4gUm4obil9LGV4aXN0czpULGZvcmFsbDpELHRvT3B0aW9uYWw6dnQubm9uZX19LE5uPXt2YWx1ZTpJbixlcnJvcjpSbixmcm9tT3B0aW9uOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuZm9sZChmdW5jdGlvbigpe3JldHVybiBSbihlKX0sSW4pfX07ZnVuY3Rpb24gUG4odCxlLG4pe3JldHVybiB0LnN0eXBlPT09amUuRXJyb3I/ZSh0LnNlcnJvcik6bih0LnN2YWx1ZSl9ZnVuY3Rpb24gVm4odCl7cmV0dXJue3N0eXBlOmplLlZhbHVlLHN2YWx1ZTp0fX1mdW5jdGlvbiBIbih0KXtyZXR1cm57c3R5cGU6amUuRXJyb3Isc2Vycm9yOnR9fWZ1bmN0aW9uIExuKHQsZSxuLG8pe3JldHVybnt0YWc6XCJmaWVsZFwiLGtleTp0LG5ld0tleTplLHByZXNlbmNlOm4scHJvcDpvfX1mdW5jdGlvbiB6bih0LGUsbil7c3dpdGNoKHQudGFnKXtjYXNlXCJmaWVsZFwiOnJldHVybiBlKHQua2V5LHQubmV3S2V5LHQucHJlc2VuY2UsdC5wcm9wKTtjYXNlXCJjdXN0b21cIjpyZXR1cm4gbih0Lm5ld0tleSx0Lmluc3RhbnRpYXRvcil9fWZ1bmN0aW9uIFVuKHUpe3JldHVybiBmdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPTA7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl0W2VdPWFyZ3VtZW50c1tlXTtpZigwPT09dC5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiQ2FuJ3QgbWVyZ2UgemVybyBvYmplY3RzXCIpO2Zvcih2YXIgbj17fSxvPTA7bzx0Lmxlbmd0aDtvKyspe3ZhciByLGk9dFtvXTtmb3IociBpbiBpKVR0KGkscikmJihuW3JdPXUobltyXSxpW3JdKSl9cmV0dXJuIG59fWZ1bmN0aW9uIGpuKCl7cmV0dXJue3RhZzpcInJlcXVpcmVkXCIscHJvY2Vzczp7fX19ZnVuY3Rpb24gV24odCl7cmV0dXJue3RhZzpcImRlZmF1bHRlZFRodW5rXCIscHJvY2Vzczp0fX1mdW5jdGlvbiBHbih0KXtyZXR1cm4gV24ocnQodCkpfWZ1bmN0aW9uIFhuKCl7cmV0dXJue3RhZzpcIm9wdGlvblwiLHByb2Nlc3M6e319fWZ1bmN0aW9uIFluKHQpe3JldHVybnt0YWc6XCJtZXJnZVdpdGhUaHVua1wiLHByb2Nlc3M6dH19ZnVuY3Rpb24gcW4odCl7cmV0dXJuIHgodCkmJjEwMDxDdCh0KS5sZW5ndGg/XCIgcmVtb3ZlZCBkdWUgdG8gc2l6ZVwiOkpTT04uc3RyaW5naWZ5KHQsbnVsbCwyKX1mdW5jdGlvbiBLbih0LGUpe3JldHVybiB6byhbe3BhdGg6dCxnZXRFcnJvckluZm86ZX1dKX1mdW5jdGlvbiBKbihuKXtyZXR1cm57ZXh0cmFjdDpmdW5jdGlvbihlLHQpe3JldHVybiBqbyhuKHQpLGZ1bmN0aW9uKHQpe3JldHVybiBLbihlLHJ0KHQpKX0pfSx0b1N0cmluZzpydChcInZhbFwiKX19ZnVuY3Rpb24gJG4odCxlLG4sbyl7cmV0dXJuIG8odHQodCxlKS5nZXRPclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIG4odCl9KSl9ZnVuY3Rpb24gUW4oZSxuLG8scixpKXtmdW5jdGlvbiB1KHQpe3JldHVybiBpLmV4dHJhY3Qobi5jb25jYXQoW3JdKSx0KX1mdW5jdGlvbiB0KHQpe3JldHVybiB0LmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gTG8odnQubm9uZSgpKX0sZnVuY3Rpb24odCl7dmFyIGU9aS5leHRyYWN0KG4uY29uY2F0KFtyXSksdCk7cmV0dXJuIFdvKGUsdnQuc29tZSl9KX12YXIgYSxjLHMsbCxmLGQ7c3dpdGNoKGUudGFnKXtjYXNlXCJyZXF1aXJlZFwiOnJldHVybiBzPW4sZD11LHR0KGw9byxmPXIpLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gdD1mLGU9bCxLbihzLGZ1bmN0aW9uKCl7cmV0dXJuJ0NvdWxkIG5vdCBmaW5kIHZhbGlkICpyZXF1aXJlZCogdmFsdWUgZm9yIFwiJyt0KydcIiBpbiAnK3FuKGUpfSk7dmFyIHQsZX0sZCk7Y2FzZVwiZGVmYXVsdGVkVGh1bmtcIjpyZXR1cm4gJG4obyxyLGUucHJvY2Vzcyx1KTtjYXNlXCJvcHRpb25cIjpyZXR1cm4gdCh0dChvLHIpKTtjYXNlXCJkZWZhdWx0ZWRPcHRpb25UaHVua1wiOnJldHVybiBjPWUucHJvY2Vzcyx0KHR0KGE9byxyKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuITA9PT10P2MoYSk6dH0pKTtjYXNlXCJtZXJnZVdpdGhUaHVua1wiOnJldHVybiAkbihvLHIscnQoe30pLGZ1bmN0aW9uKHQpe3JldHVybiB1KFlvKGUucHJvY2VzcyhvKSx0KSl9KX19ZnVuY3Rpb24gWm4obil7cmV0dXJue2V4dHJhY3Q6ZnVuY3Rpb24odCxlKXtyZXR1cm4gbigpLmV4dHJhY3QodCxlKX0sdG9TdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm4gbigpLnRvU3RyaW5nKCl9fX1mdW5jdGlvbiB0byh0KXt2YXIgcz0kbyh0KSxsPUkodCxmdW5jdGlvbihuLHQpe3JldHVybiB6bih0LGZ1bmN0aW9uKHQpe3ZhciBlO3JldHVybiBZbyhuLCgoZT17fSlbdF09ITAsZSkpfSxydChuKSl9LHt9KTtyZXR1cm57ZXh0cmFjdDpmdW5jdGlvbih0LGUpe3ZhciBuLG8scixpLHUsYSxjPUYodyhlKT9bXTpDdCgocj1rLGk9bz17fSx1PWZ1bmN0aW9uKHQsZSl7aVtlXT10fSxhPXN0LEooZSxmdW5jdGlvbih0LGUpeyhyKHQsZSk/dTphKSh0LGUpfSksbykpLGZ1bmN0aW9uKHQpe3JldHVybiFldChsLHQpfSk7cmV0dXJuIDA9PT1jLmxlbmd0aD9zLmV4dHJhY3QodCxlKToobj1jLEtuKHQsZnVuY3Rpb24oKXtyZXR1cm5cIlRoZXJlIGFyZSB1bnN1cHBvcnRlZCBmaWVsZHM6IFtcIituLmpvaW4oXCIsIFwiKStcIl0gc3BlY2lmaWVkXCJ9KSl9LHRvU3RyaW5nOnMudG9TdHJpbmd9fWZ1bmN0aW9uIGVvKG8pe3JldHVybntleHRyYWN0OmZ1bmN0aW9uKG4sdCl7dmFyIGU9Qih0LGZ1bmN0aW9uKHQsZSl7cmV0dXJuIG8uZXh0cmFjdChuLmNvbmNhdChbXCJbXCIrZStcIl1cIl0pLHQpfSk7cmV0dXJuIEtvKGUpfSx0b1N0cmluZzpmdW5jdGlvbigpe3JldHVyblwiYXJyYXkoXCIrby50b1N0cmluZygpK1wiKVwifX19ZnVuY3Rpb24gbm8odSl7cmV0dXJue2V4dHJhY3Q6ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49W10sbz0wLHI9dTtvPHIubGVuZ3RoO28rKyl7dmFyIGk9cltvXS5leHRyYWN0KHQsZSk7aWYoaS5zdHlwZT09PWplLlZhbHVlKXJldHVybiBpO24ucHVzaChpKX1yZXR1cm4gS28obil9LHRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuXCJvbmVPZihcIitCKHUsZnVuY3Rpb24odCl7cmV0dXJuIHQudG9TdHJpbmcoKX0pLmpvaW4oXCIsIFwiKStcIilcIn19fWZ1bmN0aW9uIG9vKG4sbyl7cmV0dXJuIEpuKGZ1bmN0aW9uKHQpe3ZhciBlPXR5cGVvZiB0O3JldHVybiBuKHQpP0xvKHQpOnpvKFwiRXhwZWN0ZWQgdHlwZTogXCIrbytcIiBidXQgZ290OiBcIitlKX0pfWZ1bmN0aW9uIHJvKGUsYSl7cmV0dXJue2V4dHJhY3Q6ZnVuY3Rpb24oaSx1KXtyZXR1cm4gdHQodSxlKS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIHQ9ZSxLbihpLGZ1bmN0aW9uKCl7cmV0dXJuJ0Nob2ljZSBzY2hlbWEgZGlkIG5vdCBjb250YWluIGNob2ljZSBrZXk6IFwiJyt0KydcIid9KTt2YXIgdH0sZnVuY3Rpb24odCl7cmV0dXJuIG49aSxlPXUsdHQobz1hLHI9dCkuZm9sZChmdW5jdGlvbigpe3JldHVybiB0PW8sZT1yLEtuKG4sZnVuY3Rpb24oKXtyZXR1cm4nVGhlIGNob3NlbiBzY2hlbWE6IFwiJytlKydcIiBkaWQgbm90IGV4aXN0IGluIGJyYW5jaGVzOiAnK3FuKHQpfSk7dmFyIHQsZX0sZnVuY3Rpb24odCl7cmV0dXJuIHQuZXh0cmFjdChuLmNvbmNhdChbXCJicmFuY2g6IFwiK3JdKSxlKX0pO3ZhciBuLGUsbyxyfSl9LHRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuXCJjaG9vc2VPbihcIitlK1wiKS4gUG9zc2libGUgdmFsdWVzOiBcIitDdChhKX19fWZ1bmN0aW9uIGlvKGUpe3JldHVybiBKbihmdW5jdGlvbih0KXtyZXR1cm4gZSh0KS5mb2xkKHpvLExvKX0pfWZ1bmN0aW9uIHVvKGUsdCl7cmV0dXJuIHI9ZnVuY3Rpb24odCl7cmV0dXJuIGUodCkuZm9sZChIbixWbil9LGk9dCx7ZXh0cmFjdDpmdW5jdGlvbihuLG8pe3ZhciB0PUN0KG8pLGU9ZW8oSm4ocikpLmV4dHJhY3Qobix0KTtyZXR1cm4gVW8oZSxmdW5jdGlvbih0KXt2YXIgZT1CKHQsZnVuY3Rpb24odCl7cmV0dXJuIExuKHQsdCxqbigpLGkpfSk7cmV0dXJuICRvKGUpLmV4dHJhY3QobixvKX0pfSx0b1N0cmluZzpmdW5jdGlvbigpe3JldHVyblwic2V0T2YoXCIraS50b1N0cmluZygpK1wiKVwifX07dmFyIHIsaX1mdW5jdGlvbiBhbyh0LGUsbil7cmV0dXJuIEhvKChyPWUuZXh0cmFjdChbdF0sbz1uKSxHbyhyLGZ1bmN0aW9uKHQpe3JldHVybntpbnB1dDpvLGVycm9yczp0fX0pKSk7dmFyIG8scn1mdW5jdGlvbiBjbyh0KXtyZXR1cm4gdC5mb2xkKGZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcih1cih0KSl9LGgpfWZ1bmN0aW9uIHNvKHQsZSxuKXtyZXR1cm4gY28oYW8odCxlLG4pKX1mdW5jdGlvbiBsbyh0LGUpe3JldHVybiBybyh0LGR0KGUsJG8pKX1mdW5jdGlvbiBmbyhlKXtyZXR1cm4gaW8oZnVuY3Rpb24odCl7cmV0dXJuIHd0KGUsdCk/Tm4udmFsdWUodCk6Tm4uZXJyb3IoJ1Vuc3VwcG9ydGVkIHZhbHVlOiBcIicrdCsnXCIsIGNob29zZSBvbmUgb2YgXCInK2Uuam9pbihcIiwgXCIpKydcIi4nKX0pfWZ1bmN0aW9uIG1vKHQpe3JldHVybiBhcih0LHQsam4oKSxabygpKX1mdW5jdGlvbiBnbyh0LGUpe3JldHVybiBhcih0LHQsam4oKSxlKX1mdW5jdGlvbiBwbyh0KXtyZXR1cm4gZ28odCxlcil9ZnVuY3Rpb24gaG8odCxlKXtyZXR1cm4gYXIodCx0LGpuKCksZm8oZSkpfWZ1bmN0aW9uIHZvKHQpe3JldHVybiBnbyh0LG9yKX1mdW5jdGlvbiBibyh0LGUpe3JldHVybiBhcih0LHQsam4oKSwkbyhlKSl9ZnVuY3Rpb24geW8odCxlKXtyZXR1cm4gYXIodCx0LGpuKCksUW8oZSkpfWZ1bmN0aW9uIHhvKHQsZSl7cmV0dXJuIGFyKHQsdCxqbigpLGVvKGUpKX1mdW5jdGlvbiB3byh0KXtyZXR1cm4gYXIodCx0LFhuKCksWm8oKSl9ZnVuY3Rpb24gU28odCxlKXtyZXR1cm4gYXIodCx0LFhuKCksZSl9ZnVuY3Rpb24ga28odCl7cmV0dXJuIFNvKHQsdHIpfWZ1bmN0aW9uIENvKHQpe3JldHVybiBTbyh0LGVyKX1mdW5jdGlvbiBPbyh0KXtyZXR1cm4gU28odCxvcil9ZnVuY3Rpb24gX28odCxlKXtyZXR1cm4gU28odCxlbyhlKSl9ZnVuY3Rpb24gVG8odCxlKXtyZXR1cm4gU28odCwkbyhlKSl9ZnVuY3Rpb24gRW8odCxlKXtyZXR1cm4gYXIodCx0LEduKGUpLFpvKCkpfWZ1bmN0aW9uIERvKHQsZSxuKXtyZXR1cm4gYXIodCx0LEduKGUpLG4pfWZ1bmN0aW9uIEFvKHQsZSl7cmV0dXJuIERvKHQsZSx0cil9ZnVuY3Rpb24gQm8odCxlKXtyZXR1cm4gRG8odCxlLGVyKX1mdW5jdGlvbiBNbyh0LGUsbil7cmV0dXJuIERvKHQsZSxmbyhuKSl9ZnVuY3Rpb24gRm8odCxlKXtyZXR1cm4gRG8odCxlLG5yKX1mdW5jdGlvbiBJbyh0LGUpe3JldHVybiBEbyh0LGUsb3IpfWZ1bmN0aW9uIFJvKHQsZSxuKXtyZXR1cm4gRG8odCxlLGVvKG4pKX1mdW5jdGlvbiBObyh0LGUsbil7cmV0dXJuIERvKHQsZSwkbyhuKSl9ZnVuY3Rpb24gUG8odCl7dmFyIGU9dDtyZXR1cm57Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGV9LHNldDpmdW5jdGlvbih0KXtlPXR9fX0oV2U9amU9e30pW1dlLkVycm9yPTBdPVwiRXJyb3JcIixXZVtXZS5WYWx1ZT0xXT1cIlZhbHVlXCI7ZnVuY3Rpb24gVm8odSl7aWYoIWModSkpdGhyb3cgbmV3IEVycm9yKFwiY2FzZXMgbXVzdCBiZSBhbiBhcnJheVwiKTtpZigwPT09dS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwidGhlcmUgbXVzdCBiZSBhdCBsZWFzdCBvbmUgY2FzZVwiKTt2YXIgYT1bXSxuPXt9O3JldHVybiBTdCh1LGZ1bmN0aW9uKHQsbyl7dmFyIGU9Q3QodCk7aWYoMSE9PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIm9uZSBhbmQgb25seSBvbmUgbmFtZSBwZXIgY2FzZVwiKTt2YXIgcj1lWzBdLGk9dFtyXTtpZih2b2lkIDAhPT1uW3JdKXRocm93IG5ldyBFcnJvcihcImR1cGxpY2F0ZSBrZXkgZGV0ZWN0ZWQ6XCIrcik7aWYoXCJjYXRhXCI9PT1yKXRocm93IG5ldyBFcnJvcihcImNhbm5vdCBoYXZlIGEgY2FzZSBuYW1lZCBjYXRhIChzb3JyeSlcIik7aWYoIWMoaSkpdGhyb3cgbmV3IEVycm9yKFwiY2FzZSBhcmd1bWVudHMgbXVzdCBiZSBhbiBhcnJheVwiKTthLnB1c2gociksbltyXT1mdW5jdGlvbigpe2Zvcih2YXIgbj1bXSx0PTA7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyluW3RdPWFyZ3VtZW50c1t0XTt2YXIgZT1uLmxlbmd0aDtpZihlIT09aS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiV3JvbmcgbnVtYmVyIG9mIGFyZ3VtZW50cyB0byBjYXNlIFwiK3IrXCIuIEV4cGVjdGVkIFwiK2kubGVuZ3RoK1wiIChcIitpK1wiKSwgZ290IFwiK2UpO3JldHVybntmb2xkOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLGU9MDtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKXRbZV09YXJndW1lbnRzW2VdO2lmKHQubGVuZ3RoIT09dS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiV3JvbmcgbnVtYmVyIG9mIGFyZ3VtZW50cyB0byBmb2xkLiBFeHBlY3RlZCBcIit1Lmxlbmd0aCtcIiwgZ290IFwiK3QubGVuZ3RoKTtyZXR1cm4gdFtvXS5hcHBseShudWxsLG4pfSxtYXRjaDpmdW5jdGlvbih0KXt2YXIgZT1DdCh0KTtpZihhLmxlbmd0aCE9PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIldyb25nIG51bWJlciBvZiBhcmd1bWVudHMgdG8gbWF0Y2guIEV4cGVjdGVkOiBcIithLmpvaW4oXCIsXCIpK1wiXFxuQWN0dWFsOiBcIitlLmpvaW4oXCIsXCIpKTtpZighTChhLGZ1bmN0aW9uKHQpe3JldHVybiB3dChlLHQpfSkpdGhyb3cgbmV3IEVycm9yKFwiTm90IGFsbCBicmFuY2hlcyB3ZXJlIHNwZWNpZmllZCB3aGVuIHVzaW5nIG1hdGNoLiBTcGVjaWZpZWQ6IFwiK2Uuam9pbihcIiwgXCIpK1wiXFxuUmVxdWlyZWQ6IFwiK2Euam9pbihcIiwgXCIpKTtyZXR1cm4gdFtyXS5hcHBseShudWxsLG4pfSxsb2c6ZnVuY3Rpb24odCl7Y29uc29sZS5sb2codCx7Y29uc3RydWN0b3JzOmEsY29uc3RydWN0b3I6cixwYXJhbXM6bn0pfX19fSksbn12YXIgSG89ZnVuY3Rpb24odCl7cmV0dXJuIFBuKHQsTm4uZXJyb3IsTm4udmFsdWUpfSxMbz1Wbix6bz1IbixVbz1mdW5jdGlvbih0LGUpe3JldHVybiB0LnN0eXBlPT09amUuVmFsdWU/ZSh0LnN2YWx1ZSk6dH0sam89ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5zdHlwZT09PWplLkVycm9yP2UodC5zZXJyb3IpOnR9LFdvPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuc3R5cGU9PT1qZS5WYWx1ZT97c3R5cGU6amUuVmFsdWUsc3ZhbHVlOmUodC5zdmFsdWUpfTp0fSxHbz1mdW5jdGlvbih0LGUpe3JldHVybiB0LnN0eXBlPT09amUuRXJyb3I/e3N0eXBlOmplLkVycm9yLHNlcnJvcjplKHQuc2Vycm9yKX06dH0sWG89UG4sWW89VW4oZnVuY3Rpb24odCxlKXtyZXR1cm4geCh0KSYmeChlKT9Zbyh0LGUpOmV9KSxxbz1VbihmdW5jdGlvbih0LGUpe3JldHVybiBlfSksS289ZnVuY3Rpb24odCl7dmFyIGUsbixvPShlPVtdLG49W10sU3QodCxmdW5jdGlvbih0KXtQbih0LGZ1bmN0aW9uKHQpe3JldHVybiBuLnB1c2godCl9LGZ1bmN0aW9uKHQpe3JldHVybiBlLnB1c2godCl9KX0pLHt2YWx1ZXM6ZSxlcnJvcnM6bn0pO3JldHVybiAwPG8uZXJyb3JzLmxlbmd0aD9yKHpvLGZ0KShvLmVycm9ycyk6TG8oby52YWx1ZXMpfSxKbz1KbihMbyksJG89ZnVuY3Rpb24obil7cmV0dXJue2V4dHJhY3Q6ZnVuY3Rpb24oaSx1KXtmb3IodmFyIGE9e30sYz1bXSx0PTAsZT1uO3Q8ZS5sZW5ndGg7dCsrKXpuKGVbdF0sZnVuY3Rpb24odCxlLG4sbyl7dmFyIHI9UW4obixpLHUsdCxvKTtYbyhyLGZ1bmN0aW9uKHQpe2MucHVzaC5hcHBseShjLHQpfSxmdW5jdGlvbih0KXthW2VdPXR9KX0sZnVuY3Rpb24odCxlKXthW3RdPWUodSl9KTtyZXR1cm4gMDxjLmxlbmd0aD96byhjKTpMbyhhKX0sdG9TdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm5cIm9iantcXG5cIitCKG4sZnVuY3Rpb24odCl7cmV0dXJuIHpuKHQsZnVuY3Rpb24odCxlLG4sbyl7cmV0dXJuIHQrXCIgLT4gXCIrby50b1N0cmluZygpfSxmdW5jdGlvbih0LGUpe3JldHVyblwic3RhdGUoXCIrdCtcIilcIn0pfSkuam9pbihcIlxcblwiKStcIn1cIn19fSxRbz1yKGVvLCRvKSxabz1ydChKbyksdHI9b28odSxcIm51bWJlclwiKSxlcj1vbyh5LFwic3RyaW5nXCIpLG5yPW9vKHcsXCJib29sZWFuXCIpLG9yPW9vKFMsXCJmdW5jdGlvblwiKSxycj1mdW5jdGlvbihlKXtpZihPYmplY3QoZSkhPT1lKXJldHVybiEwO3N3aXRjaCh7fS50b1N0cmluZy5jYWxsKGUpLnNsaWNlKDgsLTEpKXtjYXNlXCJCb29sZWFuXCI6Y2FzZVwiTnVtYmVyXCI6Y2FzZVwiU3RyaW5nXCI6Y2FzZVwiRGF0ZVwiOmNhc2VcIlJlZ0V4cFwiOmNhc2VcIkJsb2JcIjpjYXNlXCJGaWxlTGlzdFwiOmNhc2VcIkltYWdlRGF0YVwiOmNhc2VcIkltYWdlQml0bWFwXCI6Y2FzZVwiQXJyYXlCdWZmZXJcIjpyZXR1cm4hMDtjYXNlXCJBcnJheVwiOmNhc2VcIk9iamVjdFwiOnJldHVybiBPYmplY3Qua2V5cyhlKS5ldmVyeShmdW5jdGlvbih0KXtyZXR1cm4gcnIoZVt0XSl9KTtkZWZhdWx0OnJldHVybiExfX0saXI9Sm4oZnVuY3Rpb24odCl7cmV0dXJuIHJyKHQpP0xvKHQpOnpvKFwiRXhwZWN0ZWQgdmFsdWUgdG8gYmUgYWNjZXB0YWJsZSBmb3Igc2VuZGluZyB2aWEgcG9zdE1lc3NhZ2VcIil9KSx1cj1mdW5jdGlvbih0KXtyZXR1cm5cIkVycm9yczogXFxuXCIrQigxMDwoZT10LmVycm9ycykubGVuZ3RoP2Uuc2xpY2UoMCwxMCkuY29uY2F0KFt7cGF0aDpbXSxnZXRFcnJvckluZm86cnQoXCIuLi4gKG9ubHkgc2hvd2luZyBmaXJzdCB0ZW4gZmFpbHVyZXMpXCIpfV0pOmUsZnVuY3Rpb24odCl7cmV0dXJuXCJGYWlsZWQgcGF0aDogKFwiK3QucGF0aC5qb2luKFwiID4gXCIpK1wiKVxcblwiK3QuZ2V0RXJyb3JJbmZvKCl9KS5qb2luKFwiXFxuXCIpK1wiXFxuXFxuSW5wdXQgb2JqZWN0OiBcIitxbih0LmlucHV0KTt2YXIgZX0sYXI9TG4sY3I9ZnVuY3Rpb24odCxlKXtyZXR1cm57dGFnOlwiY3VzdG9tXCIsbmV3S2V5OnQsaW5zdGFudGlhdG9yOmV9fTtmdW5jdGlvbiBzcih0LGUpe3JldHVybihuPXt9KVt0XT1lLG47dmFyIG59ZnVuY3Rpb24gbHIodCl7cmV0dXJuIGU9e30sU3QodCxmdW5jdGlvbih0KXtlW3Qua2V5XT10LnZhbHVlfSksZTt2YXIgZX1mdW5jdGlvbiBmcih0KXtyZXR1cm4gUyh0KT90OlR9ZnVuY3Rpb24gZHIodCxlLG4pe2Zvcih2YXIgbz10LmRvbSxyPWZyKG4pO28ucGFyZW50Tm9kZTspe3ZhciBvPW8ucGFyZW50Tm9kZSxpPU10LmZyb21Eb20obyksdT1lKGkpO2lmKHUuaXNTb21lKCkpcmV0dXJuIHU7aWYocihpKSlicmVha31yZXR1cm4gdnQubm9uZSgpfWZ1bmN0aW9uIG1yKHQsZSxuKXt2YXIgbz1lKHQpLHI9ZnIobik7cmV0dXJuIG8ub3JUaHVuayhmdW5jdGlvbigpe3JldHVybiByKHQpP3Z0Lm5vbmUoKTpkcih0LGUscil9KX1mdW5jdGlvbiBncih0LGUpe3JldHVybiB6dCh0LmVsZW1lbnQsZS5ldmVudC50YXJnZXQpfWZ1bmN0aW9uIHByKHQpe2lmKCFldCh0LFwiY2FuXCIpJiYhZXQodCxcImFib3J0XCIpJiYhZXQodCxcInJ1blwiKSl0aHJvdyBuZXcgRXJyb3IoXCJFdmVudEhhbmRsZXIgZGVmaW5lZCBieTogXCIrSlNPTi5zdHJpbmdpZnkodCxudWxsLDIpK1wiIGRvZXMgbm90IGhhdmUgY2FuLCBhYm9ydCwgb3IgcnVuIVwiKTtyZXR1cm4gbHQobHQoe30sYWkpLHQpfWZ1bmN0aW9uIGhyKHQpe3JldHVybiBydChcImFsbG95LlwiK3QpfWZ1bmN0aW9uIHZyKHQsZSl7ZXUodCx0LmVsZW1lbnQsZSx7fSl9ZnVuY3Rpb24gYnIodCxlLG4pe2V1KHQsdC5lbGVtZW50LGUsbil9ZnVuY3Rpb24geXIodCl7dnIodCxJaSgpKX1mdW5jdGlvbiB4cih0LGUsbil7ZXUodCxlLG4se30pfWZ1bmN0aW9uIHdyKHQsZSxuLG8pe3QuZ2V0U3lzdGVtKCkudHJpZ2dlckV2ZW50KG4sZSxvLmV2ZW50KX1mdW5jdGlvbiBTcih0LGUpe3JldHVybntrZXk6dCx2YWx1ZTpwcih7YWJvcnQ6ZX0pfX1mdW5jdGlvbiBrcih0KXtyZXR1cm57a2V5OnQsdmFsdWU6cHIoe3J1bjpmdW5jdGlvbih0LGUpe2UuZXZlbnQucHJldmVudCgpfX0pfX1mdW5jdGlvbiBDcih0LGUpe3JldHVybntrZXk6dCx2YWx1ZTpwcih7cnVuOmV9KX19ZnVuY3Rpb24gT3IodCxuLG8pe3JldHVybntrZXk6dCx2YWx1ZTpwcih7cnVuOmZ1bmN0aW9uKHQsZSl7bi5hcHBseSh2b2lkIDAsW3QsZV0uY29uY2F0KG8pKX19KX19ZnVuY3Rpb24gX3IodCl7cmV0dXJuIGZ1bmN0aW9uKG4pe3JldHVybntrZXk6dCx2YWx1ZTpwcih7cnVuOmZ1bmN0aW9uKHQsZSl7Z3IodCxlKSYmbih0LGUpfX0pfX19ZnVuY3Rpb24gVHIodCxlLG4pe3ZhciBvLHI9ZS5wYXJ0VWlkc1tuXTtyZXR1cm4gQ3Iobz10LGZ1bmN0aW9uKHQsZSl7dC5nZXRTeXN0ZW0oKS5nZXRCeVVpZChyKS5lYWNoKGZ1bmN0aW9uKHQpe3dyKHQsdC5lbGVtZW50LG8sZSl9KX0pfWZ1bmN0aW9uIEVyKHQscil7cmV0dXJuIENyKHQsZnVuY3Rpb24oZSx0KXt2YXIgbj10LmV2ZW50LG89ZS5nZXRTeXN0ZW0oKS5nZXRCeURvbShuLnRhcmdldCkuZ2V0T3JUaHVuayhmdW5jdGlvbigpe3JldHVybiBtcihuLnRhcmdldCxmdW5jdGlvbih0KXtyZXR1cm4gZS5nZXRTeXN0ZW0oKS5nZXRCeURvbSh0KS50b09wdGlvbmFsKCl9LFQpLmdldE9yKGUpfSk7cihlLG8sdCl9KX1mdW5jdGlvbiBEcih0KXtyZXR1cm4gQ3IodCxmdW5jdGlvbih0LGUpe2UuY3V0KCl9KX1mdW5jdGlvbiBBcih0LGUpe3JldHVybiBfcih0KShlKX1mdW5jdGlvbiBCcih0KXtyZXR1cm4gdC5kb20uaW5uZXJIVE1MfWZ1bmN0aW9uIE1yKHQsZSl7dmFyIG4sbyxyPWp0KHQpLmRvbSxpPU10LmZyb21Eb20oci5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkpO0JlKGksKG49ZSwobz0ocnx8ZG9jdW1lbnQpLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpLmlubmVySFRNTD1uLEt0KE10LmZyb21Eb20obykpKSksTWUodCksVG4odCxpKX1mdW5jdGlvbiBGcih0KXtpZihadCh0KSlyZXR1cm5cIiNzaGFkb3ctcm9vdFwiO3ZhciBlPU10LmZyb21Eb20odC5kb20uY2xvbmVOb2RlKCExKSksbj1NdC5mcm9tVGFnKFwiZGl2XCIpLG89TXQuZnJvbURvbShlLmRvbS5jbG9uZU5vZGUoITApKTtyZXR1cm4gVG4obixvKSxCcihuKX1mdW5jdGlvbiBJcih0KXt2YXIgZT0obmV3IERhdGUpLmdldFRpbWUoKTtyZXR1cm4gdCtcIl9cIitNYXRoLmZsb29yKDFlOSpNYXRoLnJhbmRvbSgpKSsgKytzdStTdHJpbmcoZSl9ZnVuY3Rpb24gUnIodCl7dmFyIGU9R2UodCk/dC5kb21bbXVdOm51bGw7cmV0dXJuIHZ0LmZyb20oZSl9ZnVuY3Rpb24gTnIoZSl7ZnVuY3Rpb24gbih0KXtyZXR1cm5cIlRoZSBjb21wb25lbnQgbXVzdCBiZSBpbiBhIGNvbnRleHQgdG8gZXhlY3V0ZTogXCIrdCsoZT9cIlxcblwiK0ZyKGUoKS5lbGVtZW50KStcIiBpcyBub3QgaW4gY29udGV4dC5cIjpcIlwiKX1mdW5jdGlvbiB0KHQpe3JldHVybiBmdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihuKHQpKX19ZnVuY3Rpb24gbyh0KXtyZXR1cm4gZnVuY3Rpb24oKXtjb25zb2xlLndhcm4obih0KSl9fXJldHVybntkZWJ1Z0luZm86cnQoXCJmYWtlXCIpLHRyaWdnZXJFdmVudDpvKFwidHJpZ2dlckV2ZW50XCIpLHRyaWdnZXJGb2N1czpvKFwidHJpZ2dlckZvY3VzXCIpLHRyaWdnZXJFc2NhcGU6byhcInRyaWdnZXJFc2NhcGVcIiksYnJvYWRjYXN0Om8oXCJicm9hZGNhc3RcIiksYnJvYWRjYXN0T246byhcImJyb2FkY2FzdE9uXCIpLGJyb2FkY2FzdEV2ZW50Om8oXCJicm9hZGNhc3RFdmVudFwiKSxidWlsZDp0KFwiYnVpbGRcIiksYWRkVG9Xb3JsZDp0KFwiYWRkVG9Xb3JsZFwiKSxyZW1vdmVGcm9tV29ybGQ6dChcInJlbW92ZUZyb21Xb3JsZFwiKSxhZGRUb0d1aTp0KFwiYWRkVG9HdWlcIikscmVtb3ZlRnJvbUd1aTp0KFwicmVtb3ZlRnJvbUd1aVwiKSxnZXRCeVVpZDp0KFwiZ2V0QnlVaWRcIiksZ2V0QnlEb206dChcImdldEJ5RG9tXCIpLGlzQ29ubmVjdGVkOlR9fWZ1bmN0aW9uIFByKHQsZSl7dmFyIG49dC50b1N0cmluZygpLG89bi5pbmRleE9mKFwiKVwiKSsxLHI9bi5pbmRleE9mKFwiKFwiKSxpPW4uc3Vic3RyaW5nKHIrMSxvLTEpLnNwbGl0KC8sXFxzKi8pO3JldHVybiB0LnRvRnVuY3Rpb25Bbm5vdGF0aW9uPWZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSxwYXJhbWV0ZXJzOmJ1KGkpfX0sdH1mdW5jdGlvbiBWcih0KXtyZXR1cm4gc3IoeXUsdCl9ZnVuY3Rpb24gSHIobyl7cmV0dXJuIHQ9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLG49MTtuPGFyZ3VtZW50cy5sZW5ndGg7bisrKWVbbi0xXT1hcmd1bWVudHNbbl07cmV0dXJuIG8uYXBwbHkodm9pZCAwLFYoW3QuZ2V0QXBpcygpLHRdLGUsITEpKX0sbj0oZT1vLnRvU3RyaW5nKCkpLmluZGV4T2YoXCIpXCIpKzEscj1lLmluZGV4T2YoXCIoXCIpLGk9ZS5zdWJzdHJpbmcocisxLG4tMSkuc3BsaXQoLyxcXHMqLyksdC50b0Z1bmN0aW9uQW5ub3RhdGlvbj1mdW5jdGlvbigpe3JldHVybntuYW1lOlwiT1ZFUlJJREVcIixwYXJhbWV0ZXJzOmJ1KGkuc2xpY2UoMSkpfX0sdDt2YXIgdCxlLG4scixpfWZ1bmN0aW9uIExyKHQscil7dmFyIGk9e307cmV0dXJuIEoodCxmdW5jdGlvbih0LG8pe0oodCxmdW5jdGlvbih0LGUpe3ZhciBuPXR0KGksZSkuZ2V0T3IoW10pO2lbZV09bi5jb25jYXQoW3Iobyx0KV0pfSl9KSxpfWZ1bmN0aW9uIHpyKHQpe3JldHVybntjbGFzc2VzOkUodC5jbGFzc2VzKT9bXTp0LmNsYXNzZXMsYXR0cmlidXRlczpFKHQuYXR0cmlidXRlcyk/e306dC5hdHRyaWJ1dGVzLHN0eWxlczpFKHQuc3R5bGVzKT97fTp0LnN0eWxlc319ZnVuY3Rpb24gVXIodCl7cmV0dXJuIHQuY0hhbmRsZXJ9ZnVuY3Rpb24ganIodCxlKXtyZXR1cm57bmFtZTp0LGhhbmRsZXI6ZX19ZnVuY3Rpb24gV3IodCxlLG4pe3ZhciBvPWVbbl07cmV0dXJuIG8/ZnVuY3Rpb24odSx0LGEpe3RyeXt2YXIgZT1HKHQsZnVuY3Rpb24odCxlKXt2YXIgbj10Lm5hbWUsbz1lLm5hbWUscj1hLmluZGV4T2YobiksaT1hLmluZGV4T2Yobyk7aWYoLTE9PT1yKXRocm93IG5ldyBFcnJvcihcIlRoZSBvcmRlcmluZyBmb3IgXCIrdStcIiBkb2VzIG5vdCBoYXZlIGFuIGVudHJ5IGZvciBcIituK1wiLlxcbk9yZGVyIHNwZWNpZmllZDogXCIrSlNPTi5zdHJpbmdpZnkoYSxudWxsLDIpKTtpZigtMT09PWkpdGhyb3cgbmV3IEVycm9yKFwiVGhlIG9yZGVyaW5nIGZvciBcIit1K1wiIGRvZXMgbm90IGhhdmUgYW4gZW50cnkgZm9yIFwiK28rXCIuXFxuT3JkZXIgc3BlY2lmaWVkOiBcIitKU09OLnN0cmluZ2lmeShhLG51bGwsMikpO3JldHVybiByPGk/LTE6aTxyPzE6MH0pO3JldHVybiBObi52YWx1ZShlKX1jYXRjaCh0KXtyZXR1cm4gTm4uZXJyb3IoW3RdKX19KFwiRXZlbnQ6IFwiK24sdCxvKS5tYXAoZnVuY3Rpb24odCl7dmFyIG4sZSxvLHIsaT1CKHQsZnVuY3Rpb24odCl7cmV0dXJuIHQuaGFuZGxlcn0pO3JldHVybntjYW46ZnVuY3Rpb24oKXtmb3IodmFyIG49W10sdD0wO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspblt0XT1hcmd1bWVudHNbdF07cmV0dXJuIFIoZSxmdW5jdGlvbih0LGUpe3JldHVybiB0JiZlLmNhbi5hcHBseSh2b2lkIDAsbil9LCEwKX0sYWJvcnQ6KG89ZT1uPWkscj1mdW5jdGlvbih0KXtyZXR1cm4gdC5hYm9ydH0sZnVuY3Rpb24oKXtmb3IodmFyIG49W10sdD0wO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspblt0XT1hcmd1bWVudHNbdF07cmV0dXJuIFIobyxmdW5jdGlvbih0LGUpe3JldHVybiB0fHxyKGUpLmFwcGx5KHZvaWQgMCxuKX0sITEpfSkscnVuOmZ1bmN0aW9uKCl7Zm9yKHZhciBlPVtdLHQ9MDt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKWVbdF09YXJndW1lbnRzW3RdO1N0KG4sZnVuY3Rpb24odCl7dC5ydW4uYXBwbHkodm9pZCAwLGUpfSl9fX0pOk5uLmVycm9yKFtcIlRoZSBldmVudCAoXCIrbisnKSBoYXMgbW9yZSB0aGFuIG9uZSBiZWhhdmlvdXIgdGhhdCBsaXN0ZW5zIHRvIGl0LlxcbldoZW4gdGhpcyBvY2N1cnMsIHlvdSBtdXN0IHNwZWNpZnkgYW4gZXZlbnQgb3JkZXJpbmcgZm9yIHRoZSBiZWhhdmlvdXJzIGluIHlvdXIgc3BlYyAoZS5nLiBbIFwibGlzdGluZ1wiLCBcInRvZ2dsaW5nXCIgXSkuXFxuVGhlIGJlaGF2aW91cnMgdGhhdCBjYW4gdHJpZ2dlciBpdCBhcmU6ICcrSlNPTi5zdHJpbmdpZnkoQih0LGZ1bmN0aW9uKHQpe3JldHVybiB0Lm5hbWV9KSxudWxsLDIpXSl9ZnVuY3Rpb24gR3IodCxlKXt2YXIgbj1pZSh0LGUpO3JldHVybiB2b2lkIDA9PT1ufHxcIlwiPT09bj9bXTpuLnNwbGl0KFwiIFwiKX1mdW5jdGlvbiBYcih0KXtyZXR1cm4gdm9pZCAwIT09dC5kb20uY2xhc3NMaXN0fWZ1bmN0aW9uIFlyKHQsZSl7dmFyIG4sbyxyO1hyKHQpP3QuZG9tLmNsYXNzTGlzdC5hZGQoZSk6KG89ZSxyPUdyKG49dCxcImNsYXNzXCIpLmNvbmNhdChbb10pLG9lKG4sXCJjbGFzc1wiLHIuam9pbihcIiBcIikpKX1mdW5jdGlvbiBxcih0LGUpe3ZhciBuLG8scixpO1hyKHQpP3QuZG9tLmNsYXNzTGlzdC5yZW1vdmUoZSk6KHI9ZSwwPChpPUYoR3Iobz10LFwiY2xhc3NcIiksZnVuY3Rpb24odCl7cmV0dXJuIHQhPT1yfSkpLmxlbmd0aD9vZShvLFwiY2xhc3NcIixpLmpvaW4oXCIgXCIpKTpjZShvLFwiY2xhc3NcIikpLDA9PT0oWHIobj10KT9uLmRvbS5jbGFzc0xpc3Q6R3IobixcImNsYXNzXCIpKS5sZW5ndGgmJmNlKG4sXCJjbGFzc1wiKX1mdW5jdGlvbiBLcih0LGUpe3JldHVybiBYcih0KSYmdC5kb20uY2xhc3NMaXN0LmNvbnRhaW5zKGUpfWZ1bmN0aW9uIEpyKGUsdCl7U3QodCxmdW5jdGlvbih0KXtZcihlLHQpfSl9ZnVuY3Rpb24gJHIoZSx0KXtTdCh0LGZ1bmN0aW9uKHQpe3FyKGUsdCl9KX1mdW5jdGlvbiBRcih0KXtyZXR1cm4gdC5kb20udmFsdWV9ZnVuY3Rpb24gWnIodCxlKXtpZih2b2lkIDA9PT1lKXRocm93IG5ldyBFcnJvcihcIlZhbHVlLnNldCB3YXMgdW5kZWZpbmVkXCIpO3QuZG9tLnZhbHVlPWV9ZnVuY3Rpb24gdGkodCl7dmFyIG4sZSxvLHIsaT0obj10dCh0LFwiYmVoYXZpb3Vyc1wiKS5nZXRPcih7fSksSChDdChuKSxmdW5jdGlvbih0KXt2YXIgZT1uW3RdO3JldHVybiBrKGUpP1tlLm1lXTpbXX0pKTtyZXR1cm4gZT10LHI9QihvPWksZnVuY3Rpb24odCl7cmV0dXJuIFRvKHQubmFtZSgpLFttbyhcImNvbmZpZ1wiKSxFbyhcInN0YXRlXCIseHUpXSl9KSx7bGlzdDpvLGRhdGE6ZHQoYW8oXCJjb21wb25lbnQuYmVoYXZpb3Vyc1wiLCRvKHIpLGUuYmVoYXZpb3VycykuZm9sZChmdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IodXIodCkrXCJcXG5Db21wbGV0ZSBzcGVjOlxcblwiK0pTT04uc3RyaW5naWZ5KGUsbnVsbCwyKSl9LGgpLGZ1bmN0aW9uKHQpe3JldHVybiBydCh0Lm1hcChmdW5jdGlvbih0KXtyZXR1cm57Y29uZmlnOnQuY29uZmlnLHN0YXRlOnQuc3RhdGUuaW5pdCh0LmNvbmZpZyl9fSkpfSl9fWZ1bmN0aW9uIGVpKHQsZSxuKXt2YXIgbyxyLGk9bHQobHQoe30sKG89dCkuZG9tKSx7dWlkOm8udWlkLGRvbUNoaWxkcmVuOkIoby5jb21wb25lbnRzLGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnR9KX0pLHU9dC5kb21Nb2RpZmljYXRpb24uZm9sZChmdW5jdGlvbigpe3JldHVybiB6cih7fSl9LHpyKSxhPTA8ZS5sZW5ndGg/ZnVuY3Rpb24oZSx0LG4sbyl7dmFyIHI9bHQoe30sdCk7ZnVuY3Rpb24gaSh0KXtyZXR1cm4gSSh0LGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGx0KGx0KHt9LGUubW9kaWZpY2F0aW9uKSx0KX0se30pfVN0KG4sZnVuY3Rpb24odCl7clt0Lm5hbWUoKV09dC5leGhpYml0KGUsbyl9KTt2YXIgdT1McihyLGZ1bmN0aW9uKHQsZSl7cmV0dXJue25hbWU6dCxtb2RpZmljYXRpb246ZX19KTtyZXR1cm4genIoe2NsYXNzZXM6SSh1LmNsYXNzZXMsZnVuY3Rpb24odCxlKXtyZXR1cm4gZS5tb2RpZmljYXRpb24uY29uY2F0KHQpfSxbXSksYXR0cmlidXRlczppKHUuYXR0cmlidXRlcyksc3R5bGVzOmkodS5zdHlsZXMpfSl9KG4se1wiYWxsb3kuYmFzZS5tb2RpZmljYXRpb25cIjp1fSxlLGkpOnU7cmV0dXJuIGx0KGx0KHt9LHI9aSkse2F0dHJpYnV0ZXM6bHQobHQoe30sci5hdHRyaWJ1dGVzKSxhLmF0dHJpYnV0ZXMpLHN0eWxlczpsdChsdCh7fSxyLnN0eWxlcyksYS5zdHlsZXMpLGNsYXNzZXM6ci5jbGFzc2VzLmNvbmNhdChhLmNsYXNzZXMpfSl9ZnVuY3Rpb24gbmkodCxlLG4pe3ZhciBvLHIsaSx1LGEsYz17XCJhbGxveS5iYXNlLmJlaGF2aW91clwiOnQuZXZlbnRzfSxzPXQuZXZlbnRPcmRlcjtyZXR1cm4gcj1uLGk9ZSxvPUxyKGx0KGx0KHt9LGMpLCh1PXIsYT17fSxTdChpLGZ1bmN0aW9uKHQpe2FbdC5uYW1lKCldPXQuaGFuZGxlcnModSl9KSxhKSksanIpLFN1KG8scykuZ2V0T3JEaWUoKX1mdW5jdGlvbiBvaSh0KXt2YXIgbixlLG8scixpLHUsYSxjLHMsbCxmPWh1KHQpLGQ9Zi5ldmVudHMsbT1BKGYsW1wiZXZlbnRzXCJdKSxnPUIodHQobSxcImNvbXBvbmVudHNcIikuZ2V0T3IoW10pLFR1KSxwPWx0KGx0KHt9LG0pLHtldmVudHM6bHQobHQoe30sY3UpLGQpLGNvbXBvbmVudHM6Z30pO3JldHVybiBObi52YWx1ZSgoZT1Qbyh2dSksbz1jbyhhbyhcImN1c3RvbS5kZWZpbml0aW9uXCIsQ3Usbj1wKSkscj10aShuKSxpPXIubGlzdCx1PXIuZGF0YSxhPWZ1bmN0aW9uKHQpe3ZhciBlPU10LmZyb21UYWcodC50YWcpO3JlKGUsdC5hdHRyaWJ1dGVzKSxKcihlLHQuY2xhc3NlcyksZGUoZSx0LnN0eWxlcyksdC5pbm5lckh0bWwuZWFjaChmdW5jdGlvbih0KXtyZXR1cm4gTXIoZSx0KX0pO3ZhciBuPXQuZG9tQ2hpbGRyZW47cmV0dXJuIEJlKGUsbiksdC52YWx1ZS5lYWNoKGZ1bmN0aW9uKHQpe1pyKGUsdCl9KSx0LnVpZCxndShlLHQudWlkKSxlfShlaShvLGksdSkpLGM9bmkobyxpLHUpLHM9UG8oby5jb21wb25lbnRzKSxsPXt1aWQ6bi51aWQsZ2V0U3lzdGVtOmUuZ2V0LGNvbmZpZzpmdW5jdGlvbih0KXt2YXIgZT11O3JldHVybihTKGVbdC5uYW1lKCldKT9lW3QubmFtZSgpXTpmdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCBmaW5kIFwiK3QubmFtZSgpK1wiIGluIFwiK0pTT04uc3RyaW5naWZ5KG4sbnVsbCwyKSl9KSgpfSxoYXNDb25maWd1cmVkOmZ1bmN0aW9uKHQpe3JldHVybiBTKHVbdC5uYW1lKCldKX0sc3BlYzpuLHJlYWRTdGF0ZTpmdW5jdGlvbih0KXtyZXR1cm4gdVt0XSgpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5zdGF0ZS5yZWFkU3RhdGUoKX0pLmdldE9yKFwibm90IGVuYWJsZWRcIil9LGdldEFwaXM6ZnVuY3Rpb24oKXtyZXR1cm4gby5hcGlzfSxjb25uZWN0OmZ1bmN0aW9uKHQpe2Uuc2V0KHQpfSxkaXNjb25uZWN0OmZ1bmN0aW9uKCl7ZS5zZXQoTnIoaCkpfSxlbGVtZW50OmEsc3luY0NvbXBvbmVudHM6ZnVuY3Rpb24oKXt2YXIgdD1IKEt0KGEpLGZ1bmN0aW9uKHQpe3JldHVybiBlLmdldCgpLmdldEJ5RG9tKHQpLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm5bXX0sVyl9KTtzLnNldCh0KX0sY29tcG9uZW50czpzLmdldCxldmVudHM6Y30pKTtmdW5jdGlvbiBoKCl7cmV0dXJuIGx9fWZ1bmN0aW9uIHJpKHQpe3ZhciBlPU10LmZyb21UZXh0KHQpO3JldHVybiBPdSh7ZWxlbWVudDplfSl9Vm8oW3tib3RoRXJyb3JzOltcImVycm9yMVwiLFwiZXJyb3IyXCJdfSx7Zmlyc3RFcnJvcjpbXCJlcnJvcjFcIixcInZhbHVlMlwiXX0se3NlY29uZEVycm9yOltcInZhbHVlMVwiLFwiZXJyb3IyXCJdfSx7Ym90aFZhbHVlczpbXCJ2YWx1ZTFcIixcInZhbHVlMlwiXX1dKTt2YXIgaWksdWksYWk9e2NhbjpELGFib3J0OlQscnVuOnN0fSxjaT1ydCxzaT1jaShcInRvdWNoc3RhcnRcIiksbGk9Y2koXCJ0b3VjaG1vdmVcIiksZmk9Y2koXCJ0b3VjaGVuZFwiKSxkaT1jaShcInRvdWNoY2FuY2VsXCIpLG1pPWNpKFwibW91c2Vkb3duXCIpLGdpPWNpKFwibW91c2Vtb3ZlXCIpLHBpPWNpKFwibW91c2VvdXRcIiksaGk9Y2koXCJtb3VzZXVwXCIpLHZpPWNpKFwibW91c2VvdmVyXCIpLGJpPWNpKFwiZm9jdXNpblwiKSx5aT1jaShcImZvY3Vzb3V0XCIpLHhpPWNpKFwia2V5ZG93blwiKSx3aT1jaShcImtleXVwXCIpLFNpPWNpKFwiaW5wdXRcIiksa2k9Y2koXCJjaGFuZ2VcIiksQ2k9Y2koXCJjbGlja1wiKSxPaT1jaShcInRyYW5zaXRpb25jYW5jZWxcIiksX2k9Y2koXCJ0cmFuc2l0aW9uZW5kXCIpLFRpPWNpKFwidHJhbnNpdGlvbnN0YXJ0XCIpLEVpPWNpKFwic2VsZWN0c3RhcnRcIiksRGk9e3RhcDpocihcInRhcFwiKX0sQWk9aHIoXCJmb2N1c1wiKSxCaT1ocihcImJsdXIucG9zdFwiKSxNaT1ocihcInBhc3RlLnBvc3RcIiksRmk9aHIoXCJyZWNlaXZlXCIpLElpPWhyKFwiZXhlY3V0ZVwiKSxSaT1ocihcImZvY3VzLml0ZW1cIiksTmk9RGkudGFwLFBpPWhyKFwibG9uZ3ByZXNzXCIpLFZpPWhyKFwic2FuZGJveC5jbG9zZVwiKSxIaT1ocihcInR5cGVhaGVhZC5jYW5jZWxcIiksTGk9aHIoXCJzeXN0ZW0uaW5pdFwiKSx6aT1ocihcInN5c3RlbS50b3VjaG1vdmVcIiksVWk9aHIoXCJzeXN0ZW0udG91Y2hlbmRcIiksamk9aHIoXCJzeXN0ZW0uc2Nyb2xsXCIpLFdpPWhyKFwic3lzdGVtLnJlc2l6ZVwiKSxHaT1ocihcInN5c3RlbS5hdHRhY2hlZFwiKSxYaT1ocihcInN5c3RlbS5kZXRhY2hlZFwiKSxZaT1ocihcInN5c3RlbS5kaXNtaXNzUmVxdWVzdGVkXCIpLHFpPWhyKFwic3lzdGVtLnJlcG9zaXRpb25SZXF1ZXN0ZWRcIiksS2k9aHIoXCJmb2N1c21hbmFnZXIuc2hpZnRlZFwiKSxKaT1ocihcInNsb3Rjb250YWluZXIudmlzaWJpbGl0eVwiKSwkaT1ocihcImNoYW5nZS50YWJcIiksUWk9aHIoXCJkaXNtaXNzLnRhYlwiKSxaaT1ocihcImhpZ2hsaWdodFwiKSx0dT1ocihcImRlaGlnaGxpZ2h0XCIpLGV1PWZ1bmN0aW9uKHQsZSxuLG8pe3ZhciByPWx0KHt0YXJnZXQ6ZX0sbyk7dC5nZXRTeXN0ZW0oKS50cmlnZ2VyRXZlbnQobixlLHIpfSxudT1scixvdT1fcihHaSgpKSxydT1fcihYaSgpKSxpdT1fcihMaSgpKSx1dT0oaWk9SWkoKSxmdW5jdGlvbih0KXtyZXR1cm4gQ3IoaWksdCl9KSxhdT1udShbe2tleTpBaSgpLHZhbHVlOnByKHtjYW46ZnVuY3Rpb24odCxlKXt2YXIgbixvPWUuZXZlbnQscj1vLm9yaWdpbmF0b3IsaT1vLnRhcmdldDtyZXR1cm4hKHp0KG49cix0LmVsZW1lbnQpJiYhenQobixpKSYmKGNvbnNvbGUud2FybihBaSgpK1wiIGRpZCBub3QgZ2V0IGludGVycHJldGVkIGJ5IHRoZSBkZXNpcmVkIHRhcmdldC4gXFxuT3JpZ2luYXRvcjogXCIrRnIocikrXCJcXG5UYXJnZXQ6IFwiK0ZyKGkpK1wiXFxuQ2hlY2sgdGhlIFwiK0FpKCkrXCIgZXZlbnQgaGFuZGxlcnNcIiksMSkpfX0pfV0pLGN1PU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGV2ZW50czphdX0pLHN1PTAsbHU9cnQoXCJhbGxveS1pZC1cIiksZnU9cnQoXCJkYXRhLWFsbG95LWlkXCIpLGR1PWx1KCksbXU9ZnUoKSxndT1mdW5jdGlvbih0LGUpe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LmRvbSxtdSx7dmFsdWU6ZSx3cml0YWJsZTohMH0pfSxwdT1JcixodT1oLHZ1PU5yKCksYnU9ZnVuY3Rpb24odCl7cmV0dXJuIEIodCxmdW5jdGlvbih0KXtyZXR1cm4gQXQodCxcIi8qXCIpP3Quc3Vic3RyaW5nKDAsdC5sZW5ndGgtXCIvKlwiLmxlbmd0aCk6dH0pfSx5dT1JcihcImFsbG95LXByZW1hZGVcIikseHU9e2luaXQ6ZnVuY3Rpb24oKXtyZXR1cm4gd3Uoe3JlYWRTdGF0ZTpydChcIk5vIFN0YXRlIHJlcXVpcmVkXCIpfSl9fSx3dT1mdW5jdGlvbih0KXtyZXR1cm4gdH0sU3U9ZnVuY3Rpb24odCxhKXt2YXIgZSxuLG8scixpLHUsYz0kKHQsZnVuY3Rpb24ocix1KXtyZXR1cm4oMT09PXIubGVuZ3RoP05uLnZhbHVlKHJbMF0uaGFuZGxlcik6V3IocixhLHUpKS5tYXAoZnVuY3Rpb24odCl7dmFyIGUsaSxuPShpPVMoZT10KT97Y2FuOkQsYWJvcnQ6VCxydW46ZX06ZSxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1bXSxvPTI7bzxhcmd1bWVudHMubGVuZ3RoO28rKyluW28tMl09YXJndW1lbnRzW29dO3ZhciByPVt0LGVdLmNvbmNhdChuKTtpLmFib3J0LmFwcGx5KHZvaWQgMCxyKT9lLnN0b3AoKTppLmNhbi5hcHBseSh2b2lkIDAscikmJmkucnVuLmFwcGx5KHZvaWQgMCxyKX0pLG89MTxyLmxlbmd0aD9GKGFbdV0sZnVuY3Rpb24oZSl7cmV0dXJuIGQocixmdW5jdGlvbih0KXtyZXR1cm4gdC5uYW1lPT09ZX0pfSkuam9pbihcIiA+IFwiKTpyWzBdLm5hbWU7cmV0dXJuIHNyKHUse2hhbmRsZXI6bixwdXJwb3NlOm99KX0pfSk7cmV0dXJuIGU9e30sbj1bXSxvPVtdLFN0KGMsZnVuY3Rpb24odCl7dC5mb2xkKGZ1bmN0aW9uKHQpe24ucHVzaCh0KX0sZnVuY3Rpb24odCl7by5wdXNoKHQpfSl9KSwwPCh1PXtlcnJvcnM6bix2YWx1ZXM6b30pLmVycm9ycy5sZW5ndGg/Tm4uZXJyb3IoZnQodS5lcnJvcnMpKTooaT1lLDA9PT0ocj11LnZhbHVlcykubGVuZ3RoP05uLnZhbHVlKGkpOk5uLnZhbHVlKFlvKGkscW8uYXBwbHkodm9pZCAwLHIpKSkpfSxrdT1cImFsbG95LmJhc2UuYmVoYXZpb3VyXCIsQ3U9JG8oW2FyKFwiZG9tXCIsXCJkb21cIixqbigpLCRvKFttbyhcInRhZ1wiKSxFbyhcInN0eWxlc1wiLHt9KSxFbyhcImNsYXNzZXNcIixbXSksRW8oXCJhdHRyaWJ1dGVzXCIse30pLHdvKFwidmFsdWVcIiksd28oXCJpbm5lckh0bWxcIildKSksbW8oXCJjb21wb25lbnRzXCIpLG1vKFwidWlkXCIpLEVvKFwiZXZlbnRzXCIse30pLEVvKFwiYXBpc1wiLHt9KSxhcihcImV2ZW50T3JkZXJcIixcImV2ZW50T3JkZXJcIiwoKHVpPXt9KVtJaSgpXT1bXCJkaXNhYmxpbmdcIixrdSxcInRvZ2dsaW5nXCIsXCJ0eXBlYWhlYWRldmVudHNcIl0sdWlbQWkoKV09W2t1LFwiZm9jdXNpbmdcIixcImtleWluZ1wiXSx1aVtMaSgpXT1ba3UsXCJkaXNhYmxpbmdcIixcInRvZ2dsaW5nXCIsXCJyZXByZXNlbnRpbmdcIl0sdWlbU2koKV09W2t1LFwicmVwcmVzZW50aW5nXCIsXCJzdHJlYW1pbmdcIixcImludmFsaWRhdGluZ1wiXSx1aVtYaSgpXT1ba3UsXCJyZXByZXNlbnRpbmdcIixcIml0ZW0tZXZlbnRzXCIsXCJ0b29sdGlwcGluZ1wiXSx1aVttaSgpXT1bXCJmb2N1c2luZ1wiLGt1LFwiaXRlbS10eXBlLWV2ZW50c1wiXSx1aVtzaSgpXT1bXCJmb2N1c2luZ1wiLGt1LFwiaXRlbS10eXBlLWV2ZW50c1wiXSx1aVt2aSgpXT1bXCJpdGVtLXR5cGUtZXZlbnRzXCIsXCJ0b29sdGlwcGluZ1wiXSx1aVtGaSgpXT1bXCJyZWNlaXZpbmdcIixcInJlZmxlY3RpbmdcIixcInRvb2x0aXBwaW5nXCJdLFluKHJ0KHVpKSkpLFpvKCkpLHdvKFwiZG9tTW9kaWZpY2F0aW9uXCIpXSksT3U9ZnVuY3Rpb24odCl7dmFyIGU9c28oXCJleHRlcm5hbC5jb21wb25lbnRcIix0byhbbW8oXCJlbGVtZW50XCIpLHdvKFwidWlkXCIpXSksdCksbj1QbyhOcigpKSxvPWUudWlkLmdldE9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gcHUoXCJleHRlcm5hbFwiKX0pO2d1KGUuZWxlbWVudCxvKTt2YXIgcj17dWlkOm8sZ2V0U3lzdGVtOm4uZ2V0LGNvbmZpZzp2dC5ub25lLGhhc0NvbmZpZ3VyZWQ6VCxjb25uZWN0OmZ1bmN0aW9uKHQpe24uc2V0KHQpfSxkaXNjb25uZWN0OmZ1bmN0aW9uKCl7bi5zZXQoTnIoZnVuY3Rpb24oKXtyZXR1cm4gcn0pKX0sZ2V0QXBpczpmdW5jdGlvbigpe3JldHVybnt9fSxlbGVtZW50OmUuZWxlbWVudCxzcGVjOnQscmVhZFN0YXRlOnJ0KFwiTm8gc3RhdGVcIiksc3luY0NvbXBvbmVudHM6c3QsY29tcG9uZW50czpydChbXSksZXZlbnRzOnt9fTtyZXR1cm4gVnIocil9LF91PXB1LFR1PWZ1bmN0aW9uKHQpe3JldHVybiB0dCh0LHl1KS5nZXRPclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIG9pKFR0KHQsXCJ1aWRcIik/dDpsdCh7dWlkOl91KFwiXCIpfSx0KSkuZ2V0T3JEaWUoKX0pfSxFdT1WcjtmdW5jdGlvbiBEdSh0LGUsbixvLHIpe3JldHVybiB0KG4sbyk/dnQuc29tZShuKTpTKHIpJiZyKG4pP3Z0Lm5vbmUoKTplKG4sbyxyKX1mdW5jdGlvbiBBdSh0LGUsbil7Zm9yKHZhciBvPXQuZG9tLHI9UyhuKT9uOlQ7by5wYXJlbnROb2RlOyl7dmFyIG89by5wYXJlbnROb2RlLGk9TXQuZnJvbURvbShvKTtpZihlKGkpKXJldHVybiB2dC5zb21lKGkpO2lmKHIoaSkpYnJlYWt9cmV0dXJuIHZ0Lm5vbmUoKX1mdW5jdGlvbiBCdSh0LGUsbil7cmV0dXJuIER1KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUodCl9LEF1LHQsZSxuKX1mdW5jdGlvbiBNdSh0LGUsbil7cmV0dXJuIEJ1KHQsZSxuKS5pc1NvbWUoKX1mdW5jdGlvbiBGdSh0LGUsbil7cmV0dXJuIEF1KHQsZnVuY3Rpb24odCl7cmV0dXJuIEh0KHQsZSl9LG4pfWZ1bmN0aW9uIEl1KHQsZSl7cmV0dXJuIG49ZSxMdChvPXZvaWQgMD09PXQ/ZG9jdW1lbnQ6dC5kb20pP3Z0Lm5vbmUoKTp2dC5mcm9tKG8ucXVlcnlTZWxlY3RvcihuKSkubWFwKE10LmZyb21Eb20pO3ZhciBuLG99ZnVuY3Rpb24gUnUodCxlLG4pe3JldHVybiBEdShIdCxGdSx0LGUsbil9ZnVuY3Rpb24gTnUoKXt2YXIgZT1JcihcImFyaWEtb3duc1wiKTtyZXR1cm57aWQ6ZSxsaW5rOmZ1bmN0aW9uKHQpe29lKHQsXCJhcmlhLW93bnNcIixlKX0sdW5saW5rOmZ1bmN0aW9uKHQpe2NlKHQsXCJhcmlhLW93bnNcIil9fX12YXIgUHUsVnUsSHU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gTXUodCxmdW5jdGlvbih0KXtyZXR1cm4genQodCxlLmVsZW1lbnQpfSxUKXx8KG49ZSxCdSh0LGZ1bmN0aW9uKHQpe2lmKCFHZSh0KSlyZXR1cm4hMTt2YXIgZT1pZSh0LFwiaWRcIik7cmV0dXJuIHZvaWQgMCE9PWUmJi0xPGUuaW5kZXhPZihcImFyaWEtb3duc1wiKX0pLmJpbmQoZnVuY3Rpb24odCl7dmFyIGU9aWUodCxcImlkXCIpO3JldHVybiBJdShnbih0KSwnW2FyaWEtb3ducz1cIicrZSsnXCJdJyl9KS5leGlzdHMoZnVuY3Rpb24odCl7cmV0dXJuIEh1KG4sdCl9KSk7dmFyIG59LEx1PVwidW5rbm93blwiO2Z1bmN0aW9uIHp1KGUsdCxuKXt2YXIgbyxyLGksdTtzd2l0Y2godHQoVXUuZ2V0KCksZSkub3JUaHVuayhmdW5jdGlvbigpe3JldHVybiBLKEN0KFV1LmdldCgpKSxmdW5jdGlvbih0KXtyZXR1cm4tMTxlLmluZGV4T2YodCk/dnQuc29tZShVdS5nZXQoKVt0XSk6dnQubm9uZSgpfSl9KS5nZXRPcihQdS5OT1JNQUwpKXtjYXNlIFB1Lk5PUk1BTDpyZXR1cm4gbihXdSgpKTtjYXNlIFB1LkxPR0dJTkc6dmFyIGE9KG89ZSxyPXQsaT1bXSx1PShuZXcgRGF0ZSkuZ2V0VGltZSgpLHtsb2dFdmVudEN1dDpmdW5jdGlvbih0LGUsbil7aS5wdXNoKHtvdXRjb21lOlwiY3V0XCIsdGFyZ2V0OmUscHVycG9zZTpufSl9LGxvZ0V2ZW50U3RvcHBlZDpmdW5jdGlvbih0LGUsbil7aS5wdXNoKHtvdXRjb21lOlwic3RvcHBlZFwiLHRhcmdldDplLHB1cnBvc2U6bn0pfSxsb2dOb1BhcmVudDpmdW5jdGlvbih0LGUsbil7aS5wdXNoKHtvdXRjb21lOlwibm8tcGFyZW50XCIsdGFyZ2V0OmUscHVycG9zZTpufSl9LGxvZ0V2ZW50Tm9IYW5kbGVyczpmdW5jdGlvbih0LGUpe2kucHVzaCh7b3V0Y29tZTpcIm5vLWhhbmRsZXJzLWxlZnRcIix0YXJnZXQ6ZX0pfSxsb2dFdmVudFJlc3BvbnNlOmZ1bmN0aW9uKHQsZSxuKXtpLnB1c2goe291dGNvbWU6XCJyZXNwb25zZVwiLHB1cnBvc2U6bix0YXJnZXQ6ZX0pfSx3cml0ZTpmdW5jdGlvbigpe3ZhciB0PShuZXcgRGF0ZSkuZ2V0VGltZSgpO3d0KFtcIm1vdXNlbW92ZVwiLFwibW91c2VvdmVyXCIsXCJtb3VzZW91dFwiLExpKCldLG8pfHxjb25zb2xlLmxvZyhvLHtldmVudDpvLHRpbWU6dC11LHRhcmdldDpyLmRvbSxzZXF1ZW5jZTpCKGksZnVuY3Rpb24odCl7cmV0dXJuIHd0KFtcImN1dFwiLFwic3RvcHBlZFwiLFwicmVzcG9uc2VcIl0sdC5vdXRjb21lKT9cIntcIit0LnB1cnBvc2UrXCJ9IFwiK3Qub3V0Y29tZStcIiBhdCAoXCIrRnIodC50YXJnZXQpK1wiKVwiOnQub3V0Y29tZX0pfSl9fSksYz1uKGEpO3JldHVybiBhLndyaXRlKCksYztjYXNlIFB1LlNUT1A6cmV0dXJuITB9fShWdT1QdT1QdXx8e30pW1Z1LlNUT1A9MF09XCJTVE9QXCIsVnVbVnUuTk9STUFMPTFdPVwiTk9STUFMXCIsVnVbVnUuTE9HR0lORz0yXT1cIkxPR0dJTkdcIjt2YXIgVXU9UG8oe30pLGp1PVtcImFsbG95L2RhdGEvRmllbGRzXCIsXCJhbGxveS9kZWJ1Z2dpbmcvRGVidWdnaW5nXCJdLFd1PXJ0KHtsb2dFdmVudEN1dDpzdCxsb2dFdmVudFN0b3BwZWQ6c3QsbG9nTm9QYXJlbnQ6c3QsbG9nRXZlbnROb0hhbmRsZXJzOnN0LGxvZ0V2ZW50UmVzcG9uc2U6c3Qsd3JpdGU6c3R9KSxHdT1ydChbbW8oXCJtZW51XCIpLG1vKFwic2VsZWN0ZWRNZW51XCIpXSksWHU9cnQoW21vKFwiaXRlbVwiKSxtbyhcInNlbGVjdGVkSXRlbVwiKV0pO2Z1bmN0aW9uIFl1KCl7cmV0dXJuIGJvKFwibWFya2Vyc1wiLFttbyhcImJhY2tncm91bmRNZW51XCIpXS5jb25jYXQoR3UoKSkuY29uY2F0KFh1KCkpKX1mdW5jdGlvbiBxdSh0KXtyZXR1cm4gYm8oXCJtYXJrZXJzXCIsQih0LG1vKSl9ZnVuY3Rpb24gS3UodCxlLG4pe3JldHVybiB2b2lkIDAhPT0obz1uZXcgRXJyb3IpLnN0YWNrJiZOKG8uc3RhY2suc3BsaXQoXCJcXG5cIiksZnVuY3Rpb24oZSl7cmV0dXJuIDA8ZS5pbmRleE9mKFwiYWxsb3lcIikmJiFkKGp1LGZ1bmN0aW9uKHQpe3JldHVybi0xPGUuaW5kZXhPZih0KX0pfSkuZ2V0T3IoTHUpLGFyKGUsZSxuLGlvKGZ1bmN0aW9uKG4pe3JldHVybiBObi52YWx1ZShmdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPTA7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl0W2VdPWFyZ3VtZW50c1tlXTtyZXR1cm4gbi5hcHBseSh2b2lkIDAsdCl9KX0pKTt2YXIgb31mdW5jdGlvbiBKdSh0KXtyZXR1cm4gS3UoMCx0LEduKHN0KSl9ZnVuY3Rpb24gJHUodCl7cmV0dXJuIEt1KDAsdCxHbih2dC5ub25lKSl9ZnVuY3Rpb24gUXUodCl7cmV0dXJuIEt1KDAsdCxqbigpKX1mdW5jdGlvbiBadSh0KXtyZXR1cm4gS3UoMCx0LGpuKCkpfWZ1bmN0aW9uIHRhKHQsZSl7cmV0dXJuIGNyKHQscnQoZSkpfWZ1bmN0aW9uIGVhKHQpe3JldHVybiBjcih0LGgpfWZ1bmN0aW9uIG5hKHQsZSxuLG8scixpLHUsYSl7cmV0dXJue3g6dCx5OmUsYnViYmxlOm4sZGlyZWN0aW9uOm8scGxhY2VtZW50OnIscmVzdHJpY3Rpb246aSxsYWJlbDp1K1wiLVwiK3IsYWx3YXlzRml0OmE9dm9pZCAwIT09YSYmYX19ZnVuY3Rpb24gb2EodCxlLG4sbyl7dmFyIHI9dCtlO3JldHVybiBvPHI/bjpyPG4/bzpyfWZ1bmN0aW9uIHJhKG4sZSl7cmV0dXJuIGooW1wibGVmdFwiLFwicmlnaHRcIixcInRvcFwiLFwiYm90dG9tXCJdLGZ1bmN0aW9uKHQpe3JldHVybiB0dChlLHQpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCl7c3dpdGNoKGUpe2Nhc2UgMTpyZXR1cm4gdC54O2Nhc2UgMDpyZXR1cm4gdC54K3Qud2lkdGg7Y2FzZSAyOnJldHVybiB0Lnk7Y2FzZSAzOnJldHVybiB0LnkrdC5oZWlnaHR9fShuKX0pfSl9ZnVuY3Rpb24gaWEodCxlKXtyZXR1cm4gdC54K3Qud2lkdGgvMi1lLndpZHRoLzJ9ZnVuY3Rpb24gdWEodCxlKXtyZXR1cm4gdC54K3Qud2lkdGgtZS53aWR0aH1mdW5jdGlvbiBhYSh0LGUpe3JldHVybiB0LnktZS5oZWlnaHR9ZnVuY3Rpb24gY2EodCl7cmV0dXJuIHQueSt0LmhlaWdodH1mdW5jdGlvbiBzYSh0LGUpe3JldHVybiB0LnkrdC5oZWlnaHQvMi1lLmhlaWdodC8yfWZ1bmN0aW9uIGxhKHQsZSxuKXtyZXR1cm4gbmEodC54K3Qud2lkdGgsc2EodCxlKSxuLmVhc3QoKSxVYSgpLFwiZWFzdFwiLHJhKHQse2xlZnQ6MH0pLEdhKX1mdW5jdGlvbiBmYSh0LGUsbil7cmV0dXJuIG5hKHQueC1lLndpZHRoLHNhKHQsZSksbi53ZXN0KCksamEoKSxcIndlc3RcIixyYSh0LHtyaWdodDoxfSksR2EpfWZ1bmN0aW9uIGRhKCl7cmV0dXJuW1hhLFlhLHFhLEthLCRhLEphLGxhLGZhXX1mdW5jdGlvbiBtYSgpe3JldHVybltZYSxYYSxLYSxxYSwkYSxKYSxsYSxmYV19ZnVuY3Rpb24gZ2EoKXtyZXR1cm5bcWEsS2EsWGEsWWEsSmEsJGFdfWZ1bmN0aW9uIHBhKCl7cmV0dXJuW0thLHFhLFlhLFhhLEphLCRhXX1mdW5jdGlvbiBoYSgpe3JldHVybltYYSxZYSxxYSxLYSwkYSxKYV19ZnVuY3Rpb24gdmEoKXtyZXR1cm5bWWEsWGEsS2EscWEsJGEsSmFdfWZ1bmN0aW9uIGJhKG4sbyxyKXtyZXR1cm4gaXUoZnVuY3Rpb24odCxlKXtyKHQsbixvKX0pfWZ1bmN0aW9uIHlhKHQpe3JldHVybntrZXk6dCx2YWx1ZTp2b2lkIDB9fWZ1bmN0aW9uIHhhKHQpe3ZhciBlLG4sbyxyLGksdSxhLGMscz1zbyhcIkNyZWF0aW5nIGJlaGF2aW91cjogXCIrdC5uYW1lLG5jLHQpO3JldHVybiBlPXMuZmllbGRzLG49cy5uYW1lLG89cy5hY3RpdmUscj1zLmFwaXMsaT1zLmV4dHJhLHU9cy5zdGF0ZSxhPXRvKGUpLGM9VG8obixbU28oXCJjb25maWdcIix0byhlKSldKSx0YyhhLGMsbixvLHIsaSx1KX1mdW5jdGlvbiB3YSh0KXt2YXIgZSxuPXNvKFwiQ3JlYXRpbmcgYmVoYXZpb3VyOiBcIit0Lm5hbWUsb2MsdCksbz1sbyhuLmJyYW5jaEtleSxuLmJyYW5jaGVzKSxyPW4ubmFtZSxpPW4uYWN0aXZlLHU9bi5hcGlzLGE9bi5leHRyYSxjPW4uc3RhdGUscz1UbyhyLFtTbyhcImNvbmZpZ1wiLGU9byldKTtyZXR1cm4gdGMoZSxzLHIsaSx1LGEsYyl9ZnVuY3Rpb24gU2EoKXtyZXR1cm4gTXQuZnJvbURvbShkb2N1bWVudCl9ZnVuY3Rpb24ga2EodCl7cmV0dXJuIHQuZG9tLmZvY3VzKCl9ZnVuY3Rpb24gQ2EodCl7dmFyIGU9Z24odCkuZG9tO3JldHVybiB0LmRvbT09PWUuYWN0aXZlRWxlbWVudH1mdW5jdGlvbiBPYSh0KXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9U2EoKSksdnQuZnJvbSh0LmRvbS5hY3RpdmVFbGVtZW50KS5tYXAoTXQuZnJvbURvbSl9ZnVuY3Rpb24gX2EoZSl7cmV0dXJuIE9hKGduKGUpKS5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIGUuZG9tLmNvbnRhaW5zKHQuZG9tKX0pfWZ1bmN0aW9uIFRhKHQsbil7dmFyIG89Z24obiksZT1PYShvKS5iaW5kKGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQodCl7cmV0dXJuIHp0KGUsdCl9dmFyIHIsaTtyZXR1cm4gdChuKT92dC5zb21lKG4pOihyPXQsKGk9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTA7ZTx0LmNoaWxkTm9kZXMubGVuZ3RoO2UrKyl7dmFyIG49TXQuZnJvbURvbSh0LmNoaWxkTm9kZXNbZV0pO2lmKHIobikpcmV0dXJuIHZ0LnNvbWUobik7dmFyIG89aSh0LmNoaWxkTm9kZXNbZV0pO2lmKG8uaXNTb21lKCkpcmV0dXJuIG99cmV0dXJuIHZ0Lm5vbmUoKX0pKG4uZG9tKSl9KSxyPXQobik7cmV0dXJuIGUuZWFjaChmdW5jdGlvbihlKXtPYShvKS5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIHp0KHQsZSl9KS5mb2xkKGZ1bmN0aW9uKCl7a2EoZSl9LHN0KX0pLHJ9ZnVuY3Rpb24gRWEodCxlLG4sbyxyKXtmdW5jdGlvbiBpKHQpe3JldHVybiB0K1wicHhcIn1yZXR1cm57cG9zaXRpb246dCxsZWZ0OmUubWFwKGkpLHRvcDpuLm1hcChpKSxyaWdodDpvLm1hcChpKSxib3R0b206ci5tYXAoaSl9fWZ1bmN0aW9uIERhKHQsZSl7dmFyIG47bWUodCxsdChsdCh7fSxuPWUpLHtwb3NpdGlvbjp2dC5zb21lKG4ucG9zaXRpb24pfSkpfWZ1bmN0aW9uIEFhKHQsZSxuLG8scixpKXt2YXIgdT1lLnJlY3QsYT11LngtbixjPXUueS1vLHM9ci0oYSt1LndpZHRoKSxsPWktKGMrdS5oZWlnaHQpLGY9dnQuc29tZShhKSxkPXZ0LnNvbWUoYyksbT12dC5zb21lKHMpLGc9dnQuc29tZShsKSxwPXZ0Lm5vbmUoKTtyZXR1cm4gZS5kaXJlY3Rpb24uZm9sZChmdW5jdGlvbigpe3JldHVybiBFYSh0LGYsZCxwLHApfSxmdW5jdGlvbigpe3JldHVybiBFYSh0LHAsZCxtLHApfSxmdW5jdGlvbigpe3JldHVybiBFYSh0LGYscCxwLGcpfSxmdW5jdGlvbigpe3JldHVybiBFYSh0LHAscCxtLGcpfSxmdW5jdGlvbigpe3JldHVybiBFYSh0LGYsZCxwLHApfSxmdW5jdGlvbigpe3JldHVybiBFYSh0LGYscCxwLGcpfSxmdW5jdGlvbigpe3JldHVybiBFYSh0LGYsZCxwLHApfSxmdW5jdGlvbigpe3JldHVybiBFYSh0LHAsZCxtLHApfSl9ZnVuY3Rpb24gQmEodCxyKXtyZXR1cm4gdC5mb2xkKGZ1bmN0aW9uKCl7dmFyIHQ9ci5yZWN0O3JldHVybiBFYShcImFic29sdXRlXCIsdnQuc29tZSh0LngpLHZ0LnNvbWUodC55KSx2dC5ub25lKCksdnQubm9uZSgpKX0sZnVuY3Rpb24odCxlLG4sbyl7cmV0dXJuIEFhKFwiYWJzb2x1dGVcIixyLHQsZSxuLG8pfSxmdW5jdGlvbih0LGUsbixvKXtyZXR1cm4gQWEoXCJmaXhlZFwiLHIsdCxlLG4sbyl9KX1mdW5jdGlvbiBNYSh0LGUpe3ZhciBuPUMoVmUsZSksbz10LmZvbGQobixuLGZ1bmN0aW9uKCl7dmFyIHQ9SWUoKTtyZXR1cm4gVmUoZSkudHJhbnNsYXRlKC10LmxlZnQsLXQudG9wKX0pLHI9T2UoZSksaT13ZShlKTtyZXR1cm4gQm4oby5sZWZ0LG8udG9wLHIsaSl9cnQoJG8oWHUoKS5jb25jYXQoR3UoKSkpKTt2YXIgRmE9cnQoJG8oWHUoKSkpLElhPXJ0KGJvKFwiaW5pdFNpemVcIixbbW8oXCJudW1Db2x1bW5zXCIpLG1vKFwibnVtUm93c1wiKV0pKSxSYT1Wbyhbe3NvdXRoZWFzdDpbXX0se3NvdXRod2VzdDpbXX0se25vcnRoZWFzdDpbXX0se25vcnRod2VzdDpbXX0se3NvdXRoOltdfSx7bm9ydGg6W119LHtlYXN0OltdfSx7d2VzdDpbXX1dKSxOYT1SYS5zb3V0aGVhc3QsUGE9UmEuc291dGh3ZXN0LFZhPVJhLm5vcnRoZWFzdCxIYT1SYS5ub3J0aHdlc3QsTGE9UmEuc291dGgsemE9UmEubm9ydGgsVWE9UmEuZWFzdCxqYT1SYS53ZXN0LFdhPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgodCxlKSxuKX0sR2E9XCJsYXlvdXRcIixYYT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIG5hKHQueCxjYSh0KSxuLnNvdXRoZWFzdCgpLE5hKCksXCJzb3V0aGVhc3RcIixyYSh0LHtsZWZ0OjEsdG9wOjN9KSxHYSl9LFlhPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbmEodWEodCxlKSxjYSh0KSxuLnNvdXRod2VzdCgpLFBhKCksXCJzb3V0aHdlc3RcIixyYSh0LHtyaWdodDowLHRvcDozfSksR2EpfSxxYT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIG5hKHQueCxhYSh0LGUpLG4ubm9ydGhlYXN0KCksVmEoKSxcIm5vcnRoZWFzdFwiLHJhKHQse2xlZnQ6MSxib3R0b206Mn0pLEdhKX0sS2E9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBuYSh1YSh0LGUpLGFhKHQsZSksbi5ub3J0aHdlc3QoKSxIYSgpLFwibm9ydGh3ZXN0XCIscmEodCx7cmlnaHQ6MCxib3R0b206Mn0pLEdhKX0sSmE9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBuYShpYSh0LGUpLGFhKHQsZSksbi5ub3J0aCgpLHphKCksXCJub3J0aFwiLHJhKHQse2JvdHRvbToyfSksR2EpfSwkYT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIG5hKGlhKHQsZSksY2EodCksbi5zb3V0aCgpLExhKCksXCJzb3V0aFwiLHJhKHQse3RvcDozfSksR2EpfSxRYT1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxldmVudHM6ZnVuY3Rpb24oYSl7cmV0dXJuIG51KFtDcihGaSgpLGZ1bmN0aW9uKHIsdCl7dmFyIGUsaT1hLmNoYW5uZWxzLG49Q3QoaSksdT10LG89KGU9dSkudW5pdmVyc2FsP246RihuLGZ1bmN0aW9uKHQpe3JldHVybiB3dChlLmNoYW5uZWxzLHQpfSk7U3QobyxmdW5jdGlvbih0KXt2YXIgZT1pW3RdLG49ZS5zY2hlbWEsbz1zbyhcImNoYW5uZWxbXCIrdCtcIl0gZGF0YVxcblJlY2VpdmVyOiBcIitGcihyLmVsZW1lbnQpLG4sdS5kYXRhKTtlLm9uUmVjZWl2ZShyLG8pfSl9KV0pfX0pLFphPVtnbyhcImNoYW5uZWxzXCIsdW8oTm4udmFsdWUsdG8oW1F1KFwib25SZWNlaXZlXCIpLEVvKFwic2NoZW1hXCIsWm8oKSldKSkpXSx0Yz1mdW5jdGlvbihuLHQsZixlLG8scixpKXtmdW5jdGlvbiB1KHQpe3JldHVybiBldCh0LGYpP3RbZl0oKTp2dC5ub25lKCl9dmFyIGE9ZHQobyxmdW5jdGlvbih0LGUpe3JldHVybiByPWYsbj1mdW5jdGlvbihuKXtmb3IodmFyIHQ9W10sZT0xO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlLTFdPWFyZ3VtZW50c1tlXTt2YXIgbz1bbl0uY29uY2F0KHQpO3JldHVybiBuLmNvbmZpZyh7bmFtZTpydChyKX0pLmZvbGQoZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJXZSBjb3VsZCBub3QgZmluZCBhbnkgYmVoYXZpb3VyIGNvbmZpZ3VyYXRpb24gZm9yOiBcIityK1wiLiBVc2luZyBBUEk6IFwiK3UpfSxmdW5jdGlvbih0KXt2YXIgZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChvLDEpO3JldHVybiBpLmFwcGx5KHZvaWQgMCxbbix0LmNvbmZpZyx0LnN0YXRlXS5jb25jYXQoZSkpfSl9LG89dT1lLGE9KGk9dCkudG9TdHJpbmcoKSxjPWEuaW5kZXhPZihcIilcIikrMSxzPWEuaW5kZXhPZihcIihcIiksbD1hLnN1YnN0cmluZyhzKzEsYy0xKS5zcGxpdCgvLFxccyovKSxuLnRvRnVuY3Rpb25Bbm5vdGF0aW9uPWZ1bmN0aW9uKCl7cmV0dXJue25hbWU6byxwYXJhbWV0ZXJzOmJ1KGwuc2xpY2UoMCwxKS5jb25jYXQobC5zbGljZSgzKSkpfX0sbjt2YXIgcixpLHUsbixvLGEsYyxzLGx9KSxjPWR0KHIsUHIpLHM9bHQobHQobHQoe30sYyksYSkse3Jldm9rZTpDKHlhLGYpLGNvbmZpZzpmdW5jdGlvbih0KXt2YXIgZT1zbyhmK1wiLWNvbmZpZ1wiLG4sdCk7cmV0dXJue2tleTpmLHZhbHVlOntjb25maWc6ZSxtZTpzLGNvbmZpZ0FzUmF3OlJ0KGZ1bmN0aW9uKCl7cmV0dXJuIHNvKGYrXCItY29uZmlnXCIsbix0KX0pLGluaXRpYWxDb25maWc6dCxzdGF0ZTppfX19LHNjaGVtYTpydCh0KSxleGhpYml0OmZ1bmN0aW9uKHQsbil7cmV0dXJuIEV0KHUodCksdHQoZSxcImV4aGliaXRcIiksZnVuY3Rpb24odCxlKXtyZXR1cm4gZShuLHQuY29uZmlnLHQuc3RhdGUpfSkuZ2V0T3JUaHVuayhmdW5jdGlvbigpe3JldHVybiB6cih7fSl9KX0sbmFtZTpydChmKSxoYW5kbGVyczpmdW5jdGlvbih0KXtyZXR1cm4gdSh0KS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHR0KGUsXCJldmVudHNcIikuZ2V0T3IoZnVuY3Rpb24oKXtyZXR1cm57fX0pKHQuY29uZmlnLHQuc3RhdGUpfSkuZ2V0T3Ioe30pfX0pO3JldHVybiBzfSxlYz1scixuYz10byhbbW8oXCJmaWVsZHNcIiksbW8oXCJuYW1lXCIpLEVvKFwiYWN0aXZlXCIse30pLEVvKFwiYXBpc1wiLHt9KSxFbyhcInN0YXRlXCIseHUpLEVvKFwiZXh0cmFcIix7fSldKSxvYz10byhbbW8oXCJicmFuY2hLZXlcIiksbW8oXCJicmFuY2hlc1wiKSxtbyhcIm5hbWVcIiksRW8oXCJhY3RpdmVcIix7fSksRW8oXCJhcGlzXCIse30pLEVvKFwic3RhdGVcIix4dSksRW8oXCJleHRyYVwiLHt9KV0pLHJjPXJ0KHZvaWQgMCksaWM9eGEoe2ZpZWxkczpaYSxuYW1lOlwicmVjZWl2aW5nXCIsYWN0aXZlOlFhfSksdWM9T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsZXhoaWJpdDpmdW5jdGlvbih0LGUpe3JldHVybiB6cih7Y2xhc3NlczpbXSxzdHlsZXM6ZS51c2VGaXhlZCgpP3t9Ontwb3NpdGlvbjpcInJlbGF0aXZlXCJ9fSl9fSksYWM9Vm8oW3tub25lOltdfSx7cmVsYXRpdmU6W1wieFwiLFwieVwiLFwid2lkdGhcIixcImhlaWdodFwiXX0se2ZpeGVkOltcInhcIixcInlcIixcIndpZHRoXCIsXCJoZWlnaHRcIl19XSksY2M9ZnVuY3Rpb24odCxlLG4pe3ZhciBvPWtuKGUsbik7cmV0dXJuIHQuZm9sZChydChvKSxydChvKSxmdW5jdGlvbigpe3ZhciB0PUllKCk7cmV0dXJuIG8udHJhbnNsYXRlKC10LmxlZnQsLXQudG9wKX0pfTtmdW5jdGlvbiBzYyh0KXtyZXR1cm4gdWUodCxEYyl9ZnVuY3Rpb24gbGModCxlLG4sbyl7dmFyIHIsaSx1LGEsYyxzLGwsZixkLG0sZyxwLGgsdixiLHkseCx3LFMsayxDLE8sXyxULEUsRCxBLEIsTSxGLEksUixOLFAsVixILEwseixVLGo9dC5idWJibGUsVz1qLm9mZnNldCxHPShOPW8sUD10LnJlc3RyaWN0aW9uLFY9VyxIPW90KFwibGVmdFwiLE4ueCksTD1vdChcInRvcFwiLE4ueSksej1vdChcInJpZ2h0XCIsTi5yaWdodCksVT1vdChcImJvdHRvbVwiLE4uYm90dG9tKSxCbihILEwsei1ILFUtTCkpLFg9dC54K1cubGVmdCxZPXQueStXLnRvcCxxPUJuKFgsWSxlLG4pLEs9KHI9Ry54LGk9Ry55LHU9Ry5yaWdodCxhPUcuYm90dG9tLGM9cS54LHM9cS55LGw9cS5yaWdodCxmPXEuYm90dG9tLGQ9cS53aWR0aCxtPXEuaGVpZ2h0LHtvcmlnaW5JbkJvdW5kczpyPD1jJiZjPD11JiZpPD1zJiZzPD1hLHNpemVJbkJvdW5kczpsPD11JiZyPD1sJiZmPD1hJiZpPD1mLHZpc2libGVXOk1hdGgubWluKGQscjw9Yz91LWM6bC1yKSx2aXNpYmxlSDpNYXRoLm1pbihtLGk8PXM/YS1zOmYtaSl9KSxKPUsudmlzaWJsZVcsJD1LLnZpc2libGVILFE9Sy5vcmlnaW5JbkJvdW5kcyYmSy5zaXplSW5Cb3VuZHMsWj1RP3E6KGc9Ry54LHA9Ry55LGg9Ry5yaWdodCx2PUcuYm90dG9tLGI9cS54LHk9cS55LHg9cS53aWR0aCx3PXEuaGVpZ2h0LFM9TWF0aC5tYXgoZyxoLXgpLGs9TWF0aC5tYXgocCx2LXcpLEM9V2EoYixnLFMpLE89V2EoeSxwLGspLF89TWF0aC5taW4oQyt4LGgpLUMsVD1NYXRoLm1pbihPK3csdiktTyxCbihDLE8sXyxUKSksdHQ9MDxaLndpZHRoJiYwPFouaGVpZ2h0LGV0PShFPXQuZGlyZWN0aW9uLEI9cnQoKEQ9WikuYm90dG9tLShBPW8pLnkpLE09cnQoQS5ib3R0b20tRC55KSxGPUUuZm9sZChNLE0sQixCLE0sQixNLE0pLEk9cnQoRC5yaWdodC1BLngpLFI9cnQoQS5yaWdodC1ELngpLHttYXhXaWR0aDpFLmZvbGQoUixJLFIsSSxSLFIsUixJKSxtYXhIZWlnaHQ6Rn0pLG50PXtyZWN0OlosbWF4SGVpZ2h0OmV0Lm1heEhlaWdodCxtYXhXaWR0aDpldC5tYXhXaWR0aCxkaXJlY3Rpb246dC5kaXJlY3Rpb24scGxhY2VtZW50OnQucGxhY2VtZW50LGNsYXNzZXM6e29uOmouY2xhc3Nlc09uLG9mZjpqLmNsYXNzZXNPZmZ9LGxheW91dDp0LmxhYmVsLHRlc3RZOll9O2Z1bmN0aW9uIG90KHIsaSl7cmV0dXJuIFBbcl0ubWFwKGZ1bmN0aW9uKHQpe3ZhciBlPVwidG9wXCI9PT1yfHxcImJvdHRvbVwiPT09cixuPWU/Vi50b3A6Vi5sZWZ0LG89KFwibGVmdFwiPT09cnx8XCJ0b3BcIj09PXI/TWF0aC5tYXg6TWF0aC5taW4pKHQsaSkrbjtyZXR1cm4gZT9XYShvLE4ueSxOLmJvdHRvbSk6V2EobyxOLngsTi5yaWdodCl9KS5nZXRPcihpKX1yZXR1cm4gUXx8dC5hbHdheXNGaXQ/QWMuZml0KG50KTpBYy5ub2ZpdChudCxKLCQsdHQpfWZ1bmN0aW9uIGZjKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gbi5nZXQoKS5lYWNoKHQpfXZhciBuPVBvKHZ0Lm5vbmUoKSk7cmV0dXJue2NsZWFyOmZ1bmN0aW9uKCl7ZSgpLG4uc2V0KHZ0Lm5vbmUoKSl9LGlzU2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG4uZ2V0KCkuaXNTb21lKCl9LGdldDpmdW5jdGlvbigpe3JldHVybiBuLmdldCgpfSxzZXQ6ZnVuY3Rpb24odCl7ZSgpLG4uc2V0KHZ0LnNvbWUodCkpfX19ZnVuY3Rpb24gZGMoKXtyZXR1cm4gZmMoZnVuY3Rpb24odCl7cmV0dXJuIHQuZGVzdHJveSgpfSl9ZnVuY3Rpb24gbWMoKXtyZXR1cm4gZmMoZnVuY3Rpb24odCl7cmV0dXJuIHQudW5iaW5kKCl9KX1mdW5jdGlvbiBnYygpe3ZhciBlPWZjKHN0KTtyZXR1cm4gbHQobHQoe30sZSkse29uOmZ1bmN0aW9uKHQpe3JldHVybiBlLmdldCgpLmVhY2godCl9fSl9ZnVuY3Rpb24gcGModCxlLG4pe3JldHVybiBUZSh0LGUsQmMsbiwhMSl9ZnVuY3Rpb24gaGModCxlLG4pe3JldHVybiBUZSh0LGUsQmMsbiwhMCl9ZnVuY3Rpb24gdmMobyxuKXtmdW5jdGlvbiByKHQpe3ZhciBlLG49bnVsbCE9PShlPXQucmF3LnBzZXVkb0VsZW1lbnQpJiZ2b2lkIDAhPT1lP2U6XCJcIjtyZXR1cm4genQodC50YXJnZXQsbykmJiFhdChuKSYmd3QoRmMsdC5yYXcucHJvcGVydHlOYW1lKX1mdW5jdGlvbiB0KHQpe3ZhciBlOyhnKHQpfHxyKHQpKSYmKGEuY2xlYXIoKSxjLmNsZWFyKCksIWcoZT1udWxsPT10P3ZvaWQgMDp0LnJhdy50eXBlKSYmZSE9PV9pKCl8fChjbGVhclRpbWVvdXQoaSksY2UobyxJYyksJHIobyxuLmNsYXNzZXMpKSl9ZnVuY3Rpb24gZSgpe2Euc2V0KHBjKG8sX2koKSx0KSksYy5zZXQocGMobyxPaSgpLHQpKX12YXIgaSx1LGE9bWMoKSxjPW1jKCk7XCJvbnRyYW5zaXRpb25zdGFydFwiaW4gby5kb20/dT1wYyhvLFRpKCksZnVuY3Rpb24odCl7cih0KSYmKHUudW5iaW5kKCksZSgpKX0pOmUoKTt2YXIgcyxsLGY9KHM9byxsPWQoXCJ0cmFuc2l0aW9uLWRlbGF5XCIpLFIoZChcInRyYW5zaXRpb24tZHVyYXRpb25cIiksZnVuY3Rpb24odCxlLG4pe3ZhciBvPW0obFtuXSkrbShlKTtyZXR1cm4gTWF0aC5tYXgodCxvKX0sMCkpO2Z1bmN0aW9uIGQodCl7dmFyIGU9Z2Uocyx0KTtyZXR1cm4gRih5KGUpP2Uuc3BsaXQoL1xccyosXFxzKi8pOltdLGF0KX1mdW5jdGlvbiBtKHQpe2lmKHkodCkmJi9eW1xcZC5dKy8udGVzdCh0KSl7dmFyIGU9cGFyc2VGbG9hdCh0KTtyZXR1cm4gQXQodCxcIm1zXCIpP2U6MWUzKmV9cmV0dXJuIDB9cmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uKCl7aT1zZXRUaW1lb3V0KHQsZisxNyksb2UobyxJYyxpKX0pfWZ1bmN0aW9uIGJjKHQsZSxuLG8scixpKXt2YXIgdSxhLGMscyxsLGYsZCxtLGcscD0odT1vLGE9cixpLmV4aXN0cyhmdW5jdGlvbih0KXt2YXIgZT11Lm1vZGU7cmV0dXJuXCJhbGxcIj09PWV8fHRbZV0hPT1hW2VdfSkpO2Z1bmN0aW9uIGgodCl7cmV0dXJuIHBhcnNlRmxvYXQodCkudG9GaXhlZCgzKX1wfHwoZz10LEwoby5jbGFzc2VzLGZ1bmN0aW9uKHQpe3JldHVybiBLcihnLHQpfSkpPyhmZSh0LFwicG9zaXRpb25cIixuLnBvc2l0aW9uKSxjPU1hKGUsdCkscz1CYShlLGx0KGx0KHt9LHIpLHtyZWN0OmN9KSksbD1qKEZjLGZ1bmN0aW9uKHQpe3JldHVybiBzW3RdfSksbT1uLFEobCxmdW5jdGlvbih0LGUpe3ZhciBuLG8scixpPW1bZV0ubWFwKGgpLHU9dC5tYXAoaCk7cmV0dXJuIUV0KG49aSxvPXUscj12b2lkIDA9PT1yP3Y6cikuZ2V0T3Iobi5pc05vbmUoKSYmby5pc05vbmUoKSl9KS5pc1NvbWUoKSYmKG1lKHQsbCkscCYmKEpyKGY9dCwoZD1vKS5jbGFzc2VzKSx1ZShmLEljKS5lYWNoKGZ1bmN0aW9uKHQpe2NsZWFyVGltZW91dChwYXJzZUludCh0LDEwKSksY2UoZixJYyl9KSx2YyhmLGQpKSxiZSh0KSkpOiRyKHQsby5jbGFzc2VzKX1mdW5jdGlvbiB5Yyh0LGUsbixvKXt2ZShlLFwibWF4LWhlaWdodFwiKSx2ZShlLFwibWF4LXdpZHRoXCIpO3ZhciByLHMsaSxsLGYsZCxtLGcscCx1PXt3aWR0aDpPZShyPWUpLGhlaWdodDp3ZShyKX07cmV0dXJuIHM9ZSxpPW8ucHJlZmVyZW5jZSxsPXQsZj11LGQ9bixtPW8uYm91bmRzLGc9Zi53aWR0aCxwPWYuaGVpZ2h0LFIoaSxmdW5jdGlvbih0LGUpe3ZhciBuPUMoYSxlKTtyZXR1cm4gdC5mb2xkKHJ0KHQpLG4pfSxBYy5ub2ZpdCh7cmVjdDpsLG1heEhlaWdodDpmLmhlaWdodCxtYXhXaWR0aDpmLndpZHRoLGRpcmVjdGlvbjpOYSgpLHBsYWNlbWVudDpcInNvdXRoZWFzdFwiLGNsYXNzZXM6e29uOltdLG9mZjpbXX0sbGF5b3V0Olwibm9uZVwiLHRlc3RZOmwueX0sLTEsLTEsITEpKS5mb2xkKGgsaCk7ZnVuY3Rpb24gYSh0LHIsaSx1LGEpe3ZhciBjPWxjKHQobCxmLGQscyxtKSxnLHAsbSk7cmV0dXJuIGMuZm9sZChydChjKSxmdW5jdGlvbih0LGUsbixvKXtyZXR1cm4oYT09PW8/dTxufHxpPGU6IWEmJm8pP2M6QWMubm9maXQocixpLHUsYSl9KX19ZnVuY3Rpb24geGModCxlKXt2YXIgbj10LG89TWF0aC5mbG9vcihlKTtmZShuLFwibWF4LWhlaWdodFwiLHduLm1heChuLG8sW1wibWFyZ2luLXRvcFwiLFwiYm9yZGVyLXRvcC13aWR0aFwiLFwicGFkZGluZy10b3BcIixcInBhZGRpbmctYm90dG9tXCIsXCJib3JkZXItYm90dG9tLXdpZHRoXCIsXCJtYXJnaW4tYm90dG9tXCJdKStcInB4XCIpfWZ1bmN0aW9uIHdjKHQsZSxuKXtyZXR1cm4gdm9pZCAwPT09dFtlXT9uOnRbZV19ZnVuY3Rpb24gU2ModCxlLG4sbyl7ZnVuY3Rpb24gcih0KXtyZXR1cm4gdHQobix0KS5nZXRPcihbXSl9ZnVuY3Rpb24gaSh0LGUsbil7dmFyIG89VShWYyxuKTtyZXR1cm57b2Zmc2V0OmtuKHQsZSksY2xhc3Nlc09uOkgobixyKSxjbGFzc2VzT2ZmOkgobyxyKX19dmFyIHU9dCoobz12b2lkIDA9PT1vPzE6byksYT1lKm87cmV0dXJue3NvdXRoZWFzdDpmdW5jdGlvbigpe3JldHVybiBpKC10LGUsW1widG9wXCIsXCJhbGlnbkxlZnRcIl0pfSxzb3V0aHdlc3Q6ZnVuY3Rpb24oKXtyZXR1cm4gaSh0LGUsW1widG9wXCIsXCJhbGlnblJpZ2h0XCJdKX0sc291dGg6ZnVuY3Rpb24oKXtyZXR1cm4gaSgtdC8yLGUsW1widG9wXCIsXCJhbGlnbkNlbnRyZVwiXSl9LG5vcnRoZWFzdDpmdW5jdGlvbigpe3JldHVybiBpKC10LC1lLFtcImJvdHRvbVwiLFwiYWxpZ25MZWZ0XCJdKX0sbm9ydGh3ZXN0OmZ1bmN0aW9uKCl7cmV0dXJuIGkodCwtZSxbXCJib3R0b21cIixcImFsaWduUmlnaHRcIl0pfSxub3J0aDpmdW5jdGlvbigpe3JldHVybiBpKC10LzIsLWUsW1wiYm90dG9tXCIsXCJhbGlnbkNlbnRyZVwiXSl9LGVhc3Q6ZnVuY3Rpb24oKXtyZXR1cm4gaSh0LC1lLzIsW1widmFsaWduQ2VudHJlXCIsXCJsZWZ0XCJdKX0sd2VzdDpmdW5jdGlvbigpe3JldHVybiBpKC10LC1lLzIsW1widmFsaWduQ2VudHJlXCIsXCJyaWdodFwiXSl9LGluc2V0Tm9ydGhlYXN0OmZ1bmN0aW9uKCl7cmV0dXJuIGkodSxhLFtcInRvcFwiLFwiYWxpZ25MZWZ0XCIsXCJpbnNldFwiXSl9LGluc2V0Tm9ydGh3ZXN0OmZ1bmN0aW9uKCl7cmV0dXJuIGkoLXUsYSxbXCJ0b3BcIixcImFsaWduUmlnaHRcIixcImluc2V0XCJdKX0saW5zZXROb3J0aDpmdW5jdGlvbigpe3JldHVybiBpKC11LzIsYSxbXCJ0b3BcIixcImFsaWduQ2VudHJlXCIsXCJpbnNldFwiXSl9LGluc2V0U291dGhlYXN0OmZ1bmN0aW9uKCl7cmV0dXJuIGkodSwtYSxbXCJib3R0b21cIixcImFsaWduTGVmdFwiLFwiaW5zZXRcIl0pfSxpbnNldFNvdXRod2VzdDpmdW5jdGlvbigpe3JldHVybiBpKC11LC1hLFtcImJvdHRvbVwiLFwiYWxpZ25SaWdodFwiLFwiaW5zZXRcIl0pfSxpbnNldFNvdXRoOmZ1bmN0aW9uKCl7cmV0dXJuIGkoLXUvMiwtYSxbXCJib3R0b21cIixcImFsaWduQ2VudHJlXCIsXCJpbnNldFwiXSl9LGluc2V0RWFzdDpmdW5jdGlvbigpe3JldHVybiBpKC11LC1hLzIsW1widmFsaWduQ2VudHJlXCIsXCJyaWdodFwiLFwiaW5zZXRcIl0pfSxpbnNldFdlc3Q6ZnVuY3Rpb24oKXtyZXR1cm4gaSh1LC1hLzIsW1widmFsaWduQ2VudHJlXCIsXCJsZWZ0XCIsXCJpbnNldFwiXSl9fX1mdW5jdGlvbiBrYygpe3JldHVybiBTYygwLDAse30pfWZ1bmN0aW9uIENjKGUsbil7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVyblwicnRsXCI9PT1MYyh0KT9uOmV9fWFjLm5vbmU7dmFyIE9jLF9jLFRjPWFjLnJlbGF0aXZlLEVjPWFjLmZpeGVkLERjPVwiZGF0YS1hbGxveS1wbGFjZW1lbnRcIixBYz1Wbyhbe2ZpdDpbXCJyZXBvc2l0aW9uXCJdfSx7bm9maXQ6W1wicmVwb3NpdGlvblwiLFwidmlzaWJsZVdcIixcInZpc2libGVIXCIsXCJpc1Zpc2libGVcIl19XSksQmM9RCxNYz1fZSxGYz1bXCJ0b3BcIixcImJvdHRvbVwiLFwicmlnaHRcIixcImxlZnRcIl0sSWM9XCJkYXRhLWFsbG95LXRyYW5zaXRpb24tdGltZXJcIixSYz1ydChmdW5jdGlvbih0LGUpe3hjKHQsZSksZGUodCx7XCJvdmVyZmxvdy14XCI6XCJoaWRkZW5cIixcIm92ZXJmbG93LXlcIjpcImF1dG9cIn0pfSksTmM9cnQoZnVuY3Rpb24odCxlKXt4Yyh0LGUpfSksUGM9ZnVuY3Rpb24odCxlLG4sbyl7dmFyIHIsaSx1LGEsYz15Yyh0LGUsbixvKSxzPWUsbD1jLGY9QmEoKHI9bykub3JpZ2luLGwpO3JldHVybiByLnRyYW5zaXRpb24uZWFjaChmdW5jdGlvbih0KXtiYyhzLHIub3JpZ2luLGYsdCxsLHIubGFzdFBsYWNlbWVudCl9KSxEYShzLGYpLGE9Yy5wbGFjZW1lbnQsb2UoZSxEYyxhKSwkcihpPWUsKHU9Yy5jbGFzc2VzKS5vZmYpLEpyKGksdS5vbiksKDAsby5tYXhIZWlnaHRGdW5jdGlvbikoZSxjLm1heEhlaWdodCksKDAsby5tYXhXaWR0aEZ1bmN0aW9uKShlLGMubWF4V2lkdGgpLHtsYXlvdXQ6Yy5sYXlvdXQscGxhY2VtZW50OmMucGxhY2VtZW50fX0sVmM9W1widmFsaWduQ2VudHJlXCIsXCJhbGlnbkxlZnRcIixcImFsaWduUmlnaHRcIixcImFsaWduQ2VudHJlXCIsXCJ0b3BcIixcImJvdHRvbVwiLFwibGVmdFwiLFwicmlnaHRcIixcImluc2V0XCJdLEhjPWgsTGM9ZnVuY3Rpb24odCl7cmV0dXJuXCJydGxcIj09PWdlKHQsXCJkaXJlY3Rpb25cIik/XCJydGxcIjpcImx0clwifTtmdW5jdGlvbiB6Yyh0KXtyZXR1cm4gTXUodCxmdW5jdGlvbih0KXtyZXR1cm4gR2UodCkmJmllKHQsXCJkYXRhLWFsbG95LXZlcnRpY2FsLWRpclwiKT09PU9jLkJvdHRvbVRvVG9wfSl9ZnVuY3Rpb24gVWMoKXtyZXR1cm4gVG8oXCJsYXlvdXRzXCIsW21vKFwib25MdHJcIiksbW8oXCJvblJ0bFwiKSx3byhcIm9uQm90dG9tTHRyXCIpLHdvKFwib25Cb3R0b21SdGxcIildKX1mdW5jdGlvbiBqYyhlLHQsbixvLHIsaSx1KXt2YXIgYT11Lm1hcCh6YykuZ2V0T3IoITEpLGM9dC5sYXlvdXRzLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5vbkx0cihlKX0pLHM9dC5sYXlvdXRzLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5vblJ0bChlKX0pO3JldHVybiBDYyhhP3QubGF5b3V0cy5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiB0Lm9uQm90dG9tTHRyLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdChlKX0pfSkub3IoYykuZ2V0T3Iocik6Yy5nZXRPcihuKSxhP3QubGF5b3V0cy5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiB0Lm9uQm90dG9tUnRsLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdChlKX0pfSkub3IocykuZ2V0T3IoaSk6cy5nZXRPcihvKSkoZSl9ZnVuY3Rpb24gV2ModCl7cmV0dXJuIHQuZm9sZChoLGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdC50cmFuc2xhdGUoLWUsLW4pfSl9ZnVuY3Rpb24gR2ModCl7cmV0dXJuIHQuZm9sZChoLGgpfWZ1bmN0aW9uIFhjKHQpe3JldHVybiBSKHQsZnVuY3Rpb24odCxlKXtyZXR1cm4gdC50cmFuc2xhdGUoZS5sZWZ0LGUudG9wKX0sa24oMCwwKSl9ZnVuY3Rpb24gWWModCl7cmV0dXJuIFhjKEIodCxHYykpfWZ1bmN0aW9uIHFjKHQsZSxuKXt2YXIgbyxyLGk9SWUoanQodC5lbGVtZW50KSksdT0obz10LHI9WHQobi5yb290KS5kb20sdnQuZnJvbShyLmZyYW1lRWxlbWVudCkubWFwKE10LmZyb21Eb20pLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4genQoanQodCksanQoby5lbGVtZW50KSl9KS5tYXAoa2UpLmdldE9yKGkpKTtyZXR1cm4gYXModSxpLmxlZnQsaS50b3ApfWZ1bmN0aW9uIEtjKHQsZSxuLG8pe3ZhciByPXVzKGtuKHQsZSkpO3JldHVybiB2dC5zb21lKHtwb2ludDpyLHdpZHRoOm4saGVpZ2h0Om99KX1mdW5jdGlvbiBKYyh0LGEsYyxzLGwpe3JldHVybiB0Lm1hcChmdW5jdGlvbih0KXt2YXIgZT1bYSx0LnBvaW50XSxuPXMuZm9sZChmdW5jdGlvbigpe3JldHVybiBZYyhlKX0sZnVuY3Rpb24oKXtyZXR1cm4gWWMoZSl9LGZ1bmN0aW9uKCl7cmV0dXJuIFhjKEIoZSxXYykpfSksbz17eDpuLmxlZnQseTpuLnRvcCx3aWR0aDp0LndpZHRoLGhlaWdodDp0LmhlaWdodH0scj0oYy5zaG93QWJvdmU/Z2E6aGEpKCksaT0oYy5zaG93QWJvdmU/cGE6dmEpKCksdT1qYyhsLGMscixpLHIsaSx2dC5ub25lKCkpO3JldHVybiBIYyh7YW5jaG9yQm94Om8sYnViYmxlOmMuYnViYmxlLmdldE9yKGtjKCkpLG92ZXJyaWRlczpjLm92ZXJyaWRlcyxsYXlvdXRzOnUscGxhY2VyOnZ0Lm5vbmUoKX0pfSl9ZnVuY3Rpb24gJGModCxlLG4pe3ZhciBvLHI9dC5kb2N1bWVudC5jcmVhdGVSYW5nZSgpLGk9cjtyZXR1cm4gZS5mb2xkKGZ1bmN0aW9uKHQpe2kuc2V0U3RhcnRCZWZvcmUodC5kb20pfSxmdW5jdGlvbih0LGUpe2kuc2V0U3RhcnQodC5kb20sZSl9LGZ1bmN0aW9uKHQpe2kuc2V0U3RhcnRBZnRlcih0LmRvbSl9KSxvPXIsbi5mb2xkKGZ1bmN0aW9uKHQpe28uc2V0RW5kQmVmb3JlKHQuZG9tKX0sZnVuY3Rpb24odCxlKXtvLnNldEVuZCh0LmRvbSxlKX0sZnVuY3Rpb24odCl7by5zZXRFbmRBZnRlcih0LmRvbSl9KSxyfWZ1bmN0aW9uIFFjKHQsZSxuLG8scil7dmFyIGk9dC5kb2N1bWVudC5jcmVhdGVSYW5nZSgpO3JldHVybiBpLnNldFN0YXJ0KGUuZG9tLG4pLGkuc2V0RW5kKG8uZG9tLHIpLGl9ZnVuY3Rpb24gWmModCl7cmV0dXJue2xlZnQ6dC5sZWZ0LHRvcDp0LnRvcCxyaWdodDp0LnJpZ2h0LGJvdHRvbTp0LmJvdHRvbSx3aWR0aDp0LndpZHRoLGhlaWdodDp0LmhlaWdodH19ZnVuY3Rpb24gdHModCxlLG4pe3JldHVybiBlKE10LmZyb21Eb20obi5zdGFydENvbnRhaW5lciksbi5zdGFydE9mZnNldCxNdC5mcm9tRG9tKG4uZW5kQ29udGFpbmVyKSxuLmVuZE9mZnNldCl9ZnVuY3Rpb24gZXMoaSx0KXtyZXR1cm4gcj1pLG89dC5tYXRjaCh7ZG9tUmFuZ2U6ZnVuY3Rpb24odCl7cmV0dXJue2x0cjpydCh0KSxydGw6dnQubm9uZX19LHJlbGF0aXZlOmZ1bmN0aW9uKHQsZSl7cmV0dXJue2x0cjpSdChmdW5jdGlvbigpe3JldHVybiAkYyhyLHQsZSl9KSxydGw6UnQoZnVuY3Rpb24oKXtyZXR1cm4gdnQuc29tZSgkYyhyLGUsdCkpfSl9fSxleGFjdDpmdW5jdGlvbih0LGUsbixvKXtyZXR1cm57bHRyOlJ0KGZ1bmN0aW9uKCl7cmV0dXJuIFFjKHIsdCxlLG4sbyl9KSxydGw6UnQoZnVuY3Rpb24oKXtyZXR1cm4gdnQuc29tZShRYyhyLG4sbyx0LGUpKX0pfX19KSwoKG49KGU9bykubHRyKCkpLmNvbGxhcHNlZD9lLnJ0bCgpLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4hMT09PXQuY29sbGFwc2VkfSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBncy5ydGwoTXQuZnJvbURvbSh0LmVuZENvbnRhaW5lciksdC5lbmRPZmZzZXQsTXQuZnJvbURvbSh0LnN0YXJ0Q29udGFpbmVyKSx0LnN0YXJ0T2Zmc2V0KX0pLmdldE9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gdHMoMCxncy5sdHIsbil9KTp0cygwLGdzLmx0cixuKSkubWF0Y2goe2x0cjpmdW5jdGlvbih0LGUsbixvKXt2YXIgcj1pLmRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7cmV0dXJuIHIuc2V0U3RhcnQodC5kb20sZSksci5zZXRFbmQobi5kb20sbykscn0scnRsOmZ1bmN0aW9uKHQsZSxuLG8pe3ZhciByPWkuZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKTtyZXR1cm4gci5zZXRTdGFydChuLmRvbSxvKSxyLnNldEVuZCh0LmRvbSxlKSxyfX0pO3ZhciByLGUsbixvfShPYz1PY3x8e30pLlRvcFRvQm90dG9tPVwidG9wdG9ib3R0b21cIixPYy5Cb3R0b21Ub1RvcD1cImJvdHRvbXRvdG9wXCI7dmFyIG5zPVwiZGF0YS1hbGxveS12ZXJ0aWNhbC1kaXJcIixvcz1bbW8oXCJob3RzcG90XCIpLHdvKFwiYnViYmxlXCIpLEVvKFwib3ZlcnJpZGVzXCIse30pLFVjKCksdGEoXCJwbGFjZW1lbnRcIixmdW5jdGlvbih0LGUsbil7dmFyIG89TWEobixlLmhvdHNwb3QuZWxlbWVudCkscj1qYyh0LmVsZW1lbnQsZSxoYSgpLHZhKCksZ2EoKSxwYSgpLHZ0LnNvbWUoZS5ob3RzcG90LmVsZW1lbnQpKTtyZXR1cm4gdnQuc29tZShIYyh7YW5jaG9yQm94Om8sYnViYmxlOmUuYnViYmxlLmdldE9yKGtjKCkpLG92ZXJyaWRlczplLm92ZXJyaWRlcyxsYXlvdXRzOnIscGxhY2VyOnZ0Lm5vbmUoKX0pKX0pXSxycz1bbW8oXCJ4XCIpLG1vKFwieVwiKSxFbyhcImhlaWdodFwiLDApLEVvKFwid2lkdGhcIiwwKSxFbyhcImJ1YmJsZVwiLGtjKCkpLEVvKFwib3ZlcnJpZGVzXCIse30pLFVjKCksdGEoXCJwbGFjZW1lbnRcIixmdW5jdGlvbih0LGUsbil7dmFyIG89Y2MobixlLngsZS55KSxyPUJuKG8ubGVmdCxvLnRvcCxlLndpZHRoLGUuaGVpZ2h0KSxpPWpjKHQuZWxlbWVudCxlLGRhKCksbWEoKSxkYSgpLG1hKCksdnQubm9uZSgpKTtyZXR1cm4gdnQuc29tZShIYyh7YW5jaG9yQm94OnIsYnViYmxlOmUuYnViYmxlLG92ZXJyaWRlczplLm92ZXJyaWRlcyxsYXlvdXRzOmkscGxhY2VyOnZ0Lm5vbmUoKX0pKX0pXSxpcz1Wbyhbe3NjcmVlbjpbXCJwb2ludFwiXX0se2Fic29sdXRlOltcInBvaW50XCIsXCJzY3JvbGxMZWZ0XCIsXCJzY3JvbGxUb3BcIl19XSksdXM9aXMuc2NyZWVuLGFzPWlzLmFic29sdXRlLGNzPVttbyhcIm5vZGVcIiksbW8oXCJyb290XCIpLHdvKFwiYnViYmxlXCIpLFVjKCksRW8oXCJvdmVycmlkZXNcIix7fSksRW8oXCJzaG93QWJvdmVcIiwhMSksdGEoXCJwbGFjZW1lbnRcIixmdW5jdGlvbihyLGksdSl7dmFyIGE9cWMociwwLGkpO3JldHVybiBpLm5vZGUuZmlsdGVyKHZuKS5iaW5kKGZ1bmN0aW9uKHQpe3ZhciBlPXQuZG9tLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLG49S2MoZS5sZWZ0LGUudG9wLGUud2lkdGgsZS5oZWlnaHQpLG89aS5ub2RlLmdldE9yKHIuZWxlbWVudCk7cmV0dXJuIEpjKG4sYSxpLHUsbyl9KX0pXSxzcz1mdW5jdGlvbih0LGUsbixvKXtyZXR1cm57c3RhcnQ6dCxzb2Zmc2V0OmUsZmluaXNoOm4sZm9mZnNldDpvfX0sbHM9Vm8oW3tiZWZvcmU6W1wiZWxlbWVudFwiXX0se29uOltcImVsZW1lbnRcIixcIm9mZnNldFwiXX0se2FmdGVyOltcImVsZW1lbnRcIl19XSksZnM9KGxzLmJlZm9yZSxscy5vbixscy5hZnRlcixmdW5jdGlvbih0KXtyZXR1cm4gdC5mb2xkKGgsaCxoKX0pLGRzPVZvKFt7ZG9tUmFuZ2U6W1wicm5nXCJdfSx7cmVsYXRpdmU6W1wic3RhcnRTaXR1XCIsXCJmaW5pc2hTaXR1XCJdfSx7ZXhhY3Q6W1wic3RhcnRcIixcInNvZmZzZXRcIixcImZpbmlzaFwiLFwiZm9mZnNldFwiXX1dKSxtcz17ZG9tUmFuZ2U6ZHMuZG9tUmFuZ2UscmVsYXRpdmU6ZHMucmVsYXRpdmUsZXhhY3Q6ZHMuZXhhY3QsZXhhY3RGcm9tUmFuZ2U6ZnVuY3Rpb24odCl7cmV0dXJuIGRzLmV4YWN0KHQuc3RhcnQsdC5zb2Zmc2V0LHQuZmluaXNoLHQuZm9mZnNldCl9LGdldFdpbjpmdW5jdGlvbih0KXtyZXR1cm4gWHQodC5tYXRjaCh7ZG9tUmFuZ2U6ZnVuY3Rpb24odCl7cmV0dXJuIE10LmZyb21Eb20odC5zdGFydENvbnRhaW5lcil9LHJlbGF0aXZlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGZzKHQpfSxleGFjdDpmdW5jdGlvbih0LGUsbixvKXtyZXR1cm4gdH19KSl9LHJhbmdlOnNzfSxncz1Wbyhbe2x0cjpbXCJzdGFydFwiLFwic29mZnNldFwiLFwiZmluaXNoXCIsXCJmb2Zmc2V0XCJdfSx7cnRsOltcInN0YXJ0XCIsXCJzb2Zmc2V0XCIsXCJmaW5pc2hcIixcImZvZmZzZXRcIl19XSk7ZnVuY3Rpb24gcHModCl7cmV0dXJuIGVmLmdldE9wdGlvbih0KX1mdW5jdGlvbiBocyh0KXtyZXR1cm4gcHModCkuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiAwIT09dC50cmltKCkubGVuZ3RofHwtMTx0LmluZGV4T2YoXCJcXHhhMFwiKX0pLmlzU29tZSgpfHx3dChuZixGdCh0KSl9ZnVuY3Rpb24gdnModCxlKXtyZXR1cm4gTHQobj12b2lkIDA9PT10P2RvY3VtZW50OnQuZG9tKT9bXTpCKG4ucXVlcnlTZWxlY3RvckFsbChlKSxNdC5mcm9tRG9tKTt2YXIgbn1mdW5jdGlvbiBicyh0KXtpZigwPHQucmFuZ2VDb3VudCl7dmFyIGU9dC5nZXRSYW5nZUF0KDApLG49dC5nZXRSYW5nZUF0KHQucmFuZ2VDb3VudC0xKTtyZXR1cm4gdnQuc29tZShzcyhNdC5mcm9tRG9tKGUuc3RhcnRDb250YWluZXIpLGUuc3RhcnRPZmZzZXQsTXQuZnJvbURvbShuLmVuZENvbnRhaW5lciksbi5lbmRPZmZzZXQpKX1yZXR1cm4gdnQubm9uZSgpfWZ1bmN0aW9uIHlzKHQpe2lmKG51bGw9PT10LmFuY2hvck5vZGV8fG51bGw9PT10LmZvY3VzTm9kZSlyZXR1cm4gYnModCk7dmFyIGUsbixvLHIsaSx1LGEsYyxzLGwsZixkPU10LmZyb21Eb20odC5hbmNob3JOb2RlKSxtPU10LmZyb21Eb20odC5mb2N1c05vZGUpO3JldHVybiBlPWQsbj10LmFuY2hvck9mZnNldCxvPW0scj10LmZvY3VzT2Zmc2V0LHU9bixhPW8sYz1yLChzPWp0KGk9ZSkuZG9tLmNyZWF0ZVJhbmdlKCkpLnNldFN0YXJ0KGkuZG9tLHUpLHMuc2V0RW5kKGEuZG9tLGMpLGw9cyxmPXp0KGUsbykmJm49PT1yLGwuY29sbGFwc2VkJiYhZj92dC5zb21lKHNzKGQsdC5hbmNob3JPZmZzZXQsbSx0LmZvY3VzT2Zmc2V0KSk6YnModCl9ZnVuY3Rpb24geHModCxlKXt2YXIgbixvLHI9KG49ZXModCxlKSkuZ2V0Q2xpZW50UmVjdHMoKTtyZXR1cm4gMDwobz0wPHIubGVuZ3RoP3JbMF06bi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSkud2lkdGh8fDA8by5oZWlnaHQ/dnQuc29tZShvKS5tYXAoWmMpOnZ0Lm5vbmUoKX1mdW5jdGlvbiB3cyh0LGUpe3JldHVybntlbGVtZW50OnQsb2Zmc2V0OmV9fWZ1bmN0aW9uIFNzKHQsZSl7cmV0dXJuKFhlKHQpP3dzOmZ1bmN0aW9uKHQsZSl7dmFyIG49S3QodCk7aWYoMD09PW4ubGVuZ3RoKXJldHVybiB3cyh0LGUpO2lmKGU8bi5sZW5ndGgpcmV0dXJuIHdzKG5bZV0sMCk7dmFyIG89bltuLmxlbmd0aC0xXTtyZXR1cm4gd3MobywoWGUobyk/ZWYuZ2V0KG8pOkt0KG8pKS5sZW5ndGgpfSkodCxlKX1mdW5jdGlvbiBrcyh0LGUpe3JldHVybiBlLmdldFNlbGVjdGlvbi5nZXRPclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHZ0LmZyb20odC5nZXRTZWxlY3Rpb24oKSkuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiAwPHQucmFuZ2VDb3VudH0pLmJpbmQoeXMpfX0pKCkubWFwKGZ1bmN0aW9uKHQpe3ZhciBlPVNzKHQuc3RhcnQsdC5zb2Zmc2V0KSxuPVNzKHQuZmluaXNoLHQuZm9mZnNldCk7cmV0dXJuIG1zLnJhbmdlKGUuZWxlbWVudCxlLm9mZnNldCxuLmVsZW1lbnQsbi5vZmZzZXQpfSl9ZnVuY3Rpb24gQ3ModCl7cmV0dXJuIHQueCt0LndpZHRofWZ1bmN0aW9uIE9zKHQsZSl7cmV0dXJuIHQueC1lLndpZHRofWZ1bmN0aW9uIF9zKHQsZSl7cmV0dXJuIHQueS1lLmhlaWdodCt0LmhlaWdodH1mdW5jdGlvbiBUcyh0LGUsbil7cmV0dXJuIG5hKENzKHQpLHQueSxuLnNvdXRoZWFzdCgpLE5hKCksXCJzb3V0aGVhc3RcIixyYSh0LHtsZWZ0OjAsdG9wOjJ9KSxyZil9ZnVuY3Rpb24gRXModCxlLG4pe3JldHVybiBuYShPcyh0LGUpLHQueSxuLnNvdXRod2VzdCgpLFBhKCksXCJzb3V0aHdlc3RcIixyYSh0LHtyaWdodDoxLHRvcDoyfSkscmYpfWZ1bmN0aW9uIERzKHQsZSxuKXtyZXR1cm4gbmEoQ3ModCksX3ModCxlKSxuLm5vcnRoZWFzdCgpLFZhKCksXCJub3J0aGVhc3RcIixyYSh0LHtsZWZ0OjAsYm90dG9tOjN9KSxyZil9ZnVuY3Rpb24gQXModCxlLG4pe3JldHVybiBuYShPcyh0LGUpLF9zKHQsZSksbi5ub3J0aHdlc3QoKSxIYSgpLFwibm9ydGh3ZXN0XCIscmEodCx7cmlnaHQ6MSxib3R0b206M30pLHJmKX1mdW5jdGlvbiBCcygpe3JldHVybltUcyxFcyxEcyxBc119ZnVuY3Rpb24gTXMoKXtyZXR1cm5bRXMsVHMsQXMsRHNdfWZ1bmN0aW9uIEZzKHQsZSxuLG8scixpLHUpe3ZhciBhLGMscyxsLGYsZCxtLGcscCxoLHYsYix5LHgsdz17YW5jaG9yQm94Om4uYW5jaG9yQm94LG9yaWdpbjplfTtyZXR1cm4gYT13LGM9ci5lbGVtZW50LHM9bi5idWJibGUsbD1uLmxheW91dHMsZj1pLGQ9byxtPW4ub3ZlcnJpZGVzLGc9dSxoPXdjKG0sXCJtYXhIZWlnaHRGdW5jdGlvblwiLFJjKCkpLHY9d2MobSxcIm1heFdpZHRoRnVuY3Rpb25cIixzdCksYj1hLmFuY2hvckJveCx5PWEub3JpZ2luLHg9e2JvdW5kczoocD15LGQuZm9sZChmdW5jdGlvbigpe3JldHVybiBwLmZvbGQoRm4sRm4sQm4pfSxmdW5jdGlvbihuKXtyZXR1cm4gcC5mb2xkKG4sbixmdW5jdGlvbigpe3ZhciB0PW4oKSxlPWNjKHAsdC54LHQueSk7cmV0dXJuIEJuKGUubGVmdCxlLnRvcCx0LndpZHRoLHQuaGVpZ2h0KX0pfSkpLG9yaWdpbjp5LHByZWZlcmVuY2U6bCxtYXhIZWlnaHRGdW5jdGlvbjpoLG1heFdpZHRoRnVuY3Rpb246dixsYXN0UGxhY2VtZW50OmYsdHJhbnNpdGlvbjpnfSxQYyhiLGMscyx4KX1mdW5jdGlvbiBJcyh0LGUpe1RuKHQuZWxlbWVudCxlLmVsZW1lbnQpfWZ1bmN0aW9uIFJzKGUsdCl7dmFyIG4sbz1lLmNvbXBvbmVudHMoKTtTdCgobj1lKS5jb21wb25lbnRzKCksZnVuY3Rpb24odCl7cmV0dXJuIEVuKHQuZWxlbWVudCl9KSxNZShuLmVsZW1lbnQpLG4uc3luY0NvbXBvbmVudHMoKTt2YXIgcj1VKG8sdCk7U3QocixmdW5jdGlvbih0KXtkZih0KSxlLmdldFN5c3RlbSgpLnJlbW92ZUZyb21Xb3JsZCh0KX0pLFN0KHQsZnVuY3Rpb24odCl7dC5nZXRTeXN0ZW0oKS5pc0Nvbm5lY3RlZCgpP0lzKGUsdCk6KGUuZ2V0U3lzdGVtKCkuYWRkVG9Xb3JsZCh0KSxJcyhlLHQpLHZuKGUuZWxlbWVudCkmJm1mKHQpKSxlLnN5bmNDb21wb25lbnRzKCl9KX1mdW5jdGlvbiBOcyh0LGUpe2dmKHQsZSxUbil9ZnVuY3Rpb24gUHModCl7ZGYodCksRW4odC5lbGVtZW50KSx0LmdldFN5c3RlbSgpLnJlbW92ZUZyb21Xb3JsZCh0KX1mdW5jdGlvbiBWcyhlKXt2YXIgdD1ZdChlLmVsZW1lbnQpLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIGUuZ2V0U3lzdGVtKCkuZ2V0QnlEb20odCkudG9PcHRpb25hbCgpfSk7UHMoZSksdC5lYWNoKGZ1bmN0aW9uKHQpe3Quc3luY0NvbXBvbmVudHMoKX0pfWZ1bmN0aW9uIEhzKHQpe3ZhciBlPXQuY29tcG9uZW50cygpO1N0KGUsUHMpLE1lKHQuZWxlbWVudCksdC5zeW5jQ29tcG9uZW50cygpfWZ1bmN0aW9uIExzKHQsZSl7cGYodCxlLFRuKX1mdW5jdGlvbiB6cyhlKXt2YXIgdD1LdChlLmVsZW1lbnQpO1N0KHQsZnVuY3Rpb24odCl7ZS5nZXRCeURvbSh0KS5lYWNoKGRmKX0pLEVuKGUuZWxlbWVudCl9ZnVuY3Rpb24gVXMoZSx0LG4sbyl7bi5nZXQoKS5lYWNoKGZ1bmN0aW9uKHQpe0hzKGUpfSksTnModC5nZXRBdHRhY2hQb2ludChlKSxlKTt2YXIgcj1lLmdldFN5c3RlbSgpLmJ1aWxkKG8pO3JldHVybiBOcyhlLHIpLG4uc2V0KHIpLHJ9ZnVuY3Rpb24ganModCxlLG4sbyl7dmFyIHI9VXModCxlLG4sbyk7cmV0dXJuIGUub25PcGVuKHQscikscn1mdW5jdGlvbiBXcyhlLG4sbyl7by5nZXQoKS5lYWNoKGZ1bmN0aW9uKHQpe0hzKGUpLFZzKGUpLG4ub25DbG9zZShlLHQpLG8uY2xlYXIoKX0pfWZ1bmN0aW9uIEdzKHQsZSxuKXtyZXR1cm4gbi5pc09wZW4oKX1mdW5jdGlvbiBYcyh0KXt2YXIgbj1zbyhcIkRpc21pc3NhbFwiLFNmLHQpLGU9e307cmV0dXJuIGVbeWYoKV09e3NjaGVtYTp0byhbbW8oXCJ0YXJnZXRcIildKSxvblJlY2VpdmU6ZnVuY3Rpb24oZSx0KXtiZi5pc09wZW4oZSkmJihiZi5pc1BhcnRPZihlLHQudGFyZ2V0KXx8bi5pc0V4dHJhUGFydChlLHQudGFyZ2V0KXx8bi5maXJlRXZlbnRJbnN0ZWFkLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gYmYuY2xvc2UoZSl9LGZ1bmN0aW9uKHQpe3JldHVybiB2cihlLHQuZXZlbnQpfSkpfX0sZX1mdW5jdGlvbiBZcyh0KXt2YXIgbj1zbyhcIlJlcG9zaXRpb25cIixrZix0KSxlPXt9O3JldHVybiBlW3hmKCldPXtvblJlY2VpdmU6ZnVuY3Rpb24oZSl7YmYuaXNPcGVuKGUpJiZuLmZpcmVFdmVudEluc3RlYWQuZm9sZChmdW5jdGlvbigpe3JldHVybiBuLmRvUmVwb3NpdGlvbihlKX0sZnVuY3Rpb24odCl7cmV0dXJuIHZyKGUsdC5ldmVudCl9KX19LGV9ZnVuY3Rpb24gcXModCxlLG4pe2Uuc3RvcmUubWFuYWdlci5vbkxvYWQodCxlLG4pfWZ1bmN0aW9uIEtzKHQsZSxuKXtlLnN0b3JlLm1hbmFnZXIub25VbmxvYWQodCxlLG4pfWZ1bmN0aW9uIEpzKCl7dmFyIHQ9UG8obnVsbCk7cmV0dXJuIHd1KHtzZXQ6dC5zZXQsZ2V0OnQuZ2V0LGlzTm90U2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGw9PT10LmdldCgpfSxjbGVhcjpmdW5jdGlvbigpe3Quc2V0KG51bGwpfSxyZWFkU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm57bW9kZTpcIm1lbW9yeVwiLHZhbHVlOnQuZ2V0KCl9fX0pfWZ1bmN0aW9uICRzKCl7dmFyIGk9UG8oe30pLHU9UG8oe30pO3JldHVybiB3dSh7cmVhZFN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJue21vZGU6XCJkYXRhc2V0XCIsZGF0YUJ5VmFsdWU6aS5nZXQoKSxkYXRhQnlUZXh0OnUuZ2V0KCl9fSxsb29rdXA6ZnVuY3Rpb24odCl7cmV0dXJuIHR0KGkuZ2V0KCksdCkub3JUaHVuayhmdW5jdGlvbigpe3JldHVybiB0dCh1LmdldCgpLHQpfSl9LHVwZGF0ZTpmdW5jdGlvbih0KXt2YXIgZT1pLmdldCgpLG49dS5nZXQoKSxvPXt9LHI9e307U3QodCxmdW5jdGlvbihlKXt0dChvW2UudmFsdWVdPWUsXCJtZXRhXCIpLmVhY2goZnVuY3Rpb24odCl7dHQodCxcInRleHRcIikuZWFjaChmdW5jdGlvbih0KXtyW3RdPWV9KX0pfSksaS5zZXQobHQobHQoe30sZSksbykpLHUuc2V0KGx0KGx0KHt9LG4pLHIpKX0sY2xlYXI6ZnVuY3Rpb24oKXtpLnNldCh7fSksdS5zZXQoe30pfX0pfWZ1bmN0aW9uIFFzKHQsZSxuLG8pe3ZhciByPWUuc3RvcmU7bi51cGRhdGUoW29dKSxyLnNldFZhbHVlKHQsbyksZS5vblNldFZhbHVlKHQsbyl9ZnVuY3Rpb24gWnMobyx0KXtyZXR1cm4gTm8obyx7fSxCKHQsZnVuY3Rpb24odCl7cmV0dXJuIGU9dC5uYW1lKCksbj1cIkNhbm5vdCBjb25maWd1cmUgXCIrdC5uYW1lKCkrXCIgZm9yIFwiK28sYXIoZSxlLFhuKCksSm4oZnVuY3Rpb24odCl7cmV0dXJuIHpvKFwiVGhlIGZpZWxkOiBcIitlK1wiIGlzIGZvcmJpZGRlbi4gXCIrbil9KSk7dmFyIGUsbn0pLmNvbmNhdChbY3IoXCJkdW1wXCIsaCldKSl9ZnVuY3Rpb24gdGwodCl7cmV0dXJuIHQuZHVtcH1mdW5jdGlvbiBlbCh0LGUpe3JldHVybiBsdChsdCh7fSxlYyhlKSksdC5kdW1wKX1mdW5jdGlvbiBubCh0KXtyZXR1cm4gVHQodCxcInVpVHlwZVwiKX1mdW5jdGlvbiBvbCh0KXtyZXR1cm4gdC5mb2xkKHZ0LnNvbWUsdnQubm9uZSx2dC5zb21lLHZ0LnNvbWUpfWZ1bmN0aW9uIHJsKHQpe2Z1bmN0aW9uIGUodCl7cmV0dXJuIHQubmFtZX1yZXR1cm4gdC5mb2xkKGUsZSxlLGUpfWZ1bmN0aW9uIGlsKG4sbyl7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXNvKFwiQ29udmVydGluZyBwYXJ0IHR5cGVcIixvLHQpO3JldHVybiBuKGUpfX1mdW5jdGlvbiB1bCh0LGUsbixvKXtyZXR1cm4gWW8oZS5kZWZhdWx0cyh0LG4sbyksbix7dWlkOnQucGFydFVpZHNbZS5uYW1lXX0sZS5vdmVycmlkZXModCxuLG8pKX1mdW5jdGlvbiBhbChyLHQpe3ZhciBlPXt9O3JldHVybiBTdCh0LGZ1bmN0aW9uKHQpe29sKHQpLmVhY2goZnVuY3Rpb24obil7dmFyIG89bmQocixuLnBuYW1lKTtlW24ubmFtZV09ZnVuY3Rpb24odCl7dmFyIGU9c28oXCJQYXJ0OiBcIituLm5hbWUrXCIgaW4gXCIrciwkbyhuLnNjaGVtYSksdCk7cmV0dXJuIGx0KGx0KHt9LG8pLHtjb25maWc6dCx2YWxpZGF0ZWQ6ZX0pfX0pfSksZX1mdW5jdGlvbiBjbCh0LGUsbil7cmV0dXJue3VpVHlwZTpQZigpLG93bmVyOnQsbmFtZTplLGNvbmZpZzpuLHZhbGlkYXRlZDp7fX19ZnVuY3Rpb24gc2wodCl7cmV0dXJuIEgodCxmdW5jdGlvbih0KXtyZXR1cm4gdC5mb2xkKHZ0Lm5vbmUsdnQuc29tZSx2dC5ub25lLHZ0Lm5vbmUpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gYm8odC5uYW1lLHQuc2NoZW1hLmNvbmNhdChbZWEodGQoKSldKSl9KS50b0FycmF5KCl9KX1mdW5jdGlvbiBsbCh0KXtyZXR1cm4gQih0LHJsKX1mdW5jdGlvbiBmbCh0LGUsbil7cmV0dXJuIG89ZSxyPXt9LGk9e30sU3QobixmdW5jdGlvbih0KXt0LmZvbGQoZnVuY3Rpb24obyl7cltvLnBuYW1lXT1SZighMCxmdW5jdGlvbih0LGUsbil7cmV0dXJuIG8uZmFjdG9yeS5za2V0Y2godWwodCxvLGUsbikpfSl9LGZ1bmN0aW9uKHQpe3ZhciBlPW8ucGFydHNbdC5uYW1lXTtpW3QubmFtZV09cnQodC5mYWN0b3J5LnNrZXRjaCh1bChvLHQsZVt0ZCgpXSksZSkpfSxmdW5jdGlvbihvKXtyW28ucG5hbWVdPVJmKCExLGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gby5mYWN0b3J5LnNrZXRjaCh1bCh0LG8sZSxuKSl9KX0sZnVuY3Rpb24obyl7cltvLnBuYW1lXT1OZighMCxmdW5jdGlvbihlLHQsbil7cmV0dXJuIEIoZVtvLm5hbWVdLGZ1bmN0aW9uKHQpe3JldHVybiBvLmZhY3Rvcnkuc2tldGNoKFlvKG8uZGVmYXVsdHMoZSx0LG4pLHQsby5vdmVycmlkZXMoZSx0KSkpfSl9KX0pfSkse2ludGVybmFsczpydChyKSxleHRlcm5hbHM6cnQoaSl9O3ZhciBvLHIsaX1mdW5jdGlvbiBkbCh0LGUsbil7cmV0dXJuIG89dnQuc29tZSh0KSxpPShyPWUpLmNvbXBvbmVudHMscz1kdChuLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIG89dCxyPSExLHtuYW1lOnJ0KG49ZSkscmVxdWlyZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gby5mb2xkKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHR9LGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHR9KX0sdXNlZDpmdW5jdGlvbigpe3JldHVybiByfSxyZXBsYWNlOmZ1bmN0aW9uKCl7aWYocil0aHJvdyBuZXcgRXJyb3IoXCJUcnlpbmcgdG8gdXNlIHRoZSBzYW1lIHBsYWNlaG9sZGVyIG1vcmUgdGhhbiBvbmNlOiBcIituKTtyZXR1cm4gcj0hMCxvfX07dmFyIG4sbyxyfSksdT1vLGE9cixjPXMsbD1IKGksZnVuY3Rpb24odCl7cmV0dXJuIElmKHUsYSx0LGMpfSksSihzLGZ1bmN0aW9uKHQpe2lmKCExPT09dC51c2VkKCkmJnQucmVxdWlyZWQoKSl0aHJvdyBuZXcgRXJyb3IoXCJQbGFjZWhvbGRlcjogXCIrdC5uYW1lKCkrXCIgd2FzIG5vdCBmb3VuZCBpbiBjb21wb25lbnRzIGxpc3RcXG5OYW1lc3BhY2U6IFwiK28uZ2V0T3IoXCJub25lXCIpK1wiXFxuQ29tcG9uZW50czogXCIrSlNPTi5zdHJpbmdpZnkoci5jb21wb25lbnRzLG51bGwsMikpfSksbDt2YXIgbyxyLGksdSxhLGMscyxsfWZ1bmN0aW9uIG1sKHQsZSxuKXt2YXIgbz1lLnBhcnRVaWRzW25dO3JldHVybiB0LmdldFN5c3RlbSgpLmdldEJ5VWlkKG8pLnRvT3B0aW9uYWwoKX1mdW5jdGlvbiBnbCh0LGUsbil7cmV0dXJuIG1sKHQsZSxuKS5nZXRPckRpZShcIkNvdWxkIG5vdCBmaW5kIHBhcnQ6IFwiK24pfWZ1bmN0aW9uIHBsKHQsZSxuKXt2YXIgbz17fSxyPWUucGFydFVpZHMsaT10LmdldFN5c3RlbSgpO3JldHVybiBTdChuLGZ1bmN0aW9uKHQpe29bdF09cnQoaS5nZXRCeVVpZChyW3RdKSl9KSxvfWZ1bmN0aW9uIGhsKHQsZSl7dmFyIG49dC5nZXRTeXN0ZW0oKTtyZXR1cm4gZHQoZS5wYXJ0VWlkcyxmdW5jdGlvbih0LGUpe3JldHVybiBydChuLmdldEJ5VWlkKHQpKX0pfWZ1bmN0aW9uIHZsKHQpe3JldHVybiBDdCh0LnBhcnRVaWRzKX1mdW5jdGlvbiBibCh0LGUsbil7dmFyIG89e30scj1lLnBhcnRVaWRzLGk9dC5nZXRTeXN0ZW0oKTtyZXR1cm4gU3QobixmdW5jdGlvbih0KXtvW3RdPXJ0KGkuZ2V0QnlVaWQoclt0XSkuZ2V0T3JEaWUoKSl9KSxvfWZ1bmN0aW9uIHlsKGUsdCl7cmV0dXJuIGxyKEIobGwodCksZnVuY3Rpb24odCl7cmV0dXJue2tleTp0LHZhbHVlOmUrXCItXCIrdH19KSl9ZnVuY3Rpb24geGwoZSl7cmV0dXJuIGFyKFwicGFydFVpZHNcIixcInBhcnRVaWRzXCIsWW4oZnVuY3Rpb24odCl7cmV0dXJuIHlsKHQudWlkLGUpfSksWm8oKSl9ZnVuY3Rpb24gd2wodCxlLG4sbyxyKXt2YXIgaTtyZXR1cm4gc28odCtcIiBbU3BlY1NjaGVtYV1cIix0bygoaT1yLCgwPG8ubGVuZ3RoP1tibyhcInBhcnRzXCIsbyldOltdKS5jb25jYXQoW21vKFwidWlkXCIpLEVvKFwiZG9tXCIse30pLEVvKFwiY29tcG9uZW50c1wiLFtdKSxlYShcIm9yaWdpbmFsU3BlY1wiKSxFbyhcImRlYnVnLnNrZXRjaGVyXCIse30pXSkuY29uY2F0KGkpKS5jb25jYXQoZSkpLG4pfWZ1bmN0aW9uIFNsKHQsZSxuLG8scil7dmFyIGk9cmQociksdT13bCh0LGUsaSxzbChuKSxbeGwobildKSxhPWZsKDAsdSxuKTtyZXR1cm4gbyh1LGRsKHQsdSxhLmludGVybmFscygpKSxpLGEuZXh0ZXJuYWxzKCkpfWZ1bmN0aW9uIGtsKHQpe3ZhciByPXNvKFwiU2tldGNoZXIgZm9yIFwiK3QubmFtZSxpZCx0KSxlPWR0KHIuYXBpcyxIciksbj1kdChyLmV4dHJhQXBpcyxQcik7cmV0dXJuIGx0KGx0KHtuYW1lOnIubmFtZSxjb25maWdGaWVsZHM6ci5jb25maWdGaWVsZHMsc2tldGNoOmZ1bmN0aW9uKHQpe3JldHVybiBlPXIubmFtZSxuPXIuY29uZmlnRmllbGRzLCgwLHIuZmFjdG9yeSkod2woZSxuLG89cmQodCksW10sW10pLG8pO3ZhciBlLG4sb319LGUpLG4pfWZ1bmN0aW9uIENsKHQpe3ZhciBlPXNvKFwiU2tldGNoZXIgZm9yIFwiK3QubmFtZSx1ZCx0KSxuPWFsKGUubmFtZSxlLnBhcnRGaWVsZHMpLG89ZHQoZS5hcGlzLEhyKSxyPWR0KGUuZXh0cmFBcGlzLFByKTtyZXR1cm4gbHQobHQoe25hbWU6ZS5uYW1lLHBhcnRGaWVsZHM6ZS5wYXJ0RmllbGRzLGNvbmZpZ0ZpZWxkczplLmNvbmZpZ0ZpZWxkcyxza2V0Y2g6ZnVuY3Rpb24odCl7cmV0dXJuIFNsKGUubmFtZSxlLmNvbmZpZ0ZpZWxkcyxlLnBhcnRGaWVsZHMsZS5mYWN0b3J5LHQpfSxwYXJ0czpufSxvKSxyKX1mdW5jdGlvbiBPbCh0KXtyZXR1cm5cImlucHV0XCI9PT1GdCh0KSYmXCJyYWRpb1wiIT09aWUodCxcInR5cGVcIil8fFwidGV4dGFyZWFcIj09PUZ0KHQpfWZ1bmN0aW9uIF9sKHQsZSxuKXsoZS5kaXNhYmxlZCgpP2xkOmZkKSh0LGUpfWZ1bmN0aW9uIFRsKHQsZSl7cmV0dXJuITA9PT1lLnVzZU5hdGl2ZSYmd3Qoc2QsRnQodC5lbGVtZW50KSl9ZnVuY3Rpb24gRWwodCxlKXtyZXR1cm4gVGwodCxlKT9hZSh0LmVsZW1lbnQsXCJkaXNhYmxlZFwiKTpcInRydWVcIj09PWllKHQuZWxlbWVudCxcImFyaWEtZGlzYWJsZWRcIil9ZnVuY3Rpb24gRGwobixvLHQscil7dmFyIGU9dnMobi5lbGVtZW50LFwiLlwiK28uaGlnaGxpZ2h0Q2xhc3MpO1N0KGUsZnVuY3Rpb24oZSl7ZChyLGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQ9PT1lfSl8fChxcihlLG8uaGlnaGxpZ2h0Q2xhc3MpLG4uZ2V0U3lzdGVtKCkuZ2V0QnlEb20oZSkuZWFjaChmdW5jdGlvbih0KXtvLm9uRGVoaWdobGlnaHQobix0KSx2cih0LHR1KCkpfSkpfSl9ZnVuY3Rpb24gQWwodCxlLG4sbyl7RGwodCxlLDAsW29dKSxZbCgwLGUsMCxvKXx8KFlyKG8uZWxlbWVudCxlLmhpZ2hsaWdodENsYXNzKSxlLm9uSGlnaGxpZ2h0KHQsbyksdnIobyxaaSgpKSl9ZnVuY3Rpb24gQmwobixlLHQsbyl7dmFyIHI9dnMobi5lbGVtZW50LFwiLlwiK2UuaXRlbUNsYXNzKTtyZXR1cm4gUChyLGZ1bmN0aW9uKHQpe3JldHVybiBLcih0LGUuaGlnaGxpZ2h0Q2xhc3MpfSkuYmluZChmdW5jdGlvbih0KXt2YXIgZT1vYSh0LG8sMCxyLmxlbmd0aC0xKTtyZXR1cm4gbi5nZXRTeXN0ZW0oKS5nZXRCeURvbShyW2VdKS50b09wdGlvbmFsKCl9KX1mdW5jdGlvbiBNbCh0LGUsbil7dmFyIG89eih0LnNsaWNlKDAsZSkpLHI9eih0LnNsaWNlKGUrMSkpO3JldHVybiBOKG8uY29uY2F0KHIpLG4pfWZ1bmN0aW9uIEZsKHQsZSxuKXtyZXR1cm4gTih6KHQuc2xpY2UoMCxlKSksbil9ZnVuY3Rpb24gSWwodCxlLG4pe3ZhciBvPXQuc2xpY2UoMCxlKTtyZXR1cm4gTih0LnNsaWNlKGUrMSkuY29uY2F0KG8pLG4pfWZ1bmN0aW9uIFJsKHQsZSxuKXtyZXR1cm4gTih0LnNsaWNlKGUrMSksbil9ZnVuY3Rpb24gTmwobil7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXQucmF3O3JldHVybiB3dChuLGUud2hpY2gpfX1mdW5jdGlvbiBQbCh0KXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIEwodCxmdW5jdGlvbih0KXtyZXR1cm4gdChlKX0pfX1mdW5jdGlvbiBWbCh0KXtyZXR1cm4hMD09PXQucmF3LnNoaWZ0S2V5fWZ1bmN0aW9uIEhsKHQpe3JldHVybiEwPT09dC5yYXcuY3RybEtleX1mdW5jdGlvbiBMbCh0LGUpe3JldHVybnttYXRjaGVzOnQsY2xhc3NpZmljYXRpb246ZX19ZnVuY3Rpb24gemwodCxlLG4pe2UuZXhpc3RzKGZ1bmN0aW9uKGUpe3JldHVybiBuLmV4aXN0cyhmdW5jdGlvbih0KXtyZXR1cm4genQodCxlKX0pfSl8fGJyKHQsS2koKSx7cHJldkZvY3VzOmUsbmV3Rm9jdXM6bn0pfWZ1bmN0aW9uIFVsKCl7ZnVuY3Rpb24gbyh0KXtyZXR1cm4gX2EodC5lbGVtZW50KX1yZXR1cm57Z2V0Om8sc2V0OmZ1bmN0aW9uKHQsZSl7dmFyIG49byh0KTt0LmdldFN5c3RlbSgpLnRyaWdnZXJGb2N1cyhlLHQuZWxlbWVudCksemwodCxuLG8odCkpfX19ZnVuY3Rpb24gamwoKXtmdW5jdGlvbiByKHQpe3JldHVybiBoZC5nZXRIaWdobGlnaHRlZCh0KS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuZWxlbWVudH0pfXJldHVybntnZXQ6cixzZXQ6ZnVuY3Rpb24oZSx0KXt2YXIgbj1yKGUpO2UuZ2V0U3lzdGVtKCkuZ2V0QnlEb20odCkuZm9sZChzdCxmdW5jdGlvbih0KXtoZC5oaWdobGlnaHQoZSx0KX0pO3ZhciBvPXIoZSk7emwoZSxuLG8pfX19Z3MubHRyLGdzLnJ0bDtmdW5jdGlvbiBXbCh0LGUsbixvLHIsaSl7dmFyIHU9aS5tYXAoTW4pO3JldHVybiBsZih0LGUsbixvLHIsdSl9ZnVuY3Rpb24gR2wodCxlLG4pe3ZhciBvLHIsaSx1PWUuZ2V0QXR0YWNoUG9pbnQodCk7ZmUodC5lbGVtZW50LFwicG9zaXRpb25cIixmZi5nZXRNb2RlKHUpKSxpPWUuY2xvYWtWaXNpYmlsaXR5QXR0cixwZSgobz10KS5lbGVtZW50LHI9XCJ2aXNpYmlsaXR5XCIpLmZvbGQoZnVuY3Rpb24oKXtjZShvLmVsZW1lbnQsaSl9LGZ1bmN0aW9uKHQpe29lKG8uZWxlbWVudCxpLHQpfSksZmUoby5lbGVtZW50LHIsXCJoaWRkZW5cIil9ZnVuY3Rpb24gWGwodCxlLG4pe3ZhciBvLHIsaSx1PXQuZWxlbWVudDtkKFtcInRvcFwiLFwibGVmdFwiLFwicmlnaHRcIixcImJvdHRvbVwiXSxmdW5jdGlvbih0KXtyZXR1cm4gcGUodSx0KS5pc1NvbWUoKX0pfHx2ZSh0LmVsZW1lbnQsXCJwb3NpdGlvblwiKSxyPVwidmlzaWJpbGl0eVwiLGk9ZS5jbG9ha1Zpc2liaWxpdHlBdHRyLHVlKChvPXQpLmVsZW1lbnQsaSkuZm9sZChmdW5jdGlvbigpe3JldHVybiB2ZShvLmVsZW1lbnQscil9LGZ1bmN0aW9uKHQpe3JldHVybiBmZShvLmVsZW1lbnQscix0KX0pfWZ1bmN0aW9uIFlsKHQsZSxuLG8pe3JldHVybiBLcihvLmVsZW1lbnQsZS5oaWdobGlnaHRDbGFzcyl9ZnVuY3Rpb24gcWwoZSx0LG4pe3JldHVybiBJdShlLmVsZW1lbnQsXCIuXCIrdC5pdGVtQ2xhc3MpLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIGUuZ2V0U3lzdGVtKCkuZ2V0QnlEb20odCkudG9PcHRpb25hbCgpfSl9ZnVuY3Rpb24gS2woZSx0LG4pe3ZhciBvPXZzKGUuZWxlbWVudCxcIi5cIit0Lml0ZW1DbGFzcyk7cmV0dXJuKDA8by5sZW5ndGg/dnQuc29tZShvW28ubGVuZ3RoLTFdKTp2dC5ub25lKCkpLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIGUuZ2V0U3lzdGVtKCkuZ2V0QnlEb20odCkudG9PcHRpb25hbCgpfSl9ZnVuY3Rpb24gSmwoZSx0LG4pe3JldHVybiBudChCKHZzKGUuZWxlbWVudCxcIi5cIit0Lml0ZW1DbGFzcyksZnVuY3Rpb24odCl7cmV0dXJuIGUuZ2V0U3lzdGVtKCkuZ2V0QnlEb20odCkudG9PcHRpb25hbCgpfSkpfXZhciAkbCxRbCxabCx0ZixlZj0oJGw9WGUse2dldDpmdW5jdGlvbih0KXtpZighJGwodCkpdGhyb3cgbmV3IEVycm9yKFwiQ2FuIG9ubHkgZ2V0IHRleHQgdmFsdWUgb2YgYSB0ZXh0IG5vZGVcIik7cmV0dXJuIFFsKHQpLmdldE9yKFwiXCIpfSxnZXRPcHRpb246UWw9ZnVuY3Rpb24odCl7cmV0dXJuICRsKHQpP3Z0LmZyb20odC5kb20ubm9kZVZhbHVlKTp2dC5ub25lKCl9LHNldDpmdW5jdGlvbih0LGUpe2lmKCEkbCh0KSl0aHJvdyBuZXcgRXJyb3IoXCJDYW4gb25seSBzZXQgcmF3IHRleHQgdmFsdWUgb2YgYSB0ZXh0IG5vZGVcIik7dC5kb20ubm9kZVZhbHVlPWV9fSksbmY9W1wiaW1nXCIsXCJiclwiXSxvZj1bd28oXCJnZXRTZWxlY3Rpb25cIiksbW8oXCJyb290XCIpLHdvKFwiYnViYmxlXCIpLFVjKCksRW8oXCJvdmVycmlkZXNcIix7fSksRW8oXCJzaG93QWJvdmVcIiwhMSksdGEoXCJwbGFjZW1lbnRcIixmdW5jdGlvbih0LGUsbil7dmFyIHI9WHQoZS5yb290KS5kb20sbz1xYyh0LDAsZSk7cmV0dXJuIEpjKGtzKHIsZSkuYmluZChmdW5jdGlvbihuKXtyZXR1cm4gdD1yLGU9bXMuZXhhY3RGcm9tUmFuZ2UobiksKDA8KG89ZXModCxlKS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSkud2lkdGh8fDA8by5oZWlnaHQ/dnQuc29tZShvKS5tYXAoWmMpOnZ0Lm5vbmUoKSkub3JUaHVuayhmdW5jdGlvbigpe3ZhciB0PU10LmZyb21UZXh0KFwiXFx1ZmVmZlwiKTtFZShuLnN0YXJ0LHQpO3ZhciBlPXhzKHIsbXMuZXhhY3QodCwwLHQsMSkpO3JldHVybiBFbih0KSxlfSkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gS2ModC5sZWZ0LHQudG9wLHQud2lkdGgsdC5oZWlnaHQpfSk7dmFyIHQsZSxvfSksbyxlLG4sa3MocixlKS5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiBHZSh0LnN0YXJ0KT92dC5zb21lKHQuc3RhcnQpOmZuKHQuc3RhcnQpfSkuZ2V0T3IodC5lbGVtZW50KSl9KV0scmY9XCJsaW5rLWxheW91dFwiLHVmPWxvKFwidHlwZVwiLHtzZWxlY3Rpb246b2Ysbm9kZTpjcyxob3RzcG90Om9zLHN1Ym1lbnU6W21vKFwiaXRlbVwiKSxVYygpLEVvKFwib3ZlcnJpZGVzXCIse30pLHRhKFwicGxhY2VtZW50XCIsZnVuY3Rpb24odCxlLG4pe3ZhciBvPU1hKG4sZS5pdGVtLmVsZW1lbnQpLHI9amModC5lbGVtZW50LGUsQnMoKSxNcygpLEJzKCksTXMoKSx2dC5ub25lKCkpO3JldHVybiB2dC5zb21lKEhjKHthbmNob3JCb3g6byxidWJibGU6a2MoKSxvdmVycmlkZXM6ZS5vdmVycmlkZXMsbGF5b3V0czpyLHBsYWNlcjp2dC5ub25lKCl9KSl9KV0sbWFrZXNoaWZ0OnJzfSksYWY9W3hvKFwiY2xhc3Nlc1wiLGVyKSxNbyhcIm1vZGVcIixcImFsbFwiLFtcImFsbFwiLFwibGF5b3V0XCIsXCJwbGFjZW1lbnRcIl0pXSxjZj1bRW8oXCJ1c2VGaXhlZFwiLFQpLHdvKFwiZ2V0Qm91bmRzXCIpXSxzZj1bZ28oXCJhbmNob3JcIix1ZiksVG8oXCJ0cmFuc2l0aW9uXCIsYWYpXSxsZj1mdW5jdGlvbihjLHMsbCxmLHQsZCl7dmFyIG09c28oXCJwbGFjZW1lbnQuaW5mb1wiLCRvKHNmKSx0KSxnPW0uYW5jaG9yLHA9Zi5lbGVtZW50LGg9bC5nZXQoZi51aWQpO1RhKGZ1bmN0aW9uKCl7ZmUocCxcInBvc2l0aW9uXCIsXCJmaXhlZFwiKTt2YXIgdD1wZShwLFwidmlzaWJpbGl0eVwiKTtmZShwLFwidmlzaWJpbGl0eVwiLFwiaGlkZGVuXCIpO3ZhciBlLG4sbyxyLGk9cy51c2VGaXhlZCgpPyhyPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxFYygwLDAsci5jbGllbnRXaWR0aCxyLmNsaWVudEhlaWdodCkpOihuPWtlKChlPWMpLmVsZW1lbnQpLG89ZS5lbGVtZW50LmRvbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxUYyhuLmxlZnQsbi50b3Asby53aWR0aCxvLmhlaWdodCkpLHU9Zy5wbGFjZW1lbnQsYT1kLm1hcChydCkub3Iocy5nZXRCb3VuZHMpO3UoYyxnLGkpLmVhY2goZnVuY3Rpb24odCl7dmFyIGU9dC5wbGFjZXIuZ2V0T3IoRnMpKGMsaSx0LGEsZixoLG0udHJhbnNpdGlvbik7bC5zZXQoZi51aWQsZSl9KSx0LmZvbGQoZnVuY3Rpb24oKXt2ZShwLFwidmlzaWJpbGl0eVwiKX0sZnVuY3Rpb24odCl7ZmUocCxcInZpc2liaWxpdHlcIix0KX0pLHBlKHAsXCJsZWZ0XCIpLmlzTm9uZSgpJiZwZShwLFwidG9wXCIpLmlzTm9uZSgpJiZwZShwLFwicmlnaHRcIikuaXNOb25lKCkmJnBlKHAsXCJib3R0b21cIikuaXNOb25lKCkmJm10KHBlKHAsXCJwb3NpdGlvblwiKSxcImZpeGVkXCIpJiZ2ZShwLFwicG9zaXRpb25cIil9LHApfSxmZj14YSh7ZmllbGRzOmNmLG5hbWU6XCJwb3NpdGlvbmluZ1wiLGFjdGl2ZTp1YyxhcGlzOk9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLHBvc2l0aW9uOmZ1bmN0aW9uKHQsZSxuLG8scil7V2wodCxlLG4sbyxyLHZ0Lm5vbmUoKSl9LHBvc2l0aW9uV2l0aGluOldsLHBvc2l0aW9uV2l0aGluQm91bmRzOmxmLGdldE1vZGU6ZnVuY3Rpb24odCxlLG4pe3JldHVybiBlLnVzZUZpeGVkKCk/XCJmaXhlZFwiOlwiYWJzb2x1dGVcIn0scmVzZXQ6ZnVuY3Rpb24odCxlLG4sbyl7dmFyIHI9by5lbGVtZW50O1N0KFtcInBvc2l0aW9uXCIsXCJsZWZ0XCIsXCJyaWdodFwiLFwidG9wXCIsXCJib3R0b21cIl0sZnVuY3Rpb24odCl7cmV0dXJuIHZlKHIsdCl9KSxjZShyLERjKSxuLmNsZWFyKG8udWlkKX19KSxzdGF0ZTpPYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxpbml0OmZ1bmN0aW9uKCl7dmFyIG49e307cmV0dXJuIHd1KHtyZWFkU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gbn0sY2xlYXI6ZnVuY3Rpb24odCl7ayh0KT9kZWxldGUgblt0XTpuPXt9fSxzZXQ6ZnVuY3Rpb24odCxlKXtuW3RdPWV9LGdldDpmdW5jdGlvbih0KXtyZXR1cm4gdHQobix0KX19KX19KX0pLGRmPWZ1bmN0aW9uKHQpe3ZyKHQsWGkoKSk7dmFyIGU9dC5jb21wb25lbnRzKCk7U3QoZSxkZil9LG1mPWZ1bmN0aW9uKHQpe3ZhciBlPXQuY29tcG9uZW50cygpO1N0KGUsbWYpLHZyKHQsR2koKSl9LGdmPWZ1bmN0aW9uKHQsZSxuKXt0LmdldFN5c3RlbSgpLmFkZFRvV29ybGQoZSksbih0LmVsZW1lbnQsZS5lbGVtZW50KSx2bih0LmVsZW1lbnQpJiZtZihlKSx0LnN5bmNDb21wb25lbnRzKCl9LHBmPWZ1bmN0aW9uKHQsZSxuKXtuKHQsZS5lbGVtZW50KTt2YXIgbz1LdChlLmVsZW1lbnQpO1N0KG8sZnVuY3Rpb24odCl7ZS5nZXRCeURvbSh0KS5lYWNoKG1mKX0pfSxoZj1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxjbG9hazpHbCxkZWNsb2FrOlhsLG9wZW46anMsb3BlbldoaWxlQ2xvYWtlZDpmdW5jdGlvbih0LGUsbixvLHIpe0dsKHQsZSksanModCxlLG4sbykscigpLFhsKHQsZSl9LGNsb3NlOldzLGlzT3BlbjpHcyxpc1BhcnRPZjpmdW5jdGlvbihlLG4sdCxvKXtyZXR1cm4gR3MoMCwwLHQpJiZ0LmdldCgpLmV4aXN0cyhmdW5jdGlvbih0KXtyZXR1cm4gbi5pc1BhcnRPZihlLHQsbyl9KX0sZ2V0U3RhdGU6ZnVuY3Rpb24odCxlLG4pe3JldHVybiBuLmdldCgpfSxzZXRDb250ZW50OmZ1bmN0aW9uKHQsZSxuLG8pe3JldHVybiBuLmdldCgpLm1hcChmdW5jdGlvbigpe3JldHVybiBVcyh0LGUsbixvKX0pfX0pLHZmPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGV2ZW50czpmdW5jdGlvbihuLG8pe3JldHVybiBudShbQ3IoVmkoKSxmdW5jdGlvbih0LGUpe1dzKHQsbixvKX0pXSl9fSksYmY9eGEoe2ZpZWxkczpbSnUoXCJvbk9wZW5cIiksSnUoXCJvbkNsb3NlXCIpLG1vKFwiaXNQYXJ0T2ZcIiksbW8oXCJnZXRBdHRhY2hQb2ludFwiKSxFbyhcImNsb2FrVmlzaWJpbGl0eUF0dHJcIixcImRhdGEtcHJlY2xvYWstdmlzaWJpbGl0eVwiKV0sbmFtZTpcInNhbmRib3hpbmdcIixhY3RpdmU6dmYsYXBpczpoZixzdGF0ZTpPYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxpbml0OmZ1bmN0aW9uKCl7dmFyIHQ9Z2MoKSxlPXJ0KFwibm90LWltcGxlbWVudGVkXCIpO3JldHVybiB3dSh7cmVhZFN0YXRlOmUsaXNPcGVuOnQuaXNTZXQsY2xlYXI6dC5jbGVhcixzZXQ6dC5zZXQsZ2V0OnQuZ2V0fSl9fSl9KSx5Zj1ydChcImRpc21pc3MucG9wdXBzXCIpLHhmPXJ0KFwicmVwb3NpdGlvbi5wb3B1cHNcIiksd2Y9cnQoXCJtb3VzZS5yZWxlYXNlZFwiKSxTZj10byhbRW8oXCJpc0V4dHJhUGFydFwiLFQpLFRvKFwiZmlyZUV2ZW50SW5zdGVhZFwiLFtFbyhcImV2ZW50XCIsWWkoKSldKV0pLGtmPXRvKFtUbyhcImZpcmVFdmVudEluc3RlYWRcIixbRW8oXCJldmVudFwiLHFpKCkpXSksdm8oXCJkb1JlcG9zaXRpb25cIildKSxDZj1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxvbkxvYWQ6cXMsb25VbmxvYWQ6S3Msc2V0VmFsdWU6ZnVuY3Rpb24odCxlLG4sbyl7ZS5zdG9yZS5tYW5hZ2VyLnNldFZhbHVlKHQsZSxuLG8pfSxnZXRWYWx1ZTpmdW5jdGlvbih0LGUsbil7cmV0dXJuIGUuc3RvcmUubWFuYWdlci5nZXRWYWx1ZSh0LGUsbil9LGdldFN0YXRlOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbn19KSxPZj1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxldmVudHM6ZnVuY3Rpb24obixvKXt2YXIgdD1uLnJlc2V0T25Eb20/W291KGZ1bmN0aW9uKHQsZSl7cXModCxuLG8pfSkscnUoZnVuY3Rpb24odCxlKXtLcyh0LG4sbyl9KV06W2JhKG4sbyxxcyldO3JldHVybiBudSh0KX19KSxfZj1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxtZW1vcnk6SnMsZGF0YXNldDokcyxtYW51YWw6ZnVuY3Rpb24oKXtyZXR1cm4gd3Uoe3JlYWRTdGF0ZTpzdH0pfSxpbml0OmZ1bmN0aW9uKHQpe3JldHVybiB0LnN0b3JlLm1hbmFnZXIuc3RhdGUodCl9fSksVGY9W3dvKFwiaW5pdGlhbFZhbHVlXCIpLG1vKFwiZ2V0RmFsbGJhY2tFbnRyeVwiKSxtbyhcImdldERhdGFLZXlcIiksbW8oXCJzZXRWYWx1ZVwiKSx0YShcIm1hbmFnZXJcIix7c2V0VmFsdWU6UXMsZ2V0VmFsdWU6ZnVuY3Rpb24odCxlLG4pe3ZhciBvPWUuc3RvcmUscj1vLmdldERhdGFLZXkodCk7cmV0dXJuIG4ubG9va3VwKHIpLmdldE9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gby5nZXRGYWxsYmFja0VudHJ5KHIpfSl9LG9uTG9hZDpmdW5jdGlvbihlLG4sbyl7bi5zdG9yZS5pbml0aWFsVmFsdWUuZWFjaChmdW5jdGlvbih0KXtRcyhlLG4sbyx0KX0pfSxvblVubG9hZDpmdW5jdGlvbih0LGUsbil7bi5jbGVhcigpfSxzdGF0ZTokc30pXSxFZj1bbW8oXCJnZXRWYWx1ZVwiKSxFbyhcInNldFZhbHVlXCIsc3QpLHdvKFwiaW5pdGlhbFZhbHVlXCIpLHRhKFwibWFuYWdlclwiLHtzZXRWYWx1ZTpmdW5jdGlvbih0LGUsbixvKXtlLnN0b3JlLnNldFZhbHVlKHQsbyksZS5vblNldFZhbHVlKHQsbyl9LGdldFZhbHVlOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gZS5zdG9yZS5nZXRWYWx1ZSh0KX0sb25Mb2FkOmZ1bmN0aW9uKGUsbix0KXtuLnN0b3JlLmluaXRpYWxWYWx1ZS5lYWNoKGZ1bmN0aW9uKHQpe24uc3RvcmUuc2V0VmFsdWUoZSx0KX0pfSxvblVubG9hZDpzdCxzdGF0ZTp4dS5pbml0fSldLERmPXhhKHtmaWVsZHM6W0RvKFwic3RvcmVcIix7bW9kZTpcIm1lbW9yeVwifSxsbyhcIm1vZGVcIix7bWVtb3J5Olt3byhcImluaXRpYWxWYWx1ZVwiKSx0YShcIm1hbmFnZXJcIix7c2V0VmFsdWU6ZnVuY3Rpb24odCxlLG4sbyl7bi5zZXQobyksZS5vblNldFZhbHVlKHQsbyl9LGdldFZhbHVlOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbi5nZXQoKX0sb25Mb2FkOmZ1bmN0aW9uKHQsZSxuKXtlLnN0b3JlLmluaXRpYWxWYWx1ZS5lYWNoKGZ1bmN0aW9uKHQpe24uaXNOb3RTZXQoKSYmbi5zZXQodCl9KX0sb25VbmxvYWQ6ZnVuY3Rpb24odCxlLG4pe24uY2xlYXIoKX0sc3RhdGU6SnN9KV0sbWFudWFsOkVmLGRhdGFzZXQ6VGZ9KSksSnUoXCJvblNldFZhbHVlXCIpLEVvKFwicmVzZXRPbkRvbVwiLCExKV0sbmFtZTpcInJlcHJlc2VudGluZ1wiLGFjdGl2ZTpPZixhcGlzOkNmLGV4dHJhOntzZXRWYWx1ZUZyb206ZnVuY3Rpb24odCxlKXt2YXIgbj1EZi5nZXRWYWx1ZShlKTtEZi5zZXRWYWx1ZSh0LG4pfX0sc3RhdGU6X2Z9KSxBZj1acyxCZj1lbCxNZj1cInBsYWNlaG9sZGVyXCIsRmY9Vm8oW3tzaW5nbGU6W1wicmVxdWlyZWRcIixcInZhbHVlVGh1bmtcIl19LHttdWx0aXBsZTpbXCJyZXF1aXJlZFwiLFwidmFsdWVUaHVua3NcIl19XSksSWY9ZnVuY3Rpb24ocixpLHUsYSl7cmV0dXJuIHQ9cixuPWEsKG5sKGU9dSkmJmUudWlUeXBlPT09TWY/KGM9ZSxzPW4sKG89dCkuZXhpc3RzKGZ1bmN0aW9uKHQpe3JldHVybiB0IT09Yy5vd25lcn0pP0ZmLnNpbmdsZSghMCxydChjKSk6dHQocyxjLm5hbWUpLmZvbGQoZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIHBsYWNlaG9sZGVyIGNvbXBvbmVudDogXCIrYy5uYW1lK1wiXFxuS25vd246IFtcIitDdChzKStcIl1cXG5OYW1lc3BhY2U6IFwiK28uZ2V0T3IoXCJub25lXCIpK1wiXFxuU3BlYzogXCIrSlNPTi5zdHJpbmdpZnkoYyxudWxsLDIpKX0sZnVuY3Rpb24odCl7cmV0dXJuIHQucmVwbGFjZSgpfSkpOkZmLnNpbmdsZSghMSxydChlKSkpLmZvbGQoZnVuY3Rpb24odCxlKXt2YXIgbj1ubCh1KT9lKGksdS5jb25maWcsdS52YWxpZGF0ZWQpOmUoaSksbz1IKHR0KG4sXCJjb21wb25lbnRzXCIpLmdldE9yKFtdKSxmdW5jdGlvbih0KXtyZXR1cm4gSWYocixpLHQsYSl9KTtyZXR1cm5bbHQobHQoe30sbikse2NvbXBvbmVudHM6b30pXX0sZnVuY3Rpb24odCxlKXtpZihubCh1KSl7dmFyIG49ZShpLHUuY29uZmlnLHUudmFsaWRhdGVkKTtyZXR1cm4gdS52YWxpZGF0ZWQucHJlcHJvY2Vzcy5nZXRPcihoKShuKX1yZXR1cm4gZShpKX0pO3ZhciB0LGUsbixvLGMsc30sUmY9RmYuc2luZ2xlLE5mPUZmLm11bHRpcGxlLFBmPXJ0KE1mKSxWZj1Wbyhbe3JlcXVpcmVkOltcImRhdGFcIl19LHtleHRlcm5hbDpbXCJkYXRhXCJdfSx7b3B0aW9uYWw6W1wiZGF0YVwiXX0se2dyb3VwOltcImRhdGFcIl19XSksSGY9RW8oXCJmYWN0b3J5XCIse3NrZXRjaDpofSksTGY9RW8oXCJzY2hlbWFcIixbXSksemY9bW8oXCJuYW1lXCIpLFVmPWFyKFwicG5hbWVcIixcInBuYW1lXCIsV24oZnVuY3Rpb24odCl7cmV0dXJuXCI8YWxsb3kuXCIrSXIodC5uYW1lKStcIj5cIn0pLFpvKCkpLGpmPWNyKFwic2NoZW1hXCIsZnVuY3Rpb24oKXtyZXR1cm5bd28oXCJwcmVwcm9jZXNzXCIpXX0pLFdmPUVvKFwiZGVmYXVsdHNcIixydCh7fSkpLEdmPUVvKFwib3ZlcnJpZGVzXCIscnQoe30pKSxYZj0kbyhbSGYsTGYsemYsVWYsV2YsR2ZdKSxZZj0kbyhbSGYsTGYsemYsV2YsR2ZdKSxxZj0kbyhbSGYsTGYsemYsVWYsV2YsR2ZdKSxLZj0kbyhbSGYsamYsemYsbW8oXCJ1bml0XCIpLFVmLFdmLEdmXSksSmY9aWwoVmYucmVxdWlyZWQsWGYpLCRmPWlsKFZmLmV4dGVybmFsLFlmKSxRZj1pbChWZi5vcHRpb25hbCxxZiksWmY9aWwoVmYuZ3JvdXAsS2YpLHRkPXJ0KFwiZW50aXJldHlcIiksZWQ9T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwscmVxdWlyZWQ6SmYsZXh0ZXJuYWw6JGYsb3B0aW9uYWw6UWYsZ3JvdXA6WmYsYXNOYW1lZFBhcnQ6b2wsbmFtZTpybCxhc0NvbW1vbjpmdW5jdGlvbih0KXtyZXR1cm4gdC5mb2xkKGgsaCxoLGgpfSxvcmlnaW5hbDp0ZH0pLG5kPWZ1bmN0aW9uKHQsZSl7cmV0dXJue3VpVHlwZTpQZigpLG93bmVyOnQsbmFtZTplfX0sb2Q9T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsZ2VuZXJhdGU6YWwsZ2VuZXJhdGVPbmU6Y2wsc2NoZW1hczpzbCxuYW1lczpsbCxzdWJzdGl0dXRlczpmbCxjb21wb25lbnRzOmRsLGRlZmF1bHRVaWRzOnlsLGRlZmF1bHRVaWRzU2NoZW1hOnhsLGdldEFsbFBhcnRzOmhsLGdldEFsbFBhcnROYW1lczp2bCxnZXRQYXJ0Om1sLGdldFBhcnRPckRpZTpnbCxnZXRQYXJ0czpwbCxnZXRQYXJ0c09yRGllOmJsfSkscmQ9ZnVuY3Rpb24odCl7cmV0dXJuIFR0KHQsXCJ1aWRcIik/dDpsdChsdCh7fSx0KSx7dWlkOnB1KFwidWlkXCIpfSl9LGlkPXRvKFttbyhcIm5hbWVcIiksbW8oXCJmYWN0b3J5XCIpLG1vKFwiY29uZmlnRmllbGRzXCIpLEVvKFwiYXBpc1wiLHt9KSxFbyhcImV4dHJhQXBpc1wiLHt9KV0pLHVkPXRvKFttbyhcIm5hbWVcIiksbW8oXCJmYWN0b3J5XCIpLG1vKFwiY29uZmlnRmllbGRzXCIpLG1vKFwicGFydEZpZWxkc1wiKSxFbyhcImFwaXNcIix7fSksRW8oXCJleHRyYUFwaXNcIix7fSldKSxhZD1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxnZXRDdXJyZW50OmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gZS5maW5kKHQpfX0pLGNkPXhhKHtmaWVsZHM6W21vKFwiZmluZFwiKV0sbmFtZTpcImNvbXBvc2luZ1wiLGFwaXM6YWR9KSxzZD1bXCJpbnB1dFwiLFwiYnV0dG9uXCIsXCJ0ZXh0YXJlYVwiLFwic2VsZWN0XCJdLGxkPWZ1bmN0aW9uKGUsdCxuKXt0LmRpc2FibGVDbGFzcy5lYWNoKGZ1bmN0aW9uKHQpe1lyKGUuZWxlbWVudCx0KX0pLChUbChlLHQpP2Z1bmN0aW9uKHQpe29lKHQuZWxlbWVudCxcImRpc2FibGVkXCIsXCJkaXNhYmxlZFwiKX06ZnVuY3Rpb24odCl7b2UodC5lbGVtZW50LFwiYXJpYS1kaXNhYmxlZFwiLFwidHJ1ZVwiKX0pKGUpLHQub25EaXNhYmxlZChlKX0sZmQ9ZnVuY3Rpb24oZSx0LG4pe3QuZGlzYWJsZUNsYXNzLmVhY2goZnVuY3Rpb24odCl7cXIoZS5lbGVtZW50LHQpfSksKFRsKGUsdCk/ZnVuY3Rpb24odCl7Y2UodC5lbGVtZW50LFwiZGlzYWJsZWRcIil9OmZ1bmN0aW9uKHQpe29lKHQuZWxlbWVudCxcImFyaWEtZGlzYWJsZWRcIixcImZhbHNlXCIpfSkoZSksdC5vbkVuYWJsZWQoZSl9LGRkPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGVuYWJsZTpmZCxkaXNhYmxlOmxkLGlzRGlzYWJsZWQ6RWwsb25Mb2FkOl9sLHNldDpmdW5jdGlvbih0LGUsbixvKXsobz9sZDpmZCkodCxlKX19KSxtZD1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxleGhpYml0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHpyKHtjbGFzc2VzOmUuZGlzYWJsZWQoKT9lLmRpc2FibGVDbGFzcy50b0FycmF5KCk6W119KX0sZXZlbnRzOmZ1bmN0aW9uKG4sdCl7cmV0dXJuIG51KFtTcihJaSgpLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIEVsKHQsbil9KSxiYShuLHQsX2wpXSl9fSksZ2Q9eGEoe2ZpZWxkczpbSW8oXCJkaXNhYmxlZFwiLFQpLEVvKFwidXNlTmF0aXZlXCIsITApLHdvKFwiZGlzYWJsZUNsYXNzXCIpLEp1KFwib25EaXNhYmxlZFwiKSxKdShcIm9uRW5hYmxlZFwiKV0sbmFtZTpcImRpc2FibGluZ1wiLGFjdGl2ZTptZCxhcGlzOmRkfSkscGQ9T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsZGVoaWdobGlnaHRBbGw6ZnVuY3Rpb24odCxlLG4pe3JldHVybiBEbCh0LGUsMCxbXSl9LGRlaGlnaGxpZ2h0OmZ1bmN0aW9uKHQsZSxuLG8pe1lsKDAsZSwwLG8pJiYocXIoby5lbGVtZW50LGUuaGlnaGxpZ2h0Q2xhc3MpLGUub25EZWhpZ2hsaWdodCh0LG8pLHZyKG8sdHUoKSkpfSxoaWdobGlnaHQ6QWwsaGlnaGxpZ2h0Rmlyc3Q6ZnVuY3Rpb24oZSxuLHQpe3FsKGUsbikuZWFjaChmdW5jdGlvbih0KXtBbChlLG4sMCx0KX0pfSxoaWdobGlnaHRMYXN0OmZ1bmN0aW9uKGUsbix0KXtLbChlLG4pLmVhY2goZnVuY3Rpb24odCl7QWwoZSxuLDAsdCl9KX0saGlnaGxpZ2h0QXQ6ZnVuY3Rpb24oZSxuLHQsbyl7dmFyIHIsaSx1O2k9byx1PXZzKChyPWUpLmVsZW1lbnQsXCIuXCIrbi5pdGVtQ2xhc3MpLHZ0LmZyb20odVtpXSkuZm9sZChmdW5jdGlvbigpe3JldHVybiBObi5lcnJvcihuZXcgRXJyb3IoXCJObyBlbGVtZW50IGZvdW5kIHdpdGggaW5kZXggXCIraSkpfSxyLmdldFN5c3RlbSgpLmdldEJ5RG9tKS5mb2xkKGZ1bmN0aW9uKHQpe3Rocm93IHR9LGZ1bmN0aW9uKHQpe0FsKGUsbiwwLHQpfSl9LGhpZ2hsaWdodEJ5OmZ1bmN0aW9uKGUsbix0LG8pe04oSmwoZSxuKSxvKS5lYWNoKGZ1bmN0aW9uKHQpe0FsKGUsbiwwLHQpfSl9LGlzSGlnaGxpZ2h0ZWQ6WWwsZ2V0SGlnaGxpZ2h0ZWQ6ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBJdShlLmVsZW1lbnQsXCIuXCIrdC5oaWdobGlnaHRDbGFzcykuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gZS5nZXRTeXN0ZW0oKS5nZXRCeURvbSh0KS50b09wdGlvbmFsKCl9KX0sZ2V0Rmlyc3Q6cWwsZ2V0TGFzdDpLbCxnZXRQcmV2aW91czpmdW5jdGlvbih0LGUsbil7cmV0dXJuIEJsKHQsZSwwLC0xKX0sZ2V0TmV4dDpmdW5jdGlvbih0LGUsbil7cmV0dXJuIEJsKHQsZSwwLDEpfSxnZXRDYW5kaWRhdGVzOkpsfSksaGQ9eGEoe2ZpZWxkczpbbW8oXCJoaWdobGlnaHRDbGFzc1wiKSxtbyhcIml0ZW1DbGFzc1wiKSxKdShcIm9uSGlnaGxpZ2h0XCIpLEp1KFwib25EZWhpZ2hsaWdodFwiKV0sbmFtZTpcImhpZ2hsaWdodGluZ1wiLGFwaXM6cGR9KSx2ZD1bOF0sYmQ9WzldLHlkPVsxM10seGQ9WzI3XSx3ZD1bMzJdLFNkPVszN10sa2Q9WzM4XSxDZD1bMzldLE9kPVs0MF0sX2Q9TyhWbCk7ZnVuY3Rpb24gVGQodCxlLG4sbyxhKXtmdW5jdGlvbiBjKGUsbix0LG8scil7dmFyIGk9dChlLG4sbyxyKSx1PW4uZXZlbnQ7cmV0dXJuIE4oaSxmdW5jdGlvbih0KXtyZXR1cm4gdC5tYXRjaGVzKHUpfSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LmNsYXNzaWZpY2F0aW9ufSkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gdChlLG4sbyxyKX0pfXZhciByPXtzY2hlbWE6ZnVuY3Rpb24oKXtyZXR1cm4gdC5jb25jYXQoW0VvKFwiZm9jdXNNYW5hZ2VyXCIsVWwoKSksRG8oXCJmb2N1c0luc2lkZVwiLFwib25Gb2N1c1wiLGlvKGZ1bmN0aW9uKHQpe3JldHVybiB3dChbXCJvbkZvY3VzXCIsXCJvbkVudGVyT3JTcGFjZVwiLFwib25BcGlcIl0sdCk/Tm4udmFsdWUodCk6Tm4uZXJyb3IoXCJJbnZhbGlkIHZhbHVlIGZvciBmb2N1c0luc2lkZVwiKX0pKSx0YShcImhhbmRsZXJcIixyKSx0YShcInN0YXRlXCIsZSksdGEoXCJzZW5kRm9jdXNJblwiLGEpXSl9LHByb2Nlc3NLZXk6Yyx0b0V2ZW50czpmdW5jdGlvbihpLHUpe3ZhciB0PWkuZm9jdXNJbnNpZGUhPT1abC5PbkZvY3VzTW9kZT92dC5ub25lKCk6YShpKS5tYXAoZnVuY3Rpb24obil7cmV0dXJuIENyKEFpKCksZnVuY3Rpb24odCxlKXtuKHQsaSx1KSxlLnN0b3AoKX0pfSksZT1bQ3IoeGkoKSxmdW5jdGlvbihvLHIpe2MobyxyLG4saSx1KS5mb2xkKGZ1bmN0aW9uKCl7dmFyIGU9byxuPXIsdD1ObCh3ZC5jb25jYXQoeWQpKShuLmV2ZW50KTtpLmZvY3VzSW5zaWRlPT09WmwuT25FbnRlck9yU3BhY2VNb2RlJiZ0JiZncihlLG4pJiZhKGkpLmVhY2goZnVuY3Rpb24odCl7dChlLGksdSksbi5zdG9wKCl9KX0sZnVuY3Rpb24odCl7ci5zdG9wKCl9KX0pLENyKHdpKCksZnVuY3Rpb24odCxlKXtjKHQsZSxvLGksdSkuZWFjaChmdW5jdGlvbih0KXtlLnN0b3AoKX0pfSldO3JldHVybiBudSh0LnRvQXJyYXkoKS5jb25jYXQoZSkpfX07cmV0dXJuIHJ9ZnVuY3Rpb24gRWQodCl7ZnVuY3Rpb24gYSh0LGUpe3JldHVybiAwPHhlKHQudmlzaWJpbGl0eVNlbGVjdG9yLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIFJ1KGUsdCl9KS5nZXRPcihlKSl9ZnVuY3Rpb24gZShlLG4sdCl7dmFyIG89bixyPUYodnMoZS5lbGVtZW50LG8uc2VsZWN0b3IpLGZ1bmN0aW9uKHQpe3JldHVybiBhKG8sdCl9KTt2dC5mcm9tKHJbby5maXJzdFRhYnN0b3BdKS5lYWNoKGZ1bmN0aW9uKHQpe24uZm9jdXNNYW5hZ2VyLnNldChlLHQpfSl9ZnVuY3Rpb24gbyhuLHQscixpKXt2YXIgZSx1PXZzKG4uZWxlbWVudCxyLnNlbGVjdG9yKTtyZXR1cm4oZT1yKS5mb2N1c01hbmFnZXIuZ2V0KG4pLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIFJ1KHQsZS5zZWxlY3Rvcil9KS5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiBQKHUsQyh6dCx0KSkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gZT1uLG89cixpKHUsdCxmdW5jdGlvbih0KXtyZXR1cm4gYShlPW8sbj10KSYmZS51c2VUYWJzdG9wQXQobik7dmFyIGUsbn0pLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gby5jeWNsaWM/dnQuc29tZSghMCk6dnQubm9uZSgpfSxmdW5jdGlvbih0KXtyZXR1cm4gby5mb2N1c01hbmFnZXIuc2V0KGUsdCksdnQuc29tZSghMCl9KTt2YXIgZSxvfSl9KX12YXIgbj1bd28oXCJvbkVzY2FwZVwiKSx3byhcIm9uRW50ZXJcIiksRW8oXCJzZWxlY3RvclwiLCdbZGF0YS1hbGxveS10YWJzdG9wPVwidHJ1ZVwiXTpub3QoOmRpc2FibGVkKScpLEVvKFwiZmlyc3RUYWJzdG9wXCIsMCksRW8oXCJ1c2VUYWJzdG9wQXRcIixEKSx3byhcInZpc2liaWxpdHlTZWxlY3RvclwiKV0uY29uY2F0KFt0XSkscj1ydChbTGwoUGwoW1ZsLE5sKGJkKV0pLGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbyh0LDAsbixuLmN5Y2xpYz9NbDpGbCl9KSxMbChObChiZCksZnVuY3Rpb24odCxlLG4pe3JldHVybiBvKHQsMCxuLG4uY3ljbGljP0lsOlJsKX0pLExsKE5sKHhkKSxmdW5jdGlvbihlLG4sdCl7cmV0dXJuIHQub25Fc2NhcGUuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gdChlLG4pfSl9KSxMbChQbChbX2QsTmwoeWQpXSksZnVuY3Rpb24oZSxuLHQpe3JldHVybiB0Lm9uRW50ZXIuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gdChlLG4pfSl9KV0pLGk9cnQoW10pO3JldHVybiBUZChuLHh1LmluaXQscixpLGZ1bmN0aW9uKCl7cmV0dXJuIHZ0LnNvbWUoZSl9KX1mdW5jdGlvbiBEZCh0LGUsbil7cmV0dXJuIE9sKG4pJiZObCh3ZCkoZS5ldmVudCk/dnQubm9uZSgpOih4cih0LG4sSWkoKSksdnQuc29tZSghMCkpfWZ1bmN0aW9uIEFkKHQsZSl7cmV0dXJuIHZ0LnNvbWUoITApfWZ1bmN0aW9uIEJkKHQsZSxuKXtyZXR1cm4gbi5leGVjdXRlKHQsZSx0LmVsZW1lbnQpfWZ1bmN0aW9uIE1kKCl7dmFyIG49Z2MoKTtyZXR1cm4gd3Uoe3JlYWRTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBuLmdldCgpLm1hcChmdW5jdGlvbih0KXtyZXR1cm57bnVtUm93czpTdHJpbmcodC5udW1Sb3dzKSxudW1Db2x1bW5zOlN0cmluZyh0Lm51bUNvbHVtbnMpfX0pLmdldE9yKHtudW1Sb3dzOlwiP1wiLG51bUNvbHVtbnM6XCI/XCJ9KX0sc2V0R3JpZFNpemU6ZnVuY3Rpb24odCxlKXtuLnNldCh7bnVtUm93czp0LG51bUNvbHVtbnM6ZX0pfSxnZXROdW1Sb3dzOmZ1bmN0aW9uKCl7cmV0dXJuIG4uZ2V0KCkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0Lm51bVJvd3N9KX0sZ2V0TnVtQ29sdW1uczpmdW5jdGlvbigpe3JldHVybiBuLmdldCgpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5udW1Db2x1bW5zfSl9fSl9ZnVuY3Rpb24gRmQoaSl7cmV0dXJuIGZ1bmN0aW9uKHQsZSxuLG8pe3ZhciByPWkodC5lbGVtZW50KTtyZXR1cm4gdGcocix0LGUsbixvKX19ZnVuY3Rpb24gSWQodCxlKXtyZXR1cm4gRmQoQ2ModCxlKSl9ZnVuY3Rpb24gUmQodCxlKXtyZXR1cm4gRmQoQ2MoZSx0KSl9ZnVuY3Rpb24gTmQocil7cmV0dXJuIGZ1bmN0aW9uKHQsZSxuLG8pe3JldHVybiB0ZyhyLHQsZSxuLG8pfX1mdW5jdGlvbiBQZCh0KXtyZXR1cm4hKChlPXQuZG9tKS5vZmZzZXRXaWR0aDw9MCYmZS5vZmZzZXRIZWlnaHQ8PTApO3ZhciBlfWZ1bmN0aW9uIFZkKHQsZSxuKXt2YXIgbyxyPUYodnModCxuKSxQZCk7cmV0dXJuIFAobz1yLGZ1bmN0aW9uKHQpe3JldHVybiB6dCh0LGUpfSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybntpbmRleDp0LGNhbmRpZGF0ZXM6b319KX1mdW5jdGlvbiBIZCh0LGUpe3JldHVybiBQKHQsZnVuY3Rpb24odCl7cmV0dXJuIHp0KGUsdCl9KX1mdW5jdGlvbiBMZChuLHQsbyxlKXtyZXR1cm4gZShNYXRoLmZsb29yKHQvbyksdCVvKS5iaW5kKGZ1bmN0aW9uKHQpe3ZhciBlPXQucm93Km8rdC5jb2x1bW47cmV0dXJuIDA8PWUmJmU8bi5sZW5ndGg/dnQuc29tZShuW2VdKTp2dC5ub25lKCl9KX1mdW5jdGlvbiB6ZChyLHQsaSx1LGEpe3JldHVybiBMZChyLHQsdSxmdW5jdGlvbih0LGUpe3ZhciBuPXQ9PT1pLTE/ci5sZW5ndGgtdCp1OnUsbz1vYShlLGEsMCxuLTEpO3JldHVybiB2dC5zb21lKHtyb3c6dCxjb2x1bW46b30pfSl9ZnVuY3Rpb24gVWQoaSx0LHUsYSxjKXtyZXR1cm4gTGQoaSx0LGEsZnVuY3Rpb24odCxlKXt2YXIgbj1vYSh0LGMsMCx1LTEpLG89bj09PXUtMT9pLmxlbmd0aC1uKmE6YSxyPVdhKGUsMCxvLTEpO3JldHVybiB2dC5zb21lKHtyb3c6bixjb2x1bW46cn0pfSl9ZnVuY3Rpb24gamQoZSxuLHQpe0l1KGUuZWxlbWVudCxuLnNlbGVjdG9yKS5lYWNoKGZ1bmN0aW9uKHQpe24uZm9jdXNNYW5hZ2VyLnNldChlLHQpfSl9ZnVuY3Rpb24gV2Qocil7cmV0dXJuIGZ1bmN0aW9uKHQsZSxuLG8pe3JldHVybiBWZCh0LGUsbi5zZWxlY3RvcikuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gcih0LmNhbmRpZGF0ZXMsdC5pbmRleCxvLmdldE51bVJvd3MoKS5nZXRPcihuLmluaXRTaXplLm51bVJvd3MpLG8uZ2V0TnVtQ29sdW1ucygpLmdldE9yKG4uaW5pdFNpemUubnVtQ29sdW1ucykpfSl9fWZ1bmN0aW9uIEdkKHQsZSxuKXtyZXR1cm4gbi5jYXB0dXJlVGFiP3Z0LnNvbWUoITApOnZ0Lm5vbmUoKX1mdW5jdGlvbiBYZCh0LGUsbixpKXt2YXIgdT1mdW5jdGlvbih0LGUsbil7dmFyIG8scj1vYShlLGksMCxuLmxlbmd0aC0xKTtyZXR1cm4gcj09PXQ/dnQubm9uZSgpOlwiYnV0dG9uXCI9PT1GdChvPW5bcl0pJiZcImRpc2FibGVkXCI9PT1pZShvLFwiZGlzYWJsZWRcIik/dSh0LHIsbik6dnQuZnJvbShuW3JdKX07cmV0dXJuIFZkKHQsbixlKS5iaW5kKGZ1bmN0aW9uKHQpe3ZhciBlPXQuaW5kZXgsbj10LmNhbmRpZGF0ZXM7cmV0dXJuIHUoZSxlLG4pfSl9ZnVuY3Rpb24gWWQoZSxuLG8pe3JldHVybihyPW8pLmZvY3VzTWFuYWdlci5nZXQoZSkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gUnUodCxyLnNlbGVjdG9yKX0pLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIG8uZXhlY3V0ZShlLG4sdCl9KTt2YXIgcn1mdW5jdGlvbiBxZChlLG4sdCl7bi5nZXRJbml0aWFsKGUpLm9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gSXUoZS5lbGVtZW50LG4uc2VsZWN0b3IpfSkuZWFjaChmdW5jdGlvbih0KXtuLmZvY3VzTWFuYWdlci5zZXQoZSx0KX0pfWZ1bmN0aW9uIEtkKHQsZSxuKXtyZXR1cm4gWGQodCxuLnNlbGVjdG9yLGUsLTEpfWZ1bmN0aW9uIEpkKHQsZSxuKXtyZXR1cm4gWGQodCxuLnNlbGVjdG9yLGUsMSl9ZnVuY3Rpb24gJGQocil7cmV0dXJuIGZ1bmN0aW9uKHQsZSxuLG8pe3JldHVybiByKHQsZSxuLG8pLmJpbmQoZnVuY3Rpb24oKXtyZXR1cm4gbi5leGVjdXRlT25Nb3ZlP1lkKHQsZSxuKTp2dC5zb21lKCEwKX0pfX1mdW5jdGlvbiBRZCh0LGUsbil7cmV0dXJuIG4ub25Fc2NhcGUodCxlKX1mdW5jdGlvbiBaZCh0LGUsbil7cmV0dXJuIHZ0LmZyb20odFtlXSkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gdnQuZnJvbSh0W25dKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJue3Jvd0luZGV4OmUsY29sdW1uSW5kZXg6bixjZWxsOnR9fSl9KX1mdW5jdGlvbiB0bSh0LGUsbixvKXtyZXR1cm4gWmQodCxlLG9hKG4sbywwLHRbZV0ubGVuZ3RoLTEpKX1mdW5jdGlvbiBlbSh0LGUsbixvKXt2YXIgcj1vYShuLG8sMCx0Lmxlbmd0aC0xKSxpPXRbcl0ubGVuZ3RoO3JldHVybiBaZCh0LHIsV2EoZSwwLGktMSkpfWZ1bmN0aW9uIG5tKHQsZSxuLG8pe3ZhciByPXRbZV0ubGVuZ3RoO3JldHVybiBaZCh0LGUsV2EobitvLDAsci0xKSl9ZnVuY3Rpb24gb20odCxlLG4sbyl7dmFyIHI9V2EobitvLDAsdC5sZW5ndGgtMSksaT10W3JdLmxlbmd0aDtyZXR1cm4gWmQodCxyLFdhKGUsMCxpLTEpKX1mdW5jdGlvbiBybShlLG4sdCl7bi5wcmV2aW91c1NlbGVjdG9yKGUpLm9yVGh1bmsoZnVuY3Rpb24oKXt2YXIgdD1uLnNlbGVjdG9ycztyZXR1cm4gSXUoZS5lbGVtZW50LHQuY2VsbCl9KS5lYWNoKGZ1bmN0aW9uKHQpe24uZm9jdXNNYW5hZ2VyLnNldChlLHQpfSl9ZnVuY3Rpb24gaW0odCxvKXtyZXR1cm4gZnVuY3Rpb24oZSxuLGkpe3ZhciB1PWkuY3ljbGVzP3Q6bztyZXR1cm4gUnUobixpLnNlbGVjdG9ycy5yb3cpLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIEhkKHZzKHQsaS5zZWxlY3RvcnMuY2VsbCksbikuYmluZChmdW5jdGlvbihvKXt2YXIgcj12cyhlLGkuc2VsZWN0b3JzLnJvdyk7cmV0dXJuIEhkKHIsdCkuYmluZChmdW5jdGlvbih0KXt2YXIgZSxuPShlPWksQihyLGZ1bmN0aW9uKHQpe3JldHVybiB2cyh0LGUuc2VsZWN0b3JzLmNlbGwpfSkpO3JldHVybiB1KG4sdCxvKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuY2VsbH0pfSl9KX0pfX1mdW5jdGlvbiB1bShlLG4sbyl7cmV0dXJuIG8uZm9jdXNNYW5hZ2VyLmdldChlKS5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiBvLmV4ZWN1dGUoZSxuLHQpfSl9ZnVuY3Rpb24gYW0oZSxuLHQpe0l1KGUuZWxlbWVudCxuLnNlbGVjdG9yKS5lYWNoKGZ1bmN0aW9uKHQpe24uZm9jdXNNYW5hZ2VyLnNldChlLHQpfSl9ZnVuY3Rpb24gY20odCxlLG4pe3JldHVybiBYZCh0LG4uc2VsZWN0b3IsZSwtMSl9ZnVuY3Rpb24gc20odCxlLG4pe3JldHVybiBYZCh0LG4uc2VsZWN0b3IsZSwxKX1mdW5jdGlvbiBsbSh0LGUsbixvKXt2YXIgcj10LmdldFN5c3RlbSgpLmJ1aWxkKG8pO2dmKHQscixuKX1mdW5jdGlvbiBmbSh0LGUsbixvKXtOKElnKHQpLGZ1bmN0aW9uKHQpe3JldHVybiB6dChvLmVsZW1lbnQsdC5lbGVtZW50KX0pLmVhY2goVnMpfWZ1bmN0aW9uIGRtKGUsdCxuLHIsbyl7dmFyIGk9SWcoZSk7cmV0dXJuIHZ0LmZyb20oaVtyXSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBmbShlLDAsMCx0KSxvLmVhY2goZnVuY3Rpb24odCl7bG0oZSwwLGZ1bmN0aW9uKHQsZSl7dmFyIG4sbz1lO0p0KG49dCxyKS5mb2xkKGZ1bmN0aW9uKCl7VG4obixvKX0sZnVuY3Rpb24odCl7RWUodCxvKX0pfSx0KX0pLHR9KX1mdW5jdGlvbiBtbSh0LGUpe3ZhciBuLG87cmV0dXJue2tleTp0LHZhbHVlOntjb25maWc6e30sbWU6KG49dCxvPW51KGUpLHhhKHtmaWVsZHM6W21vKFwiZW5hYmxlZFwiKV0sbmFtZTpuLGFjdGl2ZTp7ZXZlbnRzOnJ0KG8pfX0pKSxjb25maWdBc1JhdzpydCh7fSksaW5pdGlhbENvbmZpZzp7fSxzdGF0ZTp4dX19fWZ1bmN0aW9uIGdtKHQsZSl7ZS5pZ25vcmV8fChrYSh0LmVsZW1lbnQpLGUub25Gb2N1cyh0KSl9ZnVuY3Rpb24gcG0odCxlLG4pe3ZhciBvPWUuYXJpYTtvLnVwZGF0ZSh0LG8sbi5nZXQoKSl9ZnVuY3Rpb24gaG0oZSx0LG4pe3QudG9nZ2xlQ2xhc3MuZWFjaChmdW5jdGlvbih0KXsobi5nZXQoKT9ZcjpxcikoZS5lbGVtZW50LHQpfSl9ZnVuY3Rpb24gdm0odCxlLG4pe1ltKHQsZSxuLCFuLmdldCgpKX1mdW5jdGlvbiBibSh0LGUsbil7bi5zZXQoITApLGhtKHQsZSxuKSxwbSh0LGUsbil9ZnVuY3Rpb24geW0odCxlLG4pe24uc2V0KCExKSxobSh0LGUsbikscG0odCxlLG4pfWZ1bmN0aW9uIHhtKHQsZSxuKXtZbSh0LGUsbixlLnNlbGVjdGVkKX1mdW5jdGlvbiB3bSgpe2Z1bmN0aW9uIHQodCxlKXtlLnN0b3AoKSx5cih0KX1yZXR1cm5bQ3IoQ2koKSx0KSxDcihOaSgpLHQpLERyKHNpKCkpLERyKG1pKCkpXX1mdW5jdGlvbiBTbSh0KXtyZXR1cm4gbnUoZnQoW3QubWFwKGZ1bmN0aW9uKG4pe3JldHVybiB1dShmdW5jdGlvbih0LGUpe24odCksZS5zdG9wKCl9KX0pLnRvQXJyYXkoKSx3bSgpXSkpfWZ1bmN0aW9uIGttKHQpeyhfYSh0LmVsZW1lbnQpLmlzTm9uZSgpfHxWZy5pc0ZvY3VzZWQodCkpJiYoVmcuaXNGb2N1c2VkKHQpfHxWZy5mb2N1cyh0KSxicih0LFVnLHtpdGVtOnR9KSl9ZnVuY3Rpb24gQ20odCl7YnIodCxqZyx7aXRlbTp0fSl9ZnVuY3Rpb24gT20odCxlKXtyZXR1cm4gdC54K3Qud2lkdGgvMi1lLndpZHRoLzJ9ZnVuY3Rpb24gX20odCxlKXtyZXR1cm4gdC54K3Qud2lkdGgtZS53aWR0aH1mdW5jdGlvbiBUbSh0LGUpe3JldHVybiB0LnkrdC5oZWlnaHQtZS5oZWlnaHR9ZnVuY3Rpb24gRW0odCxlKXtyZXR1cm4gdC55K3QuaGVpZ2h0LzItZS5oZWlnaHQvMn1mdW5jdGlvbiBEbSh0LGUsbil7cmV0dXJuIG5hKF9tKHQsZSksVG0odCxlKSxuLmluc2V0U291dGh3ZXN0KCksSGEoKSxcInNvdXRod2VzdFwiLHJhKHQse3JpZ2h0OjAsYm90dG9tOjN9KSxhcCl9ZnVuY3Rpb24gQW0odCxlLG4pe3JldHVybiBuYSh0LngsVG0odCxlKSxuLmluc2V0U291dGhlYXN0KCksVmEoKSxcInNvdXRoZWFzdFwiLHJhKHQse2xlZnQ6MSxib3R0b206M30pLGFwKX1mdW5jdGlvbiBCbSh0LGUsbil7cmV0dXJuIG5hKF9tKHQsZSksdC55LG4uaW5zZXROb3J0aHdlc3QoKSxQYSgpLFwibm9ydGh3ZXN0XCIscmEodCx7cmlnaHQ6MCx0b3A6Mn0pLGFwKX1mdW5jdGlvbiBNbSh0LGUsbil7cmV0dXJuIG5hKHQueCx0Lnksbi5pbnNldE5vcnRoZWFzdCgpLE5hKCksXCJub3J0aGVhc3RcIixyYSh0LHtsZWZ0OjEsdG9wOjJ9KSxhcCl9ZnVuY3Rpb24gRm0odCxlLG4pe3JldHVybiBuYShfbSh0LGUpLEVtKHQsZSksbi5pbnNldEVhc3QoKSxqYSgpLFwiZWFzdFwiLHJhKHQse3JpZ2h0OjB9KSxhcCl9ZnVuY3Rpb24gSW0odCxlLG4pe3JldHVybiBuYSh0LngsRW0odCxlKSxuLmluc2V0V2VzdCgpLFVhKCksXCJ3ZXN0XCIscmEodCx7bGVmdDoxfSksYXApfWZ1bmN0aW9uIFJtKHQpe3N3aXRjaCh0KXtjYXNlXCJub3J0aFwiOnJldHVybiBjcDtjYXNlXCJub3J0aGVhc3RcIjpyZXR1cm4gTW07Y2FzZVwibm9ydGh3ZXN0XCI6cmV0dXJuIEJtO2Nhc2VcInNvdXRoXCI6cmV0dXJuIHNwO2Nhc2VcInNvdXRoZWFzdFwiOnJldHVybiBBbTtjYXNlXCJzb3V0aHdlc3RcIjpyZXR1cm4gRG07Y2FzZVwiZWFzdFwiOnJldHVybiBGbTtjYXNlXCJ3ZXN0XCI6cmV0dXJuIEltfX1mdW5jdGlvbiBObSh0LGUsbixvLHIpe3JldHVybiBzYyhvKS5tYXAoUm0pLmdldE9yKGNwKSh0LGUsbixvLHIpfWZ1bmN0aW9uIFBtKHQpe3N3aXRjaCh0KXtjYXNlXCJub3J0aFwiOnJldHVybiBzcDtjYXNlXCJub3J0aGVhc3RcIjpyZXR1cm4gQW07Y2FzZVwibm9ydGh3ZXN0XCI6cmV0dXJuIERtO2Nhc2VcInNvdXRoXCI6cmV0dXJuIGNwO2Nhc2VcInNvdXRoZWFzdFwiOnJldHVybiBNbTtjYXNlXCJzb3V0aHdlc3RcIjpyZXR1cm4gQm07Y2FzZVwiZWFzdFwiOnJldHVybiBJbTtjYXNlXCJ3ZXN0XCI6cmV0dXJuIEZtfX1mdW5jdGlvbiBWbSh0LGUsbixvLHIpe3JldHVybiBzYyhvKS5tYXAoUG0pLmdldE9yKGNwKSh0LGUsbixvLHIpfWZ1bmN0aW9uIEhtKHQpe3ZhciBlPXZvaWQgMCE9PXQudWlkJiZldCh0LFwidWlkXCIpP3QudWlkOnB1KFwibWVtZW50b1wiKTtyZXR1cm57Z2V0OmZ1bmN0aW9uKHQpe3JldHVybiB0LmdldFN5c3RlbSgpLmdldEJ5VWlkKGUpLmdldE9yRGllKCl9LGdldE9wdDpmdW5jdGlvbih0KXtyZXR1cm4gdC5nZXRTeXN0ZW0oKS5nZXRCeVVpZChlKS50b09wdGlvbmFsKCl9LGFzU3BlYzpmdW5jdGlvbigpe3JldHVybiBsdChsdCh7fSx0KSx7dWlkOmV9KX19fWZ1bmN0aW9uIExtKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0dCh0LGdwKS5nZXRPcihcIiFub3QgZm91bmQhXCIpfX1mdW5jdGlvbiB6bSh0LGUpe3ZhciBuLG89dC50b0xvd2VyQ2FzZSgpO2lmKGRwLmlzUnRsKCkpe3ZhciByPUF0KG49byxcIi1ydGxcIik/bjpuK1wiLXJ0bFwiO3JldHVybiBUdChlLHIpP3I6b31yZXR1cm4gb31mdW5jdGlvbiBVbSh0LGUpe3JldHVybiB0dChlLHptKHQsZSkpfWZ1bmN0aW9uIGptKHQsZSl7dmFyIG49ZSgpO3JldHVybiBVbSh0LG4pLmdldE9yVGh1bmsoTG0obikpfWZ1bmN0aW9uIFdtKCl7cmV0dXJuIG1tKFwiYWRkLWZvY3VzYWJsZVwiLFtvdShmdW5jdGlvbih0KXt2YXIgZSxuLG87ZT10LmVsZW1lbnQsbj1cInN2Z1wiLG89ZnVuY3Rpb24odCl7cmV0dXJuIEh0KHQsbil9LE4oZS5kb20uY2hpbGROb2RlcyxmdW5jdGlvbih0KXtyZXR1cm4gbyhNdC5mcm9tRG9tKHQpKX0pLm1hcChNdC5mcm9tRG9tKS5lYWNoKGZ1bmN0aW9uKHQpe3JldHVybiBvZSh0LFwiZm9jdXNhYmxlXCIsXCJmYWxzZVwiKX0pfSldKX1mdW5jdGlvbiBHbSh0LGUsbixvKXt2YXIgcixpLHUsYT0odT1lLGRwLmlzUnRsKCkmJlR0KG1wLHUpP1tcInRveC1pY29uLS1mbGlwXCJdOltdKSxjPXR0KG4sem0oZSxuKSkub3IobykuZ2V0T3JUaHVuayhMbShuKSk7cmV0dXJue2RvbTp7dGFnOnQudGFnLGF0dHJpYnV0ZXM6bnVsbCE9PShyPXQuYXR0cmlidXRlcykmJnZvaWQgMCE9PXI/cjp7fSxjbGFzc2VzOnQuY2xhc3Nlcy5jb25jYXQoYSksaW5uZXJIdG1sOmN9LGJlaGF2aW91cnM6ZWMoVihWKFtdLG51bGwhPT0oaT10LmJlaGF2aW91cnMpJiZ2b2lkIDAhPT1pP2k6W10sITApLFtXbSgpXSwhMSkpfX1mdW5jdGlvbiBYbSh0LGUsbixvKXtyZXR1cm4gdm9pZCAwPT09byYmKG89dnQubm9uZSgpKSxHbShlLHQsbigpLG8pfSh0Zj1abD1abHx8e30pLk9uRm9jdXNNb2RlPVwib25Gb2N1c1wiLHRmLk9uRW50ZXJPclNwYWNlTW9kZT1cIm9uRW50ZXJPclNwYWNlXCIsdGYuT25BcGlNb2RlPVwib25BcGlcIjtmdW5jdGlvbiBZbSh0LGUsbixvKXsobz9ibTp5bSkodCxlLG4pfWZ1bmN0aW9uIHFtKHQsZSxuKXtvZSh0LmVsZW1lbnQsXCJhcmlhLWV4cGFuZGVkXCIsbil9ZnVuY3Rpb24gS20odCl7cmV0dXJuXCJwcmVwYXJlZFwiPT09dC50eXBlP3Z0LnNvbWUodC5tZW51KTp2dC5ub25lKCl9dmFyIEptPUVkKGNyKFwiY3ljbGljXCIsVCkpLCRtPUVkKGNyKFwiY3ljbGljXCIsRCkpLFFtPVRkKFtFbyhcImV4ZWN1dGVcIixEZCksRW8oXCJ1c2VTcGFjZVwiLCExKSxFbyhcInVzZUVudGVyXCIsITApLEVvKFwidXNlQ29udHJvbEVudGVyXCIsITEpLEVvKFwidXNlRG93blwiLCExKV0seHUuaW5pdCxmdW5jdGlvbih0LGUsbixvKXt2YXIgcj1uLnVzZVNwYWNlJiYhT2wodC5lbGVtZW50KT93ZDpbXSxpPW4udXNlRW50ZXI/eWQ6W10sdT1uLnVzZURvd24/T2Q6W107cmV0dXJuW0xsKE5sKHIuY29uY2F0KGkpLmNvbmNhdCh1KSksQmQpXS5jb25jYXQobi51c2VDb250cm9sRW50ZXI/W0xsKFBsKFtIbCxObCh5ZCldKSxCZCldOltdKX0sZnVuY3Rpb24odCxlLG4sbyl7cmV0dXJuIG4udXNlU3BhY2UmJiFPbCh0LmVsZW1lbnQpP1tMbChObCh3ZCksQWQpXTpbXX0sZnVuY3Rpb24oKXtyZXR1cm4gdnQubm9uZSgpfSksWm09T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsZmxhdGdyaWQ6TWQsaW5pdDpmdW5jdGlvbih0KXtyZXR1cm4gdC5zdGF0ZSh0KX19KSx0Zz1mdW5jdGlvbihlLG4sdCxvLHIpe3JldHVybiBvLmZvY3VzTWFuYWdlci5nZXQobikuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gZShuLmVsZW1lbnQsdCxvLHIpfSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBvLmZvY3VzTWFuYWdlci5zZXQobix0KSwhMH0pfSxlZz1OZCxuZz1OZCxvZz1OZCxyZz1XZChmdW5jdGlvbih0LGUsbixvKXtyZXR1cm4gemQodCxlLG4sbywtMSl9KSxpZz1XZChmdW5jdGlvbih0LGUsbixvKXtyZXR1cm4gemQodCxlLG4sbywxKX0pLHVnPVdkKGZ1bmN0aW9uKHQsZSxuLG8pe3JldHVybiBVZCh0LGUsbixvLC0xKX0pLGFnPVdkKGZ1bmN0aW9uKHQsZSxuLG8pe3JldHVybiBVZCh0LGUsbixvLDEpfSksY2c9VGQoW21vKFwic2VsZWN0b3JcIiksRW8oXCJleGVjdXRlXCIsRGQpLCR1KFwib25Fc2NhcGVcIiksRW8oXCJjYXB0dXJlVGFiXCIsITEpLElhKCldLE1kLHJ0KFtMbChObChTZCksSWQocmcsaWcpKSxMbChObChDZCksUmQocmcsaWcpKSxMbChObChrZCksZWcodWcpKSxMbChObChPZCksbmcoYWcpKSxMbChQbChbVmwsTmwoYmQpXSksR2QpLExsKFBsKFtfZCxObChiZCldKSxHZCksTGwoTmwoeGQpLGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbi5vbkVzY2FwZSh0LGUpfSksTGwoTmwod2QuY29uY2F0KHlkKSksZnVuY3Rpb24oZSxuLG8sdCl7cmV0dXJuKHI9bykuZm9jdXNNYW5hZ2VyLmdldChlKS5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiBSdSh0LHIuc2VsZWN0b3IpfSkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gby5leGVjdXRlKGUsbix0KX0pO3ZhciByfSldKSxydChbTGwoTmwod2QpLEFkKV0pLGZ1bmN0aW9uKCl7cmV0dXJuIHZ0LnNvbWUoamQpfSksc2c9W21vKFwic2VsZWN0b3JcIiksRW8oXCJnZXRJbml0aWFsXCIsdnQubm9uZSksRW8oXCJleGVjdXRlXCIsRGQpLCR1KFwib25Fc2NhcGVcIiksRW8oXCJleGVjdXRlT25Nb3ZlXCIsITEpLEVvKFwiYWxsb3dWZXJ0aWNhbFwiLCEwKV0sbGc9cnQoW0xsKE5sKHdkKSxBZCldKSxmZz1UZChzZyx4dS5pbml0LGZ1bmN0aW9uKHQsZSxuLG8pe3ZhciByPVNkLmNvbmNhdChuLmFsbG93VmVydGljYWw/a2Q6W10pLGk9Q2QuY29uY2F0KG4uYWxsb3dWZXJ0aWNhbD9PZDpbXSk7cmV0dXJuW0xsKE5sKHIpLCRkKElkKEtkLEpkKSkpLExsKE5sKGkpLCRkKFJkKEtkLEpkKSkpLExsKE5sKHlkKSxZZCksTGwoTmwod2QpLFlkKSxMbChObCh4ZCksUWQpXX0sbGcsZnVuY3Rpb24oKXtyZXR1cm4gdnQuc29tZShxZCl9KSxkZz1bYm8oXCJzZWxlY3RvcnNcIixbbW8oXCJyb3dcIiksbW8oXCJjZWxsXCIpXSksRW8oXCJjeWNsZXNcIiwhMCksRW8oXCJwcmV2aW91c1NlbGVjdG9yXCIsdnQubm9uZSksRW8oXCJleGVjdXRlXCIsRGQpXSxtZz1pbShmdW5jdGlvbih0LGUsbil7cmV0dXJuIHRtKHQsZSxuLC0xKX0sZnVuY3Rpb24odCxlLG4pe3JldHVybiBubSh0LGUsbiwtMSl9KSxnZz1pbShmdW5jdGlvbih0LGUsbil7cmV0dXJuIHRtKHQsZSxuLDEpfSxmdW5jdGlvbih0LGUsbil7cmV0dXJuIG5tKHQsZSxuLDEpfSkscGc9aW0oZnVuY3Rpb24odCxlLG4pe3JldHVybiBlbSh0LG4sZSwtMSl9LGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gb20odCxuLGUsLTEpfSksaGc9aW0oZnVuY3Rpb24odCxlLG4pe3JldHVybiBlbSh0LG4sZSwxKX0sZnVuY3Rpb24odCxlLG4pe3JldHVybiBvbSh0LG4sZSwxKX0pLHZnPXJ0KFtMbChObChTZCksSWQobWcsZ2cpKSxMbChObChDZCksUmQobWcsZ2cpKSxMbChObChrZCksZWcocGcpKSxMbChObChPZCksbmcoaGcpKSxMbChObCh3ZC5jb25jYXQoeWQpKSxmdW5jdGlvbihlLG4sbyl7cmV0dXJuIF9hKGUuZWxlbWVudCkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gby5leGVjdXRlKGUsbix0KX0pfSldKSxiZz1ydChbTGwoTmwod2QpLEFkKV0pLHlnPVRkKGRnLHh1LmluaXQsdmcsYmcsZnVuY3Rpb24oKXtyZXR1cm4gdnQuc29tZShybSl9KSx4Zz1bbW8oXCJzZWxlY3RvclwiKSxFbyhcImV4ZWN1dGVcIixEZCksRW8oXCJtb3ZlT25UYWJcIiwhMSldLHdnPXJ0KFtMbChObChrZCksb2coY20pKSxMbChObChPZCksb2coc20pKSxMbChQbChbVmwsTmwoYmQpXSksZnVuY3Rpb24odCxlLG4sbyl7cmV0dXJuIG4ubW92ZU9uVGFiP29nKGNtKSh0LGUsbixvKTp2dC5ub25lKCl9KSxMbChQbChbX2QsTmwoYmQpXSksZnVuY3Rpb24odCxlLG4sbyl7cmV0dXJuIG4ubW92ZU9uVGFiP29nKHNtKSh0LGUsbixvKTp2dC5ub25lKCl9KSxMbChObCh5ZCksdW0pLExsKE5sKHdkKSx1bSldKSxTZz1ydChbTGwoTmwod2QpLEFkKV0pLGtnPVRkKHhnLHh1LmluaXQsd2csU2csZnVuY3Rpb24oKXtyZXR1cm4gdnQuc29tZShhbSl9KSxDZz1UZChbJHUoXCJvblNwYWNlXCIpLCR1KFwib25FbnRlclwiKSwkdShcIm9uU2hpZnRFbnRlclwiKSwkdShcIm9uTGVmdFwiKSwkdShcIm9uUmlnaHRcIiksJHUoXCJvblRhYlwiKSwkdShcIm9uU2hpZnRUYWJcIiksJHUoXCJvblVwXCIpLCR1KFwib25Eb3duXCIpLCR1KFwib25Fc2NhcGVcIiksRW8oXCJzdG9wU3BhY2VLZXl1cFwiLCExKSx3byhcImZvY3VzSW5cIildLHh1LmluaXQsZnVuY3Rpb24odCxlLG4pe3JldHVybltMbChObCh3ZCksbi5vblNwYWNlKSxMbChQbChbX2QsTmwoeWQpXSksbi5vbkVudGVyKSxMbChQbChbVmwsTmwoeWQpXSksbi5vblNoaWZ0RW50ZXIpLExsKFBsKFtWbCxObChiZCldKSxuLm9uU2hpZnRUYWIpLExsKFBsKFtfZCxObChiZCldKSxuLm9uVGFiKSxMbChObChrZCksbi5vblVwKSxMbChObChPZCksbi5vbkRvd24pLExsKE5sKFNkKSxuLm9uTGVmdCksTGwoTmwoQ2QpLG4ub25SaWdodCksTGwoTmwod2QpLG4ub25TcGFjZSksTGwoTmwoeGQpLG4ub25Fc2NhcGUpXX0sZnVuY3Rpb24odCxlLG4pe3JldHVybiBuLnN0b3BTcGFjZUtleXVwP1tMbChObCh3ZCksQWQpXTpbXX0sZnVuY3Rpb24odCl7cmV0dXJuIHQuZm9jdXNJbn0pLE9nPUptLnNjaGVtYSgpLF9nPSRtLnNjaGVtYSgpLFRnPWZnLnNjaGVtYSgpLEVnPWNnLnNjaGVtYSgpLERnPXlnLnNjaGVtYSgpLEFnPVFtLnNjaGVtYSgpLEJnPWtnLnNjaGVtYSgpLE1nPUNnLnNjaGVtYSgpLEZnPXdhKHticmFuY2hLZXk6XCJtb2RlXCIsYnJhbmNoZXM6T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsYWN5Y2xpYzpPZyxjeWNsaWM6X2csZmxvdzpUZyxmbGF0Z3JpZDpFZyxtYXRyaXg6RGcsZXhlY3V0aW9uOkFnLG1lbnU6Qmcsc3BlY2lhbDpNZ30pLG5hbWU6XCJrZXlpbmdcIixhY3RpdmU6e2V2ZW50czpmdW5jdGlvbih0LGUpe3JldHVybiB0LmhhbmRsZXIudG9FdmVudHModCxlKX19LGFwaXM6e2ZvY3VzSW46ZnVuY3Rpb24oZSxuLG8pe24uc2VuZEZvY3VzSW4obikuZm9sZChmdW5jdGlvbigpe2UuZ2V0U3lzdGVtKCkudHJpZ2dlckZvY3VzKGUuZWxlbWVudCxlLmVsZW1lbnQpfSxmdW5jdGlvbih0KXt0KGUsbixvKX0pfSxzZXRHcmlkU2l6ZTpmdW5jdGlvbih0LGUsbixvLHIpe2V0KG4sXCJzZXRHcmlkU2l6ZVwiKT9uLnNldEdyaWRTaXplKG8scik6Y29uc29sZS5lcnJvcihcIkxheW91dCBkb2VzIG5vdCBzdXBwb3J0IHNldEdyaWRTaXplXCIpfX0sc3RhdGU6Wm19KSxJZz1mdW5jdGlvbih0LGUpe3JldHVybiB0LmNvbXBvbmVudHMoKX0sUmc9eGEoe2ZpZWxkczpbXSxuYW1lOlwicmVwbGFjaW5nXCIsYXBpczpPYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxhcHBlbmQ6ZnVuY3Rpb24odCxlLG4sbyl7bG0odCwwLFRuLG8pfSxwcmVwZW5kOmZ1bmN0aW9uKHQsZSxuLG8pe2xtKHQsMCxBZSxvKX0scmVtb3ZlOmZtLHJlcGxhY2VBdDpkbSxyZXBsYWNlQnk6ZnVuY3Rpb24oZSx0LG4sbyxyKXtyZXR1cm4gUChJZyhlKSxvKS5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiBkbShlLDAsMCx0LHIpfSl9LHNldDpmdW5jdGlvbihlLHQsbixvKXtUYShmdW5jdGlvbigpe3ZhciB0PUIobyxlLmdldFN5c3RlbSgpLmJ1aWxkKTtScyhlLHQpfSxlLmVsZW1lbnQpfSxjb250ZW50czpJZ30pfSksTmc9T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsZm9jdXM6Z20sYmx1cjpmdW5jdGlvbih0LGUpe2UuaWdub3JlfHx0LmVsZW1lbnQuZG9tLmJsdXIoKX0saXNGb2N1c2VkOmZ1bmN0aW9uKHQpe3JldHVybiBDYSh0LmVsZW1lbnQpfX0pLFBnPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGV4aGliaXQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4genIoZS5pZ25vcmU/e306e2F0dHJpYnV0ZXM6e3RhYmluZGV4OlwiLTFcIn19KX0sZXZlbnRzOmZ1bmN0aW9uKG4pe3JldHVybiBudShbQ3IoQWkoKSxmdW5jdGlvbih0LGUpe2dtKHQsbiksZS5zdG9wKCl9KV0uY29uY2F0KG4uc3RvcE1vdXNlZG93bj9bQ3IobWkoKSxmdW5jdGlvbih0LGUpe2UuZXZlbnQucHJldmVudCgpfSldOltdKSl9fSksVmc9eGEoe2ZpZWxkczpbSnUoXCJvbkZvY3VzXCIpLEVvKFwic3RvcE1vdXNlZG93blwiLCExKSxFbyhcImlnbm9yZVwiLCExKV0sbmFtZTpcImZvY3VzaW5nXCIsYWN0aXZlOlBnLGFwaXM6Tmd9KSxIZz1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxvbkxvYWQ6eG0sdG9nZ2xlOnZtLGlzT246ZnVuY3Rpb24odCxlLG4pe3JldHVybiBuLmdldCgpfSxvbjpibSxvZmY6eW0sc2V0OlltfSksTGc9T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsZXhoaWJpdDpmdW5jdGlvbigpe3JldHVybiB6cih7fSl9LGV2ZW50czpmdW5jdGlvbih0LGUpe3ZhciBuLG8scixpPShuPXQsbz1lLHI9dm0sdXUoZnVuY3Rpb24odCl7cih0LG4sbyl9KSksdT1iYSh0LGUseG0pO3JldHVybiBudShmdChbdC50b2dnbGVPbkV4ZWN1dGU/W2ldOltdLFt1XV0pKX19KSx6Zz14YSh7ZmllbGRzOltFbyhcInNlbGVjdGVkXCIsITEpLHdvKFwidG9nZ2xlQ2xhc3NcIiksRW8oXCJ0b2dnbGVPbkV4ZWN1dGVcIiwhMCksRG8oXCJhcmlhXCIse21vZGU6XCJub25lXCJ9LGxvKFwibW9kZVwiLHtwcmVzc2VkOltFbyhcInN5bmNXaXRoRXhwYW5kZWRcIiwhMSksdGEoXCJ1cGRhdGVcIixmdW5jdGlvbih0LGUsbil7b2UodC5lbGVtZW50LFwiYXJpYS1wcmVzc2VkXCIsbiksZS5zeW5jV2l0aEV4cGFuZGVkJiZxbSh0LDAsbil9KV0sY2hlY2tlZDpbdGEoXCJ1cGRhdGVcIixmdW5jdGlvbih0LGUsbil7b2UodC5lbGVtZW50LFwiYXJpYS1jaGVja2VkXCIsbil9KV0sZXhwYW5kZWQ6W3RhKFwidXBkYXRlXCIscW0pXSxzZWxlY3RlZDpbdGEoXCJ1cGRhdGVcIixmdW5jdGlvbih0LGUsbil7b2UodC5lbGVtZW50LFwiYXJpYS1zZWxlY3RlZFwiLG4pfSldLG5vbmU6W3RhKFwidXBkYXRlXCIsc3QpXX0pKV0sbmFtZTpcInRvZ2dsaW5nXCIsYWN0aXZlOkxnLGFwaXM6SGcsc3RhdGU6e2luaXQ6ZnVuY3Rpb24oKXt2YXIgZT1QbyghMSk7cmV0dXJue2dldDpmdW5jdGlvbigpe3JldHVybiBlLmdldCgpfSxzZXQ6ZnVuY3Rpb24odCl7cmV0dXJuIGUuc2V0KHQpfSxjbGVhcjpmdW5jdGlvbigpe3JldHVybiBlLnNldCghMSl9LHJlYWRTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBlLmdldCgpfX19fX0pLFVnPVwiYWxsb3kuaXRlbS1ob3ZlclwiLGpnPVwiYWxsb3kuaXRlbS1mb2N1c1wiLFdnPXJ0KFVnKSxHZz1ydChqZyksWGc9W21vKFwiZGF0YVwiKSxtbyhcImNvbXBvbmVudHNcIiksbW8oXCJkb21cIiksRW8oXCJoYXNTdWJtZW51XCIsITEpLHdvKFwidG9nZ2xpbmdcIiksQWYoXCJpdGVtQmVoYXZpb3Vyc1wiLFt6ZyxWZyxGZyxEZl0pLEVvKFwiaWdub3JlRm9jdXNcIiwhMSksRW8oXCJkb21Nb2RpZmljYXRpb25cIix7fSksdGEoXCJidWlsZGVyXCIsZnVuY3Rpb24odCl7cmV0dXJue2RvbTp0LmRvbSxkb21Nb2RpZmljYXRpb246bHQobHQoe30sdC5kb21Nb2RpZmljYXRpb24pLHthdHRyaWJ1dGVzOmx0KGx0KGx0KHtyb2xlOnQudG9nZ2xpbmcuaXNTb21lKCk/XCJtZW51aXRlbWNoZWNrYm94XCI6XCJtZW51aXRlbVwifSx0LmRvbU1vZGlmaWNhdGlvbi5hdHRyaWJ1dGVzKSx7XCJhcmlhLWhhc3BvcHVwXCI6dC5oYXNTdWJtZW51fSksdC5oYXNTdWJtZW51P3tcImFyaWEtZXhwYW5kZWRcIjohMX06e30pfSksYmVoYXZpb3VyczpCZih0Lml0ZW1CZWhhdmlvdXJzLFt0LnRvZ2dsaW5nLmZvbGQoemcucmV2b2tlLGZ1bmN0aW9uKHQpe3JldHVybiB6Zy5jb25maWcobHQoe2FyaWE6e21vZGU6XCJjaGVja2VkXCJ9fSx0KSl9KSxWZy5jb25maWcoe2lnbm9yZTp0Lmlnbm9yZUZvY3VzLHN0b3BNb3VzZWRvd246dC5pZ25vcmVGb2N1cyxvbkZvY3VzOmZ1bmN0aW9uKHQpe0NtKHQpfX0pLEZnLmNvbmZpZyh7bW9kZTpcImV4ZWN1dGlvblwifSksRGYuY29uZmlnKHtzdG9yZTp7bW9kZTpcIm1lbW9yeVwiLGluaXRpYWxWYWx1ZTp0LmRhdGF9fSksbW0oXCJpdGVtLXR5cGUtZXZlbnRzXCIsVihWKFtdLHdtKCksITApLFtDcih2aSgpLGttKSxDcihSaSgpLFZnLmZvY3VzKV0sITEpKV0pLGNvbXBvbmVudHM6dC5jb21wb25lbnRzLGV2ZW50T3JkZXI6dC5ldmVudE9yZGVyfX0pLEVvKFwiZXZlbnRPcmRlclwiLHt9KV0sWWc9W21vKFwiZG9tXCIpLG1vKFwiY29tcG9uZW50c1wiKSx0YShcImJ1aWxkZXJcIixmdW5jdGlvbih0KXtyZXR1cm57ZG9tOnQuZG9tLGNvbXBvbmVudHM6dC5jb21wb25lbnRzLGV2ZW50czpudShbQ3IoUmkoKSxmdW5jdGlvbih0LGUpe2Uuc3RvcCgpfSldKX19KV0scWc9cnQoXCJpdGVtLXdpZGdldFwiKSxLZz1ydChbSmYoe25hbWU6XCJ3aWRnZXRcIixvdmVycmlkZXM6ZnVuY3Rpb24oZSl7cmV0dXJue2JlaGF2aW91cnM6ZWMoW0RmLmNvbmZpZyh7c3RvcmU6e21vZGU6XCJtYW51YWxcIixnZXRWYWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gZS5kYXRhfSxzZXRWYWx1ZTpzdH19KV0pfX19KV0pLEpnPWxvKFwidHlwZVwiLHt3aWRnZXQ6W21vKFwidWlkXCIpLG1vKFwiZGF0YVwiKSxtbyhcImNvbXBvbmVudHNcIiksbW8oXCJkb21cIiksRW8oXCJhdXRvZm9jdXNcIiwhMSksRW8oXCJpZ25vcmVGb2N1c1wiLCExKSxBZihcIndpZGdldEJlaGF2aW91cnNcIixbRGYsVmcsRmddKSxFbyhcImRvbU1vZGlmaWNhdGlvblwiLHt9KSx4bChLZygpKSx0YShcImJ1aWxkZXJcIixmdW5jdGlvbihuKXtmdW5jdGlvbiBvKHQpe3JldHVybiBtbCh0LG4sXCJ3aWRnZXRcIikubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBGZy5mb2N1c0luKHQpLHR9KX1mdW5jdGlvbiB0KHQsZSl7cmV0dXJuIE9sKGUuZXZlbnQudGFyZ2V0KXx8bi5hdXRvZm9jdXMmJmUuc2V0U291cmNlKHQuZWxlbWVudCksdnQubm9uZSgpfXZhciBlPWZsKHFnKCksbixLZygpKSxyPWRsKHFnKCksbixlLmludGVybmFscygpKTtyZXR1cm57ZG9tOm4uZG9tLGNvbXBvbmVudHM6cixkb21Nb2RpZmljYXRpb246bi5kb21Nb2RpZmljYXRpb24sZXZlbnRzOm51KFt1dShmdW5jdGlvbih0LGUpe28odCkuZWFjaChmdW5jdGlvbih0KXtlLnN0b3AoKX0pfSksQ3IodmkoKSxrbSksQ3IoUmkoKSxmdW5jdGlvbih0LGUpe24uYXV0b2ZvY3VzP28odCk6VmcuZm9jdXModCl9KV0pLGJlaGF2aW91cnM6QmYobi53aWRnZXRCZWhhdmlvdXJzLFtEZi5jb25maWcoe3N0b3JlOnttb2RlOlwibWVtb3J5XCIsaW5pdGlhbFZhbHVlOm4uZGF0YX19KSxWZy5jb25maWcoe2lnbm9yZTpuLmlnbm9yZUZvY3VzLG9uRm9jdXM6ZnVuY3Rpb24odCl7Q20odCl9fSksRmcuY29uZmlnKHttb2RlOlwic3BlY2lhbFwiLGZvY3VzSW46bi5hdXRvZm9jdXM/ZnVuY3Rpb24odCl7byh0KX06cmMoKSxvbkxlZnQ6dCxvblJpZ2h0OnQsb25Fc2NhcGU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gVmcuaXNGb2N1c2VkKHQpfHxuLmF1dG9mb2N1cz8obi5hdXRvZm9jdXMmJmUuc2V0U291cmNlKHQuZWxlbWVudCksdnQubm9uZSgpKTooVmcuZm9jdXModCksdnQuc29tZSghMCkpfX0pXSl9fSldLGl0ZW06WGcsc2VwYXJhdG9yOllnfSksJGc9cnQoW1pmKHtmYWN0b3J5Ontza2V0Y2g6ZnVuY3Rpb24odCl7dmFyIGU9c28oXCJtZW51LnNwZWMgaXRlbVwiLEpnLHQpO3JldHVybiBlLmJ1aWxkZXIoZSl9fSxuYW1lOlwiaXRlbXNcIix1bml0OlwiaXRlbVwiLGRlZmF1bHRzOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIFR0KGUsXCJ1aWRcIik/ZTpsdChsdCh7fSxlKSx7dWlkOnB1KFwiaXRlbVwiKX0pfSxvdmVycmlkZXM6ZnVuY3Rpb24odCxlKXtyZXR1cm57dHlwZTplLnR5cGUsaWdub3JlRm9jdXM6dC5mYWtlRm9jdXMsZG9tTW9kaWZpY2F0aW9uOntjbGFzc2VzOlt0Lm1hcmtlcnMuaXRlbV19fX19KV0pLFFnPXJ0KFttbyhcInZhbHVlXCIpLG1vKFwiaXRlbXNcIiksbW8oXCJkb21cIiksbW8oXCJjb21wb25lbnRzXCIpLEVvKFwiZXZlbnRPcmRlclwiLHt9KSxacyhcIm1lbnVCZWhhdmlvdXJzXCIsW2hkLERmLGNkLEZnXSksRG8oXCJtb3ZlbWVudFwiLHttb2RlOlwibWVudVwiLG1vdmVPblRhYjohMH0sbG8oXCJtb2RlXCIse2dyaWQ6W0lhKCksdGEoXCJjb25maWdcIixmdW5jdGlvbih0LGUpe3JldHVybnttb2RlOlwiZmxhdGdyaWRcIixzZWxlY3RvcjpcIi5cIit0Lm1hcmtlcnMuaXRlbSxpbml0U2l6ZTp7bnVtQ29sdW1uczplLmluaXRTaXplLm51bUNvbHVtbnMsbnVtUm93czplLmluaXRTaXplLm51bVJvd3N9LGZvY3VzTWFuYWdlcjp0LmZvY3VzTWFuYWdlcn19KV0sbWF0cml4Olt0YShcImNvbmZpZ1wiLGZ1bmN0aW9uKHQsZSl7cmV0dXJue21vZGU6XCJtYXRyaXhcIixzZWxlY3RvcnM6e3JvdzplLnJvd1NlbGVjdG9yLGNlbGw6XCIuXCIrdC5tYXJrZXJzLml0ZW19LGZvY3VzTWFuYWdlcjp0LmZvY3VzTWFuYWdlcn19KSxtbyhcInJvd1NlbGVjdG9yXCIpXSxtZW51OltFbyhcIm1vdmVPblRhYlwiLCEwKSx0YShcImNvbmZpZ1wiLGZ1bmN0aW9uKHQsZSl7cmV0dXJue21vZGU6XCJtZW51XCIsc2VsZWN0b3I6XCIuXCIrdC5tYXJrZXJzLml0ZW0sbW92ZU9uVGFiOmUubW92ZU9uVGFiLGZvY3VzTWFuYWdlcjp0LmZvY3VzTWFuYWdlcn19KV19KSksZ28oXCJtYXJrZXJzXCIsRmEoKSksRW8oXCJmYWtlRm9jdXNcIiwhMSksRW8oXCJmb2N1c01hbmFnZXJcIixVbCgpKSxKdShcIm9uSGlnaGxpZ2h0XCIpXSksWmc9cnQoXCJhbGxveS5tZW51LWZvY3VzXCIpLHRwPUNsKHtuYW1lOlwiTWVudVwiLGNvbmZpZ0ZpZWxkczpRZygpLHBhcnRGaWVsZHM6JGcoKSxmYWN0b3J5OmZ1bmN0aW9uKHQsZSxuLG8pe3JldHVybnt1aWQ6dC51aWQsZG9tOnQuZG9tLG1hcmtlcnM6dC5tYXJrZXJzLGJlaGF2aW91cnM6ZWwodC5tZW51QmVoYXZpb3VycyxbaGQuY29uZmlnKHtoaWdobGlnaHRDbGFzczp0Lm1hcmtlcnMuc2VsZWN0ZWRJdGVtLGl0ZW1DbGFzczp0Lm1hcmtlcnMuaXRlbSxvbkhpZ2hsaWdodDp0Lm9uSGlnaGxpZ2h0fSksRGYuY29uZmlnKHtzdG9yZTp7bW9kZTpcIm1lbW9yeVwiLGluaXRpYWxWYWx1ZTp0LnZhbHVlfX0pLGNkLmNvbmZpZyh7ZmluZDp2dC5zb21lfSksRmcuY29uZmlnKHQubW92ZW1lbnQuY29uZmlnKHQsdC5tb3ZlbWVudCkpXSksZXZlbnRzOm51KFtDcihHZygpLGZ1bmN0aW9uKGUsbil7dmFyIHQ9bi5ldmVudDtlLmdldFN5c3RlbSgpLmdldEJ5RG9tKHQudGFyZ2V0KS5lYWNoKGZ1bmN0aW9uKHQpe2hkLmhpZ2hsaWdodChlLHQpLG4uc3RvcCgpLGJyKGUsWmcoKSx7bWVudTplLGl0ZW06dH0pfSl9KSxDcihXZygpLGZ1bmN0aW9uKHQsZSl7dmFyIG49ZS5ldmVudC5pdGVtO2hkLmhpZ2hsaWdodCh0LG4pfSldKSxjb21wb25lbnRzOmUsZXZlbnRPcmRlcjp0LmV2ZW50T3JkZXIsZG9tTW9kaWZpY2F0aW9uOnthdHRyaWJ1dGVzOntyb2xlOlwibWVudVwifX19fX0pLGVwPWZ1bmN0aW9uKG4sbyxyLHQpe3JldHVybiB0dChyLHQpLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIHR0KG4sdCkuYmluZChmdW5jdGlvbih0KXt2YXIgZT1lcChuLG8scix0KTtyZXR1cm4gdnQuc29tZShbdF0uY29uY2F0KGUpKX0pfSkuZ2V0T3IoW10pfSxucD1mdW5jdGlvbigpe2Z1bmN0aW9uIGEodCl7cmV0dXJuIGUodCkuYmluZChLbSl9ZnVuY3Rpb24gbih0KXtyZXR1cm4gdHQoYy5nZXQoKSx0KX12YXIgYz1Qbyh7fSksaT1Qbyh7fSkscz1Qbyh7fSksbD1nYygpLHU9UG8oe30pLGU9ZnVuY3Rpb24odCl7cmV0dXJuIHR0KGkuZ2V0KCksdCl9O3JldHVybntzZXRNZW51QnVpbHQ6ZnVuY3Rpb24odCxlKXt2YXIgbjtpLnNldChsdChsdCh7fSxpLmdldCgpKSwoKG49e30pW3RdPXt0eXBlOlwicHJlcGFyZWRcIixtZW51OmV9LG4pKSl9LHNldENvbnRlbnRzOmZ1bmN0aW9uKHQsZSxuLG8pe2wuc2V0KHQpLGMuc2V0KG4pLGkuc2V0KGUpLHUuc2V0KG8pO3ZhciByPWZ1bmN0aW9uKHQsZSl7dmFyIG49e307Sih0LGZ1bmN0aW9uKHQsZSl7U3QodCxmdW5jdGlvbih0KXtuW3RdPWV9KX0pO3ZhciBvPWUscj1fdChlLGZ1bmN0aW9uKHQsZSl7cmV0dXJue2s6dCx2OmV9fSksaT1kdChyLGZ1bmN0aW9uKHQsZSl7cmV0dXJuW2VdLmNvbmNhdChlcChuLG8scixlKSl9KTtyZXR1cm4gZHQobixmdW5jdGlvbih0KXtyZXR1cm4gdHQoaSx0KS5nZXRPcihbdF0pfSl9KG8sbik7cy5zZXQocil9LGV4cGFuZDpmdW5jdGlvbihuKXtyZXR1cm4gdHQoYy5nZXQoKSxuKS5tYXAoZnVuY3Rpb24odCl7dmFyIGU9dHQocy5nZXQoKSxuKS5nZXRPcihbXSk7cmV0dXJuW3RdLmNvbmNhdChlKX0pfSxyZWZyZXNoOmZ1bmN0aW9uKHQpe3JldHVybiB0dChzLmdldCgpLHQpfSxjb2xsYXBzZTpmdW5jdGlvbih0KXtyZXR1cm4gdHQocy5nZXQoKSx0KS5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiAxPHQubGVuZ3RoP3Z0LnNvbWUodC5zbGljZSgxKSk6dnQubm9uZSgpfSl9LGxvb2t1cE1lbnU6ZSxsb29rdXBJdGVtOm4sb3RoZXJNZW51czpmdW5jdGlvbih0KXt2YXIgZT11LmdldCgpO3JldHVybiBVKEN0KGUpLHQpfSxnZXRQcmltYXJ5OmZ1bmN0aW9uKCl7cmV0dXJuIGwuZ2V0KCkuYmluZChhKX0sZ2V0TWVudXM6ZnVuY3Rpb24oKXtyZXR1cm4gaS5nZXQoKX0sY2xlYXI6ZnVuY3Rpb24oKXtjLnNldCh7fSksaS5zZXQoe30pLHMuc2V0KHt9KSxsLmNsZWFyKCl9LGlzQ2xlYXI6ZnVuY3Rpb24oKXtyZXR1cm4gbC5nZXQoKS5pc05vbmUoKX0sZ2V0VHJpZ2dlcmluZ1BhdGg6ZnVuY3Rpb24odCx1KXt2YXIgZT1GKG4odCkudG9BcnJheSgpLGZ1bmN0aW9uKHQpe3JldHVybiBhKHQpLmlzU29tZSgpfSk7cmV0dXJuIHR0KHMuZ2V0KCksdCkuYmluZChmdW5jdGlvbih0KXt2YXIgbj16KGUuY29uY2F0KHQpKTtyZXR1cm4gZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIG89dFtuXTtpZighby5pc1NvbWUoKSlyZXR1cm4gdnQubm9uZSgpO2UucHVzaChvLmdldE9yRGllKCkpfXJldHVybiB2dC5zb21lKGUpfShIKG4sZnVuY3Rpb24odCxlKXtyZXR1cm4gbz10LHI9dSxpPW4uc2xpY2UoMCxlKzEpLGEobykuYmluZChmdW5jdGlvbihlKXtyZXR1cm4gbj1vLFEoYy5nZXQoKSxmdW5jdGlvbih0LGUpe3JldHVybiB0PT09bn0pLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIHIodCkubWFwKGZ1bmN0aW9uKHQpe3JldHVybnt0cmlnZ2VyZWRNZW51OmUsdHJpZ2dlcmluZ0l0ZW06dCx0cmlnZ2VyaW5nUGF0aDppfX0pfSk7dmFyIG59KS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIG10KGwuZ2V0KCksdCk/W106W3Z0Lm5vbmUoKV19LGZ1bmN0aW9uKHQpe3JldHVyblt2dC5zb21lKHQpXX0pO3ZhciBvLHIsaX0pKX0pfX19LG9wPUttLHJwPXJ0KFwiY29sbGFwc2UtaXRlbVwiKSxpcD1rbCh7bmFtZTpcIlRpZXJlZE1lbnVcIixjb25maWdGaWVsZHM6W1p1KFwib25FeGVjdXRlXCIpLFp1KFwib25Fc2NhcGVcIiksUXUoXCJvbk9wZW5NZW51XCIpLFF1KFwib25PcGVuU3VibWVudVwiKSxKdShcIm9uUmVwb3NpdGlvbk1lbnVcIiksSnUoXCJvbkNvbGxhcHNlTWVudVwiKSxFbyhcImhpZ2hsaWdodEltbWVkaWF0ZWx5XCIsITApLGJvKFwiZGF0YVwiLFttbyhcInByaW1hcnlcIiksbW8oXCJtZW51c1wiKSxtbyhcImV4cGFuc2lvbnNcIildKSxFbyhcImZha2VGb2N1c1wiLCExKSxKdShcIm9uSGlnaGxpZ2h0XCIpLEp1KFwib25Ib3ZlclwiKSxZdSgpLG1vKFwiZG9tXCIpLEVvKFwibmF2aWdhdGVPbkhvdmVyXCIsITApLEVvKFwic3RheUluRG9tXCIsITEpLFpzKFwidG1lbnVCZWhhdmlvdXJzXCIsW0ZnLGhkLGNkLFJnXSksRW8oXCJldmVudE9yZGVyXCIse30pXSxhcGlzOntjb2xsYXBzZU1lbnU6ZnVuY3Rpb24odCxlKXt0LmNvbGxhcHNlTWVudShlKX0saGlnaGxpZ2h0UHJpbWFyeTpmdW5jdGlvbih0LGUpe3QuaGlnaGxpZ2h0UHJpbWFyeShlKX0scmVwb3NpdGlvbk1lbnVzOmZ1bmN0aW9uKHQsZSl7dC5yZXBvc2l0aW9uTWVudXMoZSl9fSxmYWN0b3J5OmZ1bmN0aW9uKGEsdCl7ZnVuY3Rpb24gbih0KXt2YXIgbyxyLGU9KG89dCxyPWEuZGF0YS5wcmltYXJ5LGR0KGEuZGF0YS5tZW51cyxmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4oKXtyZXR1cm4gdHAuc2tldGNoKGx0KGx0KHt9LHQpLHt2YWx1ZTplLG1hcmtlcnM6YS5tYXJrZXJzLGZha2VGb2N1czphLmZha2VGb2N1cyxvbkhpZ2hsaWdodDphLm9uSGlnaGxpZ2h0LGZvY3VzTWFuYWdlcjooYS5mYWtlRm9jdXM/amw6VWwpKCl9KSl9cmV0dXJuIGU9PT1yP3t0eXBlOlwicHJlcGFyZWRcIixtZW51Om8uZ2V0U3lzdGVtKCkuYnVpbGQobigpKX06e3R5cGU6XCJub3RidWlsdFwiLG5iTWVudTpufX0pKSxuPWR0KGEuZGF0YS5tZW51cyxmdW5jdGlvbih0LGUpe3JldHVybiBIKHQuaXRlbXMsZnVuY3Rpb24odCl7cmV0dXJuXCJzZXBhcmF0b3JcIj09PXQudHlwZT9bXTpbdC5kYXRhLnZhbHVlXX0pfSk7cmV0dXJuIGcuc2V0Q29udGVudHMoYS5kYXRhLnByaW1hcnksZSxhLmRhdGEuZXhwYW5zaW9ucyxuKSxnLmdldFByaW1hcnkoKX1mdW5jdGlvbiBjKHQpe3JldHVybiBEZi5nZXRWYWx1ZSh0KS52YWx1ZX1mdW5jdGlvbiB1KGUsdCl7aGQuaGlnaGxpZ2h0KGUsdCksaGQuZ2V0SGlnaGxpZ2h0ZWQodCkub3JUaHVuayhmdW5jdGlvbigpe3JldHVybiBoZC5nZXRGaXJzdCh0KX0pLmVhY2goZnVuY3Rpb24odCl7eHIoZSx0LmVsZW1lbnQsUmkoKSl9KX1mdW5jdGlvbiBzKGUsdCl7cmV0dXJuIG50KEIodCxmdW5jdGlvbih0KXtyZXR1cm4gZS5sb29rdXBNZW51KHQpLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuXCJwcmVwYXJlZFwiPT09dC50eXBlP3Z0LnNvbWUodC5tZW51KTp2dC5ub25lKCl9KX0pKX1mdW5jdGlvbiBsKGUsdCxuKXt2YXIgbz1zKHQsdC5vdGhlck1lbnVzKG4pKTtTdChvLGZ1bmN0aW9uKHQpeyRyKHQuZWxlbWVudCxbYS5tYXJrZXJzLmJhY2tncm91bmRNZW51XSksYS5zdGF5SW5Eb218fFJnLnJlbW92ZShlLHQpfSl9ZnVuY3Rpb24gZih0LG8pe3ZhciBlO0ooKGU9dCxyLmdldCgpLmdldE9yVGh1bmsoZnVuY3Rpb24oKXt2YXIgbj17fSx0PUYodnMoZS5lbGVtZW50LFwiLlwiK2EubWFya2Vycy5pdGVtKSxmdW5jdGlvbih0KXtyZXR1cm5cInRydWVcIj09PWllKHQsXCJhcmlhLWhhc3BvcHVwXCIpfSk7cmV0dXJuIFN0KHQsZnVuY3Rpb24odCl7ZS5nZXRTeXN0ZW0oKS5nZXRCeURvbSh0KS5lYWNoKGZ1bmN0aW9uKHQpe3ZhciBlPWModCk7bltlXT10fSl9KSxyLnNldChuKSxufSkpLGZ1bmN0aW9uKHQsZSl7dmFyIG49d3QobyxlKTtvZSh0LmVsZW1lbnQsXCJhcmlhLWV4cGFuZGVkXCIsbil9KX1mdW5jdGlvbiBkKG8scixpKXtyZXR1cm4gdnQuZnJvbShpWzBdKS5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiByLmxvb2t1cE1lbnUodCkuYmluZChmdW5jdGlvbih0KXtpZihcIm5vdGJ1aWx0XCI9PT10LnR5cGUpcmV0dXJuIHZ0Lm5vbmUoKTt2YXIgZT10Lm1lbnUsbj1zKHIsaS5zbGljZSgxKSk7cmV0dXJuIFN0KG4sZnVuY3Rpb24odCl7WXIodC5lbGVtZW50LGEubWFya2Vycy5iYWNrZ3JvdW5kTWVudSl9KSx2bihlLmVsZW1lbnQpfHxSZy5hcHBlbmQobyxFdShlKSksJHIoZS5lbGVtZW50LFthLm1hcmtlcnMuYmFja2dyb3VuZE1lbnVdKSx1KG8sZSksbChvLHIsaSksdnQuc29tZShlKX0pfSl9dmFyIG0sZSxyPWdjKCksZz1ucCgpO2Z1bmN0aW9uIGkocixpLHUpe2lmKHZvaWQgMD09PXUmJih1PW0uSGlnaGxpZ2h0U3VibWVudSksaS5oYXNDb25maWd1cmVkKGdkKSYmZ2QuaXNEaXNhYmxlZChpKSlyZXR1cm4gdnQuc29tZShpKTt2YXIgdD1jKGkpO3JldHVybiBnLmV4cGFuZCh0KS5iaW5kKGZ1bmN0aW9uKG8pe3JldHVybiBmKHIsbyksdnQuZnJvbShvWzBdKS5iaW5kKGZ1bmN0aW9uKG4pe3JldHVybiBnLmxvb2t1cE1lbnUobikuYmluZChmdW5jdGlvbih0KXt2YXIgZT1mdW5jdGlvbih0LGUsbil7aWYoXCJub3RidWlsdFwiIT09bi50eXBlKXJldHVybiBuLm1lbnU7dmFyIG89dC5nZXRTeXN0ZW0oKS5idWlsZChuLm5iTWVudSgpKTtyZXR1cm4gZy5zZXRNZW51QnVpbHQoZSxvKSxvfShyLG4sdCk7cmV0dXJuIHZuKGUuZWxlbWVudCl8fFJnLmFwcGVuZChyLEV1KGUpKSxhLm9uT3BlblN1Ym1lbnUocixpLGUseihvKSksdT09PW0uSGlnaGxpZ2h0U3VibWVudT8oaGQuaGlnaGxpZ2h0Rmlyc3QoZSksZChyLGcsbykpOihoZC5kZWhpZ2hsaWdodEFsbChlKSx2dC5zb21lKGkpKX0pfSl9KX1mdW5jdGlvbiBvKGUsbil7dmFyIHQ9YyhuKTtyZXR1cm4gZy5jb2xsYXBzZSh0KS5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiBmKGUsdCksZChlLGcsdCkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBhLm9uQ29sbGFwc2VNZW51KGUsbix0KSx0fSl9KX1mdW5jdGlvbiBwKG4pe3JldHVybiBmdW5jdGlvbihlLHQpe3JldHVybiBSdSh0LmdldFNvdXJjZSgpLFwiLlwiK2EubWFya2Vycy5pdGVtKS5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiBlLmdldFN5c3RlbSgpLmdldEJ5RG9tKHQpLnRvT3B0aW9uYWwoKS5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiBuKGUsdCkubWFwKEQpfSl9KX19ZnVuY3Rpb24gaCh0KXtyZXR1cm4gaGQuZ2V0SGlnaGxpZ2h0ZWQodCkuYmluZChoZC5nZXRIaWdobGlnaHRlZCl9KGU9bT17fSlbZS5IaWdobGlnaHRTdWJtZW51PTBdPVwiSGlnaGxpZ2h0U3VibWVudVwiLGVbZS5IaWdobGlnaHRQYXJlbnQ9MV09XCJIaWdobGlnaHRQYXJlbnRcIjt2YXIgdj1udShbQ3IoWmcoKSxmdW5jdGlvbihuLG8pe3ZhciB0PW8uZXZlbnQuaXRlbTtnLmxvb2t1cEl0ZW0oYyh0KSkuZWFjaChmdW5jdGlvbigpe3ZhciB0PW8uZXZlbnQubWVudTtoZC5oaWdobGlnaHQobix0KTt2YXIgZT1jKG8uZXZlbnQuaXRlbSk7Zy5yZWZyZXNoKGUpLmVhY2goZnVuY3Rpb24odCl7cmV0dXJuIGwobixnLHQpfSl9KX0pLHV1KGZ1bmN0aW9uKGUsdCl7dmFyIG49dC5ldmVudC50YXJnZXQ7ZS5nZXRTeXN0ZW0oKS5nZXRCeURvbShuKS5lYWNoKGZ1bmN0aW9uKHQpezA9PT1jKHQpLmluZGV4T2YoXCJjb2xsYXBzZS1pdGVtXCIpJiZvKGUsdCksaShlLHQsbS5IaWdobGlnaHRTdWJtZW51KS5mb2xkKGZ1bmN0aW9uKCl7YS5vbkV4ZWN1dGUoZSx0KX0sc3QpfSl9KSxvdShmdW5jdGlvbihlLHQpe24oZSkuZWFjaChmdW5jdGlvbih0KXtSZy5hcHBlbmQoZSxFdSh0KSksYS5vbk9wZW5NZW51KGUsdCksYS5oaWdobGlnaHRJbW1lZGlhdGVseSYmdShlLHQpfSl9KV0uY29uY2F0KGEubmF2aWdhdGVPbkhvdmVyP1tDcihXZygpLGZ1bmN0aW9uKHQsZSl7dmFyIG49ZS5ldmVudC5pdGVtLG89dCxyPWMobik7Zy5yZWZyZXNoKHIpLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIGYobyx0KSxkKG8sZyx0KX0pLGkodCxuLG0uSGlnaGxpZ2h0UGFyZW50KSxhLm9uSG92ZXIodCxuKX0pXTpbXSkpLGI9e2NvbGxhcHNlTWVudTpmdW5jdGlvbihlKXtoKGUpLmVhY2goZnVuY3Rpb24odCl7byhlLHQpfSl9LGhpZ2hsaWdodFByaW1hcnk6ZnVuY3Rpb24oZSl7Zy5nZXRQcmltYXJ5KCkuZWFjaChmdW5jdGlvbih0KXt1KGUsdCl9KX0scmVwb3NpdGlvbk1lbnVzOmZ1bmN0aW9uKG8pe2cuZ2V0UHJpbWFyeSgpLmJpbmQoZnVuY3Rpb24oZSl7cmV0dXJuIGgobykuYmluZChmdW5jdGlvbih0KXt2YXIgZT1jKHQpLG49bnQoQihaKGcuZ2V0TWVudXMoKSksb3ApKTtyZXR1cm4gZy5nZXRUcmlnZ2VyaW5nUGF0aChlLGZ1bmN0aW9uKHQpe3JldHVybiBlPXQsSyhuLGZ1bmN0aW9uKHQpe3JldHVybiB0LmdldFN5c3RlbSgpLmlzQ29ubmVjdGVkKCk/TihoZC5nZXRDYW5kaWRhdGVzKHQpLGZ1bmN0aW9uKHQpe3JldHVybiBjKHQpPT09ZX0pOnZ0Lm5vbmUoKX0pO3ZhciBlfSl9KS5tYXAoZnVuY3Rpb24odCl7cmV0dXJue3ByaW1hcnk6ZSx0cmlnZ2VyaW5nUGF0aDp0fX0pfSkuZm9sZChmdW5jdGlvbigpe3Z0LmZyb20oby5jb21wb25lbnRzKClbMF0pLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm5cIm1lbnVcIj09PWllKHQuZWxlbWVudCxcInJvbGVcIil9KS5lYWNoKGZ1bmN0aW9uKHQpe2Eub25SZXBvc2l0aW9uTWVudShvLHQsW10pfSl9LGZ1bmN0aW9uKHQpe3ZhciBlPXQucHJpbWFyeSxuPXQudHJpZ2dlcmluZ1BhdGg7YS5vblJlcG9zaXRpb25NZW51KG8sZSxuKX0pfX07cmV0dXJue3VpZDphLnVpZCxkb206YS5kb20sbWFya2VyczphLm1hcmtlcnMsYmVoYXZpb3VyczplbChhLnRtZW51QmVoYXZpb3VycyxbRmcuY29uZmlnKHttb2RlOlwic3BlY2lhbFwiLG9uUmlnaHQ6cChmdW5jdGlvbih0LGUpe3JldHVybiBPbChlLmVsZW1lbnQpP3Z0Lm5vbmUoKTppKHQsZSxtLkhpZ2hsaWdodFN1Ym1lbnUpfSksb25MZWZ0OnAoZnVuY3Rpb24odCxlKXtyZXR1cm4gT2woZS5lbGVtZW50KT92dC5ub25lKCk6byh0LGUpfSksb25Fc2NhcGU6cChmdW5jdGlvbih0LGUpe3JldHVybiBvKHQsZSkub3JUaHVuayhmdW5jdGlvbigpe3JldHVybiBhLm9uRXNjYXBlKHQsZSkubWFwKGZ1bmN0aW9uKCl7cmV0dXJuIHR9KX0pfSksZm9jdXNJbjpmdW5jdGlvbihlLHQpe2cuZ2V0UHJpbWFyeSgpLmVhY2goZnVuY3Rpb24odCl7eHIoZSx0LmVsZW1lbnQsUmkoKSl9KX19KSxoZC5jb25maWcoe2hpZ2hsaWdodENsYXNzOmEubWFya2Vycy5zZWxlY3RlZE1lbnUsaXRlbUNsYXNzOmEubWFya2Vycy5tZW51fSksY2QuY29uZmlnKHtmaW5kOmZ1bmN0aW9uKHQpe3JldHVybiBoZC5nZXRIaWdobGlnaHRlZCh0KX19KSxSZy5jb25maWcoe30pXSksZXZlbnRPcmRlcjphLmV2ZW50T3JkZXIsYXBpczpiLGV2ZW50czp2fX0sZXh0cmFBcGlzOnt0aWVyZWREYXRhOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm57cHJpbWFyeTp0LG1lbnVzOmUsZXhwYW5zaW9uczpufX0sc2luZ2xlRGF0YTpmdW5jdGlvbih0LGUpe3JldHVybntwcmltYXJ5OnQsbWVudXM6c3IodCxlKSxleHBhbnNpb25zOnt9fX0sY29sbGFwc2VJdGVtOmZ1bmN0aW9uKHQpe3JldHVybnt2YWx1ZTpJcihycCgpKSxtZXRhOnt0ZXh0OnR9fX19fSksdXA9a2woe25hbWU6XCJJbmxpbmVWaWV3XCIsY29uZmlnRmllbGRzOlttbyhcImxhenlTaW5rXCIpLEp1KFwib25TaG93XCIpLEp1KFwib25IaWRlXCIpLE9vKFwib25Fc2NhcGVcIiksWnMoXCJpbmxpbmVCZWhhdmlvdXJzXCIsW2JmLERmLGljXSksVG8oXCJmaXJlRGlzbWlzc2FsRXZlbnRJbnN0ZWFkXCIsW0VvKFwiZXZlbnRcIixZaSgpKV0pLFRvKFwiZmlyZVJlcG9zaXRpb25FdmVudEluc3RlYWRcIixbRW8oXCJldmVudFwiLHFpKCkpXSksRW8oXCJnZXRSZWxhdGVkXCIsdnQubm9uZSksRW8oXCJpc0V4dHJhUGFydFwiLFQpLEVvKFwiZXZlbnRPcmRlclwiLHZ0Lm5vbmUpXSxmYWN0b3J5OmZ1bmN0aW9uKGQsdCl7ZnVuY3Rpb24gZShuKXtiZi5pc09wZW4obikmJkRmLmdldFZhbHVlKG4pLmVhY2goZnVuY3Rpb24odCl7c3dpdGNoKHQubW9kZSl7Y2FzZVwibWVudVwiOmJmLmdldFN0YXRlKG4pLmVhY2goaXAucmVwb3NpdGlvbk1lbnVzKTticmVhaztjYXNlXCJwb3NpdGlvblwiOnZhciBlPWQubGF6eVNpbmsobikuZ2V0T3JEaWUoKTtmZi5wb3NpdGlvbldpdGhpbkJvdW5kcyhlLG4sdC5jb25maWcsdC5nZXRCb3VuZHMoKSl9fSl9ZnVuY3Rpb24gbyh0LGUsbixvKXtpKHQsZSxuLGZ1bmN0aW9uKCl7cmV0dXJuIG8ubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBNbih0KX0pfSl9ZnVuY3Rpb24gcih0LGUsbixvKXt2YXIgcixpLHUsYSxjLHM9KHI9ZCxpPXQsdT1lLGE9byxjPVwiaG9yaXpvbnRhbFwiPT09bi50eXBlP3tsYXlvdXRzOntvbkx0cjpoYSxvblJ0bDp2YX19Ont9LGlwLnNrZXRjaCh7ZG9tOnt0YWc6XCJkaXZcIn0sZGF0YTpuLmRhdGEsbWFya2VyczpuLm1lbnUubWFya2VycyxoaWdobGlnaHRJbW1lZGlhdGVseTpuLm1lbnUuaGlnaGxpZ2h0SW1tZWRpYXRlbHksb25Fc2NhcGU6ZnVuY3Rpb24oKXtyZXR1cm4gYmYuY2xvc2UoaSksci5vbkVzY2FwZS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQoaSl9KSx2dC5zb21lKCEwKX0sb25FeGVjdXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHZ0LnNvbWUoITApfSxvbk9wZW5NZW51OmZ1bmN0aW9uKHQsZSl7ZmYucG9zaXRpb25XaXRoaW5Cb3VuZHMobCgpLmdldE9yRGllKCksZSx1LGEoKSl9LG9uT3BlblN1Ym1lbnU6ZnVuY3Rpb24odCxlLG4sbyl7dmFyIHI9bCgpLmdldE9yRGllKCk7ZmYucG9zaXRpb24ocixuLHthbmNob3I6bHQoe3R5cGU6XCJzdWJtZW51XCIsaXRlbTplfSxmKG8pKX0pfSxvblJlcG9zaXRpb25NZW51OmZ1bmN0aW9uKHQsZSxuKXt2YXIgbz1sKCkuZ2V0T3JEaWUoKTtmZi5wb3NpdGlvbldpdGhpbkJvdW5kcyhvLGUsdSxhKCkpLFN0KG4sZnVuY3Rpb24odCl7dmFyIGU9Zih0LnRyaWdnZXJpbmdQYXRoKTtmZi5wb3NpdGlvbihvLHQudHJpZ2dlcmVkTWVudSx7YW5jaG9yOmx0KHt0eXBlOlwic3VibWVudVwiLGl0ZW06dC50cmlnZ2VyaW5nSXRlbX0sZSl9KX0pfX0pKTtmdW5jdGlvbiBsKCl7cmV0dXJuIHIubGF6eVNpbmsoaSl9ZnVuY3Rpb24gZih0KXtyZXR1cm4gMj09PXQubGVuZ3RoP2M6e319YmYub3Blbih0LHMpLERmLnNldFZhbHVlKHQsdnQuc29tZSh7bW9kZTpcIm1lbnVcIixtZW51OnN9KSl9dmFyIGk9ZnVuY3Rpb24odCxlLG4sbyl7dmFyIHI9ZC5sYXp5U2luayh0KS5nZXRPckRpZSgpO2JmLm9wZW5XaGlsZUNsb2FrZWQodCxlLGZ1bmN0aW9uKCl7cmV0dXJuIGZmLnBvc2l0aW9uV2l0aGluQm91bmRzKHIsdCxuLG8oKSl9KSxEZi5zZXRWYWx1ZSh0LHZ0LnNvbWUoe21vZGU6XCJwb3NpdGlvblwiLGNvbmZpZzpuLGdldEJvdW5kczpvfSkpfSxuPXtzZXRDb250ZW50OmZ1bmN0aW9uKHQsZSl7YmYuc2V0Q29udGVudCh0LGUpfSxzaG93QXQ6ZnVuY3Rpb24odCxlLG4pe28odCxlLG4sdnQubm9uZSgpKX0sc2hvd1dpdGhpbjpvLHNob3dXaXRoaW5Cb3VuZHM6aSxzaG93TWVudUF0OmZ1bmN0aW9uKHQsZSxuKXtyKHQsZSxuLHZ0Lm5vbmUpfSxzaG93TWVudVdpdGhpbkJvdW5kczpyLGhpZGU6ZnVuY3Rpb24odCl7YmYuaXNPcGVuKHQpJiYoRGYuc2V0VmFsdWUodCx2dC5ub25lKCkpLGJmLmNsb3NlKHQpKX0sZ2V0Q29udGVudDpmdW5jdGlvbih0KXtyZXR1cm4gYmYuZ2V0U3RhdGUodCl9LHJlcG9zaXRpb246ZSxpc09wZW46YmYuaXNPcGVufTtyZXR1cm57dWlkOmQudWlkLGRvbTpkLmRvbSxiZWhhdmlvdXJzOmVsKGQuaW5saW5lQmVoYXZpb3VycyxbYmYuY29uZmlnKHtpc1BhcnRPZjpmdW5jdGlvbih0LGUsbil7cmV0dXJuIEh1KGUsbil8fChvPW4sZC5nZXRSZWxhdGVkKHQpLmV4aXN0cyhmdW5jdGlvbih0KXtyZXR1cm4gSHUodCxvKX0pKTt2YXIgb30sZ2V0QXR0YWNoUG9pbnQ6ZnVuY3Rpb24odCl7cmV0dXJuIGQubGF6eVNpbmsodCkuZ2V0T3JEaWUoKX0sb25PcGVuOmZ1bmN0aW9uKHQpe2Qub25TaG93KHQpfSxvbkNsb3NlOmZ1bmN0aW9uKHQpe2Qub25IaWRlKHQpfX0pLERmLmNvbmZpZyh7c3RvcmU6e21vZGU6XCJtZW1vcnlcIixpbml0aWFsVmFsdWU6dnQubm9uZSgpfX0pLGljLmNvbmZpZyh7Y2hhbm5lbHM6bHQobHQoe30sWHMobHQoe2lzRXh0cmFQYXJ0OnQuaXNFeHRyYVBhcnR9LGQuZmlyZURpc21pc3NhbEV2ZW50SW5zdGVhZC5tYXAoZnVuY3Rpb24odCl7cmV0dXJue2ZpcmVFdmVudEluc3RlYWQ6e2V2ZW50OnQuZXZlbnR9fX0pLmdldE9yKHt9KSkpKSxZcyhsdChsdCh7fSxkLmZpcmVSZXBvc2l0aW9uRXZlbnRJbnN0ZWFkLm1hcChmdW5jdGlvbih0KXtyZXR1cm57ZmlyZUV2ZW50SW5zdGVhZDp7ZXZlbnQ6dC5ldmVudH19fSkuZ2V0T3Ioe30pKSx7ZG9SZXBvc2l0aW9uOmV9KSkpfSldKSxldmVudE9yZGVyOmQuZXZlbnRPcmRlcixhcGlzOm59fSxhcGlzOntzaG93QXQ6ZnVuY3Rpb24odCxlLG4sbyl7dC5zaG93QXQoZSxuLG8pfSxzaG93V2l0aGluOmZ1bmN0aW9uKHQsZSxuLG8scil7dC5zaG93V2l0aGluKGUsbixvLHIpfSxzaG93V2l0aGluQm91bmRzOmZ1bmN0aW9uKHQsZSxuLG8scil7dC5zaG93V2l0aGluQm91bmRzKGUsbixvLHIpfSxzaG93TWVudUF0OmZ1bmN0aW9uKHQsZSxuLG8pe3Quc2hvd01lbnVBdChlLG4sbyl9LHNob3dNZW51V2l0aGluQm91bmRzOmZ1bmN0aW9uKHQsZSxuLG8scil7dC5zaG93TWVudVdpdGhpbkJvdW5kcyhlLG4sbyxyKX0saGlkZTpmdW5jdGlvbih0LGUpe3QuaGlkZShlKX0saXNPcGVuOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuaXNPcGVuKGUpfSxnZXRDb250ZW50OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuZ2V0Q29udGVudChlKX0sc2V0Q29udGVudDpmdW5jdGlvbih0LGUsbil7dC5zZXRDb250ZW50KGUsbil9LHJlcG9zaXRpb246ZnVuY3Rpb24odCxlKXt0LnJlcG9zaXRpb24oZSl9fX0pLGFwPVwibGF5b3V0LWluc2V0XCIsY3A9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBuYShPbSh0LGUpLHQueSxuLmluc2V0Tm9ydGgoKSxMYSgpLFwibm9ydGhcIixyYSh0LHt0b3A6Mn0pLGFwKX0sc3A9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBuYShPbSh0LGUpLFRtKHQsZSksbi5pbnNldFNvdXRoKCksemEoKSxcInNvdXRoXCIscmEodCx7Ym90dG9tOjN9KSxhcCl9LGxwPXRpbnltY2UudXRpbC5Ub29scy5yZXNvbHZlKFwidGlueW1jZS51dGlsLkRlbGF5XCIpLGZwPWtsKHtuYW1lOlwiQnV0dG9uXCIsZmFjdG9yeTpmdW5jdGlvbih0KXtmdW5jdGlvbiBuKGUpe3JldHVybiB0dCh0LmRvbSxcImF0dHJpYnV0ZXNcIikuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gdHQodCxlKX0pfXZhciBlPVNtKHQuYWN0aW9uKSxvPXQuZG9tLnRhZztyZXR1cm57dWlkOnQudWlkLGRvbTp0LmRvbSxjb21wb25lbnRzOnQuY29tcG9uZW50cyxldmVudHM6ZSxiZWhhdmlvdXJzOkJmKHQuYnV0dG9uQmVoYXZpb3VycyxbVmcuY29uZmlnKHt9KSxGZy5jb25maWcoe21vZGU6XCJleGVjdXRpb25cIix1c2VTcGFjZTohMCx1c2VFbnRlcjohMH0pXSksZG9tTW9kaWZpY2F0aW9uOnthdHRyaWJ1dGVzOmZ1bmN0aW9uKCl7aWYoXCJidXR0b25cIiE9PW8pcmV0dXJue3JvbGU6bihcInJvbGVcIikuZ2V0T3IoXCJidXR0b25cIil9O3ZhciB0PW4oXCJ0eXBlXCIpLmdldE9yKFwiYnV0dG9uXCIpLGU9bihcInJvbGVcIikubWFwKGZ1bmN0aW9uKHQpe3JldHVybntyb2xlOnR9fSkuZ2V0T3Ioe30pO3JldHVybiBsdCh7dHlwZTp0fSxlKX0oKX0sZXZlbnRPcmRlcjp0LmV2ZW50T3JkZXJ9fSxjb25maWdGaWVsZHM6W0VvKFwidWlkXCIsdm9pZCAwKSxtbyhcImRvbVwiKSxFbyhcImNvbXBvbmVudHNcIixbXSksQWYoXCJidXR0b25CZWhhdmlvdXJzXCIsW1ZnLEZnXSksd28oXCJhY3Rpb25cIiksd28oXCJyb2xlXCIpLEVvKFwiZXZlbnRPcmRlclwiLHt9KV19KSxkcD10aW55bWNlLnV0aWwuVG9vbHMucmVzb2x2ZShcInRpbnltY2UudXRpbC5JMThuXCIpLG1wPXtpbmRlbnQ6ITAsb3V0ZGVudDohMCxcInRhYmxlLWluc2VydC1jb2x1bW4tYWZ0ZXJcIjohMCxcInRhYmxlLWluc2VydC1jb2x1bW4tYmVmb3JlXCI6ITAsXCJwYXN0ZS1jb2x1bW4tYWZ0ZXJcIjohMCxcInBhc3RlLWNvbHVtbi1iZWZvcmVcIjohMCxcInVub3JkZXJlZC1saXN0XCI6ITAsXCJsaXN0LWJ1bGwtY2lyY2xlXCI6ITAsXCJsaXN0LWJ1bGwtZGVmYXVsdFwiOiEwLFwibGlzdC1idWxsLXNxdWFyZVwiOiEwfSxncD1cInRlbXBvcmFyeS1wbGFjZWhvbGRlclwiLHBwPXtzdWNjZXNzOlwiY2hlY2ttYXJrXCIsZXJyb3I6XCJ3YXJuaW5nXCIsZXJyOlwiZXJyb3JcIix3YXJuaW5nOlwid2FybmluZ1wiLHdhcm46XCJ3YXJuaW5nXCIsaW5mbzpcImluZm9cIn0saHA9a2woe25hbWU6XCJOb3RpZmljYXRpb25cIixmYWN0b3J5OmZ1bmN0aW9uKGUpe2Z1bmN0aW9uIG4odCl7cmV0dXJue2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtYmFyXCJdLGF0dHJpYnV0ZXM6e3N0eWxlOlwid2lkdGg6IFwiK3QrXCIlXCJ9fX19ZnVuY3Rpb24gbyh0KXtyZXR1cm57ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC10ZXh0XCJdLGlubmVySHRtbDp0K1wiJVwifX19dmFyIHQscixpLHUsYT1IbSh7ZG9tOnt0YWc6XCJwXCIsaW5uZXJIdG1sOmUudHJhbnNsYXRpb25Qcm92aWRlcihlLnRleHQpfSxiZWhhdmlvdXJzOmVjKFtSZy5jb25maWcoe30pXSl9KSxjPUhtKHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6ZS5wcm9ncmVzcz9bXCJ0b3gtcHJvZ3Jlc3MtYmFyXCIsXCJ0b3gtcHJvZ3Jlc3MtaW5kaWNhdG9yXCJdOltcInRveC1wcm9ncmVzcy1iYXJcIl19LGNvbXBvbmVudHM6W3tkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWJhci1jb250YWluZXJcIl19LGNvbXBvbmVudHM6W24oMCldfSxvKDApXSxiZWhhdmlvdXJzOmVjKFtSZy5jb25maWcoe30pXSl9KSxzPXt1cGRhdGVQcm9ncmVzczpmdW5jdGlvbih0LGUpe3QuZ2V0U3lzdGVtKCkuaXNDb25uZWN0ZWQoKSYmYy5nZXRPcHQodCkuZWFjaChmdW5jdGlvbih0KXtSZy5zZXQodCxbe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtYmFyLWNvbnRhaW5lclwiXX0sY29tcG9uZW50czpbbihlKV19LG8oZSldKX0pfSx1cGRhdGVUZXh0OmZ1bmN0aW9uKHQsZSl7dmFyIG47dC5nZXRTeXN0ZW0oKS5pc0Nvbm5lY3RlZCgpJiYobj1hLmdldCh0KSxSZy5zZXQobixbcmkoZSldKSl9fSxsPWZ0KFtlLmljb24udG9BcnJheSgpLGUubGV2ZWwudG9BcnJheSgpLGUubGV2ZWwuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gdnQuZnJvbShwcFt0XSl9KS50b0FycmF5KCldKSxmPUhtKGZwLnNrZXRjaCh7ZG9tOnt0YWc6XCJidXR0b25cIixjbGFzc2VzOltcInRveC1ub3RpZmljYXRpb25fX2Rpc21pc3NcIixcInRveC1idXR0b25cIixcInRveC1idXR0b24tLW5ha2VkXCIsXCJ0b3gtYnV0dG9uLS1pY29uXCJdfSxjb21wb25lbnRzOltYbShcImNsb3NlXCIse3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWljb25cIl0sYXR0cmlidXRlczp7XCJhcmlhLWxhYmVsXCI6ZS50cmFuc2xhdGlvblByb3ZpZGVyKFwiQ2xvc2VcIil9fSxlLmljb25Qcm92aWRlcildLGFjdGlvbjpmdW5jdGlvbih0KXtlLm9uQWN0aW9uKHQpfX0pKSxkPVsodD1sLHI9e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LW5vdGlmaWNhdGlvbl9faWNvblwiXX0saT1lLmljb25Qcm92aWRlcix1PWkoKSxHbShyLE4odCxmdW5jdGlvbih0KXtyZXR1cm4gVHQodSx6bSh0LHUpKX0pLmdldE9yKGdwKSx1LHZ0Lm5vbmUoKSkpLHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LW5vdGlmaWNhdGlvbl9fYm9keVwiXX0sY29tcG9uZW50czpbYS5hc1NwZWMoKV0sYmVoYXZpb3VyczplYyhbUmcuY29uZmlnKHt9KV0pfV07cmV0dXJue3VpZDplLnVpZCxkb206e3RhZzpcImRpdlwiLGF0dHJpYnV0ZXM6e3JvbGU6XCJhbGVydFwifSxjbGFzc2VzOmUubGV2ZWwubWFwKGZ1bmN0aW9uKHQpe3JldHVybltcInRveC1ub3RpZmljYXRpb25cIixcInRveC1ub3RpZmljYXRpb24tLWluXCIsXCJ0b3gtbm90aWZpY2F0aW9uLS1cIit0XX0pLmdldE9yKFtcInRveC1ub3RpZmljYXRpb25cIixcInRveC1ub3RpZmljYXRpb24tLWluXCJdKX0sYmVoYXZpb3VyczplYyhbVmcuY29uZmlnKHt9KSxtbShcIm5vdGlmaWNhdGlvbi1ldmVudHNcIixbQ3IoYmkoKSxmdW5jdGlvbih0KXtmLmdldE9wdCh0KS5lYWNoKFZnLmZvY3VzKX0pXSldKSxjb21wb25lbnRzOmQuY29uY2F0KGUucHJvZ3Jlc3M/W2MuYXNTcGVjKCldOltdKS5jb25jYXQoZS5jbG9zZUJ1dHRvbj9bZi5hc1NwZWMoKV06W10pLGFwaXM6c319LGNvbmZpZ0ZpZWxkczpbd28oXCJsZXZlbFwiKSxtbyhcInByb2dyZXNzXCIpLG1vKFwiaWNvblwiKSxtbyhcIm9uQWN0aW9uXCIpLG1vKFwidGV4dFwiKSxtbyhcImljb25Qcm92aWRlclwiKSxtbyhcInRyYW5zbGF0aW9uUHJvdmlkZXJcIiksRm8oXCJjbG9zZUJ1dHRvblwiLCEwKV0sYXBpczp7dXBkYXRlUHJvZ3Jlc3M6ZnVuY3Rpb24odCxlLG4pe3QudXBkYXRlUHJvZ3Jlc3MoZSxuKX0sdXBkYXRlVGV4dDpmdW5jdGlvbih0LGUsbil7dC51cGRhdGVUZXh0KGUsbil9fX0pO2Z1bmN0aW9uIHZwKG4sbyl7ZnVuY3Rpb24gcigpe2IoaSl8fChjbGVhclRpbWVvdXQoaSksaT1udWxsKX12YXIgaT1udWxsO3JldHVybntjYW5jZWw6cix0aHJvdHRsZTpmdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPTA7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl0W2VdPWFyZ3VtZW50c1tlXTtyKCksaT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aT1udWxsLG4uYXBwbHkobnVsbCx0KX0sbyl9fX1mdW5jdGlvbiBicChvLHQsZSxuLHIpe3ZhciBpPUFwKG8sZnVuY3Rpb24odCl7cmV0dXJuKGU9bykuaXNCbG9jayhuPXQpfHx3dChbXCJCUlwiLFwiSU1HXCIsXCJIUlwiLFwiSU5QVVRcIl0sbi5ub2RlTmFtZSl8fFwiZmFsc2VcIj09PWUuZ2V0Q29udGVudEVkaXRhYmxlKG4pO3ZhciBlLG59KTtyZXR1cm4gdnQuZnJvbShpLmJhY2t3YXJkcyh0LGUsbixyKSl9ZnVuY3Rpb24geXAobixlKXtyZXR1cm4gQnAoTXQuZnJvbURvbShuLnNlbGVjdGlvbi5nZXROb2RlKCkpKS5nZXRPclRodW5rKGZ1bmN0aW9uKCl7dmFyIGksdSx0PU10LmZyb21IdG1sKCc8c3BhbiBkYXRhLW1jZS1hdXRvY29tcGxldGVyPVwiMVwiIGRhdGEtbWNlLWJvZ3VzPVwiMVwiPjwvc3Bhbj4nLG4uZ2V0RG9jKCkpO3JldHVybiBUbih0LE10LmZyb21Eb20oZS5leHRyYWN0Q29udGVudHMoKSkpLGUuaW5zZXJ0Tm9kZSh0LmRvbSksWXQodCkuZWFjaChmdW5jdGlvbih0KXtyZXR1cm4gdC5kb20ubm9ybWFsaXplKCl9KSxpPWhzLCh1PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1LdCh0KSxuPWUubGVuZ3RoLTE7MDw9bjtuLS0pe3ZhciBvPWVbbl07aWYoaShvKSlyZXR1cm4gdnQuc29tZShvKTt2YXIgcj11KG8pO2lmKHIuaXNTb21lKCkpcmV0dXJuIHJ9cmV0dXJuIHZ0Lm5vbmUoKX0pKHQpLm1hcChmdW5jdGlvbih0KXt2YXIgZTtuLnNlbGVjdGlvbi5zZXRDdXJzb3JMb2NhdGlvbih0LmRvbSxcImltZ1wiPT09RnQoZT10KT8xOnBzKGUpLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gS3QoZSkubGVuZ3RofSxmdW5jdGlvbih0KXtyZXR1cm4gdC5sZW5ndGh9KSl9KSx0fSl9ZnVuY3Rpb24geHAodCl7cmV0dXJuIHQudG9TdHJpbmcoKS5yZXBsYWNlKC9cXHUwMEEwL2csXCIgXCIpLnJlcGxhY2UoL1xcdUZFRkYvZyxcIlwiKX1mdW5jdGlvbiB3cCh0KXtyZXR1cm5cIlwiIT09dCYmLTEhPT1cIiBcXHhhMFxcZlxcblxcclxcdFxcdlwiLmluZGV4T2YodCl9ZnVuY3Rpb24gU3AodCxlKXtyZXR1cm4gdC5zdWJzdHJpbmcoZS5sZW5ndGgpfWZ1bmN0aW9uIGtwKG8sdCxyLGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT0wKSxCcChNdC5mcm9tRG9tKHQuc3RhcnRDb250YWluZXIpKS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQsbyxpLHIpe2lmKHZvaWQgMD09PXImJihyPTApLCFvLmNvbGxhcHNlZHx8MyE9PW8uc3RhcnRDb250YWluZXIubm9kZVR5cGUpcmV0dXJuIHZ0Lm5vbmUoKTt2YXIgZT10LmdldFBhcmVudChvLnN0YXJ0Q29udGFpbmVyLHQuaXNCbG9jayl8fHQuZ2V0Um9vdCgpO3JldHVybiBicCh0LG8uc3RhcnRDb250YWluZXIsby5zdGFydE9mZnNldCxmdW5jdGlvbih0LHIsZSl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXItMTswPD1uO24tLSl7dmFyIG89dC5jaGFyQXQobik7aWYod3AobykpcmV0dXJuIHZ0Lm5vbmUoKTtpZihvPT09ZSlicmVha31yZXR1cm4gdnQuc29tZShuKX0oZSxpKS5nZXRPcihyKX0sZSkuYmluZChmdW5jdGlvbih0KXt2YXIgZT1vLmNsb25lUmFuZ2UoKTtpZihlLnNldFN0YXJ0KHQuY29udGFpbmVyLHQub2Zmc2V0KSxlLnNldEVuZChvLmVuZENvbnRhaW5lcixvLmVuZE9mZnNldCksZS5jb2xsYXBzZWQpcmV0dXJuIHZ0Lm5vbmUoKTt2YXIgbj14cChlKTtyZXR1cm4gMCE9PW4ubGFzdEluZGV4T2YoaSl8fFNwKG4saSkubGVuZ3RoPHI/dnQubm9uZSgpOnZ0LnNvbWUoe3RleHQ6U3AobixpKSxyYW5nZTplLHRyaWdnZXJDaGFyOml9KX0pfShvLHQscixlKX0sZnVuY3Rpb24odCl7dmFyIGU9by5jcmVhdGVSbmcoKTtlLnNlbGVjdE5vZGUodC5kb20pO3ZhciBuPXhwKGUpO3JldHVybiB2dC5zb21lKHtyYW5nZTplLHRleHQ6U3AobixyKSx0cmlnZ2VyQ2hhcjpyfSl9KX1mdW5jdGlvbiBDcCh0LGUpe3JldHVybntjb250YWluZXI6dCxvZmZzZXQ6ZX19ZnVuY3Rpb24gT3AodCl7cmV0dXJuIGFvKFwidG9vbGJhcmJ1dHRvblwiLEhwLHQpfWZ1bmN0aW9uIF9wKHQpe3JldHVybiBhbyhcIlRvZ2dsZUJ1dHRvblwiLHpwLHQpfWZ1bmN0aW9uIFRwKGUsdCxuLG8pe3ZvaWQgMD09PW8mJihvPXt9KTt2YXIgcj10KCksaT1lLnNlbGVjdGlvbi5nZXRSbmcoKS5zdGFydENvbnRhaW5lci5ub2RlVmFsdWUsdT1GKHIubG9va3VwQnlDaGFyKG4udHJpZ2dlckNoYXIpLGZ1bmN0aW9uKHQpe3JldHVybiBuLnRleHQubGVuZ3RoPj10Lm1pbkNoYXJzJiZ0Lm1hdGNoZXMuZ2V0T3JUaHVuayhmdW5jdGlvbigpe3JldHVybiBuPWUuZG9tLGZ1bmN0aW9uKHQpe3ZhciBlPUlwKHQuc3RhcnRDb250YWluZXIsdC5zdGFydE9mZnNldCk7cmV0dXJuIWJwKG4sZS5jb250YWluZXIsZS5vZmZzZXQsZnVuY3Rpb24odCxlKXtyZXR1cm4gMD09PWU/LTE6ZX0sbi5nZXRSb290KCkpLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4hd3AodC5jb250YWluZXIuZGF0YS5jaGFyQXQodC5vZmZzZXQtMSkpfSkuaXNTb21lKCl9O3ZhciBufSkobi5yYW5nZSxpLG4udGV4dCl9KTtpZigwPT09dS5sZW5ndGgpcmV0dXJuIHZ0Lm5vbmUoKTt2YXIgYT1NcC5hbGwoQih1LGZ1bmN0aW9uKGUpe3JldHVybiBlLmZldGNoKG4udGV4dCxlLm1heFJlc3VsdHMsbykudGhlbihmdW5jdGlvbih0KXtyZXR1cm57bWF0Y2hUZXh0Om4udGV4dCxpdGVtczp0LGNvbHVtbnM6ZS5jb2x1bW5zLG9uQWN0aW9uOmUub25BY3Rpb24saGlnaGxpZ2h0T246ZS5oaWdobGlnaHRPbn19KX0pKTtyZXR1cm4gdnQuc29tZSh7bG9va3VwRGF0YTphLGNvbnRleHQ6bn0pfXZhciBFcCxEcCxBcD10aW55bWNlLnV0aWwuVG9vbHMucmVzb2x2ZShcInRpbnltY2UuZG9tLlRleHRTZWVrZXJcIiksQnA9ZnVuY3Rpb24odCl7cmV0dXJuIFJ1KHQsXCJbZGF0YS1tY2UtYXV0b2NvbXBsZXRlcl1cIil9LE1wPXRpbnltY2UudXRpbC5Ub29scy5yZXNvbHZlKFwidGlueW1jZS51dGlsLlByb21pc2VcIiksRnA9ZnVuY3Rpb24odCl7aWYoMz09PXQubm9kZVR5cGUpcmV0dXJuIENwKHQsdC5kYXRhLmxlbmd0aCk7dmFyIGU9dC5jaGlsZE5vZGVzO3JldHVybiAwPGUubGVuZ3RoP0ZwKGVbZS5sZW5ndGgtMV0pOkNwKHQsZS5sZW5ndGgpfSxJcD1mdW5jdGlvbih0LGUpe3ZhciBuPXQuY2hpbGROb2RlcztyZXR1cm4gMDxuLmxlbmd0aCYmZTxuLmxlbmd0aD9JcChuW2VdLDApOjA8bi5sZW5ndGgmJjE9PT10Lm5vZGVUeXBlJiZuLmxlbmd0aD09PWU/RnAobltuLmxlbmd0aC0xXSk6Q3AodCxlKX0sUnA9JG8oW3BvKFwidHlwZVwiKSxDbyhcInRleHRcIildKSxOcD0kbyhbRW8oXCJ0eXBlXCIsXCJhdXRvY29tcGxldGVpdGVtXCIpLEVvKFwiYWN0aXZlXCIsITEpLEVvKFwiZGlzYWJsZWRcIiwhMSksRW8oXCJtZXRhXCIse30pLHBvKFwidmFsdWVcIiksQ28oXCJ0ZXh0XCIpLENvKFwiaWNvblwiKV0pLFBwPSRvKFtwbyhcInR5cGVcIikscG8oXCJjaFwiKSxBbyhcIm1pbkNoYXJzXCIsMSksRW8oXCJjb2x1bW5zXCIsMSksQW8oXCJtYXhSZXN1bHRzXCIsMTApLE9vKFwibWF0Y2hlc1wiKSx2byhcImZldGNoXCIpLHZvKFwib25BY3Rpb25cIiksUm8oXCJoaWdobGlnaHRPblwiLFtdLGVyKV0pLFZwPVtGbyhcImRpc2FibGVkXCIsITEpLENvKFwidG9vbHRpcFwiKSxDbyhcImljb25cIiksQ28oXCJ0ZXh0XCIpLElvKFwib25TZXR1cFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHN0fSldLEhwPSRvKFtwbyhcInR5cGVcIiksdm8oXCJvbkFjdGlvblwiKV0uY29uY2F0KFZwKSksTHA9W0ZvKFwiYWN0aXZlXCIsITEpXS5jb25jYXQoVnApLHpwPSRvKExwLmNvbmNhdChbcG8oXCJ0eXBlXCIpLHZvKFwib25BY3Rpb25cIildKSksVXA9W0lvKFwicHJlZGljYXRlXCIsVCksTW8oXCJzY29wZVwiLFwibm9kZVwiLFtcIm5vZGVcIixcImVkaXRvclwiXSksTW8oXCJwb3NpdGlvblwiLFwic2VsZWN0aW9uXCIsW1wibm9kZVwiLFwic2VsZWN0aW9uXCIsXCJsaW5lXCJdKV0sanA9VnAuY29uY2F0KFtFbyhcInR5cGVcIixcImNvbnRleHRmb3JtYnV0dG9uXCIpLEVvKFwicHJpbWFyeVwiLCExKSx2byhcIm9uQWN0aW9uXCIpLGNyKFwib3JpZ2luYWxcIixoKV0pLFdwPUxwLmNvbmNhdChbRW8oXCJ0eXBlXCIsXCJjb250ZXh0Zm9ybWJ1dHRvblwiKSxFbyhcInByaW1hcnlcIiwhMSksdm8oXCJvbkFjdGlvblwiKSxjcihcIm9yaWdpbmFsXCIsaCldKSxHcD1WcC5jb25jYXQoW0VvKFwidHlwZVwiLFwiY29udGV4dGZvcm1idXR0b25cIildKSxYcD1McC5jb25jYXQoW0VvKFwidHlwZVwiLFwiY29udGV4dGZvcm10b2dnbGVidXR0b25cIildKSxZcD1sbyhcInR5cGVcIix7Y29udGV4dGZvcm1idXR0b246anAsY29udGV4dGZvcm10b2dnbGVidXR0b246V3B9KSxxcD0kbyhbRW8oXCJ0eXBlXCIsXCJjb250ZXh0Zm9ybVwiKSxJbyhcImluaXRWYWx1ZVwiLHJ0KFwiXCIpKSxDbyhcImxhYmVsXCIpLHhvKFwiY29tbWFuZHNcIixZcCksU28oXCJsYXVuY2hcIixsbyhcInR5cGVcIix7Y29udGV4dGZvcm1idXR0b246R3AsY29udGV4dGZvcm10b2dnbGVidXR0b246WHB9KSldLmNvbmNhdChVcCkpLEtwPSRvKFtFbyhcInR5cGVcIixcImNvbnRleHR0b29sYmFyXCIpLHBvKFwiaXRlbXNcIildLmNvbmNhdChVcCkpO2Z1bmN0aW9uIEpwKHQpe3JldHVybiB0dChfaCx0KS5nZXRPcihraCl9ZnVuY3Rpb24gJHAodCl7cmV0dXJue2JhY2tncm91bmRNZW51OlwidG94LWJhY2tncm91bmQtbWVudVwiLHNlbGVjdGVkTWVudTpcInRveC1zZWxlY3RlZC1tZW51XCIsc2VsZWN0ZWRJdGVtOlwidG94LWNvbGxlY3Rpb25fX2l0ZW0tLWFjdGl2ZVwiLGhhc0ljb25zOlwidG94LW1lbnUtLWhhcy1pY29uc1wiLG1lbnU6XCJjb2xvclwiPT09dD9cInRveC1zd2F0Y2hlc1wiOlwidG94LW1lbnVcIix0aWVyZWRNZW51OlwidG94LXRpZXJlZC1tZW51XCJ9fWZ1bmN0aW9uIFFwKHQpe3ZhciBlPSRwKHQpO3JldHVybntiYWNrZ3JvdW5kTWVudTplLmJhY2tncm91bmRNZW51LHNlbGVjdGVkTWVudTplLnNlbGVjdGVkTWVudSxtZW51OmUubWVudSxzZWxlY3RlZEl0ZW06ZS5zZWxlY3RlZEl0ZW0saXRlbTpKcCh0KX19ZnVuY3Rpb24gWnAodCxlLG4pe3JldHVybntkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6ZnQoW1skcChuKS50aWVyZWRNZW51XV0pfSxtYXJrZXJzOlFwKG4pfX1mdW5jdGlvbiB0aChlLG4pe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gQihwKHQsbiksZnVuY3Rpb24odCl7cmV0dXJue2RvbTplLGNvbXBvbmVudHM6dH19KX19ZnVuY3Rpb24gZWgodCxuKXt2YXIgbz1bXSxyPVtdO3JldHVybiBTdCh0LGZ1bmN0aW9uKHQsZSl7bih0LGUpPygwPHIubGVuZ3RoJiZvLnB1c2gocikscj1bXSxUdCh0LmRvbSxcImlubmVySHRtbFwiKSYmci5wdXNoKHQpKTpyLnB1c2godCl9KSwwPHIubGVuZ3RoJiZvLnB1c2gociksQihvLGZ1bmN0aW9uKHQpe3JldHVybntkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWNvbGxlY3Rpb25fX2dyb3VwXCJdfSxjb21wb25lbnRzOnR9fSl9ZnVuY3Rpb24gbmgoZSxuKXtyZXR1cm57ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1tZW51XCIsXCJ0b3gtY29sbGVjdGlvblwiXS5jb25jYXQoMT09PWU/W1widG94LWNvbGxlY3Rpb24tLWxpc3RcIl06W1widG94LWNvbGxlY3Rpb24tLWdyaWRcIl0pfSxjb21wb25lbnRzOlt0cC5wYXJ0cy5pdGVtcyh7cHJlcHJvY2VzczpmdW5jdGlvbih0KXtyZXR1cm5cImF1dG9cIiE9PWUmJjE8ZT90aCh7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtY29sbGVjdGlvbl9fZ3JvdXBcIl19LGUpKHQpOmVoKHQsZnVuY3Rpb24odCxlKXtyZXR1cm5cInNlcGFyYXRvclwiPT09bltlXS50eXBlfSl9fSldfX1mdW5jdGlvbiBvaCh0KXtyZXR1cm4gZCh0LGZ1bmN0aW9uKHQpe3JldHVyblwiaWNvblwiaW4gdCYmdm9pZCAwIT09dC5pY29ufSl9ZnVuY3Rpb24gcmgodCl7cmV0dXJuIGNvbnNvbGUuZXJyb3IodXIodCkpLGNvbnNvbGUubG9nKHQpLHZ0Lm5vbmUoKX1mdW5jdGlvbiBpaCh0LGUsbixvLHIpe3ZhciBpLHU9KGk9bix7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1jb2xsZWN0aW9uXCIsXCJ0b3gtY29sbGVjdGlvbi0taG9yaXpvbnRhbFwiXX0sY29tcG9uZW50czpbdHAucGFydHMuaXRlbXMoe3ByZXByb2Nlc3M6ZnVuY3Rpb24odCl7cmV0dXJuIGVoKHQsZnVuY3Rpb24odCxlKXtyZXR1cm5cInNlcGFyYXRvclwiPT09aVtlXS50eXBlfSl9fSldfSk7cmV0dXJue3ZhbHVlOnQsZG9tOnUuZG9tLGNvbXBvbmVudHM6dS5jb21wb25lbnRzLGl0ZW1zOm59fWZ1bmN0aW9uIHVoKHQsZSxuLG8scil7dmFyIGksdTtyZXR1cm5cImNvbG9yXCI9PT1yP3t2YWx1ZTp0LGRvbTooaT17ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1tZW51XCIsXCJ0b3gtc3dhdGNoZXMtbWVudVwiXX0sY29tcG9uZW50czpbe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtc3dhdGNoZXNcIl19LGNvbXBvbmVudHM6W3RwLnBhcnRzLml0ZW1zKHtwcmVwcm9jZXNzOlwiYXV0b1wiIT09bz90aCh7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtc3dhdGNoZXNfX3Jvd1wiXX0sbyk6aH0pXX1dfSkuZG9tLGNvbXBvbmVudHM6aS5jb21wb25lbnRzLGl0ZW1zOm59Olwibm9ybWFsXCI9PT1yJiZcImF1dG9cIj09PW8/e3ZhbHVlOnQsZG9tOihpPW5oKG8sbikpLmRvbSxjb21wb25lbnRzOmkuY29tcG9uZW50cyxpdGVtczpufTpcIm5vcm1hbFwiPT09ciYmMT09PW8/e3ZhbHVlOnQsZG9tOihpPW5oKDEsbikpLmRvbSxjb21wb25lbnRzOmkuY29tcG9uZW50cyxpdGVtczpufTpcIm5vcm1hbFwiPT09cj97dmFsdWU6dCxkb206KGk9bmgobyxuKSkuZG9tLGNvbXBvbmVudHM6aS5jb21wb25lbnRzLGl0ZW1zOm59OlwibGlzdHByZXZpZXdcIiE9PXJ8fFwiYXV0b1wiPT09bz97dmFsdWU6dCxkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6ZnQoW1sodT0kcChyKSkubWVudSxcInRveC1tZW51LVwiK28rXCItY29sdW1uXCJdLGU/W3UuaGFzSWNvbnNdOltdXSl9LGNvbXBvbmVudHM6SWgsaXRlbXM6bn06e3ZhbHVlOnQsZG9tOihpPXtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LW1lbnVcIixcInRveC1jb2xsZWN0aW9uXCIsXCJ0b3gtY29sbGVjdGlvbi0tdG9vbGJhclwiLFwidG94LWNvbGxlY3Rpb24tLXRvb2xiYXItbGdcIl19LGNvbXBvbmVudHM6W3RwLnBhcnRzLml0ZW1zKHtwcmVwcm9jZXNzOnRoKHt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1jb2xsZWN0aW9uX19ncm91cFwiXX0sbyl9KV19KS5kb20sY29tcG9uZW50czppLmNvbXBvbmVudHMsaXRlbXM6bn19ZnVuY3Rpb24gYWgodCxvLGUpe3ZhciByPXZzKHQuZWxlbWVudCxcIi5cIitlKTtpZigwPHIubGVuZ3RoKXt2YXIgbj1QKHIsZnVuY3Rpb24odCl7dmFyIGU9dC5kb20uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wLG49clswXS5kb20uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wO3JldHVybiBNYXRoLmFicyhlLW4pPm99KS5nZXRPcihyLmxlbmd0aCk7cmV0dXJuIHZ0LnNvbWUoe251bUNvbHVtbnM6bixudW1Sb3dzOk1hdGguY2VpbChyLmxlbmd0aC9uKX0pfXJldHVybiB2dC5ub25lKCl9ZnVuY3Rpb24gY2godCxlLG4pe3QuZ2V0U3lzdGVtKCkuYnJvYWRjYXN0T24oW0poXSx7fSl9ZnVuY3Rpb24gc2godCl7cmV0dXJuIHQuZ2V0UGFyYW0oXCJoZWlnaHRcIixNYXRoLm1heCh0LmdldEVsZW1lbnQoKS5vZmZzZXRIZWlnaHQsMjAwKSl9ZnVuY3Rpb24gbGgodCl7cmV0dXJuIHQuZ2V0UGFyYW0oXCJ3aWR0aFwiLG52LkRPTS5nZXRTdHlsZSh0LmdldEVsZW1lbnQoKSxcIndpZHRoXCIpKX1mdW5jdGlvbiBmaCh0KXtyZXR1cm4gdnQuZnJvbSh0LmdldFBhcmFtKFwibWluX3dpZHRoXCIpKS5maWx0ZXIodSl9ZnVuY3Rpb24gZGgodCl7cmV0dXJuIHZ0LmZyb20odC5nZXRQYXJhbShcIm1pbl9oZWlnaHRcIikpLmZpbHRlcih1KX1mdW5jdGlvbiBtaCh0KXtyZXR1cm4gdnQuZnJvbSh0LmdldFBhcmFtKFwibWF4X3dpZHRoXCIpKS5maWx0ZXIodSl9ZnVuY3Rpb24gZ2godCl7cmV0dXJuIHZ0LmZyb20odC5nZXRQYXJhbShcIm1heF9oZWlnaHRcIikpLmZpbHRlcih1KX1mdW5jdGlvbiBwaCh0KXtyZXR1cm4hMSE9PXQuZ2V0UGFyYW0oXCJtZW51YmFyXCIsITAsXCJib29sZWFuXCIpfWZ1bmN0aW9uIGhoKHQpe3ZhciBlPXQuZ2V0UGFyYW0oXCJ0b29sYmFyXCIsITApLG49ITA9PT1lLG89eShlKSxyPWMoZSkmJjA8ZS5sZW5ndGg7cmV0dXJuIXJ2KHQpJiYocnx8b3x8bil9ZnVuY3Rpb24gdmgoZSl7dmFyIHQ9RihtKDksZnVuY3Rpb24odCl7cmV0dXJuIGUuZ2V0UGFyYW0oXCJ0b29sYmFyXCIrKHQrMSksITEsXCJzdHJpbmdcIil9KSxmdW5jdGlvbih0KXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdH0pO3JldHVybiAwPHQubGVuZ3RoP3Z0LnNvbWUodCk6dnQubm9uZSgpfShEcD1FcD17fSlbRHAuQ0xPU0VfT05fRVhFQ1VURT0wXT1cIkNMT1NFX09OX0VYRUNVVEVcIixEcFtEcC5CVUJCTEVfVE9fU0FOREJPWD0xXT1cIkJVQkJMRV9UT19TQU5EQk9YXCI7dmFyIGJoLHloLHhoLHdoLFNoPUVwLGtoPVwidG94LW1lbnUtbmF2X19qc1wiLENoPVwidG94LWNvbGxlY3Rpb25fX2l0ZW1cIixPaD1cInRveC1zd2F0Y2hcIixfaD17bm9ybWFsOmtoLGNvbG9yOk9ofSxUaD1cInRveC1jb2xsZWN0aW9uX19pdGVtLS1lbmFibGVkXCIsRWg9XCJ0b3gtY29sbGVjdGlvbl9faXRlbS1pY29uXCIsRGg9XCJ0b3gtY29sbGVjdGlvbl9faXRlbS1sYWJlbFwiLEFoPVwidG94LWNvbGxlY3Rpb25fX2l0ZW0tY2FyZXRcIixCaD1cInRveC1jb2xsZWN0aW9uX19pdGVtLS1hY3RpdmVcIixNaD1cInRveC1jb2xsZWN0aW9uX19pdGVtLWNvbnRhaW5lclwiLEZoPVwidG94LWNvbGxlY3Rpb25fX2l0ZW0tY29udGFpbmVyLS1yb3dcIixJaD1bdHAucGFydHMuaXRlbXMoe30pXSxSaD1bcG8oXCJ0eXBlXCIpLHBvKFwic3JjXCIpLENvKFwiYWx0XCIpLFJvKFwiY2xhc3Nlc1wiLFtdLGVyKV0sTmg9JG8oUmgpLFBoPVtwbyhcInR5cGVcIikscG8oXCJ0ZXh0XCIpLENvKFwibmFtZVwiKSxSbyhcImNsYXNzZXNcIixbXCJ0b3gtY29sbGVjdGlvbl9faXRlbS1sYWJlbFwiXSxlcildLFZoPSRvKFBoKSxIaD1abihmdW5jdGlvbigpe3JldHVybiBybyhcInR5cGVcIix7Y2FyZGltYWdlOk5oLGNhcmR0ZXh0OlZoLGNhcmRjb250YWluZXI6TGh9KX0pLExoPSRvKFtwbyhcInR5cGVcIiksQm8oXCJkaXJlY3Rpb25cIixcImhvcml6b250YWxcIiksQm8oXCJhbGlnblwiLFwibGVmdFwiKSxCbyhcInZhbGlnblwiLFwibWlkZGxlXCIpLHhvKFwiaXRlbXNcIixIaCldKSx6aD1bRm8oXCJkaXNhYmxlZFwiLCExKSxDbyhcInRleHRcIiksQ28oXCJzaG9ydGN1dFwiKSxhcihcInZhbHVlXCIsXCJ2YWx1ZVwiLFduKGZ1bmN0aW9uKCl7cmV0dXJuIElyKFwibWVudWl0ZW0tdmFsdWVcIil9KSxabygpKSxFbyhcIm1ldGFcIix7fSldLFVoPSRvKFtwbyhcInR5cGVcIiksQ28oXCJsYWJlbFwiKSx4byhcIml0ZW1zXCIsSGgpLElvKFwib25TZXR1cFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHN0fSksSW8oXCJvbkFjdGlvblwiLHN0KV0uY29uY2F0KHpoKSksamg9JG8oW3BvKFwidHlwZVwiKSxGbyhcImFjdGl2ZVwiLCExKSxDbyhcImljb25cIildLmNvbmNhdCh6aCkpLFdoPVtwbyhcInR5cGVcIikscG8oXCJmYW5jeXR5cGVcIiksSW8oXCJvbkFjdGlvblwiLHN0KV0sR2g9bG8oXCJmYW5jeXR5cGVcIix7aW5zZXJ0dGFibGU6W0VvKFwiaW5pdERhdGFcIix7fSldLmNvbmNhdChXaCksY29sb3Jzd2F0Y2g6W05vKFwiaW5pdERhdGFcIix7fSxbRm8oXCJhbGxvd0N1c3RvbUNvbG9yc1wiLCEwKSxfbyhcImNvbG9yc1wiLFpvKCkpXSldLmNvbmNhdChXaCl9KSxYaD0kbyhbcG8oXCJ0eXBlXCIpLElvKFwib25TZXR1cFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHN0fSksSW8oXCJvbkFjdGlvblwiLHN0KSxDbyhcImljb25cIildLmNvbmNhdCh6aCkpLFloPSRvKFtwbyhcInR5cGVcIiksdm8oXCJnZXRTdWJtZW51SXRlbXNcIiksSW8oXCJvblNldHVwXCIsZnVuY3Rpb24oKXtyZXR1cm4gc3R9KSxDbyhcImljb25cIildLmNvbmNhdCh6aCkpLHFoPSRvKFtwbyhcInR5cGVcIiksQ28oXCJpY29uXCIpLEZvKFwiYWN0aXZlXCIsITEpLElvKFwib25TZXR1cFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHN0fSksdm8oXCJvbkFjdGlvblwiKV0uY29uY2F0KHpoKSksS2g9ZnVuY3Rpb24odCl7cmV0dXJuIGU9SXIoXCJ1bm5hbWVkLWV2ZW50c1wiKSxlYyhbbW0oZSx0KV0pO3ZhciBlfSxKaD1JcihcInRvb2x0aXAuZXhjbHVzaXZlXCIpLCRoPUlyKFwidG9vbHRpcC5zaG93XCIpLFFoPUlyKFwidG9vbHRpcC5oaWRlXCIpLFpoPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGhpZGVBbGxFeGNsdXNpdmU6Y2gsc2V0Q29tcG9uZW50czpmdW5jdGlvbih0LGUsbixvKXtuLmdldFRvb2x0aXAoKS5lYWNoKGZ1bmN0aW9uKHQpe3QuZ2V0U3lzdGVtKCkuaXNDb25uZWN0ZWQoKSYmUmcuc2V0KHQsbyl9KX19KSx0dj1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxldmVudHM6ZnVuY3Rpb24ocixpKXtmdW5jdGlvbiBuKGUpe2kuZ2V0VG9vbHRpcCgpLmVhY2goZnVuY3Rpb24odCl7VnModCksci5vbkhpZGUoZSx0KSxpLmNsZWFyVG9vbHRpcCgpfSksaS5jbGVhclRpbWVyKCl9cmV0dXJuIG51KGZ0KFtbQ3IoJGgsZnVuY3Rpb24obyl7aS5yZXNldFRpbWVyKGZ1bmN0aW9uKCl7dmFyIHQsZSxuPW87aS5pc1Nob3dpbmcoKXx8KGNoKG4pLHQ9ci5sYXp5U2luayhuKS5nZXRPckRpZSgpLGU9bi5nZXRTeXN0ZW0oKS5idWlsZCh7ZG9tOnIudG9vbHRpcERvbSxjb21wb25lbnRzOnIudG9vbHRpcENvbXBvbmVudHMsZXZlbnRzOm51KFwibm9ybWFsXCI9PT1yLm1vZGU/W0NyKHZpKCksZnVuY3Rpb24odCl7dnIobiwkaCl9KSxDcihwaSgpLGZ1bmN0aW9uKHQpe3ZyKG4sUWgpfSldOltdKSxiZWhhdmlvdXJzOmVjKFtSZy5jb25maWcoe30pXSl9KSxpLnNldFRvb2x0aXAoZSksTnModCxlKSxyLm9uU2hvdyhuLGUpLGZmLnBvc2l0aW9uKHQsZSx7YW5jaG9yOnIuYW5jaG9yKG4pfSkpfSxyLmRlbGF5KX0pLENyKFFoLGZ1bmN0aW9uKHQpe2kucmVzZXRUaW1lcihmdW5jdGlvbigpe24odCl9LHIuZGVsYXkpfSksQ3IoRmkoKSxmdW5jdGlvbih0LGUpe2UudW5pdmVyc2FsfHx3dChlLmNoYW5uZWxzLEpoKSYmbih0KX0pLHJ1KGZ1bmN0aW9uKHQpe24odCl9KV0sXCJub3JtYWxcIj09PXIubW9kZT9bQ3IoYmkoKSxmdW5jdGlvbih0KXt2cih0LCRoKX0pLENyKEJpKCksZnVuY3Rpb24odCl7dnIodCxRaCl9KSxDcih2aSgpLGZ1bmN0aW9uKHQpe3ZyKHQsJGgpfSksQ3IocGkoKSxmdW5jdGlvbih0KXt2cih0LFFoKX0pXTpbQ3IoWmkoKSxmdW5jdGlvbih0LGUpe3ZyKHQsJGgpfSksQ3IodHUoKSxmdW5jdGlvbih0KXt2cih0LFFoKX0pXV0pKX19KSxldj14YSh7ZmllbGRzOlttbyhcImxhenlTaW5rXCIpLG1vKFwidG9vbHRpcERvbVwiKSxFbyhcImV4Y2x1c2l2ZVwiLCEwKSxFbyhcInRvb2x0aXBDb21wb25lbnRzXCIsW10pLEVvKFwiZGVsYXlcIiwzMDApLE1vKFwibW9kZVwiLFwibm9ybWFsXCIsW1wibm9ybWFsXCIsXCJmb2xsb3ctaGlnaGxpZ2h0XCJdKSxFbyhcImFuY2hvclwiLGZ1bmN0aW9uKHQpe3JldHVybnt0eXBlOlwiaG90c3BvdFwiLGhvdHNwb3Q6dCxsYXlvdXRzOntvbkx0cjpydChbJGEsSmEsWGEscWEsWWEsS2FdKSxvblJ0bDpydChbJGEsSmEsWGEscWEsWWEsS2FdKX19fSksSnUoXCJvbkhpZGVcIiksSnUoXCJvblNob3dcIildLG5hbWU6XCJ0b29sdGlwcGluZ1wiLGFjdGl2ZTp0dixzdGF0ZTpPYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxpbml0OmZ1bmN0aW9uKCl7ZnVuY3Rpb24gbigpe28ub24oY2xlYXJUaW1lb3V0KX12YXIgbz1nYygpLHQ9Z2MoKSxlPXJ0KFwibm90LWltcGxlbWVudGVkXCIpO3JldHVybiB3dSh7Z2V0VG9vbHRpcDp0LmdldCxpc1Nob3dpbmc6dC5pc1NldCxzZXRUb29sdGlwOnQuc2V0LGNsZWFyVG9vbHRpcDp0LmNsZWFyLGNsZWFyVGltZXI6bixyZXNldFRpbWVyOmZ1bmN0aW9uKHQsZSl7bigpLG8uc2V0KHNldFRpbWVvdXQodCxlKSl9LHJlYWRTdGF0ZTplfSl9fSksYXBpczpaaH0pLG52PXRpbnltY2UudXRpbC5Ub29scy5yZXNvbHZlKFwidGlueW1jZS5kb20uRE9NVXRpbHNcIiksb3Y9dGlueW1jZS51dGlsLlRvb2xzLnJlc29sdmUoXCJ0aW55bWNlLkVkaXRvck1hbmFnZXJcIikscnY9ZnVuY3Rpb24odCl7cmV0dXJuIHZoKHQpLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gMDx0LmdldFBhcmFtKFwidG9vbGJhclwiLFtdLFwic3RyaW5nW11cIikubGVuZ3RofSxEKX07ZnVuY3Rpb24gaXYodCl7cmV0dXJuIHQuZ2V0UGFyYW0oXCJ0b29sYmFyX21vZGVcIixcIlwiLFwic3RyaW5nXCIpfWZ1bmN0aW9uIHV2KHQpe3JldHVybiB0LmdldFBhcmFtKFwidG9vbGJhcl9sb2NhdGlvblwiLHhoLmF1dG8sXCJzdHJpbmdcIil9ZnVuY3Rpb24gYXYodCl7cmV0dXJuIHV2KHQpPT09eGguYm90dG9tfWZ1bmN0aW9uIGN2KHQpe2lmKCF0LmlubGluZSlyZXR1cm4gdnQubm9uZSgpO3ZhciBlPXQuZ2V0UGFyYW0oXCJmaXhlZF90b29sYmFyX2NvbnRhaW5lclwiLFwiXCIsXCJzdHJpbmdcIik7aWYoMDxlLmxlbmd0aClyZXR1cm4gSXUoYm4oKSxlKTt2YXIgbj10LmdldFBhcmFtKFwiZml4ZWRfdG9vbGJhcl9jb250YWluZXJfdGFyZ2V0XCIpO3JldHVybiBrKG4pP3Z0LnNvbWUoTXQuZnJvbURvbShuKSk6dnQubm9uZSgpfWZ1bmN0aW9uIHN2KHQpe3JldHVybiB0LmlubGluZSYmY3YodCkuaXNTb21lKCl9ZnVuY3Rpb24gbHYodCl7cmV0dXJuIGN2KHQpLmdldE9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gdGUoZ24oTXQuZnJvbURvbSh0LmdldEVsZW1lbnQoKSkpKX0pfWZ1bmN0aW9uIGZ2KHQpe3JldHVybiB0LmlubGluZSYmIXBoKHQpJiYhaGgodCkmJiFydih0KX1mdW5jdGlvbiBkdih0KXtyZXR1cm4odC5nZXRQYXJhbShcInRvb2xiYXJfc3RpY2t5XCIsITEsXCJib29sZWFuXCIpfHx0LmlubGluZSkmJiFzdih0KSYmIWZ2KHQpfWZ1bmN0aW9uIG12KHQsZSl7dmFyIG49dC5vdXRlckNvbnRhaW5lci5lbGVtZW50O2UmJih0Lm1vdGhlcnNoaXAuYnJvYWRjYXN0T24oW3lmKCldLHt0YXJnZXQ6bn0pLHQudWlNb3RoZXJzaGlwLmJyb2FkY2FzdE9uKFt5ZigpXSx7dGFyZ2V0Om59KSksdC5tb3RoZXJzaGlwLmJyb2FkY2FzdE9uKFtLdl0se3JlYWRvbmx5OmV9KSx0LnVpTW90aGVyc2hpcC5icm9hZGNhc3RPbihbS3ZdLHtyZWFkb25seTplfSl9ZnVuY3Rpb24gZ3YodCxlKXt0Lm9uKFwiaW5pdFwiLGZ1bmN0aW9uKCl7dC5tb2RlLmlzUmVhZE9ubHkoKSYmbXYoZSwhMCl9KSx0Lm9uKFwiU3dpdGNoTW9kZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIG12KGUsdC5tb2RlLmlzUmVhZE9ubHkoKSl9KSx0LmdldFBhcmFtKFwicmVhZG9ubHlcIiwhMSxcImJvb2xlYW5cIikmJnQuc2V0TW9kZShcInJlYWRvbmx5XCIpfWZ1bmN0aW9uIHB2KCl7dmFyIHQ7cmV0dXJuIGljLmNvbmZpZyh7Y2hhbm5lbHM6KCh0PXt9KVtLdl09e3NjaGVtYTpKdixvblJlY2VpdmU6ZnVuY3Rpb24odCxlKXtnZC5zZXQodCxlLnJlYWRvbmx5KX19LHQpfSl9ZnVuY3Rpb24gaHYodCxlKXt2YXIgbj10LmdldEFwaShlKTtyZXR1cm4gZnVuY3Rpb24odCl7dChuKX19ZnVuY3Rpb24gdnYobixvKXtyZXR1cm4gb3UoZnVuY3Rpb24odCl7aHYobix0KShmdW5jdGlvbih0KXt2YXIgZT1uLm9uU2V0dXAodCk7UyhlKSYmby5zZXQoZSl9KX0pfWZ1bmN0aW9uIGJ2KGUsbil7cmV0dXJuIHJ1KGZ1bmN0aW9uKHQpe3JldHVybiBodihlLHQpKG4uZ2V0KCkpfSl9ZnVuY3Rpb24geXYodCxlLG4sbyl7dmFyIHIsaSx1PVBvKHN0KTtyZXR1cm57dHlwZTpcIml0ZW1cIixkb206ZS5kb20sY29tcG9uZW50czp0YihlLm9wdENvbXBvbmVudHMpLGRhdGE6dC5kYXRhLGV2ZW50T3JkZXI6WnYsaGFzU3VibWVudTp0LnRyaWdnZXJzU3VibWVudSxpdGVtQmVoYXZpb3VyczplYyhbbW0oXCJpdGVtLWV2ZW50c1wiLFsocj10LGk9bix1dShmdW5jdGlvbih0LGUpe2h2KHIsdCkoci5vbkFjdGlvbiksci50cmlnZ2Vyc1N1Ym1lbnV8fGkhPT1TaC5DTE9TRV9PTl9FWEVDVVRFfHwodnIodCxWaSgpKSxlLnN0b3AoKSl9KSksdnYodCx1KSxidih0LHUpXSksZ2QuY29uZmlnKHtkaXNhYmxlZDpmdW5jdGlvbigpe3JldHVybiB0LmRpc2FibGVkfHxvLmlzRGlzYWJsZWQoKX0sZGlzYWJsZUNsYXNzOlwidG94LWNvbGxlY3Rpb25fX2l0ZW0tLXN0YXRlLWRpc2FibGVkXCJ9KSxwdigpLFJnLmNvbmZpZyh7fSldLmNvbmNhdCh0Lml0ZW1CZWhhdmlvdXJzKSl9fWZ1bmN0aW9uIHh2KHQpe3JldHVybnt2YWx1ZTp0LnZhbHVlLG1ldGE6bHQoe3RleHQ6dC50ZXh0LmdldE9yKFwiXCIpfSx0Lm1ldGEpfX1mdW5jdGlvbiB3dih0LGUsbil7cmV0dXJuIFhtKHQse3RhZzpcImRpdlwiLGNsYXNzZXM6bj12b2lkIDA9PT1uP1tFaF06bn0sZSl9ZnVuY3Rpb24gU3YodCl7cmV0dXJue2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbRGhdfSxjb21wb25lbnRzOltyaShkcC50cmFuc2xhdGUodCkpXX19ZnVuY3Rpb24ga3YodCxlKXtyZXR1cm57ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOmUsaW5uZXJIdG1sOnR9fX1mdW5jdGlvbiBDdih0LGUpe3JldHVybntkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W0RoXX0sY29tcG9uZW50czpbe2RvbTp7dGFnOnQudGFnLHN0eWxlczp0LnN0eWxlc30sY29tcG9uZW50czpbcmkoZHAudHJhbnNsYXRlKGUpKV19XX19ZnVuY3Rpb24gT3YodCl7cmV0dXJue2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtY29sbGVjdGlvbl9faXRlbS1hY2Nlc3NvcnlcIl0saW5uZXJIdG1sOihuPWViLm1hYz97YWx0OlwiJiN4MjMyNTtcIixjdHJsOlwiJiN4MjMwMztcIixzaGlmdDpcIiYjeDIxRTc7XCIsbWV0YTpcIiYjeDIzMTg7XCIsYWNjZXNzOlwiJiN4MjMwMzsmI3gyMzI1O1wifTp7bWV0YTpcIkN0cmxcIixhY2Nlc3M6XCJTaGlmdCtBbHRcIn0sZT1CKHQuc3BsaXQoXCIrXCIpLGZ1bmN0aW9uKHQpe3ZhciBlPXQudG9Mb3dlckNhc2UoKS50cmltKCk7cmV0dXJuIFR0KG4sZSk/bltlXTp0fSksZWIubWFjP2Uuam9pbihcIlwiKTplLmpvaW4oXCIrXCIpKX19O3ZhciBuLGV9ZnVuY3Rpb24gX3YodCl7cmV0dXJuIHd2KFwiY2hlY2ttYXJrXCIsdCxbXCJ0b3gtY29sbGVjdGlvbl9faXRlbS1jaGVja21hcmtcIl0pfWZ1bmN0aW9uIFR2KHQpe3ZhciBlPXQubWFwKGZ1bmN0aW9uKHQpe3JldHVybnthdHRyaWJ1dGVzOnt0aXRsZTpkcC50cmFuc2xhdGUodCl9fX0pLmdldE9yKHt9KTtyZXR1cm4gbHQoe3RhZzpcImRpdlwiLGNsYXNzZXM6W2toLENoXX0sZSl9ZnVuY3Rpb24gRXYodCxlLG4sbyl7cmV0dXJuIHZvaWQgMD09PW8mJihvPXZ0Lm5vbmUoKSksXCJjb2xvclwiPT09dC5wcmVzZXRzPyhyPWUsaT1vLGM9dC5hcmlhTGFiZWwscz10LnZhbHVlLHtkb206KHU9dC5pY29uQ29udGVudC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIGU9ci5pY29ucyxuPWksVW0odCxvPWUoKSkub3IobikuZ2V0T3JUaHVuayhMbShvKSk7dmFyIGUsbixvfSkuZ2V0T3IoXCJcIiksYT17dGFnOlwiZGl2XCIsYXR0cmlidXRlczpjLm1hcChmdW5jdGlvbih0KXtyZXR1cm57dGl0bGU6ci50cmFuc2xhdGUodCl9fSkuZ2V0T3Ioe30pLGNsYXNzZXM6W1widG94LXN3YXRjaFwiXX0sbHQobHQoe30sYSksXCJjdXN0b21cIj09PXM/e3RhZzpcImJ1dHRvblwiLGNsYXNzZXM6VihWKFtdLGEuY2xhc3NlcywhMCksW1widG94LXN3YXRjaGVzX19waWNrZXItYnRuXCJdLCExKSxpbm5lckh0bWw6dX06XCJyZW1vdmVcIj09PXM/e2NsYXNzZXM6VihWKFtdLGEuY2xhc3NlcywhMCksW1widG94LXN3YXRjaC0tcmVtb3ZlXCJdLCExKSxpbm5lckh0bWw6dX06e2F0dHJpYnV0ZXM6bHQobHQoe30sYS5hdHRyaWJ1dGVzKSx7XCJkYXRhLW1jZS1jb2xvclwiOnN9KSxzdHlsZXM6e1wiYmFja2dyb3VuZC1jb2xvclwiOnN9fSkpLG9wdENvbXBvbmVudHM6W119KToobD10LGY9ZSxkPW8sbT17dGFnOlwiZGl2XCIsY2xhc3NlczpbRWhdfSxnPW4/bC5pY29uQ29udGVudC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIFhtKHQsbSxmLmljb25zLGQpfSkub3JUaHVuayhmdW5jdGlvbigpe3JldHVybiB2dC5zb21lKHtkb206bX0pfSk6dnQubm9uZSgpLHA9bC5jaGVja01hcmssaD12dC5mcm9tKGwubWV0YSkuZm9sZChmdW5jdGlvbigpe3JldHVybiBTdn0sZnVuY3Rpb24odCl7cmV0dXJuIFR0KHQsXCJzdHlsZVwiKT9DKEN2LHQuc3R5bGUpOlN2fSksdj1sLmh0bWxDb250ZW50LmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gbC50ZXh0Q29udGVudC5tYXAoaCl9LGZ1bmN0aW9uKHQpe3JldHVybiB2dC5zb21lKGt2KHQsW0RoXSkpfSkse2RvbTpUdihsLmFyaWFMYWJlbCksb3B0Q29tcG9uZW50czpbZyx2LGwuc2hvcnRjdXRDb250ZW50Lm1hcChPdikscCxsLmNhcmV0XX0pO3ZhciByLGksdSxhLGMscyxsLGYsZCxtLGcscCxoLHZ9ZnVuY3Rpb24gRHYodCxlKXtyZXR1cm4gdHQodCxcInRvb2x0aXBXb3JrZXJcIikubWFwKGZ1bmN0aW9uKG4pe3JldHVybltldi5jb25maWcoe2xhenlTaW5rOmUuZ2V0U2luayx0b29sdGlwRG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC10b29sdGlwLXdvcmtlci1jb250YWluZXJcIl19LHRvb2x0aXBDb21wb25lbnRzOltdLGFuY2hvcjpmdW5jdGlvbih0KXtyZXR1cm57dHlwZTpcInN1Ym1lbnVcIixpdGVtOnQsb3ZlcnJpZGVzOnttYXhIZWlnaHRGdW5jdGlvbjpOY319fSxtb2RlOlwiZm9sbG93LWhpZ2hsaWdodFwiLG9uU2hvdzpmdW5jdGlvbihlLHQpe24oZnVuY3Rpb24odCl7ZXYuc2V0Q29tcG9uZW50cyhlLFtPdSh7ZWxlbWVudDpNdC5mcm9tRG9tKHQpfSldKX0pfX0pXX0pLmdldE9yKFtdKX1mdW5jdGlvbiBBdih0LGUpe3ZhciBuPWRwLnRyYW5zbGF0ZSh0KSxvPW52LkRPTS5lbmNvZGUobik7aWYoMDxlLmxlbmd0aCl7dmFyIHI9bmV3IFJlZ0V4cChlLnJlcGxhY2UoL1suKis/XiR7fSgpfFtcXF1cXFxcXS9nLFwiXFxcXCQmXCIpLFwiZ2lcIik7cmV0dXJuIG8ucmVwbGFjZShyLGZ1bmN0aW9uKHQpe3JldHVybic8c3BhbiBjbGFzcz1cInRveC1hdXRvY29tcGxldGVyLWhpZ2hsaWdodFwiPicrdCtcIjwvc3Bhbj5cIn0pfXJldHVybiBvfWZ1bmN0aW9uIEJ2KHQpe3JldHVybnt2YWx1ZTp0fX1mdW5jdGlvbiBNdih0KXtyZXR1cm4gcmIudGVzdCh0KXx8aWIudGVzdCh0KX1mdW5jdGlvbiBGdih0KXt2YXIgZT10LnRvU3RyaW5nKDE2KTtyZXR1cm4oMT09PWUubGVuZ3RoP1wiMFwiK2U6ZSkudG9VcHBlckNhc2UoKX1mdW5jdGlvbiBJdih0KXtyZXR1cm4gQnYoRnYodC5yZWQpK0Z2KHQuZ3JlZW4pK0Z2KHQuYmx1ZSkpfWZ1bmN0aW9uIFJ2KHQsZSxuLG8pe3JldHVybntyZWQ6dCxncmVlbjplLGJsdWU6bixhbHBoYTpvfX1mdW5jdGlvbiBOdih0KXt2YXIgZT1wYXJzZUludCh0LDEwKTtyZXR1cm4gZS50b1N0cmluZygpPT09dCYmMDw9ZSYmZTw9MjU1fWZ1bmN0aW9uIFB2KHQpe3ZhciBlLG4sbyxyPSh0Lmh1ZXx8MCklMzYwLGk9dC5zYXR1cmF0aW9uLzEwMCx1PXQudmFsdWUvMTAwLGk9YWIoMCx1YihpLDEpKSx1PWFiKDAsdWIodSwxKSk7aWYoMD09PWkpcmV0dXJuIFJ2KGU9bj1vPWNiKDI1NSp1KSxuLG8sMSk7dmFyIGE9ci82MCxjPXUqaSxzPWMqKDEtTWF0aC5hYnMoYSUyLTEpKSxsPXUtYztzd2l0Y2goTWF0aC5mbG9vcihhKSl7Y2FzZSAwOmU9YyxuPXMsbz0wO2JyZWFrO2Nhc2UgMTplPXMsbj1jLG89MDticmVhaztjYXNlIDI6ZT0wLG49YyxvPXM7YnJlYWs7Y2FzZSAzOmU9MCxuPXMsbz1jO2JyZWFrO2Nhc2UgNDplPXMsbj0wLG89YzticmVhaztjYXNlIDU6ZT1jLG49MCxvPXM7YnJlYWs7ZGVmYXVsdDplPW49bz0wfXJldHVybiBSdihlPWNiKDI1NSooZStsKSksbj1jYigyNTUqKG4rbCkpLG89Y2IoMjU1KihvK2wpKSwxKX1mdW5jdGlvbiBWdih0KXt2YXIgZSxuLG89KGU9e3ZhbHVlOnQudmFsdWUucmVwbGFjZShyYixmdW5jdGlvbih0LGUsbixvKXtyZXR1cm4gZStlK24rbitvK299KX0sbnVsbD09PShuPWliLmV4ZWMoZS52YWx1ZSkpP1tcIkZGRkZGRlwiLFwiRkZcIixcIkZGXCIsXCJGRlwiXTpuKTtyZXR1cm4gUnYocGFyc2VJbnQob1sxXSwxNikscGFyc2VJbnQob1syXSwxNikscGFyc2VJbnQob1szXSwxNiksMSl9ZnVuY3Rpb24gSHYodCxlLG4sbyl7cmV0dXJuIFJ2KHBhcnNlSW50KHQsMTApLHBhcnNlSW50KGUsMTApLHBhcnNlSW50KG4sMTApLHBhcnNlRmxvYXQobykpfWZ1bmN0aW9uIEx2KHQpe2lmKFwidHJhbnNwYXJlbnRcIj09PXQpcmV0dXJuIHZ0LnNvbWUoUnYoMCwwLDAsMCkpO3ZhciBlPXNiLmV4ZWModCk7aWYobnVsbCE9PWUpcmV0dXJuIHZ0LnNvbWUoSHYoZVsxXSxlWzJdLGVbM10sXCIxXCIpKTt2YXIgbj1sYi5leGVjKHQpO3JldHVybiBudWxsIT09bj92dC5zb21lKEh2KG5bMV0sblsyXSxuWzNdLG5bNF0pKTp2dC5ub25lKCl9ZnVuY3Rpb24genYodCl7cmV0dXJuXCJyZ2JhKFwiK3QucmVkK1wiLFwiK3QuZ3JlZW4rXCIsXCIrdC5ibHVlK1wiLFwiK3QuYWxwaGErXCIpXCJ9ZnVuY3Rpb24gVXYodCxlKXtyZXR1cm4gdC5maXJlKFwiUmVzaXplQ29udGVudFwiLGUpfWZ1bmN0aW9uIGp2KHQsZSxuKXtyZXR1cm57aHVlOnQsc2F0dXJhdGlvbjplLHZhbHVlOm59fWZ1bmN0aW9uIFd2KHQpe3ZhciBlLG4sbz0wLHI9dC5yZWQvMjU1LGk9dC5ncmVlbi8yNTUsdT10LmJsdWUvMjU1LGE9TWF0aC5taW4ocixNYXRoLm1pbihpLHUpKSxjPU1hdGgubWF4KHIsTWF0aC5tYXgoaSx1KSk7cmV0dXJuIGE9PT1jP2p2KDAsMCwxMDAqKG89YSkpOihuPTYwKigocj09PWE/Mzp1PT09YT8xOjUpLShyPT09YT9pLXU6dT09PWE/ci1pOnUtcikvKGMtYSkpLGU9KGMtYSkvYyxvPWMsanYoTWF0aC5yb3VuZChuKSxNYXRoLnJvdW5kKDEwMCplKSxNYXRoLnJvdW5kKDEwMCpvKSkpfWZ1bmN0aW9uIEd2KHQpe3JldHVybiBJdihQdih0KSl9ZnVuY3Rpb24gWHYobyl7cmV0dXJuKE12KGU9byk/dnQuc29tZSh7dmFsdWU6KER0KHQ9ZSxcIiNcIik/dC5zdWJzdHJpbmcoXCIjXCIubGVuZ3RoKTp0KS50b1VwcGVyQ2FzZSgpfSk6dnQubm9uZSgpKS5vclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIEx2KG8pLm1hcChJdil9KS5nZXRPclRodW5rKGZ1bmN0aW9uKCl7dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTt0LmhlaWdodD0xLHQud2lkdGg9MTt2YXIgZT10LmdldENvbnRleHQoXCIyZFwiKTtlLmNsZWFyUmVjdCgwLDAsdC53aWR0aCx0LmhlaWdodCksZS5maWxsU3R5bGU9XCIjRkZGRkZGXCIsZS5maWxsU3R5bGU9byxlLmZpbGxSZWN0KDAsMCwxLDEpO3ZhciBuPWUuZ2V0SW1hZ2VEYXRhKDAsMCwxLDEpLmRhdGE7cmV0dXJuIEl2KFJ2KG5bMF0sblsxXSxuWzJdLG5bM10pKX0pO3ZhciB0LGV9KHloPWJoPWJofHx7fSkuZGVmYXVsdD1cIndyYXBcIix5aC5mbG9hdGluZz1cImZsb2F0aW5nXCIseWguc2xpZGluZz1cInNsaWRpbmdcIix5aC5zY3JvbGxpbmc9XCJzY3JvbGxpbmdcIiwod2g9eGg9eGh8fHt9KS5hdXRvPVwiYXV0b1wiLHdoLnRvcD1cInRvcFwiLHdoLmJvdHRvbT1cImJvdHRvbVwiO2Z1bmN0aW9uIFl2KHQpe3JldHVybiBnZC5jb25maWcoe2Rpc2FibGVkOnQsZGlzYWJsZUNsYXNzOlwidG94LXRidG4tLWRpc2FibGVkXCJ9KX12YXIgcXYsS3Y9XCJzaWx2ZXIucmVhZG9ubHlcIixKdj0kbyhbZ28oXCJyZWFkb25seVwiLG5yKV0pLCR2PWZ1bmN0aW9uKHQpe3JldHVybiBnZC5jb25maWcoe2Rpc2FibGVkOnR9KX0sUXY9ZnVuY3Rpb24odCl7cmV0dXJuIGdkLmNvbmZpZyh7ZGlzYWJsZWQ6dCxkaXNhYmxlQ2xhc3M6XCJ0b3gtdGJ0bi0tZGlzYWJsZWRcIix1c2VOYXRpdmU6ITF9KX0sWnY9KChxdj17fSlbSWkoKV09W1wiZGlzYWJsaW5nXCIsXCJhbGxveS5iYXNlLmJlaGF2aW91clwiLFwidG9nZ2xpbmdcIixcIml0ZW0tZXZlbnRzXCJdLHF2KSx0Yj1udCxlYj10aW55bWNlLnV0aWwuVG9vbHMucmVzb2x2ZShcInRpbnltY2UuRW52XCIpLG5iPWZ1bmN0aW9uKHQsYSl7cmV0dXJuIEIodCxmdW5jdGlvbih0KXtzd2l0Y2godC50eXBlKXtjYXNlXCJjYXJkY29udGFpbmVyXCI6cmV0dXJuIHI9bmIoKG89dCkuaXRlbXMsYSksaT1cInZlcnRpY2FsXCI9PT1vLmRpcmVjdGlvbj9cInRveC1jb2xsZWN0aW9uX19pdGVtLWNvbnRhaW5lci0tY29sdW1uXCI6RmgsdT1cImxlZnRcIj09PW8uYWxpZ24/XCJ0b3gtY29sbGVjdGlvbl9faXRlbS1jb250YWluZXItLWFsaWduLWxlZnRcIjpcInRveC1jb2xsZWN0aW9uX19pdGVtLWNvbnRhaW5lci0tYWxpZ24tcmlnaHRcIix7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltNaCxpLHUsZnVuY3Rpb24oKXtzd2l0Y2goby52YWxpZ24pe2Nhc2VcInRvcFwiOnJldHVyblwidG94LWNvbGxlY3Rpb25fX2l0ZW0tY29udGFpbmVyLS12YWxpZ24tdG9wXCI7Y2FzZVwibWlkZGxlXCI6cmV0dXJuXCJ0b3gtY29sbGVjdGlvbl9faXRlbS1jb250YWluZXItLXZhbGlnbi1taWRkbGVcIjtjYXNlXCJib3R0b21cIjpyZXR1cm5cInRveC1jb2xsZWN0aW9uX19pdGVtLWNvbnRhaW5lci0tdmFsaWduLWJvdHRvbVwifX0oKV19LGNvbXBvbmVudHM6cn07Y2FzZVwiY2FyZGltYWdlXCI6cmV0dXJuIG49dC5zcmMse2RvbTp7dGFnOlwiaW1nXCIsY2xhc3Nlczp0LmNsYXNzZXMsYXR0cmlidXRlczp7c3JjOm4sYWx0OnQuYWx0LmdldE9yKFwiXCIpfX19O2Nhc2VcImNhcmR0ZXh0XCI6dmFyIGU9dC5uYW1lLmV4aXN0cyhmdW5jdGlvbih0KXtyZXR1cm4gd3QoYS5jYXJkVGV4dC5oaWdobGlnaHRPbix0KX0pP3Z0LmZyb20oYS5jYXJkVGV4dC5tYXRjaFRleHQpLmdldE9yKFwiXCIpOlwiXCI7cmV0dXJuIGt2KEF2KHQudGV4dCxlKSx0LmNsYXNzZXMpfXZhciBuLG8scixpLHV9KX0sb2I9YWwocWcoKSxLZygpKSxyYj0vXiM/KFthLWZcXGRdKShbYS1mXFxkXSkoW2EtZlxcZF0pJC9pLGliPS9eIz8oW2EtZlxcZF17Mn0pKFthLWZcXGRdezJ9KShbYS1mXFxkXXsyfSkkL2ksdWI9TWF0aC5taW4sYWI9TWF0aC5tYXgsY2I9TWF0aC5yb3VuZCxzYj0vXnJnYlxcKChcXGQrKSxcXHMqKFxcZCspLFxccyooXFxkKylcXCkvLGxiPS9ecmdiYVxcKChcXGQrKSxcXHMqKFxcZCspLFxccyooXFxkKyksXFxzKihcXGQ/KD86XFwuXFxkKyk/KVxcKS8sZmI9UnYoMjU1LDAsMCwxKSxkYj10aW55bWNlLnV0aWwuVG9vbHMucmVzb2x2ZShcInRpbnltY2UudXRpbC5Mb2NhbFN0b3JhZ2VcIiksbWI9XCJ0aW55bWNlLWN1c3RvbS1jb2xvcnNcIjtmdW5jdGlvbiBnYih0KXtyZXR1cm4hMSE9PXQuZ2V0UGFyYW0oXCJjdXN0b21fY29sb3JzXCIpfWZ1bmN0aW9uIHBiKHQpe3ZhciBlPXQuZ2V0UGFyYW0oXCJjb2xvcl9tYXBcIik7cmV0dXJuIHZvaWQgMCE9PWU/ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLG49MDtuPHQubGVuZ3RoO24rPTIpZS5wdXNoKHt0ZXh0OnRbbisxXSx2YWx1ZTpcIiNcIitYdih0W25dKS52YWx1ZSx0eXBlOlwiY2hvaWNlaXRlbVwifSk7cmV0dXJuIGV9KGUpOkJifWZ1bmN0aW9uIGhiKHQpe01iLmFkZCh0KX1mdW5jdGlvbiB2Yih0KXt2YXIgZSxuPShlPXBiKHQpLmxlbmd0aCxNYXRoLm1heCg1LE1hdGguY2VpbChNYXRoLnNxcnQoZSkpKSk7cmV0dXJuIHQuZ2V0UGFyYW0oXCJjb2xvcl9jb2xzXCIsbixcIm51bWJlclwiKX1mdW5jdGlvbiBiYih0KXt2YXIgZT1cImNob2ljZWl0ZW1cIixuPXt0eXBlOmUsdGV4dDpcIlJlbW92ZSBjb2xvclwiLGljb246XCJjb2xvci1zd2F0Y2gtcmVtb3ZlLWNvbG9yXCIsdmFsdWU6XCJyZW1vdmVcIn07cmV0dXJuIHQ/W24se3R5cGU6ZSx0ZXh0OlwiQ3VzdG9tIGNvbG9yXCIsaWNvbjpcImNvbG9yLXBpY2tlclwiLHZhbHVlOlwiY3VzdG9tXCJ9XTpbbl19ZnVuY3Rpb24geWIoZSxuLHQsbyl7XCJjdXN0b21cIj09PXQ/SWIoZSkoZnVuY3Rpb24odCl7dC5lYWNoKGZ1bmN0aW9uKHQpe2hiKHQpLGUuZXhlY0NvbW1hbmQoXCJtY2VBcHBseVRleHRjb2xvclwiLG4sdCksbyh0KX0pfSxGYik6XCJyZW1vdmVcIj09PXQ/KG8oXCJcIiksZS5leGVjQ29tbWFuZChcIm1jZVJlbW92ZVRleHRjb2xvclwiLG4pKToobyh0KSxlLmV4ZWNDb21tYW5kKFwibWNlQXBwbHlUZXh0Y29sb3JcIixuLHQpKX1mdW5jdGlvbiB4Yih0LGUpe3JldHVybiB0LmNvbmNhdChCKE1iLnN0YXRlKCksZnVuY3Rpb24odCl7cmV0dXJue3R5cGU6QWIsdGV4dDp0LHZhbHVlOnR9fSkuY29uY2F0KGJiKGUpKSl9ZnVuY3Rpb24gd2IoZSxuKXtyZXR1cm4gZnVuY3Rpb24odCl7dCh4YihlLG4pKX19ZnVuY3Rpb24gU2IodCxlLG4pe3Quc2V0SWNvbkZpbGwoXCJmb3JlY29sb3JcIj09PWU/XCJ0b3gtaWNvbi10ZXh0LWNvbG9yX19jb2xvclwiOlwidG94LWljb24taGlnaGxpZ2h0LWJnLWNvbG9yX19jb2xvclwiLG4pfWZ1bmN0aW9uIGtiKGksbix1LHQsbyl7aS51aS5yZWdpc3RyeS5hZGRTcGxpdEJ1dHRvbihuLHt0b29sdGlwOnQscHJlc2V0czpcImNvbG9yXCIsaWNvbjpcImZvcmVjb2xvclwiPT09bj9cInRleHQtY29sb3JcIjpcImhpZ2hsaWdodC1iZy1jb2xvclwiLHNlbGVjdDpmdW5jdGlvbihuKXt2YXIgbyxyPXU7cmV0dXJuIGkuZG9tLmdldFBhcmVudHMoaS5zZWxlY3Rpb24uZ2V0U3RhcnQoKSxmdW5jdGlvbih0KXt2YXIgZTsoZT10LnN0eWxlW1wiZm9yZWNvbG9yXCI9PT1yP1wiY29sb3JcIjpcImJhY2tncm91bmQtY29sb3JcIl0pJiYobz1vfHxlKX0pLHZ0LmZyb20obykuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gTHYodCkubWFwKGZ1bmN0aW9uKHQpe3ZhciBlPUl2KHQpLnZhbHVlO3JldHVybiB1dChuLnRvTG93ZXJDYXNlKCksZSl9KX0pLmdldE9yKCExKX0sY29sdW1uczp2YihpKSxmZXRjaDp3YihwYihpKSxnYihpKSksb25BY3Rpb246ZnVuY3Rpb24odCl7eWIoaSx1LG8uZ2V0KCksc3QpfSxvbkl0ZW1BY3Rpb246ZnVuY3Rpb24odCxlKXt5YihpLHUsZSxmdW5jdGlvbih0KXtvLnNldCh0KSxpLmZpcmUoXCJUZXh0Q29sb3JDaGFuZ2VcIix7bmFtZTpuLGNvbG9yOnR9KX0pfSxvblNldHVwOmZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQodCl7dC5uYW1lPT09biYmU2IoZSx0Lm5hbWUsdC5jb2xvcil9cmV0dXJuIFNiKGUsbixvLmdldCgpKSxpLm9uKFwiVGV4dENvbG9yQ2hhbmdlXCIsdCksZnVuY3Rpb24oKXtpLm9mZihcIlRleHRDb2xvckNoYW5nZVwiLHQpfX19KX1mdW5jdGlvbiBDYihlLHQsbixvKXtlLnVpLnJlZ2lzdHJ5LmFkZE5lc3RlZE1lbnVJdGVtKHQse3RleHQ6byxpY29uOlwiZm9yZWNvbG9yXCI9PT10P1widGV4dC1jb2xvclwiOlwiaGlnaGxpZ2h0LWJnLWNvbG9yXCIsZ2V0U3VibWVudUl0ZW1zOmZ1bmN0aW9uKCl7cmV0dXJuW3t0eXBlOlwiZmFuY3ltZW51aXRlbVwiLGZhbmN5dHlwZTpcImNvbG9yc3dhdGNoXCIsb25BY3Rpb246ZnVuY3Rpb24odCl7eWIoZSxuLHQudmFsdWUsc3QpfX1dfX0pfWZ1bmN0aW9uIE9iKHQsZSxuLG8scixpLHUsYSl7cmV0dXJuIHVoKHQsb2goZSksUmIoZSxuLG8sXCJjb2xvclwiIT09cj9cIm5vcm1hbFwiOlwiY29sb3JcIixpLHUsYSksbyxyKX1mdW5jdGlvbiBfYih0LGUpe3ZhciBuPVFwKGUpO3JldHVybiAxPT09dD97bW9kZTpcIm1lbnVcIixtb3ZlT25UYWI6ITB9OlwiYXV0b1wiPT09dD97bW9kZTpcImdyaWRcIixzZWxlY3RvcjpcIi5cIituLml0ZW0saW5pdFNpemU6e251bUNvbHVtbnM6MSxudW1Sb3dzOjF9fTp7bW9kZTpcIm1hdHJpeFwiLHJvd1NlbGVjdG9yOlwiLlwiKyhcImNvbG9yXCI9PT1lP1widG94LXN3YXRjaGVzX19yb3dcIjpcInRveC1jb2xsZWN0aW9uX19ncm91cFwiKX19ZnVuY3Rpb24gVGIodCxlKXtyZXR1cm4gcmkoZStcInhcIit0KX12YXIgRWIsRGIsQWI9XCJjaG9pY2VpdGVtXCIsQmI9W3t0eXBlOkFiLHRleHQ6XCJMaWdodCBHcmVlblwiLHZhbHVlOlwiI0JGRUREMlwifSx7dHlwZTpBYix0ZXh0OlwiTGlnaHQgWWVsbG93XCIsdmFsdWU6XCIjRkJFRUI4XCJ9LHt0eXBlOkFiLHRleHQ6XCJMaWdodCBSZWRcIix2YWx1ZTpcIiNGOENBQzZcIn0se3R5cGU6QWIsdGV4dDpcIkxpZ2h0IFB1cnBsZVwiLHZhbHVlOlwiI0VDQ0FGQVwifSx7dHlwZTpBYix0ZXh0OlwiTGlnaHQgQmx1ZVwiLHZhbHVlOlwiI0MyRTBGNFwifSx7dHlwZTpBYix0ZXh0OlwiR3JlZW5cIix2YWx1ZTpcIiMyREMyNkJcIn0se3R5cGU6QWIsdGV4dDpcIlllbGxvd1wiLHZhbHVlOlwiI0YxQzQwRlwifSx7dHlwZTpBYix0ZXh0OlwiUmVkXCIsdmFsdWU6XCIjRTAzRTJEXCJ9LHt0eXBlOkFiLHRleHQ6XCJQdXJwbGVcIix2YWx1ZTpcIiNCOTZBRDlcIn0se3R5cGU6QWIsdGV4dDpcIkJsdWVcIix2YWx1ZTpcIiMzNTk4REJcIn0se3R5cGU6QWIsdGV4dDpcIkRhcmsgVHVycXVvaXNlXCIsdmFsdWU6XCIjMTY5MTc5XCJ9LHt0eXBlOkFiLHRleHQ6XCJPcmFuZ2VcIix2YWx1ZTpcIiNFNjdFMjNcIn0se3R5cGU6QWIsdGV4dDpcIkRhcmsgUmVkXCIsdmFsdWU6XCIjQkEzNzJBXCJ9LHt0eXBlOkFiLHRleHQ6XCJEYXJrIFB1cnBsZVwiLHZhbHVlOlwiIzg0M0ZBMVwifSx7dHlwZTpBYix0ZXh0OlwiRGFyayBCbHVlXCIsdmFsdWU6XCIjMjM2RkExXCJ9LHt0eXBlOkFiLHRleHQ6XCJMaWdodCBHcmF5XCIsdmFsdWU6XCIjRUNGMEYxXCJ9LHt0eXBlOkFiLHRleHQ6XCJNZWRpdW0gR3JheVwiLHZhbHVlOlwiI0NFRDREOVwifSx7dHlwZTpBYix0ZXh0OlwiR3JheVwiLHZhbHVlOlwiIzk1QTVBNlwifSx7dHlwZTpBYix0ZXh0OlwiRGFyayBHcmF5XCIsdmFsdWU6XCIjN0U4QzhEXCJ9LHt0eXBlOkFiLHRleHQ6XCJOYXZ5IEJsdWVcIix2YWx1ZTpcIiMzNDQ5NUVcIn0se3R5cGU6QWIsdGV4dDpcIkJsYWNrXCIsdmFsdWU6XCIjMDAwMDAwXCJ9LHt0eXBlOkFiLHRleHQ6XCJXaGl0ZVwiLHZhbHVlOlwiI2ZmZmZmZlwifV0sTWI9ZnVuY3Rpb24obil7dm9pZCAwPT09biYmKG49MTApO2Z1bmN0aW9uIG8odCl7aS5zcGxpY2UodCwxKX12YXIgdCxlPWRiLmdldEl0ZW0obWIpLHI9eShlKT9KU09OLnBhcnNlKGUpOltdLGk9bi0odD1yKS5sZW5ndGg8MD90LnNsaWNlKDAsbik6dDtyZXR1cm57YWRkOmZ1bmN0aW9uKHQpe3ZhciBlOygtMT09PShlPWwoaSx0KSk/dnQubm9uZSgpOnZ0LnNvbWUoZSkpLmVhY2gobyksaS51bnNoaWZ0KHQpLGkubGVuZ3RoPm4mJmkucG9wKCksZGIuc2V0SXRlbShtYixKU09OLnN0cmluZ2lmeShpKSl9LHN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIGkuc2xpY2UoMCl9fX0oMTApLEZiPVwiIzAwMDAwMFwiLEliPWZ1bmN0aW9uKHIpe3JldHVybiBmdW5jdGlvbihuLHQpe3ZhciBvPSExO3Iud2luZG93TWFuYWdlci5vcGVuKHt0aXRsZTpcIkNvbG9yIFBpY2tlclwiLHNpemU6XCJub3JtYWxcIixib2R5Ont0eXBlOlwicGFuZWxcIixpdGVtczpbe3R5cGU6XCJjb2xvcnBpY2tlclwiLG5hbWU6XCJjb2xvcnBpY2tlclwiLGxhYmVsOlwiQ29sb3JcIn1dfSxidXR0b25zOlt7dHlwZTpcImNhbmNlbFwiLG5hbWU6XCJjYW5jZWxcIix0ZXh0OlwiQ2FuY2VsXCJ9LHt0eXBlOlwic3VibWl0XCIsbmFtZTpcInNhdmVcIix0ZXh0OlwiU2F2ZVwiLHByaW1hcnk6ITB9XSxpbml0aWFsRGF0YTp7Y29sb3JwaWNrZXI6dH0sb25BY3Rpb246ZnVuY3Rpb24odCxlKXtcImhleC12YWxpZFwiPT09ZS5uYW1lJiYobz1lLnZhbHVlKX0sb25TdWJtaXQ6ZnVuY3Rpb24odCl7dmFyIGU9dC5nZXREYXRhKCkuY29sb3JwaWNrZXI7bz8obih2dC5mcm9tKGUpKSx0LmNsb3NlKCkpOnIud2luZG93TWFuYWdlci5hbGVydChyLnRyYW5zbGF0ZShbXCJJbnZhbGlkIGhleCBjb2xvciBjb2RlOiB7MH1cIixlXSkpfSxvbkNsb3NlOnN0LG9uQ2FuY2VsOmZ1bmN0aW9uKCl7bih2dC5ub25lKCkpfX0pfX0sUmI9ZnVuY3Rpb24obixvLHIsaSx1LGEsYyl7cmV0dXJuIG50KEIobixmdW5jdGlvbihlKXtyZXR1cm5cImNob2ljZWl0ZW1cIj09PWUudHlwZT9hbyhcImNob2ljZW1lbnVpdGVtXCIsamgsZSkuZm9sZChyaCxmdW5jdGlvbih0KXtyZXR1cm4gdnQuc29tZShmdW5jdGlvbihlLHQsbixvLHIsaSx1LGEpe3ZvaWQgMD09PWEmJihhPSEwKTt2YXIgYz1Fdih7cHJlc2V0czpuLHRleHRDb250ZW50OnQ/ZS50ZXh0OnZ0Lm5vbmUoKSxodG1sQ29udGVudDp2dC5ub25lKCksYXJpYUxhYmVsOmUudGV4dCxpY29uQ29udGVudDplLmljb24sc2hvcnRjdXRDb250ZW50OnQ/ZS5zaG9ydGN1dDp2dC5ub25lKCksY2hlY2tNYXJrOnQ/dnQuc29tZShfdih1Lmljb25zKSk6dnQubm9uZSgpLGNhcmV0OnZ0Lm5vbmUoKSx2YWx1ZTplLnZhbHVlfSx1LGEpO3JldHVybiBZbyh5dih7ZGF0YTp4dihlKSxkaXNhYmxlZDplLmRpc2FibGVkLGdldEFwaTpmdW5jdGlvbihlKXtyZXR1cm57c2V0QWN0aXZlOmZ1bmN0aW9uKHQpe3pnLnNldChlLHQpfSxpc0FjdGl2ZTpmdW5jdGlvbigpe3JldHVybiB6Zy5pc09uKGUpfSxpc0Rpc2FibGVkOmZ1bmN0aW9uKCl7cmV0dXJuIGdkLmlzRGlzYWJsZWQoZSl9LHNldERpc2FibGVkOmZ1bmN0aW9uKHQpe3JldHVybiBnZC5zZXQoZSx0KX19fSxvbkFjdGlvbjpmdW5jdGlvbih0KXtyZXR1cm4gbyhlLnZhbHVlKX0sb25TZXR1cDpmdW5jdGlvbih0KXtyZXR1cm4gdC5zZXRBY3RpdmUociksc3R9LHRyaWdnZXJzU3VibWVudTohMSxpdGVtQmVoYXZpb3VyczpbXX0sYyxpLHUpLHt0b2dnbGluZzp7dG9nZ2xlQ2xhc3M6VGgsdG9nZ2xlT25FeGVjdXRlOiExLHNlbGVjdGVkOmUuYWN0aXZlfX0pfSh0LDE9PT1yLGksbyxhKGUudmFsdWUpLHUsYyxvaChuKSkpfSk6dnQubm9uZSgpfSkpfSxOYj1JcihcImNlbGwtb3ZlclwiKSxQYj1JcihcImNlbGwtZXhlY3V0ZVwiKSxWYj17aW5zZXJ0dGFibGU6ZnVuY3Rpb24odSl7dmFyIHQ9SXIoXCJzaXplLWxhYmVsXCIpLGE9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLG49MDtuPDEwO24rKyl7Zm9yKHZhciBvPVtdLHI9MDtyPDEwO3IrKylvLnB1c2goZnVuY3Rpb24oZSxuLHQpe2Z1bmN0aW9uIG8odCl7cmV0dXJuIGJyKHQsUGIse3JvdzplLGNvbDpufSl9ZnVuY3Rpb24gcih0LGUpe2Uuc3RvcCgpLG8odCl9dmFyIGk7cmV0dXJuIFR1KHtkb206e3RhZzpcImRpdlwiLGF0dHJpYnV0ZXM6KChpPXtyb2xlOlwiYnV0dG9uXCJ9KVtcImFyaWEtbGFiZWxsZWRieVwiXT10LGkpfSxiZWhhdmlvdXJzOmVjKFttbShcImluc2VydC10YWJsZS1waWNrZXItY2VsbFwiLFtDcih2aSgpLFZnLmZvY3VzKSxDcihJaSgpLG8pLENyKENpKCksciksQ3IoTmkoKSxyKV0pLHpnLmNvbmZpZyh7dG9nZ2xlQ2xhc3M6XCJ0b3gtaW5zZXJ0LXRhYmxlLXBpY2tlcl9fc2VsZWN0ZWRcIix0b2dnbGVPbkV4ZWN1dGU6ITF9KSxWZy5jb25maWcoe29uRm9jdXM6ZnVuY3Rpb24odCl7cmV0dXJuIGJyKHQsTmIse3JvdzplLGNvbDpufSl9fSldKX0pfShuLHIsdCkpO2UucHVzaChvKX1yZXR1cm4gZX0odCksZT1UYigwLDApLGM9SG0oe2RvbTp7dGFnOlwic3BhblwiLGNsYXNzZXM6W1widG94LWluc2VydC10YWJsZS1waWNrZXJfX2xhYmVsXCJdLGF0dHJpYnV0ZXM6e2lkOnR9fSxjb21wb25lbnRzOltlXSxiZWhhdmlvdXJzOmVjKFtSZy5jb25maWcoe30pXSl9KTtyZXR1cm57dHlwZTpcIndpZGdldFwiLGRhdGE6e3ZhbHVlOklyKFwid2lkZ2V0LWlkXCIpfSxkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWZhbmN5bWVudWl0ZW1cIl19LGF1dG9mb2N1czohMCxjb21wb25lbnRzOltvYi53aWRnZXQoe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtaW5zZXJ0LXRhYmxlLXBpY2tlclwiXX0sY29tcG9uZW50czpIKGEsZnVuY3Rpb24odCl7cmV0dXJuIEIodCxFdSl9KS5jb25jYXQoYy5hc1NwZWMoKSksYmVoYXZpb3VyczplYyhbbW0oXCJpbnNlcnQtdGFibGUtcGlja2VyXCIsW291KGZ1bmN0aW9uKHQpe1JnLnNldChjLmdldCh0KSxbZV0pfSksRXIoTmIsZnVuY3Rpb24odCxlLG4pe3ZhciBvPW4uZXZlbnQscj1vLnJvdyxpPW8uY29sOyFmdW5jdGlvbih0LGUsbil7Zm9yKHZhciBvPTA7bzwxMDtvKyspZm9yKHZhciByPTA7cjwxMDtyKyspemcuc2V0KHRbb11bcl0sbzw9ZSYmcjw9bil9KGEscixpKSxSZy5zZXQoYy5nZXQodCksW1RiKHIrMSxpKzEpXSl9KSxFcihQYixmdW5jdGlvbih0LGUsbil7dmFyIG89bi5ldmVudCxyPW8ucm93LGk9by5jb2w7dS5vbkFjdGlvbih7bnVtUm93czpyKzEsbnVtQ29sdW1uczppKzF9KSx2cih0LFZpKCkpfSldKSxGZy5jb25maWcoe2luaXRTaXplOntudW1Sb3dzOjEwLG51bUNvbHVtbnM6MTB9LG1vZGU6XCJmbGF0Z3JpZFwiLHNlbGVjdG9yOidbcm9sZT1cImJ1dHRvblwiXSd9KV0pfSldfX0sY29sb3Jzd2F0Y2g6ZnVuY3Rpb24oZSx0KXt2YXIgbixvLHIsaT0obz10LHI9KG49ZSkuaW5pdERhdGEuYWxsb3dDdXN0b21Db2xvcnMmJm8uY29sb3JpbnB1dC5oYXNDdXN0b21Db2xvcnMoKSxuLmluaXREYXRhLmNvbG9ycy5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIHhiKG8uY29sb3JpbnB1dC5nZXRDb2xvcnMoKSxyKX0sZnVuY3Rpb24odCl7cmV0dXJuIHQuY29uY2F0KGJiKHIpKX0pKSx1PXQuY29sb3JpbnB1dC5nZXRDb2xvckNvbHMoKSxhPU9iKElyKFwibWVudS12YWx1ZVwiKSxpLGZ1bmN0aW9uKHQpe2Uub25BY3Rpb24oe3ZhbHVlOnR9KX0sdSxcImNvbG9yXCIsU2guQ0xPU0VfT05fRVhFQ1VURSxULHQuc2hhcmVkLnByb3ZpZGVycyksYz1sdChsdCh7fSxhKSx7bWFya2VyczpRcChcImNvbG9yXCIpLG1vdmVtZW50Ol9iKHUsXCJjb2xvclwiKX0pO3JldHVybnt0eXBlOlwid2lkZ2V0XCIsZGF0YTp7dmFsdWU6SXIoXCJ3aWRnZXQtaWRcIil9LGRvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtZmFuY3ltZW51aXRlbVwiXX0sYXV0b2ZvY3VzOiEwLGNvbXBvbmVudHM6W29iLndpZGdldCh0cC5za2V0Y2goYykpXX19fSxIYj1mdW5jdGlvbih0KXt2YXIgZT10LnRleHQuZm9sZChmdW5jdGlvbigpe3JldHVybnt9fSxmdW5jdGlvbih0KXtyZXR1cm57aW5uZXJIdG1sOnR9fSk7cmV0dXJue3R5cGU6XCJzZXBhcmF0b3JcIixkb206bHQoe3RhZzpcImRpdlwiLGNsYXNzZXM6W0NoLFwidG94LWNvbGxlY3Rpb25fX2dyb3VwLWhlYWRpbmdcIl19LGUpLGNvbXBvbmVudHM6W119fSxMYj1mdW5jdGlvbih0LGUsbixvKXt2b2lkIDA9PT1vJiYobz0hMCk7dmFyIHI9RXYoe3ByZXNldHM6XCJub3JtYWxcIixpY29uQ29udGVudDp0Lmljb24sdGV4dENvbnRlbnQ6dC50ZXh0LGh0bWxDb250ZW50OnZ0Lm5vbmUoKSxhcmlhTGFiZWw6dC50ZXh0LGNhcmV0OnZ0Lm5vbmUoKSxjaGVja01hcms6dnQubm9uZSgpLHNob3J0Y3V0Q29udGVudDp0LnNob3J0Y3V0fSxuLG8pO3JldHVybiB5dih7ZGF0YTp4dih0KSxnZXRBcGk6ZnVuY3Rpb24oZSl7cmV0dXJue2lzRGlzYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gZ2QuaXNEaXNhYmxlZChlKX0sc2V0RGlzYWJsZWQ6ZnVuY3Rpb24odCl7cmV0dXJuIGdkLnNldChlLHQpfX19LGRpc2FibGVkOnQuZGlzYWJsZWQsb25BY3Rpb246dC5vbkFjdGlvbixvblNldHVwOnQub25TZXR1cCx0cmlnZ2Vyc1N1Ym1lbnU6ITEsaXRlbUJlaGF2aW91cnM6W119LHIsZSxuKX0semI9ZnVuY3Rpb24odCxlLG4sbyxyKXt2b2lkIDA9PT1vJiYobz0hMCk7dmFyIGk9KHI9dm9pZCAwIT09ciYmcik/d3YoXCJjaGV2cm9uLWRvd25cIixuLmljb25zLFtBaF0pOnd2KFwiY2hldnJvbi1yaWdodFwiLG4uaWNvbnMsW0FoXSksdT1Fdih7cHJlc2V0czpcIm5vcm1hbFwiLGljb25Db250ZW50OnQuaWNvbix0ZXh0Q29udGVudDp0LnRleHQsaHRtbENvbnRlbnQ6dnQubm9uZSgpLGFyaWFMYWJlbDp0LnRleHQsY2FyZXQ6dnQuc29tZShpKSxjaGVja01hcms6dnQubm9uZSgpLHNob3J0Y3V0Q29udGVudDp0LnNob3J0Y3V0fSxuLG8pO3JldHVybiB5dih7ZGF0YTp4dih0KSxnZXRBcGk6ZnVuY3Rpb24oZSl7cmV0dXJue2lzRGlzYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gZ2QuaXNEaXNhYmxlZChlKX0sc2V0RGlzYWJsZWQ6ZnVuY3Rpb24odCl7cmV0dXJuIGdkLnNldChlLHQpfX19LGRpc2FibGVkOnQuZGlzYWJsZWQsb25BY3Rpb246c3Qsb25TZXR1cDp0Lm9uU2V0dXAsdHJpZ2dlcnNTdWJtZW51OiEwLGl0ZW1CZWhhdmlvdXJzOltdfSx1LGUsbil9LFViPWZ1bmN0aW9uKHQsZSxuLG8pe3ZvaWQgMD09PW8mJihvPSEwKTt2YXIgcj1Fdih7aWNvbkNvbnRlbnQ6dC5pY29uLHRleHRDb250ZW50OnQudGV4dCxodG1sQ29udGVudDp2dC5ub25lKCksYXJpYUxhYmVsOnQudGV4dCxjaGVja01hcms6dnQuc29tZShfdihuLmljb25zKSksY2FyZXQ6dnQubm9uZSgpLHNob3J0Y3V0Q29udGVudDp0LnNob3J0Y3V0LHByZXNldHM6XCJub3JtYWxcIixtZXRhOnQubWV0YX0sbixvKTtyZXR1cm4gWW8oeXYoe2RhdGE6eHYodCksZGlzYWJsZWQ6dC5kaXNhYmxlZCxnZXRBcGk6ZnVuY3Rpb24oZSl7cmV0dXJue3NldEFjdGl2ZTpmdW5jdGlvbih0KXt6Zy5zZXQoZSx0KX0saXNBY3RpdmU6ZnVuY3Rpb24oKXtyZXR1cm4gemcuaXNPbihlKX0saXNEaXNhYmxlZDpmdW5jdGlvbigpe3JldHVybiBnZC5pc0Rpc2FibGVkKGUpfSxzZXREaXNhYmxlZDpmdW5jdGlvbih0KXtyZXR1cm4gZ2Quc2V0KGUsdCl9fX0sb25BY3Rpb246dC5vbkFjdGlvbixvblNldHVwOnQub25TZXR1cCx0cmlnZ2Vyc1N1Ym1lbnU6ITEsaXRlbUJlaGF2aW91cnM6W119LHIsZSxuKSx7dG9nZ2xpbmc6e3RvZ2dsZUNsYXNzOlRoLHRvZ2dsZU9uRXhlY3V0ZTohMSxzZWxlY3RlZDp0LmFjdGl2ZX19KX0samI9ZnVuY3Rpb24oZSxuKXtyZXR1cm4gdHQoVmIsZS5mYW5jeXR5cGUpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdChlLG4pfSl9O2Z1bmN0aW9uIFdiKHQsdSxhLGUsYyxzLGwpe3ZhciBuPTE9PT1lLG89IW58fG9oKHQpO3JldHVybiBudChCKHQsZnVuY3Rpb24odCl7c3dpdGNoKHQudHlwZSl7Y2FzZVwic2VwYXJhdG9yXCI6cmV0dXJuIGFvKFwiQXV0b2NvbXBsZXRlci5TZXBhcmF0b3JcIixScCx0KS5mb2xkKHJoLGZ1bmN0aW9uKHQpe3JldHVybiB2dC5zb21lKEhiKHQpKX0pO2Nhc2VcImNhcmRtZW51aXRlbVwiOnJldHVybiBhbyhcImNhcmRtZW51aXRlbVwiLFVoLHQpLmZvbGQocmgsZnVuY3Rpb24oZSl7cmV0dXJuIHZ0LnNvbWUoKHQ9bHQobHQoe30sZSkse29uQWN0aW9uOmZ1bmN0aW9uKHQpe2Uub25BY3Rpb24odCksYShlLnZhbHVlLGUubWV0YSl9fSksbj1jLG89cyxyPXtpdGVtQmVoYXZpb3VyczpEdihlLm1ldGEscyksY2FyZFRleHQ6e21hdGNoVGV4dDp1LGhpZ2hsaWdodE9uOmx9fSxpPXtkb206VHYodC5sYWJlbCksb3B0Q29tcG9uZW50czpbdnQuc29tZSh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltNaCxGaF19LGNvbXBvbmVudHM6bmIodC5pdGVtcyxyKX0pXX0seXYoe2RhdGE6eHYobHQoe3RleHQ6dnQubm9uZSgpfSx0KSksZGlzYWJsZWQ6dC5kaXNhYmxlZCxnZXRBcGk6ZnVuY3Rpb24obil7cmV0dXJue2lzRGlzYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gZ2QuaXNEaXNhYmxlZChuKX0sc2V0RGlzYWJsZWQ6ZnVuY3Rpb24oZSl7Z2Quc2V0KG4sZSksU3QodnMobi5lbGVtZW50LFwiKlwiKSxmdW5jdGlvbih0KXtuLmdldFN5c3RlbSgpLmdldEJ5RG9tKHQpLmVhY2goZnVuY3Rpb24odCl7dC5oYXNDb25maWd1cmVkKGdkKSYmZ2Quc2V0KHQsZSl9KX0pfX19LG9uQWN0aW9uOnQub25BY3Rpb24sb25TZXR1cDp0Lm9uU2V0dXAsdHJpZ2dlcnNTdWJtZW51OiExLGl0ZW1CZWhhdmlvdXJzOnZ0LmZyb20oci5pdGVtQmVoYXZpb3VycykuZ2V0T3IoW10pfSxpLG4sby5wcm92aWRlcnMpKSk7dmFyIHQsbixvLHIsaX0pO2RlZmF1bHQ6cmV0dXJuIGFvKFwiQXV0b2NvbXBsZXRlci5JdGVtXCIsTnAsdCkuZm9sZChyaCxmdW5jdGlvbih0KXtyZXR1cm4gdnQuc29tZShmdW5jdGlvbihlLG4sdCxvLHIsaSx1LGEpe3ZvaWQgMD09PWEmJihhPSEwKTt2YXIgYz1Fdih7cHJlc2V0czpvLHRleHRDb250ZW50OnZ0Lm5vbmUoKSxodG1sQ29udGVudDp0P2UudGV4dC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIEF2KHQsbil9KTp2dC5ub25lKCksYXJpYUxhYmVsOmUudGV4dCxpY29uQ29udGVudDplLmljb24sc2hvcnRjdXRDb250ZW50OnZ0Lm5vbmUoKSxjaGVja01hcms6dnQubm9uZSgpLGNhcmV0OnZ0Lm5vbmUoKSx2YWx1ZTplLnZhbHVlfSx1LnByb3ZpZGVycyxhLGUuaWNvbik7cmV0dXJuIHl2KHtkYXRhOnh2KGUpLGRpc2FibGVkOmUuZGlzYWJsZWQsZ2V0QXBpOnJ0KHt9KSxvbkFjdGlvbjpmdW5jdGlvbih0KXtyZXR1cm4gcihlLnZhbHVlLGUubWV0YSl9LG9uU2V0dXA6cnQoc3QpLHRyaWdnZXJzU3VibWVudTohMSxpdGVtQmVoYXZpb3VyczpEdihlLm1ldGEsdSl9LGMsaSx1LnByb3ZpZGVycyl9KHQsdSxuLFwibm9ybWFsXCIsYSxjLHMsbykpfSl9fSkpfWZ1bmN0aW9uIEdiKHQsZSxuLG8scil7dmFyIGk9b2goZSksdT1udChCKGUsZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0KXtyZXR1cm4gZnVuY3Rpb24odCxlLG4sbyxyKXtmdW5jdGlvbiBpKHQpe3JldHVybiByP2x0KGx0KHt9LHQpLHtzaG9ydGN1dDp2dC5ub25lKCksaWNvbjp0LnRleHQuaXNTb21lKCk/dnQubm9uZSgpOnQuaWNvbn0pOnR9dmFyIHU9bi5zaGFyZWQucHJvdmlkZXJzO3N3aXRjaCh0LnR5cGUpe2Nhc2VcIm1lbnVpdGVtXCI6cmV0dXJuIGFvKFwibWVudWl0ZW1cIixYaCx0KS5mb2xkKHJoLGZ1bmN0aW9uKHQpe3JldHVybiB2dC5zb21lKExiKGkodCksZSx1LG8pKX0pO2Nhc2VcIm5lc3RlZG1lbnVpdGVtXCI6cmV0dXJuIGFvKFwibmVzdGVkbWVudWl0ZW1cIixZaCx0KS5mb2xkKHJoLGZ1bmN0aW9uKHQpe3JldHVybiB2dC5zb21lKHpiKGkodCksZSx1LG8scikpfSk7Y2FzZVwidG9nZ2xlbWVudWl0ZW1cIjpyZXR1cm4gYW8oXCJ0b2dnbGVtZW51aXRlbVwiLHFoLHQpLmZvbGQocmgsZnVuY3Rpb24odCl7cmV0dXJuIHZ0LnNvbWUoVWIoaSh0KSxlLHUsbykpfSk7Y2FzZVwic2VwYXJhdG9yXCI6cmV0dXJuIGFvKFwic2VwYXJhdG9ybWVudWl0ZW1cIixScCx0KS5mb2xkKHJoLGZ1bmN0aW9uKHQpe3JldHVybiB2dC5zb21lKEhiKHQpKX0pO2Nhc2VcImZhbmN5bWVudWl0ZW1cIjpyZXR1cm4gYW8oXCJmYW5jeW1lbnVpdGVtXCIsR2gsdCkuZm9sZChyaCxmdW5jdGlvbih0KXtyZXR1cm4gamIoaSh0KSxuKX0pO2RlZmF1bHQ6cmV0dXJuIGNvbnNvbGUuZXJyb3IoXCJVbmtub3duIGl0ZW0gaW4gZ2VuZXJhbCBtZW51XCIsdCksdnQubm9uZSgpfX0odCxuLG8scj8hVHQodCxcInRleHRcIik6aSxyKX1yZXR1cm5cIm5lc3RlZG1lbnVpdGVtXCI9PT10LnR5cGUmJnQuZ2V0U3VibWVudUl0ZW1zKCkubGVuZ3RoPD0wP2UobHQobHQoe30sdCkse2Rpc2FibGVkOiEwfSkpOmUodCl9KSk7cmV0dXJuKHI/aWg6dWgpKHQsaSx1LDEsXCJub3JtYWxcIil9ZnVuY3Rpb24gWGIodCl7cmV0dXJuIGlwLnNpbmdsZURhdGEodC52YWx1ZSx0KX1mdW5jdGlvbiBZYih0LGUsbil7cmV0dXJuIFJ1KHQsZSxuKS5pc1NvbWUoKX1mdW5jdGlvbiBxYihuLG8pe3ZhciByPW51bGw7cmV0dXJue2NhbmNlbDpmdW5jdGlvbigpe251bGwhPT1yJiYoY2xlYXJUaW1lb3V0KHIpLHI9bnVsbCl9LHNjaGVkdWxlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLGU9MDtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKXRbZV09YXJndW1lbnRzW2VdO3I9c2V0VGltZW91dChmdW5jdGlvbigpe24uYXBwbHkobnVsbCx0KSxyPW51bGx9LG8pfX19ZnVuY3Rpb24gS2IodCl7dmFyIGU9dC5yYXc7cmV0dXJuIHZvaWQgMD09PWUudG91Y2hlc3x8MSE9PWUudG91Y2hlcy5sZW5ndGg/dnQubm9uZSgpOnZ0LnNvbWUoZS50b3VjaGVzWzBdKX1mdW5jdGlvbiBKYigpe3JldHVybiBsbigpLmJyb3dzZXIuaXNGaXJlZm94KCl9ZnVuY3Rpb24gJGIoZSx0KXt2YXIgbixvLHIsaSx1LGEsYyxzLGwsZj1sdCh7c3RvcEJhY2tzcGFjZTohMH0sdCksZD0odT1mLGE9Z2MoKSxjPVBvKCExKSxzPXFiKGZ1bmN0aW9uKHQpe3UudHJpZ2dlckV2ZW50KFBpKCksdCksYy5zZXQoITApfSw0MDApLGw9bHIoW3trZXk6c2koKSx2YWx1ZTpmdW5jdGlvbihuKXtyZXR1cm4gS2IobikuZWFjaChmdW5jdGlvbih0KXtzLmNhbmNlbCgpO3ZhciBlPXt4OnQuY2xpZW50WCx5OnQuY2xpZW50WSx0YXJnZXQ6bi50YXJnZXR9O3Muc2NoZWR1bGUobiksYy5zZXQoITEpLGEuc2V0KGUpfSksdnQubm9uZSgpfX0se2tleTpsaSgpLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiBzLmNhbmNlbCgpLEtiKHQpLmVhY2goZnVuY3Rpb24oaSl7YS5vbihmdW5jdGlvbih0KXt2YXIgZT1pLG49dCxvPU1hdGguYWJzKGUuY2xpZW50WC1uLngpLHI9TWF0aC5hYnMoZS5jbGllbnRZLW4ueSk7KDU8b3x8NTxyKSYmYS5jbGVhcigpfSl9KSx2dC5ub25lKCl9fSx7a2V5OmZpKCksdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIHMuY2FuY2VsKCksYS5nZXQoKS5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIHp0KHQudGFyZ2V0LGUudGFyZ2V0KX0pLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gYy5nZXQoKT8oZS5wcmV2ZW50KCksITEpOnUudHJpZ2dlckV2ZW50KE5pKCksZSl9KX19XSkse2ZpcmVJZlJlYWR5OmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHR0KGwsdCkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gdChlKX0pfX0pLG09QihbXCJ0b3VjaHN0YXJ0XCIsXCJ0b3VjaG1vdmVcIixcInRvdWNoZW5kXCIsXCJ0b3VjaGNhbmNlbFwiLFwiZ2VzdHVyZXN0YXJ0XCIsXCJtb3VzZWRvd25cIixcIm1vdXNldXBcIixcIm1vdXNlb3ZlclwiLFwibW91c2Vtb3ZlXCIsXCJtb3VzZW91dFwiLFwiY2xpY2tcIl0uY29uY2F0KFtcInNlbGVjdHN0YXJ0XCIsXCJpbnB1dFwiLFwiY29udGV4dG1lbnVcIixcImNoYW5nZVwiLFwidHJhbnNpdGlvbmVuZFwiLFwidHJhbnNpdGlvbmNhbmNlbFwiLFwiZHJhZ1wiLFwiZHJhZ3N0YXJ0XCIsXCJkcmFnZW5kXCIsXCJkcmFnZW50ZXJcIixcImRyYWdsZWF2ZVwiLFwiZHJhZ292ZXJcIixcImRyb3BcIixcImtleXVwXCJdKSxmdW5jdGlvbih0KXtyZXR1cm4gcGMoZSx0LGZ1bmN0aW9uKGUpe2QuZmlyZUlmUmVhZHkoZSx0KS5lYWNoKGZ1bmN0aW9uKHQpe3QmJmUua2lsbCgpfSksZi50cmlnZ2VyRXZlbnQodCxlKSYmZS5raWxsKCl9KX0pLGc9Z2MoKSxwPXBjKGUsXCJwYXN0ZVwiLGZ1bmN0aW9uKGUpe2QuZmlyZUlmUmVhZHkoZSxcInBhc3RlXCIpLmVhY2goZnVuY3Rpb24odCl7dCYmZS5raWxsKCl9KSxmLnRyaWdnZXJFdmVudChcInBhc3RlXCIsZSkmJmUua2lsbCgpLGcuc2V0KHNldFRpbWVvdXQoZnVuY3Rpb24oKXtmLnRyaWdnZXJFdmVudChNaSgpLGUpfSwwKSl9KSxoPXBjKGUsXCJrZXlkb3duXCIsZnVuY3Rpb24odCl7dmFyIGU7Zi50cmlnZ2VyRXZlbnQoXCJrZXlkb3duXCIsdCk/dC5raWxsKCk6IWYuc3RvcEJhY2tzcGFjZXx8KGU9dCkucmF3LndoaWNoIT09dmRbMF18fHd0KFtcImlucHV0XCIsXCJ0ZXh0YXJlYVwiXSxGdChlLnRhcmdldCkpfHxZYihlLnRhcmdldCwnW2NvbnRlbnRlZGl0YWJsZT1cInRydWVcIl0nKXx8dC5wcmV2ZW50KCl9KSx2PShuPWUsbz1mdW5jdGlvbih0KXtmLnRyaWdnZXJFdmVudChcImZvY3VzaW5cIix0KSYmdC5raWxsKCl9LEpiKCk/aGMobixcImZvY3VzXCIsbyk6cGMobixcImZvY3VzaW5cIixvKSksYj1nYygpLHk9KHI9ZSxpPWZ1bmN0aW9uKHQpe2YudHJpZ2dlckV2ZW50KFwiZm9jdXNvdXRcIix0KSYmdC5raWxsKCksYi5zZXQoc2V0VGltZW91dChmdW5jdGlvbigpe2YudHJpZ2dlckV2ZW50KEJpKCksdCl9LDApKX0sSmIoKT9oYyhyLFwiYmx1clwiLGkpOnBjKHIsXCJmb2N1c291dFwiLGkpKTtyZXR1cm57dW5iaW5kOmZ1bmN0aW9uKCl7U3QobSxmdW5jdGlvbih0KXt0LnVuYmluZCgpfSksaC51bmJpbmQoKSx2LnVuYmluZCgpLHkudW5iaW5kKCkscC51bmJpbmQoKSxnLm9uKGNsZWFyVGltZW91dCksYi5vbihjbGVhclRpbWVvdXQpfX19ZnVuY3Rpb24gUWIodCxlKXtyZXR1cm4gUG8odHQodCxcInRhcmdldFwiKS5nZXRPcihlKSl9ZnVuY3Rpb24gWmIodCxvLGUsbixyLGkpe3ZhciB1LGEsYz10KG8sbikscz0odT1QbyghMSksYT1QbyghMSkse3N0b3A6ZnVuY3Rpb24oKXt1LnNldCghMCl9LGN1dDpmdW5jdGlvbigpe2Euc2V0KCEwKX0saXNTdG9wcGVkOnUuZ2V0LGlzQ3V0OmEuZ2V0LGV2ZW50OmUsc2V0U291cmNlOnIuc2V0LGdldFNvdXJjZTpyLmdldH0pO3JldHVybiBjLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gaS5sb2dFdmVudE5vSGFuZGxlcnMobyxuKSxheS5jb21wbGV0ZSgpfSxmdW5jdGlvbihlKXt2YXIgbj1lLmRlc2NIYW5kbGVyO3JldHVybiBVcihuKShzKSxzLmlzU3RvcHBlZCgpPyhpLmxvZ0V2ZW50U3RvcHBlZChvLGUuZWxlbWVudCxuLnB1cnBvc2UpLGF5LnN0b3BwZWQoKSk6cy5pc0N1dCgpPyhpLmxvZ0V2ZW50Q3V0KG8sZS5lbGVtZW50LG4ucHVycG9zZSksYXkuY29tcGxldGUoKSk6WXQoZS5lbGVtZW50KS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIGkubG9nTm9QYXJlbnQobyxlLmVsZW1lbnQsbi5wdXJwb3NlKSxheS5jb21wbGV0ZSgpfSxmdW5jdGlvbih0KXtyZXR1cm4gaS5sb2dFdmVudFJlc3BvbnNlKG8sZS5lbGVtZW50LG4ucHVycG9zZSksYXkucmVzdW1lKHQpfSl9KX1mdW5jdGlvbiB0eSgpe2Z1bmN0aW9uIHIodCl7UnIodC5lbGVtZW50KS5lYWNoKGZ1bmN0aW9uKHQpe2RlbGV0ZSBhW3RdLGkudW5yZWdpc3RlcklkKHQpfSl9dmFyIHUsaT0odT17fSx7cmVnaXN0ZXJJZDpmdW5jdGlvbihyLGksdCl7Sih0LGZ1bmN0aW9uKHQsZSl7dmFyIG4sbz12b2lkIDAhPT11W2VdP3VbZV06e307b1tpXT17Y0hhbmRsZXI6Qy5hcHBseSh2b2lkIDAsWyhuPXQpLmhhbmRsZXJdLmNvbmNhdChyKSkscHVycG9zZTpuLnB1cnBvc2V9LHVbZV09b30pfSx1bnJlZ2lzdGVySWQ6ZnVuY3Rpb24obil7Sih1LGZ1bmN0aW9uKHQsZSl7VHQodCxuKSYmZGVsZXRlIHRbbl19KX0sZmlsdGVyQnlUeXBlOmZ1bmN0aW9uKHQpe3JldHVybiB0dCh1LHQpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gJCh0LGZ1bmN0aW9uKHQsZSl7cmV0dXJue2lkOmUsZGVzY0hhbmRsZXI6dH19KX0pLmdldE9yKFtdKX0sZmluZDpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHR0KHUsZSkuYmluZChmdW5jdGlvbihvKXtyZXR1cm4gbXIobixmdW5jdGlvbih0KXtyZXR1cm4gZT1vLFJyKG49dCkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gdHQoZSx0KX0pLm1hcChmdW5jdGlvbih0KXtyZXR1cm57ZWxlbWVudDpuLGRlc2NIYW5kbGVyOnR9fSk7dmFyIGUsbn0sdCl9KX19KSxhPXt9O3JldHVybntmaW5kOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gaS5maW5kKHQsZSxuKX0sZmlsdGVyOmZ1bmN0aW9uKHQpe3JldHVybiBpLmZpbHRlckJ5VHlwZSh0KX0scmVnaXN0ZXI6ZnVuY3Rpb24odCl7dmFyIG4sbz1Scigobj10KS5lbGVtZW50KS5nZXRPclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIHQ9bi5lbGVtZW50LGU9SXIoZHUrXCJ1aWQtXCIpLGd1KHQsZSksZTt2YXIgdCxlfSk7ZXQoYSxvKSYmZnVuY3Rpb24odCl7dmFyIGU9YVtvXTtpZihlIT09dCl0aHJvdyBuZXcgRXJyb3IoJ1RoZSB0YWdJZCBcIicrbysnXCIgaXMgYWxyZWFkeSB1c2VkIGJ5OiAnK0ZyKGUuZWxlbWVudCkrXCJcXG5DYW5ub3QgdXNlIGl0IGZvcjogXCIrRnIodC5lbGVtZW50KStcIlxcblRoZSBjb25mbGljdGluZyBlbGVtZW50IGlzXCIrKHZuKGUuZWxlbWVudCk/XCIgXCI6XCIgbm90IFwiKStcImFscmVhZHkgaW4gdGhlIERPTVwiKTtyKHQpfSh0KSxpLnJlZ2lzdGVySWQoW3RdLG8sdC5ldmVudHMpLGFbb109dH0sdW5yZWdpc3RlcjpyLGdldEJ5SWQ6ZnVuY3Rpb24odCl7cmV0dXJuIHR0KGEsdCl9fX1mdW5jdGlvbiBleShuKXtmdW5jdGlvbiBvKGUpe3JldHVybiBZdChuLmVsZW1lbnQpLmZvbGQoRCxmdW5jdGlvbih0KXtyZXR1cm4genQoZSx0KX0pfWZ1bmN0aW9uIHModCxlKXtyZXR1cm4gaS5maW5kKG8sdCxlKX1mdW5jdGlvbiByKGUpe3ZhciB0PWkuZmlsdGVyKEZpKCkpO1N0KHQsZnVuY3Rpb24odCl7VXIodC5kZXNjSGFuZGxlcikoZSl9KX12YXIgaT10eSgpLHQ9JGIobi5lbGVtZW50LHt0cmlnZ2VyRXZlbnQ6ZnVuY3Rpb24oZSxuKXtyZXR1cm4genUoZSxuLnRhcmdldCxmdW5jdGlvbih0KXtyZXR1cm4gc3kocyxlLG4sbi50YXJnZXQsdCl9KX19KSx1PXtkZWJ1Z0luZm86cnQoXCJyZWFsXCIpLHRyaWdnZXJFdmVudDpmdW5jdGlvbihlLG4sbyl7enUoZSxuLGZ1bmN0aW9uKHQpe3JldHVybiBzeShzLGUsbyxuLHQpfSl9LHRyaWdnZXJGb2N1czpmdW5jdGlvbihhLGMpe1JyKGEpLmZvbGQoZnVuY3Rpb24oKXtrYShhKX0sZnVuY3Rpb24odCl7enUoQWkoKSxhLGZ1bmN0aW9uKHQpe3ZhciBlLG4sbz1zLHI9QWkoKSxpPXQsdT1RYihlPXtvcmlnaW5hdG9yOmMsa2lsbDpzdCxwcmV2ZW50OnN0LHRhcmdldDphfSxuPWEpO3JldHVybiBaYihvLHIsZSxuLHUsaSksITF9KX0pfSx0cmlnZ2VyRXNjYXBlOmZ1bmN0aW9uKHQsZSl7dS50cmlnZ2VyRXZlbnQoXCJrZXlkb3duXCIsdC5lbGVtZW50LGUuZXZlbnQpfSxnZXRCeVVpZDpmdW5jdGlvbih0KXtyZXR1cm4gZyh0KX0sZ2V0QnlEb206ZnVuY3Rpb24odCl7cmV0dXJuIHAodCl9LGJ1aWxkOlR1LGFkZFRvR3VpOmZ1bmN0aW9uKHQpe2ModCl9LHJlbW92ZUZyb21HdWk6ZnVuY3Rpb24odCl7bCh0KX0sYWRkVG9Xb3JsZDpmdW5jdGlvbih0KXtlKHQpfSxyZW1vdmVGcm9tV29ybGQ6ZnVuY3Rpb24odCl7YSh0KX0sYnJvYWRjYXN0OmZ1bmN0aW9uKHQpe2YodCl9LGJyb2FkY2FzdE9uOmZ1bmN0aW9uKHQsZSl7ZCh0LGUpfSxicm9hZGNhc3RFdmVudDpmdW5jdGlvbih0LGUpe20odCxlKX0saXNDb25uZWN0ZWQ6RH0sZT1mdW5jdGlvbih0KXt0LmNvbm5lY3QodSksWGUodC5lbGVtZW50KXx8KGkucmVnaXN0ZXIodCksU3QodC5jb21wb25lbnRzKCksZSksdS50cmlnZ2VyRXZlbnQoTGkoKSx0LmVsZW1lbnQse3RhcmdldDp0LmVsZW1lbnR9KSl9LGE9ZnVuY3Rpb24odCl7WGUodC5lbGVtZW50KXx8KFN0KHQuY29tcG9uZW50cygpLGEpLGkudW5yZWdpc3Rlcih0KSksdC5kaXNjb25uZWN0KCl9LGM9ZnVuY3Rpb24odCl7TnMobix0KX0sbD1mdW5jdGlvbih0KXtWcyh0KX0sZj1mdW5jdGlvbih0KXtyKHt1bml2ZXJzYWw6ITAsZGF0YTp0fSl9LGQ9ZnVuY3Rpb24odCxlKXtyKHt1bml2ZXJzYWw6ITEsY2hhbm5lbHM6dCxkYXRhOmV9KX0sbT1mdW5jdGlvbih0LGUpe3ZhciBuLG8scj1pLmZpbHRlcih0KTtyZXR1cm4gbz17c3RvcDpmdW5jdGlvbigpe24uc2V0KCEwKX0sY3V0OnN0LGlzU3RvcHBlZDoobj1QbyghMSkpLmdldCxpc0N1dDpULGV2ZW50OmUsc2V0U291cmNlOl8oXCJDYW5ub3Qgc2V0IHNvdXJjZSBvZiBhIGJyb2FkY2FzdGVkIGV2ZW50XCIpLGdldFNvdXJjZTpfKFwiQ2Fubm90IGdldCBzb3VyY2Ugb2YgYSBicm9hZGNhc3RlZCBldmVudFwiKX0sU3QocixmdW5jdGlvbih0KXtVcih0LmRlc2NIYW5kbGVyKShvKX0pLG8uaXNTdG9wcGVkKCl9LGc9ZnVuY3Rpb24odCl7cmV0dXJuIGkuZ2V0QnlJZCh0KS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIE5uLmVycm9yKG5ldyBFcnJvcignQ291bGQgbm90IGZpbmQgY29tcG9uZW50IHdpdGggdWlkOiBcIicrdCsnXCIgaW4gc3lzdGVtLicpKX0sTm4udmFsdWUpfSxwPWZ1bmN0aW9uKHQpe3ZhciBlPVJyKHQpLmdldE9yKFwibm90IGZvdW5kXCIpO3JldHVybiBnKGUpfTtyZXR1cm4gZShuKSx7cm9vdDpuLGVsZW1lbnQ6bi5lbGVtZW50LGRlc3Ryb3k6ZnVuY3Rpb24oKXt0LnVuYmluZCgpLEVuKG4uZWxlbWVudCl9LGFkZDpjLHJlbW92ZTpsLGdldEJ5VWlkOmcsZ2V0QnlEb206cCxhZGRUb1dvcmxkOmUscmVtb3ZlRnJvbVdvcmxkOmEsYnJvYWRjYXN0OmYsYnJvYWRjYXN0T246ZCxicm9hZGNhc3RFdmVudDptfX1mdW5jdGlvbiBueSh0LGUsbixvKXt2YXIgcj12eSh0LGUsbixvKTtyZXR1cm4gbXkuc2tldGNoKHIpfWZ1bmN0aW9uIG95KHQsZSl7cmV0dXJuIG15LnBhcnRzLmxhYmVsKHtkb206e3RhZzpcImxhYmVsXCIsY2xhc3NlczpbXCJ0b3gtbGFiZWxcIl0saW5uZXJIdG1sOmUudHJhbnNsYXRlKHQpfX0pfWZ1bmN0aW9uIHJ5KHQpe3JldHVybiBlYyhbVmcuY29uZmlnKHtvbkZvY3VzOnQuc2VsZWN0T25Gb2N1cz9mdW5jdGlvbih0KXt2YXIgZT10LmVsZW1lbnQsbj1RcihlKTtlLmRvbS5zZXRTZWxlY3Rpb25SYW5nZSgwLG4ubGVuZ3RoKX06c3R9KV0pfWZ1bmN0aW9uIGl5KHQpe3JldHVybnt0YWc6dC50YWcsYXR0cmlidXRlczpsdCh7dHlwZTpcInRleHRcIn0sdC5pbnB1dEF0dHJpYnV0ZXMpLHN0eWxlczp0LmlucHV0U3R5bGVzLGNsYXNzZXM6dC5pbnB1dENsYXNzZXN9fShEYj1FYj17fSlbRGIuQ29udGVudEZvY3VzPTBdPVwiQ29udGVudEZvY3VzXCIsRGJbRGIuVWlGb2N1cz0xXT1cIlVpRm9jdXNcIjtmdW5jdGlvbiB1eShmLGMpe2Z1bmN0aW9uIG4oKXtyZXR1cm4gci5nZXQoKS5pc1NvbWUoKX1mdW5jdGlvbiBzKCl7bigpJiZ1cC5oaWRlKGQpfXZhciBvLHQscj1nYygpLGw9UG8oITEpLGQ9VHUodXAuc2tldGNoKHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWF1dG9jb21wbGV0ZXJcIl19LGNvbXBvbmVudHM6W10sZmlyZURpc21pc3NhbEV2ZW50SW5zdGVhZDp7fSxpbmxpbmVCZWhhdmlvdXJzOmVjKFttbShcImRpc21pc3NBdXRvY29tcGxldGVyXCIsW0NyKFlpKCksZnVuY3Rpb24oKXtyZXR1cm4gbSgpfSldKV0pLGxhenlTaW5rOmMuZ2V0U2lua30pKSxtPWZ1bmN0aW9uKCl7dmFyIHQ7bigpJiYodD1yLmdldCgpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50fSksQnAodC5nZXRPcihNdC5mcm9tRG9tKGYuc2VsZWN0aW9uLmdldE5vZGUoKSkpKS5lYWNoKEZlKSxzKCksci5jbGVhcigpLGwuc2V0KCExKSl9LHU9UnQoZnVuY3Rpb24oKXtyZXR1cm4gbj1kdChmLnVpLnJlZ2lzdHJ5LmdldEFsbCgpLnBvcHVwcyxmdW5jdGlvbih0KXtyZXR1cm4gYW8oXCJBdXRvY29tcGxldGVyXCIsUHAsdCkuZm9sZChmdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IodXIodCkpfSxoKX0pLHQ9JChuLGZ1bmN0aW9uKHQpe3JldHVybiB0LmNofSksZT17fSxTdCh0LGZ1bmN0aW9uKHQpe2VbdF09e319KSxvPUN0KGUpLHI9WihuKSx7ZGF0YXNldDpuLHRyaWdnZXJDaGFyczpvLGxvb2t1cEJ5Q2hhcjpmdW5jdGlvbihlKXtyZXR1cm4gRihyLGZ1bmN0aW9uKHQpe3JldHVybiB0LmNoPT09ZX0pfX07dmFyIHQsZSxuLG8scn0pLGc9ZnVuY3Rpb24odCl7dmFyIGU9dDtyLmdldCgpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4ga3AoZi5kb20sZi5zZWxlY3Rpb24uZ2V0Um5nKCksdC50cmlnZ2VyQ2hhcikuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gVHAoZix1LHQsZSl9KX0pLmdldE9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gZT1mLHQ9KG49dSkoKSxvPWUuc2VsZWN0aW9uLmdldFJuZygpLHI9ZS5kb20saT1vLEsodC50cmlnZ2VyQ2hhcnMsZnVuY3Rpb24odCl7cmV0dXJuIGtwKHIsaSx0KX0pLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIFRwKGUsbix0KX0pO3ZhciBlLG4sdCxvLHIsaX0pLmZvbGQobSxmdW5jdGlvbihhKXt2YXIgdCxlPWEuY29udGV4dDtuKCl8fCh0PXlwKGYsZS5yYW5nZSksci5zZXQoe3RyaWdnZXJDaGFyOmUudHJpZ2dlckNoYXIsZWxlbWVudDp0LG1hdGNoTGVuZ3RoOmUudGV4dC5sZW5ndGh9KSxsLnNldCghMSkpLGEubG9va3VwRGF0YS50aGVuKGZ1bmN0aW9uKHUpe3IuZ2V0KCkubWFwKGZ1bmN0aW9uKHQpe3ZhciBlLG4sbyxyLGk9YS5jb250ZXh0O3QudHJpZ2dlckNoYXI9PT1pLnRyaWdnZXJDaGFyJiYobj1pLnRyaWdnZXJDaGFyLHI9SyhvPXUsZnVuY3Rpb24odCl7cmV0dXJuIHZ0LmZyb20odC5jb2x1bW5zKX0pLmdldE9yKDEpLDA8KGU9SChvLGZ1bmN0aW9uKGkpe3JldHVybiBXYihpLml0ZW1zLGkubWF0Y2hUZXh0LGZ1bmN0aW9uKG8scil7dmFyIHQ9Zi5zZWxlY3Rpb24uZ2V0Um5nKCk7a3AoZi5kb20sdCxuKS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIGNvbnNvbGUuZXJyb3IoXCJMb3N0IGNvbnRleHQuIEN1cnNvciBwcm9iYWJseSBtb3ZlZFwiKX0sZnVuY3Rpb24odCl7dmFyIGU9dC5yYW5nZSxuPXtoaWRlOmZ1bmN0aW9uKCl7bSgpfSxyZWxvYWQ6ZnVuY3Rpb24odCl7cygpLGcodCl9fTtsLnNldCghMCksaS5vbkFjdGlvbihuLGUsbyxyKSxsLnNldCghMSl9KX0scixTaC5CVUJCTEVfVE9fU0FOREJPWCxjLGkuaGlnaGxpZ2h0T24pfSkpLmxlbmd0aD9mdW5jdGlvbih0LGUsbixvKXt0Lm1hdGNoTGVuZ3RoPWUudGV4dC5sZW5ndGg7dmFyIHIsaSx1LGEsYyxzLGw9SyhuLGZ1bmN0aW9uKHQpe3JldHVybiB2dC5mcm9tKHQuY29sdW1ucyl9KS5nZXRPcigxKTt1cC5zaG93QXQoZCx0cC5za2V0Y2goKHI9dWgoXCJhdXRvY29tcGxldGVyLXZhbHVlXCIsITAsbyxsLFwibm9ybWFsXCIpLGk9bCxhPSgodT1FYi5Db250ZW50Rm9jdXMpPT09RWIuQ29udGVudEZvY3VzP2psOlVsKSgpLGM9X2IoaSxcIm5vcm1hbFwiKSxzPVFwKFwibm9ybWFsXCIpLHtkb206ci5kb20sY29tcG9uZW50czpyLmNvbXBvbmVudHMsaXRlbXM6ci5pdGVtcyx2YWx1ZTpyLnZhbHVlLG1hcmtlcnM6e3NlbGVjdGVkSXRlbTpzLnNlbGVjdGVkSXRlbSxpdGVtOnMuaXRlbX0sbW92ZW1lbnQ6YyxmYWtlRm9jdXM6dT09PUViLkNvbnRlbnRGb2N1cyxmb2N1c01hbmFnZXI6YSxtZW51QmVoYXZpb3VyczpLaChcImF1dG9cIiE9PWk/W106W291KGZ1bmN0aW9uKG8sdCl7YWgobyw0LHMuaXRlbSkuZWFjaChmdW5jdGlvbih0KXt2YXIgZT10Lm51bUNvbHVtbnMsbj10Lm51bVJvd3M7Rmcuc2V0R3JpZFNpemUobyxuLGUpfSl9KV0pfSkpLHthbmNob3I6e3R5cGU6XCJub2RlXCIscm9vdDpNdC5mcm9tRG9tKGYuZ2V0Qm9keSgpKSxub2RlOnZ0LmZyb20odC5lbGVtZW50KX19KSx1cC5nZXRDb250ZW50KGQpLmVhY2goaGQuaGlnaGxpZ2h0Rmlyc3QpfSh0LGksdSxlKTooMTA8PWkudGV4dC5sZW5ndGgtdC5tYXRjaExlbmd0aD9tOnMpKCkpfSl9KX0pfSxlPXtvbktleXByZXNzOnZwKGZ1bmN0aW9uKHQpezI3IT09dC53aGljaCYmZygpfSw1MCksY2FuY2VsSWZOZWNlc3Nhcnk6bSxpc01lbnVPcGVuOmZ1bmN0aW9uKCl7cmV0dXJuIHVwLmlzT3BlbihkKX0saXNBY3RpdmU6bixpc1Byb2Nlc3NpbmdBY3Rpb246bC5nZXQsZ2V0VmlldzpmdW5jdGlvbigpe3JldHVybiB1cC5nZXRDb250ZW50KGQpfX07ZnVuY3Rpb24gaSh0LGUpe2JyKHQseGkoKSx7cmF3OmV9KX0hMT09PWYuaGFzUGx1Z2luKFwicnRjXCIpJiYobz1lLCh0PWYpLm9uKFwia2V5cHJlc3MgY29tcG9zaXRpb25lbmRcIixvLm9uS2V5cHJlc3MudGhyb3R0bGUpLHQub24oXCJyZW1vdmVcIixvLm9uS2V5cHJlc3MuY2FuY2VsKSx0Lm9uKFwia2V5ZG93blwiLGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gby5nZXRWaWV3KCkuYmluZChoZC5nZXRIaWdobGlnaHRlZCl9OD09PWUud2hpY2gmJm8ub25LZXlwcmVzcy50aHJvdHRsZShlKSxvLmlzQWN0aXZlKCkmJigyNz09PWUud2hpY2gmJm8uY2FuY2VsSWZOZWNlc3NhcnkoKSxvLmlzTWVudU9wZW4oKT8xMz09PWUud2hpY2g/KHQoKS5lYWNoKHlyKSxlLnByZXZlbnREZWZhdWx0KCkpOjQwPT09ZS53aGljaD8odCgpLmZvbGQoZnVuY3Rpb24oKXtvLmdldFZpZXcoKS5lYWNoKGhkLmhpZ2hsaWdodEZpcnN0KX0sZnVuY3Rpb24odCl7aSh0LGUpfSksZS5wcmV2ZW50RGVmYXVsdCgpLGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCkpOjM3IT09ZS53aGljaCYmMzghPT1lLndoaWNoJiYzOSE9PWUud2hpY2h8fHQoKS5lYWNoKGZ1bmN0aW9uKHQpe2kodCxlKSxlLnByZXZlbnREZWZhdWx0KCksZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKX0pOjEzIT09ZS53aGljaCYmMzghPT1lLndoaWNoJiY0MCE9PWUud2hpY2h8fG8uY2FuY2VsSWZOZWNlc3NhcnkoKSl9KSx0Lm9uKFwiTm9kZUNoYW5nZVwiLGZ1bmN0aW9uKHQpe28uaXNBY3RpdmUoKSYmIW8uaXNQcm9jZXNzaW5nQWN0aW9uKCkmJkJwKE10LmZyb21Eb20odC5lbGVtZW50KSkuaXNOb25lKCkmJm8uY2FuY2VsSWZOZWNlc3NhcnkoKX0pKX12YXIgYXk9Vm8oW3tzdG9wcGVkOltdfSx7cmVzdW1lOltcImVsZW1lbnRcIl19LHtjb21wbGV0ZTpbXX1dKSxjeT1mdW5jdGlvbihlLG4sbyx0LHIsaSl7cmV0dXJuIFpiKGUsbixvLHQscixpKS5mb2xkKEQsZnVuY3Rpb24odCl7cmV0dXJuIGN5KGUsbixvLHQscixpKX0sVCl9LHN5PWZ1bmN0aW9uKHQsZSxuLG8scil7dmFyIGk9UWIobixvKTtyZXR1cm4gY3kodCxlLG4sbyxpLHIpfSxseT1rbCh7bmFtZTpcIkNvbnRhaW5lclwiLGZhY3Rvcnk6ZnVuY3Rpb24odCl7dmFyIGU9dC5kb20sbj1lLmF0dHJpYnV0ZXMsbz1BKGUsW1wiYXR0cmlidXRlc1wiXSk7cmV0dXJue3VpZDp0LnVpZCxkb206bHQoe3RhZzpcImRpdlwiLGF0dHJpYnV0ZXM6bHQoe3JvbGU6XCJwcmVzZW50YXRpb25cIn0sbil9LG8pLGNvbXBvbmVudHM6dC5jb21wb25lbnRzLGJlaGF2aW91cnM6dGwodC5jb250YWluZXJCZWhhdmlvdXJzKSxldmVudHM6dC5ldmVudHMsZG9tTW9kaWZpY2F0aW9uOnQuZG9tTW9kaWZpY2F0aW9uLGV2ZW50T3JkZXI6dC5ldmVudE9yZGVyfX0sY29uZmlnRmllbGRzOltFbyhcImNvbXBvbmVudHNcIixbXSksWnMoXCJjb250YWluZXJCZWhhdmlvdXJzXCIsW10pLEVvKFwiZXZlbnRzXCIse30pLEVvKFwiZG9tTW9kaWZpY2F0aW9uXCIse30pLEVvKFwiZXZlbnRPcmRlclwiLHt9KV19KSxmeT1ydChbRW8oXCJwcmVmaXhcIixcImZvcm0tZmllbGRcIiksWnMoXCJmaWVsZEJlaGF2aW91cnNcIixbY2QsRGZdKV0pLGR5PXJ0KFtRZih7c2NoZW1hOlttbyhcImRvbVwiKV0sbmFtZTpcImxhYmVsXCJ9KSxRZih7ZmFjdG9yeTp7c2tldGNoOmZ1bmN0aW9uKHQpe3JldHVybnt1aWQ6dC51aWQsZG9tOnt0YWc6XCJzcGFuXCIsc3R5bGVzOntkaXNwbGF5Olwibm9uZVwifSxhdHRyaWJ1dGVzOntcImFyaWEtaGlkZGVuXCI6XCJ0cnVlXCJ9LGlubmVySHRtbDp0LnRleHR9fX19LHNjaGVtYTpbbW8oXCJ0ZXh0XCIpXSxuYW1lOlwiYXJpYS1kZXNjcmlwdG9yXCJ9KSxKZih7ZmFjdG9yeTp7c2tldGNoOmZ1bmN0aW9uKHQpe3ZhciBuLG8sZT0obj1bXCJmYWN0b3J5XCJdLG89e30sSih0LGZ1bmN0aW9uKHQsZSl7d3QobixlKXx8KG9bZV09dCl9KSxvKTtyZXR1cm4gdC5mYWN0b3J5LnNrZXRjaChlKX19LHNjaGVtYTpbbW8oXCJmYWN0b3J5XCIpXSxuYW1lOlwiZmllbGRcIn0pXSksbXk9Q2woe25hbWU6XCJGb3JtRmllbGRcIixjb25maWdGaWVsZHM6ZnkoKSxwYXJ0RmllbGRzOmR5KCksZmFjdG9yeTpmdW5jdGlvbihyLHQsZSxuKXt2YXIgbz1lbChyLmZpZWxkQmVoYXZpb3VycyxbY2QuY29uZmlnKHtmaW5kOmZ1bmN0aW9uKHQpe3JldHVybiBtbCh0LHIsXCJmaWVsZFwiKX19KSxEZi5jb25maWcoe3N0b3JlOnttb2RlOlwibWFudWFsXCIsZ2V0VmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIGNkLmdldEN1cnJlbnQodCkuYmluZChEZi5nZXRWYWx1ZSl9LHNldFZhbHVlOmZ1bmN0aW9uKHQsZSl7Y2QuZ2V0Q3VycmVudCh0KS5lYWNoKGZ1bmN0aW9uKHQpe0RmLnNldFZhbHVlKHQsZSl9KX19fSldKSxpPW51KFtvdShmdW5jdGlvbih0LGUpe3ZhciBvPXBsKHQscixbXCJsYWJlbFwiLFwiZmllbGRcIixcImFyaWEtZGVzY3JpcHRvclwiXSk7by5maWVsZCgpLmVhY2goZnVuY3Rpb24obil7dmFyIGU9SXIoci5wcmVmaXgpO28ubGFiZWwoKS5lYWNoKGZ1bmN0aW9uKHQpe29lKHQuZWxlbWVudCxcImZvclwiLGUpLG9lKG4uZWxlbWVudCxcImlkXCIsZSl9KSxvW1wiYXJpYS1kZXNjcmlwdG9yXCJdKCkuZWFjaChmdW5jdGlvbih0KXt2YXIgZT1JcihyLnByZWZpeCk7b2UodC5lbGVtZW50LFwiaWRcIixlKSxvZShuLmVsZW1lbnQsXCJhcmlhLWRlc2NyaWJlZGJ5XCIsZSl9KX0pfSldKTtyZXR1cm57dWlkOnIudWlkLGRvbTpyLmRvbSxjb21wb25lbnRzOnQsYmVoYXZpb3VyczpvLGV2ZW50czppLGFwaXM6e2dldEZpZWxkOmZ1bmN0aW9uKHQpe3JldHVybiBtbCh0LHIsXCJmaWVsZFwiKX0sZ2V0TGFiZWw6ZnVuY3Rpb24odCl7cmV0dXJuIG1sKHQscixcImxhYmVsXCIpfX19fSxhcGlzOntnZXRGaWVsZDpmdW5jdGlvbih0LGUpe3JldHVybiB0LmdldEZpZWxkKGUpfSxnZXRMYWJlbDpmdW5jdGlvbih0LGUpe3JldHVybiB0LmdldExhYmVsKGUpfX19KSxneT1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxleGhpYml0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHpyKHthdHRyaWJ1dGVzOmxyKFt7a2V5OmUudGFiQXR0cix2YWx1ZTpcInRydWVcIn1dKX0pfX0pLHB5PXhhKHtmaWVsZHM6W0VvKFwidGFiQXR0clwiLFwiZGF0YS1hbGxveS10YWJzdG9wXCIpXSxuYW1lOlwidGFic3RvcHBpbmdcIixhY3RpdmU6Z3l9KSxoeT10aW55bWNlLnV0aWwuVG9vbHMucmVzb2x2ZShcInRpbnltY2UuaHRtbC5FbnRpdGllc1wiKSx2eT1mdW5jdGlvbih0LGUsbixvKXtyZXR1cm57ZG9tOmJ5KG4pLGNvbXBvbmVudHM6dC50b0FycmF5KCkuY29uY2F0KFtlXSksZmllbGRCZWhhdmlvdXJzOmVjKG8pfX0sYnk9ZnVuY3Rpb24odCl7cmV0dXJue3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWZvcm1fX2dyb3VwXCJdLmNvbmNhdCh0KX19LHl5PUlyKFwiZm9ybS1jb21wb25lbnQtY2hhbmdlXCIpLHh5PUlyKFwiZm9ybS1jbG9zZVwiKSx3eT1JcihcImZvcm0tY2FuY2VsXCIpLFN5PUlyKFwiZm9ybS1hY3Rpb25cIiksa3k9SXIoXCJmb3JtLXN1Ym1pdFwiKSxDeT1JcihcImZvcm0tYmxvY2tcIiksT3k9SXIoXCJmb3JtLXVuYmxvY2tcIiksX3k9SXIoXCJmb3JtLXRhYmNoYW5nZVwiKSxUeT1JcihcImZvcm0tcmVzaXplXCIpLEV5PXJ0KFt3byhcImRhdGFcIiksRW8oXCJpbnB1dEF0dHJpYnV0ZXNcIix7fSksRW8oXCJpbnB1dFN0eWxlc1wiLHt9KSxFbyhcInRhZ1wiLFwiaW5wdXRcIiksRW8oXCJpbnB1dENsYXNzZXNcIixbXSksSnUoXCJvblNldFZhbHVlXCIpLEVvKFwic3R5bGVzXCIse30pLEVvKFwiZXZlbnRPcmRlclwiLHt9KSxacyhcImlucHV0QmVoYXZpb3Vyc1wiLFtEZixWZ10pLEVvKFwic2VsZWN0T25Gb2N1c1wiLCEwKV0pLER5PWtsKHtuYW1lOlwiSW5wdXRcIixjb25maWdGaWVsZHM6RXkoKSxmYWN0b3J5OmZ1bmN0aW9uKHQsZSl7cmV0dXJue3VpZDp0LnVpZCxkb206aXkodCksY29tcG9uZW50czpbXSxiZWhhdmlvdXJzOmx0KGx0KHt9LHJ5KG49dCkpLGVsKG4uaW5wdXRCZWhhdmlvdXJzLFtEZi5jb25maWcoe3N0b3JlOmx0KGx0KHttb2RlOlwibWFudWFsXCJ9LG4uZGF0YS5tYXAoZnVuY3Rpb24odCl7cmV0dXJue2luaXRpYWxWYWx1ZTp0fX0pLmdldE9yKHt9KSkse2dldFZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiBRcih0LmVsZW1lbnQpfSxzZXRWYWx1ZTpmdW5jdGlvbih0LGUpe1FyKHQuZWxlbWVudCkhPT1lJiZacih0LmVsZW1lbnQsZSl9fSksb25TZXRWYWx1ZTpuLm9uU2V0VmFsdWV9KV0pKSxldmVudE9yZGVyOnQuZXZlbnRPcmRlcn07dmFyIG59fSksQXk9e30sQnk9e2V4cG9ydHM6QXl9O2Z1bmN0aW9uIE15KHQpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyB0fSwwKX1mdW5jdGlvbiBGeSh0KXt2YXIgZT1GdCh0KTtyZXR1cm4gd3QoWHksZSl9ZnVuY3Rpb24gSXkodCxlKXtxcihlLmdldFJvb3QodCkuZ2V0T3IodC5lbGVtZW50KSxlLmludmFsaWRDbGFzcyksZS5ub3RpZnkuZWFjaChmdW5jdGlvbihlKXtGeSh0LmVsZW1lbnQpJiZvZSh0LmVsZW1lbnQsXCJhcmlhLWludmFsaWRcIiwhMSksZS5nZXRDb250YWluZXIodCkuZWFjaChmdW5jdGlvbih0KXtNcih0LGUudmFsaWRIdG1sKX0pLGUub25WYWxpZCh0KX0pfWZ1bmN0aW9uIFJ5KGUsdCxuLG8pe1lyKHQuZ2V0Um9vdChlKS5nZXRPcihlLmVsZW1lbnQpLHQuaW52YWxpZENsYXNzKSx0Lm5vdGlmeS5lYWNoKGZ1bmN0aW9uKHQpe0Z5KGUuZWxlbWVudCkmJm9lKGUuZWxlbWVudCxcImFyaWEtaW52YWxpZFwiLCEwKSx0LmdldENvbnRhaW5lcihlKS5lYWNoKGZ1bmN0aW9uKHQpe01yKHQsbyl9KSx0Lm9uSW52YWxpZChlLG8pfSl9ZnVuY3Rpb24gTnkoZSx0LG4pe3JldHVybiB0LnZhbGlkYXRvci5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIEd5KE5uLnZhbHVlKCEwKSl9LGZ1bmN0aW9uKHQpe3JldHVybiB0LnZhbGlkYXRlKGUpfSl9ZnVuY3Rpb24gUHkoZSxuLHQpe3JldHVybiBuLm5vdGlmeS5lYWNoKGZ1bmN0aW9uKHQpe3Qub25WYWxpZGF0ZShlKX0pLE55KGUsbikubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBlLmdldFN5c3RlbSgpLmlzQ29ubmVjdGVkKCk/dC5mb2xkKGZ1bmN0aW9uKHQpe3JldHVybiBSeShlLG4sMCx0KSxObi5lcnJvcih0KX0sZnVuY3Rpb24odCl7cmV0dXJuIEl5KGUsbiksTm4udmFsdWUodCl9KTpObi5lcnJvcihcIk5vIGxvbmdlciBpbiBzeXN0ZW1cIil9KX0hZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9ZnVuY3Rpb24oKXt2YXIgdCxlLG4sbz17ZXhwb3J0czp7fX07ZnVuY3Rpb24gcigpe31mdW5jdGlvbiBpKHQpe2lmKFwib2JqZWN0XCIhPXR5cGVvZiB0aGlzKXRocm93IG5ldyBUeXBlRXJyb3IoXCJQcm9taXNlcyBtdXN0IGJlIGNvbnN0cnVjdGVkIHZpYSBuZXdcIik7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKFwibm90IGEgZnVuY3Rpb25cIik7dGhpcy5fc3RhdGU9MCx0aGlzLl9oYW5kbGVkPSExLHRoaXMuX3ZhbHVlPXZvaWQgMCx0aGlzLl9kZWZlcnJlZHM9W10sZih0LHRoaXMpfWZ1bmN0aW9uIHUobixvKXtmb3IoOzM9PT1uLl9zdGF0ZTspbj1uLl92YWx1ZTswIT09bi5fc3RhdGU/KG4uX2hhbmRsZWQ9ITAsaS5faW1tZWRpYXRlRm4oZnVuY3Rpb24oKXt2YXIgdCxlPTE9PT1uLl9zdGF0ZT9vLm9uRnVsZmlsbGVkOm8ub25SZWplY3RlZDtpZihudWxsIT09ZSl7dHJ5e3Q9ZShuLl92YWx1ZSl9Y2F0Y2godCl7cmV0dXJuIHZvaWQgYyhvLnByb21pc2UsdCl9YShvLnByb21pc2UsdCl9ZWxzZSgxPT09bi5fc3RhdGU/YTpjKShvLnByb21pc2Usbi5fdmFsdWUpfSkpOm4uX2RlZmVycmVkcy5wdXNoKG8pfWZ1bmN0aW9uIGEoZSx0KXt0cnl7aWYodD09PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkEgcHJvbWlzZSBjYW5ub3QgYmUgcmVzb2x2ZWQgd2l0aCBpdHNlbGYuXCIpO2lmKHQmJihcIm9iamVjdFwiPT10eXBlb2YgdHx8XCJmdW5jdGlvblwiPT10eXBlb2YgdCkpe3ZhciBuPXQudGhlbjtpZih0IGluc3RhbmNlb2YgaSlyZXR1cm4gZS5fc3RhdGU9MyxlLl92YWx1ZT10LHZvaWQgcyhlKTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBuKXJldHVybiB2b2lkIGYoKG89bixyPXQsZnVuY3Rpb24oKXtvLmFwcGx5KHIsYXJndW1lbnRzKX0pLGUpfWUuX3N0YXRlPTEsZS5fdmFsdWU9dCxzKGUpfWNhdGNoKHQpe2MoZSx0KX12YXIgbyxyfWZ1bmN0aW9uIGModCxlKXt0Ll9zdGF0ZT0yLHQuX3ZhbHVlPWUscyh0KX1mdW5jdGlvbiBzKHQpezI9PT10Ll9zdGF0ZSYmMD09PXQuX2RlZmVycmVkcy5sZW5ndGgmJmkuX2ltbWVkaWF0ZUZuKGZ1bmN0aW9uKCl7dC5faGFuZGxlZHx8aS5fdW5oYW5kbGVkUmVqZWN0aW9uRm4odC5fdmFsdWUpfSk7Zm9yKHZhciBlPTAsbj10Ll9kZWZlcnJlZHMubGVuZ3RoO2U8bjtlKyspdSh0LHQuX2RlZmVycmVkc1tlXSk7dC5fZGVmZXJyZWRzPW51bGx9ZnVuY3Rpb24gbCh0LGUsbil7dGhpcy5vbkZ1bGZpbGxlZD1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6bnVsbCx0aGlzLm9uUmVqZWN0ZWQ9XCJmdW5jdGlvblwiPT10eXBlb2YgZT9lOm51bGwsdGhpcy5wcm9taXNlPW59ZnVuY3Rpb24gZih0LGUpe3ZhciBuPSExO3RyeXt0KGZ1bmN0aW9uKHQpe258fChuPSEwLGEoZSx0KSl9LGZ1bmN0aW9uKHQpe258fChuPSEwLGMoZSx0KSl9KX1jYXRjaCh0KXtpZihuKXJldHVybjtuPSEwLGMoZSx0KX19dD1vLGU9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGdsb2JhbFRoaXM/Z2xvYmFsVGhpczpcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzpcInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDpcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZj9zZWxmOnt9LG49c2V0VGltZW91dCxpLnByb3RvdHlwZS5jYXRjaD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aGVuKG51bGwsdCl9LGkucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24odCxlKXt2YXIgbj1uZXcgdGhpcy5jb25zdHJ1Y3RvcihyKTtyZXR1cm4gdSh0aGlzLG5ldyBsKHQsZSxuKSksbn0saS5hbGw9ZnVuY3Rpb24odCl7dmFyIGE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodCk7cmV0dXJuIG5ldyBpKGZ1bmN0aW9uKHIsaSl7aWYoMD09PWEubGVuZ3RoKXJldHVybiByKFtdKTtmb3IodmFyIHU9YS5sZW5ndGgsdD0wO3Q8YS5sZW5ndGg7dCsrKSFmdW5jdGlvbiBlKG4sdCl7dHJ5e2lmKHQmJihcIm9iamVjdFwiPT10eXBlb2YgdHx8XCJmdW5jdGlvblwiPT10eXBlb2YgdCkpe3ZhciBvPXQudGhlbjtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBvKXJldHVybiBvLmNhbGwodCxmdW5jdGlvbih0KXtlKG4sdCl9LGkpLDB9YVtuXT10LDA9PS0tdSYmcihhKX1jYXRjaCh0KXtpKHQpfX0odCxhW3RdKX0pfSxpLnJlc29sdmU9ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZlLmNvbnN0cnVjdG9yPT09aT9lOm5ldyBpKGZ1bmN0aW9uKHQpe3QoZSl9KX0saS5yZWplY3Q9ZnVuY3Rpb24obil7cmV0dXJuIG5ldyBpKGZ1bmN0aW9uKHQsZSl7ZShuKX0pfSxpLnJhY2U9ZnVuY3Rpb24ocil7cmV0dXJuIG5ldyBpKGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPTAsbz1yLmxlbmd0aDtuPG87bisrKXJbbl0udGhlbih0LGUpfSl9LGkuX2ltbWVkaWF0ZUZuPVwiZnVuY3Rpb25cIj09dHlwZW9mIHNldEltbWVkaWF0ZT9mdW5jdGlvbih0KXtzZXRJbW1lZGlhdGUodCl9OmZ1bmN0aW9uKHQpe24odCwwKX0saS5fdW5oYW5kbGVkUmVqZWN0aW9uRm49ZnVuY3Rpb24odCl7XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGNvbnNvbGUmJmNvbnNvbGUmJmNvbnNvbGUud2FybihcIlBvc3NpYmxlIFVuaGFuZGxlZCBQcm9taXNlIFJlamVjdGlvbjpcIix0KX0saS5fc2V0SW1tZWRpYXRlRm49ZnVuY3Rpb24odCl7aS5faW1tZWRpYXRlRm49dH0saS5fc2V0VW5oYW5kbGVkUmVqZWN0aW9uRm49ZnVuY3Rpb24odCl7aS5fdW5oYW5kbGVkUmVqZWN0aW9uRm49dH0sdC5leHBvcnRzP3QuZXhwb3J0cz1pOmUuUHJvbWlzZXx8KGUuUHJvbWlzZT1pKTt2YXIgZD1vLmV4cG9ydHM7cmV0dXJue2JvbHRFeHBvcnQ6KFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c/d2luZG93OkZ1bmN0aW9uKFwicmV0dXJuIHRoaXM7XCIpKCkpLlByb21pc2V8fGR9fTtcIm9iamVjdFwiPT10eXBlb2YgQXkmJnZvaWQgMCE9PUJ5P0J5LmV4cG9ydHM9ZSgpOih0PVwidW5kZWZpbmVkXCIhPXR5cGVvZiBnbG9iYWxUaGlzP2dsb2JhbFRoaXM6dHx8c2VsZikuRXBob3hDb250YWN0V3JhcHBlcj1lKCl9KCk7dmFyIFZ5LEh5LEx5PUJ5LmV4cG9ydHMuYm9sdEV4cG9ydCx6eT1mdW5jdGlvbih0KXtmdW5jdGlvbiBvKHQpe3IoKT9pKHQpOmUucHVzaCh0KX12YXIgbj12dC5ub25lKCksZT1bXSxyPWZ1bmN0aW9uKCl7cmV0dXJuIG4uaXNTb21lKCl9LGk9ZnVuY3Rpb24oZSl7bi5lYWNoKGZ1bmN0aW9uKHQpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtlKHQpfSwwKX0pfTtyZXR1cm4gdChmdW5jdGlvbih0KXtyKCl8fChuPXZ0LnNvbWUodCksU3QoZSxpKSxlPVtdKX0pLHtnZXQ6byxtYXA6ZnVuY3Rpb24obil7cmV0dXJuIHp5KGZ1bmN0aW9uKGUpe28oZnVuY3Rpb24odCl7ZShuKHQpKX0pfSl9LGlzUmVhZHk6cn19LFV5PXtudTp6eSxwdXJlOmZ1bmN0aW9uKGUpe3JldHVybiB6eShmdW5jdGlvbih0KXt0KGUpfSl9fSxqeT1mdW5jdGlvbihuKXtmdW5jdGlvbiB0KHQpe24oKS50aGVuKHQsTXkpfXJldHVybnttYXA6ZnVuY3Rpb24odCl7cmV0dXJuIGp5KGZ1bmN0aW9uKCl7cmV0dXJuIG4oKS50aGVuKHQpfSl9LGJpbmQ6ZnVuY3Rpb24oZSl7cmV0dXJuIGp5KGZ1bmN0aW9uKCl7cmV0dXJuIG4oKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBlKHQpLnRvUHJvbWlzZSgpfSl9KX0sYW5vbkJpbmQ6ZnVuY3Rpb24odCl7cmV0dXJuIGp5KGZ1bmN0aW9uKCl7cmV0dXJuIG4oKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHQudG9Qcm9taXNlKCl9KX0pfSx0b0xhenk6ZnVuY3Rpb24oKXtyZXR1cm4gVXkubnUodCl9LHRvQ2FjaGVkOmZ1bmN0aW9uKCl7dmFyIHQ9bnVsbDtyZXR1cm4gankoZnVuY3Rpb24oKXtyZXR1cm4gdD1udWxsPT09dD9uKCk6dH0pfSx0b1Byb21pc2U6bixnZXQ6dH19LFd5PWZ1bmN0aW9uKHQpe3JldHVybiBqeShmdW5jdGlvbigpe3JldHVybiBuZXcgTHkodCl9KX0sR3k9ZnVuY3Rpb24odCl7cmV0dXJuIGp5KGZ1bmN0aW9uKCl7cmV0dXJuIEx5LnJlc29sdmUodCl9KX0sWHk9W1wiaW5wdXRcIixcInRleHRhcmVhXCJdLFl5PU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLG1hcmtWYWxpZDpJeSxtYXJrSW52YWxpZDpSeSxxdWVyeTpOeSxydW46UHksaXNJbnZhbGlkOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIEtyKGUuZ2V0Um9vdCh0KS5nZXRPcih0LmVsZW1lbnQpLGUuaW52YWxpZENsYXNzKX19KSxxeT1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxldmVudHM6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS52YWxpZGF0b3IubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBudShbQ3IodC5vbkV2ZW50LGZ1bmN0aW9uKHQpe1B5KHQsZSkuZ2V0KGgpfSldLmNvbmNhdCh0LnZhbGlkYXRlT25Mb2FkP1tvdShmdW5jdGlvbih0KXtQeSh0LGUpLmdldChzdCl9KV06W10pKX0pLmdldE9yKHt9KX19KSxLeT14YSh7ZmllbGRzOlttbyhcImludmFsaWRDbGFzc1wiKSxFbyhcImdldFJvb3RcIix2dC5ub25lKSxUbyhcIm5vdGlmeVwiLFtFbyhcImFyaWFcIixcImFsZXJ0XCIpLEVvKFwiZ2V0Q29udGFpbmVyXCIsdnQubm9uZSksRW8oXCJ2YWxpZEh0bWxcIixcIlwiKSxKdShcIm9uVmFsaWRcIiksSnUoXCJvbkludmFsaWRcIiksSnUoXCJvblZhbGlkYXRlXCIpXSksVG8oXCJ2YWxpZGF0b3JcIixbbW8oXCJ2YWxpZGF0ZVwiKSxFbyhcIm9uRXZlbnRcIixcImlucHV0XCIpLEVvKFwidmFsaWRhdGVPbkxvYWRcIiwhMCldKV0sbmFtZTpcImludmFsaWRhdGluZ1wiLGFjdGl2ZTpxeSxhcGlzOll5LGV4dHJhOnt2YWxpZGF0aW9uOmZ1bmN0aW9uKG4pe3JldHVybiBmdW5jdGlvbih0KXt2YXIgZT1EZi5nZXRWYWx1ZSh0KTtyZXR1cm4gR3kobihlKSl9fX19KSxKeT1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxnZXRDb3VwbGVkOmZ1bmN0aW9uKHQsZSxuLG8pe3JldHVybiBuLmdldE9yQ3JlYXRlKHQsZSxvKX19KSwkeT14YSh7ZmllbGRzOltnbyhcIm90aGVyc1wiLHVvKE5uLnZhbHVlLFpvKCkpKV0sbmFtZTpcImNvdXBsaW5nXCIsYXBpczpKeSxzdGF0ZTpPYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxpbml0OmZ1bmN0aW9uKCl7dmFyIGk9e30sdD1ydCh7fSk7cmV0dXJuIHd1KHtyZWFkU3RhdGU6dCxnZXRPckNyZWF0ZTpmdW5jdGlvbihuLG8scil7dmFyIHQ9Q3Qoby5vdGhlcnMpO2lmKHQpcmV0dXJuIHR0KGkscikuZ2V0T3JUaHVuayhmdW5jdGlvbigpe3ZhciB0PXR0KG8ub3RoZXJzLHIpLmdldE9yRGllKFwiTm8gaW5mb3JtYXRpb24gZm91bmQgZm9yIGNvdXBsZWQgY29tcG9uZW50OiBcIityKShuKSxlPW4uZ2V0U3lzdGVtKCkuYnVpbGQodCk7cmV0dXJuIGlbcl09ZX0pO3Rocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIGNvdXBsZWQgY29tcG9uZW50OiBcIityK1wiLiBLbm93biBjb3VwbGVkIGNvbXBvbmVudHM6IFwiK0pTT04uc3RyaW5naWZ5KHQsbnVsbCwyKSl9fSl9fSl9KSxReT1ydChcInNpbmtcIiksWnk9cnQoUWYoe25hbWU6UXkoKSxvdmVycmlkZXM6cnQoe2RvbTp7dGFnOlwiZGl2XCJ9LGJlaGF2aW91cnM6ZWMoW2ZmLmNvbmZpZyh7dXNlRml4ZWQ6RH0pXSksZXZlbnRzOm51KFtEcih4aSgpKSxEcihtaSgpKSxEcihDaSgpKV0pfSl9KSk7ZnVuY3Rpb24gdHgodCxlKXt2YXIgbj10LmdldEhvdHNwb3QoZSkuZ2V0T3IoZSksbz10LmdldEFuY2hvck92ZXJyaWRlcygpO3JldHVybiB0LmxheW91dHMuZm9sZChmdW5jdGlvbigpe3JldHVybnt0eXBlOlwiaG90c3BvdFwiLGhvdHNwb3Q6bixvdmVycmlkZXM6b319LGZ1bmN0aW9uKHQpe3JldHVybnt0eXBlOlwiaG90c3BvdFwiLGhvdHNwb3Q6bixvdmVycmlkZXM6byxsYXlvdXRzOnR9fSl9ZnVuY3Rpb24gZXgodCxlLG4sbyxyLGksdSl7dmFyIGEsYz10eCh0LG4pLHM9bixsPW8sZj1yLGQ9dSxtPWUsZz0oMCwoYT10KS5mZXRjaCkocykubWFwKG0pLHA9bXcocyxhKTtyZXR1cm4gZy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gdnQuZnJvbShpcC5za2V0Y2gobHQobHQoe30sZi5tZW51KCkpLHt1aWQ6cHUoXCJcIiksZGF0YTp0LGhpZ2hsaWdodEltbWVkaWF0ZWx5OmQ9PT1WeS5IaWdobGlnaHRGaXJzdCxvbk9wZW5NZW51OmZ1bmN0aW9uKHQsZSl7dmFyIG49cCgpLmdldE9yRGllKCk7ZmYucG9zaXRpb24obixlLHthbmNob3I6Y30pLGJmLmRlY2xvYWsobCl9LG9uT3BlblN1Ym1lbnU6ZnVuY3Rpb24odCxlLG4pe3ZhciBvPXAoKS5nZXRPckRpZSgpO2ZmLnBvc2l0aW9uKG8sbix7YW5jaG9yOnt0eXBlOlwic3VibWVudVwiLGl0ZW06ZX19KSxiZi5kZWNsb2FrKGwpfSxvblJlcG9zaXRpb25NZW51OmZ1bmN0aW9uKHQsZSxuKXt2YXIgbz1wKCkuZ2V0T3JEaWUoKTtmZi5wb3NpdGlvbihvLGUse2FuY2hvcjpjfSksU3QobixmdW5jdGlvbih0KXtmZi5wb3NpdGlvbihvLHQudHJpZ2dlcmVkTWVudSx7YW5jaG9yOnt0eXBlOlwic3VibWVudVwiLGl0ZW06dC50cmlnZ2VyaW5nSXRlbX19KX0pfSxvbkVzY2FwZTpmdW5jdGlvbigpe3JldHVybiBWZy5mb2N1cyhzKSxiZi5jbG9zZShsKSx2dC5zb21lKCEwKX19KSkpfSl9KS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuZm9sZChmdW5jdGlvbigpe2JmLmlzT3BlbihvKSYmYmYuY2xvc2Uobyl9LGZ1bmN0aW9uKHQpe2JmLmNsb2FrKG8pLGJmLm9wZW4obyx0KSxpKG8pfSksb30pfWZ1bmN0aW9uIG54KHQsZSxuLG8scixpKXt2YXIgdT0keS5nZXRDb3VwbGVkKG4sXCJzYW5kYm94XCIpO3JldHVybihiZi5pc09wZW4odSk/ZnVuY3Rpb24odCxlLG4sbyxyLGksdSl7cmV0dXJuIGJmLmNsb3NlKG8pLEd5KG8pfTpleCkodCxlLG4sdSxvLHIsaSl9ZnVuY3Rpb24gb3godCl7YmYuZ2V0U3RhdGUodCkuZWFjaChmdW5jdGlvbih0KXtpcC5yZXBvc2l0aW9uTWVudXModCl9KX1mdW5jdGlvbiByeChzLGwsZil7dmFyIGQ9TnUoKSx0PW13KGwscyk7cmV0dXJue2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpzLnNhbmRib3hDbGFzc2VzLGF0dHJpYnV0ZXM6e2lkOmQuaWQscm9sZTpcImxpc3Rib3hcIn19LGJlaGF2aW91cnM6QmYocy5zYW5kYm94QmVoYXZpb3VycyxbRGYuY29uZmlnKHtzdG9yZTp7bW9kZTpcIm1lbW9yeVwiLGluaXRpYWxWYWx1ZTpsfX0pLGJmLmNvbmZpZyh7b25PcGVuOmZ1bmN0aW9uKHQsZSl7dmFyIG4sbyxyLGksdSxhLGM9dHgocyxsKTtkLmxpbmsobC5lbGVtZW50KSxzLm1hdGNoV2lkdGgmJihuPWMuaG90c3BvdCxvPWUscj1zLnVzZU1pbldpZHRoLHU9Y2QuZ2V0Q3VycmVudChvKS5nZXRPcihvKSxhPUNlKG4uZWxlbWVudCkscj9mZSh1LmVsZW1lbnQsXCJtaW4td2lkdGhcIixhK1wicHhcIik6KGk9dS5lbGVtZW50LE9uLnNldChpLGEpKSkscy5vbk9wZW4oYyx0LGUpLHZvaWQgMCE9PWYmJnZvaWQgMCE9PWYub25PcGVuJiZmLm9uT3Blbih0LGUpfSxvbkNsb3NlOmZ1bmN0aW9uKHQsZSl7ZC51bmxpbmsobC5lbGVtZW50KSx2b2lkIDAhPT1mJiZ2b2lkIDAhPT1mLm9uQ2xvc2UmJmYub25DbG9zZSh0LGUpfSxpc1BhcnRPZjpmdW5jdGlvbih0LGUsbil7cmV0dXJuIEh1KGUsbil8fEh1KGwsbil9LGdldEF0dGFjaFBvaW50OmZ1bmN0aW9uKCl7cmV0dXJuIHQoKS5nZXRPckRpZSgpfX0pLGNkLmNvbmZpZyh7ZmluZDpmdW5jdGlvbih0KXtyZXR1cm4gYmYuZ2V0U3RhdGUodCkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gY2QuZ2V0Q3VycmVudCh0KX0pfX0pLGljLmNvbmZpZyh7Y2hhbm5lbHM6bHQobHQoe30sWHMoe2lzRXh0cmFQYXJ0OlR9KSksWXMoe2RvUmVwb3NpdGlvbjpveH0pKX0pXSl9fWZ1bmN0aW9uIGl4KHQpe294KCR5LmdldENvdXBsZWQodCxcInNhbmRib3hcIikpfWZ1bmN0aW9uIHV4KCl7cmV0dXJuW0VvKFwic2FuZGJveENsYXNzZXNcIixbXSksQWYoXCJzYW5kYm94QmVoYXZpb3Vyc1wiLFtjZCxpYyxiZixEZl0pXX1mdW5jdGlvbiBheChlKXtyZXR1cm4gUWYoe25hbWU6ZStcIi1lZGdlXCIsb3ZlcnJpZGVzOmZ1bmN0aW9uKHQpe3JldHVybiB0Lm1vZGVsLm1hbmFnZXIuZWRnZUFjdGlvbnNbZV0uZm9sZChmdW5jdGlvbigpe3JldHVybnt9fSxmdW5jdGlvbihvKXtyZXR1cm57ZXZlbnRzOm51KFtPcihzaSgpLGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbyh0LG4pfSxbdF0pLE9yKG1pKCksZnVuY3Rpb24odCxlLG4pe3JldHVybiBvKHQsbil9LFt0XSksT3IoZ2koKSxmdW5jdGlvbih0LGUsbil7bi5tb3VzZUlzRG93bi5nZXQoKSYmbyh0LG4pfSxbdF0pXSl9fSl9fSl9ZnVuY3Rpb24gY3godCl7dmFyIGU9dC5ldmVudC5yYXc7cmV0dXJuLTE9PT1lLnR5cGUuaW5kZXhPZihcInRvdWNoXCIpP3ZvaWQgMCE9PWUuY2xpZW50WD92dC5zb21lKGUpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4ga24odC5jbGllbnRYLHQuY2xpZW50WSl9KTp2dC5ub25lKCk6dm9pZCAwIT09ZS50b3VjaGVzJiYxPT09ZS50b3VjaGVzLmxlbmd0aD92dC5zb21lKGUudG91Y2hlc1swXSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBrbih0LmNsaWVudFgsdC5jbGllbnRZKX0pOnZ0Lm5vbmUoKX1mdW5jdGlvbiBzeCh0KXtyZXR1cm4gdC5tb2RlbC5taW5YfWZ1bmN0aW9uIGx4KHQpe3JldHVybiB0Lm1vZGVsLm1pbll9ZnVuY3Rpb24gZngodCl7cmV0dXJuIHQubW9kZWwubWluWC0xfWZ1bmN0aW9uIGR4KHQpe3JldHVybiB0Lm1vZGVsLm1pblktMX1mdW5jdGlvbiBteCh0KXtyZXR1cm4gdC5tb2RlbC5tYXhYfWZ1bmN0aW9uIGd4KHQpe3JldHVybiB0Lm1vZGVsLm1heFl9ZnVuY3Rpb24gcHgodCl7cmV0dXJuIHQubW9kZWwubWF4WCsxfWZ1bmN0aW9uIGh4KHQpe3JldHVybiB0Lm1vZGVsLm1heFkrMX1mdW5jdGlvbiB2eCh0LGUsbil7cmV0dXJuIGUodCktbih0KX1mdW5jdGlvbiBieCh0KXtyZXR1cm4gdngodCxteCxzeCl9ZnVuY3Rpb24geXgodCl7cmV0dXJuIHZ4KHQsZ3gsbHgpfWZ1bmN0aW9uIHh4KHQpe3JldHVybiBieCh0KS8yfWZ1bmN0aW9uIHd4KHQpe3JldHVybiB5eCh0KS8yfWZ1bmN0aW9uIFN4KHQpe3JldHVybiB0LnN0ZXBTaXplfWZ1bmN0aW9uIGt4KHQpe3JldHVybiB0LnNuYXBUb0dyaWR9ZnVuY3Rpb24gQ3godCl7cmV0dXJuIHQuc25hcFN0YXJ0fWZ1bmN0aW9uIE94KHQpe3JldHVybiB0LnJvdW5kZWR9ZnVuY3Rpb24gX3godCxlKXtyZXR1cm4gdm9pZCAwIT09dFtlK1wiLWVkZ2VcIl19ZnVuY3Rpb24gVHgodCl7cmV0dXJuIF94KHQsXCJsZWZ0XCIpfWZ1bmN0aW9uIEV4KHQpe3JldHVybiBfeCh0LFwicmlnaHRcIil9ZnVuY3Rpb24gRHgodCl7cmV0dXJuIF94KHQsXCJ0b3BcIil9ZnVuY3Rpb24gQXgodCl7cmV0dXJuIF94KHQsXCJib3R0b21cIil9ZnVuY3Rpb24gQngodCl7cmV0dXJuIHQubW9kZWwudmFsdWUuZ2V0KCl9ZnVuY3Rpb24gTXgodCxlKXtyZXR1cm57eDp0LHk6ZX19ZnVuY3Rpb24gRngodCxlKXticih0LEF3KCkse3ZhbHVlOmV9KX1mdW5jdGlvbiBJeCh0LGUsbixvKXtyZXR1cm4gdDxlP3Q6bjx0P246dD09PWU/ZS0xOk1hdGgubWF4KGUsdC1vKX1mdW5jdGlvbiBSeCh0LGUsbixvKXtyZXR1cm4gbjx0P3Q6dDxlP2U6dD09PW4/bisxOk1hdGgubWluKG4sdCtvKX1mdW5jdGlvbiBOeCh0LGUsbil7cmV0dXJuIE1hdGgubWF4KGUsTWF0aC5taW4obix0KSl9ZnVuY3Rpb24gUHgodCl7dmFyIGU9dC5taW4sbj10Lm1heCxvPXQucmFuZ2Uscj10LnZhbHVlLGk9dC5zdGVwLHU9dC5zbmFwLGE9dC5zbmFwU3RhcnQsYz10LnJvdW5kZWQscz10Lmhhc01pbkVkZ2UsbD10Lmhhc01heEVkZ2UsZj10Lm1pbkJvdW5kLGQ9dC5tYXhCb3VuZCxtPXQuc2NyZWVuUmFuZ2UsZz1zP2UtMTplLHA9bD9uKzE6bjtpZihyPGYpcmV0dXJuIGc7aWYoZDxyKXJldHVybiBwO3ZhciBoLHYsYix5LHgsdz1OeCgoeD1mLE1hdGgubWluKGQsTWF0aC5tYXgocix4KSkteCkvbSpvK2UsZyxwKTtyZXR1cm4gdSYmZTw9dyYmdzw9bj8oaD13LHY9ZSxiPW4seT1pLGEuZm9sZChmdW5jdGlvbigpe3ZhciB0PU1hdGgucm91bmQoKGgtdikveSkqeTtyZXR1cm4gTngodit0LHYtMSxiKzEpfSxmdW5jdGlvbih0KXt2YXIgZT1NYXRoLnJvdW5kKChoLXQpJXkveSksbj1NYXRoLmZsb29yKChoLXQpL3kpLG89TWF0aC5mbG9vcigoYi10KS95KSxyPU1hdGgubWluKG8sbitlKTtyZXR1cm4gTWF0aC5tYXgodCx0K3IqeSl9KSk6Yz9NYXRoLnJvdW5kKHcpOnd9ZnVuY3Rpb24gVngodCl7dmFyIGU9dC5taW4sbj10Lm1heCxvPXQucmFuZ2Uscj10LnZhbHVlLGk9dC5oYXNNaW5FZGdlLHU9dC5oYXNNYXhFZGdlLGE9dC5tYXhCb3VuZCxjPXQubWF4T2Zmc2V0LHM9dC5jZW50ZXJNaW5FZGdlLGw9dC5jZW50ZXJNYXhFZGdlO3JldHVybiByPGU/aT8wOnM6bjxyP3U/YTpsOihyLWUpL28qY31mdW5jdGlvbiBIeCh0KXtyZXR1cm4gdC5lbGVtZW50LmRvbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKX1mdW5jdGlvbiBMeCh0KXtyZXR1cm4gSHgodClbQnddfWZ1bmN0aW9uIHp4KHQpe3JldHVybiBIeCh0KS5yaWdodH1mdW5jdGlvbiBVeCh0KXtyZXR1cm4gSHgodCkudG9wfWZ1bmN0aW9uIGp4KHQpe3JldHVybiBIeCh0KS5ib3R0b219ZnVuY3Rpb24gV3godCl7cmV0dXJuIEh4KHQpLndpZHRofWZ1bmN0aW9uIEd4KHQpe3JldHVybiBIeCh0KS5oZWlnaHR9ZnVuY3Rpb24gWHgodCxlKXt2YXIgbj1IeCh0KSxvPUh4KGUpO3JldHVybihuW0J3XStuLnJpZ2h0KS8yLW9bQnddfWZ1bmN0aW9uIFl4KHQsZSl7dmFyIG49SHgodCksbz1IeChlKTtyZXR1cm4obi50b3Arbi5ib3R0b20pLzItby50b3B9ZnVuY3Rpb24gcXgodCxlKXticih0LEF3KCkse3ZhbHVlOmV9KX1mdW5jdGlvbiBLeCh0LGUsbil7cmV0dXJuIFB4KHttaW46c3goZSksbWF4Om14KGUpLHJhbmdlOmJ4KGUpLHZhbHVlOm4sc3RlcDpTeChlKSxzbmFwOmt4KGUpLHNuYXBTdGFydDpDeChlKSxyb3VuZGVkOk94KGUpLGhhc01pbkVkZ2U6VHgoZSksaGFzTWF4RWRnZTpFeChlKSxtaW5Cb3VuZDpMeCh0KSxtYXhCb3VuZDp6eCh0KSxzY3JlZW5SYW5nZTpXeCh0KX0pfWZ1bmN0aW9uIEp4KHIpe3JldHVybiBmdW5jdGlvbih0LGUpe3JldHVybiBxeCh0LHt4Om89KDA8cj9SeDpJeCkoQngobj1lKS54LHN4KG4pLG14KG4pLFN4KG4pKX0pLHZ0LnNvbWUobykubWFwKEQpO3ZhciBuLG99fWZ1bmN0aW9uICR4KHQsZSxuLG8scixpKXt2YXIgdSxhLGMscyxsLGYsZCxtLGc9KGE9aSxjPW4scz1vLGw9cixmPVd4KHU9ZSksZD1zLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIHZ0LnNvbWUoWHgodCx1KSl9KS5nZXRPcigwKSxtPWwuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gdnQuc29tZShYeCh0LHUpKX0pLmdldE9yKGYpLFZ4KHttaW46c3goYSksbWF4Om14KGEpLHJhbmdlOmJ4KGEpLHZhbHVlOmMsaGFzTWluRWRnZTpUeChhKSxoYXNNYXhFZGdlOkV4KGEpLG1pbkJvdW5kOkx4KHUpLG1pbk9mZnNldDowLG1heEJvdW5kOnp4KHUpLG1heE9mZnNldDpmLGNlbnRlck1pbkVkZ2U6ZCxjZW50ZXJNYXhFZGdlOm19KSk7cmV0dXJuIEx4KGUpLUx4KHQpK2d9ZnVuY3Rpb24gUXgodCxlKXticih0LEF3KCkse3ZhbHVlOmV9KX1mdW5jdGlvbiBaeCh0LGUsbil7cmV0dXJuIFB4KHttaW46bHgoZSksbWF4Omd4KGUpLHJhbmdlOnl4KGUpLHZhbHVlOm4sc3RlcDpTeChlKSxzbmFwOmt4KGUpLHNuYXBTdGFydDpDeChlKSxyb3VuZGVkOk94KGUpLGhhc01pbkVkZ2U6RHgoZSksaGFzTWF4RWRnZTpBeChlKSxtaW5Cb3VuZDpVeCh0KSxtYXhCb3VuZDpqeCh0KSxzY3JlZW5SYW5nZTpHeCh0KX0pfWZ1bmN0aW9uIHQwKHIpe3JldHVybiBmdW5jdGlvbih0LGUpe3JldHVybiBReCh0LHt5Om89KDA8cj9SeDpJeCkoQngobj1lKS55LGx4KG4pLGd4KG4pLFN4KG4pKX0pLHZ0LnNvbWUobykubWFwKEQpO3ZhciBuLG99fWZ1bmN0aW9uIGUwKHQsZSxuLG8scixpKXt2YXIgdSxhLGMscyxsLGYsZCxtLGc9KGE9aSxjPW4scz1vLGw9cixmPUd4KHU9ZSksZD1zLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIHZ0LnNvbWUoWXgodCx1KSl9KS5nZXRPcigwKSxtPWwuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gdnQuc29tZShZeCh0LHUpKX0pLmdldE9yKGYpLFZ4KHttaW46bHgoYSksbWF4Omd4KGEpLHJhbmdlOnl4KGEpLHZhbHVlOmMsaGFzTWluRWRnZTpEeChhKSxoYXNNYXhFZGdlOkF4KGEpLG1pbkJvdW5kOlV4KHUpLG1pbk9mZnNldDowLG1heEJvdW5kOmp4KHUpLG1heE9mZnNldDpmLGNlbnRlck1pbkVkZ2U6ZCxjZW50ZXJNYXhFZGdlOm19KSk7cmV0dXJuIFV4KGUpLVV4KHQpK2d9ZnVuY3Rpb24gbjAodCxlKXticih0LEF3KCkse3ZhbHVlOmV9KX1mdW5jdGlvbiBvMCh0LGUpe3JldHVybnt4OnQseTplfX1mdW5jdGlvbiByMCh1LGEpe3JldHVybiBmdW5jdGlvbih0LGUpe3JldHVybiBvPWUscj0wPHU/Ung6SXgsbjAodCxvMChpPShuPWEpP0J4KG8pLng6cihCeChvKS54LHN4KG8pLG14KG8pLFN4KG8pKSxuP3IoQngobykueSxseChvKSxneChvKSxTeChvKSk6QngobykueSkpLHZ0LnNvbWUoaSkubWFwKEQpO3ZhciBuLG8scixpfX1mdW5jdGlvbiBpMCh0KXtyZXR1cm5cIjxhbGxveS5maWVsZC5cIit0K1wiPlwifWZ1bmN0aW9uIHUwKGYsZCxtLGcpe2Z1bmN0aW9uIHAodCxlLG4sbyxyKXt2YXIgaSx1LGE9Zih1UytcInJhbmdlXCIpLGM9W215LnBhcnRzLmxhYmVsKHtkb206e3RhZzpcImxhYmVsXCIsaW5uZXJIdG1sOm4sYXR0cmlidXRlczp7XCJhcmlhLWxhYmVsXCI6b319fSksbXkucGFydHMuZmllbGQoe2RhdGE6cixmYWN0b3J5OkR5LGlucHV0QXR0cmlidXRlczpsdCh7dHlwZTpcInRleHRcIn0sXCJoZXhcIj09PWU/e1wiYXJpYS1saXZlXCI6XCJwb2xpdGVcIn06e30pLGlucHV0Q2xhc3NlczpbZChcInRleHRmaWVsZFwiKV0saW5wdXRCZWhhdmlvdXJzOmVjKFsoaT1lLHU9dCxLeS5jb25maWcoe2ludmFsaWRDbGFzczpkKFwiaW52YWxpZFwiKSxub3RpZnk6e29uVmFsaWRhdGU6ZnVuY3Rpb24odCl7YnIodCxpUyx7dHlwZTppfSl9LG9uVmFsaWQ6ZnVuY3Rpb24odCl7YnIodCxvUyx7dHlwZTppLHZhbHVlOkRmLmdldFZhbHVlKHQpfSl9LG9uSW52YWxpZDpmdW5jdGlvbih0KXticih0LHJTLHt0eXBlOmksdmFsdWU6RGYuZ2V0VmFsdWUodCl9KX19LHZhbGlkYXRvcjp7dmFsaWRhdGU6ZnVuY3Rpb24odCl7dmFyIGU9RGYuZ2V0VmFsdWUodCksbj11KGUpP05uLnZhbHVlKCEwKTpObi5lcnJvcihmKFwiYXJpYS5pbnB1dC5pbnZhbGlkXCIpKTtyZXR1cm4gR3kobil9LHZhbGlkYXRlT25Mb2FkOiExfX0pKSxweS5jb25maWcoe30pXSksb25TZXRWYWx1ZTpmdW5jdGlvbih0KXtLeS5pc0ludmFsaWQodCkmJkt5LnJ1bih0KS5nZXQoc3QpfX0pXSxzPVwiaGV4XCIhPT1lP1tteS5wYXJ0c1tcImFyaWEtZGVzY3JpcHRvclwiXSh7dGV4dDphfSldOltdO3JldHVybntkb206e3RhZzpcImRpdlwiLGF0dHJpYnV0ZXM6e3JvbGU6XCJwcmVzZW50YXRpb25cIn19LGNvbXBvbmVudHM6Yy5jb25jYXQocyl9fWZ1bmN0aW9uIGgodCxlKXt2YXIgbj1lLnJlZCxvPWUuZ3JlZW4scj1lLmJsdWU7RGYuc2V0VmFsdWUodCx7cmVkOm4sZ3JlZW46byxibHVlOnJ9KX1mdW5jdGlvbiB2KHQsZSl7Yi5nZXRPcHQodCkuZWFjaChmdW5jdGlvbih0KXtmZSh0LmVsZW1lbnQsXCJiYWNrZ3JvdW5kLWNvbG9yXCIsXCIjXCIrZS52YWx1ZSl9KX12YXIgYj1IbSh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltkKFwicmdiYS1wcmV2aWV3XCIpXSxzdHlsZXM6e1wiYmFja2dyb3VuZC1jb2xvclwiOlwid2hpdGVcIn0sYXR0cmlidXRlczp7cm9sZTpcInByZXNlbnRhdGlvblwifX19KTtyZXR1cm4ga2woe2ZhY3Rvcnk6ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKHQpe3JldHVybiBvW3RdLmdldCgpfWZ1bmN0aW9uIGModCxlKXtvW3RdLnNldChlKX1mdW5jdGlvbiBlKHQsZSl7dmFyIG49ZS5ldmVudDtcImhleFwiIT09bi50eXBlP2Mobi50eXBlLHZ0Lm5vbmUoKSk6Zyh0KX1mdW5jdGlvbiBuKHQsZSl7dmFyIHIsbixvLGksdT1lLmV2ZW50O1wiaGV4XCI9PT11LnR5cGU/ZnVuY3Rpb24odCxlKXttKHQpO3ZhciBuPUJ2KGUpO2MoXCJoZXhcIix2dC5zb21lKGUpKTt2YXIgbz1WdihuKTtoKHQsbykscyhvKSxicih0LFF3LHtoZXg6bn0pLHYodCxuKX0odCx1LnZhbHVlKToocj10LG49dS50eXBlLG89dS52YWx1ZSxpPXBhcnNlSW50KG8sMTApLGMobix2dC5zb21lKGkpKSxhKFwicmVkXCIpLmJpbmQoZnVuY3Rpb24obil7cmV0dXJuIGEoXCJncmVlblwiKS5iaW5kKGZ1bmN0aW9uKGUpe3JldHVybiBhKFwiYmx1ZVwiKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIFJ2KG4sZSx0LDEpfSl9KX0pLmVhY2goZnVuY3Rpb24odCl7dmFyIGUsbixvPShlPXIsbj1Jdih0KSxuUy5nZXRGaWVsZChlLFwiaGV4XCIpLmVhY2goZnVuY3Rpb24odCl7VmcuaXNGb2N1c2VkKHQpfHxEZi5zZXRWYWx1ZShlLHtoZXg6bi52YWx1ZX0pfSksbik7YnIocixRdyx7aGV4Om99KSx2KHIsbyl9KSl9ZnVuY3Rpb24gdCh0KXtyZXR1cm57bGFiZWw6Zih1Uyt0K1wiLmxhYmVsXCIpLGRlc2NyaXB0aW9uOmYodVMrdCtcIi5kZXNjcmlwdGlvblwiKX19ZnVuY3Rpb24gcyh0KXt2YXIgZT10LnJlZCxuPXQuZ3JlZW4sbz10LmJsdWU7YyhcInJlZFwiLHZ0LnNvbWUoZSkpLGMoXCJncmVlblwiLHZ0LnNvbWUobikpLGMoXCJibHVlXCIsdnQuc29tZShvKSl9dmFyIG89e3JlZDpQbyh2dC5zb21lKDI1NSkpLGdyZWVuOlBvKHZ0LnNvbWUoMjU1KSksYmx1ZTpQbyh2dC5zb21lKDI1NSkpLGhleDpQbyh2dC5zb21lKFwiZmZmZmZmXCIpKX0scj10KFwicmVkXCIpLGk9dChcImdyZWVuXCIpLHU9dChcImJsdWVcIiksbD10KFwiaGV4XCIpO3JldHVybiBZbyhuUy5za2V0Y2goZnVuY3Rpb24odCl7cmV0dXJue2RvbTp7dGFnOlwiZm9ybVwiLGNsYXNzZXM6W2QoXCJyZ2ItZm9ybVwiKV0sYXR0cmlidXRlczp7XCJhcmlhLWxhYmVsXCI6ZihcImFyaWEuY29sb3IucGlja2VyXCIpfX0sY29tcG9uZW50czpbdC5maWVsZChcInJlZFwiLG15LnNrZXRjaChwKE52LFwicmVkXCIsci5sYWJlbCxyLmRlc2NyaXB0aW9uLDI1NSkpKSx0LmZpZWxkKFwiZ3JlZW5cIixteS5za2V0Y2gocChOdixcImdyZWVuXCIsaS5sYWJlbCxpLmRlc2NyaXB0aW9uLDI1NSkpKSx0LmZpZWxkKFwiYmx1ZVwiLG15LnNrZXRjaChwKE52LFwiYmx1ZVwiLHUubGFiZWwsdS5kZXNjcmlwdGlvbiwyNTUpKSksdC5maWVsZChcImhleFwiLG15LnNrZXRjaChwKE12LFwiaGV4XCIsbC5sYWJlbCxsLmRlc2NyaXB0aW9uLFwiZmZmZmZmXCIpKSksYi5hc1NwZWMoKV0sZm9ybUJlaGF2aW91cnM6ZWMoW0t5LmNvbmZpZyh7aW52YWxpZENsYXNzOmQoXCJmb3JtLWludmFsaWRcIil9KSxtbShcInJnYi1mb3JtLWV2ZW50c1wiLFtDcihvUyxuKSxDcihyUyxlKSxDcihpUyxlKV0pXSl9fSkse2FwaXM6e3VwZGF0ZUhleDpmdW5jdGlvbih0LGUpe3ZhciBuO0RmLnNldFZhbHVlKHQse2hleDplLnZhbHVlfSksaCh0LG49VnYoZSkpLHMobiksdih0LGUpfX19KX0sbmFtZTpcIlJnYkZvcm1cIixjb25maWdGaWVsZHM6W10sYXBpczp7dXBkYXRlSGV4OmZ1bmN0aW9uKHQsZSxuKXt0LnVwZGF0ZUhleChlLG4pfX0sZXh0cmFBcGlzOnt9fSl9ZnVuY3Rpb24gYTAoeCx3KXtyZXR1cm4ga2woe25hbWU6XCJDb2xvdXJQaWNrZXJcIixjb25maWdGaWVsZHM6W21vKFwiZG9tXCIpLEVvKFwib25WYWxpZEhleFwiLHN0KSxFbyhcIm9uSW52YWxpZEhleFwiLHN0KV0sZmFjdG9yeTpmdW5jdGlvbih0KXtmdW5jdGlvbiBlKHQsZSxuKXt2LmdldE9wdCh0KS5lYWNoKGZ1bmN0aW9uKHQpe2cuc2V0SHVlKHQsbil9KX1mdW5jdGlvbiBuKHQsZSl7Yi5nZXRPcHQodCkuZWFjaChmdW5jdGlvbih0KXttLnVwZGF0ZUhleCh0LGUpfSl9ZnVuY3Rpb24gcihlLG4sbyx0KXt2YXIgcj1vLGk9VnYobik7cC5wYWxldHRlUmdiYS5zZXQoaSkscC5wYWxldHRlSHVlLnNldChyKSxTdCh0LGZ1bmN0aW9uKHQpe3QoZSxuLG8pfSl9dmFyIG8saSx1LGEsYyxzLGwsZixkLG09dTAoeCx3LHQub25WYWxpZEhleCx0Lm9uSW52YWxpZEhleCksZz0obD13LGY9JHcucGFydHMuc3BlY3RydW0oe2RvbTp7dGFnOlwiY2FudmFzXCIsYXR0cmlidXRlczp7cm9sZTpcInByZXNlbnRhdGlvblwifSxjbGFzc2VzOltsKFwic3YtcGFsZXR0ZS1zcGVjdHJ1bVwiKV19fSksZD0kdy5wYXJ0cy50aHVtYih7ZG9tOnt0YWc6XCJkaXZcIixhdHRyaWJ1dGVzOntyb2xlOlwicHJlc2VudGF0aW9uXCJ9LGNsYXNzZXM6W2woXCJzdi1wYWxldHRlLXRodW1iXCIpXSxpbm5lckh0bWw6XCI8ZGl2IGNsYXNzPVwiK2woXCJzdi1wYWxldHRlLWlubmVyLXRodW1iXCIpKycgcm9sZT1cInByZXNlbnRhdGlvblwiPjwvZGl2Pid9fSksa2woe2ZhY3Rvcnk6ZnVuY3Rpb24odCl7dmFyIGU9cnQoe3g6MCx5OjB9KSxuPWVjKFtjZC5jb25maWcoe2ZpbmQ6dnQuc29tZX0pLFZnLmNvbmZpZyh7fSldKTtyZXR1cm4gJHcuc2tldGNoKHtkb206e3RhZzpcImRpdlwiLGF0dHJpYnV0ZXM6e3JvbGU6XCJwcmVzZW50YXRpb25cIn0sY2xhc3NlczpbbChcInN2LXBhbGV0dGVcIildfSxtb2RlbDp7bW9kZTpcInh5XCIsZ2V0SW5pdGlhbFZhbHVlOmV9LHJvdW5kZWQ6ITEsY29tcG9uZW50czpbZixkXSxvbkNoYW5nZTpmdW5jdGlvbih0LGUsbil7YnIodCx0Uyx7dmFsdWU6bn0pfSxvbkluaXQ6ZnVuY3Rpb24odCxlLG4sbyl7eShuLmVsZW1lbnQuZG9tLHp2KGZiKSl9LHNsaWRlckJlaGF2aW91cnM6bn0pfSxuYW1lOlwiU2F0dXJhdGlvbkJyaWdodG5lc3NQYWxldHRlXCIsY29uZmlnRmllbGRzOltdLGFwaXM6e3NldEh1ZTpmdW5jdGlvbih0LGUsbil7dmFyIG89bjt5KGUuY29tcG9uZW50cygpWzBdLmVsZW1lbnQuZG9tLHp2KFB2KGp2KG8sMTAwLDEwMCkpKSl9LHNldFRodW1iOmZ1bmN0aW9uKHQsZSxuKXt2YXIgbz1lLHI9V3YoVnYobikpOyR3LnNldFZhbHVlKG8se3g6ci5zYXR1cmF0aW9uLHk6MTAwLXIudmFsdWV9KX19LGV4dHJhQXBpczp7fX0pKSxwPXtwYWxldHRlUmdiYTpQbyhmYikscGFsZXR0ZUh1ZTpQbygwKX0saD1IbSgoaT0kdy5wYXJ0cy5zcGVjdHJ1bSh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOlsobz13KShcImh1ZS1zbGlkZXItc3BlY3RydW1cIildLGF0dHJpYnV0ZXM6e3JvbGU6XCJwcmVzZW50YXRpb25cIn19fSksdT0kdy5wYXJ0cy50aHVtYih7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltvKFwiaHVlLXNsaWRlci10aHVtYlwiKV0sYXR0cmlidXRlczp7cm9sZTpcInByZXNlbnRhdGlvblwifX19KSwkdy5za2V0Y2goe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbbyhcImh1ZS1zbGlkZXJcIildLGF0dHJpYnV0ZXM6e3JvbGU6XCJwcmVzZW50YXRpb25cIn19LHJvdW5kZWQ6ITEsbW9kZWw6e21vZGU6XCJ5XCIsZ2V0SW5pdGlhbFZhbHVlOnJ0KHt5OjB9KX0sY29tcG9uZW50czpbaSx1XSxzbGlkZXJCZWhhdmlvdXJzOmVjKFtWZy5jb25maWcoe30pXSksb25DaGFuZ2U6ZnVuY3Rpb24odCxlLG4pe2JyKHQsWncse3ZhbHVlOm59KX19KSkpLHY9SG0oZy5za2V0Y2goe30pKSxiPUhtKG0uc2tldGNoKHt9KSk7ZnVuY3Rpb24geSh0LGUpe3ZhciBuLG8scj10LndpZHRoLGk9dC5oZWlnaHQsdT10LmdldENvbnRleHQoXCIyZFwiKTtudWxsIT09dSYmKHUuZmlsbFN0eWxlPWUsdS5maWxsUmVjdCgwLDAscixpKSwobj11LmNyZWF0ZUxpbmVhckdyYWRpZW50KDAsMCxyLDApKS5hZGRDb2xvclN0b3AoMCxcInJnYmEoMjU1LDI1NSwyNTUsMSlcIiksbi5hZGRDb2xvclN0b3AoMSxcInJnYmEoMjU1LDI1NSwyNTUsMClcIiksdS5maWxsU3R5bGU9bix1LmZpbGxSZWN0KDAsMCxyLGkpLChvPXUuY3JlYXRlTGluZWFyR3JhZGllbnQoMCwwLDAsaSkpLmFkZENvbG9yU3RvcCgwLFwicmdiYSgwLDAsMCwwKVwiKSxvLmFkZENvbG9yU3RvcCgxLFwicmdiYSgwLDAsMCwxKVwiKSx1LmZpbGxTdHlsZT1vLHUuZmlsbFJlY3QoMCwwLHIsaSkpfXJldHVybnt1aWQ6dC51aWQsZG9tOnQuZG9tLGNvbXBvbmVudHM6W3YuYXNTcGVjKCksaC5hc1NwZWMoKSxiLmFzU3BlYygpXSxiZWhhdmlvdXJzOmVjKFttbShcImNvbG91ci1waWNrZXItZXZlbnRzXCIsW0NyKFF3LChzPVtlLGZ1bmN0aW9uKHQsZSxuKXtoLmdldE9wdCh0KS5lYWNoKGZ1bmN0aW9uKHQpeyR3LnNldFZhbHVlKHQse3k6MTAwLW4vMzYwKjEwMH0pfSl9LGZ1bmN0aW9uKHQsZSl7di5nZXRPcHQodCkuZWFjaChmdW5jdGlvbih0KXtnLnNldFRodW1iKHQsZSl9KX1dLGZ1bmN0aW9uKHQsZSl7dmFyIG49ZS5ldmVudC5oZXg7cih0LG4sV3YoVnYobikpLmh1ZSxzKX0pKSxDcih0UywoYz1bbl0sZnVuY3Rpb24odCxlKXt2YXIgbj1lLmV2ZW50LnZhbHVlLG89cC5wYWxldHRlSHVlLmdldCgpO3IodCxHdihqdihvLG4ueCwxMDAtbi55KSksbyxjKX0pKSxDcihadywoYT1bZSxuXSxmdW5jdGlvbih0LGUpe3ZhciBuPSgxMDAtZS5ldmVudC52YWx1ZS55KS8xMDAqMzYwLG89V3YocC5wYWxldHRlUmdiYS5nZXQoKSk7cih0LEd2KGp2KG4sby5zYXR1cmF0aW9uLG8udmFsdWUpKSxuLGEpfSkpXSksY2QuY29uZmlnKHtmaW5kOmZ1bmN0aW9uKHQpe3JldHVybiBiLmdldE9wdCh0KX19KSxGZy5jb25maWcoe21vZGU6XCJhY3ljbGljXCJ9KV0pfX19KX1mdW5jdGlvbiBjMCh0KXtyZXR1cm4gc1NbdF19ZnVuY3Rpb24gczAodCxlLG4pe3JldHVybiBEZi5jb25maWcoWW8oe3N0b3JlOnttb2RlOlwibWFudWFsXCIsZ2V0VmFsdWU6ZSxzZXRWYWx1ZTpufX0sdC5tYXAoZnVuY3Rpb24odCl7cmV0dXJue3N0b3JlOntpbml0aWFsVmFsdWU6dH19fSkuZ2V0T3Ioe30pKSl9ZnVuY3Rpb24gbDAocixpKXtmdW5jdGlvbiBlKHQsZSl7ZS5zdG9wKCl9ZnVuY3Rpb24gbih0KXtyZXR1cm4gZnVuY3Rpb24oZSxuKXtTdCh0LGZ1bmN0aW9uKHQpe3QoZSxuKX0pfX1mdW5jdGlvbiBvKHQsZSl7dmFyIG47Z2QuaXNEaXNhYmxlZCh0KXx8KG49ZS5ldmVudC5yYXcsYSh0LG4uZGF0YVRyYW5zZmVyLmZpbGVzKSl9ZnVuY3Rpb24gdSh0LGUpe3ZhciBuPWUuZXZlbnQucmF3LnRhcmdldDthKHQsbi5maWxlcyl9ZnVuY3Rpb24gYSh0LGUpe3ZhciBuLG87RGYuc2V0VmFsdWUodCwobj1lLG89ZlMuZXhwbG9kZShpLmdldFNldHRpbmcoXCJpbWFnZXNfZmlsZV90eXBlc1wiLFwianBlZyxqcGcsanBlLGpmaSxqaWYsamZpZixwbmcsZ2lmLGJtcCx3ZWJwXCIsXCJzdHJpbmdcIikpLEYoa3QobiksZnVuY3Rpb24oZSl7cmV0dXJuIGQobyxmdW5jdGlvbih0KXtyZXR1cm4gQXQoZS5uYW1lLnRvTG93ZXJDYXNlKCksXCIuXCIrdC50b0xvd2VyQ2FzZSgpKX0pfSkpKSxicih0LHl5LHtuYW1lOnIubmFtZX0pfXZhciBjPUhtKHtkb206e3RhZzpcImlucHV0XCIsYXR0cmlidXRlczp7dHlwZTpcImZpbGVcIixhY2NlcHQ6XCJpbWFnZS8qXCJ9LHN0eWxlczp7ZGlzcGxheTpcIm5vbmVcIn19LGJlaGF2aW91cnM6ZWMoW21tKFwiaW5wdXQtZmlsZS1ldmVudHNcIixbRHIoQ2koKSksRHIoTmkoKSldKV0pfSk7cmV0dXJuIG55KHIubGFiZWwubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBveSh0LGkpfSksbXkucGFydHMuZmllbGQoe2ZhY3Rvcnk6e3NrZXRjaDpmdW5jdGlvbih0KXtyZXR1cm57dWlkOnQudWlkLGRvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtZHJvcHpvbmUtY29udGFpbmVyXCJdfSxiZWhhdmlvdXJzOmVjKFtwUyhbXSksYXcoKSxnZC5jb25maWcoe30pLHpnLmNvbmZpZyh7dG9nZ2xlQ2xhc3M6XCJkcmFnZW50ZXJcIix0b2dnbGVPbkV4ZWN1dGU6ITF9KSxtbShcImRyb3B6b25lLWV2ZW50c1wiLFtDcihcImRyYWdlbnRlclwiLG4oW2UsemcudG9nZ2xlXSkpLENyKFwiZHJhZ2xlYXZlXCIsbihbZSx6Zy50b2dnbGVdKSksQ3IoXCJkcmFnb3ZlclwiLGUpLENyKFwiZHJvcFwiLG4oW2Usb10pKSxDcihraSgpLHUpXSldKSxjb21wb25lbnRzOlt7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1kcm9wem9uZVwiXSxzdHlsZXM6e319LGNvbXBvbmVudHM6W3tkb206e3RhZzpcInBcIixpbm5lckh0bWw6aS50cmFuc2xhdGUoXCJEcm9wIGFuIGltYWdlIGhlcmVcIil9fSxmcC5za2V0Y2goe2RvbTp7dGFnOlwiYnV0dG9uXCIsaW5uZXJIdG1sOmkudHJhbnNsYXRlKFwiQnJvd3NlIGZvciBhbiBpbWFnZVwiKSxzdHlsZXM6e3Bvc2l0aW9uOlwicmVsYXRpdmVcIn0sY2xhc3NlczpbXCJ0b3gtYnV0dG9uXCIsXCJ0b3gtYnV0dG9uLS1zZWNvbmRhcnlcIl19LGNvbXBvbmVudHM6W2MuYXNTcGVjKCldLGFjdGlvbjpmdW5jdGlvbih0KXtjLmdldCh0KS5lbGVtZW50LmRvbS5jbGljaygpfSxidXR0b25CZWhhdmlvdXJzOmVjKFtweS5jb25maWcoe30pLCR2KGkuaXNEaXNhYmxlZCkscHYoKV0pfSldfV19fX19KSxbXCJ0b3gtZm9ybV9fZ3JvdXAtLXN0cmV0Y2hlZFwiXSxbXSl9ZnVuY3Rpb24gZjAodCl7cmV0dXJue2RvbTp7dGFnOlwiZGl2XCIsc3R5bGVzOnt3aWR0aDpcIjFweFwiLGhlaWdodDpcIjFweFwiLG91dGxpbmU6XCJub25lXCJ9LGF0dHJpYnV0ZXM6e3RhYmluZGV4OlwiMFwifSxjbGFzc2VzOnR9LGJlaGF2aW91cnM6ZWMoW1ZnLmNvbmZpZyh7aWdub3JlOiEwfSkscHkuY29uZmlnKHt9KV0pfX1mdW5jdGlvbiBkMCh0KXtyZXR1cm57ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1uYXZvYmpcIl19LGNvbXBvbmVudHM6W2YwKFtoU10pLHQsZjAoW3ZTXSldLGJlaGF2aW91cnM6ZWMoW2NTKDEpXSl9fWZ1bmN0aW9uIG0wKHQsZSl7YnIodCx4aSgpLHtyYXc6e3doaWNoOjksc2hpZnRLZXk6ZX19KX1mdW5jdGlvbiBnMCh0LGUpe3ZhciBuPWUuZWxlbWVudDtLcihuLGhTKT9tMCh0LCEwKTpLcihuLHZTKSYmbTAodCwhMSl9ZnVuY3Rpb24gcDAodCl7cmV0dXJuIFliKHQsW1wiLlwiK2hTLFwiLlwiK3ZTXS5qb2luKFwiLFwiKSxUKX1mdW5jdGlvbiBoMCh0LGUpe3JldHVybiB4Uyhkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpLHQsZSl9ZnVuY3Rpb24gdjAodCl7dmFyIGU9aDAodC53aWR0aCx0LmhlaWdodCk7cmV0dXJuIHlTKGUpLmRyYXdJbWFnZSh0LDAsMCksZX1mdW5jdGlvbiBiMCh0KXtyZXR1cm4gdC5uYXR1cmFsV2lkdGh8fHQud2lkdGh9ZnVuY3Rpb24geTAodCl7cmV0dXJuIHQubmF0dXJhbEhlaWdodHx8dC5oZWlnaHR9ZnVuY3Rpb24geDAodCxvLHIpe3JldHVybiBvPW98fFwiaW1hZ2UvcG5nXCIsUyhIVE1MQ2FudmFzRWxlbWVudC5wcm90b3R5cGUudG9CbG9iKT9uZXcgTHkoZnVuY3Rpb24oZSxuKXt0LnRvQmxvYihmdW5jdGlvbih0KXt0P2UodCk6bigpfSxvLHIpfSk6KGc9dC50b0RhdGFVUkwobyxyKSxuZXcgTHkoZnVuY3Rpb24odCxlKXshZnVuY3Rpb24oKXt2YXIgdD1nLnNwbGl0KFwiLFwiKSxlPS9kYXRhOihbXjtdKykvLmV4ZWModFswXSk7aWYoIWUpcmV0dXJuIHZ0Lm5vbmUoKTtmb3IodmFyIG49ZVsxXSxvPXRbMV0scj1hdG9iKG8pLGk9ci5sZW5ndGgsdT1NYXRoLmNlaWwoaS8xMDI0KSxhPW5ldyBBcnJheSh1KSxjPTA7Yzx1OysrYyl7Zm9yKHZhciBzPTEwMjQqYyxsPU1hdGgubWluKDEwMjQrcyxpKSxmPW5ldyBBcnJheShsLXMpLGQ9cyxtPTA7ZDxsOysrbSwrK2QpZlttXT1yW2RdLmNoYXJDb2RlQXQoMCk7YVtjXT1uZXcgVWludDhBcnJheShmKX1yZXR1cm4gdnQuc29tZShuZXcgQmxvYihhLHt0eXBlOm59KSl9KCkuZm9sZChmdW5jdGlvbigpe2UoXCJ1cmkgaXMgbm90IGJhc2U2NDogXCIrZyl9LHQpfSkpO3ZhciBnfWZ1bmN0aW9uIHcwKHQsZSxuKXtmdW5jdGlvbiBvKGUsbil7cmV0dXJuIHQudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gdC50b0RhdGFVUkwoZXx8XCJpbWFnZS9wbmdcIixuKX0pfXJldHVybntnZXRUeXBlOnJ0KGUudHlwZSksdG9CbG9iOmZ1bmN0aW9uKCl7cmV0dXJuIEx5LnJlc29sdmUoZSl9LHRvRGF0YVVSTDpydChuKSx0b0Jhc2U2NDpmdW5jdGlvbigpe3JldHVybiBuLnNwbGl0KFwiLFwiKVsxXX0sdG9BZGp1c3RlZEJsb2I6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gdC50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB4MCh0LGUsbil9KX0sdG9BZGp1c3RlZERhdGFVUkw6byx0b0FkanVzdGVkQmFzZTY0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIG8odCxlKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB0LnNwbGl0KFwiLFwiKVsxXX0pfSx0b0NhbnZhczpmdW5jdGlvbigpe3JldHVybiB0LnRoZW4odjApfX19ZnVuY3Rpb24gUzAoZSx0KXtyZXR1cm4geDAoZSx0KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB3MChMeS5yZXNvbHZlKGUpLHQsZS50b0RhdGFVUkwoKSl9KX1mdW5jdGlvbiBrMChlKXtyZXR1cm4gbj1lLG5ldyBMeShmdW5jdGlvbih0KXt2YXIgZT1uZXcgRmlsZVJlYWRlcjtlLm9ubG9hZGVuZD1mdW5jdGlvbigpe3QoZS5yZXN1bHQpfSxlLnJlYWRBc0RhdGFVUkwobil9KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB3MCgoYT1lLG5ldyBMeShmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4oKXtyLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsaSksci5yZW1vdmVFdmVudExpc3RlbmVyKFwiZXJyb3JcIix1KX12YXIgbz1VUkwuY3JlYXRlT2JqZWN0VVJMKGEpLHI9bmV3IEltYWdlLGk9ZnVuY3Rpb24oKXtuKCksdChyKX0sdT1mdW5jdGlvbigpe24oKSxlKFwiVW5hYmxlIHRvIGxvYWQgZGF0YSBvZiB0eXBlIFwiK2EudHlwZStcIjogXCIrbyl9O3IuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIixpKSxyLmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLHUpLHIuc3JjPW8sci5jb21wbGV0ZSYmc2V0VGltZW91dChpLDApfSkudGhlbihmdW5jdGlvbih0KXt3Uyh0KTt2YXIgZT1oMChiMCh0KSx5MCh0KSk7cmV0dXJuIHlTKGUpLmRyYXdJbWFnZSh0LDAsMCksZX0pKSxlLHQpO3ZhciBhfSk7dmFyIG59ZnVuY3Rpb24gQzAodCxlLG4pe3ZhciBvPVwic3RyaW5nXCI9PXR5cGVvZiB0P3BhcnNlRmxvYXQodCk6dDtyZXR1cm4gbjxvP289bjpvPGUmJihvPWUpLG99ZnVuY3Rpb24gTzAoKXtyZXR1cm5bMSwwLDAsMCwwLDAsMSwwLDAsMCwwLDAsMSwwLDAsMCwwLDAsMSwwLDAsMCwwLDAsMV19ZnVuY3Rpb24gXzAodCxlKXtmb3IodmFyIG49W10sbz1uZXcgQXJyYXkoMjUpLHI9MDtyPDU7cisrKXtmb3IodmFyIGk9MDtpPDU7aSsrKW5baV09ZVtpKzUqcl07Zm9yKGk9MDtpPDU7aSsrKXtmb3IodmFyIHU9MCxhPTA7YTw1O2ErKyl1Kz10W2krNSphXSpuW2FdO29baSs1KnJdPXV9fXJldHVybiBvfWZ1bmN0aW9uIFQwKGUsbil7cmV0dXJuIGUudG9DYW52YXMoKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBrUyh0LGUuZ2V0VHlwZSgpLG4pfSl9ZnVuY3Rpb24gRTAobil7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7cmV0dXJuIFQwKHQsbihPMCgpLGUpKX19ZnVuY3Rpb24gRDAodCxlKXt2b2lkIDA9PT1lJiYoZT0yKTt2YXIgbj1NYXRoLnBvdygxMCxlKSxvPU1hdGgucm91bmQodCpuKTtyZXR1cm4gTWF0aC5jZWlsKG8vbil9ZnVuY3Rpb24gQTAodCl7cmV0dXJuIENTKHQpfWZ1bmN0aW9uIEIwKHQpe3JldHVybiBUUyh0KX1mdW5jdGlvbiBNMCh0LGUpe3JldHVybiBFUyh0LGUpfWZ1bmN0aW9uIEYwKHQsZSl7cmV0dXJuIE9TKHQsZSl9ZnVuY3Rpb24gSTAodCxlKXtyZXR1cm4gX1ModCxlKX1mdW5jdGlvbiBSMCh0LGUpe3JldHVybiBvPWUsKG49dCkudG9DYW52YXMoKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBNUyh0LG4uZ2V0VHlwZSgpLG8pfSk7dmFyIG4sb31mdW5jdGlvbiBOMCh0LGUpe3JldHVybiBvPWUsKG49dCkudG9DYW52YXMoKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBCUyh0LG4uZ2V0VHlwZSgpLG8pfSk7dmFyIG4sb31mdW5jdGlvbiBQMCh0LGUsbil7cmV0dXJuIFhtKHQse3RhZzpcInNwYW5cIixjbGFzc2VzOltcInRveC1pY29uXCIsXCJ0b3gtdGJ0bl9faWNvbi13cmFwXCJdLGJlaGF2aW91cnM6bn0sZSl9ZnVuY3Rpb24gVjAodCxlKXtyZXR1cm4gUDAodCxlLFtdKX1mdW5jdGlvbiBIMCh0LGUpe3JldHVybiBQMCh0LGUsW1JnLmNvbmZpZyh7fSldKX1mdW5jdGlvbiBMMCh0LGUsbil7cmV0dXJue2RvbTp7dGFnOlwic3BhblwiLGlubmVySHRtbDpuLnRyYW5zbGF0ZSh0KSxjbGFzc2VzOltlK1wiX19zZWxlY3QtbGFiZWxcIl19LGJlaGF2aW91cnM6ZWMoW1JnLmNvbmZpZyh7fSldKX19ZnVuY3Rpb24gejAoZSxuLG8pe2Z1bmN0aW9uIHQodCxlKXt2YXIgbj1EZi5nZXRWYWx1ZSh0KTtyZXR1cm4gVmcuZm9jdXMobiksYnIobixcImtleWRvd25cIix7cmF3OmUuZXZlbnQucmF3fSksaHcuY2xvc2UobiksdnQuc29tZSghMCl9dmFyIHI9UG8oc3QpLGk9ZS50ZXh0Lm1hcChmdW5jdGlvbih0KXtyZXR1cm4gSG0oTDAodCxuLG8ucHJvdmlkZXJzKSl9KSx1PWUuaWNvbi5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIEhtKEgwKHQsby5wcm92aWRlcnMuaWNvbnMpKX0pLGE9ZS5yb2xlLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm57fX0sZnVuY3Rpb24odCl7cmV0dXJue3JvbGU6dH19KSxjPWUudG9vbHRpcC5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJue319LGZ1bmN0aW9uKHQpe3ZhciBlPW8ucHJvdmlkZXJzLnRyYW5zbGF0ZSh0KTtyZXR1cm57dGl0bGU6ZSxcImFyaWEtbGFiZWxcIjplfX0pLHM9WG0oXCJjaGV2cm9uLWRvd25cIix7dGFnOlwiZGl2XCIsY2xhc3NlczpbbitcIl9fc2VsZWN0LWNoZXZyb25cIl19LG8ucHJvdmlkZXJzLmljb25zKTtyZXR1cm4gSG0oaHcuc2tldGNoKGx0KGx0KGx0KHt9LGUudWlkP3t1aWQ6ZS51aWR9Ont9KSxhKSx7ZG9tOnt0YWc6XCJidXR0b25cIixjbGFzc2VzOltuLG4rXCItLXNlbGVjdFwiXS5jb25jYXQoQihlLmNsYXNzZXMsZnVuY3Rpb24odCl7cmV0dXJuIG4rXCItLVwiK3R9KSksYXR0cmlidXRlczpsdCh7fSxjKX0sY29tcG9uZW50czp0YihbdS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuYXNTcGVjKCl9KSxpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5hc1NwZWMoKX0pLHZ0LnNvbWUocyldKSxtYXRjaFdpZHRoOiEwLHVzZU1pbldpZHRoOiEwLGRyb3Bkb3duQmVoYXZpb3VyczplYyhWKFYoW10sZS5kcm9wZG93bkJlaGF2aW91cnMsITApLFskdihmdW5jdGlvbigpe3JldHVybiBlLmRpc2FibGVkfHxvLnByb3ZpZGVycy5pc0Rpc2FibGVkKCl9KSxwdigpLHZ3LmNvbmZpZyh7fSksUmcuY29uZmlnKHt9KSxtbShcImRyb3Bkb3duLWV2ZW50c1wiLFt2dihlLHIpLGJ2KGUscildKSxtbShcIm1lbnVidXR0b24tdXBkYXRlLWRpc3BsYXktdGV4dFwiLFtDcihOUyxmdW5jdGlvbihlLG4pe2kuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gdC5nZXRPcHQoZSl9KS5lYWNoKGZ1bmN0aW9uKHQpe1JnLnNldCh0LFtyaShvLnByb3ZpZGVycy50cmFuc2xhdGUobi5ldmVudC50ZXh0KSldKX0pfSksQ3IoUFMsZnVuY3Rpb24oZSxuKXt1LmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0T3B0KGUpfSkuZWFjaChmdW5jdGlvbih0KXtSZy5zZXQodCxbSDAobi5ldmVudC5pY29uLG8ucHJvdmlkZXJzLmljb25zKV0pfSl9KV0pXSwhMSkpLGV2ZW50T3JkZXI6WW8oUlMse21vdXNlZG93bjpbXCJmb2N1c2luZ1wiLFwiYWxsb3kuYmFzZS5iZWhhdmlvdXJcIixcIml0ZW0tdHlwZS1ldmVudHNcIixcIm5vcm1hbC1kcm9wZG93bi1ldmVudHNcIl19KSxzYW5kYm94QmVoYXZpb3VyczplYyhbRmcuY29uZmlnKHttb2RlOlwic3BlY2lhbFwiLG9uTGVmdDp0LG9uUmlnaHQ6dH0pXSksbGF6eVNpbms6by5nZXRTaW5rLHRvZ2dsZUNsYXNzOm4rXCItLWFjdGl2ZVwiLHBhcnRzOnttZW51OlpwKDAsZS5jb2x1bW5zLGUucHJlc2V0cyl9LGZldGNoOmZ1bmN0aW9uKHQpe3JldHVybiBXeShDKGUuZmV0Y2gsdCkpfX0pKSkuYXNTcGVjKCl9ZnVuY3Rpb24gVTAodCl7cmV0dXJuXCJzZXBhcmF0b3JcIj09PXQudHlwZX1mdW5jdGlvbiBqMCh0LG4sbyxlKXt2YXIgcj1JcihcInByaW1hcnktbWVudVwiKSxpPUhTKHQsby5zaGFyZWQucHJvdmlkZXJzLm1lbnVJdGVtcygpKTtpZigwPT09aS5pdGVtcy5sZW5ndGgpcmV0dXJuIHZ0Lm5vbmUoKTt2YXIgdT1HYihyLGkuaXRlbXMsbixvLGUpLGE9ZHQoaS5tZW51cyxmdW5jdGlvbih0LGUpe3JldHVybiBHYihlLHQsbixvLCExKX0pLGM9WW8oYSxzcihyLHUpKTtyZXR1cm4gdnQuZnJvbShpcC50aWVyZWREYXRhKHIsYyxpLmV4cGFuc2lvbnMpKX1mdW5jdGlvbiBXMChuKXtyZXR1cm57aXNEaXNhYmxlZDpmdW5jdGlvbigpe3JldHVybiBnZC5pc0Rpc2FibGVkKG4pfSxzZXREaXNhYmxlZDpmdW5jdGlvbih0KXtyZXR1cm4gZ2Quc2V0KG4sdCl9LHNldEFjdGl2ZTpmdW5jdGlvbih0KXt2YXIgZT1uLmVsZW1lbnQ7dD8oWXIoZSxcInRveC10YnRuLS1lbmFibGVkXCIpLG9lKGUsXCJhcmlhLXByZXNzZWRcIiwhMCkpOihxcihlLFwidG94LXRidG4tLWVuYWJsZWRcIiksY2UoZSxcImFyaWEtcHJlc3NlZFwiKSl9LGlzQWN0aXZlOmZ1bmN0aW9uKCl7cmV0dXJuIEtyKG4uZWxlbWVudCxcInRveC10YnRuLS1lbmFibGVkXCIpfX19ZnVuY3Rpb24gRzAobix0LG8sZSl7cmV0dXJuIHowKHt0ZXh0Om4udGV4dCxpY29uOm4uaWNvbix0b29sdGlwOm4udG9vbHRpcCxyb2xlOmUsZmV0Y2g6ZnVuY3Rpb24odCxlKXtuLmZldGNoKGZ1bmN0aW9uKHQpe2UoajAodCxTaC5DTE9TRV9PTl9FWEVDVVRFLG8sITEpKX0pfSxvblNldHVwOm4ub25TZXR1cCxnZXRBcGk6VzAsY29sdW1uczoxLHByZXNldHM6XCJub3JtYWxcIixjbGFzc2VzOltdLGRyb3Bkb3duQmVoYXZpb3VyczpbcHkuY29uZmlnKHt9KV19LHQsby5zaGFyZWQpfWZ1bmN0aW9uIFgwKHQsZSxuLG8scixpKXt2b2lkIDA9PT1uJiYobj1bXSk7dmFyIHU9ZS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJue319LGZ1bmN0aW9uKHQpe3JldHVybnthY3Rpb246dH19KSxhPWx0KHtidXR0b25CZWhhdmlvdXJzOmVjKFskdihmdW5jdGlvbigpe3JldHVybiB0LmRpc2FibGVkfHxpLmlzRGlzYWJsZWQoKX0pLHB2KCkscHkuY29uZmlnKHt9KSxtbShcImJ1dHRvbiBwcmVzc1wiLFtrcihcImNsaWNrXCIpLGtyKFwibW91c2Vkb3duXCIpXSldLmNvbmNhdChuKSksZXZlbnRPcmRlcjp7Y2xpY2s6W1wiYnV0dG9uIHByZXNzXCIsXCJhbGxveS5iYXNlLmJlaGF2aW91clwiXSxtb3VzZWRvd246W1wiYnV0dG9uIHByZXNzXCIsXCJhbGxveS5iYXNlLmJlaGF2aW91clwiXX19LHUpLGM9WW8oYSx7ZG9tOm99KTtyZXR1cm4gWW8oYyx7Y29tcG9uZW50czpyfSl9ZnVuY3Rpb24gWTAodCxlLG4sbyl7dm9pZCAwPT09byYmKG89W10pO3ZhciByPXt0YWc6XCJidXR0b25cIixjbGFzc2VzOltcInRveC10YnRuXCJdLGF0dHJpYnV0ZXM6dC50b29sdGlwLm1hcChmdW5jdGlvbih0KXtyZXR1cm57XCJhcmlhLWxhYmVsXCI6bi50cmFuc2xhdGUodCksdGl0bGU6bi50cmFuc2xhdGUodCl9fSkuZ2V0T3Ioe30pfSxpPXQuaWNvbi5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIFYwKHQsbi5pY29ucyl9KTtyZXR1cm4gWDAodCxlLG8scix0YihbaV0pLG4pfWZ1bmN0aW9uIHEwKHQsZSxuLG8pe3ZvaWQgMD09PW8mJihvPVtdKTt2YXIgcj1ZMCh0LHZ0LnNvbWUoZSksbixvKTtyZXR1cm4gZnAuc2tldGNoKHIpfWZ1bmN0aW9uIEswKHQsZSxuLG8scil7dm9pZCAwPT09byYmKG89W10pLHZvaWQgMD09PXImJihyPVtdKTt2YXIgaT1uLnRyYW5zbGF0ZSh0LnRleHQpLHU9dC5pY29uP3QuaWNvbi5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIFYwKHQsbi5pY29ucyl9KTp2dC5ub25lKCksYT11LmlzU29tZSgpP3RiKFt1XSk6W10sYz11LmlzU29tZSgpP3t9Ontpbm5lckh0bWw6aX0scz1WKFYoVihWKFtdLHQucHJpbWFyeXx8dC5ib3JkZXJsZXNzP1tcInRveC1idXR0b25cIl06W1widG94LWJ1dHRvblwiLFwidG94LWJ1dHRvbi0tc2Vjb25kYXJ5XCJdLCEwKSx1LmlzU29tZSgpP1tcInRveC1idXR0b24tLWljb25cIl06W10sITApLHQuYm9yZGVybGVzcz9bXCJ0b3gtYnV0dG9uLS1uYWtlZFwiXTpbXSwhMCksciwhMCk7cmV0dXJuIFgwKHQsZSxvLGx0KGx0KHt0YWc6XCJidXR0b25cIixjbGFzc2VzOnN9LGMpLHthdHRyaWJ1dGVzOnt0aXRsZTppfX0pLGEsbil9ZnVuY3Rpb24gSjAodCxlLG4sbyxyKXt2b2lkIDA9PT1vJiYobz1bXSksdm9pZCAwPT09ciYmKHI9W10pO3ZhciBpPUswKHQsdnQuc29tZShlKSxuLG8scik7cmV0dXJuIGZwLnNrZXRjaChpKX1mdW5jdGlvbiAkMChlLG4pe3JldHVybiBmdW5jdGlvbih0KXtcImN1c3RvbVwiPT09bj9icih0LFN5LHtuYW1lOmUsdmFsdWU6e319KTpcInN1Ym1pdFwiPT09bj92cih0LGt5KTpcImNhbmNlbFwiPT09bj92cih0LHd5KTpjb25zb2xlLmVycm9yKFwiVW5rbm93biBidXR0b24gdHlwZTogXCIsbil9fWZ1bmN0aW9uIFEwKGUsdCxuKXtpZihcIm1lbnVcIj09PXQpe3ZhciBvPWUscj1IbShHMChsdChsdCh7fSxlKSx7b25TZXR1cDpmdW5jdGlvbih0KXtyZXR1cm4gdC5zZXREaXNhYmxlZChlLmRpc2FibGVkKSxzdH0sZmV0Y2g6KGk9by5pdGVtcyx1PWZ1bmN0aW9uKCl7cmV0dXJuIHJ9LGE9bixmdW5jdGlvbih0KXt0KEIoaSxmdW5jdGlvbih0KXt2YXIgZSxuLG89dC50ZXh0LmZvbGQoZnVuY3Rpb24oKXtyZXR1cm57fX0sZnVuY3Rpb24odCl7cmV0dXJue3RleHQ6dH19KTtyZXR1cm4gbHQobHQoe3R5cGU6dC50eXBlLGFjdGl2ZTohMX0sbykse29uQWN0aW9uOmZ1bmN0aW9uKHQpe3ZhciBlPSF0LmlzQWN0aXZlKCk7dC5zZXRBY3RpdmUoZSksbi5zdG9yYWdlLnNldChlKSxhLnNoYXJlZC5nZXRTaW5rKCkuZWFjaChmdW5jdGlvbih0KXt1KCkuZ2V0T3B0KHQpLmVhY2goZnVuY3Rpb24odCl7a2EodC5lbGVtZW50KSxicih0LFN5LHtuYW1lOm4ubmFtZSx2YWx1ZTpuLnN0b3JhZ2UuZ2V0KCl9KX0pfSl9LG9uU2V0dXA6KGU9bj10LGZ1bmN0aW9uKHQpe3Quc2V0QWN0aXZlKGUuc3RvcmFnZS5nZXQoKSl9KX0pfSkpfSl9KSxcInRveC10YnRuXCIsbix2dC5ub25lKCkpKTtyZXR1cm4gci5hc1NwZWMoKX12YXIgaSx1LGE7aWYoXCJjdXN0b21cIj09PXR8fFwiY2FuY2VsXCI9PT10fHxcInN1Ym1pdFwiPT09dCl7dmFyIGM9JDAoZS5uYW1lLHQpO3JldHVybiBKMChsdChsdCh7fSxlKSx7Ym9yZGVybGVzczohMX0pLGMsbi5zaGFyZWQucHJvdmlkZXJzLFtdKX1jb25zb2xlLmVycm9yKFwiVW5rbm93biBmb290ZXIgYnV0dG9uIHR5cGU6IFwiLHQpfWZ1bmN0aW9uIFowKHQsZSl7cmV0dXJuIEpmKHtmYWN0b3J5Om15LG5hbWU6dCxvdmVycmlkZXM6ZnVuY3Rpb24obyl7cmV0dXJue2ZpZWxkQmVoYXZpb3VyczplYyhbbW0oXCJjb3VwbGVkLWlucHV0LWJlaGF2aW91clwiLFtDcihTaSgpLGZ1bmN0aW9uKG4pe21sKG4sbyxlKS5iaW5kKGNkLmdldEN1cnJlbnQpLmVhY2goZnVuY3Rpb24oZSl7bWwobixvLFwibG9ja1wiKS5lYWNoKGZ1bmN0aW9uKHQpe3pnLmlzT24odCkmJm8ub25Mb2NrZWRDaGFuZ2UobixlLHQpfSl9KX0pXSldKX19fSl9ZnVuY3Rpb24gdHcodCl7dmFyIGU9L15cXHMqKFxcZCsoPzpcXC5cXGQrKT8pXFxzKih8Y218bW18aW58cHh8cHR8cGN8ZW18ZXh8Y2h8cmVtfHZ3fHZofHZtaW58dm1heHwlKVxccyokLy5leGVjKHQpO2lmKG51bGw9PT1lKXJldHVybiBObi5lcnJvcih0KTt2YXIgbj1wYXJzZUZsb2F0KGVbMV0pLG89ZVsyXTtyZXR1cm4gTm4udmFsdWUoe3ZhbHVlOm4sdW5pdDpvfSl9ZnVuY3Rpb24gZXcodCxlKXtmdW5jdGlvbiBuKHQpe3JldHVybiBUdChvLHQpfXZhciBvPXtcIlwiOjk2LHB4Ojk2LHB0OjcyLGNtOjIuNTQscGM6MTIsbW06MjUuNCxpbjoxfTtyZXR1cm4gdC51bml0PT09ZT92dC5zb21lKHQudmFsdWUpOm4odC51bml0KSYmbihlKT9vW3QudW5pdF09PT1vW2VdP3Z0LnNvbWUodC52YWx1ZSk6dnQuc29tZSh0LnZhbHVlL29bdC51bml0XSpvW2VdKTp2dC5ub25lKCl9ZnVuY3Rpb24gbncodCl7cmV0dXJuIHZ0Lm5vbmUoKX1mdW5jdGlvbiBvdyhvLGUpe2Z1bmN0aW9uIHQodCl7cmV0dXJuIFhtKHQse3RhZzpcInNwYW5cIixjbGFzc2VzOltcInRveC1pY29uXCIsXCJ0b3gtbG9jay1pY29uX19cIit0XX0sZS5pY29ucyl9ZnVuY3Rpb24gbih0KXtyZXR1cm57ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1mb3JtX19ncm91cFwiXX0sY29tcG9uZW50czp0fX1mdW5jdGlvbiByKG4pe3JldHVybiBteS5wYXJ0cy5maWVsZCh7ZmFjdG9yeTpEeSxpbnB1dENsYXNzZXM6W1widG94LXRleHRmaWVsZFwiXSxpbnB1dEJlaGF2aW91cnM6ZWMoW2dkLmNvbmZpZyh7ZGlzYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gby5kaXNhYmxlZHx8ZS5pc0Rpc2FibGVkKCl9fSkscHYoKSxweS5jb25maWcoe30pLG1tKFwic2l6ZS1pbnB1dC1ldmVudHNcIixbQ3IoYmkoKSxmdW5jdGlvbih0LGUpe2JyKHQsdSx7aXNGaWVsZDE6bn0pfSksQ3Ioa2koKSxmdW5jdGlvbih0LGUpe2JyKHQseXkse25hbWU6by5uYW1lfSl9KV0pXSksc2VsZWN0T25Gb2N1czohMX0pfWZ1bmN0aW9uIGkodCl7cmV0dXJue2RvbTp7dGFnOlwibGFiZWxcIixjbGFzc2VzOltcInRveC1sYWJlbFwiXSxpbm5lckh0bWw6ZS50cmFuc2xhdGUodCl9fX12YXIgbD1udyx1PUlyKFwicmF0aW8tZXZlbnRcIiksYT1VUy5wYXJ0cy5sb2NrKHtkb206e3RhZzpcImJ1dHRvblwiLGNsYXNzZXM6W1widG94LWxvY2tcIixcInRveC1idXR0b25cIixcInRveC1idXR0b24tLW5ha2VkXCIsXCJ0b3gtYnV0dG9uLS1pY29uXCJdLGF0dHJpYnV0ZXM6e3RpdGxlOmUudHJhbnNsYXRlKG8ubGFiZWwuZ2V0T3IoXCJDb25zdHJhaW4gcHJvcG9ydGlvbnNcIikpfX0sY29tcG9uZW50czpbdChcImxvY2tcIiksdChcInVubG9ja1wiKV0sYnV0dG9uQmVoYXZpb3VyczplYyhbZ2QuY29uZmlnKHtkaXNhYmxlZDpmdW5jdGlvbigpe3JldHVybiBvLmRpc2FibGVkfHxlLmlzRGlzYWJsZWQoKX19KSxwdigpLHB5LmNvbmZpZyh7fSldKX0pLGM9VVMucGFydHMuZmllbGQxKG4oW215LnBhcnRzLmxhYmVsKGkoXCJXaWR0aFwiKSkscighMCldKSkscz1VUy5wYXJ0cy5maWVsZDIobihbbXkucGFydHMubGFiZWwoaShcIkhlaWdodFwiKSkscighMSldKSk7cmV0dXJuIFVTLnNrZXRjaCh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1mb3JtX19ncm91cFwiXX0sY29tcG9uZW50czpbe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtZm9ybV9fY29udHJvbHMtaC1zdGFja1wiXX0sY29tcG9uZW50czpbYyxzLG4oW2koXCImbmJzcDtcIiksYV0pXX1dLGZpZWxkMU5hbWU6XCJ3aWR0aFwiLGZpZWxkMk5hbWU6XCJoZWlnaHRcIixsb2NrZWQ6ITAsbWFya2Vyczp7bG9ja0NsYXNzOlwidG94LWxvY2tlZFwifSxvbkxvY2tlZENoYW5nZTpmdW5jdGlvbih0LGksZSl7dHcoRGYuZ2V0VmFsdWUodCkpLmVhY2goZnVuY3Rpb24odCl7bCh0KS5lYWNoKGZ1bmN0aW9uKHQpe3ZhciBlLG4sbyxyO0RmLnNldFZhbHVlKGksKHI9LTEhPT0ocj0oZT10KS52YWx1ZS50b0ZpeGVkKChuPWUudW5pdClpbihvPXtcIlwiOjAscHg6MCxwdDoxLG1tOjEscGM6MixleDoyLGVtOjIsY2g6MixyZW06MixjbTozLGluOjQsXCIlXCI6NH0pP29bbl06MSkpLmluZGV4T2YoXCIuXCIpP3IucmVwbGFjZSgvXFwuPzAqJC8sXCJcIik6cikrZS51bml0KX0pfSl9LGNvdXBsZWRGaWVsZEJlaGF2aW91cnM6ZWMoW2dkLmNvbmZpZyh7ZGlzYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gby5kaXNhYmxlZHx8ZS5pc0Rpc2FibGVkKCl9LG9uRGlzYWJsZWQ6ZnVuY3Rpb24odCl7VVMuZ2V0RmllbGQxKHQpLmJpbmQobXkuZ2V0RmllbGQpLmVhY2goZ2QuZGlzYWJsZSksVVMuZ2V0RmllbGQyKHQpLmJpbmQobXkuZ2V0RmllbGQpLmVhY2goZ2QuZGlzYWJsZSksVVMuZ2V0TG9jayh0KS5lYWNoKGdkLmRpc2FibGUpfSxvbkVuYWJsZWQ6ZnVuY3Rpb24odCl7VVMuZ2V0RmllbGQxKHQpLmJpbmQobXkuZ2V0RmllbGQpLmVhY2goZ2QuZW5hYmxlKSxVUy5nZXRGaWVsZDIodCkuYmluZChteS5nZXRGaWVsZCkuZWFjaChnZC5lbmFibGUpLFVTLmdldExvY2sodCkuZWFjaChnZC5lbmFibGUpfX0pLHB2KCksbW0oXCJzaXplLWlucHV0LWV2ZW50czJcIixbQ3IodSxmdW5jdGlvbih0LGUpe3ZhciBuLG8scixpPWUuZXZlbnQuaXNGaWVsZDEsdT1pP1VTLmdldEZpZWxkMSh0KTpVUy5nZXRGaWVsZDIodCksYT1pP1VTLmdldEZpZWxkMih0KTpVUy5nZXRGaWVsZDEodCksYz11Lm1hcChEZi5nZXRWYWx1ZSkuZ2V0T3IoXCJcIikscz1hLm1hcChEZi5nZXRWYWx1ZSkuZ2V0T3IoXCJcIik7bj1zLG89dHcoYykudG9PcHRpb25hbCgpLHI9dHcobikudG9PcHRpb25hbCgpLGw9RXQobyxyLGZ1bmN0aW9uKHQsbyl7cmV0dXJuIGV3KHQsby51bml0KS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIG8udmFsdWUvdH0pLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gZT10LG49by51bml0LGZ1bmN0aW9uKHQpe3JldHVybiBldyh0LG4pLm1hcChmdW5jdGlvbih0KXtyZXR1cm57dmFsdWU6dCplLHVuaXQ6bn19KX07dmFyIGUsbn0pLmdldE9yKG53KX0pLmdldE9yKG53KX0pXSldKX0pfWZ1bmN0aW9uIHJ3KGYsYyl7ZnVuY3Rpb24gdCh0LGUsbixvKXtyZXR1cm4gSG0oSjAoe25hbWU6dCx0ZXh0OnQsZGlzYWJsZWQ6bixwcmltYXJ5Om8saWNvbjp2dC5ub25lKCksYm9yZGVybGVzczohMX0sZSxjKSl9ZnVuY3Rpb24gZSh0LGUsbixvKXtyZXR1cm4gSG0ocTAoe25hbWU6dCxpY29uOnZ0LnNvbWUodCksdG9vbHRpcDp2dC5zb21lKGUpLGRpc2FibGVkOm8scHJpbWFyeTohMSxib3JkZXJsZXNzOiExfSxuLGMpKX1mdW5jdGlvbiBkKHQsbil7dC5tYXAoZnVuY3Rpb24odCl7dmFyIGU9dC5nZXQobik7ZS5oYXNDb25maWd1cmVkKGdkKSYmZ2QuZGlzYWJsZShlKX0pfWZ1bmN0aW9uIG0odCxuKXt0Lm1hcChmdW5jdGlvbih0KXt2YXIgZT10LmdldChuKTtlLmhhc0NvbmZpZ3VyZWQoZ2QpJiZnZC5lbmFibGUoZSl9KX1mdW5jdGlvbiByKHQsZSxuKXticih0LGUsbil9ZnVuY3Rpb24gaSh0KXtyZXR1cm4gdnIodCxZUy5kaXNhYmxlKCkpLDB9ZnVuY3Rpb24gdSh0KXtyZXR1cm4gdnIodCxZUy5lbmFibGUoKSksMH1mdW5jdGlvbiBnKHQsZSl7aSh0KSxyKHQsalMudHJhbnNmb3JtKCkse3RyYW5zZm9ybTplfSksdSh0KX1mdW5jdGlvbiBuKHQpe3JldHVybiBmdW5jdGlvbigpe3EuZ2V0T3B0KHQpLmVhY2goZnVuY3Rpb24odCl7Umcuc2V0KHQsW1ldKX0pfX1mdW5jdGlvbiBzKHQsZSl7aSh0KSxyKHQsalMudHJhbnNmb3JtQXBwbHkoKSx7dHJhbnNmb3JtOmUsc3dhcDpuKHQpfSksdSh0KX1mdW5jdGlvbiBwKCl7cmV0dXJuIHQoXCJCYWNrXCIsZnVuY3Rpb24odCl7cmV0dXJuIHIodCxqUy5iYWNrKCkse3N3YXA6bih0KX0pfSwhMSwhMSl9ZnVuY3Rpb24gbygpe3JldHVybiBIbSh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1zcGFjZXJcIl19LGJlaGF2aW91cnM6ZWMoW2dkLmNvbmZpZyh7fSldKX0pfWZ1bmN0aW9uIGgoKXtyZXR1cm4gdChcIkFwcGx5XCIsZnVuY3Rpb24odCl7cmV0dXJuIHIodCxqUy5hcHBseSgpLHtzd2FwOm4odCl9KX0sITAsITApfWZ1bmN0aW9uIHYoZSxuKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIGUodCxuKX19ZnVuY3Rpb24gYSh0LGUpe3ZhciBuLG89ZTtpKG49dCkscihuLGpTLnRlbXBUcmFuc2Zvcm0oKSx7dHJhbnNmb3JtOm99KSx1KG4pfWZ1bmN0aW9uIGIodCxlLG4sbyxyKXt2YXIgaT0kdy5wYXJ0cy5sYWJlbCh7ZG9tOnt0YWc6XCJsYWJlbFwiLGNsYXNzZXM6W1widG94LWxhYmVsXCJdLGlubmVySHRtbDpjLnRyYW5zbGF0ZSh0KX19KSx1PSR3LnBhcnRzLnNwZWN0cnVtKHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LXNsaWRlcl9fcmFpbFwiXSxhdHRyaWJ1dGVzOntyb2xlOlwicHJlc2VudGF0aW9uXCJ9fX0pLGE9JHcucGFydHMudGh1bWIoe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtc2xpZGVyX19oYW5kbGVcIl0sYXR0cmlidXRlczp7cm9sZTpcInByZXNlbnRhdGlvblwifX19KTtyZXR1cm4gSG0oJHcuc2tldGNoKHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LXNsaWRlclwiXSxhdHRyaWJ1dGVzOntyb2xlOlwicHJlc2VudGF0aW9uXCJ9fSxtb2RlbDp7bW9kZTpcInhcIixtaW5YOm4sbWF4WDpyLGdldEluaXRpYWxWYWx1ZTpydCh7eDpvfSl9LGNvbXBvbmVudHM6W2ksdSxhXSxzbGlkZXJCZWhhdmlvdXJzOmVjKFtWZy5jb25maWcoe30pXSksb25DaG9vc2U6ZX0pKX1mdW5jdGlvbiBsKHQsZSxuLG8scil7dmFyIGksdSxhLGMscyxsLGY9KGk9dCx1PWUsYT1uLGM9byxzPXIsW3AoKSwobD11LGIoaSxmdW5jdGlvbih0LGUsbil7Zyh0LHYobCxuLngvMTAwKSl9LGEsYyxzKSksaCgpXSk7cmV0dXJuIGx5LnNrZXRjaCh7ZG9tOncsY29tcG9uZW50czpmLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5hc1NwZWMoKX0pLGNvbnRhaW5lckJlaGF2aW91cnM6ZWMoW21tKFwiaW1hZ2UtdG9vbHMtZmlsdGVyLXBhbmVsLWJ1dHRvbnMtZXZlbnRzXCIsW0NyKFlTLmRpc2FibGUoKSxmdW5jdGlvbih0LGUpe2QoZix0KX0pLENyKFlTLmVuYWJsZSgpLGZ1bmN0aW9uKHQsZSl7bShmLHQpfSldKV0pfSl9ZnVuY3Rpb24geSh0KXtyZXR1cm4gYih0LGZ1bmN0aW9uKGwsdCxlKXt2YXIgbj1ILmdldE9wdChsKSxvPXouZ2V0T3B0KGwpLHI9TC5nZXRPcHQobCk7bi5lYWNoKGZ1bmN0aW9uKHMpe28uZWFjaChmdW5jdGlvbihjKXtyLmVhY2goZnVuY3Rpb24odCl7dmFyIG8scixpLGU9RGYuZ2V0VmFsdWUocykueC8xMDAsbj1EZi5nZXRWYWx1ZSh0KS54LzEwMCx1PURmLmdldFZhbHVlKGMpLngvMTAwLGE9KG89ZSxyPW4saT11LGZ1bmN0aW9uKHQpe3JldHVybiBUMCh0LChlPXIsbj1pLF8wKE8wKCksW0MwKG8sMCwyKSwwLDAsMCwwLDAsQzAoZSwwLDIpLDAsMCwwLDAsMCxDMChuLDAsMiksMCwwLDAsMCwwLDEsMCwwLDAsMCwwLDFdKSkpO3ZhciBlLG59KTtnKGwsYSl9KX0pfSl9LDAsMTAwLDIwMCl9ZnVuY3Rpb24geChlLG4sbyl7cmV0dXJuIGZ1bmN0aW9uKHQpe3IodCxqUy5zd2FwKCkse3RyYW5zZm9ybTpuLHN3YXA6ZnVuY3Rpb24oKXtxLmdldE9wdCh0KS5lYWNoKGZ1bmN0aW9uKHQpe1JnLnNldCh0LFtlXSksbyh0KX0pfX0pfX12YXIgdz17dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtaW1hZ2UtdG9vbHNfX3Rvb2xiYXJcIixcInRveC1pbWFnZS10b29scy1lZGl0LXBhbmVsXCJdfSxTPXN0LGs9W3AoKSxvKCksdChcIkFwcGx5XCIsZnVuY3Rpb24odCl7cyh0LGZ1bmN0aW9uKHQpe3ZhciBlLG4sbyxyLGksdSxhLGMscyxsPWYuZ2V0UmVjdCgpO3JldHVybiBlPWwueCxuPWwueSxvPWwudyxyPWwuaCx1PWUsYT1uLGM9byxzPXIsKGk9dCkudG9DYW52YXMoKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBGUyh0LGkuZ2V0VHlwZSgpLHUsYSxjLHMpfSl9KSxmLmhpZGVDcm9wKCl9LCExLCEwKV0sQz1seS5za2V0Y2goe2RvbTp3LGNvbXBvbmVudHM6ay5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuYXNTcGVjKCl9KSxjb250YWluZXJCZWhhdmlvdXJzOmVjKFttbShcImltYWdlLXRvb2xzLWNyb3AtYnV0dG9ucy1ldmVudHNcIixbQ3IoWVMuZGlzYWJsZSgpLGZ1bmN0aW9uKHQsZSl7ZChrLHQpfSksQ3IoWVMuZW5hYmxlKCksZnVuY3Rpb24odCxlKXttKGssdCl9KV0pXSl9KSxPPUhtKG93KHtuYW1lOlwic2l6ZVwiLGxhYmVsOnZ0Lm5vbmUoKSxjb25zdHJhaW46ITAsZGlzYWJsZWQ6ITF9LGMpKSxfPVtwKCksbygpLE8sbygpLHQoXCJBcHBseVwiLGZ1bmN0aW9uKGEpe08uZ2V0T3B0KGEpLmVhY2goZnVuY3Rpb24odCl7dmFyIHIsaSxlPURmLmdldFZhbHVlKHQpLG49cGFyc2VJbnQoZS53aWR0aCwxMCksbz1wYXJzZUludChlLmhlaWdodCwxMCksdT0ocj1uLGk9byxmdW5jdGlvbih0KXtyZXR1cm4gbj1yLG89aSwoZT10KS50b0NhbnZhcygpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIERTKHQsbixvKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBTMCh0LGUuZ2V0VHlwZSgpKX0pfSk7dmFyIGUsbixvfSk7cyhhLHUpfSl9LCExLCEwKV0sVD1seS5za2V0Y2goe2RvbTp3LGNvbXBvbmVudHM6Xy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuYXNTcGVjKCl9KSxjb250YWluZXJCZWhhdmlvdXJzOmVjKFttbShcImltYWdlLXRvb2xzLXJlc2l6ZS1idXR0b25zLWV2ZW50c1wiLFtDcihZUy5kaXNhYmxlKCksZnVuY3Rpb24odCxlKXtkKF8sdCl9KSxDcihZUy5lbmFibGUoKSxmdW5jdGlvbih0LGUpe20oXyx0KX0pXSldKX0pLEU9dihSMCxcImhcIiksRD12KFIwLFwidlwiKSxBPXYoTjAsLTkwKSxCPXYoTjAsOTApLE09W3AoKSxvKCksZShcImZsaXAtaG9yaXpvbnRhbGx5XCIsXCJGbGlwIGhvcml6b250YWxseVwiLGZ1bmN0aW9uKHQpe2EodCxFKX0sITEpLGUoXCJmbGlwLXZlcnRpY2FsbHlcIixcIkZsaXAgdmVydGljYWxseVwiLGZ1bmN0aW9uKHQpe2EodCxEKX0sITEpLGUoXCJyb3RhdGUtbGVmdFwiLFwiUm90YXRlIGNvdW50ZXJjbG9ja3dpc2VcIixmdW5jdGlvbih0KXthKHQsQSl9LCExKSxlKFwicm90YXRlLXJpZ2h0XCIsXCJSb3RhdGUgY2xvY2t3aXNlXCIsZnVuY3Rpb24odCl7YSh0LEIpfSwhMSksbygpLGgoKV0sRj1seS5za2V0Y2goe2RvbTp3LGNvbXBvbmVudHM6TS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuYXNTcGVjKCl9KSxjb250YWluZXJCZWhhdmlvdXJzOmVjKFttbShcImltYWdlLXRvb2xzLWZsaXByb3RhdGUtYnV0dG9ucy1ldmVudHNcIixbQ3IoWVMuZGlzYWJsZSgpLGZ1bmN0aW9uKHQsZSl7ZChNLHQpfSksQ3IoWVMuZW5hYmxlKCksZnVuY3Rpb24odCxlKXttKE0sdCl9KV0pXSl9KSxJPVtwKCksbygpLGgoKV0sUj1seS5za2V0Y2goe2RvbTp3LGNvbXBvbmVudHM6SS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuYXNTcGVjKCl9KX0pLE49bChcIkJyaWdodG5lc3NcIixGMCwtMTAwLDAsMTAwKSxQPWwoXCJDb250cmFzdFwiLEkwLC0xMDAsMCwxMDApLFY9bChcIkdhbW1hXCIsTTAsLTEwMCwwLDEwMCksSD15KFwiUlwiKSxMPXkoXCJHXCIpLHo9eShcIkJcIiksVT1bcCgpLEgsTCx6LGgoKV0saj1seS5za2V0Y2goe2RvbTp3LGNvbXBvbmVudHM6VS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuYXNTcGVjKCl9KX0pLFc9dnQuc29tZShCMCksRz12dC5zb21lKEEwKSxYPVtlKFwiY3JvcFwiLFwiQ3JvcFwiLHgoQyx2dC5ub25lKCksZnVuY3Rpb24odCl7Zi5zaG93Q3JvcCgpfSksITEpLGUoXCJyZXNpemVcIixcIlJlc2l6ZVwiLHgoVCx2dC5ub25lKCksZnVuY3Rpb24odCl7Ty5nZXRPcHQodCkuZWFjaChmdW5jdGlvbih0KXt2YXIgZT1mLmdldE1lYXN1cmVtZW50cygpLG49ZS53aWR0aCxvPWUuaGVpZ2h0O0RmLnNldFZhbHVlKHQse3dpZHRoOm4saGVpZ2h0Om99KX0pfSksITEpLGUoXCJvcmllbnRhdGlvblwiLFwiT3JpZW50YXRpb25cIix4KEYsdnQubm9uZSgpLFMpLCExKSxlKFwiYnJpZ2h0bmVzc1wiLFwiQnJpZ2h0bmVzc1wiLHgoTix2dC5ub25lKCksUyksITEpLGUoXCJzaGFycGVuXCIsXCJTaGFycGVuXCIseChSLFcsUyksITEpLGUoXCJjb250cmFzdFwiLFwiQ29udHJhc3RcIix4KFAsdnQubm9uZSgpLFMpLCExKSxlKFwiY29sb3ItbGV2ZWxzXCIsXCJDb2xvciBsZXZlbHNcIix4KGosdnQubm9uZSgpLFMpLCExKSxlKFwiZ2FtbWFcIixcIkdhbW1hXCIseChWLHZ0Lm5vbmUoKSxTKSwhMSksZShcImludmVydFwiLFwiSW52ZXJ0XCIseChSLEcsUyksITEpXSxZPWx5LnNrZXRjaCh7ZG9tOncsY29tcG9uZW50czpYLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5hc1NwZWMoKX0pfSkscT1IbShseS5za2V0Y2goe2RvbTp7dGFnOlwiZGl2XCJ9LGNvbXBvbmVudHM6W1ldLGNvbnRhaW5lckJlaGF2aW91cnM6ZWMoW1JnLmNvbmZpZyh7fSldKX0pKTtyZXR1cm57bWVtQ29udGFpbmVyOnEsZ2V0QXBwbHlCdXR0b246ZnVuY3Rpb24odCl7cmV0dXJuIHEuZ2V0T3B0KHQpLm1hcChmdW5jdGlvbih0KXt2YXIgZT10LmNvbXBvbmVudHMoKVswXTtyZXR1cm4gZS5jb21wb25lbnRzKClbZS5jb21wb25lbnRzKCkubGVuZ3RoLTFdfSl9fX1mdW5jdGlvbiBpdyh0KXtpZihrKHQuY2hhbmdlZFRvdWNoZXMpKWZvcih2YXIgZT1cInNjcmVlblggc2NyZWVuWSBwYWdlWCBwYWdlWSBjbGllbnRYIGNsaWVudFlcIi5zcGxpdChcIiBcIiksbj0wO248ZS5sZW5ndGg7bisrKXRbZVtuXV09dC5jaGFuZ2VkVG91Y2hlc1swXVtlW25dXX0oSHk9Vnk9Vnl8fHt9KVtIeS5IaWdobGlnaHRGaXJzdD0wXT1cIkhpZ2hsaWdodEZpcnN0XCIsSHlbSHkuSGlnaGxpZ2h0Tm9uZT0xXT1cIkhpZ2hsaWdodE5vbmVcIjtmdW5jdGlvbiB1dyhvLHQpe3JldHVybnt1aWQ6by51aWQsZG9tOm8uZG9tLGNvbXBvbmVudHM6dCxiZWhhdmlvdXJzOmVsKG8uZm9ybUJlaGF2aW91cnMsW0RmLmNvbmZpZyh7c3RvcmU6e21vZGU6XCJtYW51YWxcIixnZXRWYWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gZHQoaGwodCxvKSxmdW5jdGlvbih0LG8pe3JldHVybiB0KCkuYmluZChmdW5jdGlvbih0KXt2YXIgZT1jZC5nZXRDdXJyZW50KHQpLG49bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgYSBjdXJyZW50IGNvbXBvbmVudCB0byBleHRyYWN0IHRoZSB2YWx1ZSBmcm9tIGZvciBmb3JtIHBhcnQgJ1wiK28rXCInOiBcIitGcih0LmVsZW1lbnQpKTtyZXR1cm4gZS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIE5uLmVycm9yKG4pfSxObi52YWx1ZSl9KS5tYXAoRGYuZ2V0VmFsdWUpfSl9LHNldFZhbHVlOmZ1bmN0aW9uKG4sdCl7Sih0LGZ1bmN0aW9uKGUsdCl7bWwobixvLHQpLmVhY2goZnVuY3Rpb24odCl7Y2QuZ2V0Q3VycmVudCh0KS5lYWNoKGZ1bmN0aW9uKHQpe0RmLnNldFZhbHVlKHQsZSl9KX0pfSl9fX0pXSksYXBpczp7Z2V0RmllbGQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gbWwodCxvLGUpLmJpbmQoY2QuZ2V0Q3VycmVudCl9fX19ZnVuY3Rpb24gYXcoKXtyZXR1cm4gY2QuY29uZmlnKHtmaW5kOnZ0LnNvbWV9KX1mdW5jdGlvbiBjdyh0KXtyZXR1cm4gZT1CcixuPU1yLHMwKHQsZnVuY3Rpb24odCl7cmV0dXJuIGUodC5lbGVtZW50KX0sZnVuY3Rpb24odCxlKXtyZXR1cm4gbih0LmVsZW1lbnQsZSl9KTt2YXIgZSxufXZhciBzdyxsdyxmdyxkdyxtdz1mdW5jdGlvbihlLHQpe3JldHVybiBlLmdldFN5c3RlbSgpLmdldEJ5VWlkKHQudWlkK1wiLVwiK1F5KCkpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gTm4udmFsdWUodCl9fSkuZ2V0T3JUaHVuayhmdW5jdGlvbigpe3JldHVybiB0LmxhenlTaW5rLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gTm4uZXJyb3IobmV3IEVycm9yKFwiTm8gaW50ZXJuYWwgc2luayBpcyBzcGVjaWZpZWQsIG5vciBjb3VsZCBhbiBleHRlcm5hbCBzaW5rIGJlIGZvdW5kXCIpKX19LGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0KGUpfX0pfSl9LGd3PXJ0KFttbyhcImRvbVwiKSxtbyhcImZldGNoXCIpLEp1KFwib25PcGVuXCIpLCR1KFwib25FeGVjdXRlXCIpLEVvKFwiZ2V0SG90c3BvdFwiLHZ0LnNvbWUpLEVvKFwiZ2V0QW5jaG9yT3ZlcnJpZGVzXCIscnQoe30pKSxVYygpLFpzKFwiZHJvcGRvd25CZWhhdmlvdXJzXCIsW3pnLCR5LEZnLFZnXSksbW8oXCJ0b2dnbGVDbGFzc1wiKSxFbyhcImV2ZW50T3JkZXJcIix7fSksd28oXCJsYXp5U2lua1wiKSxFbyhcIm1hdGNoV2lkdGhcIiwhMSksRW8oXCJ1c2VNaW5XaWR0aFwiLCExKSx3byhcInJvbGVcIildLmNvbmNhdCh1eCgpKSkscHc9cnQoWyRmKHtzY2hlbWE6W1l1KCldLG5hbWU6XCJtZW51XCIsZGVmYXVsdHM6ZnVuY3Rpb24odCl7cmV0dXJue29uRXhlY3V0ZTp0Lm9uRXhlY3V0ZX19fSksWnkoKV0pLGh3PUNsKHtuYW1lOlwiRHJvcGRvd25cIixjb25maWdGaWVsZHM6Z3coKSxwYXJ0RmllbGRzOnB3KCksZmFjdG9yeTpmdW5jdGlvbihlLHQsbixvKXtmdW5jdGlvbiByKHQpe2JmLmdldFN0YXRlKHQpLmVhY2goZnVuY3Rpb24odCl7aXAuaGlnaGxpZ2h0UHJpbWFyeSh0KX0pfWZ1bmN0aW9uIGkodCxlKXtyZXR1cm4geXIodCksdnQuc29tZSghMCl9dmFyIHUsYT17ZXhwYW5kOmZ1bmN0aW9uKHQpe3pnLmlzT24odCl8fG54KGUsaCx0LG8sc3QsVnkuSGlnaGxpZ2h0Tm9uZSkuZ2V0KHN0KX0sb3BlbjpmdW5jdGlvbih0KXt6Zy5pc09uKHQpfHxueChlLGgsdCxvLHN0LFZ5LkhpZ2hsaWdodEZpcnN0KS5nZXQoc3QpfSxpc09wZW46emcuaXNPbixjbG9zZTpmdW5jdGlvbih0KXt6Zy5pc09uKHQpJiZueChlLGgsdCxvLHN0LFZ5LkhpZ2hsaWdodEZpcnN0KS5nZXQoc3QpfSxyZXBvc2l0aW9uTWVudXM6ZnVuY3Rpb24odCl7emcuaXNPbih0KSYmaXgodCl9fTtyZXR1cm57dWlkOmUudWlkLGRvbTplLmRvbSxjb21wb25lbnRzOnQsYmVoYXZpb3VyczplbChlLmRyb3Bkb3duQmVoYXZpb3VycyxbemcuY29uZmlnKHt0b2dnbGVDbGFzczplLnRvZ2dsZUNsYXNzLGFyaWE6e21vZGU6XCJleHBhbmRlZFwifX0pLCR5LmNvbmZpZyh7b3RoZXJzOntzYW5kYm94OmZ1bmN0aW9uKHQpe3JldHVybiByeChlLHQse29uT3BlbjpmdW5jdGlvbigpe3JldHVybiB6Zy5vbih0KX0sb25DbG9zZTpmdW5jdGlvbigpe3JldHVybiB6Zy5vZmYodCl9fSl9fX0pLEZnLmNvbmZpZyh7bW9kZTpcInNwZWNpYWxcIixvblNwYWNlOmksb25FbnRlcjppLG9uRG93bjpmdW5jdGlvbih0LGUpe3JldHVybiBody5pc09wZW4odCk/cigkeS5nZXRDb3VwbGVkKHQsXCJzYW5kYm94XCIpKTpody5vcGVuKHQpLHZ0LnNvbWUoITApfSxvbkVzY2FwZTpmdW5jdGlvbih0LGUpe3JldHVybiBody5pc09wZW4odCk/KGh3LmNsb3NlKHQpLHZ0LnNvbWUoITApKTp2dC5ub25lKCl9fSksVmcuY29uZmlnKHt9KV0pLGV2ZW50czpTbSh2dC5zb21lKGZ1bmN0aW9uKHQpe254KGUsaCx0LG8scixWeS5IaWdobGlnaHRGaXJzdCkuZ2V0KHN0KX0pKSxldmVudE9yZGVyOmx0KGx0KHt9LGUuZXZlbnRPcmRlciksKCh1PXt9KVtJaSgpXT1bXCJkaXNhYmxpbmdcIixcInRvZ2dsaW5nXCIsXCJhbGxveS5iYXNlLmJlaGF2aW91clwiXSx1KSksYXBpczphLGRvbU1vZGlmaWNhdGlvbjp7YXR0cmlidXRlczpsdChsdCh7XCJhcmlhLWhhc3BvcHVwXCI6XCJ0cnVlXCJ9LGUucm9sZS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJue319LGZ1bmN0aW9uKHQpe3JldHVybntyb2xlOnR9fSkpLFwiYnV0dG9uXCI9PT1lLmRvbS50YWc/e3R5cGU6dHQoZS5kb20sXCJhdHRyaWJ1dGVzXCIpLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIHR0KHQsXCJ0eXBlXCIpfSkuZ2V0T3IoXCJidXR0b25cIil9Ont9KX19fSxhcGlzOntvcGVuOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQub3BlbihlKX0sZXhwYW5kOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuZXhwYW5kKGUpfSxjbG9zZTpmdW5jdGlvbih0LGUpe3JldHVybiB0LmNsb3NlKGUpfSxpc09wZW46ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5pc09wZW4oZSl9LHJlcG9zaXRpb25NZW51czpmdW5jdGlvbih0LGUpe3JldHVybiB0LnJlcG9zaXRpb25NZW51cyhlKX19fSksdnc9eGEoe2ZpZWxkczpbXSxuYW1lOlwidW5zZWxlY3RpbmdcIixhY3RpdmU6T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsZXZlbnRzOmZ1bmN0aW9uKCl7cmV0dXJuIG51KFtTcihFaSgpLEQpXSl9LGV4aGliaXQ6ZnVuY3Rpb24oKXtyZXR1cm4genIoe3N0eWxlczp7XCItd2Via2l0LXVzZXItc2VsZWN0XCI6XCJub25lXCIsXCJ1c2VyLXNlbGVjdFwiOlwibm9uZVwiLFwiLW1zLXVzZXItc2VsZWN0XCI6XCJub25lXCIsXCItbW96LXVzZXItc2VsZWN0XCI6XCItbW96LW5vbmVcIn0sYXR0cmlidXRlczp7dW5zZWxlY3RhYmxlOlwib25cIn19KX19KX0pLGJ3PUlyKFwiY29sb3ItaW5wdXQtY2hhbmdlXCIpLHl3PUlyKFwiY29sb3Itc3dhdGNoLWNoYW5nZVwiKSx4dz1JcihcImNvbG9yLXBpY2tlci1jYW5jZWxcIiksd3c9UWYoe3NjaGVtYTpbbW8oXCJkb21cIildLG5hbWU6XCJsYWJlbFwifSksU3c9YXgoXCJ0b3AtbGVmdFwiKSxrdz1heChcInRvcFwiKSxDdz1heChcInRvcC1yaWdodFwiKSxPdz1heChcInJpZ2h0XCIpLF93PWF4KFwiYm90dG9tLXJpZ2h0XCIpLFR3PWF4KFwiYm90dG9tXCIpLEV3PWF4KFwiYm90dG9tLWxlZnRcIiksRHc9W3d3LGF4KFwibGVmdFwiKSxPdyxrdyxUdyxTdyxDdyxFdyxfdyxKZih7bmFtZTpcInRodW1iXCIsZGVmYXVsdHM6cnQoe2RvbTp7c3R5bGVzOntwb3NpdGlvbjpcImFic29sdXRlXCJ9fX0pLG92ZXJyaWRlczpmdW5jdGlvbih0KXtyZXR1cm57ZXZlbnRzOm51KFtUcihzaSgpLHQsXCJzcGVjdHJ1bVwiKSxUcihsaSgpLHQsXCJzcGVjdHJ1bVwiKSxUcihmaSgpLHQsXCJzcGVjdHJ1bVwiKSxUcihtaSgpLHQsXCJzcGVjdHJ1bVwiKSxUcihnaSgpLHQsXCJzcGVjdHJ1bVwiKSxUcihoaSgpLHQsXCJzcGVjdHJ1bVwiKV0pfX19KSxKZih7c2NoZW1hOltjcihcIm1vdXNlSXNEb3duXCIsZnVuY3Rpb24oKXtyZXR1cm4gUG8oITEpfSldLG5hbWU6XCJzcGVjdHJ1bVwiLG92ZXJyaWRlczpmdW5jdGlvbihuKXtmdW5jdGlvbiBvKGUsdCl7cmV0dXJuIHIuZ2V0VmFsdWVGcm9tRXZlbnQodCkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiByLnNldFZhbHVlRnJvbShlLG4sdCl9KX12YXIgcj1uLm1vZGVsLm1hbmFnZXI7cmV0dXJue2JlaGF2aW91cnM6ZWMoW0ZnLmNvbmZpZyh7bW9kZTpcInNwZWNpYWxcIixvbkxlZnQ6ZnVuY3Rpb24odCl7cmV0dXJuIHIub25MZWZ0KHQsbil9LG9uUmlnaHQ6ZnVuY3Rpb24odCl7cmV0dXJuIHIub25SaWdodCh0LG4pfSxvblVwOmZ1bmN0aW9uKHQpe3JldHVybiByLm9uVXAodCxuKX0sb25Eb3duOmZ1bmN0aW9uKHQpe3JldHVybiByLm9uRG93bih0LG4pfX0pLFZnLmNvbmZpZyh7fSldKSxldmVudHM6bnUoW0NyKHNpKCksbyksQ3IobGkoKSxvKSxDcihtaSgpLG8pLENyKGdpKCksZnVuY3Rpb24odCxlKXtuLm1vdXNlSXNEb3duLmdldCgpJiZvKHQsZSl9KV0pfX19KV0sQXc9cnQoXCJzbGlkZXIuY2hhbmdlLnZhbHVlXCIpLEJ3PVwibGVmdFwiLE13PUp4KC0xKSxGdz1KeCgxKSxJdz12dC5ub25lLFJ3PXZ0Lm5vbmUsTnc9e1widG9wLWxlZnRcIjp2dC5ub25lKCksdG9wOnZ0Lm5vbmUoKSxcInRvcC1yaWdodFwiOnZ0Lm5vbmUoKSxyaWdodDp2dC5zb21lKGZ1bmN0aW9uKHQsZSl7RngodCx7eDpweChlKX0pfSksXCJib3R0b20tcmlnaHRcIjp2dC5ub25lKCksYm90dG9tOnZ0Lm5vbmUoKSxcImJvdHRvbS1sZWZ0XCI6dnQubm9uZSgpLGxlZnQ6dnQuc29tZShmdW5jdGlvbih0LGUpe0Z4KHQse3g6ZngoZSl9KX0pfSxQdz1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxzZXRWYWx1ZUZyb206ZnVuY3Rpb24odCxlLG4pe3ZhciBvPUt4KHQsZSxuKTtyZXR1cm4gcXgodCx7eDpvfSksb30sc2V0VG9NaW46ZnVuY3Rpb24odCxlKXtxeCh0LHt4OnN4KGUpfSl9LHNldFRvTWF4OmZ1bmN0aW9uKHQsZSl7cXgodCx7eDpteChlKX0pfSxmaW5kVmFsdWVPZk9mZnNldDpLeCxnZXRWYWx1ZUZyb21FdmVudDpmdW5jdGlvbih0KXtyZXR1cm4gY3godCkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LmxlZnR9KX0sZmluZFBvc2l0aW9uT2ZWYWx1ZTokeCxzZXRQb3NpdGlvbkZyb21WYWx1ZTpmdW5jdGlvbih0LGUsbixvKXt2YXIgcj1CeChuKSxpPSR4KHQsby5nZXRTcGVjdHJ1bSh0KSxyLngsby5nZXRMZWZ0RWRnZSh0KSxvLmdldFJpZ2h0RWRnZSh0KSxuKSx1PUNlKGUuZWxlbWVudCkvMjtmZShlLmVsZW1lbnQsXCJsZWZ0XCIsaS11K1wicHhcIil9LG9uTGVmdDpNdyxvblJpZ2h0OkZ3LG9uVXA6SXcsb25Eb3duOlJ3LGVkZ2VBY3Rpb25zOk53fSksVnc9dnQubm9uZSxIdz12dC5ub25lLEx3PXQwKC0xKSx6dz10MCgxKSxVdz17XCJ0b3AtbGVmdFwiOnZ0Lm5vbmUoKSx0b3A6dnQuc29tZShmdW5jdGlvbih0LGUpe0Z4KHQse3k6ZHgoZSl9KX0pLFwidG9wLXJpZ2h0XCI6dnQubm9uZSgpLHJpZ2h0OnZ0Lm5vbmUoKSxcImJvdHRvbS1yaWdodFwiOnZ0Lm5vbmUoKSxib3R0b206dnQuc29tZShmdW5jdGlvbih0LGUpe0Z4KHQse3k6aHgoZSl9KX0pLFwiYm90dG9tLWxlZnRcIjp2dC5ub25lKCksbGVmdDp2dC5ub25lKCl9LGp3PU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLHNldFZhbHVlRnJvbTpmdW5jdGlvbih0LGUsbil7dmFyIG89WngodCxlLG4pO3JldHVybiBReCh0LHt5Om99KSxvfSxzZXRUb01pbjpmdW5jdGlvbih0LGUpe1F4KHQse3k6bHgoZSl9KX0sc2V0VG9NYXg6ZnVuY3Rpb24odCxlKXtReCh0LHt5Omd4KGUpfSl9LGZpbmRWYWx1ZU9mT2Zmc2V0Olp4LGdldFZhbHVlRnJvbUV2ZW50OmZ1bmN0aW9uKHQpe3JldHVybiBjeCh0KS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQudG9wfSl9LGZpbmRQb3NpdGlvbk9mVmFsdWU6ZTAsc2V0UG9zaXRpb25Gcm9tVmFsdWU6ZnVuY3Rpb24odCxlLG4sbyl7dmFyIHI9QngobiksaT1lMCh0LG8uZ2V0U3BlY3RydW0odCksci55LG8uZ2V0VG9wRWRnZSh0KSxvLmdldEJvdHRvbUVkZ2UodCksbiksdT14ZShlLmVsZW1lbnQpLzI7ZmUoZS5lbGVtZW50LFwidG9wXCIsaS11K1wicHhcIil9LG9uTGVmdDpWdyxvblJpZ2h0Okh3LG9uVXA6THcsb25Eb3duOnp3LGVkZ2VBY3Rpb25zOlV3fSksV3c9Y3gsR3c9cjAoLTEsITEpLFh3PXIwKDEsITEpLFl3PXIwKC0xLCEwKSxxdz1yMCgxLCEwKSxLdz17XCJ0b3AtbGVmdFwiOnZ0LnNvbWUoZnVuY3Rpb24odCxlKXtGeCh0LE14KGZ4KGUpLGR4KGUpKSl9KSx0b3A6dnQuc29tZShmdW5jdGlvbih0LGUpe0Z4KHQsTXgoeHgoZSksZHgoZSkpKX0pLFwidG9wLXJpZ2h0XCI6dnQuc29tZShmdW5jdGlvbih0LGUpe0Z4KHQsTXgocHgoZSksZHgoZSkpKX0pLHJpZ2h0OnZ0LnNvbWUoZnVuY3Rpb24odCxlKXtGeCh0LE14KHB4KGUpLHd4KGUpKSl9KSxcImJvdHRvbS1yaWdodFwiOnZ0LnNvbWUoZnVuY3Rpb24odCxlKXtGeCh0LE14KHB4KGUpLGh4KGUpKSl9KSxib3R0b206dnQuc29tZShmdW5jdGlvbih0LGUpe0Z4KHQsTXgoeHgoZSksaHgoZSkpKX0pLFwiYm90dG9tLWxlZnRcIjp2dC5zb21lKGZ1bmN0aW9uKHQsZSl7RngodCxNeChmeChlKSxoeChlKSkpfSksbGVmdDp2dC5zb21lKGZ1bmN0aW9uKHQsZSl7RngodCxNeChmeChlKSx3eChlKSkpfSl9LEp3PU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLHNldFZhbHVlRnJvbTpmdW5jdGlvbih0LGUsbil7dmFyIG89bzAoS3godCxlLG4ubGVmdCksWngodCxlLG4udG9wKSk7cmV0dXJuIG4wKHQsbyksb30sc2V0VG9NaW46ZnVuY3Rpb24odCxlKXtuMCh0LG8wKHN4KGUpLGx4KGUpKSl9LHNldFRvTWF4OmZ1bmN0aW9uKHQsZSl7bjAodCxvMChteChlKSxneChlKSkpfSxnZXRWYWx1ZUZyb21FdmVudDpXdyxzZXRQb3NpdGlvbkZyb21WYWx1ZTpmdW5jdGlvbih0LGUsbixvKXt2YXIgcj1CeChuKSxpPSR4KHQsby5nZXRTcGVjdHJ1bSh0KSxyLngsby5nZXRMZWZ0RWRnZSh0KSxvLmdldFJpZ2h0RWRnZSh0KSxuKSx1PWUwKHQsby5nZXRTcGVjdHJ1bSh0KSxyLnksby5nZXRUb3BFZGdlKHQpLG8uZ2V0Qm90dG9tRWRnZSh0KSxuKSxhPUNlKGUuZWxlbWVudCkvMixjPXhlKGUuZWxlbWVudCkvMjtmZShlLmVsZW1lbnQsXCJsZWZ0XCIsaS1hK1wicHhcIiksZmUoZS5lbGVtZW50LFwidG9wXCIsdS1jK1wicHhcIil9LG9uTGVmdDpHdyxvblJpZ2h0Olh3LG9uVXA6WXcsb25Eb3duOnF3LGVkZ2VBY3Rpb25zOkt3fSksJHc9Q2woe25hbWU6XCJTbGlkZXJcIixjb25maWdGaWVsZHM6W0VvKFwic3RlcFNpemVcIiwxKSxFbyhcIm9uQ2hhbmdlXCIsc3QpLEVvKFwib25DaG9vc2VcIixzdCksRW8oXCJvbkluaXRcIixzdCksRW8oXCJvbkRyYWdTdGFydFwiLHN0KSxFbyhcIm9uRHJhZ0VuZFwiLHN0KSxFbyhcInNuYXBUb0dyaWRcIiwhMSksRW8oXCJyb3VuZGVkXCIsITApLHdvKFwic25hcFN0YXJ0XCIpLGdvKFwibW9kZWxcIixsbyhcIm1vZGVcIix7eDpbRW8oXCJtaW5YXCIsMCksRW8oXCJtYXhYXCIsMTAwKSxjcihcInZhbHVlXCIsZnVuY3Rpb24odCl7cmV0dXJuIFBvKHQubW9kZS5taW5YKX0pLG1vKFwiZ2V0SW5pdGlhbFZhbHVlXCIpLHRhKFwibWFuYWdlclwiLFB3KV0seTpbRW8oXCJtaW5ZXCIsMCksRW8oXCJtYXhZXCIsMTAwKSxjcihcInZhbHVlXCIsZnVuY3Rpb24odCl7cmV0dXJuIFBvKHQubW9kZS5taW5ZKX0pLG1vKFwiZ2V0SW5pdGlhbFZhbHVlXCIpLHRhKFwibWFuYWdlclwiLGp3KV0seHk6W0VvKFwibWluWFwiLDApLEVvKFwibWF4WFwiLDEwMCksRW8oXCJtaW5ZXCIsMCksRW8oXCJtYXhZXCIsMTAwKSxjcihcInZhbHVlXCIsZnVuY3Rpb24odCl7cmV0dXJuIFBvKHt4OnQubW9kZS5taW5YLHk6dC5tb2RlLm1pbll9KX0pLG1vKFwiZ2V0SW5pdGlhbFZhbHVlXCIpLHRhKFwibWFuYWdlclwiLEp3KV19KSksWnMoXCJzbGlkZXJCZWhhdmlvdXJzXCIsW0ZnLERmXSksY3IoXCJtb3VzZUlzRG93blwiLGZ1bmN0aW9uKCl7cmV0dXJuIFBvKCExKX0pXSxwYXJ0RmllbGRzOkR3LGZhY3Rvcnk6ZnVuY3Rpb24oaSx0LGUsbil7ZnVuY3Rpb24gdSh0KXtyZXR1cm4gZ2wodCxpLFwidGh1bWJcIil9ZnVuY3Rpb24gYSh0KXtyZXR1cm4gZ2wodCxpLFwic3BlY3RydW1cIil9ZnVuY3Rpb24gbyh0KXtyZXR1cm4gbWwodCxpLFwibGVmdC1lZGdlXCIpfWZ1bmN0aW9uIHIodCl7cmV0dXJuIG1sKHQsaSxcInJpZ2h0LWVkZ2VcIil9ZnVuY3Rpb24gYyh0KXtyZXR1cm4gbWwodCxpLFwidG9wLWVkZ2VcIil9ZnVuY3Rpb24gcyh0KXtyZXR1cm4gbWwodCxpLFwiYm90dG9tLWVkZ2VcIil9ZnVuY3Rpb24gbCh0LGUpe3Yuc2V0UG9zaXRpb25Gcm9tVmFsdWUodCxlLGkse2dldExlZnRFZGdlOm8sZ2V0UmlnaHRFZGdlOnIsZ2V0VG9wRWRnZTpjLGdldEJvdHRvbUVkZ2U6cyxnZXRTcGVjdHJ1bTphfSl9ZnVuY3Rpb24gZih0LGUpe2gudmFsdWUuc2V0KGUpLGwodCx1KHQpKX1mdW5jdGlvbiBkKG4pe3ZhciB0PWkubW91c2VJc0Rvd24uZ2V0KCk7aS5tb3VzZUlzRG93bi5zZXQoITEpLHQmJm1sKG4saSxcInRodW1iXCIpLmVhY2goZnVuY3Rpb24odCl7dmFyIGU9aC52YWx1ZS5nZXQoKTtpLm9uQ2hvb3NlKG4sdCxlKX0pfWZ1bmN0aW9uIG0odCxlKXtlLnN0b3AoKSxpLm1vdXNlSXNEb3duLnNldCghMCksaS5vbkRyYWdTdGFydCh0LHUodCkpfWZ1bmN0aW9uIGcodCxlKXtlLnN0b3AoKSxpLm9uRHJhZ0VuZCh0LHUodCkpLGQodCl9dmFyIHAsaD1pLm1vZGVsLHY9aC5tYW5hZ2VyO3JldHVybnt1aWQ6aS51aWQsZG9tOmkuZG9tLGNvbXBvbmVudHM6dCxiZWhhdmlvdXJzOmVsKGkuc2xpZGVyQmVoYXZpb3VycyxbRmcuY29uZmlnKHttb2RlOlwic3BlY2lhbFwiLGZvY3VzSW46ZnVuY3Rpb24odCl7cmV0dXJuIG1sKHQsaSxcInNwZWN0cnVtXCIpLm1hcChGZy5mb2N1c0luKS5tYXAoRCl9fSksRGYuY29uZmlnKHtzdG9yZTp7bW9kZTpcIm1hbnVhbFwiLGdldFZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiBoLnZhbHVlLmdldCgpfX19KSxpYy5jb25maWcoe2NoYW5uZWxzOigocD17fSlbd2YoKV09e29uUmVjZWl2ZTpkfSxwKX0pXSksZXZlbnRzOm51KFtDcihBdygpLGZ1bmN0aW9uKHQsZSl7IWZ1bmN0aW9uKHQsZSl7Zih0LGUpO3ZhciBuPXUodCk7aS5vbkNoYW5nZSh0LG4sZSksdnQuc29tZSghMCl9KHQsZS5ldmVudC52YWx1ZSl9KSxvdShmdW5jdGlvbih0LGUpe3ZhciBuPWguZ2V0SW5pdGlhbFZhbHVlKCk7aC52YWx1ZS5zZXQobik7dmFyIG89dSh0KTtsKHQsbyk7dmFyIHI9YSh0KTtpLm9uSW5pdCh0LG8scixoLnZhbHVlLmdldCgpKX0pLENyKHNpKCksbSksQ3IoZmkoKSxnKSxDcihtaSgpLG0pLENyKGhpKCksZyldKSxhcGlzOntyZXNldFRvTWluOmZ1bmN0aW9uKHQpe3Yuc2V0VG9NaW4odCxpKX0scmVzZXRUb01heDpmdW5jdGlvbih0KXt2LnNldFRvTWF4KHQsaSl9LHNldFZhbHVlOmYscmVmcmVzaDpsfSxkb21Nb2RpZmljYXRpb246e3N0eWxlczp7cG9zaXRpb246XCJyZWxhdGl2ZVwifX19fSxhcGlzOntzZXRWYWx1ZTpmdW5jdGlvbih0LGUsbil7dC5zZXRWYWx1ZShlLG4pfSxyZXNldFRvTWluOmZ1bmN0aW9uKHQsZSl7dC5yZXNldFRvTWluKGUpfSxyZXNldFRvTWF4OmZ1bmN0aW9uKHQsZSl7dC5yZXNldFRvTWF4KGUpfSxyZWZyZXNoOmZ1bmN0aW9uKHQsZSl7dC5yZWZyZXNoKGUpfX19KSxRdz1JcihcInJnYi1oZXgtdXBkYXRlXCIpLFp3PUlyKFwic2xpZGVyLXVwZGF0ZVwiKSx0Uz1JcihcInBhbGV0dGUtdXBkYXRlXCIpLGVTPVtacyhcImZvcm1CZWhhdmlvdXJzXCIsW0RmXSldLG5TPXtnZXRGaWVsZDpIcihmdW5jdGlvbih0LGUsbil7cmV0dXJuIHQuZ2V0RmllbGQoZSxuKX0pLHNrZXRjaDpmdW5jdGlvbih0KXt2YXIgbixlPXtmaWVsZDpmdW5jdGlvbih0LGUpe3JldHVybiBuLnB1c2godCksY2woXCJmb3JtXCIsaTAodCksZSl9LHJlY29yZDpydChuPVtdKX0sbz10KGUpLHI9QihlLnJlY29yZCgpLGZ1bmN0aW9uKHQpe3JldHVybiBKZih7bmFtZTp0LHBuYW1lOmkwKHQpfSl9KTtyZXR1cm4gU2woXCJmb3JtXCIsZVMscix1dyxvKX19LG9TPUlyKFwidmFsaWQtaW5wdXRcIiksclM9SXIoXCJpbnZhbGlkLWlucHV0XCIpLGlTPUlyKFwidmFsaWRhdGluZy1pbnB1dFwiKSx1Uz1cImNvbG9yY3VzdG9tLnJnYi5cIixhUz1mdW5jdGlvbih0KXtyZXR1cm4gY2QuY29uZmlnKHtmaW5kOnQuZ2V0T3B0fSl9LGNTPWZ1bmN0aW9uKHQpe3JldHVybiBjZC5jb25maWcoe2ZpbmQ6ZnVuY3Rpb24oZSl7cmV0dXJuIEp0KGUuZWxlbWVudCx0KS5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiBlLmdldFN5c3RlbSgpLmdldEJ5RG9tKHQpLnRvT3B0aW9uYWwoKX0pfX0pfSxzUz17XCJjb2xvcmN1c3RvbS5yZ2IucmVkLmxhYmVsXCI6XCJSXCIsXCJjb2xvcmN1c3RvbS5yZ2IucmVkLmRlc2NyaXB0aW9uXCI6XCJSZWQgY29tcG9uZW50XCIsXCJjb2xvcmN1c3RvbS5yZ2IuZ3JlZW4ubGFiZWxcIjpcIkdcIixcImNvbG9yY3VzdG9tLnJnYi5ncmVlbi5kZXNjcmlwdGlvblwiOlwiR3JlZW4gY29tcG9uZW50XCIsXCJjb2xvcmN1c3RvbS5yZ2IuYmx1ZS5sYWJlbFwiOlwiQlwiLFwiY29sb3JjdXN0b20ucmdiLmJsdWUuZGVzY3JpcHRpb25cIjpcIkJsdWUgY29tcG9uZW50XCIsXCJjb2xvcmN1c3RvbS5yZ2IuaGV4LmxhYmVsXCI6XCIjXCIsXCJjb2xvcmN1c3RvbS5yZ2IuaGV4LmRlc2NyaXB0aW9uXCI6XCJIZXggY29sb3IgY29kZVwiLFwiY29sb3JjdXN0b20ucmdiLnJhbmdlXCI6XCJSYW5nZSAwIHRvIDI1NVwiLFwiY29sb3JjdXN0b20uc2Iuc2F0dXJhdGlvblwiOlwiU2F0dXJhdGlvblwiLFwiY29sb3JjdXN0b20uc2IuYnJpZ2h0bmVzc1wiOlwiQnJpZ2h0bmVzc1wiLFwiY29sb3JjdXN0b20uc2IucGlja2VyXCI6XCJTYXR1cmF0aW9uIGFuZCBCcmlnaHRuZXNzIFBpY2tlclwiLFwiY29sb3JjdXN0b20uc2IucGFsZXR0ZVwiOlwiU2F0dXJhdGlvbiBhbmQgQnJpZ2h0bmVzcyBQYWxldHRlXCIsXCJjb2xvcmN1c3RvbS5zYi5pbnN0cnVjdGlvbnNcIjpcIlVzZSBhcnJvdyBrZXlzIHRvIHNlbGVjdCBzYXR1cmF0aW9uIGFuZCBicmlnaHRuZXNzLCBvbiB4IGFuZCB5IGF4ZXNcIixcImNvbG9yY3VzdG9tLmh1ZS5odWVcIjpcIkh1ZVwiLFwiY29sb3JjdXN0b20uaHVlLnNsaWRlclwiOlwiSHVlIFNsaWRlclwiLFwiY29sb3JjdXN0b20uaHVlLnBhbGV0dGVcIjpcIkh1ZSBQYWxldHRlXCIsXCJjb2xvcmN1c3RvbS5odWUuaW5zdHJ1Y3Rpb25zXCI6XCJVc2UgYXJyb3cga2V5cyB0byBzZWxlY3QgYSBodWVcIixcImFyaWEuY29sb3IucGlja2VyXCI6XCJDb2xvciBQaWNrZXJcIixcImFyaWEuaW5wdXQuaW52YWxpZFwiOlwiSW52YWxpZCBpbnB1dFwifSxsUz10aW55bWNlLnV0aWwuVG9vbHMucmVzb2x2ZShcInRpbnltY2UuUmVzb3VyY2VcIiksZlM9dGlueW1jZS51dGlsLlRvb2xzLnJlc29sdmUoXCJ0aW55bWNlLnV0aWwuVG9vbHNcIiksZFM9JG8oW0VvKFwicHJlcHJvY2Vzc1wiLGgpLEVvKFwicG9zdHByb2Nlc3NcIixoKV0pLG1TPWZ1bmN0aW9uKHIsdCl7dmFyIGk9c28oXCJSZXByZXNlbnRpbmdDb25maWdzLm1lbWVudG8gcHJvY2Vzc29yc1wiLGRTLHQpO3JldHVybiBEZi5jb25maWcoe3N0b3JlOnttb2RlOlwibWFudWFsXCIsZ2V0VmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9ci5nZXQodCksbj1EZi5nZXRWYWx1ZShlKTtyZXR1cm4gaS5wb3N0cHJvY2VzcyhuKX0sc2V0VmFsdWU6ZnVuY3Rpb24odCxlKXt2YXIgbj1pLnByZXByb2Nlc3MoZSksbz1yLmdldCh0KTtEZi5zZXRWYWx1ZShvLG4pfX19KX0sZ1M9czAscFM9ZnVuY3Rpb24odCl7cmV0dXJuIERmLmNvbmZpZyh7c3RvcmU6e21vZGU6XCJtZW1vcnlcIixpbml0aWFsVmFsdWU6dH19KX0saFM9SXIoXCJhbGxveS1mYWtlLWJlZm9yZS10YWJzdG9wXCIpLHZTPUlyKFwiYWxsb3ktZmFrZS1hZnRlci10YWJzdG9wXCIpLGJTPSEobG4oKS5icm93c2VyLmlzSUUoKXx8bG4oKS5icm93c2VyLmlzRWRnZSgpKSx5Uz1mdW5jdGlvbih0KXtyZXR1cm4gdC5nZXRDb250ZXh0KFwiMmRcIil9LHhTPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdC53aWR0aD1lLHQuaGVpZ2h0PW4sdH0sd1M9ZnVuY3Rpb24odCl7VVJMLnJldm9rZU9iamVjdFVSTCh0LnNyYyl9LFNTPVswLC4wMSwuMDIsLjA0LC4wNSwuMDYsLjA3LC4wOCwuMSwuMTEsLjEyLC4xNCwuMTUsLjE2LC4xNywuMTgsLjIsLjIxLC4yMiwuMjQsLjI1LC4yNywuMjgsLjMsLjMyLC4zNCwuMzYsLjM4LC40LC40MiwuNDQsLjQ2LC40OCwuNSwuNTMsLjU2LC41OSwuNjIsLjY1LC42OCwuNzEsLjc0LC43NywuOCwuODMsLjg2LC44OSwuOTIsLjk1LC45OCwxLDEuMDYsMS4xMiwxLjE4LDEuMjQsMS4zLDEuMzYsMS40MiwxLjQ4LDEuNTQsMS42LDEuNjYsMS43MiwxLjc4LDEuODQsMS45LDEuOTYsMiwyLjEyLDIuMjUsMi4zNywyLjUsMi42MiwyLjc1LDIuODcsMywzLjIsMy40LDMuNiwzLjgsNCw0LjMsNC43LDQuOSw1LDUuNSw2LDYuNSw2LjgsNyw3LjMsNy41LDcuOCw4LDguNCw4LjcsOSw5LjQsOS42LDkuOCwxMF0sa1M9ZnVuY3Rpb24odCxlLFQpe3ZhciBuPXlTKHQpLG89ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG4sbyxyLGk9dC5kYXRhLHU9VFswXSxhPVRbMV0sYz1UWzJdLHM9VFszXSxsPVRbNF0sZj1UWzVdLGQ9VFs2XSxtPVRbN10sZz1UWzhdLHA9VFs5XSxoPVRbMTBdLHY9VFsxMV0sYj1UWzEyXSx5PVRbMTNdLHg9VFsxNF0sdz1UWzE1XSxTPVRbMTZdLGs9VFsxN10sQz1UWzE4XSxPPVRbMTldLF89MDtfPGkubGVuZ3RoO18rPTQpZT1pW19dLG49aVtfKzFdLG89aVtfKzJdLHI9aVtfKzNdLGlbX109ZSp1K24qYStvKmMrcipzK2wsaVtfKzFdPWUqZituKmQrbyptK3IqZytwLGlbXysyXT1lKmgrbip2K28qYityKnkreCxpW18rM109ZSp3K24qUytvKmsrcipDK087cmV0dXJuIHR9KG4uZ2V0SW1hZ2VEYXRhKDAsMCx0LndpZHRoLHQuaGVpZ2h0KSk7cmV0dXJuIG4ucHV0SW1hZ2VEYXRhKG8sMCwwKSxTMCh0LGUpfSxDUz0oc3c9Wy0xLDAsMCwwLDI1NSwwLC0xLDAsMCwyNTUsMCwwLC0xLDAsMjU1LDAsMCwwLDEsMCwwLDAsMCwwLDFdLGZ1bmN0aW9uKHQpe3JldHVybiBUMCh0LHN3KX0pLE9TPUUwKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIF8wKHQsWzEsMCwwLDAsZT1DMCgyNTUqZSwtMjU1LDI1NSksMCwxLDAsMCxlLDAsMCwxLDAsZSwwLDAsMCwxLDAsMCwwLDAsMCwxXSl9KSxfUz1FMChmdW5jdGlvbih0LGUpe3ZhciBuO3JldHVybiBlPUMwKGUsLTEsMSksXzAodCxbKG49KGUqPTEwMCk8MD8xMjcrZS8xMDAqMTI3OjEyNyooMD09KG49ZSUxKT9TU1tlXTpTU1tNYXRoLmZsb29yKGUpXSooMS1uKStTU1tNYXRoLmZsb29yKGUpKzFdKm4pKzEyNykvMTI3LDAsMCwwLC41KigxMjctbiksMCxuLzEyNywwLDAsLjUqKDEyNy1uKSwwLDAsbi8xMjcsMCwuNSooMTI3LW4pLDAsMCwwLDEsMCwwLDAsMCwwLDFdKX0pLFRTPShsdz1bMCwtMSwwLC0xLDUsLTEsMCwtMSwwXSxmdW5jdGlvbih0KXtyZXR1cm4gYT1sdywodT10KS50b0NhbnZhcygpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIGU9dCxuPXUuZ2V0VHlwZSgpLG89YSxyPXlTKGUpLGk9ZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgbz1mdW5jdGlvbih0LGUsbil7cmV0dXJuIG48dD90PW46dDxlJiYodD1lKSx0fSxyPU1hdGgucm91bmQoTWF0aC5zcXJ0KG4ubGVuZ3RoKSksaT1NYXRoLmZsb29yKHIvMiksdT10LmRhdGEsYT1lLmRhdGEsYz10LndpZHRoLHM9dC5oZWlnaHQsbD0wO2w8cztsKyspZm9yKHZhciBmPTA7ZjxjO2YrKyl7Zm9yKHZhciBkPTAsbT0wLGc9MCxwPTA7cDxyO3ArKylmb3IodmFyIGg9MDtoPHI7aCsrKXt2YXIgdj1vKGYraC1pLDAsYy0xKSxiPTQqKG8obCtwLWksMCxzLTEpKmMrdikseT1uW3AqcitoXTtkKz11W2JdKnksbSs9dVsxK2JdKnksZys9dVsyK2JdKnl9dmFyIHg9NCoobCpjK2YpO2FbeF09byhkLDAsMjU1KSxhWzEreF09byhtLDAsMjU1KSxhWzIreF09byhnLDAsMjU1KX1yZXR1cm4gZX0oci5nZXRJbWFnZURhdGEoMCwwLGUud2lkdGgsZS5oZWlnaHQpLHIuZ2V0SW1hZ2VEYXRhKDAsMCxlLndpZHRoLGUuaGVpZ2h0KSxvKSxyLnB1dEltYWdlRGF0YShpLDAsMCksUzAoZSxuKTt2YXIgZSxuLG8scixpfSk7dmFyIHUsYX0pLEVTPShmdz1mdW5jdGlvbih0LGUpe3JldHVybiAyNTUqTWF0aC5wb3codC8yNTUsMS1lKX0sZnVuY3Rpb24oZSxuKXtyZXR1cm4gZS50b0NhbnZhcygpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIG89eVModCkscj1uZXcgQXJyYXkoMjU2KSxpPTA7aTxyLmxlbmd0aDtpKyspcltpXT1mdyhpLG4pO3ZhciB1PWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXQuZGF0YSxvPTA7bzxuLmxlbmd0aDtvKz00KW5bb109ZVtuW29dXSxuW28rMV09ZVtuW28rMV1dLG5bbysyXT1lW25bbysyXV07cmV0dXJuIHR9KG8uZ2V0SW1hZ2VEYXRhKDAsMCx0LndpZHRoLHQuaGVpZ2h0KSxyKTtyZXR1cm4gby5wdXRJbWFnZURhdGEodSwwLDApLFMwKHQsZSl9KHQsZS5nZXRUeXBlKCksbil9KX0pLERTPWZ1bmN0aW9uKHQsZSxuKXt2YXIgbz1iMCh0KSxyPXkwKHQpLGk9ZS9vLHU9bi9yLGE9ITE7KGk8LjV8fDI8aSkmJihpPWk8LjU/LjU6MixhPSEwKSwodTwuNXx8Mjx1KSYmKHU9dTwuNT8uNToyLGE9ITApO3ZhciBjPUFTKHQsaSx1KTtyZXR1cm4gYT9jLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIERTKHQsZSxuKX0pOmN9LEFTPWZ1bmN0aW9uKHUsYSxjKXtyZXR1cm4gbmV3IEx5KGZ1bmN0aW9uKHQpe3ZhciBlPWIwKHUpLG49eTAodSksbz1NYXRoLmZsb29yKGUqYSkscj1NYXRoLmZsb29yKG4qYyksaT1oMChvLHIpO3lTKGkpLmRyYXdJbWFnZSh1LDAsMCxlLG4sMCwwLG8sciksdChpKX0pfSxCUz1mdW5jdGlvbih0LGUsbil7dmFyIG89KG48MD8zNjArbjpuKSpNYXRoLlBJLzE4MCxyPXQud2lkdGgsaT10LmhlaWdodCx1PU1hdGguc2luKG8pLGE9TWF0aC5jb3MobyksYz1EMChNYXRoLmFicyhyKmEpK01hdGguYWJzKGkqdSkpLHM9RDAoTWF0aC5hYnMocip1KStNYXRoLmFicyhpKmEpKSxsPWgwKGMscyksZj15UyhsKTtyZXR1cm4gZi50cmFuc2xhdGUoYy8yLHMvMiksZi5yb3RhdGUobyksZi5kcmF3SW1hZ2UodCwtci8yLC1pLzIpLFMwKGwsZSl9LE1TPWZ1bmN0aW9uKHQsZSxuKXt2YXIgbz1oMCh0LndpZHRoLHQuaGVpZ2h0KSxyPXlTKG8pO3JldHVyblwidlwiPT09bj8oci5zY2FsZSgxLC0xKSxyLmRyYXdJbWFnZSh0LDAsLW8uaGVpZ2h0KSk6KHIuc2NhbGUoLTEsMSksci5kcmF3SW1hZ2UodCwtby53aWR0aCwwKSksUzAobyxlKX0sRlM9ZnVuY3Rpb24odCxlLG4sbyxyLGkpe3ZhciB1PWgwKHIsaSk7cmV0dXJuIHlTKHUpLmRyYXdJbWFnZSh0LC1uLC1vKSxTMCh1LGUpfSxJUz1JcihcInRvb2xiYXIuYnV0dG9uLmV4ZWN1dGVcIiksUlM9KChkdz17fSlbSWkoKV09W1wiZGlzYWJsaW5nXCIsXCJhbGxveS5iYXNlLmJlaGF2aW91clwiLFwidG9nZ2xpbmdcIixcInRvb2xiYXItYnV0dG9uLWV2ZW50c1wiXSxkdyksTlM9SXIoXCJ1cGRhdGUtbWVudS10ZXh0XCIpLFBTPUlyKFwidXBkYXRlLW1lbnUtaWNvblwiKSxWUz17dHlwZTpcInNlcGFyYXRvclwifSxIUz1mdW5jdGlvbih0LGwpe3ZhciBlLG4sbztyZXR1cm4gSSgoZT15KHQpP3Quc3BsaXQoXCIgXCIpOnQsbj1sLDA8KG89UihlLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHkoZSk/XCJcIj09PWU/dDpcInxcIj09PWU/MDx0Lmxlbmd0aCYmIVUwKHRbdC5sZW5ndGgtMV0pP3QuY29uY2F0KFtWU10pOnQ6VHQobixlLnRvTG93ZXJDYXNlKCkpP3QuY29uY2F0KFtuW2UudG9Mb3dlckNhc2UoKV1dKTp0OnQuY29uY2F0KFtlXSl9LFtdKSkubGVuZ3RoJiZVMChvW28ubGVuZ3RoLTFdKSYmby5wb3AoKSxvKSxmdW5jdGlvbih0LGUpe3ZhciBuLG8scixpLHUsYSxjPWZ1bmN0aW9uKHQpe2lmKFUwKHQpKXJldHVybiB0O3ZhciBlPXR0KHQsXCJ2YWx1ZVwiKS5nZXRPclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIElyKFwiZ2VuZXJhdGVkLW1lbnUtaXRlbVwiKX0pO3JldHVybiBZbyh7dmFsdWU6ZX0sdCl9KGUpLHM9KG89bCxUdChuPWMsXCJnZXRTdWJtZW51SXRlbXNcIik/KGk9byx1PShyPW4pLmdldFN1Ym1lbnVJdGVtcygpLGE9SFModSxpKSx7aXRlbTpyLG1lbnVzOllvKGEubWVudXMsc3Ioci52YWx1ZSxhLml0ZW1zKSksZXhwYW5zaW9uczpZbyhhLmV4cGFuc2lvbnMsc3Ioci52YWx1ZSxyLnZhbHVlKSl9KTp7aXRlbTpuLG1lbnVzOnt9LGV4cGFuc2lvbnM6e319KTtyZXR1cm57bWVudXM6WW8odC5tZW51cyxzLm1lbnVzKSxpdGVtczpbcy5pdGVtXS5jb25jYXQodC5pdGVtcyksZXhwYW5zaW9uczpZbyh0LmV4cGFuc2lvbnMscy5leHBhbnNpb25zKX19LHttZW51czp7fSxleHBhbnNpb25zOnt9LGl0ZW1zOltdfSl9LExTPXJ0KFtFbyhcImZpZWxkMU5hbWVcIixcImZpZWxkMVwiKSxFbyhcImZpZWxkMk5hbWVcIixcImZpZWxkMlwiKSxRdShcIm9uTG9ja2VkQ2hhbmdlXCIpLHF1KFtcImxvY2tDbGFzc1wiXSksRW8oXCJsb2NrZWRcIiwhMSksQWYoXCJjb3VwbGVkRmllbGRCZWhhdmlvdXJzXCIsW2NkLERmXSldKSx6Uz1ydChbWjAoXCJmaWVsZDFcIixcImZpZWxkMlwiKSxaMChcImZpZWxkMlwiLFwiZmllbGQxXCIpLEpmKHtmYWN0b3J5OmZwLHNjaGVtYTpbbW8oXCJkb21cIildLG5hbWU6XCJsb2NrXCIsb3ZlcnJpZGVzOmZ1bmN0aW9uKHQpe3JldHVybntidXR0b25CZWhhdmlvdXJzOmVjKFt6Zy5jb25maWcoe3NlbGVjdGVkOnQubG9ja2VkLHRvZ2dsZUNsYXNzOnQubWFya2Vycy5sb2NrQ2xhc3MsYXJpYTp7bW9kZTpcInByZXNzZWRcIn19KV0pfX19KV0pLFVTPUNsKHtuYW1lOlwiRm9ybUNvdXBsZWRJbnB1dHNcIixjb25maWdGaWVsZHM6TFMoKSxwYXJ0RmllbGRzOnpTKCksZmFjdG9yeTpmdW5jdGlvbihvLHQsZSxuKXtyZXR1cm57dWlkOm8udWlkLGRvbTpvLmRvbSxjb21wb25lbnRzOnQsYmVoYXZpb3VyczpCZihvLmNvdXBsZWRGaWVsZEJlaGF2aW91cnMsW2NkLmNvbmZpZyh7ZmluZDp2dC5zb21lfSksRGYuY29uZmlnKHtzdG9yZTp7bW9kZTpcIm1hbnVhbFwiLGdldFZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPWJsKHQsbyxbXCJmaWVsZDFcIixcImZpZWxkMlwiXSksbj17fTtyZXR1cm4gbltvLmZpZWxkMU5hbWVdPURmLmdldFZhbHVlKGUuZmllbGQxKCkpLG5bby5maWVsZDJOYW1lXT1EZi5nZXRWYWx1ZShlLmZpZWxkMigpKSxufSxzZXRWYWx1ZTpmdW5jdGlvbih0LGUpe3ZhciBuPWJsKHQsbyxbXCJmaWVsZDFcIixcImZpZWxkMlwiXSk7ZXQoZSxvLmZpZWxkMU5hbWUpJiZEZi5zZXRWYWx1ZShuLmZpZWxkMSgpLGVbby5maWVsZDFOYW1lXSksZXQoZSxvLmZpZWxkMk5hbWUpJiZEZi5zZXRWYWx1ZShuLmZpZWxkMigpLGVbby5maWVsZDJOYW1lXSl9fX0pXSksYXBpczp7Z2V0RmllbGQxOmZ1bmN0aW9uKHQpe3JldHVybiBtbCh0LG8sXCJmaWVsZDFcIil9LGdldEZpZWxkMjpmdW5jdGlvbih0KXtyZXR1cm4gbWwodCxvLFwiZmllbGQyXCIpfSxnZXRMb2NrOmZ1bmN0aW9uKHQpe3JldHVybiBtbCh0LG8sXCJsb2NrXCIpfX19fSxhcGlzOntnZXRGaWVsZDE6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5nZXRGaWVsZDEoZSl9LGdldEZpZWxkMjpmdW5jdGlvbih0LGUpe3JldHVybiB0LmdldEZpZWxkMihlKX0sZ2V0TG9jazpmdW5jdGlvbih0LGUpe3JldHVybiB0LmdldExvY2soZSl9fX0pLGpTPXt1bmRvOnJ0KElyKFwidW5kb1wiKSkscmVkbzpydChJcihcInJlZG9cIikpLHpvb206cnQoSXIoXCJ6b29tXCIpKSxiYWNrOnJ0KElyKFwiYmFja1wiKSksYXBwbHk6cnQoSXIoXCJhcHBseVwiKSksc3dhcDpydChJcihcInN3YXBcIikpLHRyYW5zZm9ybTpydChJcihcInRyYW5zZm9ybVwiKSksdGVtcFRyYW5zZm9ybTpydChJcihcInRlbXAtdHJhbnNmb3JtXCIpKSx0cmFuc2Zvcm1BcHBseTpydChJcihcInRyYW5zZm9ybS1hcHBseVwiKSl9LFdTPXJ0KFwic2F2ZS1zdGF0ZVwiKSxHUz1ydChcImRpc2FibGVcIiksWFM9cnQoXCJlbmFibGVcIiksWVM9e2Zvcm1BY3Rpb25FdmVudDpTeSxzYXZlU3RhdGU6V1MsZGlzYWJsZTpHUyxlbmFibGU6WFN9LHFTPXRpbnltY2UudXRpbC5Ub29scy5yZXNvbHZlKFwidGlueW1jZS5nZW9tLlJlY3RcIiksS1M9dGlueW1jZS51dGlsLlRvb2xzLnJlc29sdmUoXCJ0aW55bWNlLnV0aWwuT2JzZXJ2YWJsZVwiKSxKUz10aW55bWNlLnV0aWwuVG9vbHMucmVzb2x2ZShcInRpbnltY2UudXRpbC5WS1wiKTtmdW5jdGlvbiAkUyh0LGQpe2Z1bmN0aW9uIGUodCl7dmFyIGUsbixvLHIsaSx1LGEsYyxzPXQucmF3LGw9KGU9TWF0aC5tYXgsbj15LmRvY3VtZW50RWxlbWVudCxvPXkuYm9keSxyPWUobi5zY3JvbGxXaWR0aCxvLnNjcm9sbFdpZHRoKSxpPWUobi5jbGllbnRXaWR0aCxvLmNsaWVudFdpZHRoKSx1PWUobi5vZmZzZXRXaWR0aCxvLm9mZnNldFdpZHRoKSxhPWUobi5zY3JvbGxIZWlnaHQsby5zY3JvbGxIZWlnaHQpLGM9ZShuLmNsaWVudEhlaWdodCxvLmNsaWVudEhlaWdodCkse3dpZHRoOnI8dT9pOnIsaGVpZ2h0OmE8ZShuLm9mZnNldEhlaWdodCxvLm9mZnNldEhlaWdodCk/YzphfSk7aXcocyksdC5wcmV2ZW50KCkscD1zLmJ1dHRvbixoPXMuc2NyZWVuWCx2PXMuc2NyZWVuWTt2YXIgZj1nZSh3LFwiY3Vyc29yXCIpO2RlKGc9TXQuZnJvbVRhZyhcImRpdlwiLHkpLHtwb3NpdGlvbjpcImFic29sdXRlXCIsdG9wOlwiMFwiLGxlZnQ6XCIwXCIsd2lkdGg6bC53aWR0aCtcInB4XCIsaGVpZ2h0OmwuaGVpZ2h0K1wicHhcIixcInotaW5kZXhcIjpcIjIxNDc0ODM2NDdcIixvcGFjaXR5OlwiMC4wMDAxXCIsY3Vyc29yOmZ9KSxUbih5bih4KSxnKSxiLnB1c2gocGMoeCxcIm1vdXNlbW92ZVwiLG0pLHBjKHgsXCJ0b3VjaG1vdmVcIixtKSxwYyh4LFwibW91c2V1cFwiLFMpLHBjKHgsXCJ0b3VjaGVuZFwiLFMpKSxkLnN0YXJ0KHMpfWZ1bmN0aW9uIG0odCl7dmFyIGU9dC5yYXc7aWYoaXcoZSksZS5idXR0b24hPT1wKXJldHVybiBTKHQpO2UuZGVsdGFYPWUuc2NyZWVuWC1oLGUuZGVsdGFZPWUuc2NyZWVuWS12LHQucHJldmVudCgpLGQuZHJhZyhlKX12YXIgbixvLHIsZyxwLGgsdixpPVtdLGI9W10seT1udWxsIT09KG49ZC5kb2N1bWVudCkmJnZvaWQgMCE9PW4/bjpkb2N1bWVudCx1PW51bGwhPT0obz1kLnJvb3QpJiZ2b2lkIDAhPT1vP286eSx4PU10LmZyb21Eb20oeSksdz1NdC5mcm9tRG9tKHUuZ2V0RWxlbWVudEJ5SWQobnVsbCE9PShyPWQuaGFuZGxlKSYmdm9pZCAwIT09cj9yOnQpKSxTPWZ1bmN0aW9uKHQpe2l3KHQucmF3KSxTdChiLGZ1bmN0aW9uKHQpe3JldHVybiB0LnVuYmluZCgpfSksYj1bXSxFbihnKSxkLnN0b3AmJmQuc3RvcCh0LnJhdyl9O3JldHVybiBpLnB1c2gocGModyxcIm1vdXNlZG93blwiLGUpLHBjKHcsXCJ0b3VjaHN0YXJ0XCIsZSkpLHtkZXN0cm95OmZ1bmN0aW9uKCl7U3QoYi5jb25jYXQoaSksZnVuY3Rpb24odCl7cmV0dXJuIHQudW5iaW5kKCl9KSxiPVtdLGk9W10sayhnKSYmRW4oZyl9fX1mdW5jdGlvbiBRUyh0LGUsbixvLHIpe3JldHVybiBxMCh7bmFtZTp0LGljb246dnQuc29tZShlKSxkaXNhYmxlZDpuLHRvb2x0aXA6dnQuc29tZSh0KSxwcmltYXJ5OiExLGJvcmRlcmxlc3M6ITF9LG8scil9ZnVuY3Rpb24gWlModCxlKXtlP2dkLmVuYWJsZSh0KTpnZC5kaXNhYmxlKHQpfXZhciB0az0wLGVrPWZ1bmN0aW9uKHMsZSxsLHQsbil7ZnVuY3Rpb24gZih0LGUpe3JldHVybnt4OmUueC10LngseTplLnktdC55LHc6ZS53LGg6ZS5ofX1mdW5jdGlvbiB1KHQsZSxuLG8pe3ZhciByPWUueCtuKnQuZGVsdGFYLGk9ZS55K28qdC5kZWx0YVksdT1NYXRoLm1heCgyMCxlLncrbip0LmRlbHRhVyksYT1NYXRoLm1heCgyMCxlLmgrbyp0LmRlbHRhSCksYz0ocz1xUy5jbGFtcCh7eDpyLHk6aSx3OnUsaDphfSxsLFwibW92ZVwiPT09dC5uYW1lKSxmKGwscykpO2IuZmlyZShcInVwZGF0ZVJlY3RcIix7cmVjdDpjfSksaChjKX1mdW5jdGlvbiBvKHQpe3Iocz10KX1mdW5jdGlvbiByKG4pe2Z1bmN0aW9uIHQodCxlKXtJdShtLFwiI1wiK2QrXCItXCIrdCkuZWFjaChmdW5jdGlvbih0KXtkZSh0LHtsZWZ0OmUueCtcInB4XCIsdG9wOmUueStcInB4XCIsd2lkdGg6TWF0aC5tYXgoMCxlLncpK1wicHhcIixoZWlnaHQ6TWF0aC5tYXgoMCxlLmgpK1wicHhcIn0pfSl9U3QoZyxmdW5jdGlvbihlKXtJdShtLFwiI1wiK2QrXCItXCIrZS5uYW1lKS5lYWNoKGZ1bmN0aW9uKHQpe2RlKHQse2xlZnQ6bi53KmUueE11bCtuLngrXCJweFwiLHRvcDpuLmgqZS55TXVsK24ueStcInB4XCJ9KX0pfSksdChcInRvcFwiLHt4OmUueCx5OmUueSx3OmUudyxoOm4ueS1lLnl9KSx0KFwicmlnaHRcIix7eDpuLngrbi53LHk6bi55LHc6ZS53LW4ueC1uLncrZS54LGg6bi5ofSksdChcImJvdHRvbVwiLHt4OmUueCx5Om4ueStuLmgsdzplLncsaDplLmgtbi55LW4uaCtlLnl9KSx0KFwibGVmdFwiLHt4OmUueCx5Om4ueSx3Om4ueC1lLngsaDpuLmh9KSx0KFwibW92ZVwiLG4pfXZhciBpLGEsYz1bXSxkPVwidG94LWNyaWQtXCIrdGsrKyxtPU10LmZyb21Eb20odCksZz1be25hbWU6XCJtb3ZlXCIseE11bDowLHlNdWw6MCxkZWx0YVg6MSxkZWx0YVk6MSxkZWx0YVc6MCxkZWx0YUg6MCxsYWJlbDpcIkNyb3AgTWFza1wifSx7bmFtZTpcIm53XCIseE11bDowLHlNdWw6MCxkZWx0YVg6MSxkZWx0YVk6MSxkZWx0YVc6LTEsZGVsdGFIOi0xLGxhYmVsOlwiVG9wIExlZnQgQ3JvcCBIYW5kbGVcIn0se25hbWU6XCJuZVwiLHhNdWw6MSx5TXVsOjAsZGVsdGFYOjAsZGVsdGFZOjEsZGVsdGFXOjEsZGVsdGFIOi0xLGxhYmVsOlwiVG9wIFJpZ2h0IENyb3AgSGFuZGxlXCJ9LHtuYW1lOlwic3dcIix4TXVsOjAseU11bDoxLGRlbHRhWDoxLGRlbHRhWTowLGRlbHRhVzotMSxkZWx0YUg6MSxsYWJlbDpcIkJvdHRvbSBMZWZ0IENyb3AgSGFuZGxlXCJ9LHtuYW1lOlwic2VcIix4TXVsOjEseU11bDoxLGRlbHRhWDowLGRlbHRhWTowLGRlbHRhVzoxLGRlbHRhSDoxLGxhYmVsOlwiQm90dG9tIFJpZ2h0IENyb3AgSGFuZGxlXCJ9XSxwPVtcInRvcFwiLFwicmlnaHRcIixcImJvdHRvbVwiLFwibGVmdFwiXSxoPWZ1bmN0aW9uKHQpe3ZhciBlO28oKGU9bCx7eDp0LngrZS54LHk6dC55K2UueSx3OnQudyxoOnQuaH0pKX07ZnVuY3Rpb24gdih0KXtvZSh0LnRhcmdldCxcImFyaWEtZ3JhYmJlZFwiLFwiZm9jdXNcIj09PXQucmF3LnR5cGU/XCJ0cnVlXCI6XCJmYWxzZVwiKX1yZShhPU10LmZyb21UYWcoXCJkaXZcIikse2lkOmQsY2xhc3M6XCJ0b3gtY3JvcHJlY3QtY29udGFpbmVyXCIscm9sZTpcImdyaWRcIixcImFyaWEtZHJvcGVmZmVjdFwiOlwiZXhlY3V0ZVwifSksVG4obSxhKSxTdChwLGZ1bmN0aW9uKG4pe0l1KG0sXCIjXCIrZCkuZWFjaChmdW5jdGlvbih0KXt2YXIgZT1NdC5mcm9tVGFnKFwiZGl2XCIpO3JlKGUse2lkOmQrXCItXCIrbixjbGFzczpcInRveC1jcm9wcmVjdC1ibG9ja1wiLFwiZGF0YS1tY2UtYm9ndXNcIjpcImFsbFwifSksZmUoZSxcImRpc3BsYXlcIixcIm5vbmVcIiksVG4odCxlKX0pfSksU3QoZyxmdW5jdGlvbihuKXtJdShtLFwiI1wiK2QpLmVhY2goZnVuY3Rpb24odCl7dmFyIGU9TXQuZnJvbVRhZyhcImRpdlwiKTtyZShlLHtpZDpkK1wiLVwiK24ubmFtZSxcImFyaWEtbGFiZWxcIjpuLmxhYmVsLFwiYXJpYS1ncmFiYmVkXCI6XCJmYWxzZVwiLFwiZGF0YS1tY2UtYm9ndXNcIjpcImFsbFwiLHJvbGU6XCJncmlkY2VsbFwiLHRhYmluZGV4OlwiLTFcIix0aXRsZTpuLmxhYmVsfSksSnIoZSxbXCJ0b3gtY3JvcHJlY3QtaGFuZGxlXCIsXCJ0b3gtY3JvcHJlY3QtaGFuZGxlLVwiK24ubmFtZV0pLGZlKGUsXCJkaXNwbGF5XCIsXCJub25lXCIpLFRuKHQsZSl9KX0pLGk9QihnLGZ1bmN0aW9uKGUpe3ZhciBuO3JldHVybiAkUyhkLHtkb2N1bWVudDp0Lm93bmVyRG9jdW1lbnQscm9vdDpnbihtKS5kb20saGFuZGxlOmQrXCItXCIrZS5uYW1lLHN0YXJ0OmZ1bmN0aW9uKCl7bj1zfSxkcmFnOmZ1bmN0aW9uKHQpe3UoZSxuLHQuZGVsdGFYLHQuZGVsdGFZKX19KX0pLHIocyksYy5wdXNoKHBjKG0sXCJmb2N1c2luXCIsdikscGMobSxcImZvY3Vzb3V0XCIsdikscGMobSxcImtleWRvd25cIixmdW5jdGlvbihlKXt2YXIgaTtmdW5jdGlvbiB0KHQsZSxuLG8scil7dC5zdG9wUHJvcGFnYXRpb24oKSx0LnByZXZlbnREZWZhdWx0KCksdShpLG4sbyxyKX1zd2l0Y2goU3QoZyxmdW5jdGlvbih0KXtpZihpZShlLnRhcmdldCxcImlkXCIpPT09ZCtcIi1cIit0Lm5hbWUpcmV0dXJuIGk9dCwhMX0pLGUucmF3LmtleUNvZGUpe2Nhc2UgSlMuTEVGVDp0KGUsMCxzLC0xMCwwKTticmVhaztjYXNlIEpTLlJJR0hUOnQoZSwwLHMsMTAsMCk7YnJlYWs7Y2FzZSBKUy5VUDp0KGUsMCxzLDAsLTEwKTticmVhaztjYXNlIEpTLkRPV046dChlLDAscywwLDEwKTticmVhaztjYXNlIEpTLkVOVEVSOmNhc2UgSlMuU1BBQ0VCQVI6ZS5wcmV2ZW50KCksbigpfX0pKTt2YXIgYj1sdChsdCh7fSxLUykse3RvZ2dsZVZpc2liaWxpdHk6ZnVuY3Rpb24odCl7dmFyIGU9VihWKFtdLEIoZyxmdW5jdGlvbih0KXtyZXR1cm5cIiNcIitkK1wiLVwiK3QubmFtZX0pLCEwKSxCKHAsZnVuY3Rpb24odCl7cmV0dXJuXCIjXCIrZCtcIi1cIit0fSksITApLmpvaW4oXCIsXCIpLG49dnMobSxlKTtTdChuLHQ/ZnVuY3Rpb24odCl7cmV0dXJuIHZlKHQsXCJkaXNwbGF5XCIpfTpmdW5jdGlvbih0KXtyZXR1cm4gZmUodCxcImRpc3BsYXlcIixcIm5vbmVcIil9KX0sc2V0Q2xhbXBSZWN0OmZ1bmN0aW9uKHQpe2w9dCxyKHMpfSxzZXRSZWN0Om8sZ2V0SW5uZXJSZWN0OmZ1bmN0aW9uKCl7cmV0dXJuIGYobCxzKX0sc2V0SW5uZXJSZWN0Omgsc2V0Vmlld1BvcnRSZWN0OmZ1bmN0aW9uKHQpe2U9dCxyKHMpfSxkZXN0cm95OmZ1bmN0aW9uKCl7U3QoaSxmdW5jdGlvbih0KXtyZXR1cm4gdC5kZXN0cm95KCl9KSxpPVtdLFN0KGMsZnVuY3Rpb24odCl7cmV0dXJuIHQudW5iaW5kKCl9KSxjPVtdfX0pO3JldHVybiBifTtmdW5jdGlvbiBuayh0KXt2YXIgbixvLGUscixpPVBvKHQpLHU9Z2MoKSxhPShvPS0xLHtkYXRhOm49W10sYWRkOmZ1bmN0aW9uKHQpe3ZhciBlPW4uc3BsaWNlKCsrbyk7cmV0dXJuIG4ucHVzaCh0KSx7c3RhdGU6dCxyZW1vdmVkOmV9fSx1bmRvOmZ1bmN0aW9uKCl7aWYoZSgpKXJldHVybiBuWy0tb119LHJlZG86ZnVuY3Rpb24oKXtpZihyKCkpcmV0dXJuIG5bKytvXX0sY2FuVW5kbzplPWZ1bmN0aW9uKCl7cmV0dXJuIDA8b30sY2FuUmVkbzpyPWZ1bmN0aW9uKCl7cmV0dXJuLTEhPT1vJiZvPG4ubGVuZ3RoLTF9fSk7ZnVuY3Rpb24gYyh0KXtpLnNldCh0KX1mdW5jdGlvbiBzKHQpe1VSTC5yZXZva2VPYmplY3RVUkwodC51cmwpfWZ1bmN0aW9uIGwodCl7dmFyIGU9Zih0KTtjKGUpO3ZhciBuPWEuYWRkKGUpLnJlbW92ZWQ7cmV0dXJuIGZTLmVhY2gobixzKSxlLnVybH1hLmFkZCh0KTtmdW5jdGlvbiBmKHQpe3JldHVybntibG9iOnQsdXJsOlVSTC5jcmVhdGVPYmplY3RVUkwodCl9fWZ1bmN0aW9uIGQoKXt1Lm9uKHMpLHUuY2xlYXIoKX1yZXR1cm57Z2V0QmxvYlN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIGkuZ2V0KCl9LHNldEJsb2JTdGF0ZTpjLGFkZEJsb2JTdGF0ZTpsLGdldFRlbXBTdGF0ZTpmdW5jdGlvbigpe3JldHVybiB1LmdldCgpLmdldE9yVGh1bmsoaS5nZXQpfSx1cGRhdGVUZW1wU3RhdGU6ZnVuY3Rpb24odCl7dmFyIGU9Zih0KTtyZXR1cm4gZCgpLHUuc2V0KGUpLGUudXJsfSxhZGRUZW1wU3RhdGU6ZnVuY3Rpb24odCl7dmFyIGU9Zih0KTtyZXR1cm4gdS5zZXQoZSksZS51cmx9LGFwcGx5VGVtcFN0YXRlOmZ1bmN0aW9uKGUpe3JldHVybiB1LmdldCgpLmZvbGQoc3QsZnVuY3Rpb24odCl7bCh0LmJsb2IpLGUoKX0pfSxkZXN0cm95VGVtcFN0YXRlOmQsdW5kbzpmdW5jdGlvbigpe3ZhciB0PWEudW5kbygpO3JldHVybiBjKHQpLHQudXJsfSxyZWRvOmZ1bmN0aW9uKCl7dmFyIHQ9YS5yZWRvKCk7cmV0dXJuIGModCksdC51cmx9LGdldEhpc3RvcnlTdGF0ZXM6ZnVuY3Rpb24oKXtyZXR1cm57dW5kb0VuYWJsZWQ6YS5jYW5VbmRvKCkscmVkb0VuYWJsZWQ6YS5jYW5SZWRvKCl9fX19ZnVuY3Rpb24gb2sodCxlKXtmdW5jdGlvbiBpKHQpe3ZhciBlPXkuZ2V0SGlzdG9yeVN0YXRlcygpO2sudXBkYXRlQnV0dG9uVW5kb1N0YXRlcyh0LGUudW5kb0VuYWJsZWQsZS5yZWRvRW5hYmxlZCksYnIodCxZUy5mb3JtQWN0aW9uRXZlbnQse25hbWU6WVMuc2F2ZVN0YXRlKCksdmFsdWU6ZS51bmRvRW5hYmxlZH0pfWZ1bmN0aW9uIHUodCl7cmV0dXJuIHQudG9CbG9iKCl9ZnVuY3Rpb24gYSh0KXticih0LFlTLmZvcm1BY3Rpb25FdmVudCx7bmFtZTpZUy5kaXNhYmxlKCksdmFsdWU6e319KX1mdW5jdGlvbiBjKGUsdCxuLG8scil7YShlKSxrMCh0KS50aGVuKG4pLnRoZW4odSkudGhlbihvKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB3KGUsdCl9KS50aGVuKGZ1bmN0aW9uKCl7aShlKSxyKCkseChlKX0pLmNhdGNoKGZ1bmN0aW9uKHQpe2NvbnNvbGUubG9nKHQpLGUuZ2V0U3lzdGVtKCkuaXNDb25uZWN0ZWQoKSYmeChlKX0pfWZ1bmN0aW9uIHIodCxlLG4pe2ModCx5LmdldEJsb2JTdGF0ZSgpLmJsb2IsZSxmdW5jdGlvbih0KXtyZXR1cm4geS51cGRhdGVUZW1wU3RhdGUodCl9LG4pfWZ1bmN0aW9uIHModCl7dmFyIGU9eS5nZXRCbG9iU3RhdGUoKS51cmw7cmV0dXJuIHkuZGVzdHJveVRlbXBTdGF0ZSgpLGkodCksZX12YXIgbixvLGwsZixkLG0sZyxwLGgsdixiLHk9bmsodC5jdXJyZW50U3RhdGUpLHg9ZnVuY3Rpb24odCl7Qy5nZXRBcHBseUJ1dHRvbih0KS5lYWNoKGZ1bmN0aW9uKHQpe2dkLmVuYWJsZSh0KX0pLGJyKHQsWVMuZm9ybUFjdGlvbkV2ZW50LHtuYW1lOllTLmVuYWJsZSgpLHZhbHVlOnt9fSl9LHc9ZnVuY3Rpb24odCxlKXtyZXR1cm4gYSh0KSxTLnVwZGF0ZVNyYyh0LGUpfSxTPShmPXQuY3VycmVudFN0YXRlLnVybCxtPUhtKHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWltYWdlLXRvb2xzX19pbWFnZS1iZ1wiXSxhdHRyaWJ1dGVzOntyb2xlOlwicHJlc2VudGF0aW9uXCJ9fX0pLGc9UG8oMSksZD1kYygpLHA9bHQobHQoe30sZCkse3J1bjpmdW5jdGlvbih0KXtyZXR1cm4gZC5nZXQoKS5lYWNoKHQpfX0pLGg9UG8oe3g6MCx5OjAsdzoxLGg6MX0pLHY9UG8oe3g6MCx5OjAsdzoxLGg6MX0pLHttZW1Db250YWluZXI6Yj1IbShseS5za2V0Y2goe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtaW1hZ2UtdG9vbHNfX2ltYWdlXCJdfSxjb21wb25lbnRzOlttLmFzU3BlYygpLHtkb206e3RhZzpcImltZ1wiLGF0dHJpYnV0ZXM6e3NyYzpmfX19LHtkb206e3RhZzpcImRpdlwifSxiZWhhdmlvdXJzOmVjKFttbShcImltYWdlLXBhbmVsLWNyb3AtZXZlbnRzXCIsW291KGZ1bmN0aW9uKHQpe2IuZ2V0T3B0KHQpLmVhY2goZnVuY3Rpb24odCl7dmFyIGU9dC5lbGVtZW50LmRvbSxuPWVrKHt4OjEwLHk6MTAsdzoxMDAsaDoxMDB9LHt4OjAseTowLHc6MjAwLGg6MjAwfSx7eDowLHk6MCx3OjIwMCxoOjIwMH0sZSxzdCk7bi50b2dnbGVWaXNpYmlsaXR5KCExKSxuLm9uKFwidXBkYXRlUmVjdFwiLGZ1bmN0aW9uKHQpe3ZhciBlPXQucmVjdCxuPWcuZ2V0KCksbz17eDpNYXRoLnJvdW5kKGUueC9uKSx5Ok1hdGgucm91bmQoZS55L24pLHc6TWF0aC5yb3VuZChlLncvbiksaDpNYXRoLnJvdW5kKGUuaC9uKX07aC5zZXQobyl9KSxwLnNldChuKX0pfSkscnUoZnVuY3Rpb24oKXtwLmNsZWFyKCl9KV0pXSl9XSxjb250YWluZXJCZWhhdmlvdXJzOmVjKFtSZy5jb25maWcoe30pLG1tKFwiaW1hZ2UtcGFuZWwtZXZlbnRzXCIsW291KGZ1bmN0aW9uKHQpe18odCxmKX0pXSldKX0pKSx1cGRhdGVTcmM6Xyx6b29tOmZ1bmN0aW9uKHQsZSl7dmFyIG49Zy5nZXQoKSxvPTA8ZT9NYXRoLm1pbigyLG4rLjEpOk1hdGgubWF4KC4xLG4tLjEpO2cuc2V0KG8pLGIuZ2V0T3B0KHQpLmVhY2goZnVuY3Rpb24odCl7dmFyIGU9dC5jb21wb25lbnRzKClbMV0uZWxlbWVudDtPKHQsZSl9KX0sc2hvd0Nyb3A6ZnVuY3Rpb24oKXtwLnJ1bihmdW5jdGlvbih0KXt0LnRvZ2dsZVZpc2liaWxpdHkoITApfSl9LGhpZGVDcm9wOmZ1bmN0aW9uKCl7cC5ydW4oZnVuY3Rpb24odCl7dC50b2dnbGVWaXNpYmlsaXR5KCExKX0pfSxnZXRSZWN0OmZ1bmN0aW9uKCl7cmV0dXJuIGguZ2V0KCl9LGdldE1lYXN1cmVtZW50czpmdW5jdGlvbigpe3ZhciB0PXYuZ2V0KCk7cmV0dXJue3dpZHRoOnQudyxoZWlnaHQ6dC5ofX19KSxrPShvPUhtKFFTKFwiVW5kb1wiLFwidW5kb1wiLCEwLGZ1bmN0aW9uKHQpe2JyKHQsalMudW5kbygpLHtkaXJlY3Rpb246MX0pfSxuPWUpKSxsPUhtKFFTKFwiUmVkb1wiLFwicmVkb1wiLCEwLGZ1bmN0aW9uKHQpe2JyKHQsalMucmVkbygpLHtkaXJlY3Rpb246MX0pfSxuKSkse2NvbnRhaW5lcjpseS5za2V0Y2goe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtaW1hZ2UtdG9vbHNfX3Rvb2xiYXJcIixcInRveC1pbWFnZS10b29sc19fc2lkZWJhclwiXX0sY29tcG9uZW50czpbby5hc1NwZWMoKSxsLmFzU3BlYygpLFFTKFwiWm9vbSBpblwiLFwiem9vbS1pblwiLCExLGZ1bmN0aW9uKHQpe2JyKHQsalMuem9vbSgpLHtkaXJlY3Rpb246MX0pfSxuKSxRUyhcIlpvb20gb3V0XCIsXCJ6b29tLW91dFwiLCExLGZ1bmN0aW9uKHQpe2JyKHQsalMuem9vbSgpLHtkaXJlY3Rpb246LTF9KX0sbildfSksdXBkYXRlQnV0dG9uVW5kb1N0YXRlczpmdW5jdGlvbih0LGUsbil7by5nZXRPcHQodCkuZWFjaChmdW5jdGlvbih0KXtaUyh0LGUpfSksbC5nZXRPcHQodCkuZWFjaChmdW5jdGlvbih0KXtaUyh0LG4pfSl9fSksQz1ydyhTLGUpO2Z1bmN0aW9uIE8odCxzKXtiLmdldE9wdCh0KS5lYWNoKGZ1bmN0aW9uKHQpe3ZhciBuPWcuZ2V0KCksbz1DZSh0LmVsZW1lbnQpLHI9eGUodC5lbGVtZW50KSxpPXMuZG9tLm5hdHVyYWxXaWR0aCpuLHU9cy5kb20ubmF0dXJhbEhlaWdodCpuLGE9TWF0aC5tYXgoMCxvLzItaS8yKSxjPU1hdGgubWF4KDAsci8yLXUvMiksZT17bGVmdDphLnRvU3RyaW5nKCkrXCJweFwiLHRvcDpjLnRvU3RyaW5nKCkrXCJweFwiLHdpZHRoOmkudG9TdHJpbmcoKStcInB4XCIsaGVpZ2h0OnUudG9TdHJpbmcoKStcInB4XCIscG9zaXRpb246XCJhYnNvbHV0ZVwifTtkZShzLGUpLG0uZ2V0T3B0KHQpLmVhY2goZnVuY3Rpb24odCl7ZGUodC5lbGVtZW50LGUpfSkscC5ydW4oZnVuY3Rpb24odCl7dmFyIGU9aC5nZXQoKTt0LnNldFJlY3Qoe3g6ZS54Km4rYSx5OmUueSpuK2MsdzplLncqbixoOmUuaCpufSksdC5zZXRDbGFtcFJlY3Qoe3g6YSx5OmMsdzppLGg6dX0pLHQuc2V0Vmlld1BvcnRSZWN0KHt4OjAseTowLHc6byxoOnJ9KX0pfSl9ZnVuY3Rpb24gXyh0LGUpe3ZhciBuLGk9TXQuZnJvbVRhZyhcImltZ1wiKTtyZXR1cm4gb2UoaSxcInNyY1wiLGUpLG49aS5kb20sbmV3IE1wKGZ1bmN0aW9uKHQpe3ZhciBlPWZ1bmN0aW9uKCl7bi5yZW1vdmVFdmVudExpc3RlbmVyKFwibG9hZFwiLGUpLHQobil9O24uY29tcGxldGU/dChuKTpuLmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsZSl9KS50aGVuKGZ1bmN0aW9uKCl7dC5nZXRTeXN0ZW0oKS5pc0Nvbm5lY3RlZCgpJiZiLmdldE9wdCh0KS5tYXAoZnVuY3Rpb24odCl7dmFyIGU9T3Uoe2VsZW1lbnQ6aX0pO1JnLnJlcGxhY2VBdCh0LDEsdnQuc29tZShlKSk7dmFyIG49di5nZXQoKSxvPXt4OjAseTowLHc6aS5kb20ubmF0dXJhbFdpZHRoLGg6aS5kb20ubmF0dXJhbEhlaWdodH07di5zZXQobyk7dmFyIHUscj1xUy5pbmZsYXRlKG8sLTIwLC0yMCk7aC5zZXQociksbi53PT09by53JiZuLmg9PT1vLmh8fCh1PWksYi5nZXRPcHQodCkuZWFjaChmdW5jdGlvbih0KXt2YXIgZT1DZSh0LmVsZW1lbnQpLG49eGUodC5lbGVtZW50KSxvPXUuZG9tLm5hdHVyYWxXaWR0aCxyPXUuZG9tLm5hdHVyYWxIZWlnaHQsaT1NYXRoLm1pbihlL28sbi9yKTsxPD1pP2cuc2V0KDEpOmcuc2V0KGkpfSkpLE8odCxpKX0pfSl9cmV0dXJue2RvbTp7dGFnOlwiZGl2XCIsYXR0cmlidXRlczp7cm9sZTpcInByZXNlbnRhdGlvblwifX0sY29tcG9uZW50czpbQy5tZW1Db250YWluZXIuYXNTcGVjKCksUy5tZW1Db250YWluZXIuYXNTcGVjKCksay5jb250YWluZXJdLGJlaGF2aW91cnM6ZWMoW0RmLmNvbmZpZyh7c3RvcmU6e21vZGU6XCJtYW51YWxcIixnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiB5LmdldEJsb2JTdGF0ZSgpfX19KSxtbShcImltYWdlLXRvb2xzLWV2ZW50c1wiLFtDcihqUy51bmRvKCksZnVuY3Rpb24oZSx0KXt2YXIgbj15LnVuZG8oKTt3KGUsbikudGhlbihmdW5jdGlvbih0KXt4KGUpLGkoZSl9KX0pLENyKGpTLnJlZG8oKSxmdW5jdGlvbihlLHQpe3ZhciBuPXkucmVkbygpO3coZSxuKS50aGVuKGZ1bmN0aW9uKHQpe3goZSksaShlKX0pfSksQ3IoalMuem9vbSgpLGZ1bmN0aW9uKHQsZSl7dmFyIG49ZS5ldmVudC5kaXJlY3Rpb247Uy56b29tKHQsbil9KSxDcihqUy5iYWNrKCksZnVuY3Rpb24odCxlKXt2YXIgbixvPXMobj10KTt3KG4sbykudGhlbihmdW5jdGlvbih0KXt4KG4pfSksKDAsZS5ldmVudC5zd2FwKSgpLFMuaGlkZUNyb3AoKX0pLENyKGpTLmFwcGx5KCksZnVuY3Rpb24odCxlKXt5LmFwcGx5VGVtcFN0YXRlKGZ1bmN0aW9uKCl7cyh0KSwoMCxlLmV2ZW50LnN3YXApKCl9KX0pLENyKGpTLnRyYW5zZm9ybSgpLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHIodCxlLmV2ZW50LnRyYW5zZm9ybSxzdCl9KSxDcihqUy50ZW1wVHJhbnNmb3JtKCksZnVuY3Rpb24odCxlKXt2YXIgbj1lLmV2ZW50LnRyYW5zZm9ybTtjKHQseS5nZXRUZW1wU3RhdGUoKS5ibG9iLG4sZnVuY3Rpb24odCl7cmV0dXJuIHkuYWRkVGVtcFN0YXRlKHQpfSxzdCl9KSxDcihqUy50cmFuc2Zvcm1BcHBseSgpLGZ1bmN0aW9uKHQsZSl7dmFyIG49dCxvPWUuZXZlbnQudHJhbnNmb3JtLHI9ZS5ldmVudC5zd2FwLGk9eS5nZXRCbG9iU3RhdGUoKS5ibG9iO2MobixpLG8sZnVuY3Rpb24odCl7dmFyIGU9eS5hZGRCbG9iU3RhdGUodCk7cmV0dXJuIHMobiksZX0scil9KSxDcihqUy5zd2FwKCksZnVuY3Rpb24oZSx0KXtrLnVwZGF0ZUJ1dHRvblVuZG9TdGF0ZXMoZSwhMSwhMSk7dmFyIG49dC5ldmVudC50cmFuc2Zvcm0sbz10LmV2ZW50LnN3YXA7bi5mb2xkKGZ1bmN0aW9uKCl7bygpfSxmdW5jdGlvbih0KXtyKGUsdCxvKX0pfSldKSxhdygpXSl9fWZ1bmN0aW9uIHJrKHQpe3JldHVybiFUdCh0LFwiaXRlbXNcIil9ZnVuY3Rpb24gaWsodCxlKXtmdW5jdGlvbiBuKHQpe3JldHVybntkb206e3RhZzpcInRkXCIsaW5uZXJIdG1sOmUudHJhbnNsYXRlKHQpfX19cmV0dXJue2RvbTp7dGFnOlwidGFibGVcIixjbGFzc2VzOltcInRveC1kaWFsb2dfX3RhYmxlXCJdfSxjb21wb25lbnRzOlt7ZG9tOnt0YWc6XCJ0aGVhZFwifSxjb21wb25lbnRzOlt7ZG9tOnt0YWc6XCJ0clwifSxjb21wb25lbnRzOkIodC5oZWFkZXIsZnVuY3Rpb24odCl7cmV0dXJue2RvbTp7dGFnOlwidGhcIixpbm5lckh0bWw6ZS50cmFuc2xhdGUodCl9fX0pfV19LHtkb206e3RhZzpcInRib2R5XCJ9LGNvbXBvbmVudHM6Qih0LmNlbGxzLGZ1bmN0aW9uKHQpe3JldHVybntkb206e3RhZzpcInRyXCJ9LGNvbXBvbmVudHM6Qih0LG4pfX0pfV0sYmVoYXZpb3VyczplYyhbcHkuY29uZmlnKHt9KSxWZy5jb25maWcoe30pXSl9fWZ1bmN0aW9uIHVrKG4sZSl7dmFyIHQ9bi5sYWJlbC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIG95KHQsZSl9KSxvPVtnZC5jb25maWcoe2Rpc2FibGVkOmZ1bmN0aW9uKCl7cmV0dXJuIG4uZGlzYWJsZWR8fGUuaXNEaXNhYmxlZCgpfX0pLHB2KCksRmcuY29uZmlnKHttb2RlOlwiZXhlY3V0aW9uXCIsdXNlRW50ZXI6ITAhPT1uLm11bHRpbGluZSx1c2VDb250cm9sRW50ZXI6ITA9PT1uLm11bHRpbGluZSxleGVjdXRlOmZ1bmN0aW9uKHQpe3JldHVybiB2cih0LGt5KSx2dC5zb21lKCEwKX19KSxtbShcInRleHRmaWVsZC1jaGFuZ2VcIixbQ3IoU2koKSxmdW5jdGlvbih0LGUpe2JyKHQseXkse25hbWU6bi5uYW1lfSl9KSxDcihNaSgpLGZ1bmN0aW9uKHQsZSl7YnIodCx5eSx7bmFtZTpuLm5hbWV9KX0pXSkscHkuY29uZmlnKHt9KV0scj1uLnZhbGlkYXRpb24ubWFwKGZ1bmN0aW9uKG8pe3JldHVybiBLeS5jb25maWcoe2dldFJvb3Q6ZnVuY3Rpb24odCl7cmV0dXJuIFl0KHQuZWxlbWVudCl9LGludmFsaWRDbGFzczpcInRveC1pbnZhbGlkXCIsdmFsaWRhdG9yOnt2YWxpZGF0ZTpmdW5jdGlvbih0KXt2YXIgZT1EZi5nZXRWYWx1ZSh0KSxuPW8udmFsaWRhdG9yKGUpO3JldHVybiBHeSghMD09PW4/Tm4udmFsdWUoZSk6Tm4uZXJyb3IobikpfSx2YWxpZGF0ZU9uTG9hZDpvLnZhbGlkYXRlT25Mb2FkfX0pfSkudG9BcnJheSgpLGk9bi5wbGFjZWhvbGRlci5mb2xkKHJ0KHt9KSxmdW5jdGlvbih0KXtyZXR1cm57cGxhY2Vob2xkZXI6ZS50cmFuc2xhdGUodCl9fSksdT1uLmlucHV0TW9kZS5mb2xkKHJ0KHt9KSxmdW5jdGlvbih0KXtyZXR1cm57aW5wdXRtb2RlOnR9fSksYT1sdChsdCh7fSxpKSx1KTtyZXR1cm4gbnkodCxteS5wYXJ0cy5maWVsZCh7dGFnOiEwPT09bi5tdWx0aWxpbmU/XCJ0ZXh0YXJlYVwiOlwiaW5wdXRcIixpbnB1dEF0dHJpYnV0ZXM6YSxpbnB1dENsYXNzZXM6W24uY2xhc3NuYW1lXSxpbnB1dEJlaGF2aW91cnM6ZWMoZnQoW28scl0pKSxzZWxlY3RPbkZvY3VzOiExLGZhY3Rvcnk6RHl9KSwobi5mbGV4P1tcInRveC1mb3JtX19ncm91cC0tc3RyZXRjaGVkXCJdOltdKS5jb25jYXQobi5tYXhpbWl6ZWQ/W1widG94LWZvcm0tZ3JvdXAtLW1heGltaXplXCJdOltdKSxbZ2QuY29uZmlnKHtkaXNhYmxlZDpmdW5jdGlvbigpe3JldHVybiBuLmRpc2FibGVkfHxlLmlzRGlzYWJsZWQoKX0sb25EaXNhYmxlZDpmdW5jdGlvbih0KXtteS5nZXRGaWVsZCh0KS5lYWNoKGdkLmRpc2FibGUpfSxvbkVuYWJsZWQ6ZnVuY3Rpb24odCl7bXkuZ2V0RmllbGQodCkuZWFjaChnZC5lbmFibGUpfX0pLHB2KCldKX1mdW5jdGlvbiBhayh0KXt2YXIgZT1QbyhudWxsKTtyZXR1cm4gd3Uoe3JlYWRTdGF0ZTpmdW5jdGlvbigpe3JldHVybnt0aW1lcjpudWxsIT09ZS5nZXQoKT9cInNldFwiOlwidW5zZXRcIn19LHNldFRpbWVyOmZ1bmN0aW9uKHQpe2Uuc2V0KHQpfSxjYW5jZWw6ZnVuY3Rpb24oKXt2YXIgdD1lLmdldCgpO251bGwhPT10JiZ0LmNhbmNlbCgpfX0pfWZ1bmN0aW9uIGNrKHQsZSxuKXt2YXIgbz1EZi5nZXRWYWx1ZShuKTtEZi5zZXRWYWx1ZShlLG8pLHMxKGUpfWZ1bmN0aW9uIHNrKHQsZSl7dmFyIG49dC5lbGVtZW50LG89UXIobikscj1uLmRvbTtcIm51bWJlclwiIT09aWUobixcInR5cGVcIikmJmUocixvKX1mdW5jdGlvbiBsayh0KXtyZXR1cm57dHlwZTpcIm1lbnVpdGVtXCIsdmFsdWU6dC51cmwsdGV4dDp0LnRpdGxlLG1ldGE6e2F0dGFjaDp0LmF0dGFjaH0sb25BY3Rpb246c3R9fWZ1bmN0aW9uIGZrKHQsZSl7cmV0dXJue3R5cGU6XCJtZW51aXRlbVwiLHZhbHVlOmUsdGV4dDp0LG1ldGE6e2F0dGFjaDp2b2lkIDB9LG9uQWN0aW9uOnN0fX1mdW5jdGlvbiBkayh0LGUpe3JldHVybiBuPXQsQihGKGUsZnVuY3Rpb24odCl7cmV0dXJuIHQudHlwZT09PW59KSxsayk7dmFyIG59ZnVuY3Rpb24gbWsodCxlKXt2YXIgbj10LnRvTG93ZXJDYXNlKCk7cmV0dXJuIEYoZSxmdW5jdGlvbih0KXtyZXR1cm4gdXQoKHZvaWQgMCE9PXQubWV0YSYmdm9pZCAwIT09dC5tZXRhLnRleHQ/dC5tZXRhOnQpLnRleHQudG9Mb3dlckNhc2UoKSxuKXx8dXQodC52YWx1ZS50b0xvd2VyQ2FzZSgpLG4pfSl9ZnVuY3Rpb24gZ2sodSxhLGMpe2Z1bmN0aW9uIHIodCl7dmFyIGU9RGYuZ2V0VmFsdWUodCk7Yy5hZGRUb0hpc3RvcnkoZS52YWx1ZSx1LmZpbGV0eXBlKX12YXIgdCxlLG4sbyxpPWEuc2hhcmVkLnByb3ZpZGVycyxzPW15LnBhcnRzLmZpZWxkKHtmYWN0b3J5Om0xLGRpc21pc3NPbkJsdXI6ITAsaW5wdXRDbGFzc2VzOltcInRveC10ZXh0ZmllbGRcIl0sc2FuZGJveENsYXNzZXM6W1widG94LWRpYWxvZ19fcG9wdXBzXCJdLGlucHV0QXR0cmlidXRlczp7XCJhcmlhLWVycm9ybWVzc2FnZVwiOnYxLHR5cGU6XCJ1cmxcIn0sbWluQ2hhcnM6MCxyZXNwb25zZVRpbWU6MCxmZXRjaDpmdW5jdGlvbih0KXt2YXIgbixvLGUscixpPWowKChuPXUuZmlsZXR5cGUsbz1jLGU9RGYuZ2V0VmFsdWUodCkscj12b2lkIDAhPT1lLm1ldGEudGV4dD9lLm1ldGEudGV4dDplLnZhbHVlLG8uZ2V0TGlua0luZm9ybWF0aW9uKCkuZm9sZChmdW5jdGlvbigpe3JldHVybltdfSxmdW5jdGlvbih0KXt2YXIgZT1tayhyLEIoby5nZXRIaXN0b3J5KG4pLGZ1bmN0aW9uKHQpe3JldHVybiBmayh0LHQpfSkpO3JldHVyblwiZmlsZVwiPT09bj9SKFtlLG1rKHIsZGsoXCJoZWFkZXJcIix0LnRhcmdldHMpKSxtayhyLGZ0KFt2dC5mcm9tKHQuYW5jaG9yVG9wKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIGZrKFwiPHRvcD5cIix0KX0pLnRvQXJyYXkoKSxkayhcImFuY2hvclwiLHQudGFyZ2V0cyksdnQuZnJvbSh0LmFuY2hvckJvdHRvbSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBmayhcIjxib3R0b20+XCIsdCl9KS50b0FycmF5KCldKSldLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIDA9PT10Lmxlbmd0aHx8MD09PWUubGVuZ3RoP3QuY29uY2F0KGUpOnQuY29uY2F0KGgxLGUpfSxbXSk6ZX0pKSxTaC5CVUJCTEVfVE9fU0FOREJPWCxhLCExKTtyZXR1cm4gR3koaSl9LGdldEhvdHNwb3Q6ZnVuY3Rpb24odCl7cmV0dXJuIHAuZ2V0T3B0KHQpfSxvblNldFZhbHVlOmZ1bmN0aW9uKHQsZSl7dC5oYXNDb25maWd1cmVkKEt5KSYmS3kucnVuKHQpLmdldChzdCl9LHR5cGVhaGVhZEJlaGF2aW91cnM6ZWMoZnQoW2MuZ2V0VmFsaWRhdGlvbkhhbmRsZXIoKS5tYXAoZnVuY3Rpb24obil7cmV0dXJuIEt5LmNvbmZpZyh7Z2V0Um9vdDpmdW5jdGlvbih0KXtyZXR1cm4gWXQodC5lbGVtZW50KX0saW52YWxpZENsYXNzOlwidG94LWNvbnRyb2wtd3JhcC0tc3RhdHVzLWludmFsaWRcIixub3RpZnk6e29uSW52YWxpZDpmdW5jdGlvbih0LGUpe2YuZ2V0T3B0KHQpLmVhY2goZnVuY3Rpb24odCl7b2UodC5lbGVtZW50LFwidGl0bGVcIixpLnRyYW5zbGF0ZShlKSl9KX19LHZhbGlkYXRvcjp7dmFsaWRhdGU6ZnVuY3Rpb24odCl7dmFyIGU9RGYuZ2V0VmFsdWUodCk7cmV0dXJuIHAxKGZ1bmN0aW9uKG8pe24oe3R5cGU6dS5maWxldHlwZSx1cmw6ZS52YWx1ZX0sZnVuY3Rpb24odCl7dmFyIGUsbjtcImludmFsaWRcIj09PXQuc3RhdHVzPyhlPU5uLmVycm9yKHQubWVzc2FnZSksbyhlKSk6KG49Tm4udmFsdWUodC5tZXNzYWdlKSxvKG4pKX0pfSl9LHZhbGlkYXRlT25Mb2FkOiExfX0pfSkudG9BcnJheSgpLFtnZC5jb25maWcoe2Rpc2FibGVkOmZ1bmN0aW9uKCl7cmV0dXJuIHUuZGlzYWJsZWR8fGkuaXNEaXNhYmxlZCgpfX0pLHB5LmNvbmZpZyh7fSksbW0oXCJ1cmxpbnB1dC1ldmVudHNcIixmdChbXCJmaWxlXCI9PT11LmZpbGV0eXBlP1tDcihTaSgpLGZ1bmN0aW9uKHQpe2JyKHQseXkse25hbWU6dS5uYW1lfSl9KV06W10sW0NyKGtpKCksZnVuY3Rpb24odCl7YnIodCx5eSx7bmFtZTp1Lm5hbWV9KSxyKHQpfSksQ3IoTWkoKSxmdW5jdGlvbih0KXticih0LHl5LHtuYW1lOnUubmFtZX0pLHIodCl9KV1dKSldXSkpLGV2ZW50T3JkZXI6KCh0PXt9KVtTaSgpXT1bXCJzdHJlYW1pbmdcIixcInVybGlucHV0LWV2ZW50c1wiLFwiaW52YWxpZGF0aW5nXCJdLHQpLG1vZGVsOntnZXREaXNwbGF5VGV4dDpmdW5jdGlvbih0KXtyZXR1cm4gdC52YWx1ZX0sc2VsZWN0c092ZXI6ITEscG9wdWxhdGVGcm9tQnJvd3NlOiExfSxtYXJrZXJzOntvcGVuQ2xhc3M6XCJ0b3gtdGV4dGZpZWxkLS1wb3B1cC1vcGVuXCJ9LGxhenlTaW5rOmEuc2hhcmVkLmdldFNpbmsscGFydHM6e21lbnU6WnAoMCwwLFwibm9ybWFsXCIpfSxvbkV4ZWN1dGU6ZnVuY3Rpb24odCxlLG4pe2JyKGUsa3kse30pfSxvbkl0ZW1FeGVjdXRlOmZ1bmN0aW9uKHQsZSxuLG8pe3IodCksYnIodCx5eSx7bmFtZTp1Lm5hbWV9KX19KSxsPXUubGFiZWwubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBveSh0LGkpfSksZj1IbSgoZT1cImludmFsaWRcIixuPXZ0LnNvbWUodjEpLFhtKFwid2FybmluZ1wiLHt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1pY29uXCIsXCJ0b3gtY29udHJvbC13cmFwX19zdGF0dXMtaWNvbi1cIitlXSxhdHRyaWJ1dGVzOmx0KHt0aXRsZTppLnRyYW5zbGF0ZShvPXZvaWQgMD09PW8/ZTpvKSxcImFyaWEtbGl2ZVwiOlwicG9saXRlXCJ9LG4uZm9sZChmdW5jdGlvbigpe3JldHVybnt9fSxmdW5jdGlvbih0KXtyZXR1cm57aWQ6dH19KSl9LGkuaWNvbnMpKSksZD1IbSh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1jb250cm9sLXdyYXBfX3N0YXR1cy1pY29uLXdyYXBcIl19LGNvbXBvbmVudHM6W2YuYXNTcGVjKCldfSksbT1jLmdldFVybFBpY2tlcih1LmZpbGV0eXBlKSxnPUlyKFwiYnJvd3Nlci51cmwuZXZlbnRcIikscD1IbSh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1jb250cm9sLXdyYXBcIl19LGNvbXBvbmVudHM6W3MsZC5hc1NwZWMoKV0sYmVoYXZpb3VyczplYyhbZ2QuY29uZmlnKHtkaXNhYmxlZDpmdW5jdGlvbigpe3JldHVybiB1LmRpc2FibGVkfHxpLmlzRGlzYWJsZWQoKX19KV0pfSksaD1IbShKMCh7bmFtZTp1Lm5hbWUsaWNvbjp2dC5zb21lKFwiYnJvd3NlXCIpLHRleHQ6dS5sYWJlbC5nZXRPcihcIlwiKSxkaXNhYmxlZDp1LmRpc2FibGVkLHByaW1hcnk6ITEsYm9yZGVybGVzczohMH0sZnVuY3Rpb24odCl7cmV0dXJuIHZyKHQsZyl9LGksW10sW1widG94LWJyb3dzZS11cmxcIl0pKTtyZXR1cm4gbXkuc2tldGNoKHtkb206YnkoW10pLGNvbXBvbmVudHM6bC50b0FycmF5KCkuY29uY2F0KFt7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1mb3JtX19jb250cm9scy1oLXN0YWNrXCJdfSxjb21wb25lbnRzOmZ0KFtbcC5hc1NwZWMoKV0sbS5tYXAoZnVuY3Rpb24oKXtyZXR1cm4gaC5hc1NwZWMoKX0pLnRvQXJyYXkoKV0pfV0pLGZpZWxkQmVoYXZpb3VyczplYyhbZ2QuY29uZmlnKHtkaXNhYmxlZDpmdW5jdGlvbigpe3JldHVybiB1LmRpc2FibGVkfHxpLmlzRGlzYWJsZWQoKX0sb25EaXNhYmxlZDpmdW5jdGlvbih0KXtteS5nZXRGaWVsZCh0KS5lYWNoKGdkLmRpc2FibGUpLGguZ2V0T3B0KHQpLmVhY2goZ2QuZGlzYWJsZSl9LG9uRW5hYmxlZDpmdW5jdGlvbih0KXtteS5nZXRGaWVsZCh0KS5lYWNoKGdkLmVuYWJsZSksaC5nZXRPcHQodCkuZWFjaChnZC5lbmFibGUpfX0pLHB2KCksbW0oXCJ1cmwtaW5wdXQtZXZlbnRzXCIsW0NyKGcsZnVuY3Rpb24obyl7Y2QuZ2V0Q3VycmVudChvKS5lYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PURmLmdldFZhbHVlKGUpLG49bHQoe2ZpZWxkbmFtZTp1Lm5hbWV9LHQpO20uZWFjaChmdW5jdGlvbih0KXt0KG4pLmdldChmdW5jdGlvbih0KXtEZi5zZXRWYWx1ZShlLHQpLGJyKG8seXkse25hbWU6dS5uYW1lfSl9KX0pfSl9KV0pXSl9KX1mdW5jdGlvbiBwayhyKXtyZXR1cm4gZnVuY3Rpb24oZSxuLG8pe3JldHVybiB0dChuLFwibmFtZVwiKS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIHIobixvKX0sZnVuY3Rpb24odCl7cmV0dXJuIGUuZmllbGQodCxyKG4sbykpfSl9fWZ1bmN0aW9uIGhrKGUsdCxuKXt2YXIgbz1ZbyhuLHtzaGFyZWQ6e2ludGVycHJldGVyOmZ1bmN0aW9uKHQpe3JldHVybiB4MShlLHQsbyl9fX0pO3JldHVybiB4MShlLHQsbyl9ZnVuY3Rpb24gdmsodCxlLG4pe2Z1bmN0aW9uIG8oKXtyZXR1cm4gTXQuZnJvbURvbSh0LmdldENvbnRlbnRBcmVhQ29udGFpbmVyKCkpfWZ1bmN0aW9uIHIoKXtyZXR1cm4gcHx8IW4oKX12YXIgaSx1LGEsYyxzLGwsZixkLG0sZyxwPXN2KHQpO3JldHVybntpbmxpbmVEaWFsb2c6KGY9byxkPWUsbT1yLGc9e21heEhlaWdodEZ1bmN0aW9uOk5jKCl9LGZ1bmN0aW9uKCl7cmV0dXJuIG0oKT97dHlwZTpcIm5vZGVcIixyb290OnRlKGYoKSksbm9kZTp2dC5mcm9tKGYoKSksYnViYmxlOlNjKDEyLDEyLHcxKSxsYXlvdXRzOntvblJ0bDpmdW5jdGlvbigpe3JldHVybltNbV19LG9uTHRyOmZ1bmN0aW9uKCl7cmV0dXJuW0JtXX19LG92ZXJyaWRlczpnfTp7dHlwZTpcImhvdHNwb3RcIixob3RzcG90OmQoKSxidWJibGU6U2MoLTEyLDEyLHcxKSxsYXlvdXRzOntvblJ0bDpmdW5jdGlvbigpe3JldHVybltYYV19LG9uTHRyOmZ1bmN0aW9uKCl7cmV0dXJuW1lhXX19LG92ZXJyaWRlczpnfX0pLGJhbm5lcjooYz1vLHM9ZSxsPXIsZnVuY3Rpb24oKXtyZXR1cm4gbCgpP3t0eXBlOlwibm9kZVwiLHJvb3Q6dGUoYygpKSxub2RlOnZ0LmZyb20oYygpKSxsYXlvdXRzOntvblJ0bDpmdW5jdGlvbigpe3JldHVybltjcF19LG9uTHRyOmZ1bmN0aW9uKCl7cmV0dXJuW2NwXX19fTp7dHlwZTpcImhvdHNwb3RcIixob3RzcG90OnMoKSxsYXlvdXRzOntvblJ0bDpmdW5jdGlvbigpe3JldHVyblskYV19LG9uTHRyOmZ1bmN0aW9uKCl7cmV0dXJuWyRhXX19fX0pLGN1cnNvcjoodT10LGZ1bmN0aW9uKCl7cmV0dXJue3R5cGU6XCJzZWxlY3Rpb25cIixyb290OmEoKSxnZXRTZWxlY3Rpb246ZnVuY3Rpb24oKXt2YXIgdD11LnNlbGVjdGlvbi5nZXRSbmcoKTtyZXR1cm4gdnQuc29tZShtcy5yYW5nZShNdC5mcm9tRG9tKHQuc3RhcnRDb250YWluZXIpLHQuc3RhcnRPZmZzZXQsTXQuZnJvbURvbSh0LmVuZENvbnRhaW5lciksdC5lbmRPZmZzZXQpKX19fSksbm9kZTooaT1hPWZ1bmN0aW9uKCl7cmV0dXJuIE10LmZyb21Eb20odC5nZXRCb2R5KCkpfSxmdW5jdGlvbih0KXtyZXR1cm57dHlwZTpcIm5vZGVcIixyb290OmkoKSxub2RlOnR9fSl9fWZ1bmN0aW9uIGJrKGkpe3JldHVybiB2dC5mcm9tKGkuZ2V0UGFyYW0oXCJzdHlsZV9mb3JtYXRzXCIpKS5maWx0ZXIoYykubWFwKGZ1bmN0aW9uKHQpe3ZhciBlLG4sbz0oZT1pLG49azEodCksZS5mb3JtYXR0ZXI/cihuLmN1c3RvbUZvcm1hdHMpOmUub24oXCJpbml0XCIsZnVuY3Rpb24oKXtyKG4uY3VzdG9tRm9ybWF0cyl9KSxuLmZvcm1hdHMpO2Z1bmN0aW9uIHIodCl7U3QodCxmdW5jdGlvbih0KXtlLmZvcm1hdHRlci5oYXModC5uYW1lKXx8ZS5mb3JtYXR0ZXIucmVnaXN0ZXIodC5uYW1lLHQuZm9ybWF0KX0pfXJldHVybiBpLmdldFBhcmFtKFwic3R5bGVfZm9ybWF0c19tZXJnZVwiLCExLFwiYm9vbGVhblwiKT9TMS5jb25jYXQobyk6b30pLmdldE9yKFMxKX1mdW5jdGlvbiB5ayh0LGUsbil7dmFyIG89e3R5cGU6XCJmb3JtYXR0ZXJcIixpc1NlbGVjdGVkOmUodC5mb3JtYXQpLGdldFN0eWxlUHJldmlldzpuKHQuZm9ybWF0KX07cmV0dXJuIFlvKHQsbyl9ZnVuY3Rpb24geGsoYyx0LHMsbCl7dmFyIGY9ZnVuY3Rpb24odCl7cmV0dXJuIEIodCxmdW5jdGlvbih0KXt2YXIgZSxuLG8scixpLHU9Q3QodCk7aWYoZXQodCxcIml0ZW1zXCIpKXt2YXIgYT1mKHQuaXRlbXMpO3JldHVybiBZbyhZbyh0LHt0eXBlOlwic3VibWVudVwifSkse2dldFN0eWxlSXRlbXM6cnQoYSl9KX1yZXR1cm4gZXQodCxcImZvcm1hdFwiKT95ayh0LHMsbCk6MT09PXUubGVuZ3RoJiZ3dCh1LFwidGl0bGVcIik/WW8odCx7dHlwZTpcInNlcGFyYXRvclwifSk6KHI9e3R5cGU6XCJmb3JtYXR0ZXJcIixmb3JtYXQ6bz1cImN1c3RvbS1cIisobj15KChlPXQpLm5hbWUpP2UubmFtZTpJcihlLnRpdGxlKSksaXNTZWxlY3RlZDpzKG8pLGdldFN0eWxlUHJldmlldzpsKG8pfSxpPVlvKGUsciksYy5mb3JtYXR0ZXIucmVnaXN0ZXIobixpKSxpKX0pfTtyZXR1cm4gZih0KX1mdW5jdGlvbiB3ayhuKXtyZXR1cm4gZnVuY3Rpb24odCl7aWYoayhlPXQpJiYxPT09ZS5ub2RlVHlwZSl7aWYodC5jb250ZW50RWRpdGFibGU9PT1uKXJldHVybiEwO2lmKHQuZ2V0QXR0cmlidXRlKFwiZGF0YS1tY2UtY29udGVudGVkaXRhYmxlXCIpPT09bilyZXR1cm4hMH12YXIgZTtyZXR1cm4hMX19ZnVuY3Rpb24gU2sodCxlLG4sbyxyKXtyZXR1cm57dHlwZTp0LHRpdGxlOmUsdXJsOm4sbGV2ZWw6byxhdHRhY2g6cn19ZnVuY3Rpb24ga2sodCl7cmV0dXJuIHQuaW5uZXJUZXh0fHx0LnRleHRDb250ZW50fWZ1bmN0aW9uIENrKHQpe3JldHVybiB0JiZcIkFcIj09PXQubm9kZU5hbWUmJnZvaWQgMCE9PSh0LmlkfHx0Lm5hbWUpJiZKQyh0KX1mdW5jdGlvbiBPayh0KXtyZXR1cm4gdCYmL14oSFsxLTZdKSQvLnRlc3QodC5ub2RlTmFtZSl9ZnVuY3Rpb24gX2sodCl7cmV0dXJuIE9rKHQpJiZKQyh0KX1mdW5jdGlvbiBUayh0KXt2YXIgZSxuPXQuaWR8fElyKFwiaFwiKTtyZXR1cm4gU2soXCJoZWFkZXJcIixrayh0KSxcIiNcIituLE9rKGU9dCk/cGFyc2VJbnQoZS5ub2RlTmFtZS5zdWJzdHIoMSksMTApOjAsZnVuY3Rpb24oKXt0LmlkPW59KX1mdW5jdGlvbiBFayh0KXt2YXIgZT10LmlkfHx0Lm5hbWU7cmV0dXJuIFNrKFwiYW5jaG9yXCIsa2sodCl8fFwiI1wiK2UsXCIjXCIrZSwwLHN0KX1mdW5jdGlvbiBEayh0KXtyZXR1cm4gMDxDMSh0LnRpdGxlKS5sZW5ndGh9ZnVuY3Rpb24gQWsodCl7cmV0dXJuIHkodCkmJi9eaHR0cHM/Ly50ZXN0KHQpfWZ1bmN0aW9uIEJrKHQpe3JldHVybiB4KHQpJiZRKHQsZnVuY3Rpb24odCl7cmV0dXJuIShjKGU9dCkmJmUubGVuZ3RoPD01JiZMKGUsQWspKTt2YXIgZX0pLmlzTm9uZSgpfWZ1bmN0aW9uIE1rKCl7dmFyIHQsZT1kYi5nZXRJdGVtKEUxKTtpZihudWxsPT09ZSlyZXR1cm57fTt0cnl7dD1KU09OLnBhcnNlKGUpfWNhdGNoKHQpe2lmKHQgaW5zdGFuY2VvZiBTeW50YXhFcnJvcilyZXR1cm4gY29uc29sZS5sb2coXCJMb2NhbCBzdG9yYWdlIFwiK0UxK1wiIHdhcyBub3QgdmFsaWQgSlNPTlwiLHQpLHt9O3Rocm93IHR9cmV0dXJuIEJrKHQpP3Q6KGNvbnNvbGUubG9nKFwiTG9jYWwgc3RvcmFnZSBcIitFMStcIiB3YXMgbm90IHZhbGlkIGZvcm1hdFwiLHQpLHt9KX1mdW5jdGlvbiBGayh0KXtyZXR1cm4gdHQoTWsoKSx0KS5nZXRPcihbXSl9ZnVuY3Rpb24gSWsoZSx0KXt2YXIgbixvO0FrKGUpJiYobz1GKHR0KG49TWsoKSx0KS5nZXRPcihbXSksZnVuY3Rpb24odCl7cmV0dXJuIHQhPT1lfSksblt0XT1bZV0uY29uY2F0KG8pLnNsaWNlKDAsNSksZnVuY3Rpb24odCl7aWYoIUJrKHQpKXRocm93IG5ldyBFcnJvcihcIkJhZCBmb3JtYXQgZm9yIGhpc3Rvcnk6XFxuXCIrSlNPTi5zdHJpbmdpZnkodCkpO2RiLnNldEl0ZW0oRTEsSlNPTi5zdHJpbmdpZnkodCkpfShuKSl9ZnVuY3Rpb24gUmsodCl7cmV0dXJuISF0fWZ1bmN0aW9uIE5rKHQpe3JldHVybiBkdChmUy5tYWtlTWFwKHQsL1ssIF0vKSxSayl9ZnVuY3Rpb24gUGsodCl7cmV0dXJuIHZ0LmZyb20odC5nZXRQYXJhbShcImZpbGVfcGlja2VyX2NhbGxiYWNrXCIpKS5maWx0ZXIoUyl9ZnVuY3Rpb24gVmsodCl7cmV0dXJuIHZ0LmZyb20odCkuZmlsdGVyKHkpLmdldE9yVW5kZWZpbmVkKCl9ZnVuY3Rpb24gSGsobCl7cmV0dXJue2dldEhpc3Rvcnk6RmssYWRkVG9IaXN0b3J5OklrLGdldExpbmtJbmZvcm1hdGlvbjpmdW5jdGlvbigpe3JldHVybiExPT09KHQ9bCkuZ2V0UGFyYW0oXCJ0eXBlYWhlYWRfdXJsc1wiKT92dC5ub25lKCk6dnQuc29tZSh7dGFyZ2V0czpUMSh0LmdldEJvZHkoKSksYW5jaG9yVG9wOlZrKHQuZ2V0UGFyYW0oXCJhbmNob3JfdG9wXCIsXCIjdG9wXCIpKSxhbmNob3JCb3R0b206VmsodC5nZXRQYXJhbShcImFuY2hvcl9ib3R0b21cIixcIiNib3R0b21cIikpfSk7dmFyIHR9LGdldFZhbGlkYXRpb25IYW5kbGVyOmZ1bmN0aW9uKCl7cmV0dXJuIHZ0LmZyb20odm9pZCAwPT09KGU9KHQ9bCkuZ2V0UGFyYW0oXCJmaWxlX3BpY2tlcl92YWxpZGF0b3JfaGFuZGxlclwiLHZvaWQgMCxcImZ1bmN0aW9uXCIpKT90LmdldFBhcmFtKFwiZmlsZXBpY2tlcl92YWxpZGF0b3JfaGFuZGxlclwiLHZvaWQgMCxcImZ1bmN0aW9uXCIpOmUpO3ZhciB0LGV9LGdldFVybFBpY2tlcjpmdW5jdGlvbih0KXtyZXR1cm4gZT1jPWwsbj1zPXQscj12dC5zb21lKChvPWUpLmdldFBhcmFtKFwiZmlsZV9waWNrZXJfdHlwZXNcIikpLmZpbHRlcihSayksaT12dC5zb21lKG8uZ2V0UGFyYW0oXCJmaWxlX2Jyb3dzZXJfY2FsbGJhY2tfdHlwZXNcIikpLmZpbHRlcihSayksdT1yLm9yKGkpLm1hcChOayksYT1QayhvKS5mb2xkKFQsZnVuY3Rpb24odCl7cmV0dXJuIHUuZm9sZChELGZ1bmN0aW9uKHQpe3JldHVybiAwPEN0KHQpLmxlbmd0aCYmdH0pfSksKHcoYSk/YT9QayhlKTp2dC5ub25lKCk6YVtuXT9QayhlKTp2dC5ub25lKCkpLm1hcChmdW5jdGlvbihvKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIFd5KGZ1bmN0aW9uKG4pe3ZhciB0PWx0KHtmaWxldHlwZTpzLGZpZWxkbmFtZTplLmZpZWxkbmFtZX0sdnQuZnJvbShlLm1ldGEpLmdldE9yKHt9KSk7by5jYWxsKGMsZnVuY3Rpb24odCxlKXtpZigheSh0KSl0aHJvdyBuZXcgRXJyb3IoXCJFeHBlY3RlZCB2YWx1ZSB0byBiZSBzdHJpbmdcIik7aWYodm9pZCAwIT09ZSYmIXgoZSkpdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgbWV0YSB0byBiZSBhIG9iamVjdFwiKTtuKHt2YWx1ZTp0LG1ldGE6ZX0pfSxlLnZhbHVlLHQpfSl9fSk7dmFyIGUsbixvLHIsaSx1LGEsYyxzfX19ZnVuY3Rpb24gTGsodCxlLG4pe3ZhciBvLHIsaSx1LGEsYyxzLGwsZixkLG0sZyxwLGg9UG8oITEpLHY9e2lzUG9zaXRpb25lZEF0VG9wOmZ1bmN0aW9uKCl7cmV0dXJuXCJ0b3BcIj09PW8uZ2V0KCl9LGdldERvY2tpbmdNb2RlOihvPVBvKGF2KGUpP1wiYm90dG9tXCI6XCJ0b3BcIikpLmdldCxzZXREb2NraW5nTW9kZTpvLnNldH0sYj17c2hhcmVkOntwcm92aWRlcnM6e2ljb25zOmZ1bmN0aW9uKCl7cmV0dXJuIGUudWkucmVnaXN0cnkuZ2V0QWxsKCkuaWNvbnN9LG1lbnVJdGVtczpmdW5jdGlvbigpe3JldHVybiBlLnVpLnJlZ2lzdHJ5LmdldEFsbCgpLm1lbnVJdGVtc30sdHJhbnNsYXRlOmRwLnRyYW5zbGF0ZSxpc0Rpc2FibGVkOmZ1bmN0aW9uKCl7cmV0dXJuIGUubW9kZS5pc1JlYWRPbmx5KCl8fGUudWkuaXNEaXNhYmxlZCgpfSxnZXRTZXR0aW5nOmUuZ2V0UGFyYW0uYmluZChlKX0saW50ZXJwcmV0ZXI6ZnVuY3Rpb24odCl7cmV0dXJuIHgxKHkxLHQsYil9LGFuY2hvcnM6dmsoZSxuLHYuaXNQb3NpdGlvbmVkQXRUb3ApLGhlYWRlcjp2LGdldFNpbms6ZnVuY3Rpb24oKXtyZXR1cm4gTm4udmFsdWUodCl9fSx1cmxpbnB1dDpIayhlKSxzdHlsZXNlbGVjdDooZj1QbyhbXSksZD1QbyhbXSksbT1QbyhbXSksZz1QbyhbXSkscD1QbyghKGw9ZnVuY3Rpb24odCl7dmFyIGU9dC5pdGVtcztyZXR1cm4gdm9pZCAwIT09ZSYmMDxlLmxlbmd0aD9IKGUsbCk6W3QuZm9ybWF0XX0pKSwocz1lKS5vbihcIlByZUluaXRcIixmdW5jdGlvbih0KXt2YXIgZT1iayhzKSxuPXhrKHMsZSx5LHgpO2Yuc2V0KG4pLGQuc2V0KEgobixsKSl9KSxzLm9uKFwiYWRkU3R5bGVNb2RpZmljYXRpb25zXCIsZnVuY3Rpb24odCl7dmFyIGU9eGsocyx0Lml0ZW1zLHkseCk7bS5zZXQoZSkscC5zZXQodC5yZXBsYWNlKSxnLnNldChIKGUsbCkpfSkse2dldERhdGE6ZnVuY3Rpb24oKXt2YXIgdD1wLmdldCgpP1tdOmYuZ2V0KCksZT1tLmdldCgpO3JldHVybiB0LmNvbmNhdChlKX0sZ2V0RmxhdHRlbmVkS2V5czpmdW5jdGlvbigpe3ZhciB0PXAuZ2V0KCk/W106ZC5nZXQoKSxlPWcuZ2V0KCk7cmV0dXJuIHQuY29uY2F0KGUpfX0pLGNvbG9yaW5wdXQ6e2NvbG9yUGlja2VyOmZ1bmN0aW9uKHQsZSl7SWIoYykodCxlKX0saGFzQ3VzdG9tQ29sb3JzOmZ1bmN0aW9uKCl7cmV0dXJuIGdiKGEpfSxnZXRDb2xvcnM6ZnVuY3Rpb24oKXtyZXR1cm4gcGIodSl9LGdldENvbG9yQ29sczooaT11PWE9Yz1lLGZ1bmN0aW9uKCl7cmV0dXJuIHZiKGkpfSl9LGRpYWxvZzp7aXNEcmFnZ2FibGVNb2RhbDoocj1lLGZ1bmN0aW9uKCl7cmV0dXJuIHIuZ2V0UGFyYW0oXCJkcmFnZ2FibGVfbW9kYWxcIiwhMSxcImJvb2xlYW5cIil9KX0saXNDb250ZXh0TWVudU9wZW46ZnVuY3Rpb24oKXtyZXR1cm4gaC5nZXQoKX0sc2V0Q29udGV4dE1lbnVTdGF0ZTpmdW5jdGlvbih0KXtyZXR1cm4gaC5zZXQodCl9fTtmdW5jdGlvbiB5KHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBzLmZvcm1hdHRlci5tYXRjaCh0KX19ZnVuY3Rpb24geChlKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgdD1zLmZvcm1hdHRlci5nZXQoZSk7cmV0dXJuIHZvaWQgMCE9PXQ/dnQuc29tZSh7dGFnOjA8dC5sZW5ndGgmJih0WzBdLmlubGluZXx8dFswXS5ibG9jayl8fFwiZGl2XCIsc3R5bGVzOnMuZG9tLnBhcnNlU3R5bGUocy5mb3JtYXR0ZXIuZ2V0Q3NzVGV4dChlKSl9KTp2dC5ub25lKCl9fXJldHVybiBifWZ1bmN0aW9uIHprKHQpe3JldHVybihtdChwZSh0LFwicG9zaXRpb25cIiksXCJmaXhlZFwiKT92dC5ub25lKCk6cXQodCkpLm9yVGh1bmsoZnVuY3Rpb24oKXt2YXIgbj1NdC5mcm9tVGFnKFwic3BhblwiKTtyZXR1cm4gWXQodCkuYmluZChmdW5jdGlvbih0KXtUbih0LG4pO3ZhciBlPXF0KG4pO3JldHVybiBFbihuKSxlfSl9KX1mdW5jdGlvbiBVayh0KXtyZXR1cm4gemsodCkubWFwKGtlKS5nZXRPclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIGtuKDAsMCl9KX1mdW5jdGlvbiBqayh0LGUpe3ZhciBuPXQuZWxlbWVudDtZcihuLGUudHJhbnNpdGlvbkNsYXNzKSxxcihuLGUuZmFkZU91dENsYXNzKSxZcihuLGUuZmFkZUluQ2xhc3MpLGUub25TaG93KHQpfWZ1bmN0aW9uIFdrKHQsZSl7dmFyIG49dC5lbGVtZW50O1lyKG4sZS50cmFuc2l0aW9uQ2xhc3MpLHFyKG4sZS5mYWRlSW5DbGFzcyksWXIobixlLmZhZGVPdXRDbGFzcyksZS5vbkhpZGUodCl9ZnVuY3Rpb24gR2sodCxlLG4pe3JldHVybiBMKHQsZnVuY3Rpb24odCl7c3dpdGNoKHQpe2Nhc2VcImJvdHRvbVwiOnJldHVybiBlLmJvdHRvbTw9bi5ib3R0b207Y2FzZVwidG9wXCI6cmV0dXJuIGUueT49bi55fX0pfWZ1bmN0aW9uIFhrKGUsdCl7cmV0dXJuIHQuZ2V0SW5pdGlhbFBvcygpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gQm4odC5ib3VuZHMueCx0LmJvdW5kcy55LENlKGUpLHhlKGUpKX0pfWZ1bmN0aW9uIFlrKG4sbyxyKXtyZXR1cm4gci5nZXRJbml0aWFsUG9zKCkuYmluZChmdW5jdGlvbih0KXtzd2l0Y2goci5jbGVhckluaXRpYWxQb3MoKSx0LnBvc2l0aW9uKXtjYXNlXCJzdGF0aWNcIjpyZXR1cm4gdnQuc29tZShIMS5zdGF0aWMoKSk7Y2FzZVwiYWJzb2x1dGVcIjp2YXIgZT16ayhuKS5tYXAoTW4pLmdldE9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gTW4oYm4oKSl9KTtyZXR1cm4gdnQuc29tZShIMS5hYnNvbHV0ZShFYShcImFic29sdXRlXCIsdHQodC5zdHlsZSxcImxlZnRcIikubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBvLngtZS54fSksdHQodC5zdHlsZSxcInRvcFwiKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIG8ueS1lLnl9KSx0dCh0LnN0eWxlLFwicmlnaHRcIikubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBlLnJpZ2h0LW8ucmlnaHR9KSx0dCh0LnN0eWxlLFwiYm90dG9tXCIpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gZS5ib3R0b20tby5ib3R0b219KSkpKTtkZWZhdWx0OnJldHVybiB2dC5ub25lKCl9fSl9ZnVuY3Rpb24gcWsodCxlLG4pe3ZhciBvLHIsaSx1PXQuZWxlbWVudDtyZXR1cm4gbXQocGUodSxcInBvc2l0aW9uXCIpLFwiZml4ZWRcIik/KHI9ZSxYayhvPXUsaT1uKS5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIEdrKGkuZ2V0TW9kZXMoKSx0LHIpfSkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gWWsobyx0LGkpfSkpOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcixvLGk9TW4odCk7aWYoR2sobi5nZXRNb2RlcygpLGksZSkpcmV0dXJuIHZ0Lm5vbmUoKTtyPXQsbz1pLG4uc2V0SW5pdGlhbFBvcyh7c3R5bGU6ZnVuY3Rpb24oKXt2YXIgdD17fSxlPXIuZG9tO2lmKGN0KGUpKWZvcih2YXIgbj0wO248ZS5zdHlsZS5sZW5ndGg7bisrKXt2YXIgbz1lLnN0eWxlLml0ZW0obik7dFtvXT1lLnN0eWxlW29dfXJldHVybiB0fSgpLHBvc2l0aW9uOmdlKHIsXCJwb3NpdGlvblwiKXx8XCJzdGF0aWNcIixib3VuZHM6b30pO3ZhciB1PUZuKCksYT1pLngtdS54LGM9ZS55LXUueSxzPXUuYm90dG9tLWUuYm90dG9tLGw9aS55PD1lLnk7cmV0dXJuIHZ0LnNvbWUoSDEuZml4ZWQoRWEoXCJmaXhlZFwiLHZ0LnNvbWUoYSksbD92dC5zb21lKGMpOnZ0Lm5vbmUoKSx2dC5ub25lKCksbD92dC5ub25lKCk6dnQuc29tZShzKSkpKX0odSxlLG4pfWZ1bmN0aW9uIEtrKGUsdCxuKXtuLnNldERvY2tlZCghMSksU3QoW1wibGVmdFwiLFwicmlnaHRcIixcInRvcFwiLFwiYm90dG9tXCIsXCJwb3NpdGlvblwiXSxmdW5jdGlvbih0KXtyZXR1cm4gdmUoZS5lbGVtZW50LHQpfSksdC5vblVuZG9ja2VkKGUpfWZ1bmN0aW9uIEprKHQsZSxuLG8pe3ZhciByPVwiZml4ZWRcIj09PW8ucG9zaXRpb247bi5zZXREb2NrZWQociksRGEodC5lbGVtZW50LG8pLChyP2Uub25Eb2NrZWQ6ZS5vblVuZG9ja2VkKSh0KX1mdW5jdGlvbiAkayhvLHQscixpLHUpe3ZvaWQgMD09PXUmJih1PSExKSx0LmNvbnRleHR1YWwuZWFjaChmdW5jdGlvbihuKXtuLmxhenlDb250ZXh0KG8pLmVhY2goZnVuY3Rpb24odCl7dmFyIGU9dC55PGkuYm90dG9tJiZ0LmJvdHRvbT5pLnk7ZSE9PXIuaXNWaXNpYmxlKCkmJihyLnNldFZpc2libGUoZSksdSYmIWU/KEpyKG8uZWxlbWVudCxbbi5mYWRlT3V0Q2xhc3NdKSxuLm9uSGlkZShvKSk6KGU/ams6V2spKG8sbikpfSl9KX1mdW5jdGlvbiBRayh0LGUsbil7dmFyIG8scixpLHUsYSxjO24uaXNEb2NrZWQoKSYmKHI9ZSxpPW4sYz0obz10KS5lbGVtZW50LGkuc2V0RG9ja2VkKCExKSxYayhhPW8uZWxlbWVudCx1PWkpLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIFlrKGEsdCx1KX0pLmVhY2goZnVuY3Rpb24odCl7dC5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIEtrKG8scixpKX0sZnVuY3Rpb24odCl7cmV0dXJuIEprKG8scixpLHQpfSxzdCl9KSxpLnNldFZpc2libGUoITApLHIuY29udGV4dHVhbC5lYWNoKGZ1bmN0aW9uKHQpeyRyKGMsW3QuZmFkZUluQ2xhc3MsdC5mYWRlT3V0Q2xhc3MsdC50cmFuc2l0aW9uQ2xhc3NdKSx0Lm9uU2hvdyhvKX0pLEwxKG8scixpKSl9ZnVuY3Rpb24gWmsodCxlKXtyZXR1cm4gd3QoajEuZ2V0TW9kZXModCksZSl9ZnVuY3Rpb24gdEMocil7dmFyIGk9ci5lbGVtZW50O1l0KGkpLmVhY2goZnVuY3Rpb24odCl7dmFyIGUsbixvPVwicGFkZGluZy1cIitqMS5nZXRNb2RlcyhyKVswXTtqMS5pc0RvY2tlZChyKT8oZT1DZSh0KSxmZShpLFwid2lkdGhcIixlK1wicHhcIiksZmUodCxvLHdlKG49aSkrKHBhcnNlSW50KGdlKG4sXCJtYXJnaW4tdG9wXCIpLDEwKXx8MCkrKHBhcnNlSW50KGdlKG4sXCJtYXJnaW4tYm90dG9tXCIpLDEwKXx8MCkrXCJweFwiKSk6KHZlKGksXCJ3aWR0aFwiKSx2ZSh0LG8pKX0pfWZ1bmN0aW9uIGVDKHQsZSl7ZT8ocXIodCxHMS5mYWRlT3V0Q2xhc3MpLEpyKHQsW0cxLnRyYW5zaXRpb25DbGFzcyxHMS5mYWRlSW5DbGFzc10pKToocXIodCxHMS5mYWRlSW5DbGFzcyksSnIodCxbRzEuZmFkZU91dENsYXNzLEcxLnRyYW5zaXRpb25DbGFzc10pKX1mdW5jdGlvbiBuQyh0LGUpe3ZhciBuPU10LmZyb21Eb20odC5nZXRDb250YWluZXIoKSk7ZT8oWXIobixYMSkscXIobixZMSkpOihZcihuLFkxKSxxcihuLFgxKSl9ZnVuY3Rpb24gb0ModSx0KXtmdW5jdGlvbiBvKGUpe3IoKS5lYWNoKGZ1bmN0aW9uKHQpe3JldHVybiBlKHQuZWxlbWVudCl9KX1mdW5jdGlvbiBlKHQpe3UuaW5saW5lfHx0Qyh0KSxuQyh1LGoxLmlzRG9ja2VkKHQpKSx0LmdldFN5c3RlbSgpLmJyb2FkY2FzdE9uKFt4ZigpXSx7fSkscigpLmVhY2goZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0U3lzdGVtKCkuYnJvYWRjYXN0T24oW3hmKCldLHt9KX0pfXZhciBuLGk9Z2MoKSxyPXQuZ2V0U2luayxhPXUuaW5saW5lP1tdOltpYy5jb25maWcoe2NoYW5uZWxzOigobj17fSlbVzEoKV09e29uUmVjZWl2ZTp0Q30sbil9KV07cmV0dXJuIFYoW1ZnLmNvbmZpZyh7fSksajEuY29uZmlnKHtjb250ZXh0dWFsOmx0KHtsYXp5Q29udGV4dDpmdW5jdGlvbih0KXt2YXIgZT13ZSh0LmVsZW1lbnQpLG49dS5pbmxpbmU/dS5nZXRDb250ZW50QXJlYUNvbnRhaW5lcigpOnUuZ2V0Q29udGFpbmVyKCksbz1NbihNdC5mcm9tRG9tKG4pKSxyPW8uaGVpZ2h0LWUsaT1vLnkrKFprKHQsXCJ0b3BcIik/MDplKTtyZXR1cm4gdnQuc29tZShCbihvLngsaSxvLndpZHRoLHIpKX0sb25TaG93OmZ1bmN0aW9uKCl7byhmdW5jdGlvbih0KXtyZXR1cm4gZUModCwhMCl9KX0sb25TaG93bjpmdW5jdGlvbihyKXtvKGZ1bmN0aW9uKHQpe3JldHVybiAkcih0LFtHMS50cmFuc2l0aW9uQ2xhc3MsRzEuZmFkZUluQ2xhc3NdKX0pLGkuZ2V0KCkuZWFjaChmdW5jdGlvbih0KXt2YXIgZSxuPXIuZWxlbWVudCxvPWp0KGU9dCk7T2EobykuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiF6dChlLHQpfSkuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiB6dCh0LE10LmZyb21Eb20oby5kb20uYm9keSkpfHxVdChuLHQpfSkuZWFjaChmdW5jdGlvbigpe3JldHVybiBrYShlKX0pLGkuY2xlYXIoKX0pfSxvbkhpZGU6ZnVuY3Rpb24odCl7dmFyIGU9dC5lbGVtZW50LG49cjtfYShlKS5vclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIG4oKS50b09wdGlvbmFsKCkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gX2EodC5lbGVtZW50KX0pfSkuZm9sZChpLmNsZWFyLGkuc2V0KSxvKGZ1bmN0aW9uKHQpe3JldHVybiBlQyh0LCExKX0pfSxvbkhpZGRlbjpmdW5jdGlvbigpe28oZnVuY3Rpb24odCl7cmV0dXJuICRyKHQsW0cxLnRyYW5zaXRpb25DbGFzc10pfSl9fSxHMSksbGF6eVZpZXdwb3J0OmZ1bmN0aW9uKHQpe3ZhciBlPUZuKCksbj11LmdldFBhcmFtKFwidG9vbGJhcl9zdGlja3lfb2Zmc2V0XCIsMCxcIm51bWJlclwiKSxvPWUueSsoWmsodCxcInRvcFwiKT9uOjApLHI9ZS5oZWlnaHQtKFprKHQsXCJib3R0b21cIik/bjowKTtyZXR1cm4gQm4oZS54LG8sZS53aWR0aCxyKX0sbW9kZXM6W3QuaGVhZGVyLmdldERvY2tpbmdNb2RlKCldLG9uRG9ja2VkOmUsb25VbmRvY2tlZDplfSldLGEsITApfWZ1bmN0aW9uIHJDKHQpe3JldHVybiBhbyhcIm1lbnVidXR0b25cIiwkMSx0KX1mdW5jdGlvbiBpQyhlLHQpe3JldHVybiB0LmdldEFuaW1hdGlvblJvb3QuZm9sZChmdW5jdGlvbigpe3JldHVybiBlLmVsZW1lbnR9LGZ1bmN0aW9uKHQpe3JldHVybiB0KGUpfSl9ZnVuY3Rpb24gdUModCl7cmV0dXJuIHQuZGltZW5zaW9uLnByb3BlcnR5fWZ1bmN0aW9uIGFDKHQsZSl7cmV0dXJuIHQuZGltZW5zaW9uLmdldERpbWVuc2lvbihlKX1mdW5jdGlvbiBjQyh0LGUpeyRyKGlDKHQsZSksW2Uuc2hyaW5raW5nQ2xhc3MsZS5ncm93aW5nQ2xhc3NdKX1mdW5jdGlvbiBzQyh0LGUpe3FyKHQuZWxlbWVudCxlLm9wZW5DbGFzcyksWXIodC5lbGVtZW50LGUuY2xvc2VkQ2xhc3MpLGZlKHQuZWxlbWVudCx1QyhlKSxcIjBweFwiKSxiZSh0LmVsZW1lbnQpfWZ1bmN0aW9uIGxDKHQsZSl7cXIodC5lbGVtZW50LGUuY2xvc2VkQ2xhc3MpLFlyKHQuZWxlbWVudCxlLm9wZW5DbGFzcyksdmUodC5lbGVtZW50LHVDKGUpKX1mdW5jdGlvbiBmQyh0LGUsbixvKXtuLnNldENvbGxhcHNlZCgpLGZlKHQuZWxlbWVudCx1QyhlKSxhQyhlLHQuZWxlbWVudCkpLGJlKHQuZWxlbWVudCksY0ModCxlKSxzQyh0LGUpLGUub25TdGFydFNocmluayh0KSxlLm9uU2hydW5rKHQpfWZ1bmN0aW9uIGRDKHQsZSxuKXt2YXIgbz1hQyhlLHQuZWxlbWVudCk7KFwiMHB4XCI9PT1vP2ZDOmZ1bmN0aW9uKHQsZSxuLG8pe3ZhciByPW8uZ2V0T3JUaHVuayhmdW5jdGlvbigpe3JldHVybiBhQyhlLHQuZWxlbWVudCl9KTtuLnNldENvbGxhcHNlZCgpLGZlKHQuZWxlbWVudCx1QyhlKSxyKSxiZSh0LmVsZW1lbnQpO3ZhciBpPWlDKHQsZSk7cXIoaSxlLmdyb3dpbmdDbGFzcyksWXIoaSxlLnNocmlua2luZ0NsYXNzKSxzQyh0LGUpLGUub25TdGFydFNocmluayh0KX0pKHQsZSxuLHZ0LnNvbWUobykpfWZ1bmN0aW9uIG1DKHQsZSxuKXt2YXIgbz1pQyh0LGUpLHI9S3IobyxlLnNocmlua2luZ0NsYXNzKSxpPWFDKGUsdC5lbGVtZW50KTtsQyh0LGUpO3ZhciB1PWFDKGUsdC5lbGVtZW50KTsocj9mdW5jdGlvbigpe2ZlKHQuZWxlbWVudCx1QyhlKSxpKSxiZSh0LmVsZW1lbnQpfTpmdW5jdGlvbigpe3NDKHQsZSl9KSgpLHFyKG8sZS5zaHJpbmtpbmdDbGFzcyksWXIobyxlLmdyb3dpbmdDbGFzcyksbEModCxlKSxmZSh0LmVsZW1lbnQsdUMoZSksdSksbi5zZXRFeHBhbmRlZCgpLGUub25TdGFydEdyb3codCl9ZnVuY3Rpb24gZ0ModCxlLG4pe3JldHVybiEwPT09S3IoaUModCxlKSxlLmdyb3dpbmdDbGFzcyl9ZnVuY3Rpb24gcEModCxlLG4pe3JldHVybiEwPT09S3IoaUModCxlKSxlLnNocmlua2luZ0NsYXNzKX1mdW5jdGlvbiBoQyh0KXtyZXR1cm5cIjxhbGxveS5maWVsZC5cIit0K1wiPlwifWZ1bmN0aW9uIHZDKHQpe3JldHVybntlbGVtZW50OmZ1bmN0aW9uKCl7cmV0dXJuIHQuZWxlbWVudC5kb219fX1mdW5jdGlvbiBiQyh0LG4pe2NkLmdldEN1cnJlbnQodCkuZWFjaChmdW5jdGlvbih0KXtyZXR1cm4gUmcuc2V0KHQsWyhlPW4sdU8uc2tldGNoKGZ1bmN0aW9uKHQpe3JldHVybntkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LXNpZGViYXJfX3BhbmUtY29udGFpbmVyXCJdfSxjb21wb25lbnRzOihuPXQscj1CKEN0KG89ZSksZnVuY3Rpb24odCl7dmFyIGU9b1t0XSxuPWNvKGFvKFwic2lkZWJhclwiLGFPLGUpKTtyZXR1cm57bmFtZTp0LGdldEFwaTp2QyxvblNldHVwOm4ub25TZXR1cCxvblNob3c6bi5vblNob3csb25IaWRlOm4ub25IaWRlfX0pLEIocixmdW5jdGlvbih0KXt2YXIgZT1QbyhzdCk7cmV0dXJuIG4uc2xvdCh0Lm5hbWUse2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtc2lkZWJhcl9fcGFuZVwiXX0sYmVoYXZpb3VyczpLaChbdnYodCxlKSxidih0LGUpLENyKEppKCksZnVuY3Rpb24oZSx0KXt2YXIgbj10LmV2ZW50O04ocixmdW5jdGlvbih0KXtyZXR1cm4gdC5uYW1lPT09bi5uYW1lfSkuZWFjaChmdW5jdGlvbih0KXsobi52aXNpYmxlP3Qub25TaG93OnQub25IaWRlKSh0LmdldEFwaShlKSl9KX0pXSl9KX0pKSxzbG90QmVoYXZpb3VyczpLaChbb3UoZnVuY3Rpb24odCl7cmV0dXJuIHVPLmhpZGVBbGxTbG90cyh0KX0pXSl9O3ZhciBuLG8scn0pKV0pO3ZhciBlfSl9ZnVuY3Rpb24geUModCl7cmV0dXJuIGNkLmdldEN1cnJlbnQodCkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gbk8uaXNHcm93aW5nKHQpfHxuTy5oYXNHcm93bih0KT9jZC5nZXRDdXJyZW50KHQpLmJpbmQoZnVuY3Rpb24oZSl7cmV0dXJuIE4odU8uZ2V0U2xvdE5hbWVzKGUpLGZ1bmN0aW9uKHQpe3JldHVybiB1Ty5pc1Nob3dpbmcoZSx0KX0pfSk6dnQubm9uZSgpfSl9ZnVuY3Rpb24geEModCl7dmFyIGU9TXQuZnJvbUh0bWwodCksbj1LdChlKSxvPVIodm9pZCAwIT09ZS5kb20uYXR0cmlidXRlcz9lLmRvbS5hdHRyaWJ1dGVzOltdLGZ1bmN0aW9uKHQsZSl7dmFyIG47cmV0dXJuXCJjbGFzc1wiPT09ZS5uYW1lP3Q6bHQobHQoe30sdCksKChuPXt9KVtlLm5hbWVdPWUudmFsdWUsbikpfSx7fSkscj1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChlLmRvbS5jbGFzc0xpc3QsMCksaT0wPT09bi5sZW5ndGg/e306e2lubmVySHRtbDpCcihlKX07cmV0dXJuIGx0KHt0YWc6RnQoZSksY2xhc3NlczpyLGF0dHJpYnV0ZXM6b30saSl9ZnVuY3Rpb24gd0ModCl7cmV0dXJuIGNkLmdldEN1cnJlbnQodCkuZWFjaChmdW5jdGlvbih0KXtyZXR1cm4ga2EodC5lbGVtZW50KX0pfWZ1bmN0aW9uIFNDKGYsZCxtKXtmdW5jdGlvbiBlKHQpe3ZhciBlOyFnLmdldCgpfHxcImZvY3VzaW5cIj09PShlPXQpLnR5cGUmJihlLmNvbXBvc2VkP1koZS5jb21wb3NlZFBhdGgoKSk6dnQuZnJvbShlLnRhcmdldCkpLm1hcChNdC5mcm9tRG9tKS5maWx0ZXIoR2UpLmV4aXN0cyhmdW5jdGlvbih0KXtyZXR1cm4gS3IodCxcIm1jZS1wYXN0ZWJpblwiKX0pfHwodC5wcmV2ZW50RGVmYXVsdCgpLHdDKGQoKSksZi5lZGl0b3JNYW5hZ2VyLnNldEFjdGl2ZShmKSl9dmFyIGc9UG8oITEpLG49Z2MoKTtmdW5jdGlvbiBvKHQpe3ZhciBlLG4sbyxyLGksdSxhLGMscyxsO3QhPT1nLmdldCgpJiYoZy5zZXQodCksZT1mLG49ZCgpLG89dCxyPW0ucHJvdmlkZXJzLGM9bi5lbGVtZW50LHM9byxsPVwiZGF0YS1tY2UtXCIrKGk9XCJ0YWJpbmRleFwiKSx2dC5mcm9tKGUuaWZyYW1lRWxlbWVudCkubWFwKE10LmZyb21Eb20pLmVhY2goZnVuY3Rpb24oZSl7cz8odWUoZSxpKS5lYWNoKGZ1bmN0aW9uKHQpe3JldHVybiBvZShlLGwsdCl9KSxvZShlLGksLTEpKTooY2UoZSxpKSx1ZShlLGwpLmVhY2goZnVuY3Rpb24odCl7b2UoZSxpLHQpLGNlKGUsbCl9KSl9KSxvPyhmTy5ibG9jayhuLChhPXIsZnVuY3Rpb24odCxlKXtyZXR1cm57ZG9tOnt0YWc6XCJkaXZcIixhdHRyaWJ1dGVzOntcImFyaWEtbGFiZWxcIjphLnRyYW5zbGF0ZShcIkxvYWRpbmcuLi5cIiksdGFiaW5kZXg6XCIwXCJ9LGNsYXNzZXM6W1widG94LXRocm9iYmVyX19idXN5LXNwaW5uZXJcIl19LGNvbXBvbmVudHM6W3tkb206eEMoJzxkaXYgY2xhc3M9XCJ0b3gtc3Bpbm5lclwiPjxkaXY+PC9kaXY+PGRpdj48L2Rpdj48ZGl2PjwvZGl2PjwvZGl2PicpfV19fSkpLHZlKGMsXCJkaXNwbGF5XCIpLGNlKGMsXCJhcmlhLWhpZGRlblwiKSxlLmhhc0ZvY3VzKCkmJndDKG4pKToodT1jZC5nZXRDdXJyZW50KG4pLmV4aXN0cyhmdW5jdGlvbih0KXtyZXR1cm4gQ2EodC5lbGVtZW50KX0pLGZPLnVuYmxvY2sobiksZmUoYyxcImRpc3BsYXlcIixcIm5vbmVcIiksb2UoYyxcImFyaWEtaGlkZGVuXCIsXCJ0cnVlXCIpLHUmJmUuZm9jdXMoKSksZi5maXJlKFwiQWZ0ZXJQcm9ncmVzc1N0YXRlXCIse3N0YXRlOnR9KSl9Zi5pbmxpbmV8fGYub24oXCJQcmVJbml0XCIsZnVuY3Rpb24oKXtmLmRvbS5iaW5kKGYuZ2V0V2luKCksXCJmb2N1c2luXCIsZSksZi5vbihcIkJlZm9yZUV4ZWNDb21tYW5kXCIsZnVuY3Rpb24odCl7XCJtY2Vmb2N1c1wiPT09dC5jb21tYW5kLnRvTG93ZXJDYXNlKCkmJiEwIT09dC52YWx1ZSYmZSh0KX0pfSksZi5vbihcIlByb2dyZXNzU3RhdGVcIixmdW5jdGlvbih0KXt2YXIgZTtuLm9uKGxwLmNsZWFyVGltZW91dCksdSh0LnRpbWUpPyhlPWxwLnNldEVkaXRvclRpbWVvdXQoZixmdW5jdGlvbigpe3JldHVybiBvKHQuc3RhdGUpfSx0LnRpbWUpLG4uc2V0KGUpKToobyh0LnN0YXRlKSxuLmNsZWFyKCkpfSl9ZnVuY3Rpb24ga0ModCxlLG4pe3JldHVybnt3aXRoaW46dCxleHRyYTplLHdpdGhpbldpZHRoOm59fWZ1bmN0aW9uIENDKHQsZSxvKXt2YXIgbixyPShuPWZ1bmN0aW9uKHQsZSl7dmFyIG49byh0KTtyZXR1cm4gdnQuc29tZSh7ZWxlbWVudDp0LHN0YXJ0OmUsZmluaXNoOmUrbix3aWR0aDpufSl9LFIodCxmdW5jdGlvbihlLHQpe3JldHVybiBuKHQsZS5sZW4pLmZvbGQocnQoZSksZnVuY3Rpb24odCl7cmV0dXJue2xlbjp0LmZpbmlzaCxsaXN0OmUubGlzdC5jb25jYXQoW3RdKX19KX0se2xlbjowLGxpc3Q6W119KS5saXN0KSxpPUYocixmdW5jdGlvbih0KXtyZXR1cm4gdC5maW5pc2g8PWV9KSx1PUkoaSxmdW5jdGlvbih0LGUpe3JldHVybiB0K2Uud2lkdGh9LDApO3JldHVybnt3aXRoaW46aSxleHRyYTpyLnNsaWNlKGkubGVuZ3RoKSx3aXRoaW5XaWR0aDp1fX1mdW5jdGlvbiBPQyh0KXtyZXR1cm4gQih0LGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnR9KX1mdW5jdGlvbiBfQyh0LGUpe3ZhciBuPUIoZSxmdW5jdGlvbih0KXtyZXR1cm4gRXUodCl9KTtOMS5zZXRHcm91cHModCxuKX1mdW5jdGlvbiBUQyh0LGUsbil7dmFyIG8scixpLHUsYSxjLHMsbCxmLGQsbSxnLHAsaCx2LGIseSx4LHcsUyxrPWUuYnVpbHRHcm91cHMuZ2V0KCk7MCE9PWsubGVuZ3RoJiYobz1nbCh0LGUsXCJwcmltYXJ5XCIpLHI9JHkuZ2V0Q291cGxlZCh0LFwib3ZlcmZsb3dHcm91cFwiKSxmZShvLmVsZW1lbnQsXCJ2aXNpYmlsaXR5XCIsXCJoaWRkZW5cIiksdT1LKGk9ay5jb25jYXQoW3JdKSxmdW5jdGlvbihlKXtyZXR1cm4gX2EoZS5lbGVtZW50KS5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiBlLmdldFN5c3RlbSgpLmdldEJ5RG9tKHQpLnRvT3B0aW9uYWwoKX0pfSksbihbXSksX0MobyxpKSxhPUNlKG8uZWxlbWVudCksMD09PShzPWEsbD1lLmJ1aWx0R3JvdXBzLmdldCgpLGQ9cix5PSgwPT09KG09Q0MobCxzLGY9ZnVuY3Rpb24odCl7cmV0dXJuIENlKHQuZWxlbWVudCl9KSkuZXh0cmEubGVuZ3RoP3Z0LnNvbWUobSk6dnQubm9uZSgpKS5nZXRPclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIENDKGwscy1mKGQpLGYpfSkseD15LndpdGhpbix3PXkuZXh0cmEsUz15LndpdGhpbldpZHRoLChjPTE9PT13Lmxlbmd0aCYmd1swXS53aWR0aDw9ZihkKT8oYj1TLGtDKE9DKHguY29uY2F0KHcpKSxbXSxiKSk6MTw9dy5sZW5ndGg/KHA9dyxoPWQsdj1TLGtDKE9DKHgpLmNvbmNhdChbaF0pLE9DKHApLHYpKTooZz1TLGtDKE9DKHgpLFtdLGcpKSkuZXh0cmEubGVuZ3RoKT8oUmcucmVtb3ZlKG8sciksbihbXSkpOihfQyhvLGMud2l0aGluKSxuKGMuZXh0cmEpKSx2ZShvLmVsZW1lbnQsXCJ2aXNpYmlsaXR5XCIpLGJlKG8uZWxlbWVudCksdS5lYWNoKFZnLmZvY3VzKSl9ZnVuY3Rpb24gRUModCxlKXt2YXIgbj0keS5nZXRDb3VwbGVkKHQsXCJ0b29sYmFyU2FuZGJveFwiKTtiZi5pc09wZW4obik/YmYuY2xvc2Uobik6YmYub3BlbihuLGUudG9vbGJhcigpKX1mdW5jdGlvbiBEQyh0LGUsbixvKXt2YXIgcj1uLmdldEJvdW5kcy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQoKX0pLGk9bi5sYXp5U2luayh0KS5nZXRPckRpZSgpO2ZmLnBvc2l0aW9uV2l0aGluQm91bmRzKGksZSx7YW5jaG9yOnt0eXBlOlwiaG90c3BvdFwiLGhvdHNwb3Q6dCxsYXlvdXRzOm8sb3ZlcnJpZGVzOnttYXhXaWR0aEZ1bmN0aW9uOnBPKCl9fX0scil9ZnVuY3Rpb24gQUModCxlLG4sbyxyKXtOMS5zZXRHcm91cHMoZSxyKSxEQyh0LGUsbixvKSx6Zy5vbih0KX1mdW5jdGlvbiBCQyh0KXtyZXR1cm4gQih0LGZ1bmN0aW9uKHQpe3JldHVybiBFdSh0KX0pfWZ1bmN0aW9uIE1DKHQsbixvKXtUQyh0LG8sZnVuY3Rpb24oZSl7by5vdmVyZmxvd0dyb3Vwcy5zZXQoZSksbi5nZXRPcHQodCkuZWFjaChmdW5jdGlvbih0KXtiTy5zZXRHcm91cHModCxCQyhlKSl9KX0pfWZ1bmN0aW9uIEZDKGUsbil7bWwoZSxuLFwib3ZlcmZsb3ctYnV0dG9uXCIpLmJpbmQoZnVuY3Rpb24oKXtyZXR1cm4gbWwoZSxuLFwib3ZlcmZsb3dcIil9KS5lYWNoKGZ1bmN0aW9uKHQpe1FDKGUsbiksbk8udG9nZ2xlR3Jvdyh0KX0pfWZ1bmN0aW9uIElDKHQpe3ZhciBlPXQudGl0bGUuZm9sZChmdW5jdGlvbigpe3JldHVybnt9fSxmdW5jdGlvbih0KXtyZXR1cm57YXR0cmlidXRlczp7dGl0bGU6dH19fSk7cmV0dXJue2RvbTpsdCh7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtdG9vbGJhcl9fZ3JvdXBcIl19LGUpLGNvbXBvbmVudHM6W3dPLnBhcnRzLml0ZW1zKHt9KV0saXRlbXM6dC5pdGVtcyxtYXJrZXJzOntpdGVtU2VsZWN0b3I6XCIqOm5vdCgudG94LXNwbGl0LWJ1dHRvbikgPiAudG94LXRidG46bm90KFtkaXNhYmxlZF0pLCAudG94LXNwbGl0LWJ1dHRvbjpub3QoW2Rpc2FibGVkXSksIC50b3gtdG9vbGJhci1uYXYtanM6bm90KFtkaXNhYmxlZF0pXCJ9LHRncm91cEJlaGF2aW91cnM6ZWMoW3B5LmNvbmZpZyh7fSksVmcuY29uZmlnKHt9KV0pfX1mdW5jdGlvbiBSQyh0KXtyZXR1cm4gd08uc2tldGNoKElDKHQpKX1mdW5jdGlvbiBOQyhuLHQpe3ZhciBlPW91KGZ1bmN0aW9uKHQpe3ZhciBlPUIobi5pbml0R3JvdXBzLFJDKTtOMS5zZXRHcm91cHModCxlKX0pO3JldHVybiBlYyhbUXYobi5wcm92aWRlcnMuaXNEaXNhYmxlZCkscHYoKSxGZy5jb25maWcoe21vZGU6dCxvbkVzY2FwZTpuLm9uRXNjYXBlLHNlbGVjdG9yOlwiLnRveC10b29sYmFyX19ncm91cFwifSksbW0oXCJ0b29sYmFyLWV2ZW50c1wiLFtlXSldKX1mdW5jdGlvbiBQQyh0KXt2YXIgZT10LmN5Y2xpY0tleWluZz9cImN5Y2xpY1wiOlwiYWN5Y2xpY1wiO3JldHVybnt1aWQ6dC51aWQsZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC10b29sYmFyLW92ZXJsb3JkXCJdfSxwYXJ0czp7XCJvdmVyZmxvdy1ncm91cFwiOklDKHt0aXRsZTp2dC5ub25lKCksaXRlbXM6W119KSxcIm92ZXJmbG93LWJ1dHRvblwiOlkwKHtuYW1lOlwibW9yZVwiLGljb246dnQuc29tZShcIm1vcmUtZHJhd2VyXCIpLGRpc2FibGVkOiExLHRvb2x0aXA6dnQuc29tZShcIk1vcmUuLi5cIikscHJpbWFyeTohMSxib3JkZXJsZXNzOiExfSx2dC5ub25lKCksdC5wcm92aWRlcnMpfSxzcGxpdFRvb2xiYXJCZWhhdmlvdXJzOk5DKHQsZSl9fWZ1bmN0aW9uIFZDKHQpe3ZhciBlPXQuY3ljbGljS2V5aW5nP1wiY3ljbGljXCI6XCJhY3ljbGljXCI7cmV0dXJuIE4xLnNrZXRjaCh7dWlkOnQudWlkLGRvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtdG9vbGJhclwiXS5jb25jYXQodC50eXBlPT09Ymguc2Nyb2xsaW5nP1tcInRveC10b29sYmFyLS1zY3JvbGxpbmdcIl06W10pfSxjb21wb25lbnRzOltOMS5wYXJ0cy5ncm91cHMoe30pXSx0b29sYmFyQmVoYXZpb3VyczpOQyh0LGUpfSl9ZnVuY3Rpb24gSEModCl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQ/dC5zcGxpdChcIiBcIik6dH1mdW5jdGlvbiBMQyhpLHUpe3ZhciBhPWx0KGx0KHt9LElPKSx1Lm1lbnVzKSxuPTA8Q3QodS5tZW51cykubGVuZ3RoLHQ9Rih2b2lkIDA9PT11Lm1lbnViYXJ8fCEwPT09dS5tZW51YmFyP0hDKFwiZmlsZSBlZGl0IHZpZXcgaW5zZXJ0IGZvcm1hdCB0b29scyB0YWJsZSBoZWxwXCIpOkhDKCExPT09dS5tZW51YmFyP1wiXCI6dS5tZW51YmFyKSxmdW5jdGlvbih0KXt2YXIgZT1UdChJTyx0KTtyZXR1cm4gbj9lfHx0dCh1Lm1lbnVzLHQpLmV4aXN0cyhmdW5jdGlvbih0KXtyZXR1cm4gVHQodCxcIml0ZW1zXCIpfSk6ZX0pO3JldHVybiBGKEIodCxmdW5jdGlvbih0KXt2YXIgZT1hW3RdLG49e3RpdGxlOmUudGl0bGUsaXRlbXM6SEMoZS5pdGVtcyl9LG89dSxyPWkuZ2V0UGFyYW0oXCJyZW1vdmVkX21lbnVpdGVtc1wiLFwiXCIpLnNwbGl0KC9bICxdLyk7cmV0dXJue3RleHQ6bi50aXRsZSxnZXRJdGVtczpmdW5jdGlvbigpe3JldHVybiBIKG4uaXRlbXMsZnVuY3Rpb24odCl7dmFyIGU9dC50b0xvd2VyQ2FzZSgpO3JldHVybiAwPT09ZS50cmltKCkubGVuZ3RofHxkKHIsZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1lfSk/W106XCJzZXBhcmF0b3JcIj09PWV8fFwifFwiPT09ZT9be3R5cGU6XCJzZXBhcmF0b3JcIn1dOm8ubWVudUl0ZW1zW2VdP1tvLm1lbnVJdGVtc1tlXV06W119KX19fSksZnVuY3Rpb24odCl7cmV0dXJuIDA8dC5nZXRJdGVtcygpLmxlbmd0aCYmZCh0LmdldEl0ZW1zKCksZnVuY3Rpb24odCl7cmV0dXJuXCJzZXBhcmF0b3JcIiE9PXQudHlwZX0pfSl9ZnVuY3Rpb24gekModCl7ZnVuY3Rpb24gZSgpe3QuX3NraW5Mb2FkZWQ9ITAsdC5maXJlKFwiU2tpbkxvYWRlZFwiKX1yZXR1cm4gZnVuY3Rpb24oKXt0LmluaXRpYWxpemVkP2UoKTp0Lm9uKFwiaW5pdFwiLGUpfX1mdW5jdGlvbiBVQyhuLG8scil7cmV0dXJuIG5ldyBNcChmdW5jdGlvbih0LGUpe3IubG9hZChvLHQsZSksbi5vbihcInJlbW92ZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIudW5sb2FkKG8pfSl9KX1mdW5jdGlvbiBqQyh0LGUpe3ZhciBuLG8scixpLHUsYSxjLHMsbCxmPShyPShuPWUpLmdldFBhcmFtKFwic2tpblwiKSxpPW4uZ2V0UGFyYW0oXCJza2luX3VybFwiKSwhMSE9PXImJihvPXJ8fFwib3hpZGVcIixpPWk/bi5kb2N1bWVudEJhc2VVUkkudG9BYnNvbHV0ZShpKTpvdi5iYXNlVVJMK1wiL3NraW5zL3VpL1wiK28pLGkpO2YmJmUuY29udGVudENTUy5wdXNoKGYrKHQ/XCIvY29udGVudC5pbmxpbmVcIjpcIi9jb250ZW50XCIpK1wiLm1pbi5jc3NcIiksITE9PT1lLmdldFBhcmFtKFwic2tpblwiKT09MCYmeShmKT9NcC5hbGwoW1VDKGUsZitcIi9za2luLm1pbi5jc3NcIixlLnVpLnN0eWxlU2hlZXRMb2FkZXIpLChjPWUscz1mLGw9TXQuZnJvbURvbShjLmdldEVsZW1lbnQoKSkscG4obCkuaXNTb21lKCk/VUMoYyxzK1wiL3NraW4uc2hhZG93ZG9tLm1pbi5jc3NcIixudi5ET00uc3R5bGVTaGVldExvYWRlcik6TXAucmVzb2x2ZSgpKV0pLnRoZW4oekMoZSksKHU9ZSxhPVwiU2tpbiBjb3VsZCBub3QgYmUgbG9hZGVkXCIsZnVuY3Rpb24oKXtyZXR1cm4gdS5maXJlKFwiU2tpbkxvYWRFcnJvclwiLHttZXNzYWdlOmF9KX0pKTp6QyhlKSgpfWZ1bmN0aW9uIFdDKG8scil7cmV0dXJuIGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtlLnNldEFjdGl2ZShvLmZvcm1hdHRlci5tYXRjaChyKSk7dmFyIHQ9by5mb3JtYXR0ZXIuZm9ybWF0Q2hhbmdlZChyLGUuc2V0QWN0aXZlKTtuLnNldCh0KX12YXIgbj1tYygpO3JldHVybiBvLmluaXRpYWxpemVkP3QoKTpvLm9uY2UoXCJpbml0XCIsdCksZnVuY3Rpb24oKXtvLm9mZihcImluaXRcIix0KSxuLmNsZWFyKCl9fX1mdW5jdGlvbiBHQyhvLHIsaSl7cmV0dXJuIGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gaSh0KX1mdW5jdGlvbiBuKCl7aSh0KSxvLm9uKHIsZSl9cmV0dXJuIG8uaW5pdGlhbGl6ZWQ/bigpOm8ub25jZShcImluaXRcIixuKSxmdW5jdGlvbigpe28ub2ZmKFwiaW5pdFwiLG4pLG8ub2ZmKHIsZSl9fX1mdW5jdGlvbiBYQyhlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7ZS51bmRvTWFuYWdlci50cmFuc2FjdChmdW5jdGlvbigpe2UuZm9jdXMoKSxlLmV4ZWNDb21tYW5kKFwibWNlVG9nZ2xlRm9ybWF0XCIsITEsdC5mb3JtYXQpfSl9fX1mdW5jdGlvbiBZQyh0LGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0LmV4ZWNDb21tYW5kKGUpfX1mdW5jdGlvbiBxQyh0LGUsbil7dmFyIHUsYSxjLG89bi5kYXRhc2V0LHI9XCJiYXNpY1wiPT09by50eXBlP2Z1bmN0aW9uKCl7cmV0dXJuIEIoby5kYXRhLGZ1bmN0aW9uKHQpe3JldHVybiB5ayh0LG4uaXNTZWxlY3RlZEZvcixuLmdldFByZXZpZXdGb3IpfSl9Om8uZ2V0RGF0YTtyZXR1cm57aXRlbXM6KHU9ZSxhPW4sYz1mdW5jdGlvbih0LGUsbil7dmFyIG89XCJmb3JtYXR0ZXJcIj09PXQudHlwZSYmYS5pc0ludmFsaWQodCk7cmV0dXJuIDA9PT1lP28/W106aSh0LGUsITEsbikudG9BcnJheSgpOmkodCxlLG8sbikudG9BcnJheSgpfSx7dmFsaWRhdGVJdGVtczpzLGdldEZldGNoOmZ1bmN0aW9uKG4sbyl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7ZShqMChzKG8oKSksU2guQ0xPU0VfT05fRVhFQ1VURSxuLCExKSl9fX0pLGdldFN0eWxlSXRlbXM6cn07ZnVuY3Rpb24gaSh0LGUsbixvKXt2YXIgcj11LnNoYXJlZC5wcm92aWRlcnMudHJhbnNsYXRlKHQudGl0bGUpO2lmKFwic2VwYXJhdG9yXCI9PT10LnR5cGUpcmV0dXJuIHZ0LnNvbWUoe3R5cGU6XCJzZXBhcmF0b3JcIix0ZXh0OnJ9KTtpZihcInN1Ym1lbnVcIiE9PXQudHlwZSlyZXR1cm4gdnQuc29tZShsdCh7dHlwZTpcInRvZ2dsZW1lbnVpdGVtXCIsdGV4dDpyLGljb246dC5pY29uLGFjdGl2ZTp0LmlzU2VsZWN0ZWQobyksZGlzYWJsZWQ6bixvbkFjdGlvbjphLm9uQWN0aW9uKHQpfSx0LmdldFN0eWxlUHJldmlldygpLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm57fX0sZnVuY3Rpb24odCl7cmV0dXJue21ldGE6e3N0eWxlOnR9fX0pKSk7dmFyIGk9SCh0LmdldFN0eWxlSXRlbXMoKSxmdW5jdGlvbih0KXtyZXR1cm4gYyh0LGUsbyl9KTtyZXR1cm4gMD09PWUmJmkubGVuZ3RoPD0wP3Z0Lm5vbmUoKTp2dC5zb21lKHt0eXBlOlwibmVzdGVkbWVudWl0ZW1cIix0ZXh0OnIsZGlzYWJsZWQ6aS5sZW5ndGg8PTAsZ2V0U3VibWVudUl0ZW1zOmZ1bmN0aW9uKCl7cmV0dXJuIEgodC5nZXRTdHlsZUl0ZW1zKCksZnVuY3Rpb24odCl7cmV0dXJuIGModCxlLG8pfSl9fSl9ZnVuY3Rpb24gcyh0KXt2YXIgZT1hLmdldEN1cnJlbnRWYWx1ZSgpLG49YS5zaG91bGRIaWRlPzA6MTtyZXR1cm4gSCh0LGZ1bmN0aW9uKHQpe3JldHVybiBjKHQsbixlKX0pfX1mdW5jdGlvbiBLQyh0LGUsbil7dmFyIG89cUMoMCxlLG4pLHI9by5pdGVtcyxpPW8uZ2V0U3R5bGVJdGVtcyx1PUdDKHQsXCJOb2RlQ2hhbmdlXCIsZnVuY3Rpb24odCl7dmFyIGU9dC5nZXRDb21wb25lbnQoKTtuLnVwZGF0ZVRleHQoZSl9KTtyZXR1cm4gejAoe3RleHQ6bi5pY29uLmlzU29tZSgpP3Z0Lm5vbmUoKTpuLnRleHQsaWNvbjpuLmljb24sdG9vbHRpcDp2dC5mcm9tKG4udG9vbHRpcCkscm9sZTp2dC5ub25lKCksZmV0Y2g6ci5nZXRGZXRjaChlLGkpLG9uU2V0dXA6dSxnZXRBcGk6ZnVuY3Rpb24odCl7cmV0dXJue2dldENvbXBvbmVudDpydCh0KX19LGNvbHVtbnM6MSxwcmVzZXRzOlwibm9ybWFsXCIsY2xhc3NlczpuLmljb24uaXNTb21lKCk/W106W1wiYmVzcG9rZVwiXSxkcm9wZG93bkJlaGF2aW91cnM6W119LFwidG94LXRidG5cIixlLnNoYXJlZCl9ZnVuY3Rpb24gSkModCl7cmV0dXJuIGZ1bmN0aW9uKHQpe2Zvcig7dD10LnBhcmVudE5vZGU7KXt2YXIgZT10LmNvbnRlbnRFZGl0YWJsZTtpZihlJiZcImluaGVyaXRcIiE9PWUpcmV0dXJuIE8xKHQpfXJldHVybiExfSh0KSYmIV8xKHQpfWZ1bmN0aW9uICRDKHIsdCl7ZnVuY3Rpb24gZSh0KXtyZXR1cm4gdmwocil9ZnVuY3Rpb24gbihuLG8pe3JldHVybiBmdW5jdGlvbih0LGUpe3JldHVybiBtbCh0LHIsZSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBuKHQsZSl9KS5nZXRPcihvKX19ZnVuY3Rpb24gbyh0LGUpe3JldHVyblwidHJ1ZVwiIT09aWUodC5lbGVtZW50LFwiYXJpYS1oaWRkZW5cIil9dmFyIGksdT1uKG8sITEpLGE9bihmdW5jdGlvbih0LGUpe3ZhciBuO28odCkmJihmZShuPXQuZWxlbWVudCxcImRpc3BsYXlcIixcIm5vbmVcIiksb2UobixcImFyaWEtaGlkZGVuXCIsXCJ0cnVlXCIpLGJyKHQsSmkoKSx7bmFtZTplLHZpc2libGU6ITF9KSl9KSxjPShpPWEsZnVuY3Rpb24oZSx0KXtTdCh0LGZ1bmN0aW9uKHQpe3JldHVybiBpKGUsdCl9KX0pLHM9bihmdW5jdGlvbih0LGUpe3ZhciBuO28odCl8fCh2ZShuPXQuZWxlbWVudCxcImRpc3BsYXlcIiksY2UobixcImFyaWEtaGlkZGVuXCIpLGJyKHQsSmkoKSx7bmFtZTplLHZpc2libGU6ITB9KSl9KTtyZXR1cm57dWlkOnIudWlkLGRvbTpyLmRvbSxjb21wb25lbnRzOnQsYmVoYXZpb3Vyczp0bChyLnNsb3RCZWhhdmlvdXJzKSxhcGlzOntnZXRTbG90TmFtZXM6ZSxnZXRTbG90OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIG1sKHQscixlKX0saXNTaG93aW5nOnUsaGlkZVNsb3Q6YSxoaWRlQWxsU2xvdHM6ZnVuY3Rpb24odCl7cmV0dXJuIGModCxlKCkpfSxzaG93U2xvdDpzfX19ZnVuY3Rpb24gUUModCxlKXttbCh0LGUsXCJvdmVyZmxvd1wiKS5lYWNoKGZ1bmN0aW9uKG4pe1RDKHQsZSxmdW5jdGlvbih0KXt2YXIgZT1CKHQsZnVuY3Rpb24odCl7cmV0dXJuIEV1KHQpfSk7TjEuc2V0R3JvdXBzKG4sZSl9KSxtbCh0LGUsXCJvdmVyZmxvdy1idXR0b25cIikuZWFjaChmdW5jdGlvbih0KXtuTy5oYXNHcm93bihuKSYmemcub24odCl9KSxuTy5yZWZyZXNoKG4pfSl9dmFyIFpDLHQxLGUxLG4xPVwiZGF0YS12YWx1ZVwiLG8xPWZ1bmN0aW9uKGUsbix0LG8pe3JldHVybiBCKHQsZnVuY3Rpb24odCl7cmV0dXJuIHJrKHQpP3t0eXBlOlwidG9nZ2xlbWVudWl0ZW1cIix0ZXh0OnQudGV4dCx2YWx1ZTp0LnZhbHVlLGFjdGl2ZTp0LnZhbHVlPT09byxvbkFjdGlvbjpmdW5jdGlvbigpe0RmLnNldFZhbHVlKGUsdC52YWx1ZSksYnIoZSx5eSx7bmFtZTpufSksVmcuZm9jdXMoZSl9fTp7dHlwZTpcIm5lc3RlZG1lbnVpdGVtXCIsdGV4dDp0LnRleHQsZ2V0U3VibWVudUl0ZW1zOmZ1bmN0aW9uKCl7cmV0dXJuIG8xKGUsbix0Lml0ZW1zLG8pfX19KX0scjE9ZnVuY3Rpb24odCxlKXtyZXR1cm4gSyh0LGZ1bmN0aW9uKHQpe3JldHVybiByayh0KT9vdCh0LnZhbHVlPT09ZSx0KTpyMSh0Lml0ZW1zLGUpfSl9LGkxPWtsKHtuYW1lOlwiSHRtbFNlbGVjdFwiLGNvbmZpZ0ZpZWxkczpbbW8oXCJvcHRpb25zXCIpLFpzKFwic2VsZWN0QmVoYXZpb3Vyc1wiLFtWZyxEZl0pLEVvKFwic2VsZWN0Q2xhc3Nlc1wiLFtdKSxFbyhcInNlbGVjdEF0dHJpYnV0ZXNcIix7fSksd28oXCJkYXRhXCIpXSxmYWN0b3J5OmZ1bmN0aW9uKG4sdCl7dmFyIGU9QihuLm9wdGlvbnMsZnVuY3Rpb24odCl7cmV0dXJue2RvbTp7dGFnOlwib3B0aW9uXCIsdmFsdWU6dC52YWx1ZSxpbm5lckh0bWw6dC50ZXh0fX19KSxvPW4uZGF0YS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHNyKFwiaW5pdGlhbFZhbHVlXCIsdCl9KS5nZXRPcih7fSk7cmV0dXJue3VpZDpuLnVpZCxkb206e3RhZzpcInNlbGVjdFwiLGNsYXNzZXM6bi5zZWxlY3RDbGFzc2VzLGF0dHJpYnV0ZXM6bi5zZWxlY3RBdHRyaWJ1dGVzfSxjb21wb25lbnRzOmUsYmVoYXZpb3VyczplbChuLnNlbGVjdEJlaGF2aW91cnMsW1ZnLmNvbmZpZyh7fSksRGYuY29uZmlnKHtzdG9yZTpsdCh7bW9kZTpcIm1hbnVhbFwiLGdldFZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiBRcih0LmVsZW1lbnQpfSxzZXRWYWx1ZTpmdW5jdGlvbih0LGUpe04obi5vcHRpb25zLGZ1bmN0aW9uKHQpe3JldHVybiB0LnZhbHVlPT09ZX0pLmlzU29tZSgpJiZacih0LmVsZW1lbnQsZSl9fSxvKX0pXSl9fX0pLHUxPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGV2ZW50czpmdW5jdGlvbih0LGUpe3ZhciBuPXQuc3RyZWFtLnN0cmVhbXMuc2V0dXAodCxlKTtyZXR1cm4gbnUoW0NyKHQuZXZlbnQsbikscnUoZnVuY3Rpb24oKXtyZXR1cm4gZS5jYW5jZWwoKX0pXS5jb25jYXQodC5jYW5jZWxFdmVudC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuW0NyKHQsZnVuY3Rpb24oKXtyZXR1cm4gZS5jYW5jZWwoKX0pXX0pLmdldE9yKFtdKSkpfX0pLGExPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLHRocm90dGxlOmFrLGluaXQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQuc3RyZWFtLnN0cmVhbXMuc3RhdGUodCl9fSksYzE9eGEoe2ZpZWxkczpbZ28oXCJzdHJlYW1cIixsbyhcIm1vZGVcIix7dGhyb3R0bGU6W21vKFwiZGVsYXlcIiksRW8oXCJzdG9wRXZlbnRcIiwhMCksdGEoXCJzdHJlYW1zXCIse3NldHVwOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5zdHJlYW0sbz12cCh0Lm9uU3RyZWFtLG4uZGVsYXkpO3JldHVybiBlLnNldFRpbWVyKG8pLGZ1bmN0aW9uKHQsZSl7by50aHJvdHRsZSh0LGUpLG4uc3RvcEV2ZW50JiZlLnN0b3AoKX19LHN0YXRlOmFrfSldfSkpLEVvKFwiZXZlbnRcIixcImlucHV0XCIpLHdvKFwiY2FuY2VsRXZlbnRcIiksUXUoXCJvblN0cmVhbVwiKV0sbmFtZTpcInN0cmVhbWluZ1wiLGFjdGl2ZTp1MSxzdGF0ZTphMX0pLHMxPWZ1bmN0aW9uKHQpe3NrKHQsZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5zZXRTZWxlY3Rpb25SYW5nZShlLmxlbmd0aCxlLmxlbmd0aCl9KX0sbDE9cnQoXCJhbGxveS50eXBlYWhlYWQuaXRlbWV4ZWN1dGVcIiksZjE9cnQoW3dvKFwibGF6eVNpbmtcIiksbW8oXCJmZXRjaFwiKSxFbyhcIm1pbkNoYXJzXCIsNSksRW8oXCJyZXNwb25zZVRpbWVcIiwxZTMpLEp1KFwib25PcGVuXCIpLEVvKFwiZ2V0SG90c3BvdFwiLHZ0LnNvbWUpLEVvKFwiZ2V0QW5jaG9yT3ZlcnJpZGVzXCIscnQoe30pKSxFbyhcImxheW91dHNcIix2dC5ub25lKCkpLEVvKFwiZXZlbnRPcmRlclwiLHt9KSxObyhcIm1vZGVsXCIse30sW0VvKFwiZ2V0RGlzcGxheVRleHRcIixmdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwIT09dC5tZXRhJiZ2b2lkIDAhPT10Lm1ldGEudGV4dD90Lm1ldGEudGV4dDp0LnZhbHVlfSksRW8oXCJzZWxlY3RzT3ZlclwiLCEwKSxFbyhcInBvcHVsYXRlRnJvbUJyb3dzZVwiLCEwKV0pLEp1KFwib25TZXRWYWx1ZVwiKSwkdShcIm9uRXhlY3V0ZVwiKSxKdShcIm9uSXRlbUV4ZWN1dGVcIiksRW8oXCJpbnB1dENsYXNzZXNcIixbXSksRW8oXCJpbnB1dEF0dHJpYnV0ZXNcIix7fSksRW8oXCJpbnB1dFN0eWxlc1wiLHt9KSxFbyhcIm1hdGNoV2lkdGhcIiwhMCksRW8oXCJ1c2VNaW5XaWR0aFwiLCExKSxFbyhcImRpc21pc3NPbkJsdXJcIiwhMCkscXUoW1wib3BlbkNsYXNzXCJdKSx3byhcImluaXRpYWxEYXRhXCIpLFpzKFwidHlwZWFoZWFkQmVoYXZpb3Vyc1wiLFtWZyxEZixjMSxGZyx6ZywkeV0pLGNyKFwicHJldmlld2luZ1wiLGZ1bmN0aW9uKCl7cmV0dXJuIFBvKCEwKX0pXS5jb25jYXQoRXkoKSkuY29uY2F0KHV4KCkpKSxkMT1ydChbJGYoe3NjaGVtYTpbWXUoKV0sbmFtZTpcIm1lbnVcIixvdmVycmlkZXM6ZnVuY3Rpb24obyl7cmV0dXJue2Zha2VGb2N1czohMCxvbkhpZ2hsaWdodDpmdW5jdGlvbihlLG4pe28ucHJldmlld2luZy5nZXQoKT9lLmdldFN5c3RlbSgpLmdldEJ5VWlkKG8udWlkKS5lYWNoKGZ1bmN0aW9uKHQpeyFmdW5jdGlvbih0LGUsbyl7aWYodC5zZWxlY3RzT3Zlcil7dmFyIG49RGYuZ2V0VmFsdWUoZSkscj10LmdldERpc3BsYXlUZXh0KG4pLGk9RGYuZ2V0VmFsdWUobyk7cmV0dXJuIDA9PT10LmdldERpc3BsYXlUZXh0KGkpLmluZGV4T2Yocik/dnQuc29tZShmdW5jdGlvbigpe3ZhciBuO2NrKDAsZSxvKSxuPXIubGVuZ3RoLHNrKGUsZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5zZXRTZWxlY3Rpb25SYW5nZShuLGUubGVuZ3RoKX0pfSk6dnQubm9uZSgpfXJldHVybiB2dC5ub25lKCl9KG8ubW9kZWwsdCxuKS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIGhkLmRlaGlnaGxpZ2h0KGUsbil9LGZ1bmN0aW9uKHQpe3JldHVybiB0KCl9KX0pOmUuZ2V0U3lzdGVtKCkuZ2V0QnlVaWQoby51aWQpLmVhY2goZnVuY3Rpb24odCl7by5tb2RlbC5wb3B1bGF0ZUZyb21Ccm93c2UmJmNrKG8ubW9kZWwsdCxuKX0pLG8ucHJldmlld2luZy5zZXQoITEpfSxvbkV4ZWN1dGU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5nZXRTeXN0ZW0oKS5nZXRCeVVpZChvLnVpZCkudG9PcHRpb25hbCgpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gYnIodCxsMSgpLHtpdGVtOmV9KSwhMH0pfSxvbkhvdmVyOmZ1bmN0aW9uKHQsZSl7by5wcmV2aWV3aW5nLnNldCghMSksdC5nZXRTeXN0ZW0oKS5nZXRCeVVpZChvLnVpZCkuZWFjaChmdW5jdGlvbih0KXtvLm1vZGVsLnBvcHVsYXRlRnJvbUJyb3dzZSYmY2soby5tb2RlbCx0LGUpfSl9fX19KV0pLG0xPUNsKHtuYW1lOlwiVHlwZWFoZWFkXCIsY29uZmlnRmllbGRzOmYxKCkscGFydEZpZWxkczpkMSgpLGZhY3Rvcnk6ZnVuY3Rpb24ocix0LGUsaSl7ZnVuY3Rpb24gbih0LGUsbil7ci5wcmV2aWV3aW5nLnNldCghMSk7dmFyIG89JHkuZ2V0Q291cGxlZCh0LFwic2FuZGJveFwiKTtiZi5pc09wZW4obyk/Y2QuZ2V0Q3VycmVudChvKS5lYWNoKGZ1bmN0aW9uKHQpe2hkLmdldEhpZ2hsaWdodGVkKHQpLmZvbGQoZnVuY3Rpb24oKXtuKHQpfSxmdW5jdGlvbigpe3dyKG8sdC5lbGVtZW50LFwia2V5ZG93blwiLGUpfSl9KTpleChyLHUodCksdCxvLGksZnVuY3Rpb24odCl7Y2QuZ2V0Q3VycmVudCh0KS5lYWNoKG4pfSxWeS5IaWdobGlnaHRGaXJzdCkuZ2V0KHN0KX1mdW5jdGlvbiB1KG4pe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gdC5tYXAoZnVuY3Rpb24odCl7dmFyIGU9SChaKHQubWVudXMpLGZ1bmN0aW9uKHQpe3JldHVybiBGKHQuaXRlbXMsZnVuY3Rpb24odCl7cmV0dXJuXCJpdGVtXCI9PT10LnR5cGV9KX0pO3JldHVybiBEZi5nZXRTdGF0ZShuKS51cGRhdGUoQihlLGZ1bmN0aW9uKHQpe3JldHVybiB0LmRhdGF9KSksdH0pfX12YXIgbz1yeShyKSxhPVtWZy5jb25maWcoe30pLERmLmNvbmZpZyh7b25TZXRWYWx1ZTpyLm9uU2V0VmFsdWUsc3RvcmU6bHQoe21vZGU6XCJkYXRhc2V0XCIsZ2V0RGF0YUtleTpmdW5jdGlvbih0KXtyZXR1cm4gUXIodC5lbGVtZW50KX0sZ2V0RmFsbGJhY2tFbnRyeTpmdW5jdGlvbih0KXtyZXR1cm57dmFsdWU6dCxtZXRhOnt9fX0sc2V0VmFsdWU6ZnVuY3Rpb24odCxlKXtacih0LmVsZW1lbnQsci5tb2RlbC5nZXREaXNwbGF5VGV4dChlKSl9fSxyLmluaXRpYWxEYXRhLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gc3IoXCJpbml0aWFsVmFsdWVcIix0KX0pLmdldE9yKHt9KSl9KSxjMS5jb25maWcoe3N0cmVhbTp7bW9kZTpcInRocm90dGxlXCIsZGVsYXk6ci5yZXNwb25zZVRpbWUsc3RvcEV2ZW50OiExfSxvblN0cmVhbTpmdW5jdGlvbih0LGUpe3ZhciBuLG89JHkuZ2V0Q291cGxlZCh0LFwic2FuZGJveFwiKTtWZy5pc0ZvY3VzZWQodCkmJlFyKHQuZWxlbWVudCkubGVuZ3RoPj1yLm1pbkNoYXJzJiYobj1jZC5nZXRDdXJyZW50KG8pLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIGhkLmdldEhpZ2hsaWdodGVkKHQpLm1hcChEZi5nZXRWYWx1ZSl9KSxyLnByZXZpZXdpbmcuc2V0KCEwKSxleChyLHUodCksdCxvLGksZnVuY3Rpb24odCl7Y2QuZ2V0Q3VycmVudChvKS5lYWNoKGZ1bmN0aW9uKHQpe24uZm9sZChmdW5jdGlvbigpe3IubW9kZWwuc2VsZWN0c092ZXImJmhkLmhpZ2hsaWdodEZpcnN0KHQpfSxmdW5jdGlvbihlKXtoZC5oaWdobGlnaHRCeSh0LGZ1bmN0aW9uKHQpe3JldHVybiBEZi5nZXRWYWx1ZSh0KS52YWx1ZT09PWUudmFsdWV9KSxoZC5nZXRIaWdobGlnaHRlZCh0KS5vclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIGhkLmhpZ2hsaWdodEZpcnN0KHQpLHZ0Lm5vbmUoKX0pfSl9KX0sVnkuSGlnaGxpZ2h0Rmlyc3QpLmdldChzdCkpfSxjYW5jZWxFdmVudDpIaSgpfSksRmcuY29uZmlnKHttb2RlOlwic3BlY2lhbFwiLG9uRG93bjpmdW5jdGlvbih0LGUpe3JldHVybiBuKHQsZSxoZC5oaWdobGlnaHRGaXJzdCksdnQuc29tZSghMCl9LG9uRXNjYXBlOmZ1bmN0aW9uKHQpe3ZhciBlPSR5LmdldENvdXBsZWQodCxcInNhbmRib3hcIik7cmV0dXJuIGJmLmlzT3BlbihlKT8oYmYuY2xvc2UoZSksdnQuc29tZSghMCkpOnZ0Lm5vbmUoKX0sb25VcDpmdW5jdGlvbih0LGUpe3JldHVybiBuKHQsZSxoZC5oaWdobGlnaHRMYXN0KSx2dC5zb21lKCEwKX0sb25FbnRlcjpmdW5jdGlvbihlKXt2YXIgdD0keS5nZXRDb3VwbGVkKGUsXCJzYW5kYm94XCIpLG49YmYuaXNPcGVuKHQpO2lmKG4mJiFyLnByZXZpZXdpbmcuZ2V0KCkpcmV0dXJuIGNkLmdldEN1cnJlbnQodCkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gaGQuZ2V0SGlnaGxpZ2h0ZWQodCl9KS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIGJyKGUsbDEoKSx7aXRlbTp0fSksITB9KTt2YXIgbz1EZi5nZXRWYWx1ZShlKTtyZXR1cm4gdnIoZSxIaSgpKSxyLm9uRXhlY3V0ZSh0LGUsbyksbiYmYmYuY2xvc2UodCksdnQuc29tZSghMCl9fSksemcuY29uZmlnKHt0b2dnbGVDbGFzczpyLm1hcmtlcnMub3BlbkNsYXNzLGFyaWE6e21vZGU6XCJleHBhbmRlZFwifX0pLCR5LmNvbmZpZyh7b3RoZXJzOntzYW5kYm94OmZ1bmN0aW9uKHQpe3JldHVybiByeChyLHQse29uT3BlbjpmdW5jdGlvbigpe3JldHVybiB6Zy5vbih0KX0sb25DbG9zZTpmdW5jdGlvbigpe3JldHVybiB6Zy5vZmYodCl9fSl9fX0pLG1tKFwidHlwZWFoZWFkZXZlbnRzXCIsW3V1KGZ1bmN0aW9uKHQpe254KHIsdSh0KSx0LGksc3QsVnkuSGlnaGxpZ2h0Rmlyc3QpLmdldChzdCl9KSxDcihsMSgpLGZ1bmN0aW9uKHQsZSl7dmFyIG49JHkuZ2V0Q291cGxlZCh0LFwic2FuZGJveFwiKTtjayhyLm1vZGVsLHQsZS5ldmVudC5pdGVtKSx2cih0LEhpKCkpLHIub25JdGVtRXhlY3V0ZSh0LG4sZS5ldmVudC5pdGVtLERmLmdldFZhbHVlKHQpKSxiZi5jbG9zZShuKSxzMSh0KX0pXS5jb25jYXQoci5kaXNtaXNzT25CbHVyP1tDcihCaSgpLGZ1bmN0aW9uKHQpe3ZhciBlPSR5LmdldENvdXBsZWQodCxcInNhbmRib3hcIik7X2EoZS5lbGVtZW50KS5pc05vbmUoKSYmYmYuY2xvc2UoZSl9KV06W10pKV07cmV0dXJue3VpZDpyLnVpZCxkb206aXkoWW8ocix7aW5wdXRBdHRyaWJ1dGVzOntyb2xlOlwiY29tYm9ib3hcIixcImFyaWEtYXV0b2NvbXBsZXRlXCI6XCJsaXN0XCIsXCJhcmlhLWhhc3BvcHVwXCI6XCJ0cnVlXCJ9fSkpLGJlaGF2aW91cnM6bHQobHQoe30sbyksZWwoci50eXBlYWhlYWRCZWhhdmlvdXJzLGEpKSxldmVudE9yZGVyOnIuZXZlbnRPcmRlcn19fSksZzE9ZnVuY3Rpb24oaSl7cmV0dXJuIGx0KGx0KHt9LGkpLHt0b0NhY2hlZDpmdW5jdGlvbigpe3JldHVybiBnMShpLnRvQ2FjaGVkKCkpfSxiaW5kRnV0dXJlOmZ1bmN0aW9uKGUpe3JldHVybiBnMShpLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIHQuZm9sZChmdW5jdGlvbih0KXtyZXR1cm4gR3koTm4uZXJyb3IodCkpfSxmdW5jdGlvbih0KXtyZXR1cm4gZSh0KX0pfSkpfSxiaW5kUmVzdWx0OmZ1bmN0aW9uKGUpe3JldHVybiBnMShpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5iaW5kKGUpfSkpfSxtYXBSZXN1bHQ6ZnVuY3Rpb24oZSl7cmV0dXJuIGcxKGkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0Lm1hcChlKX0pKX0sbWFwRXJyb3I6ZnVuY3Rpb24oZSl7cmV0dXJuIGcxKGkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0Lm1hcEVycm9yKGUpfSkpfSxmb2xkUmVzdWx0OmZ1bmN0aW9uKGUsbil7cmV0dXJuIGkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LmZvbGQoZSxuKX0pfSx3aXRoVGltZW91dDpmdW5jdGlvbih0LHIpe3JldHVybiBnMShXeShmdW5jdGlvbihlKXt2YXIgbj0hMSxvPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtuPSEwLGUoTm4uZXJyb3IocigpKSl9LHQpO2kuZ2V0KGZ1bmN0aW9uKHQpe258fChjbGVhclRpbWVvdXQobyksZSh0KSl9KX0pKX19KX0scDE9ZnVuY3Rpb24odCl7cmV0dXJuIGcxKFd5KHQpKX0saDE9e3R5cGU6XCJzZXBhcmF0b3JcIn0sdjE9SXIoXCJhcmlhLWludmFsaWRcIiksYjE9e2JhcjpwayhmdW5jdGlvbih0LGUpe3JldHVybiBuPWUuc2hhcmVkLHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWJhclwiLFwidG94LWZvcm1fX2NvbnRyb2xzLWgtc3RhY2tcIl19LGNvbXBvbmVudHM6Qih0Lml0ZW1zLG4uaW50ZXJwcmV0ZXIpfTt2YXIgbn0pLGNvbGxlY3Rpb246cGsoZnVuY3Rpb24odCxlKXtyZXR1cm4gdT10LGE9ZS5zaGFyZWQucHJvdmlkZXJzLGM9dS5sYWJlbC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIG95KHQsYSl9KSxzPW4oZnVuY3Rpb24odCxlLG4sbyl7ZS5zdG9wKCksYS5pc0Rpc2FibGVkKCl8fGJyKHQsU3kse25hbWU6dS5uYW1lLHZhbHVlOm99KX0pLGw9W0NyKHZpKCksbihmdW5jdGlvbih0LGUsbil7a2Eobil9KSksQ3IoQ2koKSxzKSxDcihOaSgpLHMpLENyKGJpKCksbihmdW5jdGlvbih0LGUsbil7SXUodC5lbGVtZW50LFwiLlwiK0JoKS5lYWNoKGZ1bmN0aW9uKHQpe3FyKHQsQmgpfSksWXIobixCaCl9KSksQ3IoeWkoKSxuKGZ1bmN0aW9uKHQpe0l1KHQuZWxlbWVudCxcIi5cIitCaCkuZWFjaChmdW5jdGlvbih0KXtxcih0LEJoKX0pfSkpLHV1KG4oZnVuY3Rpb24odCxlLG4sbyl7YnIodCxTeSx7bmFtZTp1Lm5hbWUsdmFsdWU6b30pfSkpXSxueShjLG15LnBhcnRzLmZpZWxkKHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWNvbGxlY3Rpb25cIl0uY29uY2F0KDEhPT11LmNvbHVtbnM/W1widG94LWNvbGxlY3Rpb24tLWdyaWRcIl06W1widG94LWNvbGxlY3Rpb24tLWxpc3RcIl0pfSxjb21wb25lbnRzOltdLGZhY3Rvcnk6e3NrZXRjaDpofSxiZWhhdmlvdXJzOmVjKFtnZC5jb25maWcoe2Rpc2FibGVkOmEuaXNEaXNhYmxlZCxvbkRpc2FibGVkOmZ1bmN0aW9uKHQpe28odCxmdW5jdGlvbih0KXtZcih0LFwidG94LWNvbGxlY3Rpb25fX2l0ZW0tLXN0YXRlLWRpc2FibGVkXCIpLG9lKHQsXCJhcmlhLWRpc2FibGVkXCIsITApfSl9LG9uRW5hYmxlZDpmdW5jdGlvbih0KXtvKHQsZnVuY3Rpb24odCl7cXIodCxcInRveC1jb2xsZWN0aW9uX19pdGVtLS1zdGF0ZS1kaXNhYmxlZFwiKSxjZSh0LFwiYXJpYS1kaXNhYmxlZFwiKX0pfX0pLHB2KCksUmcuY29uZmlnKHt9KSxEZi5jb25maWcoe3N0b3JlOnttb2RlOlwibWVtb3J5XCIsaW5pdGlhbFZhbHVlOltdfSxvblNldFZhbHVlOmZ1bmN0aW9uKG8sdCl7dmFyIGU9byxuPUIodCxmdW5jdGlvbih0KXt2YXIgZT1kcC50cmFuc2xhdGUodC50ZXh0KSxuPTE9PT11LmNvbHVtbnM/JzxkaXYgY2xhc3M9XCJ0b3gtY29sbGVjdGlvbl9faXRlbS1sYWJlbFwiPicrZStcIjwvZGl2PlwiOlwiXCIsbz0nPGRpdiBjbGFzcz1cInRveC1jb2xsZWN0aW9uX19pdGVtLWljb25cIj4nK3QuaWNvbitcIjwvZGl2PlwiLHI9e186XCIgXCIsXCIgLSBcIjpcIiBcIixcIi1cIjpcIiBcIn0saT1lLnJlcGxhY2UoL1xcX3wgXFwtIHxcXC0vZyxmdW5jdGlvbih0KXtyZXR1cm4gclt0XX0pO3JldHVybic8ZGl2IGNsYXNzPVwidG94LWNvbGxlY3Rpb25fX2l0ZW0nKyhhLmlzRGlzYWJsZWQoKT9cIiB0b3gtY29sbGVjdGlvbl9faXRlbS0tc3RhdGUtZGlzYWJsZWRcIjpcIlwiKSsnXCIgdGFiaW5kZXg9XCItMVwiIGRhdGEtY29sbGVjdGlvbi1pdGVtLXZhbHVlPVwiJytoeS5lbmNvZGVBbGxSYXcodC52YWx1ZSkrJ1wiIHRpdGxlPVwiJytpKydcIiBhcmlhLWxhYmVsPVwiJytpKydcIj4nK28rbitcIjwvZGl2PlwifSkscj1CKFwiYXV0b1wiIT09dS5jb2x1bW5zJiYxPHUuY29sdW1ucz9wKG4sdS5jb2x1bW5zKTpbbl0sZnVuY3Rpb24odCl7cmV0dXJuJzxkaXYgY2xhc3M9XCJ0b3gtY29sbGVjdGlvbl9fZ3JvdXBcIj4nK3Quam9pbihcIlwiKStcIjwvZGl2PlwifSk7TXIoZS5lbGVtZW50LHIuam9pbihcIlwiKSksXCJhdXRvXCI9PT11LmNvbHVtbnMmJmFoKG8sNSxcInRveC1jb2xsZWN0aW9uX19pdGVtXCIpLmVhY2goZnVuY3Rpb24odCl7dmFyIGU9dC5udW1Sb3dzLG49dC5udW1Db2x1bW5zO0ZnLnNldEdyaWRTaXplKG8sZSxuKX0pLHZyKG8sVHkpfX0pLHB5LmNvbmZpZyh7fSksRmcuY29uZmlnKDE9PT0oaT11LmNvbHVtbnMpP3ttb2RlOlwibWVudVwiLG1vdmVPblRhYjohMSxzZWxlY3RvcjpcIi50b3gtY29sbGVjdGlvbl9faXRlbVwifTpcImF1dG9cIj09PWk/e21vZGU6XCJmbGF0Z3JpZFwiLHNlbGVjdG9yOlwiLnRveC1jb2xsZWN0aW9uX19pdGVtXCIsaW5pdFNpemU6e251bUNvbHVtbnM6MSxudW1Sb3dzOjF9fTp7bW9kZTpcIm1hdHJpeFwiLHNlbGVjdG9yczp7cm93OlwiLnRveC1jb2xsZWN0aW9uX19ncm91cFwiLGNlbGw6XCIuXCIrQ2h9fSksbW0oXCJjb2xsZWN0aW9uLWV2ZW50c1wiLGwpXSksZXZlbnRPcmRlcjooKHI9e30pW0lpKCldPVtcImRpc2FibGluZ1wiLFwiYWxsb3kuYmFzZS5iZWhhdmlvdXJcIixcImNvbGxlY3Rpb24tZXZlbnRzXCJdLHIpfSksW1widG94LWZvcm1fX2dyb3VwLS1jb2xsZWN0aW9uXCJdLFtdKTtmdW5jdGlvbiBuKG8pe3JldHVybiBmdW5jdGlvbihlLG4pe1J1KG4uZXZlbnQudGFyZ2V0LFwiW2RhdGEtY29sbGVjdGlvbi1pdGVtLXZhbHVlXVwiKS5lYWNoKGZ1bmN0aW9uKHQpe28oZSxuLHQsaWUodCxcImRhdGEtY29sbGVjdGlvbi1pdGVtLXZhbHVlXCIpKX0pfX1mdW5jdGlvbiBvKHQsZSl7cmV0dXJuIEIodnModC5lbGVtZW50LFwiLnRveC1jb2xsZWN0aW9uX19pdGVtXCIpLGUpfXZhciB1LGEscixpLGMscyxsfSksYWxlcnRiYW5uZXI6cGsoZnVuY3Rpb24odCxlKXtyZXR1cm4gbz1lLnNoYXJlZC5wcm92aWRlcnMsbHkuc2tldGNoKHtkb206e3RhZzpcImRpdlwiLGF0dHJpYnV0ZXM6e3JvbGU6XCJhbGVydFwifSxjbGFzc2VzOltcInRveC1ub3RpZmljYXRpb25cIixcInRveC1ub3RpZmljYXRpb24tLWluXCIsXCJ0b3gtbm90aWZpY2F0aW9uLS1cIisobj10KS5sZXZlbF19LGNvbXBvbmVudHM6W3tkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LW5vdGlmaWNhdGlvbl9faWNvblwiXX0sY29tcG9uZW50czpbZnAuc2tldGNoKHtkb206e3RhZzpcImJ1dHRvblwiLGNsYXNzZXM6W1widG94LWJ1dHRvblwiLFwidG94LWJ1dHRvbi0tbmFrZWRcIixcInRveC1idXR0b24tLWljb25cIl0saW5uZXJIdG1sOmptKG4uaWNvbixvLmljb25zKSxhdHRyaWJ1dGVzOnt0aXRsZTpvLnRyYW5zbGF0ZShuLmljb25Ub29sdGlwKX19LGFjdGlvbjpmdW5jdGlvbih0KXticih0LFN5LHtuYW1lOlwiYWxlcnQtYmFubmVyXCIsdmFsdWU6bi51cmx9KX0sYnV0dG9uQmVoYXZpb3VyczplYyhbV20oKV0pfSldfSx7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1ub3RpZmljYXRpb25fX2JvZHlcIl0saW5uZXJIdG1sOm8udHJhbnNsYXRlKG4udGV4dCl9fV19KTt2YXIgbixvfSksaW5wdXQ6cGsoZnVuY3Rpb24odCxlKXtyZXR1cm4gbz1lLnNoYXJlZC5wcm92aWRlcnMsdWsoe25hbWU6KG49dCkubmFtZSxtdWx0aWxpbmU6ITEsbGFiZWw6bi5sYWJlbCxpbnB1dE1vZGU6bi5pbnB1dE1vZGUscGxhY2Vob2xkZXI6bi5wbGFjZWhvbGRlcixmbGV4OiExLGRpc2FibGVkOm4uZGlzYWJsZWQsY2xhc3NuYW1lOlwidG94LXRleHRmaWVsZFwiLHZhbGlkYXRpb246dnQubm9uZSgpLG1heGltaXplZDpuLm1heGltaXplZH0sbyk7dmFyIG4sb30pLHRleHRhcmVhOnBrKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIG89ZS5zaGFyZWQucHJvdmlkZXJzLHVrKHtuYW1lOihuPXQpLm5hbWUsbXVsdGlsaW5lOiEwLGxhYmVsOm4ubGFiZWwsaW5wdXRNb2RlOnZ0Lm5vbmUoKSxwbGFjZWhvbGRlcjpuLnBsYWNlaG9sZGVyLGZsZXg6ITAsZGlzYWJsZWQ6bi5kaXNhYmxlZCxjbGFzc25hbWU6XCJ0b3gtdGV4dGFyZWFcIix2YWxpZGF0aW9uOnZ0Lm5vbmUoKSxtYXhpbWl6ZWQ6bi5tYXhpbWl6ZWR9LG8pO3ZhciBuLG99KSxsYWJlbDpwayhmdW5jdGlvbih0LGUpe3JldHVybiByPXtkb206e3RhZzpcImxhYmVsXCIsaW5uZXJIdG1sOihvPWUuc2hhcmVkKS5wcm92aWRlcnMudHJhbnNsYXRlKChuPXQpLmxhYmVsKSxjbGFzc2VzOltcInRveC1sYWJlbFwiXX19LGk9QihuLml0ZW1zLG8uaW50ZXJwcmV0ZXIpLHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWZvcm1fX2dyb3VwXCJdfSxjb21wb25lbnRzOltyXS5jb25jYXQoaSksYmVoYXZpb3VyczplYyhbYXcoKSxSZy5jb25maWcoe30pLGN3KHZ0Lm5vbmUoKSksRmcuY29uZmlnKHttb2RlOlwiYWN5Y2xpY1wifSldKX07dmFyIG4sbyxyLGl9KSxpZnJhbWU6KFpDPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG49dCxvPWUuc2hhcmVkLnByb3ZpZGVycyx1PWJTJiZuLnNhbmRib3hlZCxhPWx0KGx0KHt9LG4ubGFiZWwubWFwKGZ1bmN0aW9uKHQpe3JldHVybnt0aXRsZTp0fX0pLmdldE9yKHt9KSksdT97c2FuZGJveDpcImFsbG93LXNjcmlwdHMgYWxsb3ctc2FtZS1vcmlnaW5cIn06e30pLHI9dSxpPVBvKFwiXCIpLGM9e2dldFZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiBpLmdldCgpfSxzZXRWYWx1ZTpmdW5jdGlvbih0LGUpe3ZhciBuO3I/b2UodC5lbGVtZW50LFwic3JjZG9jXCIsZSk6KG9lKHQuZWxlbWVudCxcInNyY1wiLFwiamF2YXNjcmlwdDonJ1wiKSwobj10LmVsZW1lbnQuZG9tLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQpLm9wZW4oKSxuLndyaXRlKGUpLG4uY2xvc2UoKSksaS5zZXQoZSl9fSxueShuLmxhYmVsLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gb3kodCxvKX0pLG15LnBhcnRzLmZpZWxkKHtmYWN0b3J5Ontza2V0Y2g6ZnVuY3Rpb24odCl7cmV0dXJuIGQwKHt1aWQ6dC51aWQsZG9tOnt0YWc6XCJpZnJhbWVcIixhdHRyaWJ1dGVzOmF9LGJlaGF2aW91cnM6ZWMoW3B5LmNvbmZpZyh7fSksVmcuY29uZmlnKHt9KSxnUyh2dC5ub25lKCksYy5nZXRWYWx1ZSxjLnNldFZhbHVlKV0pfSl9fX0pLFtcInRveC1mb3JtX19ncm91cC0tc3RyZXRjaGVkXCJdLFtdKTt2YXIgbixvLHIsaSx1LGEsY30sZnVuY3Rpb24odCxlLG4pe3ZhciBvPVlvKGUse3NvdXJjZTpcImR5bmFtaWNcIn0pO3JldHVybiBwayhaQykodCxvLG4pfSksYnV0dG9uOnBrKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIG49dCxvPWUuc2hhcmVkLnByb3ZpZGVycyxyPSQwKG4ubmFtZSxcImN1c3RvbVwiKSxueSh2dC5ub25lKCksbXkucGFydHMuZmllbGQobHQoe2ZhY3Rvcnk6ZnB9LEswKG4sdnQuc29tZShyKSxvLFtwUyhcIlwiKSxhdygpXSkpKSxbXSxbXSk7dmFyIG4sbyxyfSksY2hlY2tib3g6cGsoZnVuY3Rpb24odCxlKXtyZXR1cm4gcj10LGk9ZS5zaGFyZWQucHJvdmlkZXJzLHU9RGYuY29uZmlnKHtzdG9yZTp7bW9kZTpcIm1hbnVhbFwiLGdldFZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQuZG9tLmNoZWNrZWR9LHNldFZhbHVlOmZ1bmN0aW9uKHQsZSl7dC5lbGVtZW50LmRvbS5jaGVja2VkPWV9fX0pLGE9bXkucGFydHMuZmllbGQoe2ZhY3Rvcnk6e3NrZXRjaDpofSxkb206e3RhZzpcImlucHV0XCIsY2xhc3NlczpbXCJ0b3gtY2hlY2tib3hfX2lucHV0XCJdLGF0dHJpYnV0ZXM6e3R5cGU6XCJjaGVja2JveFwifX0sYmVoYXZpb3VyczplYyhbYXcoKSxnZC5jb25maWcoe2Rpc2FibGVkOmZ1bmN0aW9uKCl7cmV0dXJuIHIuZGlzYWJsZWR8fGkuaXNEaXNhYmxlZCgpfX0pLHB5LmNvbmZpZyh7fSksVmcuY29uZmlnKHt9KSx1LEZnLmNvbmZpZyh7bW9kZTpcInNwZWNpYWxcIixvbkVudGVyOm4sb25TcGFjZTpuLHN0b3BTcGFjZUtleXVwOiEwfSksbW0oXCJjaGVja2JveC1ldmVudHNcIixbQ3Ioa2koKSxmdW5jdGlvbih0LGUpe2JyKHQseXkse25hbWU6ci5uYW1lfSl9KV0pXSl9KSxjPW15LnBhcnRzLmxhYmVsKHtkb206e3RhZzpcInNwYW5cIixjbGFzc2VzOltcInRveC1jaGVja2JveF9fbGFiZWxcIl0saW5uZXJIdG1sOmkudHJhbnNsYXRlKHIubGFiZWwpfSxiZWhhdmlvdXJzOmVjKFt2dy5jb25maWcoe30pXSl9KSxzPUhtKHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWNoZWNrYm94X19pY29uc1wiXX0sY29tcG9uZW50czpbbyhcImNoZWNrZWRcIiksbyhcInVuY2hlY2tlZFwiKV19KSxteS5za2V0Y2goe2RvbTp7dGFnOlwibGFiZWxcIixjbGFzc2VzOltcInRveC1jaGVja2JveFwiXX0sY29tcG9uZW50czpbYSxzLmFzU3BlYygpLGNdLGZpZWxkQmVoYXZpb3VyczplYyhbZ2QuY29uZmlnKHtkaXNhYmxlZDpmdW5jdGlvbigpe3JldHVybiByLmRpc2FibGVkfHxpLmlzRGlzYWJsZWQoKX0sZGlzYWJsZUNsYXNzOlwidG94LWNoZWNrYm94LS1kaXNhYmxlZFwiLG9uRGlzYWJsZWQ6ZnVuY3Rpb24odCl7bXkuZ2V0RmllbGQodCkuZWFjaChnZC5kaXNhYmxlKX0sb25FbmFibGVkOmZ1bmN0aW9uKHQpe215LmdldEZpZWxkKHQpLmVhY2goZ2QuZW5hYmxlKX19KSxwdigpXSl9KTtmdW5jdGlvbiBuKHQpe3JldHVybiB0LmVsZW1lbnQuZG9tLmNsaWNrKCksdnQuc29tZSghMCl9ZnVuY3Rpb24gbyh0KXtyZXR1cm4gWG0oXCJjaGVja2VkXCI9PT10P1wic2VsZWN0ZWRcIjpcInVuc2VsZWN0ZWRcIix7dGFnOlwic3BhblwiLGNsYXNzZXM6W1widG94LWljb25cIixcInRveC1jaGVja2JveC1pY29uX19cIit0XX0saS5pY29ucyl9dmFyIHIsaSx1LGEsYyxzfSksY29sb3JpbnB1dDpwayhmdW5jdGlvbih0LGUpe3JldHVybiBuPXQscj1lLnNoYXJlZCxpPWUuY29sb3JpbnB1dCxjPW15LnBhcnRzLmZpZWxkKHtmYWN0b3J5OkR5LGlucHV0Q2xhc3NlczpbXCJ0b3gtdGV4dGZpZWxkXCJdLG9uU2V0VmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIEt5LnJ1bih0KS5nZXQoc3QpfSxpbnB1dEJlaGF2aW91cnM6ZWMoW2dkLmNvbmZpZyh7ZGlzYWJsZWQ6ci5wcm92aWRlcnMuaXNEaXNhYmxlZH0pLHB2KCkscHkuY29uZmlnKHt9KSxLeS5jb25maWcoe2ludmFsaWRDbGFzczpcInRveC10ZXh0Ym94LWZpZWxkLWludmFsaWRcIixnZXRSb290OmZ1bmN0aW9uKHQpe3JldHVybiBZdCh0LmVsZW1lbnQpfSxub3RpZnk6e29uVmFsaWQ6ZnVuY3Rpb24odCl7dmFyIGU9RGYuZ2V0VmFsdWUodCk7YnIodCxidyx7Y29sb3I6ZX0pfX0sdmFsaWRhdG9yOnt2YWxpZGF0ZU9uTG9hZDohMSx2YWxpZGF0ZTpmdW5jdGlvbih0KXt2YXIgZT1EZi5nZXRWYWx1ZSh0KTtpZigwPT09ZS5sZW5ndGgpcmV0dXJuIEd5KE5uLnZhbHVlKCEwKSk7dmFyIG49TXQuZnJvbVRhZyhcInNwYW5cIik7ZmUobixcImJhY2tncm91bmQtY29sb3JcIixlKTt2YXIgbz1wZShuLFwiYmFja2dyb3VuZC1jb2xvclwiKS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIE5uLmVycm9yKFwiYmxhaFwiKX0sZnVuY3Rpb24odCl7cmV0dXJuIE5uLnZhbHVlKGUpfSk7cmV0dXJuIEd5KG8pfX19KV0pLHNlbGVjdE9uRm9jdXM6ITF9KSxzPW4ubGFiZWwubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBveSh0LHIucHJvdmlkZXJzKX0pLGw9SG0oKHU9e2RvbTp7dGFnOlwic3BhblwiLGF0dHJpYnV0ZXM6e1wiYXJpYS1sYWJlbFwiOnIucHJvdmlkZXJzLnRyYW5zbGF0ZShcIkNvbG9yIHN3YXRjaFwiKX19LGxheW91dHM6e29uUnRsOmZ1bmN0aW9uKCl7cmV0dXJuW1lhLFhhLCRhXX0sb25MdHI6ZnVuY3Rpb24oKXtyZXR1cm5bWGEsWWEsJGFdfX0sY29tcG9uZW50czpbXSxmZXRjaDp3YihpLmdldENvbG9ycygpLGkuaGFzQ3VzdG9tQ29sb3JzKCkpLGNvbHVtbnM6aS5nZXRDb2xvckNvbHMoKSxwcmVzZXRzOlwiY29sb3JcIixvbkl0ZW1BY3Rpb246ZnVuY3Rpb24odCxuKXtsLmdldE9wdCh0KS5lYWNoKGZ1bmN0aW9uKGUpe1wiY3VzdG9tXCI9PT1uP2kuY29sb3JQaWNrZXIoZnVuY3Rpb24odCl7dC5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIHZyKGUseHcpfSxmdW5jdGlvbih0KXtvKGUsdCksaGIodCl9KX0sXCIjZmZmZmZmXCIpOm8oZSxcInJlbW92ZVwiPT09bj9cIlwiOm4pfSl9fSxody5za2V0Y2goe2RvbTp1LmRvbSxjb21wb25lbnRzOnUuY29tcG9uZW50cyx0b2dnbGVDbGFzczpcIm1jZS1hY3RpdmVcIixkcm9wZG93bkJlaGF2aW91cnM6ZWMoWyR2KChhPXIpLnByb3ZpZGVycy5pc0Rpc2FibGVkKSxwdigpLHZ3LmNvbmZpZyh7fSkscHkuY29uZmlnKHt9KV0pLGxheW91dHM6dS5sYXlvdXRzLHNhbmRib3hDbGFzc2VzOltcInRveC1kaWFsb2dfX3BvcHVwc1wiXSxsYXp5U2luazphLmdldFNpbmssZmV0Y2g6ZnVuY3Rpb24oZSl7cmV0dXJuIFd5KGZ1bmN0aW9uKHQpe3JldHVybiB1LmZldGNoKHQpfSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB2dC5mcm9tKFhiKFlvKE9iKElyKFwibWVudS12YWx1ZVwiKSx0LGZ1bmN0aW9uKHQpe3Uub25JdGVtQWN0aW9uKGUsdCl9LHUuY29sdW1ucyx1LnByZXNldHMsU2guQ0xPU0VfT05fRVhFQ1VURSxULGEucHJvdmlkZXJzKSx7bW92ZW1lbnQ6X2IodS5jb2x1bW5zLHUucHJlc2V0cyl9KSkpfSl9LHBhcnRzOnttZW51OlpwKDAsMCx1LnByZXNldHMpfX0pKSksbXkuc2tldGNoKHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWZvcm1fX2dyb3VwXCJdfSxjb21wb25lbnRzOnMudG9BcnJheSgpLmNvbmNhdChbe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtY29sb3ItaW5wdXRcIl19LGNvbXBvbmVudHM6W2MsbC5hc1NwZWMoKV19XSksZmllbGRCZWhhdmlvdXJzOmVjKFttbShcImZvcm0tZmllbGQtZXZlbnRzXCIsW0NyKGJ3LGZ1bmN0aW9uKHQsZSl7bC5nZXRPcHQodCkuZWFjaChmdW5jdGlvbih0KXtmZSh0LmVsZW1lbnQsXCJiYWNrZ3JvdW5kLWNvbG9yXCIsZS5ldmVudC5jb2xvcil9KSxicih0LHl5LHtuYW1lOm4ubmFtZX0pfSksQ3IoeXcsZnVuY3Rpb24oZSxuKXtteS5nZXRGaWVsZChlKS5lYWNoKGZ1bmN0aW9uKHQpe0RmLnNldFZhbHVlKHQsbi5ldmVudC52YWx1ZSksY2QuZ2V0Q3VycmVudChlKS5lYWNoKFZnLmZvY3VzKX0pfSksQ3IoeHcsZnVuY3Rpb24oZSx0KXtteS5nZXRGaWVsZChlKS5lYWNoKGZ1bmN0aW9uKHQpe2NkLmdldEN1cnJlbnQoZSkuZWFjaChWZy5mb2N1cyl9KX0pXSldKX0pO2Z1bmN0aW9uIG8odCxlKXticih0LHl3LHt2YWx1ZTplfSl9dmFyIG4scixpLHUsYSxjLHMsbH0pLGNvbG9ycGlja2VyOnBrKGZ1bmN0aW9uKHQpe3ZhciByPUhtKGEwKGMwLGZ1bmN0aW9uKHQpe3JldHVyblwidG94LVwiK3R9KS5za2V0Y2goe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtY29sb3ItcGlja2VyLWNvbnRhaW5lclwiXSxhdHRyaWJ1dGVzOntyb2xlOlwicHJlc2VudGF0aW9uXCJ9fSxvblZhbGlkSGV4OmZ1bmN0aW9uKHQpe2JyKHQsU3kse25hbWU6XCJoZXgtdmFsaWRcIix2YWx1ZTohMH0pfSxvbkludmFsaWRIZXg6ZnVuY3Rpb24odCl7YnIodCxTeSx7bmFtZTpcImhleC12YWxpZFwiLHZhbHVlOiExfSl9fSkpO3JldHVybntkb206e3RhZzpcImRpdlwifSxjb21wb25lbnRzOltyLmFzU3BlYygpXSxiZWhhdmlvdXJzOmVjKFtEZi5jb25maWcoe3N0b3JlOnttb2RlOlwibWFudWFsXCIsZ2V0VmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9ci5nZXQodCk7cmV0dXJuIGNkLmdldEN1cnJlbnQoZSkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gRGYuZ2V0VmFsdWUodCkuaGV4fSkubWFwKGZ1bmN0aW9uKHQpe3JldHVyblwiI1wiK3R9KS5nZXRPcihcIlwiKX0sc2V0VmFsdWU6ZnVuY3Rpb24odCxlKXt2YXIgbj0vXiMoW2EtZkEtRjAtOV17M30oPzpbYS1mQS1GMC05XXszfSk/KS8uZXhlYyhlKSxvPXIuZ2V0KHQpO2NkLmdldEN1cnJlbnQobykuZm9sZChmdW5jdGlvbigpe2NvbnNvbGUubG9nKFwiQ2FuIG5vdCBmaW5kIGZvcm1cIil9LGZ1bmN0aW9uKHQpe0RmLnNldFZhbHVlKHQse2hleDp2dC5mcm9tKG5bMV0pLmdldE9yKFwiXCIpfSksblMuZ2V0RmllbGQodCxcImhleFwiKS5lYWNoKGZ1bmN0aW9uKHQpe3ZyKHQsU2koKSl9KX0pfX19KSxhdygpXSl9fSksZHJvcHpvbmU6cGsoZnVuY3Rpb24odCxlKXtyZXR1cm4gbDAodCxlLnNoYXJlZC5wcm92aWRlcnMpfSksZ3JpZDpwayhmdW5jdGlvbih0LGUpe3JldHVybiBuPWUuc2hhcmVkLHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWZvcm1fX2dyaWRcIixcInRveC1mb3JtX19ncmlkLS1cIit0LmNvbHVtbnMrXCJjb2xcIl19LGNvbXBvbmVudHM6Qih0Lml0ZW1zLG4uaW50ZXJwcmV0ZXIpfTt2YXIgbn0pLGxpc3Rib3g6cGsoZnVuY3Rpb24odCxlKXtyZXR1cm4gbj10LHI9KG89ZSkuc2hhcmVkLnByb3ZpZGVycyxpPVkobi5pdGVtcykuZmlsdGVyKHJrKSx1PW4ubGFiZWwubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBveSh0LHIpfSksYT17ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1saXN0Ym94ZmllbGRcIl19LGNvbXBvbmVudHM6W215LnBhcnRzLmZpZWxkKHtkb206e30sZmFjdG9yeTp7c2tldGNoOmZ1bmN0aW9uKHQpe3JldHVybiB6MCh7dWlkOnQudWlkLHRleHQ6aS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQudGV4dH0pLGljb246dnQubm9uZSgpLHRvb2x0aXA6bi5sYWJlbCxyb2xlOnZ0Lm5vbmUoKSxmZXRjaDpmdW5jdGlvbih0LGUpe2UoajAobzEodCxuLm5hbWUsbi5pdGVtcyxEZi5nZXRWYWx1ZSh0KSksU2guQ0xPU0VfT05fRVhFQ1VURSxvLCExKSl9LG9uU2V0dXA6cnQoc3QpLGdldEFwaTpydCh7fSksY29sdW1uczoxLHByZXNldHM6XCJub3JtYWxcIixjbGFzc2VzOltdLGRyb3Bkb3duQmVoYXZpb3VyczpbcHkuY29uZmlnKHt9KSxEZi5jb25maWcoe3N0b3JlOnttb2RlOlwibWFudWFsXCIsaW5pdGlhbFZhbHVlOmkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LnZhbHVlfSkuZ2V0T3IoXCJcIiksZ2V0VmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIGllKHQuZWxlbWVudCxuMSl9LHNldFZhbHVlOmZ1bmN0aW9uKGUsdCl7cjEobi5pdGVtcyx0KS5lYWNoKGZ1bmN0aW9uKHQpe29lKGUuZWxlbWVudCxuMSx0LnZhbHVlKSxicihlLE5TLHt0ZXh0OnQudGV4dH0pfSl9fX0pXX0sXCJ0b3gtbGlzdGJveFwiLG8uc2hhcmVkKX19fSldfSxteS5za2V0Y2goe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtZm9ybV9fZ3JvdXBcIl19LGNvbXBvbmVudHM6ZnQoW3UudG9BcnJheSgpLFthXV0pLGZpZWxkQmVoYXZpb3VyczplYyhbZ2QuY29uZmlnKHtkaXNhYmxlZDpydChuLmRpc2FibGVkKSxvbkRpc2FibGVkOmZ1bmN0aW9uKHQpe215LmdldEZpZWxkKHQpLmVhY2goZ2QuZGlzYWJsZSl9LG9uRW5hYmxlZDpmdW5jdGlvbih0KXtteS5nZXRGaWVsZCh0KS5lYWNoKGdkLmVuYWJsZSl9fSldKX0pO3ZhciBuLG8scixpLHUsYX0pLHNlbGVjdGJveDpwayhmdW5jdGlvbih0LGUpe3JldHVybiBuPXQsbz1lLnNoYXJlZC5wcm92aWRlcnMscj1CKG4uaXRlbXMsZnVuY3Rpb24odCl7cmV0dXJue3RleHQ6by50cmFuc2xhdGUodC50ZXh0KSx2YWx1ZTp0LnZhbHVlfX0pLGk9bi5sYWJlbC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIG95KHQsbyl9KSx1PXtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LXNlbGVjdGZpZWxkXCJdfSxjb21wb25lbnRzOmZ0KFtbbXkucGFydHMuZmllbGQoe2RvbTp7fSxzZWxlY3RBdHRyaWJ1dGVzOntzaXplOm4uc2l6ZX0sb3B0aW9uczpyLGZhY3Rvcnk6aTEsc2VsZWN0QmVoYXZpb3VyczplYyhbZ2QuY29uZmlnKHtkaXNhYmxlZDpmdW5jdGlvbigpe3JldHVybiBuLmRpc2FibGVkfHxvLmlzRGlzYWJsZWQoKX19KSxweS5jb25maWcoe30pLG1tKFwic2VsZWN0Ym94LWNoYW5nZVwiLFtDcihraSgpLGZ1bmN0aW9uKHQsZSl7YnIodCx5eSx7bmFtZTpuLm5hbWV9KX0pXSldKX0pXSwoMTxuLnNpemU/dnQubm9uZSgpOnZ0LnNvbWUoWG0oXCJjaGV2cm9uLWRvd25cIix7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtc2VsZWN0ZmllbGRfX2ljb24tanNcIl19LG8uaWNvbnMpKSkudG9BcnJheSgpXSl9LG15LnNrZXRjaCh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1mb3JtX19ncm91cFwiXX0sY29tcG9uZW50czpmdChbaS50b0FycmF5KCksW3VdXSksZmllbGRCZWhhdmlvdXJzOmVjKFtnZC5jb25maWcoe2Rpc2FibGVkOmZ1bmN0aW9uKCl7cmV0dXJuIG4uZGlzYWJsZWR8fG8uaXNEaXNhYmxlZCgpfSxvbkRpc2FibGVkOmZ1bmN0aW9uKHQpe215LmdldEZpZWxkKHQpLmVhY2goZ2QuZGlzYWJsZSl9LG9uRW5hYmxlZDpmdW5jdGlvbih0KXtteS5nZXRGaWVsZCh0KS5lYWNoKGdkLmVuYWJsZSl9fSkscHYoKV0pfSk7dmFyIG4sbyxyLGksdX0pLHNpemVpbnB1dDpwayhmdW5jdGlvbih0LGUpe3JldHVybiBvdyh0LGUuc2hhcmVkLnByb3ZpZGVycyl9KSx1cmxpbnB1dDpwayhmdW5jdGlvbih0LGUpe3JldHVybiBnayh0LGUsZS51cmxpbnB1dCl9KSxjdXN0b21lZGl0b3I6cGsoZnVuY3Rpb24obil7dmFyIG89Z2MoKSxlPUhtKHtkb206e3RhZzpuLnRhZ319KSxyPWdjKCk7cmV0dXJue2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtY3VzdG9tLWVkaXRvclwiXX0sYmVoYXZpb3VyczplYyhbbW0oXCJjdXN0b20tZWRpdG9yLWV2ZW50c1wiLFtvdShmdW5jdGlvbih0KXtlLmdldE9wdCh0KS5lYWNoKGZ1bmN0aW9uKGUpeyhUdChuLFwiaW5pdFwiKT9uLmluaXQoZS5lbGVtZW50LmRvbSk6bFMubG9hZChuLnNjcmlwdElkLG4uc2NyaXB0VXJsKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB0KGUuZWxlbWVudC5kb20sbi5zZXR0aW5ncyl9KSkudGhlbihmdW5jdGlvbihlKXtyLm9uKGZ1bmN0aW9uKHQpe2Uuc2V0VmFsdWUodCl9KSxyLmNsZWFyKCksby5zZXQoZSl9KX0pfSldKSxEZi5jb25maWcoe3N0b3JlOnttb2RlOlwibWFudWFsXCIsZ2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gby5nZXQoKS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIHIuZ2V0KCkuZ2V0T3IoXCJcIil9LGZ1bmN0aW9uKHQpe3JldHVybiB0LmdldFZhbHVlKCl9KX0sc2V0VmFsdWU6ZnVuY3Rpb24odCxlKXtvLmdldCgpLmZvbGQoZnVuY3Rpb24oKXtyLnNldChlKX0sZnVuY3Rpb24odCl7cmV0dXJuIHQuc2V0VmFsdWUoZSl9KX19fSksYXcoKV0pLGNvbXBvbmVudHM6W2UuYXNTcGVjKCldfX0pLGh0bWxwYW5lbDpwayhmdW5jdGlvbih0KXtyZXR1cm5cInByZXNlbnRhdGlvblwiPT09dC5wcmVzZXRzP2x5LnNrZXRjaCh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1mb3JtX19ncm91cFwiXSxpbm5lckh0bWw6dC5odG1sfX0pOmx5LnNrZXRjaCh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1mb3JtX19ncm91cFwiXSxpbm5lckh0bWw6dC5odG1sLGF0dHJpYnV0ZXM6e3JvbGU6XCJkb2N1bWVudFwifX0sY29udGFpbmVyQmVoYXZpb3VyczplYyhbcHkuY29uZmlnKHt9KSxWZy5jb25maWcoe30pXSl9KX0pLGltYWdldG9vbHM6cGsoZnVuY3Rpb24odCxlKXtyZXR1cm4gb2sodCxlLnNoYXJlZC5wcm92aWRlcnMpfSksdGFibGU6cGsoZnVuY3Rpb24odCxlKXtyZXR1cm4gaWsodCxlLnNoYXJlZC5wcm92aWRlcnMpfSkscGFuZWw6cGsoZnVuY3Rpb24odCxlKXtyZXR1cm57ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOnQuY2xhc3Nlc30sY29tcG9uZW50czpCKHQuaXRlbXMsZS5zaGFyZWQuaW50ZXJwcmV0ZXIpfX0pfSx5MT17ZmllbGQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gZX19LHgxPWZ1bmN0aW9uKGUsbixvKXtyZXR1cm4gdHQoYjEsbi50eXBlKS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIGNvbnNvbGUuZXJyb3IoJ1Vua25vd24gZmFjdG9yeSB0eXBlIFwiJytuLnR5cGUrJ1wiLCBkZWZhdWx0aW5nIHRvIGNvbnRhaW5lcjogJyxuKSxufSxmdW5jdGlvbih0KXtyZXR1cm4gdChlLG4sbyl9KX0sdzE9e3ZhbGlnbkNlbnRyZTpbXSxhbGlnbkNlbnRyZTpbXSxhbGlnbkxlZnQ6W10sYWxpZ25SaWdodDpbXSxyaWdodDpbXSxsZWZ0OltdLGJvdHRvbTpbXSx0b3A6W119LFMxPVt7dGl0bGU6XCJIZWFkaW5nc1wiLGl0ZW1zOlt7dGl0bGU6XCJIZWFkaW5nIDFcIixmb3JtYXQ6XCJoMVwifSx7dGl0bGU6XCJIZWFkaW5nIDJcIixmb3JtYXQ6XCJoMlwifSx7dGl0bGU6XCJIZWFkaW5nIDNcIixmb3JtYXQ6XCJoM1wifSx7dGl0bGU6XCJIZWFkaW5nIDRcIixmb3JtYXQ6XCJoNFwifSx7dGl0bGU6XCJIZWFkaW5nIDVcIixmb3JtYXQ6XCJoNVwifSx7dGl0bGU6XCJIZWFkaW5nIDZcIixmb3JtYXQ6XCJoNlwifV19LHt0aXRsZTpcIklubGluZVwiLGl0ZW1zOlt7dGl0bGU6XCJCb2xkXCIsZm9ybWF0OlwiYm9sZFwifSx7dGl0bGU6XCJJdGFsaWNcIixmb3JtYXQ6XCJpdGFsaWNcIn0se3RpdGxlOlwiVW5kZXJsaW5lXCIsZm9ybWF0OlwidW5kZXJsaW5lXCJ9LHt0aXRsZTpcIlN0cmlrZXRocm91Z2hcIixmb3JtYXQ6XCJzdHJpa2V0aHJvdWdoXCJ9LHt0aXRsZTpcIlN1cGVyc2NyaXB0XCIsZm9ybWF0Olwic3VwZXJzY3JpcHRcIn0se3RpdGxlOlwiU3Vic2NyaXB0XCIsZm9ybWF0Olwic3Vic2NyaXB0XCJ9LHt0aXRsZTpcIkNvZGVcIixmb3JtYXQ6XCJjb2RlXCJ9XX0se3RpdGxlOlwiQmxvY2tzXCIsaXRlbXM6W3t0aXRsZTpcIlBhcmFncmFwaFwiLGZvcm1hdDpcInBcIn0se3RpdGxlOlwiQmxvY2txdW90ZVwiLGZvcm1hdDpcImJsb2NrcXVvdGVcIn0se3RpdGxlOlwiRGl2XCIsZm9ybWF0OlwiZGl2XCJ9LHt0aXRsZTpcIlByZVwiLGZvcm1hdDpcInByZVwifV19LHt0aXRsZTpcIkFsaWduXCIsaXRlbXM6W3t0aXRsZTpcIkxlZnRcIixmb3JtYXQ6XCJhbGlnbmxlZnRcIn0se3RpdGxlOlwiQ2VudGVyXCIsZm9ybWF0OlwiYWxpZ25jZW50ZXJcIn0se3RpdGxlOlwiUmlnaHRcIixmb3JtYXQ6XCJhbGlnbnJpZ2h0XCJ9LHt0aXRsZTpcIkp1c3RpZnlcIixmb3JtYXQ6XCJhbGlnbmp1c3RpZnlcIn1dfV0sazE9ZnVuY3Rpb24odCl7cmV0dXJuIFIodCxmdW5jdGlvbih0LGUpe2lmKFR0KGUsXCJpdGVtc1wiKSl7dmFyIG49azEoZS5pdGVtcyk7cmV0dXJue2N1c3RvbUZvcm1hdHM6dC5jdXN0b21Gb3JtYXRzLmNvbmNhdChuLmN1c3RvbUZvcm1hdHMpLGZvcm1hdHM6dC5mb3JtYXRzLmNvbmNhdChbe3RpdGxlOmUudGl0bGUsaXRlbXM6bi5mb3JtYXRzfV0pfX1pZihUdChlLFwiaW5saW5lXCIpfHxUdChlLFwiYmxvY2tcIil8fFR0KGUsXCJzZWxlY3RvclwiKSl7dmFyIG89XCJjdXN0b20tXCIrKHkoZS5uYW1lKT9lLm5hbWU6ZS50aXRsZS50b0xvd2VyQ2FzZSgpKTtyZXR1cm57Y3VzdG9tRm9ybWF0czp0LmN1c3RvbUZvcm1hdHMuY29uY2F0KFt7bmFtZTpvLGZvcm1hdDplfV0pLGZvcm1hdHM6dC5mb3JtYXRzLmNvbmNhdChbe3RpdGxlOmUudGl0bGUsZm9ybWF0Om8saWNvbjplLmljb259XSl9fXJldHVybiBsdChsdCh7fSx0KSx7Zm9ybWF0czp0LmZvcm1hdHMuY29uY2F0KGUpfSl9LHtjdXN0b21Gb3JtYXRzOltdLGZvcm1hdHM6W119KX0sQzE9ZlMudHJpbSxPMT13ayhcInRydWVcIiksXzE9d2soXCJmYWxzZVwiKSxUMT1mdW5jdGlvbih0KXt2YXIgZT1CKHZzKE10LmZyb21Eb20odCksXCJoMSxoMixoMyxoNCxoNSxoNixhOm5vdChbaHJlZl0pXCIpLGZ1bmN0aW9uKHQpe3JldHVybiB0LmRvbX0pO3JldHVybiBGKEIoRihlLF9rKSxUaykuY29uY2F0KEIoRihlLENrKSxFaykpLERrKX0sRTE9XCJ0aW55bWNlLXVybC1oaXN0b3J5XCIsRDE9b2QsQTE9ZWQsQjE9cnQoW0VvKFwic2hlbGxcIiwhMSksbW8oXCJtYWtlSXRlbVwiKSxFbyhcInNldHVwSXRlbVwiLHN0KSxBZihcImxpc3RCZWhhdmlvdXJzXCIsW1JnXSldKSxNMT1ydChbUWYoe25hbWU6XCJpdGVtc1wiLG92ZXJyaWRlczpmdW5jdGlvbigpe3JldHVybntiZWhhdmlvdXJzOmVjKFtSZy5jb25maWcoe30pXSl9fX0pXSksRjE9Q2woe25hbWU6cnQoXCJDdXN0b21MaXN0XCIpKCksY29uZmlnRmllbGRzOkIxKCkscGFydEZpZWxkczpNMSgpLGZhY3Rvcnk6ZnVuY3Rpb24ocyx0LGUsbil7dmFyIG89cy5zaGVsbD97YmVoYXZpb3VyczpbUmcuY29uZmlnKHt9KV0sY29tcG9uZW50czpbXX06e2JlaGF2aW91cnM6W10sY29tcG9uZW50czp0fTtyZXR1cm57dWlkOnMudWlkLGRvbTpzLmRvbSxjb21wb25lbnRzOm8uY29tcG9uZW50cyxiZWhhdmlvdXJzOmVsKHMubGlzdEJlaGF2aW91cnMsby5iZWhhdmlvdXJzKSxhcGlzOntzZXRJdGVtczpmdW5jdGlvbihhLGMpe3ZhciB0O3Q9YSwocy5zaGVsbD92dC5zb21lKHQpOm1sKHQscyxcIml0ZW1zXCIpKS5mb2xkKGZ1bmN0aW9uKCl7dGhyb3cgY29uc29sZS5lcnJvcihcIkN1c3RvbSBMaXN0IHdhcyBkZWZpbmVkIHRvIG5vdCBiZSBhIHNoZWxsLCBidXQgbm8gaXRlbSBjb250YWluZXIgd2FzIHNwZWNpZmllZCBpbiBjb21wb25lbnRzXCIpLG5ldyBFcnJvcihcIkN1c3RvbSBMaXN0IHdhcyBkZWZpbmVkIHRvIG5vdCBiZSBhIHNoZWxsLCBidXQgbm8gaXRlbSBjb250YWluZXIgd2FzIHNwZWNpZmllZCBpbiBjb21wb25lbnRzXCIpfSxmdW5jdGlvbihlKXt2YXIgdD1SZy5jb250ZW50cyhlKSxuPWMubGVuZ3RoLG89bi10Lmxlbmd0aCxyPTA8bz9tKG8sZnVuY3Rpb24oKXtyZXR1cm4gcy5tYWtlSXRlbSgpfSk6W10saT10LnNsaWNlKG4pO1N0KGksZnVuY3Rpb24odCl7cmV0dXJuIFJnLnJlbW92ZShlLHQpfSksU3QocixmdW5jdGlvbih0KXtyZXR1cm4gUmcuYXBwZW5kKGUsdCl9KTt2YXIgdT1SZy5jb250ZW50cyhlKTtTdCh1LGZ1bmN0aW9uKHQsZSl7cy5zZXR1cEl0ZW0oYSx0LGNbZV0sZSl9KX0pfX19fSxhcGlzOntzZXRJdGVtczpmdW5jdGlvbih0LGUsbil7dC5zZXRJdGVtcyhlLG4pfX19KSxJMT1ydChbbW8oXCJkb21cIiksRW8oXCJzaGVsbFwiLCEwKSxacyhcInRvb2xiYXJCZWhhdmlvdXJzXCIsW1JnXSldKSxSMT1ydChbUWYoe25hbWU6XCJncm91cHNcIixvdmVycmlkZXM6ZnVuY3Rpb24oKXtyZXR1cm57YmVoYXZpb3VyczplYyhbUmcuY29uZmlnKHt9KV0pfX19KV0pLE4xPUNsKHtuYW1lOlwiVG9vbGJhclwiLGNvbmZpZ0ZpZWxkczpJMSgpLHBhcnRGaWVsZHM6UjEoKSxmYWN0b3J5OmZ1bmN0aW9uKG8sdCxlLG4pe3ZhciByPW8uc2hlbGw/e2JlaGF2aW91cnM6W1JnLmNvbmZpZyh7fSldLGNvbXBvbmVudHM6W119OntiZWhhdmlvdXJzOltdLGNvbXBvbmVudHM6dH07cmV0dXJue3VpZDpvLnVpZCxkb206by5kb20sY29tcG9uZW50czpyLmNvbXBvbmVudHMsYmVoYXZpb3VyczplbChvLnRvb2xiYXJCZWhhdmlvdXJzLHIuYmVoYXZpb3VycyksYXBpczp7c2V0R3JvdXBzOmZ1bmN0aW9uKHQsZSl7dmFyIG47bj10LChvLnNoZWxsP3Z0LnNvbWUobik6bWwobixvLFwiZ3JvdXBzXCIpKS5mb2xkKGZ1bmN0aW9uKCl7dGhyb3cgY29uc29sZS5lcnJvcihcIlRvb2xiYXIgd2FzIGRlZmluZWQgdG8gbm90IGJlIGEgc2hlbGwsIGJ1dCBubyBncm91cHMgY29udGFpbmVyIHdhcyBzcGVjaWZpZWQgaW4gY29tcG9uZW50c1wiKSxuZXcgRXJyb3IoXCJUb29sYmFyIHdhcyBkZWZpbmVkIHRvIG5vdCBiZSBhIHNoZWxsLCBidXQgbm8gZ3JvdXBzIGNvbnRhaW5lciB3YXMgc3BlY2lmaWVkIGluIGNvbXBvbmVudHNcIil9LGZ1bmN0aW9uKHQpe1JnLnNldCh0LGUpfSl9fSxkb21Nb2RpZmljYXRpb246e2F0dHJpYnV0ZXM6e3JvbGU6XCJncm91cFwifX19fSxhcGlzOntzZXRHcm91cHM6ZnVuY3Rpb24odCxlLG4pe3Quc2V0R3JvdXBzKGUsbil9fX0pLFAxPXJ0KFtdKSxWMT1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxzZXR1cDpzdCxpc0RvY2tlZDpULGdldEJlaGF2aW91cnM6UDF9KSxIMT1Wbyhbe3N0YXRpYzpbXX0se2Fic29sdXRlOltcInBvc2l0aW9uQ3NzXCJdfSx7Zml4ZWQ6W1wicG9zaXRpb25Dc3NcIl19XSksTDE9ZnVuY3Rpb24odCxlLG4pe3ZhciBvLHIsaSx1O3QuZ2V0U3lzdGVtKCkuaXNDb25uZWN0ZWQoKSYmKGk9bix1PShyPWUpLmxhenlWaWV3cG9ydChvPXQpLGkuaXNEb2NrZWQoKSYmJGsobyxyLGksdSkscWsobyx1LGkpLmVhY2goZnVuY3Rpb24odCl7dC5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIEtrKG8scixpKX0sZnVuY3Rpb24odCl7cmV0dXJuIEprKG8scixpLHQpfSxmdW5jdGlvbih0KXskayhvLHIsaSx1LCEwKSxKayhvLHIsaSx0KX0pfSkpfSx6MT1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxyZWZyZXNoOkwxLHJlc2V0OlFrLGlzRG9ja2VkOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbi5pc0RvY2tlZCgpfSxnZXRNb2RlczpmdW5jdGlvbih0LGUsbil7cmV0dXJuIG4uZ2V0TW9kZXMoKX0sc2V0TW9kZXM6ZnVuY3Rpb24odCxlLG4sbyl7cmV0dXJuIG4uc2V0TW9kZXMobyl9fSksVTE9T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsZXZlbnRzOmZ1bmN0aW9uKG8scil7cmV0dXJuIG51KFtBcihfaSgpLGZ1bmN0aW9uKGUsbil7by5jb250ZXh0dWFsLmVhY2goZnVuY3Rpb24odCl7S3IoZS5lbGVtZW50LHQudHJhbnNpdGlvbkNsYXNzKSYmKCRyKGUuZWxlbWVudCxbdC50cmFuc2l0aW9uQ2xhc3MsdC5mYWRlSW5DbGFzc10pLChyLmlzVmlzaWJsZSgpP3Qub25TaG93bjp0Lm9uSGlkZGVuKShlKSksbi5zdG9wKCl9KX0pLENyKGppKCksZnVuY3Rpb24odCxlKXtMMSh0LG8scil9KSxDcihXaSgpLGZ1bmN0aW9uKHQsZSl7UWsodCxvLHIpfSldKX19KSxqMT14YSh7ZmllbGRzOltUbyhcImNvbnRleHR1YWxcIixbcG8oXCJmYWRlSW5DbGFzc1wiKSxwbyhcImZhZGVPdXRDbGFzc1wiKSxwbyhcInRyYW5zaXRpb25DbGFzc1wiKSx2byhcImxhenlDb250ZXh0XCIpLEp1KFwib25TaG93XCIpLEp1KFwib25TaG93blwiKSxKdShcIm9uSGlkZVwiKSxKdShcIm9uSGlkZGVuXCIpXSksSW8oXCJsYXp5Vmlld3BvcnRcIixGbiksUm8oXCJtb2Rlc1wiLFtcInRvcFwiLFwiYm90dG9tXCJdLGVyKSxKdShcIm9uRG9ja2VkXCIpLEp1KFwib25VbmRvY2tlZFwiKV0sbmFtZTpcImRvY2tpbmdcIixhY3RpdmU6VTEsYXBpczp6MSxzdGF0ZTpPYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxpbml0OmZ1bmN0aW9uKHQpe3ZhciBlPVBvKCExKSxuPVBvKCEwKSxvPWdjKCkscj1Qbyh0Lm1vZGVzKTtyZXR1cm4gd3Uoe2lzRG9ja2VkOmUuZ2V0LHNldERvY2tlZDplLnNldCxnZXRJbml0aWFsUG9zOm8uZ2V0LHNldEluaXRpYWxQb3M6by5zZXQsY2xlYXJJbml0aWFsUG9zOm8uY2xlYXIsaXNWaXNpYmxlOm4uZ2V0LHNldFZpc2libGU6bi5zZXQsZ2V0TW9kZXM6ci5nZXQsc2V0TW9kZXM6ci5zZXQscmVhZFN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuXCJkb2NrZWQ6ICBcIitlLmdldCgpK1wiLCB2aXNpYmxlOiBcIituLmdldCgpK1wiLCBtb2RlczogXCIrci5nZXQoKS5qb2luKFwiLFwiKX19KX19KX0pLFcxPXJ0KElyKFwidG9vbGJhci1oZWlnaHQtY2hhbmdlXCIpKSxHMT17ZmFkZUluQ2xhc3M6XCJ0b3gtZWRpdG9yLWRvY2stZmFkZWluXCIsZmFkZU91dENsYXNzOlwidG94LWVkaXRvci1kb2NrLWZhZGVvdXRcIix0cmFuc2l0aW9uQ2xhc3M6XCJ0b3gtZWRpdG9yLWRvY2stdHJhbnNpdGlvblwifSxYMT1cInRveC10aW55bWNlLS10b29sYmFyLXN0aWNreS1vblwiLFkxPVwidG94LXRpbnltY2UtLXRvb2xiYXItc3RpY2t5LW9mZlwiLHExPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLHNldHVwOmZ1bmN0aW9uKHQsZSxuKXt0LmlubGluZXx8KGUuaGVhZGVyLmlzUG9zaXRpb25lZEF0VG9wKCl8fHQub24oXCJSZXNpemVFZGl0b3JcIixmdW5jdGlvbigpe24oKS5lYWNoKGoxLnJlc2V0KX0pLHQub24oXCJSZXNpemVXaW5kb3cgUmVzaXplRWRpdG9yXCIsZnVuY3Rpb24oKXtuKCkuZWFjaCh0Qyl9KSx0Lm9uKFwiU2tpbkxvYWRlZFwiLGZ1bmN0aW9uKCl7bigpLmVhY2goZnVuY3Rpb24odCl7ajEuaXNEb2NrZWQodCk/ajEucmVzZXQodCk6ajEucmVmcmVzaCh0KX0pfSksdC5vbihcIkZ1bGxzY3JlZW5TdGF0ZUNoYW5nZWRcIixmdW5jdGlvbigpe24oKS5lYWNoKGoxLnJlc2V0KX0pKSx0Lm9uKFwiQWZ0ZXJTY3JvbGxJbnRvVmlld1wiLGZ1bmN0aW9uKGIpe24oKS5lYWNoKGZ1bmN0aW9uKHQpe2oxLnJlZnJlc2godCk7dmFyIGUsbixvLHIsaSx1LGEsYyxzLGwsZixkLG0sZyxwLGgsdj10LmVsZW1lbnQ7UGQodikmJihlPWIscj0obz1qdChuPXYpKS5kb20uZGVmYXVsdFZpZXcuaW5uZXJIZWlnaHQsaT1JZShvKSxhPUhlKHU9TXQuZnJvbURvbShlLmVsbSkpLGM9eGUodSksbD0ocz1hLnkpK2MsZj1rZShuKSxkPXhlKG4pLGc9KG09Zi50b3ApK2QscD1NYXRoLmFicyhtLWkudG9wKTwyLGg9TWF0aC5hYnMoZy0oaS50b3ArcikpPDIscCYmczxnP1JlKGkubGVmdCxzLWQsbyk6aCYmbTxsJiZSZShpLmxlZnQscy1yK2MrZCxvKSl9KX0pLHQub24oXCJQb3N0UmVuZGVyXCIsZnVuY3Rpb24oKXtuQyh0LCExKX0pfSxpc0RvY2tlZDpmdW5jdGlvbih0KXtyZXR1cm4gdCgpLm1hcChqMS5pc0RvY2tlZCkuZ2V0T3IoITEpfSxnZXRCZWhhdmlvdXJzOm9DfSksSzE9JG8oW3BvKFwidHlwZVwiKSxnbyhcIml0ZW1zXCIsbm8oW1FvKFtwbyhcIm5hbWVcIikseG8oXCJpdGVtc1wiLGVyKV0pLGVyXSkpXS5jb25jYXQoVnApKSxKMT1bQ28oXCJ0ZXh0XCIpLENvKFwidG9vbHRpcFwiKSxDbyhcImljb25cIiksdm8oXCJmZXRjaFwiKSxJbyhcIm9uU2V0dXBcIixmdW5jdGlvbigpe3JldHVybiBzdH0pXSwkMT0kbyhWKFtwbyhcInR5cGVcIildLEoxLCEwKSksUTE9JG8oW3BvKFwidHlwZVwiKSxDbyhcInRvb2x0aXBcIiksQ28oXCJpY29uXCIpLENvKFwidGV4dFwiKSxPbyhcInNlbGVjdFwiKSx2byhcImZldGNoXCIpLElvKFwib25TZXR1cFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHN0fSksTW8oXCJwcmVzZXRzXCIsXCJub3JtYWxcIixbXCJub3JtYWxcIixcImNvbG9yXCIsXCJsaXN0cHJldmlld1wiXSksRW8oXCJjb2x1bW5zXCIsMSksdm8oXCJvbkFjdGlvblwiKSx2byhcIm9uSXRlbUFjdGlvblwiKV0pLFoxPWtsKHtmYWN0b3J5OmZ1bmN0aW9uKGUsbyl7dmFyIHQ9e2ZvY3VzOkZnLmZvY3VzSW4sc2V0TWVudXM6ZnVuY3Rpb24odCxlKXt2YXIgbj1CKGUsZnVuY3Rpb24oZSl7cmV0dXJuIEcwKHJDKHt0eXBlOlwibWVudWJ1dHRvblwiLHRleHQ6ZS50ZXh0LGZldGNoOmZ1bmN0aW9uKHQpe3QoZS5nZXRJdGVtcygpKX19KS5tYXBFcnJvcihmdW5jdGlvbih0KXtyZXR1cm4gdXIodCl9KS5nZXRPckRpZSgpLFwidG94LW1idG5cIixvLmJhY2tzdGFnZSx2dC5zb21lKFwibWVudWl0ZW1cIikpfSk7Umcuc2V0KHQsbil9fTtyZXR1cm57dWlkOmUudWlkLGRvbTplLmRvbSxjb21wb25lbnRzOltdLGJlaGF2aW91cnM6ZWMoW1JnLmNvbmZpZyh7fSksbW0oXCJtZW51YmFyLWV2ZW50c1wiLFtvdShmdW5jdGlvbih0KXtlLm9uU2V0dXAodCl9KSxDcih2aSgpLGZ1bmN0aW9uKG4sdCl7SXUobi5lbGVtZW50LFwiLnRveC1tYnRuLS1hY3RpdmVcIikuZWFjaChmdW5jdGlvbihlKXtSdSh0LmV2ZW50LnRhcmdldCxcIi50b3gtbWJ0blwiKS5lYWNoKGZ1bmN0aW9uKHQpe3p0KGUsdCl8fG4uZ2V0U3lzdGVtKCkuZ2V0QnlEb20oZSkuZWFjaChmdW5jdGlvbihlKXtuLmdldFN5c3RlbSgpLmdldEJ5RG9tKHQpLmVhY2goZnVuY3Rpb24odCl7aHcuZXhwYW5kKHQpLGh3LmNsb3NlKGUpLFZnLmZvY3VzKHQpfSl9KX0pfSl9KSxDcihLaSgpLGZ1bmN0aW9uKG4sdCl7dC5ldmVudC5wcmV2Rm9jdXMuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gbi5nZXRTeXN0ZW0oKS5nZXRCeURvbSh0KS50b09wdGlvbmFsKCl9KS5lYWNoKGZ1bmN0aW9uKGUpe3QuZXZlbnQubmV3Rm9jdXMuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gbi5nZXRTeXN0ZW0oKS5nZXRCeURvbSh0KS50b09wdGlvbmFsKCl9KS5lYWNoKGZ1bmN0aW9uKHQpe2h3LmlzT3BlbihlKSYmKGh3LmV4cGFuZCh0KSxody5jbG9zZShlKSl9KX0pfSldKSxGZy5jb25maWcoe21vZGU6XCJmbG93XCIsc2VsZWN0b3I6XCIudG94LW1idG5cIixvbkVzY2FwZTpmdW5jdGlvbih0KXtyZXR1cm4gZS5vbkVzY2FwZSh0KSx2dC5zb21lKCEwKX19KSxweS5jb25maWcoe30pXSksYXBpczp0LGRvbU1vZGlmaWNhdGlvbjp7YXR0cmlidXRlczp7cm9sZTpcIm1lbnViYXJcIn19fX0sbmFtZTpcInNpbHZlci5NZW51YmFyXCIsY29uZmlnRmllbGRzOlttbyhcImRvbVwiKSxtbyhcInVpZFwiKSxtbyhcIm9uRXNjYXBlXCIpLG1vKFwiYmFja3N0YWdlXCIpLEVvKFwib25TZXR1cFwiLHN0KV0sYXBpczp7Zm9jdXM6ZnVuY3Rpb24odCxlKXt0LmZvY3VzKGUpfSxzZXRNZW51czpmdW5jdGlvbih0LGUsbil7dC5zZXRNZW51cyhlLG4pfX19KSx0Tz1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxyZWZyZXNoOmZ1bmN0aW9uKHQsZSxuKXt2YXIgbztuLmlzRXhwYW5kZWQoKSYmKHZlKHQuZWxlbWVudCx1QyhlKSksbz1hQyhlLHQuZWxlbWVudCksZmUodC5lbGVtZW50LHVDKGUpLG8pKX0sZ3JvdzpmdW5jdGlvbih0LGUsbil7bi5pc0V4cGFuZGVkKCl8fG1DKHQsZSxuKX0sc2hyaW5rOmZ1bmN0aW9uKHQsZSxuKXtuLmlzRXhwYW5kZWQoKSYmZEModCxlLG4pfSxpbW1lZGlhdGVTaHJpbms6ZnVuY3Rpb24odCxlLG4pe24uaXNFeHBhbmRlZCgpJiZmQyh0LGUsbil9LGhhc0dyb3duOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbi5pc0V4cGFuZGVkKCl9LGhhc1NocnVuazpmdW5jdGlvbih0LGUsbil7cmV0dXJuIG4uaXNDb2xsYXBzZWQoKX0saXNHcm93aW5nOmdDLGlzU2hyaW5raW5nOnBDLGlzVHJhbnNpdGlvbmluZzpmdW5jdGlvbih0LGUsbil7cmV0dXJuIGdDKHQsZSl8fHBDKHQsZSl9LHRvZ2dsZUdyb3c6ZnVuY3Rpb24odCxlLG4peyhuLmlzRXhwYW5kZWQoKT9kQzptQykodCxlLG4pfSxkaXNhYmxlVHJhbnNpdGlvbnM6Y0N9KSxlTz1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxleGhpYml0OmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4genIoZS5leHBhbmRlZD97Y2xhc3NlczpbZS5vcGVuQ2xhc3NdLHN0eWxlczp7fX06e2NsYXNzZXM6W2UuY2xvc2VkQ2xhc3NdLHN0eWxlczpzcihlLmRpbWVuc2lvbi5wcm9wZXJ0eSxcIjBweFwiKX0pfSxldmVudHM6ZnVuY3Rpb24obixvKXtyZXR1cm4gbnUoW0FyKF9pKCksZnVuY3Rpb24odCxlKXtlLmV2ZW50LnJhdy5wcm9wZXJ0eU5hbWU9PT1uLmRpbWVuc2lvbi5wcm9wZXJ0eSYmKGNDKHQsbiksby5pc0V4cGFuZGVkKCkmJnZlKHQuZWxlbWVudCxuLmRpbWVuc2lvbi5wcm9wZXJ0eSksKG8uaXNFeHBhbmRlZCgpP24ub25Hcm93bjpuLm9uU2hydW5rKSh0KSl9KV0pfX0pLG5PPXhhKHtmaWVsZHM6W21vKFwiY2xvc2VkQ2xhc3NcIiksbW8oXCJvcGVuQ2xhc3NcIiksbW8oXCJzaHJpbmtpbmdDbGFzc1wiKSxtbyhcImdyb3dpbmdDbGFzc1wiKSx3byhcImdldEFuaW1hdGlvblJvb3RcIiksSnUoXCJvblNocnVua1wiKSxKdShcIm9uU3RhcnRTaHJpbmtcIiksSnUoXCJvbkdyb3duXCIpLEp1KFwib25TdGFydEdyb3dcIiksRW8oXCJleHBhbmRlZFwiLCExKSxnbyhcImRpbWVuc2lvblwiLGxvKFwicHJvcGVydHlcIix7d2lkdGg6W3RhKFwicHJvcGVydHlcIixcIndpZHRoXCIpLHRhKFwiZ2V0RGltZW5zaW9uXCIsZnVuY3Rpb24odCl7cmV0dXJuIENlKHQpK1wicHhcIn0pXSxoZWlnaHQ6W3RhKFwicHJvcGVydHlcIixcImhlaWdodFwiKSx0YShcImdldERpbWVuc2lvblwiLGZ1bmN0aW9uKHQpe3JldHVybiB4ZSh0KStcInB4XCJ9KV19KSldLG5hbWU6XCJzbGlkaW5nXCIsYWN0aXZlOmVPLGFwaXM6dE8sc3RhdGU6T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsaW5pdDpmdW5jdGlvbih0KXt2YXIgZT1Qbyh0LmV4cGFuZGVkKTtyZXR1cm4gd3Uoe2lzRXhwYW5kZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMD09PWUuZ2V0KCl9LGlzQ29sbGFwc2VkOmZ1bmN0aW9uKCl7cmV0dXJuITE9PT1lLmdldCgpfSxzZXRDb2xsYXBzZWQ6QyhlLnNldCwhMSksc2V0RXhwYW5kZWQ6QyhlLnNldCwhMCkscmVhZFN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuXCJleHBhbmRlZDogXCIrZS5nZXQoKX19KX19KX0pLG9PPVwiY29udGFpbmVyXCIsck89W1pzKFwic2xvdEJlaGF2aW91cnNcIixbXSldLGlPPWR0KHtnZXRTbG90TmFtZXM6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5nZXRTbG90TmFtZXMoZSl9LGdldFNsb3Q6ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0LmdldFNsb3QoZSxuKX0saXNTaG93aW5nOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdC5pc1Nob3dpbmcoZSxuKX0saGlkZVNsb3Q6ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0LmhpZGVTbG90KGUsbil9LGhpZGVBbGxTbG90czpmdW5jdGlvbih0LGUpe3JldHVybiB0LmhpZGVBbGxTbG90cyhlKX0sc2hvd1Nsb3Q6ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0LnNob3dTbG90KGUsbil9fSxIciksdU89bHQobHQoe30saU8pLHtza2V0Y2g6ZnVuY3Rpb24odCl7dmFyIG4sZT17c2xvdDpmdW5jdGlvbih0LGUpe3JldHVybiBuLnB1c2godCksY2wob08saEModCksZSl9LHJlY29yZDpydChuPVtdKX0sbz10KGUpLHI9QihlLnJlY29yZCgpLGZ1bmN0aW9uKHQpe3JldHVybiBKZih7bmFtZTp0LHBuYW1lOmhDKHQpfSl9KTtyZXR1cm4gU2wob08sck8sciwkQyxvKX19KSxhTz0kbyhbQ28oXCJpY29uXCIpLENvKFwidG9vbHRpcFwiKSxJbyhcIm9uU2hvd1wiLHN0KSxJbyhcIm9uSGlkZVwiLHN0KSxJbyhcIm9uU2V0dXBcIixmdW5jdGlvbigpe3JldHVybiBzdH0pXSksY089SXIoXCJGaXhTaXplRXZlbnRcIiksc089SXIoXCJBdXRvU2l6ZUV2ZW50XCIpLGxPPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGJsb2NrOmZ1bmN0aW9uKHQsZSxuLG8pe29lKHQuZWxlbWVudCxcImFyaWEtYnVzeVwiLCEwKTt2YXIgcj1lLmdldFJvb3QodCkuZ2V0T3IodCksaT1lYyhbRmcuY29uZmlnKHttb2RlOlwic3BlY2lhbFwiLG9uVGFiOmZ1bmN0aW9uKCl7cmV0dXJuIHZ0LnNvbWUoITApfSxvblNoaWZ0VGFiOmZ1bmN0aW9uKCl7cmV0dXJuIHZ0LnNvbWUoITApfX0pLFZnLmNvbmZpZyh7fSldKSx1PW8ocixpKSxhPXIuZ2V0U3lzdGVtKCkuYnVpbGQodSk7UmcuYXBwZW5kKHIsRXUoYSkpLGEuaGFzQ29uZmlndXJlZChGZykmJmUuZm9jdXMmJkZnLmZvY3VzSW4oYSksbi5pc0Jsb2NrZWQoKXx8ZS5vbkJsb2NrKHQpLG4uYmxvY2tXaXRoKGZ1bmN0aW9uKCl7cmV0dXJuIFJnLnJlbW92ZShyLGEpfSl9LHVuYmxvY2s6ZnVuY3Rpb24odCxlLG4pe2NlKHQuZWxlbWVudCxcImFyaWEtYnVzeVwiKSxuLmlzQmxvY2tlZCgpJiZlLm9uVW5ibG9jayh0KSxuLmNsZWFyKCl9fSksZk89eGEoe2ZpZWxkczpbSW8oXCJnZXRSb290XCIsdnQubm9uZSksRm8oXCJmb2N1c1wiLCEwKSxKdShcIm9uQmxvY2tcIiksSnUoXCJvblVuYmxvY2tcIildLG5hbWU6XCJibG9ja2luZ1wiLGFwaXM6bE8sc3RhdGU6T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsaW5pdDpmdW5jdGlvbigpe3ZhciBlPWRjKCk7cmV0dXJuIHd1KHtyZWFkU3RhdGU6ZS5pc1NldCxibG9ja1dpdGg6ZnVuY3Rpb24odCl7ZS5zZXQoe2Rlc3Ryb3k6dH0pfSxjbGVhcjplLmNsZWFyLGlzQmxvY2tlZDplLmlzU2V0fSl9fSl9KSxkTz1ydChbWnMoXCJzcGxpdFRvb2xiYXJCZWhhdmlvdXJzXCIsWyR5XSksY3IoXCJidWlsdEdyb3Vwc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIFBvKFtdKX0pXSksbU89cnQoW3F1KFtcIm92ZXJmbG93VG9nZ2xlZENsYXNzXCJdKSxPbyhcImdldE92ZXJmbG93Qm91bmRzXCIpLG1vKFwibGF6eVNpbmtcIiksY3IoXCJvdmVyZmxvd0dyb3Vwc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIFBvKFtdKX0pXS5jb25jYXQoZE8oKSkpLGdPPXJ0KFtKZih7ZmFjdG9yeTpOMSxzY2hlbWE6STEoKSxuYW1lOlwicHJpbWFyeVwifSksJGYoe3NjaGVtYTpJMSgpLG5hbWU6XCJvdmVyZmxvd1wifSksJGYoe25hbWU6XCJvdmVyZmxvdy1idXR0b25cIn0pLCRmKHtuYW1lOlwib3ZlcmZsb3ctZ3JvdXBcIn0pXSkscE89cnQoZnVuY3Rpb24odCxlKXt2YXIgbj10LG89TWF0aC5mbG9vcihlKTtmZShuLFwibWF4LXdpZHRoXCIsT24ubWF4KG4sbyxbXCJtYXJnaW4tbGVmdFwiLFwiYm9yZGVyLWxlZnQtd2lkdGhcIixcInBhZGRpbmctbGVmdFwiLFwicGFkZGluZy1yaWdodFwiLFwiYm9yZGVyLXJpZ2h0LXdpZHRoXCIsXCJtYXJnaW4tcmlnaHRcIl0pK1wicHhcIil9KSxoTz1ydChbcXUoW1widG9nZ2xlZENsYXNzXCJdKSxtbyhcImxhenlTaW5rXCIpLHZvKFwiZmV0Y2hcIiksT28oXCJnZXRCb3VuZHNcIiksVG8oXCJmaXJlRGlzbWlzc2FsRXZlbnRJbnN0ZWFkXCIsW0VvKFwiZXZlbnRcIixZaSgpKV0pLFVjKCldKSx2Tz1ydChbJGYoe25hbWU6XCJidXR0b25cIixvdmVycmlkZXM6ZnVuY3Rpb24odCl7cmV0dXJue2RvbTp7YXR0cmlidXRlczp7XCJhcmlhLWhhc3BvcHVwXCI6XCJ0cnVlXCJ9fSxidXR0b25CZWhhdmlvdXJzOmVjKFt6Zy5jb25maWcoe3RvZ2dsZUNsYXNzOnQubWFya2Vycy50b2dnbGVkQ2xhc3MsYXJpYTp7bW9kZTpcImV4cGFuZGVkXCJ9LHRvZ2dsZU9uRXhlY3V0ZTohMX0pXSl9fX0pLCRmKHtmYWN0b3J5Ok4xLHNjaGVtYTpJMSgpLG5hbWU6XCJ0b29sYmFyXCIsb3ZlcnJpZGVzOmZ1bmN0aW9uKGUpe3JldHVybnt0b29sYmFyQmVoYXZpb3VyczplYyhbRmcuY29uZmlnKHttb2RlOlwiY3ljbGljXCIsb25Fc2NhcGU6ZnVuY3Rpb24odCl7cmV0dXJuIG1sKHQsZSxcImJ1dHRvblwiKS5lYWNoKFZnLmZvY3VzKSx2dC5ub25lKCl9fSldKX19fSldKSxiTz1DbCh7bmFtZTpcIkZsb2F0aW5nVG9vbGJhckJ1dHRvblwiLGZhY3Rvcnk6ZnVuY3Rpb24odSx0LGEsZSl7cmV0dXJuIGx0KGx0KHt9LGZwLnNrZXRjaChsdChsdCh7fSxlLmJ1dHRvbigpKSx7YWN0aW9uOmZ1bmN0aW9uKHQpe0VDKHQsZSl9LGJ1dHRvbkJlaGF2aW91cnM6QmYoe2R1bXA6ZS5idXR0b24oKS5idXR0b25CZWhhdmlvdXJzfSxbJHkuY29uZmlnKHtvdGhlcnM6e3Rvb2xiYXJTYW5kYm94OmZ1bmN0aW9uKHQpe3JldHVybiBvPXQsbj1hLHI9dSx7ZG9tOnt0YWc6XCJkaXZcIixhdHRyaWJ1dGVzOntpZDooaT1OdSgpKS5pZH19LGJlaGF2aW91cnM6ZWMoW0ZnLmNvbmZpZyh7bW9kZTpcInNwZWNpYWxcIixvbkVzY2FwZTpmdW5jdGlvbih0KXtyZXR1cm4gYmYuY2xvc2UodCksdnQuc29tZSghMCl9fSksYmYuY29uZmlnKHtvbk9wZW46ZnVuY3Rpb24odCxlKXtyLmZldGNoKCkuZ2V0KGZ1bmN0aW9uKHQpe0FDKG8sZSxyLG4ubGF5b3V0cyx0KSxpLmxpbmsoby5lbGVtZW50KSxGZy5mb2N1c0luKGUpfSl9LG9uQ2xvc2U6ZnVuY3Rpb24oKXt6Zy5vZmYobyksVmcuZm9jdXMobyksaS51bmxpbmsoby5lbGVtZW50KX0saXNQYXJ0T2Y6ZnVuY3Rpb24odCxlLG4pe3JldHVybiBIdShlLG4pfHxIdShvLG4pfSxnZXRBdHRhY2hQb2ludDpmdW5jdGlvbigpe3JldHVybiByLmxhenlTaW5rKG8pLmdldE9yRGllKCl9fSksaWMuY29uZmlnKHtjaGFubmVsczpsdChsdCh7fSxYcyhsdCh7aXNFeHRyYVBhcnQ6VH0sci5maXJlRGlzbWlzc2FsRXZlbnRJbnN0ZWFkLm1hcChmdW5jdGlvbih0KXtyZXR1cm57ZmlyZUV2ZW50SW5zdGVhZDp7ZXZlbnQ6dC5ldmVudH19fSkuZ2V0T3Ioe30pKSkpLFlzKHtkb1JlcG9zaXRpb246ZnVuY3Rpb24oKXtiZi5nZXRTdGF0ZSgkeS5nZXRDb3VwbGVkKG8sXCJ0b29sYmFyU2FuZGJveFwiKSkuZWFjaChmdW5jdGlvbih0KXtEQyhvLHQscixuLmxheW91dHMpfSl9fSkpfSldKX07dmFyIG8sbixyLGl9fX0pXSl9KSkpLHthcGlzOntzZXRHcm91cHM6ZnVuY3Rpb24oZSxuKXtiZi5nZXRTdGF0ZSgkeS5nZXRDb3VwbGVkKGUsXCJ0b29sYmFyU2FuZGJveFwiKSkuZWFjaChmdW5jdGlvbih0KXtBQyhlLHQsdSxhLmxheW91dHMsbil9KX0scmVwb3NpdGlvbjpmdW5jdGlvbihlKXtiZi5nZXRTdGF0ZSgkeS5nZXRDb3VwbGVkKGUsXCJ0b29sYmFyU2FuZGJveFwiKSkuZWFjaChmdW5jdGlvbih0KXtEQyhlLHQsdSxhLmxheW91dHMpfSl9LHRvZ2dsZTpmdW5jdGlvbih0KXtFQyh0LGUpfSxnZXRUb29sYmFyOmZ1bmN0aW9uKHQpe3JldHVybiBiZi5nZXRTdGF0ZSgkeS5nZXRDb3VwbGVkKHQsXCJ0b29sYmFyU2FuZGJveFwiKSl9LGlzT3BlbjpmdW5jdGlvbih0KXtyZXR1cm4gYmYuaXNPcGVuKCR5LmdldENvdXBsZWQodCxcInRvb2xiYXJTYW5kYm94XCIpKX19fSl9LGNvbmZpZ0ZpZWxkczpoTygpLHBhcnRGaWVsZHM6dk8oKSxhcGlzOntzZXRHcm91cHM6ZnVuY3Rpb24odCxlLG4pe3Quc2V0R3JvdXBzKGUsbil9LHJlcG9zaXRpb246ZnVuY3Rpb24odCxlKXt0LnJlcG9zaXRpb24oZSl9LHRvZ2dsZTpmdW5jdGlvbih0LGUpe3QudG9nZ2xlKGUpfSxnZXRUb29sYmFyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuZ2V0VG9vbGJhcihlKX0saXNPcGVuOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuaXNPcGVuKGUpfX19KSx5Tz1ydChbbW8oXCJpdGVtc1wiKSxxdShbXCJpdGVtU2VsZWN0b3JcIl0pLFpzKFwidGdyb3VwQmVoYXZpb3Vyc1wiLFtGZ10pXSkseE89cnQoW1pmKHtuYW1lOlwiaXRlbXNcIix1bml0OlwiaXRlbVwifSldKSx3Tz1DbCh7bmFtZTpcIlRvb2xiYXJHcm91cFwiLGNvbmZpZ0ZpZWxkczp5TygpLHBhcnRGaWVsZHM6eE8oKSxmYWN0b3J5OmZ1bmN0aW9uKHQsZSxuLG8pe3JldHVybnt1aWQ6dC51aWQsZG9tOnQuZG9tLGNvbXBvbmVudHM6ZSxiZWhhdmlvdXJzOmVsKHQudGdyb3VwQmVoYXZpb3VycyxbRmcuY29uZmlnKHttb2RlOlwiZmxvd1wiLHNlbGVjdG9yOnQubWFya2Vycy5pdGVtU2VsZWN0b3J9KV0pLGRvbU1vZGlmaWNhdGlvbjp7YXR0cmlidXRlczp7cm9sZTpcInRvb2xiYXJcIn19fX19KSxTTz1DbCh7bmFtZTpcIlNwbGl0RmxvYXRpbmdUb29sYmFyXCIsY29uZmlnRmllbGRzOm1PKCkscGFydEZpZWxkczpnTygpLGZhY3Rvcnk6ZnVuY3Rpb24obix0LGUsbyl7dmFyIHI9SG0oYk8uc2tldGNoKHtmZXRjaDpmdW5jdGlvbigpe3JldHVybiBXeShmdW5jdGlvbih0KXt0KEJDKG4ub3ZlcmZsb3dHcm91cHMuZ2V0KCkpKX0pfSxsYXlvdXRzOntvbkx0cjpmdW5jdGlvbigpe3JldHVybltZYSxYYV19LG9uUnRsOmZ1bmN0aW9uKCl7cmV0dXJuW1hhLFlhXX0sb25Cb3R0b21MdHI6ZnVuY3Rpb24oKXtyZXR1cm5bS2EscWFdfSxvbkJvdHRvbVJ0bDpmdW5jdGlvbigpe3JldHVybltxYSxLYV19fSxnZXRCb3VuZHM6ZS5nZXRPdmVyZmxvd0JvdW5kcyxsYXp5U2luazpuLmxhenlTaW5rLGZpcmVEaXNtaXNzYWxFdmVudEluc3RlYWQ6e30sbWFya2Vyczp7dG9nZ2xlZENsYXNzOm4ubWFya2Vycy5vdmVyZmxvd1RvZ2dsZWRDbGFzc30scGFydHM6e2J1dHRvbjpvW1wib3ZlcmZsb3ctYnV0dG9uXCJdKCksdG9vbGJhcjpvLm92ZXJmbG93KCl9fSkpO3JldHVybnt1aWQ6bi51aWQsZG9tOm4uZG9tLGNvbXBvbmVudHM6dCxiZWhhdmlvdXJzOmVsKG4uc3BsaXRUb29sYmFyQmVoYXZpb3VycyxbJHkuY29uZmlnKHtvdGhlcnM6e292ZXJmbG93R3JvdXA6ZnVuY3Rpb24oKXtyZXR1cm4gd08uc2tldGNoKGx0KGx0KHt9LG9bXCJvdmVyZmxvdy1ncm91cFwiXSgpKSx7aXRlbXM6W3IuYXNTcGVjKCldfSkpfX19KV0pLGFwaXM6e3NldEdyb3VwczpmdW5jdGlvbih0LGUpe24uYnVpbHRHcm91cHMuc2V0KEIoZSx0LmdldFN5c3RlbSgpLmJ1aWxkKSksTUModCxyLG4pfSxyZWZyZXNoOmZ1bmN0aW9uKHQpe3JldHVybiBNQyh0LHIsbil9LHRvZ2dsZTpmdW5jdGlvbih0KXtyLmdldE9wdCh0KS5lYWNoKGZ1bmN0aW9uKHQpe2JPLnRvZ2dsZSh0KX0pfSxpc09wZW46ZnVuY3Rpb24odCl7cmV0dXJuIHIuZ2V0T3B0KHQpLm1hcChiTy5pc09wZW4pLmdldE9yKCExKX0scmVwb3NpdGlvbjpmdW5jdGlvbih0KXtyLmdldE9wdCh0KS5lYWNoKGZ1bmN0aW9uKHQpe2JPLnJlcG9zaXRpb24odCl9KX0sZ2V0T3ZlcmZsb3c6ZnVuY3Rpb24odCl7cmV0dXJuIHIuZ2V0T3B0KHQpLmJpbmQoYk8uZ2V0VG9vbGJhcil9fSxkb21Nb2RpZmljYXRpb246e2F0dHJpYnV0ZXM6e3JvbGU6XCJncm91cFwifX19fSxhcGlzOntzZXRHcm91cHM6ZnVuY3Rpb24odCxlLG4pe3Quc2V0R3JvdXBzKGUsbil9LHJlZnJlc2g6ZnVuY3Rpb24odCxlKXt0LnJlZnJlc2goZSl9LHJlcG9zaXRpb246ZnVuY3Rpb24odCxlKXt0LnJlcG9zaXRpb24oZSl9LHRvZ2dsZTpmdW5jdGlvbih0LGUpe3QudG9nZ2xlKGUpfSxpc09wZW46ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5pc09wZW4oZSl9LGdldE92ZXJmbG93OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuZ2V0T3ZlcmZsb3coZSl9fX0pLGtPPXJ0KFtxdShbXCJjbG9zZWRDbGFzc1wiLFwib3BlbkNsYXNzXCIsXCJzaHJpbmtpbmdDbGFzc1wiLFwiZ3Jvd2luZ0NsYXNzXCIsXCJvdmVyZmxvd1RvZ2dsZWRDbGFzc1wiXSksSnUoXCJvbk9wZW5lZFwiKSxKdShcIm9uQ2xvc2VkXCIpXS5jb25jYXQoZE8oKSkpLENPPXJ0KFtKZih7ZmFjdG9yeTpOMSxzY2hlbWE6STEoKSxuYW1lOlwicHJpbWFyeVwifSksSmYoe2ZhY3Rvcnk6TjEsc2NoZW1hOkkxKCksbmFtZTpcIm92ZXJmbG93XCIsb3ZlcnJpZGVzOmZ1bmN0aW9uKGUpe3JldHVybnt0b29sYmFyQmVoYXZpb3VyczplYyhbbk8uY29uZmlnKHtkaW1lbnNpb246e3Byb3BlcnR5OlwiaGVpZ2h0XCJ9LGNsb3NlZENsYXNzOmUubWFya2Vycy5jbG9zZWRDbGFzcyxvcGVuQ2xhc3M6ZS5tYXJrZXJzLm9wZW5DbGFzcyxzaHJpbmtpbmdDbGFzczplLm1hcmtlcnMuc2hyaW5raW5nQ2xhc3MsZ3Jvd2luZ0NsYXNzOmUubWFya2Vycy5ncm93aW5nQ2xhc3Msb25TaHJ1bms6ZnVuY3Rpb24odCl7bWwodCxlLFwib3ZlcmZsb3ctYnV0dG9uXCIpLmVhY2goZnVuY3Rpb24odCl7emcub2ZmKHQpLFZnLmZvY3VzKHQpfSksZS5vbkNsb3NlZCh0KX0sb25Hcm93bjpmdW5jdGlvbih0KXtGZy5mb2N1c0luKHQpLGUub25PcGVuZWQodCl9LG9uU3RhcnRHcm93OmZ1bmN0aW9uKHQpe21sKHQsZSxcIm92ZXJmbG93LWJ1dHRvblwiKS5lYWNoKHpnLm9uKX19KSxGZy5jb25maWcoe21vZGU6XCJhY3ljbGljXCIsb25Fc2NhcGU6ZnVuY3Rpb24odCl7cmV0dXJuIG1sKHQsZSxcIm92ZXJmbG93LWJ1dHRvblwiKS5lYWNoKFZnLmZvY3VzKSx2dC5zb21lKCEwKX19KV0pfX19KSwkZih7bmFtZTpcIm92ZXJmbG93LWJ1dHRvblwiLG92ZXJyaWRlczpmdW5jdGlvbih0KXtyZXR1cm57YnV0dG9uQmVoYXZpb3VyczplYyhbemcuY29uZmlnKHt0b2dnbGVDbGFzczp0Lm1hcmtlcnMub3ZlcmZsb3dUb2dnbGVkQ2xhc3MsYXJpYTp7bW9kZTpcInByZXNzZWRcIn0sdG9nZ2xlT25FeGVjdXRlOiExfSldKX19fSksJGYoe25hbWU6XCJvdmVyZmxvdy1ncm91cFwifSldKSxPTz1DbCh7bmFtZTpcIlNwbGl0U2xpZGluZ1Rvb2xiYXJcIixjb25maWdGaWVsZHM6a08oKSxwYXJ0RmllbGRzOkNPKCksZmFjdG9yeTpmdW5jdGlvbihvLHQsZSxuKXt2YXIgcj1cImFsbG95LnRvb2xiYXIudG9nZ2xlXCI7cmV0dXJue3VpZDpvLnVpZCxkb206by5kb20sY29tcG9uZW50czp0LGJlaGF2aW91cnM6ZWwoby5zcGxpdFRvb2xiYXJCZWhhdmlvdXJzLFskeS5jb25maWcoe290aGVyczp7b3ZlcmZsb3dHcm91cDpmdW5jdGlvbihlKXtyZXR1cm4gd08uc2tldGNoKGx0KGx0KHt9LG5bXCJvdmVyZmxvdy1ncm91cFwiXSgpKSx7aXRlbXM6W2ZwLnNrZXRjaChsdChsdCh7fSxuW1wib3ZlcmZsb3ctYnV0dG9uXCJdKCkpLHthY3Rpb246ZnVuY3Rpb24odCl7dnIoZSxyKX19KSldfSkpfX19KSxtbShcInRvb2xiYXItdG9nZ2xlLWV2ZW50c1wiLFtDcihyLGZ1bmN0aW9uKHQpe0ZDKHQsbyl9KV0pXSksYXBpczp7c2V0R3JvdXBzOmZ1bmN0aW9uKHQsZSl7dmFyIG49QihlLHQuZ2V0U3lzdGVtKCkuYnVpbGQpO28uYnVpbHRHcm91cHMuc2V0KG4pLFFDKHQsbyl9LHJlZnJlc2g6ZnVuY3Rpb24odCl7cmV0dXJuIFFDKHQsbyl9LHRvZ2dsZTpmdW5jdGlvbih0KXtyZXR1cm4gRkModCxvKX0saXNPcGVuOmZ1bmN0aW9uKHQpe3JldHVybiBtbCh0LG8sXCJvdmVyZmxvd1wiKS5tYXAobk8uaGFzR3Jvd24pLmdldE9yKCExKX19LGRvbU1vZGlmaWNhdGlvbjp7YXR0cmlidXRlczp7cm9sZTpcImdyb3VwXCJ9fX19LGFwaXM6e3NldEdyb3VwczpmdW5jdGlvbih0LGUsbil7dC5zZXRHcm91cHMoZSxuKX0scmVmcmVzaDpmdW5jdGlvbih0LGUpe3QucmVmcmVzaChlKX0sdG9nZ2xlOmZ1bmN0aW9uKHQsZSl7dC50b2dnbGUoZSl9LGlzT3BlbjpmdW5jdGlvbih0LGUpe3JldHVybiB0LmlzT3BlbihlKX19fSksX089QTEub3B0aW9uYWwoe2ZhY3Rvcnk6WjEsbmFtZTpcIm1lbnViYXJcIixzY2hlbWE6W21vKFwiYmFja3N0YWdlXCIpXX0pLFRPPUExLm9wdGlvbmFsKHtmYWN0b3J5Ontza2V0Y2g6ZnVuY3Rpb24odCl7cmV0dXJuIEYxLnNrZXRjaCh7dWlkOnQudWlkLGRvbTp0LmRvbSxsaXN0QmVoYXZpb3VyczplYyhbRmcuY29uZmlnKHttb2RlOlwiYWN5Y2xpY1wiLHNlbGVjdG9yOlwiLnRveC10b29sYmFyXCJ9KV0pLG1ha2VJdGVtOmZ1bmN0aW9uKCl7cmV0dXJuIFZDKHt0eXBlOnQudHlwZSx1aWQ6SXIoXCJtdWx0aXBsZS10b29sYmFyLWl0ZW1cIiksY3ljbGljS2V5aW5nOiExLGluaXRHcm91cHM6W10scHJvdmlkZXJzOnQucHJvdmlkZXJzLG9uRXNjYXBlOmZ1bmN0aW9uKCl7cmV0dXJuIHQub25Fc2NhcGUoKSx2dC5zb21lKCEwKX19KX0sc2V0dXBJdGVtOmZ1bmN0aW9uKHQsZSxuLG8pe04xLnNldEdyb3VwcyhlLG4pfSxzaGVsbDohMH0pfX0sbmFtZTpcIm11bHRpcGxlLXRvb2xiYXJcIixzY2hlbWE6W21vKFwiZG9tXCIpLG1vKFwib25Fc2NhcGVcIildfSksRU89QTEub3B0aW9uYWwoe2ZhY3Rvcnk6e3NrZXRjaDpmdW5jdGlvbih0KXtyZXR1cm4odC50eXBlPT09Ymguc2xpZGluZz9mdW5jdGlvbih0KXt2YXIgZT1PTy5wYXJ0cy5wcmltYXJ5KHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LXRvb2xiYXJfX3ByaW1hcnlcIl19fSksbj1PTy5wYXJ0cy5vdmVyZmxvdyh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC10b29sYmFyX19vdmVyZmxvd1wiXX19KSxvPVBDKHQpO3JldHVybiBPTy5za2V0Y2gobHQobHQoe30sbykse2NvbXBvbmVudHM6W2Usbl0sbWFya2Vyczp7b3BlbkNsYXNzOlwidG94LXRvb2xiYXJfX292ZXJmbG93LS1vcGVuXCIsY2xvc2VkQ2xhc3M6XCJ0b3gtdG9vbGJhcl9fb3ZlcmZsb3ctLWNsb3NlZFwiLGdyb3dpbmdDbGFzczpcInRveC10b29sYmFyX19vdmVyZmxvdy0tZ3Jvd2luZ1wiLHNocmlua2luZ0NsYXNzOlwidG94LXRvb2xiYXJfX292ZXJmbG93LS1zaHJpbmtpbmdcIixvdmVyZmxvd1RvZ2dsZWRDbGFzczpcInRveC10YnRuLS1lbmFibGVkXCJ9LG9uT3BlbmVkOmZ1bmN0aW9uKHQpe3QuZ2V0U3lzdGVtKCkuYnJvYWRjYXN0T24oW1cxKCldLHt0eXBlOlwib3BlbmVkXCJ9KX0sb25DbG9zZWQ6ZnVuY3Rpb24odCl7dC5nZXRTeXN0ZW0oKS5icm9hZGNhc3RPbihbVzEoKV0se3R5cGU6XCJjbG9zZWRcIn0pfX0pKX06dC50eXBlPT09YmguZmxvYXRpbmc/ZnVuY3Rpb24oaSl7dmFyIHQ9UEMoaSksZT1TTy5wYXJ0cy5wcmltYXJ5KHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LXRvb2xiYXJfX3ByaW1hcnlcIl19fSk7cmV0dXJuIFNPLnNrZXRjaChsdChsdCh7fSx0KSx7bGF6eVNpbms6aS5nZXRTaW5rLGdldE92ZXJmbG93Qm91bmRzOmZ1bmN0aW9uKCl7dmFyIHQ9aS5tb3JlRHJhd2VyRGF0YS5sYXp5SGVhZGVyKCkuZWxlbWVudCxlPUhlKHQpLG49R3QodCksbz1IZShuKSxyPU1hdGgubWF4KG4uZG9tLnNjcm9sbEhlaWdodCxvLmhlaWdodCk7cmV0dXJuIEJuKGUueCs0LG8ueSxlLndpZHRoLTgscil9LHBhcnRzOmx0KGx0KHt9LHQucGFydHMpLHtvdmVyZmxvdzp7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC10b29sYmFyX19vdmVyZmxvd1wiXSxhdHRyaWJ1dGVzOmkuYXR0cmlidXRlc319fSksY29tcG9uZW50czpbZV0sbWFya2Vyczp7b3ZlcmZsb3dUb2dnbGVkQ2xhc3M6XCJ0b3gtdGJ0bi0tZW5hYmxlZFwifX0pKX06VkMpKHt0eXBlOnQudHlwZSx1aWQ6dC51aWQsb25Fc2NhcGU6ZnVuY3Rpb24oKXtyZXR1cm4gdC5vbkVzY2FwZSgpLHZ0LnNvbWUoITApfSxjeWNsaWNLZXlpbmc6ITEsaW5pdEdyb3VwczpbXSxnZXRTaW5rOnQuZ2V0U2luayxwcm92aWRlcnM6dC5wcm92aWRlcnMsbW9yZURyYXdlckRhdGE6e2xhenlUb29sYmFyOnQubGF6eVRvb2xiYXIsbGF6eU1vcmVCdXR0b246dC5sYXp5TW9yZUJ1dHRvbixsYXp5SGVhZGVyOnQubGF6eUhlYWRlcn0sYXR0cmlidXRlczp0LmF0dHJpYnV0ZXN9KX19LG5hbWU6XCJ0b29sYmFyXCIsc2NoZW1hOlttbyhcImRvbVwiKSxtbyhcIm9uRXNjYXBlXCIpLG1vKFwiZ2V0U2lua1wiKV19KSxETz1BMS5vcHRpb25hbCh7ZmFjdG9yeTp7c2tldGNoOmZ1bmN0aW9uKHQpe3ZhciBlPXQuZWRpdG9yLG49dC5zdGlja3k/b0M6UDE7cmV0dXJue3VpZDp0LnVpZCxkb206dC5kb20sY29tcG9uZW50czp0LmNvbXBvbmVudHMsYmVoYXZpb3VyczplYyhuKGUsdC5zaGFyZWRCYWNrc3RhZ2UpKX19fSxuYW1lOlwiaGVhZGVyXCIsc2NoZW1hOlttbyhcImRvbVwiKV19KSxBTz1BMS5vcHRpb25hbCh7bmFtZTpcInNvY2tldFwiLHNjaGVtYTpbbW8oXCJkb21cIildfSksQk89QTEub3B0aW9uYWwoe2ZhY3Rvcnk6e3NrZXRjaDpmdW5jdGlvbih0KXtyZXR1cm57dWlkOnQudWlkLGRvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtc2lkZWJhclwiXSxhdHRyaWJ1dGVzOntyb2xlOlwiY29tcGxlbWVudGFyeVwifX0sY29tcG9uZW50czpbe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtc2lkZWJhcl9fc2xpZGVyXCJdfSxjb21wb25lbnRzOltdLGJlaGF2aW91cnM6ZWMoW3B5LmNvbmZpZyh7fSksVmcuY29uZmlnKHt9KSxuTy5jb25maWcoe2RpbWVuc2lvbjp7cHJvcGVydHk6XCJ3aWR0aFwifSxjbG9zZWRDbGFzczpcInRveC1zaWRlYmFyLS1zbGlkaW5nLWNsb3NlZFwiLG9wZW5DbGFzczpcInRveC1zaWRlYmFyLS1zbGlkaW5nLW9wZW5cIixzaHJpbmtpbmdDbGFzczpcInRveC1zaWRlYmFyLS1zbGlkaW5nLXNocmlua2luZ1wiLGdyb3dpbmdDbGFzczpcInRveC1zaWRlYmFyLS1zbGlkaW5nLWdyb3dpbmdcIixvblNocnVuazpmdW5jdGlvbih0KXtjZC5nZXRDdXJyZW50KHQpLmVhY2godU8uaGlkZUFsbFNsb3RzKSx2cih0LHNPKX0sb25Hcm93bjpmdW5jdGlvbih0KXt2cih0LHNPKX0sb25TdGFydEdyb3c6ZnVuY3Rpb24odCl7YnIodCxjTyx7d2lkdGg6cGUodC5lbGVtZW50LFwid2lkdGhcIikuZ2V0T3IoXCJcIil9KX0sb25TdGFydFNocmluazpmdW5jdGlvbih0KXticih0LGNPLHt3aWR0aDpDZSh0LmVsZW1lbnQpK1wicHhcIn0pfX0pLFJnLmNvbmZpZyh7fSksY2QuY29uZmlnKHtmaW5kOmZ1bmN0aW9uKHQpe3JldHVybiBZKFJnLmNvbnRlbnRzKHQpKX19KV0pfV0sYmVoYXZpb3VyczplYyhbY1MoMCksbW0oXCJzaWRlYmFyLXNsaWRpbmctZXZlbnRzXCIsW0NyKGNPLGZ1bmN0aW9uKHQsZSl7ZmUodC5lbGVtZW50LFwid2lkdGhcIixlLmV2ZW50LndpZHRoKX0pLENyKHNPLGZ1bmN0aW9uKHQsZSl7dmUodC5lbGVtZW50LFwid2lkdGhcIil9KV0pXSl9fX0sbmFtZTpcInNpZGViYXJcIixzY2hlbWE6W21vKFwiZG9tXCIpXX0pLE1PPUExLm9wdGlvbmFsKHtmYWN0b3J5Ontza2V0Y2g6ZnVuY3Rpb24odCl7cmV0dXJue3VpZDp0LnVpZCxkb206e3RhZzpcImRpdlwiLGF0dHJpYnV0ZXM6e1wiYXJpYS1oaWRkZW5cIjpcInRydWVcIn0sY2xhc3NlczpbXCJ0b3gtdGhyb2JiZXJcIl0sc3R5bGVzOntkaXNwbGF5Olwibm9uZVwifX0sYmVoYXZpb3VyczplYyhbUmcuY29uZmlnKHt9KSxmTy5jb25maWcoe2ZvY3VzOiExfSksY2QuY29uZmlnKHtmaW5kOmZ1bmN0aW9uKHQpe3JldHVybiBZKHQuY29tcG9uZW50cygpKX19KV0pLGNvbXBvbmVudHM6W119fX0sbmFtZTpcInRocm9iYmVyXCIsc2NoZW1hOlttbyhcImRvbVwiKV19KSxGTz1DbCh7bmFtZTpcIk91dGVyQ29udGFpbmVyXCIsZmFjdG9yeTpmdW5jdGlvbihuLHQsZSl7cmV0dXJue3VpZDpuLnVpZCxkb206bi5kb20sY29tcG9uZW50czp0LGFwaXM6e2dldFNvY2tldDpmdW5jdGlvbih0KXtyZXR1cm4gRDEuZ2V0UGFydCh0LG4sXCJzb2NrZXRcIil9LHNldFNpZGViYXI6ZnVuY3Rpb24odCxlKXtEMS5nZXRQYXJ0KHQsbixcInNpZGViYXJcIikuZWFjaChmdW5jdGlvbih0KXtyZXR1cm4gYkModCxlKX0pfSx0b2dnbGVTaWRlYmFyOmZ1bmN0aW9uKHQsZSl7RDEuZ2V0UGFydCh0LG4sXCJzaWRlYmFyXCIpLmVhY2goZnVuY3Rpb24odCl7dmFyIG49ZTtjZC5nZXRDdXJyZW50KHQpLmVhY2goZnVuY3Rpb24oZSl7Y2QuZ2V0Q3VycmVudChlKS5lYWNoKGZ1bmN0aW9uKHQpe25PLmhhc0dyb3duKGUpP3VPLmlzU2hvd2luZyh0LG4pP25PLnNocmluayhlKToodU8uaGlkZUFsbFNsb3RzKHQpLHVPLnNob3dTbG90KHQsbikpOih1Ty5oaWRlQWxsU2xvdHModCksdU8uc2hvd1Nsb3QodCxuKSxuTy5ncm93KGUpKX0pfSl9KX0sd2hpY2hTaWRlYmFyOmZ1bmN0aW9uKHQpe3JldHVybiBEMS5nZXRQYXJ0KHQsbixcInNpZGViYXJcIikuYmluZCh5QykuZ2V0T3JOdWxsKCl9LGdldEhlYWRlcjpmdW5jdGlvbih0KXtyZXR1cm4gRDEuZ2V0UGFydCh0LG4sXCJoZWFkZXJcIil9LGdldFRvb2xiYXI6ZnVuY3Rpb24odCl7cmV0dXJuIEQxLmdldFBhcnQodCxuLFwidG9vbGJhclwiKX0sc2V0VG9vbGJhcjpmdW5jdGlvbih0LGUpe0QxLmdldFBhcnQodCxuLFwidG9vbGJhclwiKS5lYWNoKGZ1bmN0aW9uKHQpe3QuZ2V0QXBpcygpLnNldEdyb3Vwcyh0LGUpfSl9LHNldFRvb2xiYXJzOmZ1bmN0aW9uKHQsZSl7RDEuZ2V0UGFydCh0LG4sXCJtdWx0aXBsZS10b29sYmFyXCIpLmVhY2goZnVuY3Rpb24odCl7RjEuc2V0SXRlbXModCxlKX0pfSxyZWZyZXNoVG9vbGJhcjpmdW5jdGlvbih0KXtEMS5nZXRQYXJ0KHQsbixcInRvb2xiYXJcIikuZWFjaChmdW5jdGlvbih0KXtyZXR1cm4gdC5nZXRBcGlzKCkucmVmcmVzaCh0KX0pfSx0b2dnbGVUb29sYmFyRHJhd2VyOmZ1bmN0aW9uKHQpe0QxLmdldFBhcnQodCxuLFwidG9vbGJhclwiKS5lYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PWUuZ2V0QXBpcygpLnRvZ2dsZTtudWxsIT10P3Z0LnNvbWUoZnVuY3Rpb24odCl7cmV0dXJuIHQoZSl9KHQpKTp2dC5ub25lKCl9KX0saXNUb29sYmFyRHJhd2VyVG9nZ2xlZDpmdW5jdGlvbih0KXtyZXR1cm4gRDEuZ2V0UGFydCh0LG4sXCJ0b29sYmFyXCIpLmJpbmQoZnVuY3Rpb24oZSl7cmV0dXJuIHZ0LmZyb20oZS5nZXRBcGlzKCkuaXNPcGVuKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQoZSl9KX0pLmdldE9yKCExKX0sZ2V0VGhyb2JiZXI6ZnVuY3Rpb24odCl7cmV0dXJuIEQxLmdldFBhcnQodCxuLFwidGhyb2JiZXJcIil9LGZvY3VzVG9vbGJhcjpmdW5jdGlvbih0KXtEMS5nZXRQYXJ0KHQsbixcInRvb2xiYXJcIikub3JUaHVuayhmdW5jdGlvbigpe3JldHVybiBEMS5nZXRQYXJ0KHQsbixcIm11bHRpcGxlLXRvb2xiYXJcIil9KS5lYWNoKGZ1bmN0aW9uKHQpe0ZnLmZvY3VzSW4odCl9KX0sc2V0TWVudWJhcjpmdW5jdGlvbih0LGUpe0QxLmdldFBhcnQodCxuLFwibWVudWJhclwiKS5lYWNoKGZ1bmN0aW9uKHQpe1oxLnNldE1lbnVzKHQsZSl9KX0sZm9jdXNNZW51YmFyOmZ1bmN0aW9uKHQpe0QxLmdldFBhcnQodCxuLFwibWVudWJhclwiKS5lYWNoKGZ1bmN0aW9uKHQpe1oxLmZvY3VzKHQpfSl9fSxiZWhhdmlvdXJzOm4uYmVoYXZpb3Vyc319LGNvbmZpZ0ZpZWxkczpbbW8oXCJkb21cIiksbW8oXCJiZWhhdmlvdXJzXCIpXSxwYXJ0RmllbGRzOltETyxfTyxFTyxUTyxBTyxCTyxNT10sYXBpczp7Z2V0U29ja2V0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuZ2V0U29ja2V0KGUpfSxzZXRTaWRlYmFyOmZ1bmN0aW9uKHQsZSxuKXt0LnNldFNpZGViYXIoZSxuKX0sdG9nZ2xlU2lkZWJhcjpmdW5jdGlvbih0LGUsbil7dC50b2dnbGVTaWRlYmFyKGUsbil9LHdoaWNoU2lkZWJhcjpmdW5jdGlvbih0LGUpe3JldHVybiB0LndoaWNoU2lkZWJhcihlKX0sZ2V0SGVhZGVyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuZ2V0SGVhZGVyKGUpfSxnZXRUb29sYmFyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuZ2V0VG9vbGJhcihlKX0sc2V0VG9vbGJhcjpmdW5jdGlvbih0LGUsbil7dmFyIG89QihuLFJDKTt0LnNldFRvb2xiYXIoZSxvKX0sc2V0VG9vbGJhcnM6ZnVuY3Rpb24odCxlLG4pe3ZhciBvPUIobixmdW5jdGlvbih0KXtyZXR1cm4gQih0LFJDKX0pO3Quc2V0VG9vbGJhcnMoZSxvKX0scmVmcmVzaFRvb2xiYXI6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5yZWZyZXNoVG9vbGJhcihlKX0sdG9nZ2xlVG9vbGJhckRyYXdlcjpmdW5jdGlvbih0LGUpe3QudG9nZ2xlVG9vbGJhckRyYXdlcihlKX0saXNUb29sYmFyRHJhd2VyVG9nZ2xlZDpmdW5jdGlvbih0LGUpe3JldHVybiB0LmlzVG9vbGJhckRyYXdlclRvZ2dsZWQoZSl9LGdldFRocm9iYmVyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuZ2V0VGhyb2JiZXIoZSl9LHNldE1lbnViYXI6ZnVuY3Rpb24odCxlLG4pe3Quc2V0TWVudWJhcihlLG4pfSxmb2N1c01lbnViYXI6ZnVuY3Rpb24odCxlKXt0LmZvY3VzTWVudWJhcihlKX0sZm9jdXNUb29sYmFyOmZ1bmN0aW9uKHQsZSl7dC5mb2N1c1Rvb2xiYXIoZSl9fX0pLElPPXtmaWxlOnt0aXRsZTpcIkZpbGVcIixpdGVtczpcIm5ld2RvY3VtZW50IHJlc3RvcmVkcmFmdCB8IHByZXZpZXcgfCBleHBvcnQgcHJpbnQgfCBkZWxldGVhbGxjb252ZXJzYXRpb25zXCJ9LGVkaXQ6e3RpdGxlOlwiRWRpdFwiLGl0ZW1zOlwidW5kbyByZWRvIHwgY3V0IGNvcHkgcGFzdGUgcGFzdGV0ZXh0IHwgc2VsZWN0YWxsIHwgc2VhcmNocmVwbGFjZVwifSx2aWV3Ont0aXRsZTpcIlZpZXdcIixpdGVtczpcImNvZGUgfCB2aXN1YWxhaWQgdmlzdWFsY2hhcnMgdmlzdWFsYmxvY2tzIHwgc3BlbGxjaGVja2VyIHwgcHJldmlldyBmdWxsc2NyZWVuIHwgc2hvd2NvbW1lbnRzXCJ9LGluc2VydDp7dGl0bGU6XCJJbnNlcnRcIixpdGVtczpcImltYWdlIGxpbmsgbWVkaWEgYWRkY29tbWVudCBwYWdlZW1iZWQgdGVtcGxhdGUgY29kZXNhbXBsZSBpbnNlcnR0YWJsZSB8IGNoYXJtYXAgZW1vdGljb25zIGhyIHwgcGFnZWJyZWFrIG5vbmJyZWFraW5nIGFuY2hvciB0b2MgfCBpbnNlcnRkYXRldGltZVwifSxmb3JtYXQ6e3RpdGxlOlwiRm9ybWF0XCIsaXRlbXM6XCJib2xkIGl0YWxpYyB1bmRlcmxpbmUgc3RyaWtldGhyb3VnaCBzdXBlcnNjcmlwdCBzdWJzY3JpcHQgY29kZWZvcm1hdCB8IGZvcm1hdHMgYmxvY2tmb3JtYXRzIGZvbnRmb3JtYXRzIGZvbnRzaXplcyBhbGlnbiBsaW5laGVpZ2h0IHwgZm9yZWNvbG9yIGJhY2tjb2xvciB8IGxhbmd1YWdlIHwgcmVtb3ZlZm9ybWF0XCJ9LHRvb2xzOnt0aXRsZTpcIlRvb2xzXCIsaXRlbXM6XCJzcGVsbGNoZWNrZXIgc3BlbGxjaGVja2VybGFuZ3VhZ2UgfCBhMTF5Y2hlY2sgY29kZSB3b3JkY291bnRcIn0sdGFibGU6e3RpdGxlOlwiVGFibGVcIixpdGVtczpcImluc2VydHRhYmxlIHwgY2VsbCByb3cgY29sdW1uIHwgYWR2dGFibGVzb3J0IHwgdGFibGVwcm9wcyBkZWxldGV0YWJsZVwifSxoZWxwOnt0aXRsZTpcIkhlbHBcIixpdGVtczpcImhlbHBcIn19LFJPPUMoakMsITEpLE5PPUMoakMsITApO2Z1bmN0aW9uIFBPKHQsZSxuLG8pe3ZhciByO3JldHVybnt0eXBlOlwiYmFzaWNcIixkYXRhOihyPXQuZ2V0UGFyYW0oZSxuLFwic3RyaW5nXCIpLEIobz09PXQxLlNlbWlDb2xvbj9yLnJlcGxhY2UoLzskLyxcIlwiKS5zcGxpdChcIjtcIik6ci5zcGxpdChcIiBcIiksZnVuY3Rpb24odCl7dmFyIGU9dCxuPXQsbz10LnNwbGl0KFwiPVwiKTtyZXR1cm4gMTxvLmxlbmd0aCYmKGU9b1swXSxuPW9bMV0pLHt0aXRsZTplLGZvcm1hdDpufX0pKX19ZnVuY3Rpb24gVk8obil7dmFyIHQ9e3R5cGU6XCJiYXNpY1wiLGRhdGE6dl99O3JldHVybnt0b29sdGlwOlwiQWxpZ25cIix0ZXh0OnZ0Lm5vbmUoKSxpY29uOnZ0LnNvbWUoXCJhbGlnbi1sZWZ0XCIpLGlzU2VsZWN0ZWRGb3I6ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG4uZm9ybWF0dGVyLm1hdGNoKHQpfX0sZ2V0Q3VycmVudFZhbHVlOnZ0Lm5vbmUsZ2V0UHJldmlld0ZvcjpmdW5jdGlvbih0KXtyZXR1cm4gdnQubm9uZX0sb25BY3Rpb246ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIE4odl8sZnVuY3Rpb24odCl7cmV0dXJuIHQuZm9ybWF0PT09ZS5mb3JtYXR9KS5lYWNoKGZ1bmN0aW9uKHQpe3JldHVybiBuLmV4ZWNDb21tYW5kKHQuY29tbWFuZCl9KX19LHVwZGF0ZVRleHQ6ZnVuY3Rpb24odCl7dmFyIGU9Tih2XyxmdW5jdGlvbih0KXtyZXR1cm4gbi5mb3JtYXR0ZXIubWF0Y2godC5mb3JtYXQpfSkuZm9sZChydChcImxlZnRcIiksZnVuY3Rpb24odCl7cmV0dXJuIHQudGl0bGUudG9Mb3dlckNhc2UoKX0pO2JyKHQsUFMse2ljb246XCJhbGlnbi1cIitlfSl9LGRhdGFzZXQ6dCxzaG91bGRIaWRlOiExLGlzSW52YWxpZDpmdW5jdGlvbih0KXtyZXR1cm4hbi5mb3JtYXR0ZXIuY2FuQXBwbHkodC5mb3JtYXQpfX19ZnVuY3Rpb24gSE8odCl7cmV0dXJuIEIodC5zcGxpdCgvXFxzKixcXHMqLyksZnVuY3Rpb24odCl7cmV0dXJuIHQucmVwbGFjZSgvXlsnXCJdK3xbJ1wiXSskL2csXCJcIil9KX1mdW5jdGlvbiBMTyhyKXtmdW5jdGlvbiBpKCl7ZnVuY3Rpb24gbih0KXtyZXR1cm4gdD9ITyh0KVswXTpcIlwifXZhciB0PXIucXVlcnlDb21tYW5kVmFsdWUoXCJGb250TmFtZVwiKSxlPWEuZGF0YSxvPXQ/dC50b0xvd2VyQ2FzZSgpOlwiXCI7cmV0dXJue21hdGNoT3B0Ok4oZSxmdW5jdGlvbih0KXt2YXIgZT10LmZvcm1hdDtyZXR1cm4gZS50b0xvd2VyQ2FzZSgpPT09b3x8bihlKS50b0xvd2VyQ2FzZSgpPT09bihvKS50b0xvd2VyQ2FzZSgpfSkub3JUaHVuayhmdW5jdGlvbigpe3JldHVybiBvdCgwPT09KHQ9bykuaW5kZXhPZihcIi1hcHBsZS1zeXN0ZW1cIikmJihlPUhPKHQudG9Mb3dlckNhc2UoKSksTChiXyxmdW5jdGlvbih0KXtyZXR1cm4tMTxlLmluZGV4T2YodC50b0xvd2VyQ2FzZSgpKX0pKSx7dGl0bGU6dSxmb3JtYXQ6b30pO3ZhciB0LGV9KSxmb250OnR9fXZhciB1PVwiU3lzdGVtIEZvbnRcIixhPVBPKHIsXCJmb250X2Zvcm1hdHNcIixcIkFuZGFsZSBNb25vPWFuZGFsZSBtb25vLG1vbm9zcGFjZTtBcmlhbD1hcmlhbCxoZWx2ZXRpY2Esc2Fucy1zZXJpZjtBcmlhbCBCbGFjaz1hcmlhbCBibGFjayxzYW5zLXNlcmlmO0Jvb2sgQW50aXF1YT1ib29rIGFudGlxdWEscGFsYXRpbm8sc2VyaWY7Q29taWMgU2FucyBNUz1jb21pYyBzYW5zIG1zLHNhbnMtc2VyaWY7Q291cmllciBOZXc9Y291cmllciBuZXcsY291cmllcixtb25vc3BhY2U7R2VvcmdpYT1nZW9yZ2lhLHBhbGF0aW5vLHNlcmlmO0hlbHZldGljYT1oZWx2ZXRpY2EsYXJpYWwsc2Fucy1zZXJpZjtJbXBhY3Q9aW1wYWN0LHNhbnMtc2VyaWY7U3ltYm9sPXN5bWJvbDtUYWhvbWE9dGFob21hLGFyaWFsLGhlbHZldGljYSxzYW5zLXNlcmlmO1Rlcm1pbmFsPXRlcm1pbmFsLG1vbmFjbyxtb25vc3BhY2U7VGltZXMgTmV3IFJvbWFuPXRpbWVzIG5ldyByb21hbix0aW1lcyxzZXJpZjtUcmVidWNoZXQgTVM9dHJlYnVjaGV0IG1zLGdlbmV2YSxzYW5zLXNlcmlmO1ZlcmRhbmE9dmVyZGFuYSxnZW5ldmEsc2Fucy1zZXJpZjtXZWJkaW5ncz13ZWJkaW5ncztXaW5nZGluZ3M9d2luZ2RpbmdzLHphcGYgZGluZ2JhdHNcIix0MS5TZW1pQ29sb24pO3JldHVybnt0b29sdGlwOlwiRm9udHNcIix0ZXh0OnZ0LnNvbWUodSksaWNvbjp2dC5ub25lKCksaXNTZWxlY3RlZEZvcjpmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIHQuZXhpc3RzKGZ1bmN0aW9uKHQpe3JldHVybiB0LmZvcm1hdD09PWV9KX19LGdldEN1cnJlbnRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBpKCkubWF0Y2hPcHR9LGdldFByZXZpZXdGb3I6ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHZ0LnNvbWUoe3RhZzpcImRpdlwiLHN0eWxlczotMT09PXQuaW5kZXhPZihcImRpbmdzXCIpP3tcImZvbnQtZmFtaWx5XCI6dH06e319KX19LG9uQWN0aW9uOmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3IudW5kb01hbmFnZXIudHJhbnNhY3QoZnVuY3Rpb24oKXtyLmZvY3VzKCksci5leGVjQ29tbWFuZChcIkZvbnROYW1lXCIsITEsdC5mb3JtYXQpfSl9fSx1cGRhdGVUZXh0OmZ1bmN0aW9uKHQpe3ZhciBlPWkoKSxuPWUubWF0Y2hPcHQsbz1lLmZvbnQscj1uLmZvbGQocnQobyksZnVuY3Rpb24odCl7cmV0dXJuIHQudGl0bGV9KTticih0LE5TLHt0ZXh0OnJ9KX0sZGF0YXNldDphLHNob3VsZEhpZGU6ITEsaXNJbnZhbGlkOlR9fWZ1bmN0aW9uIHpPKG4pe2Z1bmN0aW9uIGkoKXt2YXIgYT12dC5ub25lKCksYz1vLmRhdGEscz1uLnF1ZXJ5Q29tbWFuZFZhbHVlKFwiRm9udFNpemVcIik7aWYocylmb3IodmFyIHQ9ZnVuY3Rpb24odCl7dmFyIGUsbixvLHIsaT0obj10LC9bMC05Ll0rcHgkLy50ZXN0KGU9cyk/KG89NzIqcGFyc2VJbnQoZSwxMCkvOTYscj1NYXRoLnBvdygxMCxufHwwKSxNYXRoLnJvdW5kKG8qcikvcitcInB0XCIpOnR0KHhfLGUpLmdldE9yKGUpKSx1PXR0KHlfLGkpLmdldE9yKFwiXCIpO2E9TihjLGZ1bmN0aW9uKHQpe3JldHVybiB0LmZvcm1hdD09PXN8fHQuZm9ybWF0PT09aXx8dC5mb3JtYXQ9PT11fSl9LGU9MzthLmlzTm9uZSgpJiYwPD1lO2UtLSl0KGUpO3JldHVybnttYXRjaE9wdDphLHNpemU6c319dmFyIHQ9cnQodnQubm9uZSksbz1QTyhuLFwiZm9udHNpemVfZm9ybWF0c1wiLFwiOHB0IDEwcHQgMTJwdCAxNHB0IDE4cHQgMjRwdCAzNnB0XCIsdDEuU3BhY2UpO3JldHVybnt0b29sdGlwOlwiRm9udCBzaXplc1wiLHRleHQ6dnQuc29tZShcIjEycHRcIiksaWNvbjp2dC5ub25lKCksaXNTZWxlY3RlZEZvcjpmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIHQuZXhpc3RzKGZ1bmN0aW9uKHQpe3JldHVybiB0LmZvcm1hdD09PWV9KX19LGdldFByZXZpZXdGb3I6dCxnZXRDdXJyZW50VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gaSgpLm1hdGNoT3B0fSxvbkFjdGlvbjpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtuLnVuZG9NYW5hZ2VyLnRyYW5zYWN0KGZ1bmN0aW9uKCl7bi5mb2N1cygpLG4uZXhlY0NvbW1hbmQoXCJGb250U2l6ZVwiLCExLHQuZm9ybWF0KX0pfX0sdXBkYXRlVGV4dDpmdW5jdGlvbih0KXt2YXIgZT1pKCksbj1lLm1hdGNoT3B0LG89ZS5zaXplLHI9bi5mb2xkKHJ0KG8pLGZ1bmN0aW9uKHQpe3JldHVybiB0LnRpdGxlfSk7YnIodCxOUyx7dGV4dDpyfSl9LGRhdGFzZXQ6byxzaG91bGRIaWRlOiExLGlzSW52YWxpZDpUfX1mdW5jdGlvbiBVTyh0LGUpe3ZhciBuPWUoKSxvPUIobixmdW5jdGlvbih0KXtyZXR1cm4gdC5mb3JtYXR9KTtyZXR1cm4gdnQuZnJvbSh0LmZvcm1hdHRlci5jbG9zZXN0KG8pKS5iaW5kKGZ1bmN0aW9uKGUpe3JldHVybiBOKG4sZnVuY3Rpb24odCl7cmV0dXJuIHQuZm9ybWF0PT09ZX0pfSkub3JUaHVuayhmdW5jdGlvbigpe3JldHVybiBvdCh0LmZvcm1hdHRlci5tYXRjaChcInBcIikse3RpdGxlOlwiUGFyYWdyYXBoXCIsZm9ybWF0OlwicFwifSl9KX1mdW5jdGlvbiBqTyhuKXt2YXIgbz1QTyhuLFwiYmxvY2tfZm9ybWF0c1wiLFwiUGFyYWdyYXBoPXA7SGVhZGluZyAxPWgxO0hlYWRpbmcgMj1oMjtIZWFkaW5nIDM9aDM7SGVhZGluZyA0PWg0O0hlYWRpbmcgNT1oNTtIZWFkaW5nIDY9aDY7UHJlZm9ybWF0dGVkPXByZVwiLHQxLlNlbWlDb2xvbik7cmV0dXJue3Rvb2x0aXA6XCJCbG9ja3NcIix0ZXh0OnZ0LnNvbWUoXCJQYXJhZ3JhcGhcIiksaWNvbjp2dC5ub25lKCksaXNTZWxlY3RlZEZvcjpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbi5mb3JtYXR0ZXIubWF0Y2godCl9fSxnZXRDdXJyZW50VmFsdWU6dnQubm9uZSxnZXRQcmV2aWV3Rm9yOmZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3ZhciB0PW4uZm9ybWF0dGVyLmdldChlKTtyZXR1cm4gdnQuc29tZSh7dGFnOjA8dC5sZW5ndGgmJih0WzBdLmlubGluZXx8dFswXS5ibG9jayl8fFwiZGl2XCIsc3R5bGVzOm4uZG9tLnBhcnNlU3R5bGUobi5mb3JtYXR0ZXIuZ2V0Q3NzVGV4dChlKSl9KX19LG9uQWN0aW9uOlhDKG4pLHVwZGF0ZVRleHQ6ZnVuY3Rpb24odCl7dmFyIGU9VU8obixmdW5jdGlvbigpe3JldHVybiBvLmRhdGF9KS5mb2xkKHJ0KFwiUGFyYWdyYXBoXCIpLGZ1bmN0aW9uKHQpe3JldHVybiB0LnRpdGxlfSk7YnIodCxOUyx7dGV4dDplfSl9LGRhdGFzZXQ6byxzaG91bGRIaWRlOiExLGlzSW52YWxpZDpmdW5jdGlvbih0KXtyZXR1cm4hbi5mb3JtYXR0ZXIuY2FuQXBwbHkodC5mb3JtYXQpfX19ZnVuY3Rpb24gV08ocix0KXtyZXR1cm57dG9vbHRpcDpcIkZvcm1hdHNcIix0ZXh0OnZ0LnNvbWUoXCJQYXJhZ3JhcGhcIiksaWNvbjp2dC5ub25lKCksaXNTZWxlY3RlZEZvcjpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gci5mb3JtYXR0ZXIubWF0Y2godCl9fSxnZXRDdXJyZW50VmFsdWU6dnQubm9uZSxnZXRQcmV2aWV3Rm9yOmZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3ZhciB0PXIuZm9ybWF0dGVyLmdldChlKTtyZXR1cm4gdm9pZCAwIT09dD92dC5zb21lKHt0YWc6MDx0Lmxlbmd0aCYmKHRbMF0uaW5saW5lfHx0WzBdLmJsb2NrKXx8XCJkaXZcIixzdHlsZXM6ci5kb20ucGFyc2VTdHlsZShyLmZvcm1hdHRlci5nZXRDc3NUZXh0KGUpKX0pOnZ0Lm5vbmUoKX19LG9uQWN0aW9uOlhDKHIpLHVwZGF0ZVRleHQ6ZnVuY3Rpb24odCl7dmFyIG49ZnVuY3Rpb24odCl7dmFyIGU9dC5pdGVtcztyZXR1cm4gdm9pZCAwIT09ZSYmMDxlLmxlbmd0aD9IKGUsbik6W3t0aXRsZTp0LnRpdGxlLGZvcm1hdDp0LmZvcm1hdH1dfSxlPUgoYmsociksbiksbz1VTyhyLHJ0KGUpKS5mb2xkKHJ0KFwiUGFyYWdyYXBoXCIpLGZ1bmN0aW9uKHQpe3JldHVybiB0LnRpdGxlfSk7YnIodCxOUyx7dGV4dDpvfSl9LHNob3VsZEhpZGU6ci5nZXRQYXJhbShcInN0eWxlX2Zvcm1hdHNfYXV0b2hpZGVcIiwhMSxcImJvb2xlYW5cIiksaXNJbnZhbGlkOmZ1bmN0aW9uKHQpe3JldHVybiFyLmZvcm1hdHRlci5jYW5BcHBseSh0LmZvcm1hdCl9LGRhdGFzZXQ6dH19ZnVuY3Rpb24gR08oZSl7cmV0dXJue2lzRGlzYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gZ2QuaXNEaXNhYmxlZChlKX0sc2V0RGlzYWJsZWQ6ZnVuY3Rpb24odCl7cmV0dXJuIGdkLnNldChlLHQpfX19ZnVuY3Rpb24gWE8oZSl7cmV0dXJue3NldEFjdGl2ZTpmdW5jdGlvbih0KXt6Zy5zZXQoZSx0KX0saXNBY3RpdmU6ZnVuY3Rpb24oKXtyZXR1cm4gemcuaXNPbihlKX0saXNEaXNhYmxlZDpmdW5jdGlvbigpe3JldHVybiBnZC5pc0Rpc2FibGVkKGUpfSxzZXREaXNhYmxlZDpmdW5jdGlvbih0KXtyZXR1cm4gZ2Quc2V0KGUsdCl9fX1mdW5jdGlvbiBZTyh0LGUpe3JldHVybiB0Lm1hcChmdW5jdGlvbih0KXtyZXR1cm57XCJhcmlhLWxhYmVsXCI6ZS50cmFuc2xhdGUodCksdGl0bGU6ZS50cmFuc2xhdGUodCl9fSkuZ2V0T3Ioe30pfWZ1bmN0aW9uIHFPKGUsbix0LG8scixpKXt2YXIgdTtyZXR1cm57ZG9tOnt0YWc6XCJidXR0b25cIixjbGFzc2VzOltcInRveC10YnRuXCJdLmNvbmNhdChuLmlzU29tZSgpP1tcInRveC10YnRuLS1zZWxlY3RcIl06W10pLGF0dHJpYnV0ZXM6WU8odCxpKX0sY29tcG9uZW50czp0YihbZS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIFYwKHQsaS5pY29ucyl9KSxuLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gTDAodCxcInRveC10YnRuXCIsaSl9KV0pLGV2ZW50T3JkZXI6KCh1PXt9KVttaSgpXT1bXCJmb2N1c2luZ1wiLFwiYWxsb3kuYmFzZS5iZWhhdmlvdXJcIixcImNvbW1vbi1idXR0b24tZGlzcGxheS1ldmVudHNcIl0sdSksYnV0dG9uQmVoYXZpb3VyczplYyhbUXYoaS5pc0Rpc2FibGVkKSxwdigpLG1tKFwiY29tbW9uLWJ1dHRvbi1kaXNwbGF5LWV2ZW50c1wiLFtDcihtaSgpLGZ1bmN0aW9uKHQsZSl7ZS5ldmVudC5wcmV2ZW50KCksdnIodCxUXyl9KV0pXS5jb25jYXQoby5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIGtfLmNvbmZpZyh7Y2hhbm5lbDp0LGluaXRpYWxEYXRhOntpY29uOmUsdGV4dDpufSxyZW5kZXJDb21wb25lbnRzOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRiKFt0Lmljb24ubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBWMCh0LGkuaWNvbnMpfSksdC50ZXh0Lm1hcChmdW5jdGlvbih0KXtyZXR1cm4gTDAodCxcInRveC10YnRuXCIsaSl9KV0pfX0pfSkudG9BcnJheSgpKS5jb25jYXQoci5nZXRPcihbXSkpKX19ZnVuY3Rpb24gS08odCxlLG4pe3ZhciBvLHI9UG8oc3QpLGk9cU8odC5pY29uLHQudGV4dCx0LnRvb2x0aXAsdnQubm9uZSgpLHZ0Lm5vbmUoKSxuKTtyZXR1cm4gZnAuc2tldGNoKHtkb206aS5kb20sY29tcG9uZW50czppLmNvbXBvbmVudHMsZXZlbnRPcmRlcjpSUyxidXR0b25CZWhhdmlvdXJzOmVjKFttbShcInRvb2xiYXItYnV0dG9uLWV2ZW50c1wiLFsobz17b25BY3Rpb246dC5vbkFjdGlvbixnZXRBcGk6ZS5nZXRBcGl9LHV1KGZ1bmN0aW9uKGUsdCl7aHYobyxlKShmdW5jdGlvbih0KXticihlLElTLHtidXR0b25BcGk6dH0pLG8ub25BY3Rpb24odCl9KX0pKSx2dihlLHIpLGJ2KGUscildKSxRdihmdW5jdGlvbigpe3JldHVybiB0LmRpc2FibGVkfHxuLmlzRGlzYWJsZWQoKX0pLHB2KCldLmNvbmNhdChlLnRvb2xiYXJCdXR0b25CZWhhdmlvdXJzKSl9KX1mdW5jdGlvbiBKTyhyLGkpe3JldHVybiBmdW5jdGlvbih0LGUsbil7dmFyIG89cih0KS5tYXBFcnJvcihmdW5jdGlvbih0KXtyZXR1cm4gdXIodCl9KS5nZXRPckRpZSgpO3JldHVybiBpKG8sZSxuKX19ZnVuY3Rpb24gJE8obix0LG8scil7dmFyIGUsaT10Lm91dGVyQ29udGFpbmVyLHU9by50b29sYmFyLGE9by5idXR0b25zO2YodSx5KT8oZT11Lm1hcChmdW5jdGlvbih0KXt2YXIgZT17dG9vbGJhcjp0LGJ1dHRvbnM6YSxhbGxvd1Rvb2xiYXJHcm91cHM6by5hbGxvd1Rvb2xiYXJHcm91cHN9O3JldHVybiBGXyhuLGUse2JhY2tzdGFnZTpyfSx2dC5ub25lKCkpfSksRk8uc2V0VG9vbGJhcnMoaSxlKSk6Rk8uc2V0VG9vbGJhcihpLEZfKG4sbyx7YmFja3N0YWdlOnJ9LHZ0Lm5vbmUoKSkpfWZ1bmN0aW9uIFFPKHQpe3JldHVybi9eWzAtOVxcLl0rKHxweCkkL2kudGVzdChcIlwiK3QpP3Z0LnNvbWUocGFyc2VJbnQoXCJcIit0LDEwKSk6dnQubm9uZSgpfWZ1bmN0aW9uIFpPKHQpe3JldHVybiB1KHQpP3QrXCJweFwiOnR9ZnVuY3Rpb24gdF8oZSx0LG4pe3ZhciBvPXQuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiBlPHR9KSxyPW4uZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiB0PGV9KTtyZXR1cm4gby5vcihyKS5nZXRPcihlKX1mdW5jdGlvbiBlXyh0KXt2YXIgZT1saCh0KSxuPWZoKHQpLG89bWgodCk7cmV0dXJuIFFPKGUpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdF8odCxuLG8pfSl9ZnVuY3Rpb24gbl8odSxhLHQsZSxjKXtmdW5jdGlvbiBzKCl7cmV0dXJuIHguZ2V0KCkmJiF1LnJlbW92ZWR9ZnVuY3Rpb24gbCh0KXtyZXR1cm4geT90LmZvbGQocnQoMCksZnVuY3Rpb24odCl7cmV0dXJuIDE8dC5jb21wb25lbnRzKCkubGVuZ3RoP3hlKHQuY29tcG9uZW50cygpWzFdLmVsZW1lbnQpOjB9KTowfWZ1bmN0aW9uIGYoKXtyLmJyb2FkY2FzdE9uKFt4ZigpXSx7fSl9ZnVuY3Rpb24gbyh0KXt2YXIgZSxuLG8scixpO3ZvaWQgMD09PXQmJih0PSExKSxzKCkmJihtfHwoZT1wLmdldE9yVGh1bmsoZnVuY3Rpb24oKXt2YXIgdD1RTyhnZShibigpLFwibWFyZ2luLWxlZnRcIikpLmdldE9yKDApO3JldHVybiBDZShibigpKS1rZShhKS5sZWZ0K3R9KSxmZShjLmdldCgpLmVsZW1lbnQsXCJtYXgtd2lkdGhcIixlK1wicHhcIikpLHkmJkZPLnJlZnJlc2hUb29sYmFyKGQpLG18fChuPWwoRk8uZ2V0VG9vbGJhcihkKSksbz1NbihhKSxyPXYoKT9NYXRoLm1heChvLnkteGUoYy5nZXQoKS5lbGVtZW50KStuLDApOm8uYm90dG9tLGRlKGQuZWxlbWVudCx7cG9zaXRpb246XCJhYnNvbHV0ZVwiLHRvcDpNYXRoLnJvdW5kKHIpK1wicHhcIixsZWZ0Ok1hdGgucm91bmQoby54KStcInB4XCJ9KSksZyYmKGk9Yy5nZXQoKSx0P2oxLnJlc2V0KGkpOmoxLnJlZnJlc2goaSkpLGYoKSl9ZnVuY3Rpb24gbih0KXt2YXIgZSxuO3ZvaWQgMD09PXQmJih0PSEwKSwhbSYmZyYmcygpJiYoZT1oLmdldERvY2tpbmdNb2RlKCksKG49ZnVuY3Rpb24odCl7c3dpdGNoKHV2KHUpKXtjYXNlIHhoLmF1dG86dmFyIGU9bChGTy5nZXRUb29sYmFyKGQpKSxuPXhlKHQuZWxlbWVudCktZSxvPU1uKGEpO2lmKG8ueT5uKXJldHVyblwidG9wXCI7dmFyIHI9R3QoYSksaT1NYXRoLm1heChyLmRvbS5zY3JvbGxIZWlnaHQseGUocikpO3JldHVybiBvLmJvdHRvbTxpLW58fEZuKCkuYm90dG9tPG8uYm90dG9tLW4/XCJib3R0b21cIjpcInRvcFwiO2Nhc2UgeGguYm90dG9tOnJldHVyblwiYm90dG9tXCI7ZGVmYXVsdDpyZXR1cm4geGgudG9wLFwidG9wXCJ9fShjLmdldCgpKSkhPT1lJiYoZnVuY3Rpb24odCl7dmFyIGU9Yy5nZXQoKTtqMS5zZXRNb2RlcyhlLFt0XSksaC5zZXREb2NraW5nTW9kZSh0KTt2YXIgbj12KCk/T2MuVG9wVG9Cb3R0b206T2MuQm90dG9tVG9Ub3A7b2UoZS5lbGVtZW50LG5zLG4pfShuKSx0JiZvKCEwKSkpfXZhciByPXQudWlNb3RoZXJzaGlwLGQ9dC5vdXRlckNvbnRhaW5lcixpPW52LkRPTSxtPXN2KHUpLGc9ZHYodSkscD1taCh1KS5vcihlXyh1KSksaD1lLnNoYXJlZC5oZWFkZXIsdj1oLmlzUG9zaXRpb25lZEF0VG9wLGI9aXYodSkseT1iPT09Ymguc2xpZGluZ3x8Yj09PWJoLmZsb2F0aW5nLHg9UG8oITEpO3JldHVybntpc1Zpc2libGU6cyxpc1Bvc2l0aW9uZWRBdFRvcDp2LHNob3c6ZnVuY3Rpb24oKXt4LnNldCghMCksZmUoZC5lbGVtZW50LFwiZGlzcGxheVwiLFwiZmxleFwiKSxpLmFkZENsYXNzKHUuZ2V0Qm9keSgpLFwibWNlLWVkaXQtZm9jdXNcIiksdmUoci5lbGVtZW50LFwiZGlzcGxheVwiKSxuKCExKSxvKCl9LGhpZGU6ZnVuY3Rpb24oKXt4LnNldCghMSksdC5vdXRlckNvbnRhaW5lciYmKGZlKGQuZWxlbWVudCxcImRpc3BsYXlcIixcIm5vbmVcIiksaS5yZW1vdmVDbGFzcyh1LmdldEJvZHkoKSxcIm1jZS1lZGl0LWZvY3VzXCIpKSxmZShyLmVsZW1lbnQsXCJkaXNwbGF5XCIsXCJub25lXCIpfSx1cGRhdGU6byx1cGRhdGVNb2RlOm4scmVwb3NpdGlvblBvcHVwczpmfX1mdW5jdGlvbiBvXyh0LGUpe3ZhciBuPU1uKHQpO3JldHVybntwb3M6ZT9uLnk6bi5ib3R0b20sYm91bmRzOm59fWZ1bmN0aW9uIHJfKGksdSl7cmV0dXJuIENyKElTLGZ1bmN0aW9uKHQsZSl7dmFyIG4sbz1pLmdldCh0KSxyPShuPW8se2hpZGU6ZnVuY3Rpb24oKXtyZXR1cm4gdnIobixWaSgpKX0sZ2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gRGYuZ2V0VmFsdWUobil9fSk7dS5vbkFjdGlvbihyLGUuZXZlbnQuYnV0dG9uQXBpKX0pfWZ1bmN0aW9uIGlfKHQsZSxuKXtyZXR1cm4gZS5ib3R0b20tdC55Pj0obj12b2lkIDA9PT1uPy4wMTpuKSYmdC5ib3R0b20tZS55Pj1ufWZ1bmN0aW9uIHVfKHQpe3ZhciBlPWZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7aWYoZS5oZWlnaHQ8PTAmJmUud2lkdGg8PTApe3ZhciBuPVF0KE10LmZyb21Eb20odC5zdGFydENvbnRhaW5lciksdC5zdGFydE9mZnNldCkuZWxlbWVudDtyZXR1cm4oWGUobik/WXQobik6dnQuc29tZShuKSkuZmlsdGVyKEdlKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuZG9tLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpfSkuZ2V0T3IoZSl9cmV0dXJuIGV9KHQuc2VsZWN0aW9uLmdldFJuZygpKTtpZih0LmlubGluZSl7dmFyIG49SWUoKTtyZXR1cm4gQm4obi5sZWZ0K2UubGVmdCxuLnRvcCtlLnRvcCxlLndpZHRoLGUuaGVpZ2h0KX12YXIgbz1IZShNdC5mcm9tRG9tKHQuZ2V0Qm9keSgpKSk7cmV0dXJuIEJuKG8ueCtlLmxlZnQsby55K2UudG9wLGUud2lkdGgsZS5oZWlnaHQpfWZ1bmN0aW9uIGFfKHQsZSxuLG8pe3ZvaWQgMD09PW8mJihvPTApO3ZhciByLGksdSxhLGM9UGUod2luZG93KSxzPU1uKE10LmZyb21Eb20odC5nZXRDb250ZW50QXJlYUNvbnRhaW5lcigpKSksbD1waCh0KXx8aGgodCl8fHJ2KHQpLGY9KHI9cyxpPWMsdT1vLHt4OmE9TWF0aC5tYXgoci54K3UsaS54KSx3aWR0aDpNYXRoLm1pbihyLnJpZ2h0LXUsaS5yaWdodCktYX0pLGQ9Zi54LG09Zi53aWR0aDtpZih0LmlubGluZSYmIWwpcmV0dXJuIEJuKGQsYy55LG0sYy5oZWlnaHQpO3ZhciBnPWZ1bmN0aW9uKHQsZSxuLG8scixpKXt2YXIgdT1NdC5mcm9tRG9tKHQuZ2V0Q29udGFpbmVyKCkpLGE9SXUodSxcIi50b3gtZWRpdG9yLWhlYWRlclwiKS5nZXRPcih1KSxjPU1uKGEpLHM9Yy55Pj1lLmJvdHRvbSxsPW8mJiFzO2lmKHQuaW5saW5lJiZsKXJldHVybnt5Ok1hdGgubWF4KGMuYm90dG9tK2ksbi55KSxib3R0b206bi5ib3R0b219O2lmKHQuaW5saW5lJiYhbClyZXR1cm57eTpuLnksYm90dG9tOk1hdGgubWluKGMueS1pLG4uYm90dG9tKX07dmFyIGY9XCJsaW5lXCI9PT1yP01uKHUpOmU7cmV0dXJuIGw/e3k6TWF0aC5tYXgoYy5ib3R0b20raSxuLnkpLGJvdHRvbTpNYXRoLm1pbihmLmJvdHRvbS1pLG4uYm90dG9tKX06e3k6TWF0aC5tYXgoZi55K2ksbi55KSxib3R0b206TWF0aC5taW4oYy55LWksbi5ib3R0b20pfX0odCxzLGMsZS5oZWFkZXIuaXNQb3NpdGlvbmVkQXRUb3AoKSxuLG8pLHA9Zy55LGg9Zy5ib3R0b207cmV0dXJuIEJuKGQscCxtLGgtcCl9ZnVuY3Rpb24gY18odCl7cmV0dXJuXCJub2RlXCI9PT10fWZ1bmN0aW9uIHNfKHQscixlLGksbil7dmFyIHU9dV8odCksbz1pLmxhc3RFbGVtZW50KCkuZXhpc3RzKGZ1bmN0aW9uKHQpe3JldHVybiB6dChlLHQpfSksYT1lLGM9dC5zZWxlY3Rpb24uZ2V0Um5nKCkscz1RdChNdC5mcm9tRG9tKGMuc3RhcnRDb250YWluZXIpLGMuc3RhcnRPZmZzZXQpO3JldHVybiBjLnN0YXJ0Q29udGFpbmVyPT09Yy5lbmRDb250YWluZXImJmMuc3RhcnRPZmZzZXQ9PT1jLmVuZE9mZnNldC0xJiZ6dChzLmVsZW1lbnQsYSk/bz9ObTpjcDpvP2Z1bmN0aW9uKGUsdCl7dmFyIG49cGUoZSxcInBvc2l0aW9uXCIpO2ZlKGUsXCJwb3NpdGlvblwiLHQpO3ZhciBvPWlfKHUsTW4ocikpJiYhaS5pc1JlcG9zaXRpb24oKT9WbTpObTtyZXR1cm4gbi5lYWNoKGZ1bmN0aW9uKHQpe3JldHVybiBmZShlLFwicG9zaXRpb25cIix0KX0pLG99KHIsaS5nZXRNb2RlKCkpOihcImZpeGVkXCI9PT1pLmdldE1vZGUoKT9uLnkrSWUoKS50b3A6bi55KSsoeGUocikrMTIpPD11Lnk/Y3A6c3B9ZnVuY3Rpb24gbF8oZSx0KXt2YXIgbj1NKEYodCxmdW5jdGlvbih0KXtyZXR1cm4gdC5wcmVkaWNhdGUoZS5kb20pfSksZnVuY3Rpb24odCl7cmV0dXJuXCJjb250ZXh0dG9vbGJhclwiPT09dC50eXBlfSk7cmV0dXJue2NvbnRleHRUb29sYmFyczpuLnBhc3MsY29udGV4dEZvcm1zOm4uZmFpbH19ZnVuY3Rpb24gZl8obix0KXtmdW5jdGlvbiBvKHQpe3JldHVybiB6dCh0LHIpfXZhciBlLHI9TXQuZnJvbURvbSh0LmdldEJvZHkoKSksaT1NdC5mcm9tRG9tKHQuc2VsZWN0aW9uLmdldE5vZGUoKSk7cmV0dXJuIG8oZT1pKXx8VXQocixlKT9mdW5jdGlvbih0LGUsbil7dmFyIG89bF8odCxlKTtpZigwPG8uY29udGV4dEZvcm1zLmxlbmd0aClyZXR1cm4gdnQuc29tZSh7ZWxlbTp0LHRvb2xiYXJzOltvLmNvbnRleHRGb3Jtc1swXV19KTt2YXIgcj1sXyh0LG4pO2lmKDA8ci5jb250ZXh0Rm9ybXMubGVuZ3RoKXJldHVybiB2dC5zb21lKHtlbGVtOnQsdG9vbGJhcnM6W3IuY29udGV4dEZvcm1zWzBdXX0pO2lmKDA8by5jb250ZXh0VG9vbGJhcnMubGVuZ3RofHwwPHIuY29udGV4dFRvb2xiYXJzLmxlbmd0aCl7dmFyIGk9ZnVuY3Rpb24odCl7aWYodC5sZW5ndGg8PTEpcmV0dXJuIHQ7ZnVuY3Rpb24gZShlKXtyZXR1cm4gZCh0LGZ1bmN0aW9uKHQpe3JldHVybiB0LnBvc2l0aW9uPT09ZX0pfWZ1bmN0aW9uIG4oZSl7cmV0dXJuIEYodCxmdW5jdGlvbih0KXtyZXR1cm4gdC5wb3NpdGlvbj09PWV9KX12YXIgbz1lKFwic2VsZWN0aW9uXCIpLHI9ZShcIm5vZGVcIik7aWYob3x8cil7aWYociYmbyl7dmFyIGk9bihcIm5vZGVcIiksdT1CKG4oXCJzZWxlY3Rpb25cIiksZnVuY3Rpb24odCl7cmV0dXJuIGx0KGx0KHt9LHQpLHtwb3NpdGlvbjpcIm5vZGVcIn0pfSk7cmV0dXJuIGkuY29uY2F0KHUpfXJldHVybiBuKG8/XCJzZWxlY3Rpb25cIjpcIm5vZGVcIil9cmV0dXJuIG4oXCJsaW5lXCIpfShvLmNvbnRleHRUb29sYmFycy5jb25jYXQoci5jb250ZXh0VG9vbGJhcnMpKTtyZXR1cm4gdnQuc29tZSh7ZWxlbTp0LHRvb2xiYXJzOml9KX1yZXR1cm4gdnQubm9uZSgpfShpLG4uaW5Ob2RlU2NvcGUsbi5pbkVkaXRvclNjb3BlKS5vclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIGE9biwodD1vKShlPWkpP3Z0Lm5vbmUoKTpkcihlLGZ1bmN0aW9uKHQpe2lmKEdlKHQpKXt2YXIgZT1sXyh0LGEuaW5Ob2RlU2NvcGUpLG49ZS5jb250ZXh0VG9vbGJhcnMsbz1lLmNvbnRleHRGb3JtcyxyPTA8by5sZW5ndGg/bzoodT1uKS5sZW5ndGg8PTE/dTppKFwic2VsZWN0aW9uXCIpLm9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gaShcIm5vZGVcIil9KS5vclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIGkoXCJsaW5lXCIpfSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LnBvc2l0aW9ufSkuZm9sZChmdW5jdGlvbigpe3JldHVybltdfSxmdW5jdGlvbihlKXtyZXR1cm4gRih1LGZ1bmN0aW9uKHQpe3JldHVybiB0LnBvc2l0aW9uPT09ZX0pfSk7cmV0dXJuIDA8ci5sZW5ndGg/dnQuc29tZSh7ZWxlbTp0LHRvb2xiYXJzOnJ9KTp2dC5ub25lKCl9ZnVuY3Rpb24gaShlKXtyZXR1cm4gTih1LGZ1bmN0aW9uKHQpe3JldHVybiB0LnBvc2l0aW9uPT09ZX0pfXZhciB1O3JldHVybiB2dC5ub25lKCl9LHQpO3ZhciB0LGUsYX0pOnZ0Lm5vbmUoKX1mdW5jdGlvbiBkXyhhLGMpe3ZhciBzPXt9LGw9W10sZj1bXSxkPXt9LG09e30sdD1DdChhKTtyZXR1cm4gU3QodCxmdW5jdGlvbih0KXt2YXIgZSxuLG8scixpLHU9YVt0XTtcImNvbnRleHRmb3JtXCI9PT11LnR5cGU/KG89dCxpPWNvKGFvKFwiQ29udGV4dEZvcm1cIixxcCxyPXUpKSwoc1tvXT1pKS5sYXVuY2gubWFwKGZ1bmN0aW9uKHQpe2RbXCJmb3JtOlwiK29dPWx0KGx0KHt9LHIubGF1bmNoKSx7dHlwZTpcImNvbnRleHRmb3JtdG9nZ2xlYnV0dG9uXCI9PT10LnR5cGU/XCJ0b2dnbGVidXR0b25cIjpcImJ1dHRvblwiLG9uQWN0aW9uOmZ1bmN0aW9uKCl7YyhpKX19KX0pLChcImVkaXRvclwiPT09aS5zY29wZT9mOmwpLnB1c2goaSksbVtvXT1pKTpcImNvbnRleHR0b29sYmFyXCI9PT11LnR5cGUmJihlPXQsYW8oXCJDb250ZXh0VG9vbGJhclwiLEtwLG49dSkuZWFjaChmdW5jdGlvbih0KXsoXCJlZGl0b3JcIj09PW4uc2NvcGU/ZjpsKS5wdXNoKHQpLG1bZV09dH0pKX0pLHtmb3JtczpzLGluTm9kZVNjb3BlOmwsaW5FZGl0b3JTY29wZTpmLGxvb2t1cFRhYmxlOm0sZm9ybU5hdmlnYXRvcnM6ZH19ZnVuY3Rpb24gbV8oZCx0LG0sdSl7ZnVuY3Rpb24gYSgpe3ZhciB0PXkuZ2V0KCkuZ2V0T3IoXCJub2RlXCIpLGU9Y18odCk/MTowO3JldHVybiBhXyhkLHAsdCxlKX1mdW5jdGlvbiBjKCl7cmV0dXJuIShkLnJlbW92ZWR8fGgoKSYmZy5pc0NvbnRleHRNZW51T3BlbigpKX1mdW5jdGlvbiBzKCl7aWYoYygpKXt2YXIgdD1hKCksZT1tdCh5LmdldCgpLFwibm9kZVwiKT8obj1kLHYuZ2V0KCkuZmlsdGVyKHZuKS5tYXAoSGUpLmdldE9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gdV8obil9KSk6dV8oZCk7cmV0dXJuIHQuaGVpZ2h0PD0wfHwhaV8oZSx0KX1yZXR1cm4gMTt2YXIgbn1mdW5jdGlvbiBlKCl7di5jbGVhcigpLGIuY2xlYXIoKSx5LmNsZWFyKCksdXAuaGlkZSh4KX1mdW5jdGlvbiBuKCl7dmFyIHQ7dXAuaXNPcGVuKHgpJiYodmUodD14LmVsZW1lbnQsXCJkaXNwbGF5XCIpLHMoKT9mZSh0LFwiZGlzcGxheVwiLFwibm9uZVwiKTooYi5zZXQoMCksdXAucmVwb3NpdGlvbih4KSkpfWZ1bmN0aW9uIGwodCl7cmV0dXJue2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtcG9wX19kaWFsb2dcIl19LGNvbXBvbmVudHM6W3RdLGJlaGF2aW91cnM6ZWMoW0ZnLmNvbmZpZyh7bW9kZTpcImFjeWNsaWNcIn0pLG1tKFwicG9wLWRpYWxvZy13cmFwLWV2ZW50c1wiLFtvdShmdW5jdGlvbih0KXtkLnNob3J0Y3V0cy5hZGQoXCJjdHJsK0Y5XCIsXCJmb2N1cyBzdGF0dXNiYXJcIixmdW5jdGlvbigpe3JldHVybiBGZy5mb2N1c0luKHQpfSl9KSxydShmdW5jdGlvbih0KXtkLnNob3J0Y3V0cy5yZW1vdmUoXCJjdHJsK0Y5XCIpfSldKV0pfX1mdW5jdGlvbiBmKHQsZSl7dmFyIG4sbyxyLGksYyxzLHUsYT1cIm5vZGVcIj09PXQ/cC5hbmNob3JzLm5vZGUoZSk6cC5hbmNob3JzLmN1cnNvcigpLGw9KG49ZCxvPXQscj1oKCksaT17bGFzdEVsZW1lbnQ6di5nZXQsaXNSZXBvc2l0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIG10KGIuZ2V0KCksMCl9LGdldE1vZGU6ZnVuY3Rpb24oKXtyZXR1cm4gZmYuZ2V0TW9kZShtKX19LFwibGluZVwiPT09bz97YnViYmxlOlNjKDEyLDAsTF8pLGxheW91dHM6e29uTHRyOmZ1bmN0aW9uKCl7cmV0dXJuW2xhXX0sb25SdGw6ZnVuY3Rpb24oKXtyZXR1cm5bZmFdfX0sb3ZlcnJpZGVzOnpffTp7YnViYmxlOlNjKDAsMTIsTF8sMS8xMiksbGF5b3V0czooYz1uLHM9aSx1PW8scj97b25MdHI6ZnVuY3Rpb24odCl7cmV0dXJuWyRhLFhhLFlhLHFhLEthLEphXS5jb25jYXQoZih0KSl9LG9uUnRsOmZ1bmN0aW9uKHQpe3JldHVyblskYSxZYSxYYSxLYSxxYSxKYV0uY29uY2F0KGYodCkpfX06e29uTHRyOmZ1bmN0aW9uKHQpe3JldHVybltKYSwkYSxxYSxYYSxLYSxZYV0uY29uY2F0KGYodCkpfSxvblJ0bDpmdW5jdGlvbih0KXtyZXR1cm5bSmEsJGEsS2EsWWEscWEsWGFdLmNvbmNhdChmKHQpKX19KSxvdmVycmlkZXM6el99KTtmdW5jdGlvbiBmKHQpe3JldHVybiBjXyh1KT9bKGE9dCxmdW5jdGlvbih0LGUsbixvLHIpe3ZhciBpPXNfKGMsbyxhLHMsciksdT1sdChsdCh7fSx0KSx7eTpyLnksaGVpZ2h0OnIuaGVpZ2h0fSk7cmV0dXJuIGx0KGx0KHt9LGkodSxlLG4sbyxyKSkse2Fsd2F5c0ZpdDohMH0pfSldOltdO3ZhciBhfXJldHVybiBZbyhhLGwpfWZ1bmN0aW9uIG8odCxlKXt2YXIgbixvLHIsaTtrLmNhbmNlbCgpLGMoKSYmKG49Uyh0KSxyPWYobz10WzBdLnBvc2l0aW9uLGUpLHkuc2V0KG8pLGIuc2V0KDEpLHZlKGk9eC5lbGVtZW50LFwiZGlzcGxheVwiKSxtdChFdChlLHYuZ2V0KCksenQpLCEwKXx8KHFyKGksWF8pLGZmLnJlc2V0KG0seCkpLHVwLnNob3dXaXRoaW5Cb3VuZHMoeCxsKG4pLHthbmNob3I6cix0cmFuc2l0aW9uOntjbGFzc2VzOltYX10sbW9kZTpcInBsYWNlbWVudFwifX0sZnVuY3Rpb24oKXtyZXR1cm4gdnQuc29tZShhKCkpfSksZS5mb2xkKHYuY2xlYXIsdi5zZXQpLHMoKSYmZmUoaSxcImRpc3BsYXlcIixcIm5vbmVcIikpfXZhciByLGksZz11LmJhY2tzdGFnZSxwPWcuc2hhcmVkLGg9bG4oKS5kZXZpY2VUeXBlLmlzVG91Y2gsdj1nYygpLGI9Z2MoKSx5PWdjKCkseD1UdSgocj17c2luazptLG9uRXNjYXBlOmZ1bmN0aW9uKCl7cmV0dXJuIGQuZm9jdXMoKSx2dC5zb21lKCEwKX19LGk9UG8oW10pLHVwLnNrZXRjaCh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1wb3BcIl19LGZpcmVEaXNtaXNzYWxFdmVudEluc3RlYWQ6e2V2ZW50OlwiZG9Ob3REaXNtaXNzWWV0XCJ9LG9uU2hvdzpmdW5jdGlvbih0KXtpLnNldChbXSksdXAuZ2V0Q29udGVudCh0KS5lYWNoKGZ1bmN0aW9uKHQpe3ZlKHQuZWxlbWVudCxcInZpc2liaWxpdHlcIil9KSxxcih0LmVsZW1lbnQsR18pLHZlKHQuZWxlbWVudCxcIndpZHRoXCIpfSxpbmxpbmVCZWhhdmlvdXJzOmVjKFttbShcImNvbnRleHQtdG9vbGJhci1ldmVudHNcIixbQXIoX2koKSxmdW5jdGlvbih0LGUpe1wid2lkdGhcIj09PWUuZXZlbnQucmF3LnByb3BlcnR5TmFtZSYmKHFyKHQuZWxlbWVudCxHXyksdmUodC5lbGVtZW50LFwid2lkdGhcIikpfSksQ3IoV18sZnVuY3Rpb24odCxlKXt2YXIgbj10LmVsZW1lbnQ7dmUobixcIndpZHRoXCIpO3ZhciBvPUNlKG4pO3VwLnNldENvbnRlbnQodCxlLmV2ZW50LmNvbnRlbnRzKSxZcihuLEdfKTt2YXIgcj1DZShuKTtmZShuLFwid2lkdGhcIixvK1wicHhcIiksdXAuZ2V0Q29udGVudCh0KS5lYWNoKGZ1bmN0aW9uKHQpe2UuZXZlbnQuZm9jdXMuYmluZChmdW5jdGlvbih0KXtyZXR1cm4ga2EodCksX2Eobil9KS5vclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIEZnLmZvY3VzSW4odCksT2EoZ24obikpfSl9KSxscC5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZmUodC5lbGVtZW50LFwid2lkdGhcIixyK1wicHhcIil9LDApfSksQ3IoVV8sZnVuY3Rpb24oZSx0KXt1cC5nZXRDb250ZW50KGUpLmVhY2goZnVuY3Rpb24odCl7aS5zZXQoaS5nZXQoKS5jb25jYXQoW3tiYXI6dCxmb2N1czpPYShnbihlLmVsZW1lbnQpKX1dKSl9KSxicihlLFdfLHtjb250ZW50czp0LmV2ZW50LmZvcndhcmRDb250ZW50cyxmb2N1czp2dC5ub25lKCl9KX0pLENyKGpfLGZ1bmN0aW9uKGUsdCl7cShpLmdldCgpKS5lYWNoKGZ1bmN0aW9uKHQpe2kuc2V0KGkuZ2V0KCkuc2xpY2UoMCxpLmdldCgpLmxlbmd0aC0xKSksYnIoZSxXXyx7Y29udGVudHM6RXUodC5iYXIpLGZvY3VzOnQuZm9jdXN9KX0pfSldKSxGZy5jb25maWcoe21vZGU6XCJzcGVjaWFsXCIsb25Fc2NhcGU6ZnVuY3Rpb24oZSl7cmV0dXJuIHEoaS5nZXQoKSkuZm9sZChmdW5jdGlvbigpe3JldHVybiByLm9uRXNjYXBlKCl9LGZ1bmN0aW9uKHQpe3JldHVybiB2cihlLGpfKSx2dC5zb21lKCEwKX0pfX0pXSksbGF6eVNpbms6ZnVuY3Rpb24oKXtyZXR1cm4gTm4udmFsdWUoci5zaW5rKX19KSkpLHc9UnQoZnVuY3Rpb24oKXtyZXR1cm4gZF8odCxmdW5jdGlvbih0KXt2YXIgZT1TKFt0XSk7YnIoeCxVXyx7Zm9yd2FyZENvbnRlbnRzOmwoZSl9KX0pfSksUz1mdW5jdGlvbih0KXt2YXIgZT1kLnVpLnJlZ2lzdHJ5LmdldEFsbCgpLmJ1dHRvbnMsbj13KCksbz1sdChsdCh7fSxlKSxuLmZvcm1OYXZpZ2F0b3JzKSxyPWl2KGQpPT09Ymguc2Nyb2xsaW5nP2JoLnNjcm9sbGluZzpiaC5kZWZhdWx0LGk9ZnQoQih0LGZ1bmN0aW9uKHQpe3JldHVyblwiY29udGV4dHRvb2xiYXJcIj09PXQudHlwZT9GXyhkLHtidXR0b25zOm8sdG9vbGJhcjp0Lml0ZW1zLGFsbG93VG9vbGJhckdyb3VwczohMX0sdSx2dC5zb21lKFtcImZvcm06XCJdKSk6KGU9cC5wcm92aWRlcnMsSF8odCxlKSk7dmFyIGV9KSk7cmV0dXJuIFZDKHt0eXBlOnIsdWlkOklyKFwiY29udGV4dC10b29sYmFyXCIpLGluaXRHcm91cHM6aSxvbkVzY2FwZTp2dC5ub25lLGN5Y2xpY0tleWluZzohMCxwcm92aWRlcnM6cC5wcm92aWRlcnN9KX0saz12cChmdW5jdGlvbigpe2QuaGFzRm9jdXMoKSYmIWQucmVtb3ZlZCYmKEtyKHguZWxlbWVudCxYXyk/ay50aHJvdHRsZSgpOmZfKHcoKSxkKS5mb2xkKGUsZnVuY3Rpb24odCl7byh0LnRvb2xiYXJzLHZ0LnNvbWUodC5lbGVtKSl9KSl9LDE3KTtkLm9uKFwiaW5pdFwiLGZ1bmN0aW9uKCl7ZC5vbihcInJlbW92ZVwiLGUpLGQub24oXCJTY3JvbGxDb250ZW50IFNjcm9sbFdpbmRvdyBPYmplY3RSZXNpemVkIFJlc2l6ZUVkaXRvciBsb25ncHJlc3NcIixuKSxkLm9uKFwiY2xpY2sga2V5dXAgZm9jdXMgU2V0Q29udGVudFwiLGsudGhyb3R0bGUpLGQub24oVl8sZSksZC5vbihcImNvbnRleHR0b29sYmFyLXNob3dcIixmdW5jdGlvbihlKXt0dCh3KCkubG9va3VwVGFibGUsZS50b29sYmFyS2V5KS5lYWNoKGZ1bmN0aW9uKHQpe28oW3RdLG90KGUudGFyZ2V0IT09ZCxlLnRhcmdldCkpLHVwLmdldENvbnRlbnQoeCkuZWFjaChGZy5mb2N1c0luKX0pfSksZC5vbihcImZvY3Vzb3V0XCIsZnVuY3Rpb24odCl7bHAuc2V0RWRpdG9yVGltZW91dChkLGZ1bmN0aW9uKCl7X2EobS5lbGVtZW50KS5pc05vbmUoKSYmX2EoeC5lbGVtZW50KS5pc05vbmUoKSYmZSgpfSwwKX0pLGQub24oXCJTd2l0Y2hNb2RlXCIsZnVuY3Rpb24oKXtkLm1vZGUuaXNSZWFkT25seSgpJiZlKCl9KSxkLm9uKFwiQWZ0ZXJQcm9ncmVzc1N0YXRlXCIsZnVuY3Rpb24odCl7dC5zdGF0ZT9lKCk6ZC5oYXNGb2N1cygpJiZrLnRocm90dGxlKCl9KSxkLm9uKFwiTm9kZUNoYW5nZVwiLGZ1bmN0aW9uKHQpe19hKHguZWxlbWVudCkuZm9sZChrLnRocm90dGxlLHN0KX0pfSl9KGUxPXQxPXQxfHx7fSlbZTEuU2VtaUNvbG9uPTBdPVwiU2VtaUNvbG9uXCIsZTFbZTEuU3BhY2U9MV09XCJTcGFjZVwiO3ZhciBnXyxwXyxoXyx2Xz1be3RpdGxlOlwiTGVmdFwiLGljb246XCJhbGlnbi1sZWZ0XCIsZm9ybWF0OlwiYWxpZ25sZWZ0XCIsY29tbWFuZDpcIkp1c3RpZnlMZWZ0XCJ9LHt0aXRsZTpcIkNlbnRlclwiLGljb246XCJhbGlnbi1jZW50ZXJcIixmb3JtYXQ6XCJhbGlnbmNlbnRlclwiLGNvbW1hbmQ6XCJKdXN0aWZ5Q2VudGVyXCJ9LHt0aXRsZTpcIlJpZ2h0XCIsaWNvbjpcImFsaWduLXJpZ2h0XCIsZm9ybWF0OlwiYWxpZ25yaWdodFwiLGNvbW1hbmQ6XCJKdXN0aWZ5UmlnaHRcIn0se3RpdGxlOlwiSnVzdGlmeVwiLGljb246XCJhbGlnbi1qdXN0aWZ5XCIsZm9ybWF0OlwiYWxpZ25qdXN0aWZ5XCIsY29tbWFuZDpcIkp1c3RpZnlGdWxsXCJ9XSxiXz1bXCItYXBwbGUtc3lzdGVtXCIsXCJTZWdvZSBVSVwiLFwiUm9ib3RvXCIsXCJIZWx2ZXRpY2EgTmV1ZVwiLFwic2Fucy1zZXJpZlwiXSx5Xz17XCI4cHRcIjpcIjFcIixcIjEwcHRcIjpcIjJcIixcIjEycHRcIjpcIjNcIixcIjE0cHRcIjpcIjRcIixcIjE4cHRcIjpcIjVcIixcIjI0cHRcIjpcIjZcIixcIjM2cHRcIjpcIjdcIn0seF89e1wieHgtc21hbGxcIjpcIjdwdFwiLFwieC1zbWFsbFwiOlwiOHB0XCIsc21hbGw6XCIxMHB0XCIsbWVkaXVtOlwiMTJwdFwiLGxhcmdlOlwiMTRwdFwiLFwieC1sYXJnZVwiOlwiMThwdFwiLFwieHgtbGFyZ2VcIjpcIjI0cHRcIn0sd189T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsZXZlbnRzOmZ1bmN0aW9uKHIsaSl7ZnVuY3Rpb24gdShuLG8pe3IudXBkYXRlU3RhdGUuZWFjaChmdW5jdGlvbih0KXt2YXIgZT10KG4sbyk7aS5zZXQoZSl9KSxyLnJlbmRlckNvbXBvbmVudHMuZWFjaChmdW5jdGlvbih0KXt2YXIgZT1CKHQobyxpLmdldCgpKSxuLmdldFN5c3RlbSgpLmJ1aWxkKTtScyhuLGUpfSl9cmV0dXJuIG51KFtDcihGaSgpLGZ1bmN0aW9uKHQsZSl7dmFyIG4sbz1lO28udW5pdmVyc2FsfHwobj1yLmNoYW5uZWwsd3Qoby5jaGFubmVscyxuKSYmdSh0LG8uZGF0YSkpfSksb3UoZnVuY3Rpb24oZSx0KXtyLmluaXRpYWxEYXRhLmVhY2goZnVuY3Rpb24odCl7dShlLHQpfSl9KV0pfX0pLFNfPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGdldFN0YXRlOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbn19KSxrXz14YSh7ZmllbGRzOlttbyhcImNoYW5uZWxcIiksd28oXCJyZW5kZXJDb21wb25lbnRzXCIpLHdvKFwidXBkYXRlU3RhdGVcIiksd28oXCJpbml0aWFsRGF0YVwiKV0sbmFtZTpcInJlZmxlY3RpbmdcIixhY3RpdmU6d18sYXBpczpTXyxzdGF0ZTpPYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxpbml0OmZ1bmN0aW9uKCl7dmFyIHQ9UG8odnQubm9uZSgpKTtyZXR1cm57cmVhZFN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHQuZ2V0KCkuZ2V0T3IoXCJub25lXCIpfSxnZXQ6dC5nZXQsc2V0OnQuc2V0LGNsZWFyOmZ1bmN0aW9uKCl7cmV0dXJuIHQuc2V0KHZ0Lm5vbmUoKSl9fX19KX0pLENfPXJ0KFttbyhcInRvZ2dsZUNsYXNzXCIpLG1vKFwiZmV0Y2hcIiksUXUoXCJvbkV4ZWN1dGVcIiksRW8oXCJnZXRIb3RzcG90XCIsdnQuc29tZSksRW8oXCJnZXRBbmNob3JPdmVycmlkZXNcIixydCh7fSkpLFVjKCksUXUoXCJvbkl0ZW1FeGVjdXRlXCIpLHdvKFwibGF6eVNpbmtcIiksbW8oXCJkb21cIiksSnUoXCJvbk9wZW5cIiksWnMoXCJzcGxpdERyb3Bkb3duQmVoYXZpb3Vyc1wiLFskeSxGZyxWZ10pLEVvKFwibWF0Y2hXaWR0aFwiLCExKSxFbyhcInVzZU1pbldpZHRoXCIsITEpLEVvKFwiZXZlbnRPcmRlclwiLHt9KSx3byhcInJvbGVcIildLmNvbmNhdCh1eCgpKSksT189cnQoW0pmKHtmYWN0b3J5OmZwLHNjaGVtYTpbbW8oXCJkb21cIildLG5hbWU6XCJhcnJvd1wiLGRlZmF1bHRzOmZ1bmN0aW9uKCl7cmV0dXJue2J1dHRvbkJlaGF2aW91cnM6ZWMoW1ZnLnJldm9rZSgpXSl9fSxvdmVycmlkZXM6ZnVuY3Rpb24oZSl7cmV0dXJue2RvbTp7dGFnOlwic3BhblwiLGF0dHJpYnV0ZXM6e3JvbGU6XCJwcmVzZW50YXRpb25cIn19LGFjdGlvbjpmdW5jdGlvbih0KXt0LmdldFN5c3RlbSgpLmdldEJ5VWlkKGUudWlkKS5lYWNoKHlyKX0sYnV0dG9uQmVoYXZpb3VyczplYyhbemcuY29uZmlnKHt0b2dnbGVPbkV4ZWN1dGU6ITEsdG9nZ2xlQ2xhc3M6ZS50b2dnbGVDbGFzc30pXSl9fX0pLEpmKHtmYWN0b3J5OmZwLHNjaGVtYTpbbW8oXCJkb21cIildLG5hbWU6XCJidXR0b25cIixkZWZhdWx0czpmdW5jdGlvbigpe3JldHVybntidXR0b25CZWhhdmlvdXJzOmVjKFtWZy5yZXZva2UoKV0pfX0sb3ZlcnJpZGVzOmZ1bmN0aW9uKG4pe3JldHVybntkb206e3RhZzpcInNwYW5cIixhdHRyaWJ1dGVzOntyb2xlOlwicHJlc2VudGF0aW9uXCJ9fSxhY3Rpb246ZnVuY3Rpb24oZSl7ZS5nZXRTeXN0ZW0oKS5nZXRCeVVpZChuLnVpZCkuZWFjaChmdW5jdGlvbih0KXtuLm9uRXhlY3V0ZSh0LGUpfSl9fX19KSxRZih7ZmFjdG9yeTp7c2tldGNoOmZ1bmN0aW9uKHQpe3JldHVybnt1aWQ6dC51aWQsZG9tOnt0YWc6XCJzcGFuXCIsc3R5bGVzOntkaXNwbGF5Olwibm9uZVwifSxhdHRyaWJ1dGVzOntcImFyaWEtaGlkZGVuXCI6XCJ0cnVlXCJ9LGlubmVySHRtbDp0LnRleHR9fX19LHNjaGVtYTpbbW8oXCJ0ZXh0XCIpXSxuYW1lOlwiYXJpYS1kZXNjcmlwdG9yXCJ9KSwkZih7c2NoZW1hOltZdSgpXSxuYW1lOlwibWVudVwiLGRlZmF1bHRzOmZ1bmN0aW9uKG8pe3JldHVybntvbkV4ZWN1dGU6ZnVuY3Rpb24oZSxuKXtlLmdldFN5c3RlbSgpLmdldEJ5VWlkKG8udWlkKS5lYWNoKGZ1bmN0aW9uKHQpe28ub25JdGVtRXhlY3V0ZSh0LGUsbil9KX19fX0pLFp5KCldKSxfXz1DbCh7bmFtZTpcIlNwbGl0RHJvcGRvd25cIixjb25maWdGaWVsZHM6Q18oKSxwYXJ0RmllbGRzOk9fKCksZmFjdG9yeTpmdW5jdGlvbihvLHQsZSxuKXtmdW5jdGlvbiByKHQpe2NkLmdldEN1cnJlbnQodCkuZWFjaChmdW5jdGlvbih0KXtoZC5oaWdobGlnaHRGaXJzdCh0KSxGZy5mb2N1c0luKHQpfSl9ZnVuY3Rpb24gaSh0KXtueChvLGgsdCxuLHIsVnkuSGlnaGxpZ2h0Rmlyc3QpLmdldChzdCl9ZnVuY3Rpb24gdSh0KXtyZXR1cm4geXIoZ2wodCxvLFwiYnV0dG9uXCIpKSx2dC5zb21lKCEwKX12YXIgYSxjPWx0KGx0KHt9LG51KFtvdShmdW5jdGlvbihuLHQpe21sKG4sbyxcImFyaWEtZGVzY3JpcHRvclwiKS5lYWNoKGZ1bmN0aW9uKHQpe3ZhciBlPUlyKFwiYXJpYVwiKTtvZSh0LmVsZW1lbnQsXCJpZFwiLGUpLG9lKG4uZWxlbWVudCxcImFyaWEtZGVzY3JpYmVkYnlcIixlKX0pfSldKSksU20odnQuc29tZShpKSkpLHM9e3JlcG9zaXRpb25NZW51czpmdW5jdGlvbih0KXt6Zy5pc09uKHQpJiZpeCh0KX19O3JldHVybnt1aWQ6by51aWQsZG9tOm8uZG9tLGNvbXBvbmVudHM6dCxhcGlzOnMsZXZlbnRPcmRlcjpsdChsdCh7fSxvLmV2ZW50T3JkZXIpLCgoYT17fSlbSWkoKV09W1wiZGlzYWJsaW5nXCIsXCJ0b2dnbGluZ1wiLFwiYWxsb3kuYmFzZS5iZWhhdmlvdXJcIl0sYSkpLGV2ZW50czpjLGJlaGF2aW91cnM6ZWwoby5zcGxpdERyb3Bkb3duQmVoYXZpb3VycyxbJHkuY29uZmlnKHtvdGhlcnM6e3NhbmRib3g6ZnVuY3Rpb24odCl7dmFyIGU9Z2wodCxvLFwiYXJyb3dcIik7cmV0dXJuIHJ4KG8sdCx7b25PcGVuOmZ1bmN0aW9uKCl7emcub24oZSksemcub24odCl9LG9uQ2xvc2U6ZnVuY3Rpb24oKXt6Zy5vZmYoZSksemcub2ZmKHQpfX0pfX19KSxGZy5jb25maWcoe21vZGU6XCJzcGVjaWFsXCIsb25TcGFjZTp1LG9uRW50ZXI6dSxvbkRvd246ZnVuY3Rpb24odCl7cmV0dXJuIGkodCksdnQuc29tZSghMCl9fSksVmcuY29uZmlnKHt9KSx6Zy5jb25maWcoe3RvZ2dsZU9uRXhlY3V0ZTohMSxhcmlhOnttb2RlOlwiZXhwYW5kZWRcIn19KV0pLGRvbU1vZGlmaWNhdGlvbjp7YXR0cmlidXRlczp7cm9sZTpvLnJvbGUuZ2V0T3IoXCJidXR0b25cIiksXCJhcmlhLWhhc3BvcHVwXCI6ITB9fX19LGFwaXM6e3JlcG9zaXRpb25NZW51czpmdW5jdGlvbih0LGUpe3JldHVybiB0LnJlcG9zaXRpb25NZW51cyhlKX19fSksVF89SXIoXCJmb2N1cy1idXR0b25cIiksRV89ZnVuY3Rpb24odCxlLG4pe3JldHVybiBLTyh0LHt0b29sYmFyQnV0dG9uQmVoYXZpb3VyczpbXS5jb25jYXQoMDxuLmxlbmd0aD9bbW0oXCJ0b29sYmFyQnV0dG9uV2l0aFwiLG4pXTpbXSksZ2V0QXBpOkdPLG9uU2V0dXA6dC5vblNldHVwfSxlKX0sRF89ZnVuY3Rpb24odCxlLG4pe3JldHVybiBZbyhLTyh0LHt0b29sYmFyQnV0dG9uQmVoYXZpb3VyczpbUmcuY29uZmlnKHt9KSx6Zy5jb25maWcoe3RvZ2dsZUNsYXNzOlwidG94LXRidG4tLWVuYWJsZWRcIixhcmlhOnttb2RlOlwicHJlc3NlZFwifSx0b2dnbGVPbkV4ZWN1dGU6ITF9KV0uY29uY2F0KDA8bi5sZW5ndGg/W21tKFwidG9vbGJhclRvZ2dsZUJ1dHRvbldpdGhcIixuKV06W10pLGdldEFwaTpYTyxvblNldHVwOnQub25TZXR1cH0sZSkpfSxBXz1be25hbWU6XCJoaXN0b3J5XCIsaXRlbXM6W1widW5kb1wiLFwicmVkb1wiXX0se25hbWU6XCJzdHlsZXNcIixpdGVtczpbXCJzdHlsZXNlbGVjdFwiXX0se25hbWU6XCJmb3JtYXR0aW5nXCIsaXRlbXM6W1wiYm9sZFwiLFwiaXRhbGljXCJdfSx7bmFtZTpcImFsaWdubWVudFwiLGl0ZW1zOltcImFsaWdubGVmdFwiLFwiYWxpZ25jZW50ZXJcIixcImFsaWducmlnaHRcIixcImFsaWduanVzdGlmeVwiXX0se25hbWU6XCJpbmRlbnRhdGlvblwiLGl0ZW1zOltcIm91dGRlbnRcIixcImluZGVudFwiXX0se25hbWU6XCJwZXJtYW5lbnQgcGVuXCIsaXRlbXM6W1wicGVybWFuZW50cGVuXCJdfSx7bmFtZTpcImNvbW1lbnRzXCIsaXRlbXM6W1wiYWRkY29tbWVudFwiXX1dLEJfPXtidXR0b246Sk8oT3AsZnVuY3Rpb24odCxlKXtyZXR1cm4gbj1lLmJhY2tzdGFnZS5zaGFyZWQucHJvdmlkZXJzLEVfKHQsbixbXSk7dmFyIG59KSx0b2dnbGVidXR0b246Sk8oX3AsZnVuY3Rpb24odCxlKXtyZXR1cm4gbj1lLmJhY2tzdGFnZS5zaGFyZWQucHJvdmlkZXJzLERfKHQsbixbXSk7dmFyIG59KSxtZW51YnV0dG9uOkpPKHJDLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIEcwKHQsXCJ0b3gtdGJ0blwiLGUuYmFja3N0YWdlLHZ0Lm5vbmUoKSl9KSxzcGxpdGJ1dHRvbjpKTyhmdW5jdGlvbih0KXtyZXR1cm4gYW8oXCJTcGxpdEJ1dHRvblwiLFExLHQpfSxmdW5jdGlvbih0LGUpe3JldHVybiBvPXQscj1lLmJhY2tzdGFnZS5zaGFyZWQscz1JcihcImNoYW5uZWwtdXBkYXRlLXNwbGl0LWRyb3Bkb3duLWRpc3BsYXlcIiksbD1QbyhzdCksZj17Z2V0QXBpOm4sb25TZXR1cDpvLm9uU2V0dXB9LF9fLnNrZXRjaCh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1zcGxpdC1idXR0b25cIl0sYXR0cmlidXRlczpsdCh7XCJhcmlhLXByZXNzZWRcIjohMX0sWU8oby50b29sdGlwLHIucHJvdmlkZXJzKSl9LG9uRXhlY3V0ZTpmdW5jdGlvbih0KXtvLm9uQWN0aW9uKG4odCkpfSxvbkl0ZW1FeGVjdXRlOmZ1bmN0aW9uKHQsZSxuKXt9LHNwbGl0RHJvcGRvd25CZWhhdmlvdXJzOmVjKFtZdihyLnByb3ZpZGVycy5pc0Rpc2FibGVkKSxwdigpLG1tKFwic3BsaXQtZHJvcGRvd24tZXZlbnRzXCIsW0NyKFRfLFZnLmZvY3VzKSx2dihmLGwpLGJ2KGYsbCldKSx2dy5jb25maWcoe30pXSksZXZlbnRPcmRlcjooKGk9e30pW0dpKCldPVtcImFsbG95LmJhc2UuYmVoYXZpb3VyXCIsXCJzcGxpdC1kcm9wZG93bi1ldmVudHNcIl0saSksdG9nZ2xlQ2xhc3M6XCJ0b3gtdGJ0bi0tZW5hYmxlZFwiLGxhenlTaW5rOnIuZ2V0U2luayxmZXRjaDoodT1uLGE9byxjPXIucHJvdmlkZXJzLGZ1bmN0aW9uKGUpe3JldHVybiBXeShmdW5jdGlvbih0KXtyZXR1cm4gYS5mZXRjaCh0KX0pLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdnQuZnJvbShYYihZbyhPYihJcihcIm1lbnUtdmFsdWVcIiksdCxmdW5jdGlvbih0KXthLm9uSXRlbUFjdGlvbih1KGUpLHQpfSxhLmNvbHVtbnMsYS5wcmVzZXRzLFNoLkNMT1NFX09OX0VYRUNVVEUsYS5zZWxlY3QuZ2V0T3IoVCksYykse21vdmVtZW50Ol9iKGEuY29sdW1ucyxhLnByZXNldHMpLG1lbnVCZWhhdmlvdXJzOktoKFwiYXV0b1wiIT09YS5jb2x1bW5zP1tdOltvdShmdW5jdGlvbihvLHQpe2FoKG8sNCxKcChhLnByZXNldHMpKS5lYWNoKGZ1bmN0aW9uKHQpe3ZhciBlPXQubnVtUm93cyxuPXQubnVtQ29sdW1ucztGZy5zZXRHcmlkU2l6ZShvLGUsbil9KX0pXSl9KSkpfSl9KSxwYXJ0czp7bWVudTpacCgwLG8uY29sdW1ucyxvLnByZXNldHMpfSxjb21wb25lbnRzOltfXy5wYXJ0cy5idXR0b24ocU8oby5pY29uLG8udGV4dCx2dC5ub25lKCksdnQuc29tZShzKSx2dC5zb21lKFt6Zy5jb25maWcoe3RvZ2dsZUNsYXNzOlwidG94LXRidG4tLWVuYWJsZWRcIix0b2dnbGVPbkV4ZWN1dGU6ITF9KV0pLHIucHJvdmlkZXJzKSksX18ucGFydHMuYXJyb3coe2RvbTp7dGFnOlwiYnV0dG9uXCIsY2xhc3NlczpbXCJ0b3gtdGJ0blwiLFwidG94LXNwbGl0LWJ1dHRvbl9fY2hldnJvblwiXSxpbm5lckh0bWw6am0oXCJjaGV2cm9uLWRvd25cIixyLnByb3ZpZGVycy5pY29ucyl9LGJ1dHRvbkJlaGF2aW91cnM6ZWMoW1l2KHIucHJvdmlkZXJzLmlzRGlzYWJsZWQpLHB2KCksV20oKV0pfSksX18ucGFydHNbXCJhcmlhLWRlc2NyaXB0b3JcIl0oe3RleHQ6ci5wcm92aWRlcnMudHJhbnNsYXRlKFwiVG8gb3BlbiB0aGUgcG9wdXAsIHByZXNzIFNoaWZ0K0VudGVyXCIpfSldfSk7ZnVuY3Rpb24gbihuKXtyZXR1cm57aXNEaXNhYmxlZDpmdW5jdGlvbigpe3JldHVybiBnZC5pc0Rpc2FibGVkKG4pfSxzZXREaXNhYmxlZDpmdW5jdGlvbih0KXtyZXR1cm4gZ2Quc2V0KG4sdCl9LHNldEljb25GaWxsOmZ1bmN0aW9uKHQsZSl7SXUobi5lbGVtZW50LCdzdmcgcGF0aFtpZD1cIicrdCsnXCJdLCByZWN0W2lkPVwiJyt0KydcIl0nKS5lYWNoKGZ1bmN0aW9uKHQpe29lKHQsXCJmaWxsXCIsZSl9KX0sc2V0SWNvblN0cm9rZTpmdW5jdGlvbih0LGUpe0l1KG4uZWxlbWVudCwnc3ZnIHBhdGhbaWQ9XCInK3QrJ1wiXSwgcmVjdFtpZD1cIicrdCsnXCJdJykuZWFjaChmdW5jdGlvbih0KXtvZSh0LFwic3Ryb2tlXCIsZSl9KX0sc2V0QWN0aXZlOmZ1bmN0aW9uKGUpe29lKG4uZWxlbWVudCxcImFyaWEtcHJlc3NlZFwiLGUpLEl1KG4uZWxlbWVudCxcInNwYW5cIikuZWFjaChmdW5jdGlvbih0KXtuLmdldFN5c3RlbSgpLmdldEJ5RG9tKHQpLmVhY2goZnVuY3Rpb24odCl7cmV0dXJuIHpnLnNldCh0LGUpfSl9KX0saXNBY3RpdmU6ZnVuY3Rpb24oKXtyZXR1cm4gSXUobi5lbGVtZW50LFwic3BhblwiKS5leGlzdHMoZnVuY3Rpb24odCl7cmV0dXJuIG4uZ2V0U3lzdGVtKCkuZ2V0QnlEb20odCkuZXhpc3RzKHpnLmlzT24pfSl9fX12YXIgbyxyLGksdSxhLGMscyxsLGZ9KSxncm91cHRvb2xiYXJidXR0b246Sk8oZnVuY3Rpb24odCl7cmV0dXJuIGFvKFwiR3JvdXBUb29sYmFyQnV0dG9uXCIsSzEsdCl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgbyxyLGksdSxhLGMscz1uLnVpLnJlZ2lzdHJ5LmdldEFsbCgpLmJ1dHRvbnMsbD0oKG89e30pW25zXT1lLmJhY2tzdGFnZS5zaGFyZWQuaGVhZGVyLmlzUG9zaXRpb25lZEF0VG9wKCk/T2MuVG9wVG9Cb3R0b206T2MuQm90dG9tVG9Ub3Asbyk7aWYoaXYobikhPT1iaC5mbG9hdGluZyl0aHJvdyBuZXcgRXJyb3IoXCJUb29sYmFyIGdyb3VwcyBhcmUgb25seSBzdXBwb3J0ZWQgd2hlbiB1c2luZyBmbG9hdGluZyB0b29sYmFyIG1vZGVcIik7cmV0dXJuIGk9ZS5iYWNrc3RhZ2UsdT1mdW5jdGlvbih0KXtyZXR1cm4gRl8obix7YnV0dG9uczpzLHRvb2xiYXI6dCxhbGxvd1Rvb2xiYXJHcm91cHM6ITF9LGUsdnQubm9uZSgpKX0sYT1sLGM9aS5zaGFyZWQsYk8uc2tldGNoKHtsYXp5U2luazpjLmdldFNpbmssZmV0Y2g6ZnVuY3Rpb24oKXtyZXR1cm4gV3koZnVuY3Rpb24odCl7dChCKHUoci5pdGVtcyksUkMpKX0pfSxtYXJrZXJzOnt0b2dnbGVkQ2xhc3M6XCJ0b3gtdGJ0bi0tZW5hYmxlZFwifSxwYXJ0czp7YnV0dG9uOnFPKChyPXQpLmljb24sci50ZXh0LHIudG9vbHRpcCx2dC5ub25lKCksdnQubm9uZSgpLGMucHJvdmlkZXJzKSx0b29sYmFyOntkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LXRvb2xiYXJfX292ZXJmbG93XCJdLGF0dHJpYnV0ZXM6YX19fX0pfSksc3R5bGVTZWxlY3RCdXR0b246ZnVuY3Rpb24odCxlKXtyZXR1cm4gS0ModCxuPWUuYmFja3N0YWdlLFdPKHQsbHQoe3R5cGU6XCJhZHZhbmNlZFwifSxuLnN0eWxlc2VsZWN0KSkpO3ZhciBufSxmb250c2l6ZVNlbGVjdEJ1dHRvbjpmdW5jdGlvbih0LGUpe3JldHVybiBLQyh0LGUuYmFja3N0YWdlLHpPKHQpKX0sZm9udFNlbGVjdEJ1dHRvbjpmdW5jdGlvbih0LGUpe3JldHVybiBLQyh0LGUuYmFja3N0YWdlLExPKHQpKX0sZm9ybWF0QnV0dG9uOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIEtDKHQsZS5iYWNrc3RhZ2Usak8odCkpfSxhbGlnbk1lbnVCdXR0b246ZnVuY3Rpb24odCxlKXtyZXR1cm4gS0ModCxlLmJhY2tzdGFnZSxWTyh0KSl9fSxNXz17c3R5bGVzZWxlY3Q6Ql8uc3R5bGVTZWxlY3RCdXR0b24sZm9udHNpemVzZWxlY3Q6Ql8uZm9udHNpemVTZWxlY3RCdXR0b24sZm9udHNlbGVjdDpCXy5mb250U2VsZWN0QnV0dG9uLGZvcm1hdHNlbGVjdDpCXy5mb3JtYXRCdXR0b24sYWxpZ246Ql8uYWxpZ25NZW51QnV0dG9ufSxGXz1mdW5jdGlvbihvLGMscyxsKXt2YXIgbix0LGUscixpPShlPWMudG9vbGJhcixyPWMuYnV0dG9ucywhMT09PWU/W106dm9pZCAwPT09ZXx8ITA9PT1lPyhuPXIsdD1CKEFfLGZ1bmN0aW9uKHQpe3ZhciBlPUYodC5pdGVtcyxmdW5jdGlvbih0KXtyZXR1cm4gVHQobix0KXx8VHQoTV8sdCl9KTtyZXR1cm57bmFtZTp0Lm5hbWUsaXRlbXM6ZX19KSxGKHQsZnVuY3Rpb24odCl7cmV0dXJuIDA8dC5pdGVtcy5sZW5ndGh9KSk6eShlKT9CKGUuc3BsaXQoXCJ8XCIpLGZ1bmN0aW9uKHQpe3JldHVybntpdGVtczp0LnRyaW0oKS5zcGxpdChcIiBcIil9fSk6ZihlLGZ1bmN0aW9uKHQpe3JldHVybiBUdCh0LFwibmFtZVwiKSYmVHQodCxcIml0ZW1zXCIpfSk/ZTooY29uc29sZS5lcnJvcihcIlRvb2xiYXIgdHlwZSBzaG91bGQgYmUgc3RyaW5nLCBzdHJpbmdbXSwgYm9vbGVhbiBvciBUb29sYmFyR3JvdXBbXVwiKSxbXSkpO3JldHVybiBGKEIoaSxmdW5jdGlvbih0KXt2YXIgZT1IKHQuaXRlbXMsZnVuY3Rpb24odCl7cmV0dXJuIDA9PT10LnRyaW0oKS5sZW5ndGg/W106KHI9byxlPWMuYnV0dG9ucyxpPXQsdT1jLmFsbG93VG9vbGJhckdyb3VwcyxhPXMsbj1sLHR0KGUsaS50b0xvd2VyQ2FzZSgpKS5vclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIG4uYmluZChmdW5jdGlvbih0KXtyZXR1cm4gSyh0LGZ1bmN0aW9uKHQpe3JldHVybiB0dChlLHQraS50b0xvd2VyQ2FzZSgpKX0pfSl9KS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIHR0KE1fLGkudG9Mb3dlckNhc2UoKSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0KHIsYSl9KS5vclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIHZ0Lm5vbmUoKX0pfSxmdW5jdGlvbih0KXtyZXR1cm5cImdyb3VwdG9vbGJhcmJ1dHRvblwiIT09dC50eXBlfHx1PyhuPWEsbz1yLHR0KEJfLChlPXQpLnR5cGUpLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gY29uc29sZS5lcnJvcihcInNraXBwaW5nIGJ1dHRvbiBkZWZpbmVkIGJ5XCIsZSksdnQubm9uZSgpfSxmdW5jdGlvbih0KXtyZXR1cm4gdnQuc29tZSh0KGUsbixvKSl9KSk6KGNvbnNvbGUud2FybihcIklnbm9yaW5nIHRoZSAnXCIraStcIicgdG9vbGJhciBidXR0b24uIEdyb3VwIHRvb2xiYXIgYnV0dG9ucyBhcmUgb25seSBzdXBwb3J0ZWQgd2hlbiB1c2luZyBmbG9hdGluZyB0b29sYmFyIG1vZGUgYW5kIGNhbm5vdCBiZSBuZXN0ZWQuXCIpLHZ0Lm5vbmUoKSk7dmFyIGUsbixvfSkudG9BcnJheSgpKTt2YXIgcixlLGksdSxhLG59KTtyZXR1cm57dGl0bGU6dnQuZnJvbShvLnRyYW5zbGF0ZSh0Lm5hbWUpKSxpdGVtczplfX0pLGZ1bmN0aW9uKHQpe3JldHVybiAwPHQuaXRlbXMubGVuZ3RofSl9LElfPWxuKCksUl89SV8ub3MuaXNpT1MoKSYmSV8ub3MudmVyc2lvbi5tYWpvcjw9MTIsTl89T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwscmVuZGVyOmZ1bmN0aW9uKG4sZSx0LG8scil7dmFyIGk9UG8oMCksdT1lLm91dGVyQ29udGFpbmVyO1JPKG4pO3ZhciBhPU10LmZyb21Eb20oci50YXJnZXROb2RlKSxjPXRlKGduKGEpKSxzPWUubW90aGVyc2hpcDtwZihhLHMsRGUpLExzKGMsZS51aU1vdGhlcnNoaXApLG4ub24oXCJQb3N0UmVuZGVyXCIsZnVuY3Rpb24oKXskTyhuLGUsdCxvKSxpLnNldChuLmdldFdpbigpLmlubmVyV2lkdGgpLEZPLnNldE1lbnViYXIodSxMQyhuLHQpKSxGTy5zZXRTaWRlYmFyKHUsdC5zaWRlYmFyKSxmdW5jdGlvbihuLHQpe2Z1bmN0aW9uIGUoKXt2YXIgdD1jLmdldCgpO3QubGVmdD09PXUuaW5uZXJXaWR0aCYmdC50b3A9PT11LmlubmVySGVpZ2h0fHwoYy5zZXQoa24odS5pbm5lcldpZHRoLHUuaW5uZXJIZWlnaHQpKSxVdihuKSl9ZnVuY3Rpb24gbygpe3ZhciB0PW4uZ2V0RG9jKCkuZG9jdW1lbnRFbGVtZW50LGU9cy5nZXQoKTtlLmxlZnQ9PT10Lm9mZnNldFdpZHRoJiZlLnRvcD09PXQub2Zmc2V0SGVpZ2h0fHwocy5zZXQoa24odC5vZmZzZXRXaWR0aCx0Lm9mZnNldEhlaWdodCkpLFV2KG4pKX1mdW5jdGlvbiByKHQpe3JldHVybiBuLmZpcmUoXCJTY3JvbGxDb250ZW50XCIsdCl9dmFyIGk9bi5kb20sdT1uLmdldFdpbigpLGE9bi5nZXREb2MoKS5kb2N1bWVudEVsZW1lbnQsYz1Qbyhrbih1LmlubmVyV2lkdGgsdS5pbm5lckhlaWdodCkpLHM9UG8oa24oYS5vZmZzZXRXaWR0aCxhLm9mZnNldEhlaWdodCkpO2kuYmluZCh1LFwicmVzaXplXCIsZSksaS5iaW5kKHUsXCJzY3JvbGxcIixyKTt2YXIgbD1oYyhNdC5mcm9tRG9tKG4uZ2V0Qm9keSgpKSxcImxvYWRcIixvKSxmPXQudWlNb3RoZXJzaGlwLmVsZW1lbnQ7bi5vbihcImhpZGVcIixmdW5jdGlvbigpe2ZlKGYsXCJkaXNwbGF5XCIsXCJub25lXCIpfSksbi5vbihcInNob3dcIixmdW5jdGlvbigpe3ZlKGYsXCJkaXNwbGF5XCIpfSksbi5vbihcIk5vZGVDaGFuZ2VcIixvKSxuLm9uKFwicmVtb3ZlXCIsZnVuY3Rpb24oKXtsLnVuYmluZCgpLGkudW5iaW5kKHUsXCJyZXNpemVcIixlKSxpLnVuYmluZCh1LFwic2Nyb2xsXCIsciksdT1udWxsfSl9KG4sZSl9KTt2YXIgbCxmLGQsbSxnPUZPLmdldFNvY2tldCh1KS5nZXRPckRpZShcIkNvdWxkIG5vdCBmaW5kIGV4cGVjdGVkIHNvY2tldCBlbGVtZW50XCIpO1JfJiYoZGUoZy5lbGVtZW50LHtvdmVyZmxvdzpcInNjcm9sbFwiLFwiLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmdcIjpcInRvdWNoXCJ9KSxmPWZ1bmN0aW9uKCl7bi5maXJlKFwiU2Nyb2xsQ29udGVudFwiKX0sZD1udWxsLG09ZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlXT1hcmd1bWVudHNbZV07YihkKSYmKGQ9c2V0VGltZW91dChmdW5jdGlvbigpe2Q9bnVsbCxmLmFwcGx5KG51bGwsdCl9LDIwKSl9LGw9cGMoZy5lbGVtZW50LFwic2Nyb2xsXCIsbSksbi5vbihcInJlbW92ZVwiLGwudW5iaW5kKSksZ3YobixlKSxuLmFkZENvbW1hbmQoXCJUb2dnbGVTaWRlYmFyXCIsZnVuY3Rpb24odCxlKXtGTy50b2dnbGVTaWRlYmFyKHUsZSksbi5maXJlKFwiVG9nZ2xlU2lkZWJhclwiKX0pLG4uYWRkUXVlcnlWYWx1ZUhhbmRsZXIoXCJUb2dnbGVTaWRlYmFyXCIsZnVuY3Rpb24oKXtyZXR1cm4gRk8ud2hpY2hTaWRlYmFyKHUpfSk7dmFyIHA9aXYobik7cCE9PWJoLnNsaWRpbmcmJnAhPT1iaC5mbG9hdGluZ3x8bi5vbihcIlJlc2l6ZVdpbmRvdyBSZXNpemVFZGl0b3IgUmVzaXplQ29udGVudFwiLGZ1bmN0aW9uKCl7dmFyIHQ9bi5nZXRXaW4oKS5pbm5lcldpZHRoO3QhPT1pLmdldCgpJiYoRk8ucmVmcmVzaFRvb2xiYXIoZS5vdXRlckNvbnRhaW5lciksaS5zZXQodCkpfSk7dmFyIGg9e2VuYWJsZTpmdW5jdGlvbigpe212KGUsITEpfSxkaXNhYmxlOmZ1bmN0aW9uKCl7bXYoZSwhMCl9LGlzRGlzYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gZ2QuaXNEaXNhYmxlZCh1KX19O3JldHVybntpZnJhbWVDb250YWluZXI6Zy5lbGVtZW50LmRvbSxlZGl0b3JDb250YWluZXI6dS5lbGVtZW50LmRvbSxhcGk6aH19fSksUF89T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwscmVuZGVyOmZ1bmN0aW9uKGUsbixvLHIsdCl7dmFyIGk9bi5tb3RoZXJzaGlwLHU9bi51aU1vdGhlcnNoaXAsYT1uLm91dGVyQ29udGFpbmVyLGM9UG8obnVsbCkscz1NdC5mcm9tRG9tKHQudGFyZ2V0Tm9kZSksbD1uXyhlLHMsbixyLGMpLGY9ZS5nZXRQYXJhbShcInRvb2xiYXJfcGVyc2lzdFwiLCExLFwiYm9vbGVhblwiKTtmdW5jdGlvbiBkKCl7dmFyIHQ7Yy5nZXQoKT9sLnNob3coKTooYy5zZXQoRk8uZ2V0SGVhZGVyKGEpLmdldE9yRGllKCkpLExzKHQ9bHYoZSksaSksTHModCx1KSwkTyhlLG4sbyxyKSxGTy5zZXRNZW51YmFyKGEsTEMoZSxvKSksbC5zaG93KCksZnVuY3Rpb24oYyxzLGwsdCl7ZnVuY3Rpb24gZSh0KXt2YXIgZT1vXyhzLGwuaXNQb3NpdGlvbmVkQXRUb3AoKSksbj1lLnBvcyxvPWUuYm91bmRzLHI9Zi5nZXQoKSxpPXIucG9zLHU9ci5ib3VuZHMsYT1vLmhlaWdodCE9PXUuaGVpZ2h0fHxvLndpZHRoIT09dS53aWR0aDtmLnNldCh7cG9zOm4sYm91bmRzOm99KSxhJiZVdihjLHQpLGwuaXNWaXNpYmxlKCkmJihpIT09bj9sLnVwZGF0ZSghMCk6YSYmKGwudXBkYXRlTW9kZSgpLGwucmVwb3NpdGlvblBvcHVwcygpKSl9dmFyIGY9UG8ob18ocyxsLmlzUG9zaXRpb25lZEF0VG9wKCkpKTt0fHwoYy5vbihcImFjdGl2YXRlXCIsbC5zaG93KSxjLm9uKFwiZGVhY3RpdmF0ZVwiLGwuaGlkZSkpLGMub24oXCJTa2luTG9hZGVkIFJlc2l6ZVdpbmRvd1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGwudXBkYXRlKCEwKX0pLGMub24oXCJOb2RlQ2hhbmdlIGtleWRvd25cIixmdW5jdGlvbih0KXtscC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24oKXtyZXR1cm4gZSh0KX0pfSksYy5vbihcIlNjcm9sbFdpbmRvd1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGwudXBkYXRlTW9kZSgpfSk7dmFyIG49bWMoKTtuLnNldChoYyhNdC5mcm9tRG9tKGMuZ2V0Qm9keSgpKSxcImxvYWRcIixlKSksYy5vbihcInJlbW92ZVwiLGZ1bmN0aW9uKCl7bi5jbGVhcigpfSl9KGUscyxsLGYpLGUubm9kZUNoYW5nZWQoKSl9Tk8oZSksZS5vbihcInNob3dcIixkKSxlLm9uKFwiaGlkZVwiLGwuaGlkZSksZnx8KGUub24oXCJmb2N1c1wiLGQpLGUub24oXCJibHVyXCIsbC5oaWRlKSksZS5vbihcImluaXRcIixmdW5jdGlvbigpeyhlLmhhc0ZvY3VzKCl8fGYpJiZkKCl9KSxndihlLG4pO3ZhciBtPXtzaG93OmZ1bmN0aW9uKCl7bC5zaG93KCl9LGhpZGU6ZnVuY3Rpb24oKXtsLmhpZGUoKX0sZW5hYmxlOmZ1bmN0aW9uKCl7bXYobiwhMSl9LGRpc2FibGU6ZnVuY3Rpb24oKXttdihuLCEwKX0saXNEaXNhYmxlZDpmdW5jdGlvbigpe3JldHVybiBnZC5pc0Rpc2FibGVkKGEpfX07cmV0dXJue2VkaXRvckNvbnRhaW5lcjphLmVsZW1lbnQuZG9tLGFwaTptfX19KSxWXz1cImNvbnRleHR0b29sYmFyLWhpZGVcIixIXz1mdW5jdGlvbih0LGUpe3ZhciBuLG8scixpLHU9dC5sYWJlbC5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJue319LGZ1bmN0aW9uKHQpe3JldHVybntcImFyaWEtbGFiZWxcIjp0fX0pLGE9SG0oRHkuc2tldGNoKHtpbnB1dENsYXNzZXM6W1widG94LXRvb2xiYXItdGV4dGZpZWxkXCIsXCJ0b3gtdG9vbGJhci1uYXYtanNcIl0sZGF0YTp0LmluaXRWYWx1ZSgpLGlucHV0QXR0cmlidXRlczp1LHNlbGVjdE9uRm9jdXM6ITAsaW5wdXRCZWhhdmlvdXJzOmVjKFtGZy5jb25maWcoe21vZGU6XCJzcGVjaWFsXCIsb25FbnRlcjpmdW5jdGlvbih0KXtyZXR1cm4gYy5maW5kUHJpbWFyeSh0KS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHlyKHQpLCEwfSl9LG9uTGVmdDpmdW5jdGlvbih0LGUpe3JldHVybiBlLmN1dCgpLHZ0Lm5vbmUoKX0sb25SaWdodDpmdW5jdGlvbih0LGUpe3JldHVybiBlLmN1dCgpLHZ0Lm5vbmUoKX19KV0pfSkpLGM9KG49YSxvPXQuY29tbWFuZHMscj1lLGk9QihvLGZ1bmN0aW9uKHQpe3JldHVybiBIbSgoXCJjb250ZXh0Zm9ybXRvZ2dsZWJ1dHRvblwiPT09dC50eXBlP2Z1bmN0aW9uKHQsZSxuKXt2YXIgbz1lLm9yaWdpbmFsO28ucHJpbWFyeTt2YXIgcj1BKG8sW1wicHJpbWFyeVwiXSksaT1jbyhfcChsdChsdCh7fSxyKSx7dHlwZTpcInRvZ2dsZWJ1dHRvblwiLG9uQWN0aW9uOnN0fSkpKTtyZXR1cm4gRF8oaSxuLmJhY2tzdGFnZS5zaGFyZWQucHJvdmlkZXJzLFtyXyh0LGUpXSl9OmZ1bmN0aW9uKHQsZSxuKXt2YXIgbz1lLm9yaWdpbmFsO28ucHJpbWFyeTt2YXIgcj1BKG8sW1wicHJpbWFyeVwiXSksaT1jbyhPcChsdChsdCh7fSxyKSx7dHlwZTpcImJ1dHRvblwiLG9uQWN0aW9uOnN0fSkpKTtyZXR1cm4gRV8oaSxuLmJhY2tzdGFnZS5zaGFyZWQucHJvdmlkZXJzLFtyXyh0LGUpXSl9KShuLHQse2JhY2tzdGFnZTp7c2hhcmVkOntwcm92aWRlcnM6cn19fSkpfSkse2FzU3BlY3M6ZnVuY3Rpb24oKXtyZXR1cm4gQihpLGZ1bmN0aW9uKHQpe3JldHVybiB0LmFzU3BlYygpfSl9LGZpbmRQcmltYXJ5OmZ1bmN0aW9uKG4pe3JldHVybiBLKG8sZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5wcmltYXJ5P3Z0LmZyb20oaVtlXSkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gdC5nZXRPcHQobil9KS5maWx0ZXIoTyhnZC5pc0Rpc2FibGVkKSk6dnQubm9uZSgpfSl9fSk7cmV0dXJuW3t0aXRsZTp2dC5ub25lKCksaXRlbXM6W2EuYXNTcGVjKCldfSx7dGl0bGU6dnQubm9uZSgpLGl0ZW1zOmMuYXNTcGVjcygpfV19LExfPXt2YWxpZ25DZW50cmU6W10sYWxpZ25DZW50cmU6W10sYWxpZ25MZWZ0OltcInRveC1wb3AtLWFsaWduLWxlZnRcIl0sYWxpZ25SaWdodDpbXCJ0b3gtcG9wLS1hbGlnbi1yaWdodFwiXSxyaWdodDpbXCJ0b3gtcG9wLS1yaWdodFwiXSxsZWZ0OltcInRveC1wb3AtLWxlZnRcIl0sYm90dG9tOltcInRveC1wb3AtLWJvdHRvbVwiXSx0b3A6W1widG94LXBvcC0tdG9wXCJdLGluc2V0OltcInRveC1wb3AtLWluc2V0XCJdfSx6Xz17bWF4SGVpZ2h0RnVuY3Rpb246TmMoKSxtYXhXaWR0aEZ1bmN0aW9uOnBPKCl9LFVfPUlyKFwiZm9yd2FyZC1zbGlkZVwiKSxqXz1JcihcImJhY2t3YXJkLXNsaWRlXCIpLFdfPUlyKFwiY2hhbmdlLXNsaWRlLWV2ZW50XCIpLEdfPVwidG94LXBvcC0tcmVzaXppbmdcIixYXz1cInRveC1wb3AtLXRyYW5zaXRpb25cIixZXz17dW5zdXBwb3J0ZWRMZW5ndGg6W1wiZW1cIixcImV4XCIsXCJjYXBcIixcImNoXCIsXCJpY1wiLFwicmVtXCIsXCJsaFwiLFwicmxoXCIsXCJ2d1wiLFwidmhcIixcInZpXCIsXCJ2YlwiLFwidm1pblwiLFwidm1heFwiLFwiY21cIixcIm1tXCIsXCJRXCIsXCJpblwiLFwicGNcIixcInB0XCIsXCJweFwiXSxmaXhlZDpbXCJweFwiLFwicHRcIl0scmVsYXRpdmU6W1wiJVwiXSxlbXB0eTpbXCJcIl19LHFfPShoXz1bXCJJbmZpbml0eVwiLChnXz1cIlswLTldK1wiKStcIlxcXFwuXCIrS18oZ18pK0tfKHBfPVwiW2VFXVsrLV0/WzAtOV0rXCIpLFwiXFxcXC5cIitnXytLXyhwXyksZ18rS18ocF8pXS5qb2luKFwifFwiKSxuZXcgUmVnRXhwKFwiXihbKy1dPyg/OlwiK2hfK1wiKSkoLiopJFwiKSk7ZnVuY3Rpb24gS18odCl7cmV0dXJuXCIoPzpcIit0K1wiKT9cIn1mdW5jdGlvbiBKXyh1LGEpe2Z1bmN0aW9uIGUoKXt2YXIgdD1hLmdldE9wdGlvbnModSkscj1hLmdldEN1cnJlbnQodSkubWFwKGEuaGFzaCksaT1nYygpO3JldHVybiBCKHQsZnVuY3Rpb24obyl7cmV0dXJue3R5cGU6XCJ0b2dnbGVtZW51aXRlbVwiLHRleHQ6YS5kaXNwbGF5KG8pLG9uU2V0dXA6ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCh0KXt0JiYoaS5vbihmdW5jdGlvbih0KXtyZXR1cm4gdC5zZXRBY3RpdmUoITEpfSksaS5zZXQoZSkpLGUuc2V0QWN0aXZlKHQpfXQobXQocixhLmhhc2gobykpKTt2YXIgbj1hLndhdGNoZXIodSxvLHQpO3JldHVybiBmdW5jdGlvbigpe2kuY2xlYXIoKSxuKCl9fSxvbkFjdGlvbjpmdW5jdGlvbigpe3JldHVybiBhLnNldEN1cnJlbnQodSxvKX19fSl9dS51aS5yZWdpc3RyeS5hZGRNZW51QnV0dG9uKGEubmFtZSx7dG9vbHRpcDphLnRleHQsaWNvbjphLmljb24sZmV0Y2g6ZnVuY3Rpb24odCl7cmV0dXJuIHQoZSgpKX0sb25TZXR1cDphLm9uVG9vbGJhclNldHVwfSksdS51aS5yZWdpc3RyeS5hZGROZXN0ZWRNZW51SXRlbShhLm5hbWUse3R5cGU6XCJuZXN0ZWRtZW51aXRlbVwiLHRleHQ6YS50ZXh0LGdldFN1Ym1lbnVJdGVtczplLG9uU2V0dXA6YS5vbk1lbnVTZXR1cH0pfWZ1bmN0aW9uICRfKHQsZSl7cmV0dXJuIGZ1bmN0aW9uKCl7dC5leGVjQ29tbWFuZChcIm1jZVRvZ2dsZUZvcm1hdFwiLCExLGUpfX1mdW5jdGlvbiBRXyh0KXt2YXIgZSxuOyFmdW5jdGlvbihuKXtmUy5lYWNoKFt7bmFtZTpcImJvbGRcIix0ZXh0OlwiQm9sZFwiLGljb246XCJib2xkXCJ9LHtuYW1lOlwiaXRhbGljXCIsdGV4dDpcIkl0YWxpY1wiLGljb246XCJpdGFsaWNcIn0se25hbWU6XCJ1bmRlcmxpbmVcIix0ZXh0OlwiVW5kZXJsaW5lXCIsaWNvbjpcInVuZGVybGluZVwifSx7bmFtZTpcInN0cmlrZXRocm91Z2hcIix0ZXh0OlwiU3RyaWtldGhyb3VnaFwiLGljb246XCJzdHJpa2UtdGhyb3VnaFwifSx7bmFtZTpcInN1YnNjcmlwdFwiLHRleHQ6XCJTdWJzY3JpcHRcIixpY29uOlwic3Vic2NyaXB0XCJ9LHtuYW1lOlwic3VwZXJzY3JpcHRcIix0ZXh0OlwiU3VwZXJzY3JpcHRcIixpY29uOlwic3VwZXJzY3JpcHRcIn1dLGZ1bmN0aW9uKHQsZSl7bi51aS5yZWdpc3RyeS5hZGRUb2dnbGVCdXR0b24odC5uYW1lLHt0b29sdGlwOnQudGV4dCxpY29uOnQuaWNvbixvblNldHVwOldDKG4sdC5uYW1lKSxvbkFjdGlvbjokXyhuLHQubmFtZSl9KX0pO2Zvcih2YXIgdD0xO3Q8PTY7dCsrKXt2YXIgZT1cImhcIit0O24udWkucmVnaXN0cnkuYWRkVG9nZ2xlQnV0dG9uKGUse3RleHQ6ZS50b1VwcGVyQ2FzZSgpLHRvb2x0aXA6XCJIZWFkaW5nIFwiK3Qsb25TZXR1cDpXQyhuLGUpLG9uQWN0aW9uOiRfKG4sZSl9KX19KHQpLGU9dCxmUy5lYWNoKFt7bmFtZTpcImN1dFwiLHRleHQ6XCJDdXRcIixhY3Rpb246XCJDdXRcIixpY29uOlwiY3V0XCJ9LHtuYW1lOlwiY29weVwiLHRleHQ6XCJDb3B5XCIsYWN0aW9uOlwiQ29weVwiLGljb246XCJjb3B5XCJ9LHtuYW1lOlwicGFzdGVcIix0ZXh0OlwiUGFzdGVcIixhY3Rpb246XCJQYXN0ZVwiLGljb246XCJwYXN0ZVwifSx7bmFtZTpcImhlbHBcIix0ZXh0OlwiSGVscFwiLGFjdGlvbjpcIm1jZUhlbHBcIixpY29uOlwiaGVscFwifSx7bmFtZTpcInNlbGVjdGFsbFwiLHRleHQ6XCJTZWxlY3QgYWxsXCIsYWN0aW9uOlwiU2VsZWN0QWxsXCIsaWNvbjpcInNlbGVjdC1hbGxcIn0se25hbWU6XCJuZXdkb2N1bWVudFwiLHRleHQ6XCJOZXcgZG9jdW1lbnRcIixhY3Rpb246XCJtY2VOZXdEb2N1bWVudFwiLGljb246XCJuZXctZG9jdW1lbnRcIn0se25hbWU6XCJyZW1vdmVmb3JtYXRcIix0ZXh0OlwiQ2xlYXIgZm9ybWF0dGluZ1wiLGFjdGlvbjpcIlJlbW92ZUZvcm1hdFwiLGljb246XCJyZW1vdmUtZm9ybWF0dGluZ1wifSx7bmFtZTpcInJlbW92ZVwiLHRleHQ6XCJSZW1vdmVcIixhY3Rpb246XCJEZWxldGVcIixpY29uOlwicmVtb3ZlXCJ9XSxmdW5jdGlvbih0KXtlLnVpLnJlZ2lzdHJ5LmFkZEJ1dHRvbih0Lm5hbWUse3Rvb2x0aXA6dC50ZXh0LGljb246dC5pY29uLG9uQWN0aW9uOllDKGUsdC5hY3Rpb24pfSl9KSxuPXQsZlMuZWFjaChbe25hbWU6XCJibG9ja3F1b3RlXCIsdGV4dDpcIkJsb2NrcXVvdGVcIixhY3Rpb246XCJtY2VCbG9ja1F1b3RlXCIsaWNvbjpcInF1b3RlXCJ9XSxmdW5jdGlvbih0KXtuLnVpLnJlZ2lzdHJ5LmFkZFRvZ2dsZUJ1dHRvbih0Lm5hbWUse3Rvb2x0aXA6dC50ZXh0LGljb246dC5pY29uLG9uQWN0aW9uOllDKG4sdC5hY3Rpb24pLG9uU2V0dXA6V0Mobix0Lm5hbWUpfSl9KX1mdW5jdGlvbiBaXyhlLG4pe3JldHVybiBHQyhlLFwiVW5kbyBSZWRvIEFkZFVuZG8gVHlwaW5nVW5kbyBDbGVhclVuZG9zIFN3aXRjaE1vZGVcIixmdW5jdGlvbih0KXt0LnNldERpc2FibGVkKGUubW9kZS5pc1JlYWRPbmx5KCl8fCFlLnVuZG9NYW5hZ2VyW25dKCkpfSl9ZnVuY3Rpb24gdFQodCl7dmFyIGU7dC51aS5yZWdpc3RyeS5hZGRCdXR0b24oXCJ2aXN1YWxhaWRcIix7dG9vbHRpcDpcIlZpc3VhbCBhaWRzXCIsdGV4dDpcIlZpc3VhbCBhaWRzXCIsb25BY3Rpb246WUModCxcIm1jZVRvZ2dsZVZpc3VhbEFpZFwiKX0pLHQudWkucmVnaXN0cnkuYWRkVG9nZ2xlTWVudUl0ZW0oXCJ2aXN1YWxhaWRcIix7dGV4dDpcIlZpc3VhbCBhaWRzXCIsb25TZXR1cDpHQyhlPXQsXCJWaXN1YWxBaWRcIixmdW5jdGlvbih0KXt0LnNldEFjdGl2ZShlLmhhc1Zpc3VhbCl9KSxvbkFjdGlvbjpZQyh0LFwibWNlVG9nZ2xlVmlzdWFsQWlkXCIpfSl9ZnVuY3Rpb24gZVQodCxlKXt2YXIgbixvLHIsaSx1LGEsYyxzLGwsZixkLG0sZyxwLGgsdixiLHkseCx3LFMsayxDLE8sXyxUPXQ7U3QoW3tuYW1lOlwiYWxpZ25sZWZ0XCIsdGV4dDpcIkFsaWduIGxlZnRcIixjbWQ6XCJKdXN0aWZ5TGVmdFwiLGljb246XCJhbGlnbi1sZWZ0XCJ9LHtuYW1lOlwiYWxpZ25jZW50ZXJcIix0ZXh0OlwiQWxpZ24gY2VudGVyXCIsY21kOlwiSnVzdGlmeUNlbnRlclwiLGljb246XCJhbGlnbi1jZW50ZXJcIn0se25hbWU6XCJhbGlnbnJpZ2h0XCIsdGV4dDpcIkFsaWduIHJpZ2h0XCIsY21kOlwiSnVzdGlmeVJpZ2h0XCIsaWNvbjpcImFsaWduLXJpZ2h0XCJ9LHtuYW1lOlwiYWxpZ25qdXN0aWZ5XCIsdGV4dDpcIkp1c3RpZnlcIixjbWQ6XCJKdXN0aWZ5RnVsbFwiLGljb246XCJhbGlnbi1qdXN0aWZ5XCJ9XSxmdW5jdGlvbih0KXtULnVpLnJlZ2lzdHJ5LmFkZFRvZ2dsZUJ1dHRvbih0Lm5hbWUse3Rvb2x0aXA6dC50ZXh0LGljb246dC5pY29uLG9uQWN0aW9uOllDKFQsdC5jbWQpLG9uU2V0dXA6V0MoVCx0Lm5hbWUpfSl9KSxULnVpLnJlZ2lzdHJ5LmFkZEJ1dHRvbihcImFsaWdubm9uZVwiLHt0b29sdGlwOlwiTm8gYWxpZ25tZW50XCIsaWNvbjpcImFsaWduLW5vbmVcIixvbkFjdGlvbjpZQyhULFwiSnVzdGlmeU5vbmVcIil9KSxRXyhPPXQpLF89TyxmUy5lYWNoKFt7bmFtZTpcImJvbGRcIix0ZXh0OlwiQm9sZFwiLGFjdGlvbjpcIkJvbGRcIixpY29uOlwiYm9sZFwiLHNob3J0Y3V0OlwiTWV0YStCXCJ9LHtuYW1lOlwiaXRhbGljXCIsdGV4dDpcIkl0YWxpY1wiLGFjdGlvbjpcIkl0YWxpY1wiLGljb246XCJpdGFsaWNcIixzaG9ydGN1dDpcIk1ldGErSVwifSx7bmFtZTpcInVuZGVybGluZVwiLHRleHQ6XCJVbmRlcmxpbmVcIixhY3Rpb246XCJVbmRlcmxpbmVcIixpY29uOlwidW5kZXJsaW5lXCIsc2hvcnRjdXQ6XCJNZXRhK1VcIn0se25hbWU6XCJzdHJpa2V0aHJvdWdoXCIsdGV4dDpcIlN0cmlrZXRocm91Z2hcIixhY3Rpb246XCJTdHJpa2V0aHJvdWdoXCIsaWNvbjpcInN0cmlrZS10aHJvdWdoXCIsc2hvcnRjdXQ6XCJcIn0se25hbWU6XCJzdWJzY3JpcHRcIix0ZXh0OlwiU3Vic2NyaXB0XCIsYWN0aW9uOlwiU3Vic2NyaXB0XCIsaWNvbjpcInN1YnNjcmlwdFwiLHNob3J0Y3V0OlwiXCJ9LHtuYW1lOlwic3VwZXJzY3JpcHRcIix0ZXh0OlwiU3VwZXJzY3JpcHRcIixhY3Rpb246XCJTdXBlcnNjcmlwdFwiLGljb246XCJzdXBlcnNjcmlwdFwiLHNob3J0Y3V0OlwiXCJ9LHtuYW1lOlwicmVtb3ZlZm9ybWF0XCIsdGV4dDpcIkNsZWFyIGZvcm1hdHRpbmdcIixhY3Rpb246XCJSZW1vdmVGb3JtYXRcIixpY29uOlwicmVtb3ZlLWZvcm1hdHRpbmdcIixzaG9ydGN1dDpcIlwifSx7bmFtZTpcIm5ld2RvY3VtZW50XCIsdGV4dDpcIk5ldyBkb2N1bWVudFwiLGFjdGlvbjpcIm1jZU5ld0RvY3VtZW50XCIsaWNvbjpcIm5ldy1kb2N1bWVudFwiLHNob3J0Y3V0OlwiXCJ9LHtuYW1lOlwiY3V0XCIsdGV4dDpcIkN1dFwiLGFjdGlvbjpcIkN1dFwiLGljb246XCJjdXRcIixzaG9ydGN1dDpcIk1ldGErWFwifSx7bmFtZTpcImNvcHlcIix0ZXh0OlwiQ29weVwiLGFjdGlvbjpcIkNvcHlcIixpY29uOlwiY29weVwiLHNob3J0Y3V0OlwiTWV0YStDXCJ9LHtuYW1lOlwicGFzdGVcIix0ZXh0OlwiUGFzdGVcIixhY3Rpb246XCJQYXN0ZVwiLGljb246XCJwYXN0ZVwiLHNob3J0Y3V0OlwiTWV0YStWXCJ9LHtuYW1lOlwic2VsZWN0YWxsXCIsdGV4dDpcIlNlbGVjdCBhbGxcIixhY3Rpb246XCJTZWxlY3RBbGxcIixpY29uOlwic2VsZWN0LWFsbFwiLHNob3J0Y3V0OlwiTWV0YStBXCJ9XSxmdW5jdGlvbih0KXtfLnVpLnJlZ2lzdHJ5LmFkZE1lbnVJdGVtKHQubmFtZSx7dGV4dDp0LnRleHQsaWNvbjp0Lmljb24sc2hvcnRjdXQ6dC5zaG9ydGN1dCxvbkFjdGlvbjpZQyhfLHQuYWN0aW9uKX0pfSksXy51aS5yZWdpc3RyeS5hZGRNZW51SXRlbShcImNvZGVmb3JtYXRcIix7dGV4dDpcIkNvZGVcIixpY29uOlwic291cmNlY29kZVwiLG9uQWN0aW9uOiRfKF8sXCJjb2RlXCIpfSksQz1xQygwLGQ9bD1lLFZPKGY9cz10KSksZi51aS5yZWdpc3RyeS5hZGROZXN0ZWRNZW51SXRlbShcImFsaWduXCIse3RleHQ6ZC5zaGFyZWQucHJvdmlkZXJzLnRyYW5zbGF0ZShcIkFsaWduXCIpLGdldFN1Ym1lbnVJdGVtczpmdW5jdGlvbigpe3JldHVybiBDLml0ZW1zLnZhbGlkYXRlSXRlbXMoQy5nZXRTdHlsZUl0ZW1zKCkpfX0pLHA9cUMoMCxnPWwsTE8obT1zKSksbS51aS5yZWdpc3RyeS5hZGROZXN0ZWRNZW51SXRlbShcImZvbnRmb3JtYXRzXCIse3RleHQ6Zy5zaGFyZWQucHJvdmlkZXJzLnRyYW5zbGF0ZShcIkZvbnRzXCIpLGdldFN1Ym1lbnVJdGVtczpmdW5jdGlvbigpe3JldHVybiBwLml0ZW1zLnZhbGlkYXRlSXRlbXMocC5nZXRTdHlsZUl0ZW1zKCkpfX0pLGg9cyxiPWx0KHt0eXBlOlwiYWR2YW5jZWRcIn0sKHY9bCkuc3R5bGVzZWxlY3QpLHk9cUMoMCx2LFdPKGgsYikpLGgudWkucmVnaXN0cnkuYWRkTmVzdGVkTWVudUl0ZW0oXCJmb3JtYXRzXCIse3RleHQ6XCJGb3JtYXRzXCIsZ2V0U3VibWVudUl0ZW1zOmZ1bmN0aW9uKCl7cmV0dXJuIHkuaXRlbXMudmFsaWRhdGVJdGVtcyh5LmdldFN0eWxlSXRlbXMoKSl9fSksdz1xQygwLGwsak8oeD1zKSkseC51aS5yZWdpc3RyeS5hZGROZXN0ZWRNZW51SXRlbShcImJsb2NrZm9ybWF0c1wiLHt0ZXh0OlwiQmxvY2tzXCIsZ2V0U3VibWVudUl0ZW1zOmZ1bmN0aW9uKCl7cmV0dXJuIHcuaXRlbXMudmFsaWRhdGVJdGVtcyh3LmdldFN0eWxlSXRlbXMoKSl9fSksaz1xQygwLGwsek8oUz1zKSksUy51aS5yZWdpc3RyeS5hZGROZXN0ZWRNZW51SXRlbShcImZvbnRzaXplc1wiLHt0ZXh0OlwiRm9udCBzaXplc1wiLGdldFN1Ym1lbnVJdGVtczpmdW5jdGlvbigpe3JldHVybiBrLml0ZW1zLnZhbGlkYXRlSXRlbXMoay5nZXRTdHlsZUl0ZW1zKCkpfX0pLChhPXU9dCkudWkucmVnaXN0cnkuYWRkTWVudUl0ZW0oXCJ1bmRvXCIse3RleHQ6XCJVbmRvXCIsaWNvbjpcInVuZG9cIixzaG9ydGN1dDpcIk1ldGErWlwiLG9uU2V0dXA6Wl8oYSxcImhhc1VuZG9cIiksb25BY3Rpb246WUMoYSxcInVuZG9cIil9KSxhLnVpLnJlZ2lzdHJ5LmFkZE1lbnVJdGVtKFwicmVkb1wiLHt0ZXh0OlwiUmVkb1wiLGljb246XCJyZWRvXCIsc2hvcnRjdXQ6XCJNZXRhK1lcIixvblNldHVwOlpfKGEsXCJoYXNSZWRvXCIpLG9uQWN0aW9uOllDKGEsXCJyZWRvXCIpfSksKGM9dSkudWkucmVnaXN0cnkuYWRkQnV0dG9uKFwidW5kb1wiLHt0b29sdGlwOlwiVW5kb1wiLGljb246XCJ1bmRvXCIsZGlzYWJsZWQ6ITAsb25TZXR1cDpaXyhjLFwiaGFzVW5kb1wiKSxvbkFjdGlvbjpZQyhjLFwidW5kb1wiKX0pLGMudWkucmVnaXN0cnkuYWRkQnV0dG9uKFwicmVkb1wiLHt0b29sdGlwOlwiUmVkb1wiLGljb246XCJyZWRvXCIsZGlzYWJsZWQ6ITAsb25TZXR1cDpaXyhjLFwiaGFzUmVkb1wiKSxvbkFjdGlvbjpZQyhjLFwicmVkb1wiKX0pLGZ1bmN0aW9uKHQpe3ZhciBpOyhpPXQpLmFkZENvbW1hbmQoXCJtY2VBcHBseVRleHRjb2xvclwiLGZ1bmN0aW9uKHQsZSl7dmFyIG4sbz10LHI9ZTsobj1pKS51bmRvTWFuYWdlci50cmFuc2FjdChmdW5jdGlvbigpe24uZm9jdXMoKSxuLmZvcm1hdHRlci5hcHBseShvLHt2YWx1ZTpyfSksbi5ub2RlQ2hhbmdlZCgpfSl9KSxpLmFkZENvbW1hbmQoXCJtY2VSZW1vdmVUZXh0Y29sb3JcIixmdW5jdGlvbih0KXt2YXIgZSxuPXQ7KGU9aSkudW5kb01hbmFnZXIudHJhbnNhY3QoZnVuY3Rpb24oKXtlLmZvY3VzKCksZS5mb3JtYXR0ZXIucmVtb3ZlKG4se3ZhbHVlOm51bGx9LG51bGwsITApLGUubm9kZUNoYW5nZWQoKX0pfSk7dmFyIGU9UG8oRmIpLG49UG8oRmIpO2tiKHQsXCJmb3JlY29sb3JcIixcImZvcmVjb2xvclwiLFwiVGV4dCBjb2xvclwiLGUpLGtiKHQsXCJiYWNrY29sb3JcIixcImhpbGl0ZWNvbG9yXCIsXCJCYWNrZ3JvdW5kIGNvbG9yXCIsbiksQ2IodCxcImZvcmVjb2xvclwiLFwiZm9yZWNvbG9yXCIsXCJUZXh0IGNvbG9yXCIpLENiKHQsXCJiYWNrY29sb3JcIixcImhpbGl0ZWNvbG9yXCIsXCJCYWNrZ3JvdW5kIGNvbG9yXCIpfSh0KSx0VCh0KSwocj10KS51aS5yZWdpc3RyeS5hZGRCdXR0b24oXCJvdXRkZW50XCIse3Rvb2x0aXA6XCJEZWNyZWFzZSBpbmRlbnRcIixpY29uOlwib3V0ZGVudFwiLG9uU2V0dXA6R0MoaT1yLFwiTm9kZUNoYW5nZVwiLGZ1bmN0aW9uKHQpe3Quc2V0RGlzYWJsZWQoIWkucXVlcnlDb21tYW5kU3RhdGUoXCJvdXRkZW50XCIpKX0pLG9uQWN0aW9uOllDKHIsXCJvdXRkZW50XCIpfSksci51aS5yZWdpc3RyeS5hZGRCdXR0b24oXCJpbmRlbnRcIix7dG9vbHRpcDpcIkluY3JlYXNlIGluZGVudFwiLGljb246XCJpbmRlbnRcIixvbkFjdGlvbjpZQyhyLFwiaW5kZW50XCIpfSksSl8obj10LExUKSxvPW4sdnQuZnJvbShvLmdldFBhcmFtKFwiY29udGVudF9sYW5nc1wiLHZvaWQgMCxcImFycmF5XCIpKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJue25hbWU6XCJsYW5ndWFnZVwiLHRleHQ6XCJMYW5ndWFnZVwiLGljb246XCJsYW5ndWFnZVwiLGdldE9wdGlvbnM6cnQodCksaGFzaDpmdW5jdGlvbih0KXtyZXR1cm4gRSh0LmN1c3RvbUNvZGUpP3QuY29kZTp0LmNvZGUrXCIvXCIrdC5jdXN0b21Db2RlfSxkaXNwbGF5OmZ1bmN0aW9uKHQpe3JldHVybiB0LnRpdGxlfSx3YXRjaGVyOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdC5mb3JtYXR0ZXIuZm9ybWF0Q2hhbmdlZChcImxhbmdcIixuLCExLHt2YWx1ZTplLmNvZGUsY3VzdG9tVmFsdWU6ZS5jdXN0b21Db2RlfSkudW5iaW5kfSxnZXRDdXJyZW50OmZ1bmN0aW9uKHQpe3JldHVybiBtcihNdC5mcm9tRG9tKHQuc2VsZWN0aW9uLmdldE5vZGUoKSksZnVuY3Rpb24odCl7cmV0dXJuIHZ0LnNvbWUodCkuZmlsdGVyKEdlKS5iaW5kKGZ1bmN0aW9uKGUpe3JldHVybiB1ZShlLFwibGFuZ1wiKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJue2NvZGU6dCxjdXN0b21Db2RlOnVlKGUsXCJkYXRhLW1jZS1sYW5nXCIpLmdldE9yVW5kZWZpbmVkKCksdGl0bGU6XCJcIn19KX0pfSl9LHNldEN1cnJlbnQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5leGVjQ29tbWFuZChcIkxhbmdcIiwhMSxlKX0sb25Ub29sYmFyU2V0dXA6ZnVuY3Rpb24odCl7dmFyIGU9bWMoKTtyZXR1cm4gdC5zZXRBY3RpdmUoby5mb3JtYXR0ZXIubWF0Y2goXCJsYW5nXCIse30sdm9pZCAwLCEwKSksZS5zZXQoby5mb3JtYXR0ZXIuZm9ybWF0Q2hhbmdlZChcImxhbmdcIix0LnNldEFjdGl2ZSwhMCkpLGUuY2xlYXJ9fX0pLmVhY2goZnVuY3Rpb24odCl7cmV0dXJuIEpfKG4sdCl9KX1mdW5jdGlvbiBuVCh0LGUpe3JldHVybnt0eXBlOlwibWFrZXNoaWZ0XCIseDp0LHk6ZX19ZnVuY3Rpb24gb1QodCl7cmV0dXJuXCJsb25ncHJlc3NcIj09PXQudHlwZXx8MD09PXQudHlwZS5pbmRleE9mKFwidG91Y2hcIil9ZnVuY3Rpb24gclQodCxlKXtyZXR1cm5cImNvbnRleHRtZW51XCI9PT1lLnR5cGV8fFwibG9uZ3ByZXNzXCI9PT1lLnR5cGU/dC5pbmxpbmU/ZnVuY3Rpb24odCl7aWYob1QodCkpe3ZhciBlPXQudG91Y2hlc1swXTtyZXR1cm4gblQoZS5wYWdlWCxlLnBhZ2VZKX1yZXR1cm4gblQodC5wYWdlWCx0LnBhZ2VZKX0oZSk6KG49dC5nZXRDb250ZW50QXJlYUNvbnRhaW5lcigpLG89ZnVuY3Rpb24odCl7aWYob1QodCkpe3ZhciBlPXQudG91Y2hlc1swXTtyZXR1cm4gblQoZS5jbGllbnRYLGUuY2xpZW50WSl9cmV0dXJuIG5UKHQuY2xpZW50WCx0LmNsaWVudFkpfShlKSxyPW52LkRPTS5nZXRQb3MobiksaT1yLngsdT1yLnksblQoby54K2ksby55K3UpKTp6VCh0KTt2YXIgbixvLHIsaSx1fWZ1bmN0aW9uIGlUKHQsZSxuKXtzd2l0Y2gobil7Y2FzZVwibm9kZVwiOnJldHVybnt0eXBlOlwibm9kZVwiLG5vZGU6dnQuc29tZShNdC5mcm9tRG9tKChvPXQpLnNlbGVjdGlvbi5nZXROb2RlKCkpKSxyb290Ok10LmZyb21Eb20oby5nZXRCb2R5KCkpfTtjYXNlXCJwb2ludFwiOnJldHVybiByVCh0LGUpO2Nhc2VcInNlbGVjdGlvblwiOnJldHVybiB6VCh0KX12YXIgb31mdW5jdGlvbiB1VChmLGQsbSxnLHAsaCl7ZnVuY3Rpb24gdCgpe3ZhciBlLG4sdCxvLHIsaSx1LGEsYyxzLGw9bSgpO3Q9bCxvPWcscj1wLHU9ISh5fHx2fHxiJiZ4KSxjPWlUKGU9ZixuPWQsYT1pPWgpLHM9bHQoe2J1YmJsZTpTYygwLFwicG9pbnRcIj09PWE/MTI6MCxqVCksbGF5b3V0czpVVCxvdmVycmlkZXM6e21heFdpZHRoRnVuY3Rpb246cE8oKSxtYXhIZWlnaHRGdW5jdGlvbjpOYygpfX0sYyksajAodCxTaC5DTE9TRV9PTl9FWEVDVVRFLG8sITApLm1hcChmdW5jdGlvbih0KXtuLnByZXZlbnREZWZhdWx0KCksdXAuc2hvd01lbnVXaXRoaW5Cb3VuZHMocix7YW5jaG9yOnN9LHttZW51OnttYXJrZXJzOlFwKFwibm9ybWFsXCIpLGhpZ2hsaWdodEltbWVkaWF0ZWx5OnV9LGRhdGE6dCx0eXBlOlwiaG9yaXpvbnRhbFwifSxmdW5jdGlvbigpe3JldHVybiB2dC5zb21lKGFfKGUsby5zaGFyZWQsXCJub2RlXCI9PT1pP1wibm9kZVwiOlwic2VsZWN0aW9uXCIpKX0pLGUuZmlyZShWXyl9KX12YXIgZSxuPWxuKCksdj1uLm9zLmlzaU9TKCksYj1uLm9zLmlzT1NYKCkseT1uLm9zLmlzQW5kcm9pZCgpLHg9bi5kZXZpY2VUeXBlLmlzVG91Y2goKTsoYnx8dikmJlwibm9kZVwiIT09aD8oZT1mdW5jdGlvbigpeyhmdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7bHAuc2V0RWRpdG9yVGltZW91dCh0LGZ1bmN0aW9uKCl7dC5zZWxlY3Rpb24uc2V0Um5nKG4pfSwxMCksaSgpfXZhciBuPXQuc2VsZWN0aW9uLmdldFJuZygpO2Z1bmN0aW9uIG8odCl7dC5wcmV2ZW50RGVmYXVsdCgpLHQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCl9ZnVuY3Rpb24gcigpe3JldHVybiBpKCl9dC5vbmNlKFwidG91Y2hlbmRcIixlKSx0Lm9uKFwibW91c2Vkb3duXCIsbywhMCksdC5vbmNlKFwibG9uZ3ByZXNzY2FuY2VsXCIscik7dmFyIGk9ZnVuY3Rpb24oKXt0Lm9mZihcInRvdWNoZW5kXCIsZSksdC5vZmYoXCJsb25ncHJlc3NjYW5jZWxcIixyKSx0Lm9mZihcIm1vdXNlZG93blwiLG8pfX0pKGYpLHQoKX0sZnVuY3Rpb24odCxlKXt2YXIgbj10LnNlbGVjdGlvbjtpZighKG4uaXNDb2xsYXBzZWQoKXx8ZS50b3VjaGVzLmxlbmd0aDwxKSl7dmFyIG89ZS50b3VjaGVzWzBdLHI9bi5nZXRSbmcoKTtyZXR1cm4geHModC5nZXRXaW4oKSxtcy5kb21SYW5nZShyKSkuZXhpc3RzKGZ1bmN0aW9uKHQpe3JldHVybiB0LmxlZnQ8PW8uY2xpZW50WCYmdC5yaWdodD49by5jbGllbnRYJiZ0LnRvcDw9by5jbGllbnRZJiZ0LmJvdHRvbT49by5jbGllbnRZfSl9fShmLGQpP2UoKTooZi5vbmNlKFwic2VsZWN0aW9uY2hhbmdlXCIsZSksZi5vbmNlKFwidG91Y2hlbmRcIixmdW5jdGlvbigpe3JldHVybiBmLm9mZihcInNlbGVjdGlvbmNoYW5nZVwiLGUpfSkpKTp0KCl9ZnVuY3Rpb24gYVQodCl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQ/dC5zcGxpdCgvWyAsXS8pOnR9ZnVuY3Rpb24gY1QodCl7cmV0dXJuIHQuZ2V0UGFyYW0oXCJjb250ZXh0bWVudV9uZXZlcl91c2VfbmF0aXZlXCIsITEsXCJib29sZWFuXCIpfWZ1bmN0aW9uIHNUKHQpe3JldHVybiB5KHQpP1wifFwiPT09dDpcInNlcGFyYXRvclwiPT09dC50eXBlfWZ1bmN0aW9uIGxUKHQsZSl7aWYoMD09PWUubGVuZ3RoKXJldHVybiB0O3ZhciBuPXEodCkuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiFzVCh0KX0pLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm5bXX0sZnVuY3Rpb24odCl7cmV0dXJuW1dUXX0pO3JldHVybiB0LmNvbmNhdChuKS5jb25jYXQoZSkuY29uY2F0KFtXVF0pfWZ1bmN0aW9uIGZUKHQsZSl7cmV0dXJuXCJsb25ncHJlc3NcIiE9PWUudHlwZSYmKDIhPT1lLmJ1dHRvbnx8ZS50YXJnZXQ9PT10LmdldEJvZHkoKSYmXCJcIj09PWUucG9pbnRlclR5cGUpfWZ1bmN0aW9uIGRUKHQsZSl7cmV0dXJuIGZUKHQsZSk/dC5zZWxlY3Rpb24uZ2V0U3RhcnQoITApOmUudGFyZ2V0fWZ1bmN0aW9uIG1UKHMsdCxlKXtmdW5jdGlvbiBuKHQpe3JldHVybiB1cC5oaWRlKGkpfWZ1bmN0aW9uIG8oYyl7dmFyIHQ7Y1QocykmJmMucHJldmVudERlZmF1bHQoKSxjLmN0cmxLZXkmJiFjVChzKXx8ITE9PT1zLmdldFBhcmFtKFwiY29udGV4dG1lbnVcIil8fCh0PWZ1bmN0aW9uKHQsZSl7dmFyIG49dC5nZXRQYXJhbShcImNvbnRleHRtZW51X2F2b2lkX292ZXJsYXBcIixcIlwiLFwic3RyaW5nXCIpLG89ZlQodCxlKT9cInNlbGVjdGlvblwiOlwicG9pbnRcIjtpZihhdChuKSl7dmFyIHI9ZFQodCxlKTtyZXR1cm4gWWIoTXQuZnJvbURvbShyKSxuKT9cIm5vZGVcIjpvfXJldHVybiBvfShzLGMpLChyKCk/dVQ6ZnVuY3Rpb24odCxlLG4sbyxyLGkpe3ZhciB1PW4oKSxhPWlUKHQsZSxpKTtqMCh1LFNoLkNMT1NFX09OX0VYRUNVVEUsbywhMSkubWFwKGZ1bmN0aW9uKHQpe2UucHJldmVudERlZmF1bHQoKSx1cC5zaG93TWVudUF0KHIse2FuY2hvcjphfSx7bWVudTp7bWFya2VyczpRcChcIm5vcm1hbFwiKX0sZGF0YTp0fSl9KX0pKHMsYyxmdW5jdGlvbigpe3ZhciB0LGUsbixvPWRUKHMsYykscj1zLnVpLnJlZ2lzdHJ5LmdldEFsbCgpLGk9KG49KGU9cykudWkucmVnaXN0cnkuZ2V0QWxsKCkuY29udGV4dE1lbnVzLHZ0LmZyb20oZS5nZXRQYXJhbShcImNvbnRleHRtZW51XCIpKS5tYXAoYVQpLmdldE9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gRihhVChcImxpbmsgbGlua2NoZWNrZXIgaW1hZ2UgaW1hZ2V0b29scyB0YWJsZSBzcGVsbGNoZWNrZXIgY29uZmlndXJlcGVybWFuZW50cGVuXCIpLGZ1bmN0aW9uKHQpe3JldHVybiBUdChuLHQpfSl9KSksdT1yLmNvbnRleHRNZW51cyxhPW87cmV0dXJuIDA8KHQ9UihpLGZ1bmN0aW9uKG8sdCl7cmV0dXJuIHR0KHUsdC50b0xvd2VyQ2FzZSgpKS5tYXAoZnVuY3Rpb24odCl7dmFyIGU9dC51cGRhdGUoYSk7aWYoeShlKSlyZXR1cm4gbFQobyxlLnNwbGl0KFwiIFwiKSk7aWYoMDxlLmxlbmd0aCl7dmFyIG49QihlLEdUKTtyZXR1cm4gbFQobyxuKX1yZXR1cm4gb30pLmdldE9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gby5jb25jYXQoW3RdKX0pfSxbXSkpLmxlbmd0aCYmc1QodFt0Lmxlbmd0aC0xXSkmJnQucG9wKCksdH0sZSxpLHQpKX12YXIgcj1sbigpLmRldmljZVR5cGUuaXNUb3VjaCxpPVR1KHVwLnNrZXRjaCh7ZG9tOnt0YWc6XCJkaXZcIn0sbGF6eVNpbms6dCxvbkVzY2FwZTpmdW5jdGlvbigpe3JldHVybiBzLmZvY3VzKCl9LG9uU2hvdzpmdW5jdGlvbigpe3JldHVybiBlLnNldENvbnRleHRNZW51U3RhdGUoITApfSxvbkhpZGU6ZnVuY3Rpb24oKXtyZXR1cm4gZS5zZXRDb250ZXh0TWVudVN0YXRlKCExKX0sZmlyZURpc21pc3NhbEV2ZW50SW5zdGVhZDp7fSxpbmxpbmVCZWhhdmlvdXJzOmVjKFttbShcImRpc21pc3NDb250ZXh0TWVudVwiLFtDcihZaSgpLGZ1bmN0aW9uKHQsZSl7YmYuY2xvc2UodCkscy5mb2N1cygpfSldKV0pfSkpO3Mub24oXCJpbml0XCIsZnVuY3Rpb24oKXt2YXIgdD1cIlJlc2l6ZUVkaXRvciBTY3JvbGxDb250ZW50IFNjcm9sbFdpbmRvdyBsb25ncHJlc3NjYW5jZWxcIisocigpP1wiXCI6XCIgUmVzaXplV2luZG93XCIpO3Mub24odCxuKSxzLm9uKFwibG9uZ3ByZXNzIGNvbnRleHRtZW51XCIsbyl9KX1mdW5jdGlvbiBnVChlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIHQudHJhbnNsYXRlKC1lLmxlZnQsLWUudG9wKX19ZnVuY3Rpb24gcFQoZSl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiB0LnRyYW5zbGF0ZShlLmxlZnQsZS50b3ApfX1mdW5jdGlvbiBoVChuKXtyZXR1cm4gZnVuY3Rpb24odCxlKXtyZXR1cm4gUihuLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUodCl9LGtuKHQsZSkpfX1mdW5jdGlvbiB2VCh0LGUsbil7cmV0dXJuIHQuZm9sZChoVChbcFQobiksZ1QoZSldKSxoVChbZ1QoZSldKSxoVChbXSkpfWZ1bmN0aW9uIGJUKHQsZSxuKXtyZXR1cm4gdC5mb2xkKGhUKFtwVChuKV0pLGhUKFtdKSxoVChbcFQoZSldKSl9ZnVuY3Rpb24geVQodCxlLG4pe3JldHVybiB0LmZvbGQoaFQoW10pLGhUKFtnVChuKV0pLGhUKFtwVChlKSxnVChuKV0pKX1mdW5jdGlvbiB4VCh0LGUsbil7dmFyIG89dC5mb2xkKGZ1bmN0aW9uKHQsZSl7cmV0dXJue3Bvc2l0aW9uOnZ0LnNvbWUoXCJhYnNvbHV0ZVwiKSxsZWZ0OnZ0LnNvbWUodCtcInB4XCIpLHRvcDp2dC5zb21lKGUrXCJweFwiKX19LGZ1bmN0aW9uKHQsZSl7cmV0dXJue3Bvc2l0aW9uOnZ0LnNvbWUoXCJhYnNvbHV0ZVwiKSxsZWZ0OnZ0LnNvbWUodC1uLmxlZnQrXCJweFwiKSx0b3A6dnQuc29tZShlLW4udG9wK1wicHhcIil9fSxmdW5jdGlvbih0LGUpe3JldHVybntwb3NpdGlvbjp2dC5zb21lKFwiZml4ZWRcIiksbGVmdDp2dC5zb21lKHQrXCJweFwiKSx0b3A6dnQuc29tZShlK1wicHhcIil9fSk7cmV0dXJuIGx0KHtyaWdodDp2dC5ub25lKCksYm90dG9tOnZ0Lm5vbmUoKX0sbyl9ZnVuY3Rpb24gd1QodCxpLHUsYSl7ZnVuY3Rpb24gZShvLHIpe3JldHVybiBmdW5jdGlvbih0LGUpe3ZhciBuPW8oaSx1LGEpO3JldHVybiByKHQuZ2V0T3Iobi5sZWZ0KSxlLmdldE9yKG4udG9wKSl9fXJldHVybiB0LmZvbGQoZSh5VCxZVCksZShiVCxxVCksZSh2VCxLVCkpfWZ1bmN0aW9uIFNUKHQsZSl7dmFyIG49aWUodCxlKTtyZXR1cm4gRShuKT9OYU46cGFyc2VJbnQobiwxMCl9ZnVuY3Rpb24ga1QodCxlLG4sbyxyLGkpe3ZhciB1LGEsYyxzLGwsZixkPSh1PW4sYT1vLGw9U1Qocz10LmVsZW1lbnQsKGM9ZSkubGVmdEF0dHIpLGY9U1QocyxjLnRvcEF0dHIpLChpc05hTihsKXx8aXNOYU4oZik/dnQubm9uZSgpOnZ0LnNvbWUoa24obCxmKSkpLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm4gdX0sZnVuY3Rpb24odCl7cmV0dXJuIEtUKHQubGVmdCthLmxlZnQsdC50b3ArYS50b3ApfSkpLG09KGUubXVzdFNuYXA/SlQ6JFQpKHQsZSxkLHIsaSksZz12VChkLHIsaSkscD1lLGg9Zyx2PXQuZWxlbWVudDtyZXR1cm4gb2UodixwLmxlZnRBdHRyLGgubGVmdCtcInB4XCIpLG9lKHYscC50b3BBdHRyLGgudG9wK1wicHhcIiksbS5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJue2Nvb3JkOktUKGcubGVmdCxnLnRvcCksZXh0cmE6dnQubm9uZSgpfX0sZnVuY3Rpb24odCl7cmV0dXJue2Nvb3JkOnQub3V0cHV0LGV4dHJhOnQuZXh0cmF9fSl9ZnVuY3Rpb24gQ1QodCxjLHMsbCl7cmV0dXJuIEsodCxmdW5jdGlvbih0KXt2YXIgZSxuLG89dC5zZW5zb3Iscj10LnJhbmdlLmxlZnQsaT10LnJhbmdlLnRvcCx1PWJUKGMsZT1zLG49bCksYT1iVChvLGUsbik7cmV0dXJuIE1hdGguYWJzKHUubGVmdC1hLmxlZnQpPD1yJiZNYXRoLmFicyh1LnRvcC1hLnRvcCk8PWk/dnQuc29tZSh7b3V0cHV0OndUKHQub3V0cHV0LGMscyxsKSxleHRyYTp0LmV4dHJhfSk6dnQubm9uZSgpfSl9ZnVuY3Rpb24gT1QodCxlKXt2YXIgbjt0LmdldFN5c3RlbSgpLmFkZFRvR3VpKGUpLFl0KChuPWUpLmVsZW1lbnQpLmZpbHRlcihHZSkuZWFjaChmdW5jdGlvbihlKXtwZShlLFwiei1pbmRleFwiKS5lYWNoKGZ1bmN0aW9uKHQpe29lKGUsWlQsdCl9KSxmZShlLFwiei1pbmRleFwiLGdlKG4uZWxlbWVudCxcInotaW5kZXhcIikpfSl9ZnVuY3Rpb24gX1QodCl7WXQodC5lbGVtZW50KS5maWx0ZXIoR2UpLmVhY2goZnVuY3Rpb24oZSl7dWUoZSxaVCkuZm9sZChmdW5jdGlvbigpe3JldHVybiB2ZShlLFwiei1pbmRleFwiKX0sZnVuY3Rpb24odCl7cmV0dXJuIGZlKGUsXCJ6LWluZGV4XCIsdCl9KSxjZShlLFpUKX0pLHQuZ2V0U3lzdGVtKCkucmVtb3ZlRnJvbUd1aSh0KX1mdW5jdGlvbiBUVCh0LGUsbil7cmV0dXJuIHQuZ2V0U3lzdGVtKCkuYnVpbGQobHkuc2tldGNoKHtkb206e3N0eWxlczp7bGVmdDpcIjBweFwiLHRvcDpcIjBweFwiLHdpZHRoOlwiMTAwJVwiLGhlaWdodDpcIjEwMCVcIixwb3NpdGlvbjpcImZpeGVkXCIsXCJ6LWluZGV4XCI6XCIxMDAwMDAwMDAwMDAwMDAwXCJ9LGNsYXNzZXM6W2VdfSxldmVudHM6bn0pKX1mdW5jdGlvbiBFVCh0LGUpe3JldHVybntib3VuZHM6dC5nZXRCb3VuZHMoKSxoZWlnaHQ6d2UoZS5lbGVtZW50KSx3aWR0aDpPZShlLmVsZW1lbnQpfX1mdW5jdGlvbiBEVChBLEIsdCxlLG4pe3ZhciBvPXQudXBkYXRlKGUsbiksTT10LmdldFN0YXJ0RGF0YSgpLmdldE9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gRVQoQixBKX0pO28uZWFjaChmdW5jdGlvbih0KXt2YXIgZSxuLG8scixpLHUsYSxjLHMsbCxmLGQsbSxnLHAsaCx2LGIseSx4LHcsUyxrLEMsTyxfPUEsVD1NLEU9dCxEPShlPUIpLmdldFRhcmdldChfLmVsZW1lbnQpO2UucmVwb3NpdGlvblRhcmdldCYmKG49SWUoanQoXy5lbGVtZW50KSksbz1VayhEKSxTPXBlKHc9RCxcImxlZnRcIiksaz1wZSh3LFwidG9wXCIpLEM9cGUodyxcInBvc2l0aW9uXCIpLE89ZnVuY3Rpb24odCxlLG4pe3JldHVybihcImZpeGVkXCI9PT1uP0tUOllUKShwYXJzZUludCh0LDEwKSxwYXJzZUludChlLDEwKSl9LHI9KFMuaXNTb21lKCkmJmsuaXNTb21lKCkmJkMuaXNTb21lKCk/dnQuc29tZShPKFMuZ2V0T3JEaWUoKSxrLmdldE9yRGllKCksQy5nZXRPckRpZSgpKSk6dnQubm9uZSgpKS5nZXRPclRodW5rKGZ1bmN0aW9uKCl7dmFyIHQ9a2Uodyk7cmV0dXJuIHFUKHQubGVmdCx0LnRvcCl9KSxpPV8sdT1lLnNuYXBzLGE9cixjPW4scz1vLGw9RSxmPVQsbT11LmZvbGQoZnVuY3Rpb24oKXt2YXIgbixvLHQ9dlQoKG49bC5sZWZ0LG89bC50b3AsYS5mb2xkKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIFlUKHQrbixlK28pfSxmdW5jdGlvbih0LGUpe3JldHVybiBxVCh0K24sZStvKX0sZnVuY3Rpb24odCxlKXtyZXR1cm4gS1QodCtuLGUrbyl9KSksYyxzKTtyZXR1cm4gS1QodC5sZWZ0LHQudG9wKX0sZnVuY3Rpb24oZSl7dmFyIHQ9a1QoaSxlLGEsbCxjLHMpO3JldHVybiB0LmV4dHJhLmVhY2goZnVuY3Rpb24odCl7ZS5vblNlbnNvcihpLHQpfSksdC5jb29yZH0pLGc9YyxwPXMsaD0oZD1mKS5ib3VuZHMsdj1iVChtLGcscCksYj1XYSh2LmxlZnQsaC54LGgueCtoLndpZHRoLWQud2lkdGgpLHk9V2Eodi50b3AsaC55LGgueStoLmhlaWdodC1kLmhlaWdodCkseD1xVChiLHkpLG1lKEQseFQobS5mb2xkKGZ1bmN0aW9uKCl7dmFyIHQ9eVQoeCxnLHApO3JldHVybiBZVCh0LmxlZnQsdC50b3ApfSxydCh4KSxmdW5jdGlvbigpe3ZhciB0PXZUKHgsZyxwKTtyZXR1cm4gS1QodC5sZWZ0LHQudG9wKX0pLDAsbykpKSxlLm9uRHJhZyhfLEQsRSl9KX1mdW5jdGlvbiBBVChvLHQsZSxuKXt0LmVhY2goX1QpLGUuc25hcHMuZWFjaChmdW5jdGlvbih0KXt2YXIgZSxuO2U9dCxjZShuPW8uZWxlbWVudCxlLmxlZnRBdHRyKSxjZShuLGUudG9wQXR0cil9KTt2YXIgcj1lLmdldFRhcmdldChvLmVsZW1lbnQpO24ucmVzZXQoKSxlLm9uRHJvcChvLHIpfWZ1bmN0aW9uIEJUKHQpe3JldHVybiBmdW5jdGlvbihlLG4pe2Z1bmN0aW9uIG8odCl7bi5zZXRTdGFydERhdGEoRVQoZSx0KSl9cmV0dXJuIG51KFYoW0NyKGppKCksZnVuY3Rpb24odCl7bi5nZXRTdGFydERhdGEoKS5lYWNoKGZ1bmN0aW9uKCl7cmV0dXJuIG8odCl9KX0pXSx0KGUsbixvKSwhMCkpfX1mdW5jdGlvbiBNVChhLGMscyl7cmV0dXJuW0NyKG1pKCksZnVuY3Rpb24oZSx0KXt2YXIgbixvLHIsaSx1OzA9PT10LmV2ZW50LnJhdy5idXR0b24mJih0LnN0b3AoKSxyPXtkcm9wOm49ZnVuY3Rpb24oKXtyZXR1cm4gQVQoZSx2dC5zb21lKGkpLGEsYyl9LGRlbGF5RHJvcDoobz1xYihuLDIwMCkpLnNjaGVkdWxlLGZvcmNlRHJvcDpuLG1vdmU6ZnVuY3Rpb24odCl7by5jYW5jZWwoKSxEVChlLGEsYyxuRSx0KX19LGk9VFQoZSxhLmJsb2NrZXJDbGFzcywodT1yLG51KFtDcihtaSgpLHUuZm9yY2VEcm9wKSxDcihoaSgpLHUuZHJvcCksQ3IoZ2koKSxmdW5jdGlvbih0LGUpe3UubW92ZShlLmV2ZW50KX0pLENyKHBpKCksdS5kZWxheURyb3ApXSkpKSxzKGUpLE9UKGUsaSkpfSldfWZ1bmN0aW9uIEZUKGEsYyxzKXtmdW5jdGlvbiBsKHQpe0FUKHQsZi5nZXQoKSxhLGMpLGYuY2xlYXIoKX12YXIgZj1nYygpO3JldHVybltDcihzaSgpLGZ1bmN0aW9uKGUsdCl7ZnVuY3Rpb24gbigpe3JldHVybiBsKGUpfXQuc3RvcCgpO3ZhciBvLHIsaSx1PVRUKGUsYS5ibG9ja2VyQ2xhc3MsKHI9bz1uLGk9ZnVuY3Rpb24odCl7RFQoZSxhLGMsckUsdCl9LG51KFtDcihzaSgpLHIpLENyKGZpKCksbyksQ3IoZGkoKSxvKSxDcihsaSgpLGZ1bmN0aW9uKHQsZSl7aShlLmV2ZW50KX0pXSkpKTtmLnNldCh1KSxzKGUpLE9UKGUsdSl9KSxDcihsaSgpLGZ1bmN0aW9uKHQsZSl7ZS5zdG9wKCksRFQodCxhLGMsckUsZS5ldmVudCl9KSxDcihmaSgpLGZ1bmN0aW9uKHQsZSl7ZS5zdG9wKCksbCh0KX0pLENyKGRpKCksbCldfWZ1bmN0aW9uIElUKHQscixpLHUsZSxuKXtyZXR1cm4gdC5mb2xkKGZ1bmN0aW9uKCl7cmV0dXJuIGFFLnNuYXAoe3NlbnNvcjpxVChpLTIwLHUtMjApLHJhbmdlOmtuKGUsbiksb3V0cHV0OnFUKHZ0LnNvbWUoaSksdnQuc29tZSh1KSksZXh0cmE6e3RkOnJ9fSl9LGZ1bmN0aW9uKHQpe3ZhciBlPWktMjAsbj11LTIwLG89dC5lbGVtZW50LmRvbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtyZXR1cm4gYUUuc25hcCh7c2Vuc29yOnFUKGUsbikscmFuZ2U6a24oNDAsNDApLG91dHB1dDpxVCh2dC5zb21lKGktby53aWR0aC8yKSx2dC5zb21lKHUtby5oZWlnaHQvMikpLGV4dHJhOnt0ZDpyfX0pfSl9ZnVuY3Rpb24gUlQodCxpLHUpe3JldHVybntnZXRTbmFwUG9pbnRzOnQsbGVmdEF0dHI6XCJkYXRhLWRyYWctbGVmdFwiLHRvcEF0dHI6XCJkYXRhLWRyYWctdG9wXCIsb25TZW5zb3I6ZnVuY3Rpb24odCxlKXt2YXIgbj1lLnRkLG89aS5nZXQoKSxyPW47by5leGlzdHMoZnVuY3Rpb24odCl7cmV0dXJuIHp0KHQscil9KXx8KGkuc2V0KG4pLHUobikpfSxtdXN0U25hcDohMH19ZnVuY3Rpb24gTlQodCl7cmV0dXJuIEhtKGZwLnNrZXRjaCh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1zZWxlY3RvclwiXX0sYnV0dG9uQmVoYXZpb3VyczplYyhbYUUuY29uZmlnKHttb2RlOlwibW91c2VPclRvdWNoXCIsYmxvY2tlckNsYXNzOlwiYmxvY2tlclwiLHNuYXBzOnR9KSx2dy5jb25maWcoe30pXSksZXZlbnRPcmRlcjp7bW91c2Vkb3duOltcImRyYWdnaW5nXCIsXCJhbGxveS5iYXNlLmJlaGF2aW91clwiXSx0b3VjaHN0YXJ0OltcImRyYWdnaW5nXCIsXCJhbGxveS5iYXNlLmJlaGF2aW91clwiXX19KSl9ZnVuY3Rpb24gUFQoYSxuKXtmdW5jdGlvbiBlKHQpe3ZhciBlPUhlKHQpO3JldHVybiBJVChnLmdldE9wdChuKSx0LGUueCxlLnksZS53aWR0aCxlLmhlaWdodCl9ZnVuY3Rpb24gbyh0KXt2YXIgZT1IZSh0KTtyZXR1cm4gSVQocC5nZXRPcHQobiksdCxlLnJpZ2h0LGUuYm90dG9tLGUud2lkdGgsZS5oZWlnaHQpfWZ1bmN0aW9uIHIodCxpLGUsdSl7dmFyIG49ZShpKTthRS5zbmFwVG8odCxuKSxmdW5jdGlvbih0KXt2YXIgZT1pLmRvbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTt2ZSh0LmVsZW1lbnQsXCJkaXNwbGF5XCIpO3ZhciBuPVh0KE10LmZyb21Eb20oYS5nZXRCb2R5KCkpKS5kb20uaW5uZXJIZWlnaHQsbz1lW3VdPDAscj1lW3VdPm47KG98fHIpJiZmZSh0LmVsZW1lbnQsXCJkaXNwbGF5XCIsXCJub25lXCIpfSh0KX1mdW5jdGlvbiBpKHQpe3JldHVybiByKGgsdCxlLFwidG9wXCIpfWZ1bmN0aW9uIHUodCl7cmV0dXJuIHIodix0LG8sXCJib3R0b21cIil9dmFyIGM9UG8oW10pLHM9UG8oW10pLHQ9UG8oITEpLGw9Z2MoKSxmPWdjKCksZD1SVChmdW5jdGlvbigpe3JldHVybiBCKGMuZ2V0KCksZSl9LGwsZnVuY3Rpb24oZSl7Zi5nZXQoKS5lYWNoKGZ1bmN0aW9uKHQpe2EuZmlyZShcIlRhYmxlU2VsZWN0b3JDaGFuZ2VcIix7c3RhcnQ6ZSxmaW5pc2g6dH0pfSl9KSxtPVJUKGZ1bmN0aW9uKCl7cmV0dXJuIEIocy5nZXQoKSxvKX0sZixmdW5jdGlvbihlKXtsLmdldCgpLmVhY2goZnVuY3Rpb24odCl7YS5maXJlKFwiVGFibGVTZWxlY3RvckNoYW5nZVwiLHtzdGFydDp0LGZpbmlzaDplfSl9KX0pLGc9TlQoZCkscD1OVChtKSxoPVR1KGcuYXNTcGVjKCkpLHY9VHUocC5hc1NwZWMoKSk7bG4oKS5kZXZpY2VUeXBlLmlzVG91Y2goKSYmKGEub24oXCJUYWJsZVNlbGVjdGlvbkNoYW5nZVwiLGZ1bmN0aW9uKGUpe3QuZ2V0KCl8fChOcyhuLGgpLE5zKG4sdiksdC5zZXQoITApKSxsLnNldChlLnN0YXJ0KSxmLnNldChlLmZpbmlzaCksZS5vdGhlckNlbGxzLmVhY2goZnVuY3Rpb24odCl7Yy5zZXQodC51cE9yTGVmdENlbGxzKSxzLnNldCh0LmRvd25PclJpZ2h0Q2VsbHMpLGkoZS5zdGFydCksdShlLmZpbmlzaCl9KX0pLGEub24oXCJSZXNpemVFZGl0b3IgUmVzaXplV2luZG93IFNjcm9sbENvbnRlbnRcIixmdW5jdGlvbigpe2wuZ2V0KCkuZWFjaChpKSxmLmdldCgpLmVhY2godSl9KSxhLm9uKFwiVGFibGVTZWxlY3Rpb25DbGVhclwiLGZ1bmN0aW9uKCl7dC5nZXQoKSYmKFZzKGgpLFZzKHYpLHQuc2V0KCExKSksbC5jbGVhcigpLGYuY2xlYXIoKX0pKX12YXIgVlQsSFQsTFQ9e25hbWU6XCJsaW5laGVpZ2h0XCIsdGV4dDpcIkxpbmUgaGVpZ2h0XCIsaWNvbjpcImxpbmUtaGVpZ2h0XCIsZ2V0T3B0aW9uczpmdW5jdGlvbih0KXtyZXR1cm4gdC5nZXRQYXJhbShcImxpbmVoZWlnaHRfZm9ybWF0c1wiLFwiMSAxLjEgMS4yIDEuMyAxLjQgMS41IDJcIixcInN0cmluZ1wiKS5zcGxpdChcIiBcIil9LGhhc2g6ZnVuY3Rpb24odCl7cmV0dXJuIHI9W1wiZml4ZWRcIixcInJlbGF0aXZlXCIsXCJlbXB0eVwiXSx2dC5mcm9tKHFfLmV4ZWModCkpLmJpbmQoZnVuY3Rpb24odCl7dmFyIGU9TnVtYmVyKHRbMV0pLG49dFsyXSxvPW47cmV0dXJuIGQocixmdW5jdGlvbih0KXtyZXR1cm4gZChZX1t0XSxmdW5jdGlvbih0KXtyZXR1cm4gbz09PXR9KX0pP3Z0LnNvbWUoe3ZhbHVlOmUsdW5pdDpufSk6dnQubm9uZSgpfSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LnZhbHVlK3QudW5pdH0pLmdldE9yKHQpO3ZhciByfSxkaXNwbGF5Omgsd2F0Y2hlcjpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHQuZm9ybWF0dGVyLmZvcm1hdENoYW5nZWQoXCJsaW5laGVpZ2h0XCIsbiwhMSx7dmFsdWU6ZX0pLnVuYmluZH0sZ2V0Q3VycmVudDpmdW5jdGlvbih0KXtyZXR1cm4gdnQuZnJvbSh0LnF1ZXJ5Q29tbWFuZFZhbHVlKFwiTGluZUhlaWdodFwiKSl9LHNldEN1cnJlbnQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5leGVjQ29tbWFuZChcIkxpbmVIZWlnaHRcIiwhMSxlKX19LHpUPWZ1bmN0aW9uKHQpe3JldHVybnt0eXBlOlwic2VsZWN0aW9uXCIscm9vdDpNdC5mcm9tRG9tKHQuc2VsZWN0aW9uLmdldE5vZGUoKSl9fSxVVD17b25MdHI6ZnVuY3Rpb24oKXtyZXR1cm5bJGEsWGEsWWEscWEsS2EsSmEsY3Asc3AsTW0sQW0sQm0sRG1dfSxvblJ0bDpmdW5jdGlvbigpe3JldHVyblskYSxZYSxYYSxLYSxxYSxKYSxjcCxzcCxCbSxEbSxNbSxBbV19fSxqVD17dmFsaWduQ2VudHJlOltdLGFsaWduQ2VudHJlOltdLGFsaWduTGVmdDpbXCJ0b3gtcG9wLS1hbGlnbi1sZWZ0XCJdLGFsaWduUmlnaHQ6W1widG94LXBvcC0tYWxpZ24tcmlnaHRcIl0scmlnaHQ6W1widG94LXBvcC0tcmlnaHRcIl0sbGVmdDpbXCJ0b3gtcG9wLS1sZWZ0XCJdLGJvdHRvbTpbXCJ0b3gtcG9wLS1ib3R0b21cIl0sdG9wOltcInRveC1wb3AtLXRvcFwiXX0sV1Q9e3R5cGU6XCJzZXBhcmF0b3JcIn0sR1Q9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCh0KXtyZXR1cm57dGV4dDp0LnRleHQsaWNvbjp0Lmljb24sZGlzYWJsZWQ6dC5kaXNhYmxlZCxzaG9ydGN1dDp0LnNob3J0Y3V0fX12YXIgbjtpZih5KGUpKXJldHVybiBlO3N3aXRjaChlLnR5cGUpe2Nhc2VcInNlcGFyYXRvclwiOnJldHVybiBXVDtjYXNlXCJzdWJtZW51XCI6cmV0dXJuIGx0KGx0KHt0eXBlOlwibmVzdGVkbWVudWl0ZW1cIn0sdChlKSkse2dldFN1Ym1lbnVJdGVtczpmdW5jdGlvbigpe3ZhciB0PWUuZ2V0U3VibWVudUl0ZW1zKCk7cmV0dXJuIHkodCk/dDpCKHQsR1QpfX0pO2RlZmF1bHQ6cmV0dXJuIGx0KGx0KHt0eXBlOlwibWVudWl0ZW1cIn0sdChlKSkse29uQWN0aW9uOihuPWUub25BY3Rpb24sZnVuY3Rpb24oKXtyZXR1cm4gbigpfSl9KX19LFhUPVZvKFt7b2Zmc2V0OltcInhcIixcInlcIl19LHthYnNvbHV0ZTpbXCJ4XCIsXCJ5XCJdfSx7Zml4ZWQ6W1wieFwiLFwieVwiXX1dKSxZVD1YVC5vZmZzZXQscVQ9WFQuYWJzb2x1dGUsS1Q9WFQuZml4ZWQsSlQ9ZnVuY3Rpb24odCxlLGwsZixkKXt2YXIgbj1lLmdldFNuYXBQb2ludHModCk7cmV0dXJuIENUKG4sbCxmLGQpLm9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gUihuLGZ1bmN0aW9uKGUsbil7dmFyIHQsbyxyLGksdSxhLGMscz0odD1uLnNlbnNvcixuLnJhbmdlLmxlZnQsbi5yYW5nZS50b3AsaT1iVChsLG89ZixyPWQpLHU9YlQodCxvLHIpLGE9TWF0aC5hYnMoaS5sZWZ0LXUubGVmdCksYz1NYXRoLmFicyhpLnRvcC11LnRvcCksa24oYSxjKSk7cmV0dXJuIGUuZGVsdGFzLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm57ZGVsdGFzOnZ0LnNvbWUocyksc25hcDp2dC5zb21lKG4pfX0sZnVuY3Rpb24odCl7cmV0dXJuKHMubGVmdCtzLnRvcCkvMjw9KHQubGVmdCt0LnRvcCkvMj97ZGVsdGFzOnZ0LnNvbWUocyksc25hcDp2dC5zb21lKG4pfTplfSl9LHtkZWx0YXM6dnQubm9uZSgpLHNuYXA6dnQubm9uZSgpfSkuc25hcC5tYXAoZnVuY3Rpb24odCl7cmV0dXJue291dHB1dDp3VCh0Lm91dHB1dCxsLGYsZCksZXh0cmE6dC5leHRyYX19KX0pfSwkVD1mdW5jdGlvbih0LGUsbixvLHIpe3JldHVybiBDVChlLmdldFNuYXBQb2ludHModCksbixvLHIpfSxRVD1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxzbmFwVG86ZnVuY3Rpb24odCxlLG4sbyl7dmFyIHIsaSx1LGE9ZS5nZXRUYXJnZXQodC5lbGVtZW50KTtlLnJlcG9zaXRpb25UYXJnZXQmJihyPUllKGp0KHQuZWxlbWVudCkpLGk9VWsoYSksbWUoYSx4VCh7Y29vcmQ6d1QoKHU9bykub3V0cHV0LHUub3V0cHV0LHIsaSksZXh0cmE6dS5leHRyYX0uY29vcmQsMCxpKSkpfX0pLFpUPVwiZGF0YS1pbml0aWFsLXotaW5kZXhcIix0RT1UbyhcInNuYXBzXCIsW21vKFwiZ2V0U25hcFBvaW50c1wiKSxKdShcIm9uU2Vuc29yXCIpLG1vKFwibGVmdEF0dHJcIiksbW8oXCJ0b3BBdHRyXCIpLEVvKFwibGF6eVZpZXdwb3J0XCIsRm4pLEVvKFwibXVzdFNuYXBcIiwhMSldKSxlRT1bRW8oXCJ1c2VGaXhlZFwiLFQpLG1vKFwiYmxvY2tlckNsYXNzXCIpLEVvKFwiZ2V0VGFyZ2V0XCIsaCksRW8oXCJvbkRyYWdcIixzdCksRW8oXCJyZXBvc2l0aW9uVGFyZ2V0XCIsITApLEVvKFwib25Ecm9wXCIsc3QpLElvKFwiZ2V0Qm91bmRzXCIsRm4pLHRFXSxuRT1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxnZXREYXRhOmZ1bmN0aW9uKHQpe3JldHVybiB2dC5mcm9tKGtuKHQueCx0LnkpKX0sZ2V0RGVsdGE6ZnVuY3Rpb24odCxlKXtyZXR1cm4ga24oZS5sZWZ0LXQubGVmdCxlLnRvcC10LnRvcCl9fSksb0U9VihWKFtdLGVFLCEwKSxbdGEoXCJkcmFnZ2VyXCIse2hhbmRsZXJzOkJUKE1UKX0pXSwhMSksckU9T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsZ2V0RGF0YTpmdW5jdGlvbih0KXt2YXIgZSxuPXQucmF3LnRvdWNoZXM7cmV0dXJuIDE9PT1uLmxlbmd0aD8oZT1uWzBdLHZ0LnNvbWUoa24oZS5jbGllbnRYLGUuY2xpZW50WSkpKTp2dC5ub25lKCl9LGdldERlbHRhOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGtuKGUubGVmdC10LmxlZnQsZS50b3AtdC50b3ApfX0pLGlFPVYoVihbXSxlRSwhMCksW3RhKFwiZHJhZ2dlclwiLHtoYW5kbGVyczpCVChGVCl9KV0sITEpLHVFPVYoVihbXSxlRSwhMCksW3RhKFwiZHJhZ2dlclwiLHtoYW5kbGVyczpCVChmdW5jdGlvbih0LGUsbil7cmV0dXJuIFYoVihbXSxNVCh0LGUsbiksITApLEZUKHQsZSxuKSwhMCl9KX0pXSwhMSksYUU9d2Eoe2JyYW5jaEtleTpcIm1vZGVcIixicmFuY2hlczpPYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxtb3VzZTpvRSx0b3VjaDppRSxtb3VzZU9yVG91Y2g6dUV9KSxuYW1lOlwiZHJhZ2dpbmdcIixhY3RpdmU6e2V2ZW50czpmdW5jdGlvbih0LGUpe3JldHVybiB0LmRyYWdnZXIuaGFuZGxlcnModCxlKX19LGV4dHJhOntzbmFwOmZ1bmN0aW9uKHQpe3JldHVybntzZW5zb3I6dC5zZW5zb3IscmFuZ2U6dC5yYW5nZSxvdXRwdXQ6dC5vdXRwdXQsZXh0cmE6dnQuZnJvbSh0LmV4dHJhKX19fSxzdGF0ZTpPYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxpbml0OmZ1bmN0aW9uKCl7dmFyIGk9dnQubm9uZSgpLGU9dnQubm9uZSgpLHQ9cnQoe30pO3JldHVybiB3dSh7cmVhZFN0YXRlOnQscmVzZXQ6ZnVuY3Rpb24oKXtpPXZ0Lm5vbmUoKSxlPXZ0Lm5vbmUoKX0sdXBkYXRlOmZ1bmN0aW9uKHIsdCl7cmV0dXJuIHIuZ2V0RGF0YSh0KS5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiBlPXIsbj10LG89aS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIGUuZ2V0RGVsdGEodCxuKX0pLGk9dnQuc29tZShuKSxvO3ZhciBlLG4sb30pfSxnZXRTdGFydERhdGE6ZnVuY3Rpb24oKXtyZXR1cm4gZX0sc2V0U3RhcnREYXRhOmZ1bmN0aW9uKHQpe2U9dnQuc29tZSh0KX19KX19KSxhcGlzOlFUfSk7ZnVuY3Rpb24gY0UodCxlLG4pe3ZhciBvLHIsaSx1LGEsYyxzPU10LmZyb21Eb20odC5nZXRDb250YWluZXIoKSk7Sigobz10LHI9ZSxpPW4sdT14ZShzKSxhPUNlKHMpLChjPXt9KS5oZWlnaHQ9dF8odStyLnRvcCxkaChvKSxnaChvKSksaT09PVZULkJvdGgmJihjLndpZHRoPXRfKGErci5sZWZ0LGZoKG8pLG1oKG8pKSksYyksZnVuY3Rpb24odCxlKXtyZXR1cm4gZmUocyxlLFpPKHQpKSwwfSksdC5maXJlKFwiUmVzaXplRWRpdG9yXCIpfWZ1bmN0aW9uIHNFKHQsZSxuLG8pe3JldHVybiBjRSh0LGtuKDIwKm4sMjAqbyksZSksdnQuc29tZSghMCl9ZnVuY3Rpb24gbEUodCxlKXt2YXIgbixvLHIsaSx1LGEsYyxzLGwsZixkLG0sZyxwLGgsdjtyZXR1cm57ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1zdGF0dXNiYXJcIl19LGNvbXBvbmVudHM6KHY9W10sdC5nZXRQYXJhbShcImVsZW1lbnRwYXRoXCIsITAsXCJib29sZWFuXCIpJiZ2LnB1c2goKGc9dCxoPWUsKHA9e30pLmRlbGltaXRlcnx8KHAuZGVsaW1pdGVyPVwiXFx4YmJcIikse2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtc3RhdHVzYmFyX19wYXRoXCJdLGF0dHJpYnV0ZXM6e3JvbGU6XCJuYXZpZ2F0aW9uXCJ9fSxiZWhhdmlvdXJzOmVjKFtGZy5jb25maWcoe21vZGU6XCJmbG93XCIsc2VsZWN0b3I6XCJkaXZbcm9sZT1idXR0b25dXCJ9KSxnZC5jb25maWcoe2Rpc2FibGVkOmguaXNEaXNhYmxlZH0pLHB2KCkscHkuY29uZmlnKHt9KSxSZy5jb25maWcoe30pLG1tKFwiZWxlbWVudFBhdGhFdmVudHNcIixbb3UoZnVuY3Rpb24ocix0KXtnLnNob3J0Y3V0cy5hZGQoXCJhbHQrRjExXCIsXCJmb2N1cyBzdGF0dXNiYXIgZWxlbWVudHBhdGhcIixmdW5jdGlvbigpe3JldHVybiBGZy5mb2N1c0luKHIpfSksZy5vbihcIk5vZGVDaGFuZ2VcIixmdW5jdGlvbih0KXt2YXIgZSxvLG49ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLG49dC5sZW5ndGg7MDxuLS07KXt2YXIgbz10W25dO2lmKDE9PT1vLm5vZGVUeXBlJiYhZnVuY3Rpb24odCl7aWYoMT09PXQubm9kZVR5cGUpe2lmKFwiQlJcIj09PXQubm9kZU5hbWV8fHQuZ2V0QXR0cmlidXRlKFwiZGF0YS1tY2UtYm9ndXNcIikpcmV0dXJuIDE7aWYoXCJib29rbWFya1wiPT09dC5nZXRBdHRyaWJ1dGUoXCJkYXRhLW1jZS10eXBlXCIpKXJldHVybiAxfX0obykpe3ZhciByPWcuZmlyZShcIlJlc29sdmVOYW1lXCIse25hbWU6by5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLHRhcmdldDpvfSk7aWYoci5pc0RlZmF1bHRQcmV2ZW50ZWQoKXx8ZS5wdXNoKHtuYW1lOnIubmFtZSxlbGVtZW50Om99KSxyLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWt9fXJldHVybiBlfSh0LnBhcmVudHMpOzA8bi5sZW5ndGg/Umcuc2V0KHIsKGU9QihufHxbXSxmdW5jdGlvbihlLHQpe3JldHVybiBmcC5za2V0Y2goe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtc3RhdHVzYmFyX19wYXRoLWl0ZW1cIl0sYXR0cmlidXRlczp7cm9sZTpcImJ1dHRvblwiLFwiZGF0YS1pbmRleFwiOnQsXCJ0YWItaW5kZXhcIjotMSxcImFyaWEtbGV2ZWxcIjp0KzF9LGlubmVySHRtbDplLm5hbWV9LGFjdGlvbjpmdW5jdGlvbih0KXtnLmZvY3VzKCksZy5zZWxlY3Rpb24uc2VsZWN0KGUuZWxlbWVudCksZy5ub2RlQ2hhbmdlZCgpfSxidXR0b25CZWhhdmlvdXJzOmVjKFskdihoLmlzRGlzYWJsZWQpLHB2KCldKX0pfSksbz17ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1zdGF0dXNiYXJfX3BhdGgtZGl2aWRlclwiXSxhdHRyaWJ1dGVzOntcImFyaWEtaGlkZGVuXCI6ITB9LGlubmVySHRtbDpcIiBcIitwLmRlbGltaXRlcitcIiBcIn19LFIoZS5zbGljZSgxKSxmdW5jdGlvbih0LGUpe3ZhciBuPXQ7cmV0dXJuIG4ucHVzaChvKSxuLnB1c2goZSksbn0sW2VbMF1dKSkpOlJnLnNldChyLFtdKX0pfSldKV0pLGNvbXBvbmVudHM6W119KSksdC5oYXNQbHVnaW4oXCJ3b3JkY291bnRcIikmJnYucHVzaCgoZj10LGQ9ZSxmcC5za2V0Y2goe2RvbTp7dGFnOlwiYnV0dG9uXCIsY2xhc3NlczpbXCJ0b3gtc3RhdHVzYmFyX193b3JkY291bnRcIl19LGNvbXBvbmVudHM6W10sYnV0dG9uQmVoYXZpb3VyczplYyhbJHYoZC5pc0Rpc2FibGVkKSxwdigpLHB5LmNvbmZpZyh7fSksUmcuY29uZmlnKHt9KSxEZi5jb25maWcoe3N0b3JlOnttb2RlOlwibWVtb3J5XCIsaW5pdGlhbFZhbHVlOnttb2RlOlwid29yZHNcIixjb3VudDp7d29yZHM6MCxjaGFyYWN0ZXJzOjB9fX19KSxtbShcIndvcmRjb3VudC1ldmVudHNcIixbdXUoZnVuY3Rpb24odCl7dmFyIGU9RGYuZ2V0VmFsdWUodCksbj1cIndvcmRzXCI9PT1lLm1vZGU/XCJjaGFyYWN0ZXJzXCI6XCJ3b3Jkc1wiO0RmLnNldFZhbHVlKHQse21vZGU6bixjb3VudDplLmNvdW50fSksYih0LGUuY291bnQsbil9KSxvdShmdW5jdGlvbihuKXtmLm9uKFwid29yZENvdW50VXBkYXRlXCIsZnVuY3Rpb24odCl7dmFyIGU9RGYuZ2V0VmFsdWUobikubW9kZTtEZi5zZXRWYWx1ZShuLHttb2RlOmUsY291bnQ6dC53b3JkQ291bnR9KSxiKG4sdC53b3JkQ291bnQsZSl9KX0pXSldKSxldmVudE9yZGVyOigobT17fSlbSWkoKV09W1wiZGlzYWJsaW5nXCIsXCJhbGxveS5iYXNlLmJlaGF2aW91clwiLFwid29yZGNvdW50LWV2ZW50c1wiXSxtKX0pKSksdC5nZXRQYXJhbShcImJyYW5kaW5nXCIsITAsXCJib29sZWFuXCIpJiZ2LnB1c2goe2RvbTp7dGFnOlwic3BhblwiLGNsYXNzZXM6W1widG94LXN0YXR1c2Jhcl9fYnJhbmRpbmdcIl0saW5uZXJIdG1sOic8YSBocmVmPVwiaHR0cHM6Ly93d3cudGlueS5jbG91ZC8/dXRtX2NhbXBhaWduPWVkaXRvcl9yZWZlcnJhbCZhbXA7dXRtX21lZGl1bT1wb3dlcmVkYnkmYW1wO3V0bV9zb3VyY2U9dGlueW1jZSZhbXA7dXRtX2NvbnRlbnQ9djVcIiByZWw9XCJub29wZW5lclwiIHRhcmdldD1cIl9ibGFua1wiIHRhYmluZGV4PVwiLTFcIiBhcmlhLWxhYmVsPVwiJysobD1kcC50cmFuc2xhdGUoW1wiUG93ZXJlZCBieSB7MH1cIixcIlRpbnlcIl0pKSsnXCI+JytsK1wiPC9hPlwifX0pLG49MDx2Lmxlbmd0aD9be2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtc3RhdHVzYmFyX190ZXh0LWNvbnRhaW5lclwiXX0sY29tcG9uZW50czp2fV06W10saT1lLGE9ISh1PXI9dCkuaGFzUGx1Z2luKFwiYXV0b3Jlc2l6ZVwiKSxvPShzPSExPT09KGM9dS5nZXRQYXJhbShcInJlc2l6ZVwiLGEpKT9WVC5Ob25lOlwiYm90aFwiPT09Yz9WVC5Cb3RoOlZULlZlcnRpY2FsKT09PVZULk5vbmU/dnQubm9uZSgpOnZ0LnNvbWUoWG0oXCJyZXNpemUtaGFuZGxlXCIse3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LXN0YXR1c2Jhcl9fcmVzaXplLWhhbmRsZVwiXSxhdHRyaWJ1dGVzOnt0aXRsZTppLnRyYW5zbGF0ZShcIlJlc2l6ZVwiKX0sYmVoYXZpb3VyczpbYUUuY29uZmlnKHttb2RlOlwibW91c2VcIixyZXBvc2l0aW9uVGFyZ2V0OiExLG9uRHJhZzpmdW5jdGlvbih0LGUsbil7cmV0dXJuIGNFKHIsbixzKX0sYmxvY2tlckNsYXNzOlwidG94LWJsb2NrZXJcIn0pLEZnLmNvbmZpZyh7bW9kZTpcInNwZWNpYWxcIixvbkxlZnQ6ZnVuY3Rpb24oKXtyZXR1cm4gc0UocixzLC0xLDApfSxvblJpZ2h0OmZ1bmN0aW9uKCl7cmV0dXJuIHNFKHIscywxLDApfSxvblVwOmZ1bmN0aW9uKCl7cmV0dXJuIHNFKHIscywwLC0xKX0sb25Eb3duOmZ1bmN0aW9uKCl7cmV0dXJuIHNFKHIscywwLDEpfX0pLHB5LmNvbmZpZyh7fSksVmcuY29uZmlnKHt9KV19LGkuaWNvbnMpKSxuLmNvbmNhdChvLnRvQXJyYXkoKSkpfTtmdW5jdGlvbiBiKHQsZSxuKXtyZXR1cm4gUmcuc2V0KHQsW3JpKGQudHJhbnNsYXRlKFtcInswfSBcIituLGVbbl1dKSldKX19ZnVuY3Rpb24gZkUoZCl7ZnVuY3Rpb24gbSgpe3JldHVybiBpLmJpbmQoRk8uZ2V0SGVhZGVyKX1mdW5jdGlvbiBnKCl7cmV0dXJuIE5uLnZhbHVlKHkpfWZ1bmN0aW9uIHAoKXtyZXR1cm4gaS5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiBGTy5nZXRUaHJvYmJlcih0KX0pLmdldE9yRGllKFwiQ291bGQgbm90IGZpbmQgdGhyb2JiZXIgZWxlbWVudFwiKX12YXIgdCxlLG4sbyxyPWQuaW5saW5lLGg9cj9QXzpOXyx2PWR2KGQpP3ExOlYxLGk9dnQubm9uZSgpLHU9bG4oKSxhPXUuYnJvd3Nlci5pc0lFKCk/W1widG94LXBsYXRmb3JtLWllXCJdOltdLGM9dS5kZXZpY2VUeXBlLmlzVG91Y2goKT9bXCJ0b3gtcGxhdGZvcm0tdG91Y2hcIl06W10scz1hdihkKSxsPWx2KGQpLGY9ZHAuaXNSdGwoKT97YXR0cmlidXRlczp7ZGlyOlwicnRsXCJ9fTp7fSxiPXthdHRyaWJ1dGVzOigodD17fSlbbnNdPXM/T2MuQm90dG9tVG9Ub3A6T2MuVG9wVG9Cb3R0b20sdCl9LHk9VHUoKGU9enQoYm4oKSxsKSYmXCJncmlkXCI9PT1nZShsLFwiZGlzcGxheVwiKSxuPXtkb206bHQoe3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94XCIsXCJ0b3gtc2lsdmVyLXNpbmtcIixcInRveC10aW55bWNlLWF1eFwiXS5jb25jYXQoYSkuY29uY2F0KGMpfSxmKSxiZWhhdmlvdXJzOmVjKFtmZi5jb25maWcoe3VzZUZpeGVkOmZ1bmN0aW9uKCl7cmV0dXJuIHYuaXNEb2NrZWQobSl9fSldKX0sbz17ZG9tOntzdHlsZXM6e3dpZHRoOmRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGgrXCJweFwifX0sZXZlbnRzOm51KFtDcihXaSgpLGZ1bmN0aW9uKCl7ZmUoSi5lbGVtZW50LFwid2lkdGhcIixkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRoK1wicHhcIil9KV0pfSxZbyhuLGU/bzp7fSkpKSx4PUhtKHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWFuY2hvcmJhclwiXX19KSx3PUxrKHksZCxmdW5jdGlvbigpe3JldHVybiBpLmJpbmQoZnVuY3Rpb24odCl7cmV0dXJuIHguZ2V0T3B0KHQpfSkuZ2V0T3JEaWUoXCJDb3VsZCBub3QgZmluZCBhIGFuY2hvciBiYXIgZWxlbWVudFwiKX0pLFM9Rk8ucGFydHMubWVudWJhcih7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1tZW51YmFyXCJdfSxiYWNrc3RhZ2U6dyxvbkVzY2FwZTpmdW5jdGlvbigpe2QuZm9jdXMoKX19KSxrPWl2KGQpLEM9Rk8ucGFydHMudG9vbGJhcihsdCh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC10b29sYmFyXCJdfSxnZXRTaW5rOmcscHJvdmlkZXJzOncuc2hhcmVkLnByb3ZpZGVycyxvbkVzY2FwZTpmdW5jdGlvbigpe2QuZm9jdXMoKX0sdHlwZTprLGxhenlUb29sYmFyOmZ1bmN0aW9uKCl7cmV0dXJuIGkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gRk8uZ2V0VG9vbGJhcih0KX0pLmdldE9yRGllKFwiQ291bGQgbm90IGZpbmQgbW9yZSB0b29sYmFyIGVsZW1lbnRcIil9LGxhenlIZWFkZXI6ZnVuY3Rpb24oKXtyZXR1cm4gbSgpLmdldE9yRGllKFwiQ291bGQgbm90IGZpbmQgaGVhZGVyIGVsZW1lbnRcIil9fSxiKSksTz1GTy5wYXJ0c1tcIm11bHRpcGxlLXRvb2xiYXJcIl0oe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtdG9vbGJhci1vdmVybG9yZFwiXX0scHJvdmlkZXJzOncuc2hhcmVkLnByb3ZpZGVycyxvbkVzY2FwZTpmdW5jdGlvbigpe2QuZm9jdXMoKX0sdHlwZTprfSksXz1GTy5wYXJ0cy5zb2NrZXQoe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtZWRpdC1hcmVhXCJdfX0pLFQ9Rk8ucGFydHMuc2lkZWJhcih7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1zaWRlYmFyXCJdfX0pLEU9Rk8ucGFydHMudGhyb2JiZXIoe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtdGhyb2JiZXJcIl19LGJhY2tzdGFnZTp3fSksRD1kLmdldFBhcmFtKFwic3RhdHVzYmFyXCIsITAsXCJib29sZWFuXCIpJiYhcj92dC5zb21lKGxFKGQsdy5zaGFyZWQucHJvdmlkZXJzKSk6dnQubm9uZSgpLEE9e2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtc2lkZWJhci13cmFwXCJdfSxjb21wb25lbnRzOltfLFRdfSxCPXJ2KGQpLE09aGgoZCksRj1waChkKSxJPUZPLnBhcnRzLmhlYWRlcih7ZG9tOmx0KHt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1lZGl0b3ItaGVhZGVyXCJdfSxiKSxjb21wb25lbnRzOmZ0KFtGP1tTXTpbXSxCP1tPXTpNP1tDXTpbXSxzdihkKT9bXTpbeC5hc1NwZWMoKV1dKSxzdGlja3k6ZHYoZCksZWRpdG9yOmQsc2hhcmVkQmFja3N0YWdlOncuc2hhcmVkfSksUj1mdChbcz9bXTpbSV0scj9bXTpbQV0scz9bSV06W11dKSxOPWZ0KFtbe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtZWRpdG9yLWNvbnRhaW5lclwiXX0sY29tcG9uZW50czpSfV0scj9bXTpELnRvQXJyYXkoKSxbRV1dKSxQPWZ2KGQpLFY9bHQobHQoe3JvbGU6XCJhcHBsaWNhdGlvblwifSxkcC5pc1J0bCgpP3tkaXI6XCJydGxcIn06e30pLFA/e1wiYXJpYS1oaWRkZW5cIjpcInRydWVcIn06e30pLEg9VHUoRk8uc2tldGNoKHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94XCIsXCJ0b3gtdGlueW1jZVwiXS5jb25jYXQocj9bXCJ0b3gtdGlueW1jZS1pbmxpbmVcIl06W10pLmNvbmNhdChzP1tcInRveC10aW55bWNlLS10b29sYmFyLWJvdHRvbVwiXTpbXSkuY29uY2F0KGMpLmNvbmNhdChhKSxzdHlsZXM6bHQoe3Zpc2liaWxpdHk6XCJoaWRkZW5cIn0sUD97b3BhY2l0eTpcIjBcIixib3JkZXI6XCIwXCJ9Ont9KSxhdHRyaWJ1dGVzOlZ9LGNvbXBvbmVudHM6TixiZWhhdmlvdXJzOmVjKFtwdigpLGdkLmNvbmZpZyh7ZGlzYWJsZUNsYXNzOlwidG94LXRpbnltY2UtLWRpc2FibGVkXCJ9KSxGZy5jb25maWcoe21vZGU6XCJjeWNsaWNcIixzZWxlY3RvcjpcIi50b3gtbWVudWJhciwgLnRveC10b29sYmFyLCAudG94LXRvb2xiYXJfX3ByaW1hcnksIC50b3gtdG9vbGJhcl9fb3ZlcmZsb3ctLW9wZW4sIC50b3gtc2lkZWJhcl9fb3ZlcmZsb3ctLW9wZW4sIC50b3gtc3RhdHVzYmFyX19wYXRoLCAudG94LXN0YXR1c2Jhcl9fd29yZGNvdW50LCAudG94LXN0YXR1c2Jhcl9fYnJhbmRpbmcgYSwgLnRveC1zdGF0dXNiYXJfX3Jlc2l6ZS1oYW5kbGVcIn0pXSl9KSksaT12dC5zb21lKEgpO2Quc2hvcnRjdXRzLmFkZChcImFsdCtGOVwiLFwiZm9jdXMgbWVudWJhclwiLGZ1bmN0aW9uKCl7Rk8uZm9jdXNNZW51YmFyKEgpfSksZC5zaG9ydGN1dHMuYWRkKFwiYWx0K0YxMFwiLFwiZm9jdXMgdG9vbGJhclwiLGZ1bmN0aW9uKCl7Rk8uZm9jdXNUb29sYmFyKEgpfSksZC5hZGRDb21tYW5kKFwiVG9nZ2xlVG9vbGJhckRyYXdlclwiLGZ1bmN0aW9uKCl7Rk8udG9nZ2xlVG9vbGJhckRyYXdlcihIKX0pLGQuYWRkUXVlcnlTdGF0ZUhhbmRsZXIoXCJUb2dnbGVUb29sYmFyRHJhd2VyXCIsZnVuY3Rpb24oKXtyZXR1cm4gRk8uaXNUb29sYmFyRHJhd2VyVG9nZ2xlZChIKX0pO3ZhciBMLHosVSxqLFcsRyxYLFkscSxLPWV5KEgpLEo9ZXkoeSk7ZnVuY3Rpb24gJCgpe3ZhciB0LGUsbixvLHIsaSx1PVpPKChvPXNoKG49ZT1kKSxyPWRoKG4pLGk9Z2gobiksUU8obykubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0Xyh0LHIsaSl9KS5nZXRPcihzaChlKSkpKSxhPVpPKGVfKHQ9ZCkuZ2V0T3IobGgodCkpKTtyZXR1cm4gZC5pbmxpbmV8fChoZShcImRpdlwiLFwid2lkdGhcIixhKSYmZmUoSC5lbGVtZW50LFwid2lkdGhcIixhKSxoZShcImRpdlwiLFwiaGVpZ2h0XCIsdSk/ZmUoSC5lbGVtZW50LFwiaGVpZ2h0XCIsdSk6ZmUoSC5lbGVtZW50LFwiaGVpZ2h0XCIsXCIyMDBweFwiKSksdX1yZXR1cm4gTD1kLHo9SyxVPUosaj1TYSgpLFc9cGMoaixcInRvdWNoc3RhcnRcIix0dCksRz1wYyhqLFwidG91Y2htb3ZlXCIsZnVuY3Rpb24odCl7cmV0dXJuIFEoemkoKSx0KX0pLFg9cGMoaixcInRvdWNoZW5kXCIsZnVuY3Rpb24odCl7cmV0dXJuIFEoVWkoKSx0KX0pLFk9cGMoaixcIm1vdXNlZG93blwiLHR0KSxxPXBjKGosXCJtb3VzZXVwXCIsZnVuY3Rpb24odCl7MD09PXQucmF3LmJ1dHRvbiYmWih3ZigpLHt0YXJnZXQ6dC50YXJnZXR9KX0pLEwub24oXCJQb3N0UmVuZGVyXCIsZnVuY3Rpb24oKXtMLm9uKFwiY2xpY2tcIixldCksTC5vbihcInRhcFwiLGV0KSxMLm9uKFwibW91c2V1cFwiLG50KSxMLm9uKFwibW91c2Vkb3duXCIsb3QpLEwub24oXCJTY3JvbGxXaW5kb3dcIixydCksTC5vbihcIlJlc2l6ZVdpbmRvd1wiLGl0KSxMLm9uKFwiUmVzaXplRWRpdG9yXCIsdXQpLEwub24oXCJBZnRlclByb2dyZXNzU3RhdGVcIixhdCksTC5vbihcIkRpc21pc3NQb3B1cHNcIixjdCl9KSxMLm9uKFwicmVtb3ZlXCIsZnVuY3Rpb24oKXtMLm9mZihcImNsaWNrXCIsZXQpLEwub2ZmKFwidGFwXCIsZXQpLEwub2ZmKFwibW91c2V1cFwiLG50KSxMLm9mZihcIm1vdXNlZG93blwiLG90KSxMLm9mZihcIlNjcm9sbFdpbmRvd1wiLHJ0KSxMLm9mZihcIlJlc2l6ZVdpbmRvd1wiLGl0KSxMLm9mZihcIlJlc2l6ZUVkaXRvclwiLHV0KSxMLm9mZihcIkFmdGVyUHJvZ3Jlc3NTdGF0ZVwiLGF0KSxMLm9mZihcIkRpc21pc3NQb3B1cHNcIixjdCksWS51bmJpbmQoKSxXLnVuYmluZCgpLEcudW5iaW5kKCksWC51bmJpbmQoKSxxLnVuYmluZCgpfSksTC5vbihcImRldGFjaFwiLGZ1bmN0aW9uKCl7enMoeiksenMoVSksei5kZXN0cm95KCksVS5kZXN0cm95KCl9KSx7bW90aGVyc2hpcDpLLHVpTW90aGVyc2hpcDpKLGJhY2tzdGFnZTp3LHJlbmRlclVJOmZ1bmN0aW9uKCl7dmFyIG8scjt2LnNldHVwKGQsdy5zaGFyZWQsbSksZVQoZCx3KSxtVChkLGcsdykscj0obz1kKS51aS5yZWdpc3RyeS5nZXRBbGwoKS5zaWRlYmFycyxTdChDdChyKSxmdW5jdGlvbihlKXtmdW5jdGlvbiBuKCl7cmV0dXJuIG10KHZ0LmZyb20oby5xdWVyeUNvbW1hbmRWYWx1ZShcIlRvZ2dsZVNpZGViYXJcIikpLGUpfXZhciB0PXJbZV07by51aS5yZWdpc3RyeS5hZGRUb2dnbGVCdXR0b24oZSx7aWNvbjp0Lmljb24sdG9vbHRpcDp0LnRvb2x0aXAsb25BY3Rpb246ZnVuY3Rpb24odCl7by5leGVjQ29tbWFuZChcIlRvZ2dsZVNpZGViYXJcIiwhMSxlKSx0LnNldEFjdGl2ZShuKCkpfSxvblNldHVwOmZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gdC5zZXRBY3RpdmUobigpKX1yZXR1cm4gby5vbihcIlRvZ2dsZVNpZGViYXJcIixlKSxmdW5jdGlvbigpe28ub2ZmKFwiVG9nZ2xlU2lkZWJhclwiLGUpfX19KX0pLFNDKGQscCx3LnNoYXJlZCksZHQoZC5nZXRQYXJhbShcInRvb2xiYXJfZ3JvdXBzXCIse30sXCJvYmplY3RcIiksZnVuY3Rpb24odCxlKXtkLnVpLnJlZ2lzdHJ5LmFkZEdyb3VwVG9vbGJhckJ1dHRvbihlLHQpfSk7dmFyIHQsZT1kLnVpLnJlZ2lzdHJ5LmdldEFsbCgpLG49ZS5idXR0b25zLGk9ZS5tZW51SXRlbXMsdT1lLmNvbnRleHRUb29sYmFycyxhPWUuc2lkZWJhcnMsYz12aChkKSxzPXttZW51SXRlbXM6aSxtZW51czoodD1kLmdldFBhcmFtKFwibWVudVwiKSk/ZHQodCxmdW5jdGlvbih0KXtyZXR1cm4gbHQobHQoe30sdCkse2l0ZW1zOnQuaXRlbXN9KX0pOnt9LG1lbnViYXI6ZC5nZXRQYXJhbShcIm1lbnViYXJcIiksdG9vbGJhcjpjLmdldE9yVGh1bmsoZnVuY3Rpb24oKXtyZXR1cm4gZC5nZXRQYXJhbShcInRvb2xiYXJcIiwhMCl9KSxhbGxvd1Rvb2xiYXJHcm91cHM6az09PWJoLmZsb2F0aW5nLGJ1dHRvbnM6bixzaWRlYmFyOmF9O21fKGQsdSx5LHtiYWNrc3RhZ2U6d30pLFBUKGQseSk7dmFyIGw9ZC5nZXRFbGVtZW50KCksZj0kKCk7cmV0dXJuIGgucmVuZGVyKGQse21vdGhlcnNoaXA6Syx1aU1vdGhlcnNoaXA6SixvdXRlckNvbnRhaW5lcjpIfSxzLHcse3RhcmdldE5vZGU6bCxoZWlnaHQ6Zn0pfSxnZXRVaTpmdW5jdGlvbigpe3JldHVybntjaGFubmVsczp7YnJvYWRjYXN0QWxsOkouYnJvYWRjYXN0LGJyb2FkY2FzdE9uOkouYnJvYWRjYXN0T24scmVnaXN0ZXI6c3R9fX19O2Z1bmN0aW9uIFEoZSxuKXtTdChbeixVXSxmdW5jdGlvbih0KXt0LmJyb2FkY2FzdEV2ZW50KGUsbil9KX1mdW5jdGlvbiBaKGUsbil7U3QoW3osVV0sZnVuY3Rpb24odCl7dC5icm9hZGNhc3RPbihbZV0sbil9KX1mdW5jdGlvbiB0dCh0KXtyZXR1cm4gWih5ZigpLHt0YXJnZXQ6dC50YXJnZXR9KX1mdW5jdGlvbiBldCh0KXtyZXR1cm4gWih5ZigpLHt0YXJnZXQ6TXQuZnJvbURvbSh0LnRhcmdldCl9KX1mdW5jdGlvbiBudCh0KXswPT09dC5idXR0b24mJlood2YoKSx7dGFyZ2V0Ok10LmZyb21Eb20odC50YXJnZXQpfSl9ZnVuY3Rpb24gb3QoKXtTdChMLmVkaXRvck1hbmFnZXIuZ2V0KCksZnVuY3Rpb24odCl7TCE9PXQmJnQuZmlyZShcIkRpc21pc3NQb3B1cHNcIix7cmVsYXRlZFRhcmdldDpMfSl9KX1mdW5jdGlvbiBydCh0KXtyZXR1cm4gUShqaSgpLE1jKHQpKX1mdW5jdGlvbiBpdCh0KXtaKHhmKCkse30pLFEoV2koKSxNYyh0KSl9ZnVuY3Rpb24gdXQoKXtyZXR1cm4gWih4ZigpLHt9KX1mdW5jdGlvbiBhdCh0KXt0LnN0YXRlJiZaKHlmKCkse3RhcmdldDpNdC5mcm9tRG9tKEwuZ2V0Q29udGFpbmVyKCkpfSl9ZnVuY3Rpb24gY3QodCl7Wih5ZigpLHt0YXJnZXQ6TXQuZnJvbURvbSh0LnJlbGF0ZWRUYXJnZXQuZ2V0Q29udGFpbmVyKCkpfSl9fWZ1bmN0aW9uIGRFKGUpe3JldHVybiBhcihcIml0ZW1zXCIsXCJpdGVtc1wiLGpuKCksZW8oaW8oZnVuY3Rpb24odCl7cmV0dXJuIGFvKFwiQ2hlY2tpbmcgaXRlbSBvZiBcIitlLEFELHQpLmZvbGQoZnVuY3Rpb24odCl7cmV0dXJuIE5uLmVycm9yKHVyKHQpKX0sZnVuY3Rpb24odCl7cmV0dXJuIE5uLnZhbHVlKHQpfSl9KSkpfWZ1bmN0aW9uIG1FKHQpe3JldHVybiB5KHQudHlwZSkmJnkodC5uYW1lKX1mdW5jdGlvbiBnRSh0KXtyZXR1cm57aW50ZXJuYWxEaWFsb2c6Y28oYW8oXCJkaWFsb2dcIixWRCx0KSksZGF0YVZhbGlkYXRvcjooZT1IKEYoekQodCksbUUpLGZ1bmN0aW9uKGUpe3JldHVybiB2dC5mcm9tKFVEW2UudHlwZV0pLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm5bXX0sZnVuY3Rpb24odCl7cmV0dXJuW2dvKGUubmFtZSx0KV19KX0pLCRvKGUpKSxpbml0aWFsRGF0YTp0LmluaXRpYWxEYXRhfTt2YXIgZX1mdW5jdGlvbiBwRSh0KXt2YXIgbj1bXSxvPXt9O3JldHVybiBKKHQsZnVuY3Rpb24odCxlKXt0LmZvbGQoZnVuY3Rpb24oKXtuLnB1c2goZSl9LGZ1bmN0aW9uKHQpe29bZV09dH0pfSksMDxuLmxlbmd0aD9Obi5lcnJvcihuKTpObi52YWx1ZShvKX1mdW5jdGlvbiBoRSh0LGUpe2ZlKHQsXCJoZWlnaHRcIixlK1wicHhcIiksbG4oKS5icm93c2VyLmlzSUUoKT92ZSh0LFwiZmxleC1iYXNpc1wiKTpmZSh0LFwiZmxleC1iYXNpc1wiLGUrXCJweFwiKX1mdW5jdGlvbiB2RSh0LGQsZSl7RnUodCwnW3JvbGU9XCJkaWFsb2dcIl0nKS5lYWNoKGZ1bmN0aW9uKGYpe0l1KGYsJ1tyb2xlPVwidGFibGlzdFwiXScpLmVhY2goZnVuY3Rpb24obCl7ZS5nZXQoKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIGZlKGQsXCJoZWlnaHRcIixcIjBcIiksZmUoZCxcImZsZXgtYmFzaXNcIixcIjBcIiksTWF0aC5taW4odCwobj1kLG89bCxyPUd0KGU9ZikuZG9tLGk9XCJmaXhlZFwiPT09Z2UoRnUoZSxcIi50b3gtZGlhbG9nLXdyYXBcIikuZ2V0T3IoZSksXCJwb3NpdGlvblwiKT9NYXRoLm1heChyLmNsaWVudEhlaWdodCx3aW5kb3cuaW5uZXJIZWlnaHQpOk1hdGgubWF4KHIub2Zmc2V0SGVpZ2h0LHIuc2Nyb2xsSGVpZ2h0KSx1PXhlKG4pLGE9bi5kb20ub2Zmc2V0TGVmdD49by5kb20ub2Zmc2V0TGVmdCtDZShvKT9NYXRoLm1heCh4ZShvKSx1KTp1LGM9cGFyc2VJbnQoZ2UoZSxcIm1hcmdpbi10b3BcIiksMTApfHwwLHM9cGFyc2VJbnQoZ2UoZSxcIm1hcmdpbi1ib3R0b21cIiksMTApfHwwLGktKHhlKGUpK2Mrcy1hKSkpO3ZhciBlLG4sbyxyLGksdSxhLGMsc30pLmVhY2goZnVuY3Rpb24odCl7aEUoZCx0KX0pfSl9KX1mdW5jdGlvbiBiRSh0KXtyZXR1cm4gSXUodCwnW3JvbGU9XCJ0YWJwYW5lbFwiXScpfWZ1bmN0aW9uIHlFKHQsbil7ZnVuY3Rpb24gbyh0KXt2YXIgZT1wRShEZi5nZXRWYWx1ZSh0KSkuZ2V0T3Ioe30pLG49aS5nZXQoKSxvPVlvKG4sZSk7aS5zZXQobyl9ZnVuY3Rpb24gcih0KXt2YXIgZT1pLmdldCgpO0RmLnNldFZhbHVlKHQsZSl9dmFyIHUsYSxpPVBvKHt9KSxjPVBvKG51bGwpLGU9Qih0LnRhYnMsZnVuY3Rpb24odCl7cmV0dXJue3ZhbHVlOnQubmFtZSxkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWRpYWxvZ19fYm9keS1uYXYtaXRlbVwiXSxpbm5lckh0bWw6bi5zaGFyZWQucHJvdmlkZXJzLnRyYW5zbGF0ZSh0LnRpdGxlKX0sdmlldzpmdW5jdGlvbigpe3JldHVybltuUy5za2V0Y2goZnVuY3Rpb24oZSl7cmV0dXJue2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtZm9ybVwiXX0sY29tcG9uZW50czpCKHQuaXRlbXMsZnVuY3Rpb24odCl7cmV0dXJuIGhrKGUsdCxuKX0pLGZvcm1CZWhhdmlvdXJzOmVjKFtGZy5jb25maWcoe21vZGU6XCJhY3ljbGljXCIsdXNlVGFic3RvcEF0Ok8ocDApfSksbW0oXCJUYWJWaWV3LmZvcm0uZXZlbnRzXCIsW291KHIpLHJ1KG8pXSksaWMuY29uZmlnKHtjaGFubmVsczpscihbe2tleTpRRCx2YWx1ZTp7b25SZWNlaXZlOm99fSx7a2V5OlpELHZhbHVlOntvblJlY2VpdmU6cn19XSl9KV0pfX0pXX19fSkscz0odT1lLGE9Z2MoKSx7ZXh0cmFFdmVudHM6W291KGZ1bmN0aW9uKHQpe3ZhciBvPXQuZWxlbWVudDtiRShvKS5lYWNoKGZ1bmN0aW9uKGUpe3ZhciBuO2ZlKGUsXCJ2aXNpYmlsaXR5XCIsXCJoaWRkZW5cIiksdC5nZXRTeXN0ZW0oKS5nZXRCeURvbShlKS50b09wdGlvbmFsKCkuZWFjaChmdW5jdGlvbih0KXt2YXIgbyxyLGk7WShHKChyPWUsaT10LEIobz11LGZ1bmN0aW9uKHQsZSl7Umcuc2V0KGksb1tlXS52aWV3KCkpO3ZhciBuPXIuZG9tLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO3JldHVybiBSZy5zZXQoaSxbXSksbi5oZWlnaHR9KSksZnVuY3Rpb24odCxlKXtyZXR1cm4gZTx0Py0xOnQ8ZT8xOjB9KSkuZm9sZChhLmNsZWFyLGEuc2V0KX0pLHZFKG8sZSxhKSx2ZShlLFwidmlzaWJpbGl0eVwiKSxuPXQsWSh1KS5lYWNoKGZ1bmN0aW9uKHQpe3JldHVybiAkRC5zaG93VGFiKG4sdC52YWx1ZSl9KSxscC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24oKXt2RShvLGUsYSl9KX0pfSksQ3IoV2koKSxmdW5jdGlvbih0KXt2YXIgZT10LmVsZW1lbnQ7YkUoZSkuZWFjaChmdW5jdGlvbih0KXt2RShlLHQsYSl9KX0pLENyKFR5LGZ1bmN0aW9uKHQsZSl7dmFyIHI9dC5lbGVtZW50O2JFKHIpLmVhY2goZnVuY3Rpb24oZSl7dmFyIHQ9T2EoZ24oZSkpO2ZlKGUsXCJ2aXNpYmlsaXR5XCIsXCJoaWRkZW5cIik7dmFyIG49cGUoZSxcImhlaWdodFwiKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHBhcnNlSW50KHQsMTApfSk7dmUoZSxcImhlaWdodFwiKSx2ZShlLFwiZmxleC1iYXNpc1wiKTt2YXIgbz1lLmRvbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ7bi5mb3JhbGwoZnVuY3Rpb24odCl7cmV0dXJuIHQ8b30pPyhhLnNldChvKSx2RShyLGUsYSkpOm4uZWFjaChmdW5jdGlvbih0KXtoRShlLHQpfSksdmUoZSxcInZpc2liaWxpdHlcIiksdC5lYWNoKGthKX0pfSldLHNlbGVjdEZpcnN0OiExfSk7cmV0dXJuICRELnNrZXRjaCh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1kaWFsb2dfX2JvZHlcIl19LG9uQ2hhbmdlVGFiOmZ1bmN0aW9uKHQsZSxuKXt2YXIgbz1EZi5nZXRWYWx1ZShlKTticih0LF95LHtuYW1lOm8sb2xkTmFtZTpjLmdldCgpfSksYy5zZXQobyl9LHRhYnM6ZSxjb21wb25lbnRzOlskRC5wYXJ0cy50YWJiYXIoe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtZGlhbG9nX19ib2R5LW5hdlwiXX0sY29tcG9uZW50czpbWUQucGFydHMudGFicyh7fSldLG1hcmtlcnM6e3RhYkNsYXNzOlwidG94LXRhYlwiLHNlbGVjdGVkQ2xhc3M6XCJ0b3gtZGlhbG9nX19ib2R5LW5hdi1pdGVtLS1hY3RpdmVcIn0sdGFiYmFyQmVoYXZpb3VyczplYyhbcHkuY29uZmlnKHt9KV0pfSksJEQucGFydHMudGFidmlldyh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1kaWFsb2dfX2JvZHktY29udGVudFwiXX19KV0sc2VsZWN0Rmlyc3Q6cy5zZWxlY3RGaXJzdCx0YWJTZWN0aW9uQmVoYXZpb3VyczplYyhbbW0oXCJ0YWJwYW5lbFwiLHMuZXh0cmFFdmVudHMpLEZnLmNvbmZpZyh7bW9kZTpcImFjeWNsaWNcIn0pLGNkLmNvbmZpZyh7ZmluZDpmdW5jdGlvbih0KXtyZXR1cm4gWSgkRC5nZXRWaWV3SXRlbXModCkpfX0pLERmLmNvbmZpZyh7c3RvcmU6e21vZGU6XCJtYW51YWxcIixnZXRWYWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdC5nZXRTeXN0ZW0oKS5icm9hZGNhc3RPbihbUURdLHt9KSxpLmdldCgpfSxzZXRWYWx1ZTpmdW5jdGlvbih0LGUpe2kuc2V0KGUpLHQuZ2V0U3lzdGVtKCkuYnJvYWRjYXN0T24oW1pEXSx7fSl9fX0pXSl9KX1mdW5jdGlvbiB4RSh0LGUscixuKXtyZXR1cm57ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1kaWFsb2dfX2NvbnRlbnQtanNcIl0sYXR0cmlidXRlczpsdChsdCh7fSxlLm1hcChmdW5jdGlvbih0KXtyZXR1cm57aWQ6dH19KS5nZXRPcih7fSkpLG4/e1wiYXJpYS1saXZlXCI6XCJwb2xpdGVcIn06e30pfSxjb21wb25lbnRzOltdLGJlaGF2aW91cnM6ZWMoW2NTKDApLGtfLmNvbmZpZyh7Y2hhbm5lbDpuQSx1cGRhdGVTdGF0ZTpmdW5jdGlvbih0LGUpe3JldHVybiB2dC5zb21lKHtpc1RhYlBhbmVsOmZ1bmN0aW9uKCl7cmV0dXJuXCJ0YWJwYW5lbFwiPT09ZS5ib2R5LnR5cGV9fSl9LHJlbmRlckNvbXBvbmVudHM6ZnVuY3Rpb24odCl7cmV0dXJuXCJ0YWJwYW5lbFwiIT09dC5ib2R5LnR5cGU/WyhuPXQuYm9keSxvPXIse2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtZGlhbG9nX19ib2R5XCJdfSxjb21wb25lbnRzOlt7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1kaWFsb2dfX2JvZHktY29udGVudFwiXX0sY29tcG9uZW50czpbKGU9SG0oblMuc2tldGNoKGZ1bmN0aW9uKGUpe3JldHVybntkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWZvcm1cIl0uY29uY2F0KG4uY2xhc3Nlcyl9LGNvbXBvbmVudHM6QihuLml0ZW1zLGZ1bmN0aW9uKHQpe3JldHVybiBoayhlLHQsbyl9KX19KSkpLmFzU3BlYygpXX1dLGJlaGF2aW91cnM6ZWMoW0ZnLmNvbmZpZyh7bW9kZTpcImFjeWNsaWNcIix1c2VUYWJzdG9wQXQ6TyhwMCl9KSxhUyhlKSxtUyhlLHtwb3N0cHJvY2VzczpmdW5jdGlvbih0KXtyZXR1cm4gcEUodCkuZm9sZChmdW5jdGlvbih0KXtyZXR1cm4gY29uc29sZS5lcnJvcih0KSx7fX0saCl9fSldKX0pXTpbeUUodC5ib2R5LHIpXTt2YXIgbixvLGV9LGluaXRpYWxEYXRhOnR9KV0pfX0oSFQ9VlQ9VlR8fHt9KVtIVC5Ob25lPTBdPVwiTm9uZVwiLEhUW0hULkJvdGg9MV09XCJCb3RoXCIsSFRbSFQuVmVydGljYWw9Ml09XCJWZXJ0aWNhbFwiO3ZhciB3RSxTRT1ydChbbW8oXCJsYXp5U2lua1wiKSx3byhcImRyYWdCbG9ja0NsYXNzXCIpLElvKFwiZ2V0Qm91bmRzXCIsRm4pLEVvKFwidXNlVGFic3RvcEF0XCIsRCksRW8oXCJldmVudE9yZGVyXCIse30pLFpzKFwibW9kYWxCZWhhdmlvdXJzXCIsW0ZnXSksJHUoXCJvbkV4ZWN1dGVcIiksWnUoXCJvbkVzY2FwZVwiKV0pLGtFPXtza2V0Y2g6aH0sQ0U9cnQoW1FmKHtuYW1lOlwiZHJhZ2hhbmRsZVwiLG92ZXJyaWRlczpmdW5jdGlvbih0LGUpe3JldHVybntiZWhhdmlvdXJzOmVjKFthRS5jb25maWcoe21vZGU6XCJtb3VzZVwiLGdldFRhcmdldDpmdW5jdGlvbih0KXtyZXR1cm4gRnUodCwnW3JvbGU9XCJkaWFsb2dcIl0nKS5nZXRPcih0KX0sYmxvY2tlckNsYXNzOnQuZHJhZ0Jsb2NrQ2xhc3MuZ2V0T3JEaWUobmV3IEVycm9yKFwiVGhlIGRyYWcgYmxvY2tlciBjbGFzcyB3YXMgbm90IHNwZWNpZmllZCBmb3IgYSBkaWFsb2cgd2l0aCBhIGRyYWcgaGFuZGxlOiBcXG5cIitKU09OLnN0cmluZ2lmeShlLG51bGwsMikpLm1lc3NhZ2UpLGdldEJvdW5kczp0LmdldERyYWdCb3VuZHN9KV0pfX19KSxKZih7c2NoZW1hOlttbyhcImRvbVwiKV0sbmFtZTpcInRpdGxlXCJ9KSxKZih7ZmFjdG9yeTprRSxzY2hlbWE6W21vKFwiZG9tXCIpXSxuYW1lOlwiY2xvc2VcIn0pLEpmKHtmYWN0b3J5OmtFLHNjaGVtYTpbbW8oXCJkb21cIildLG5hbWU6XCJib2R5XCJ9KSxRZih7ZmFjdG9yeTprRSxzY2hlbWE6W21vKFwiZG9tXCIpXSxuYW1lOlwiZm9vdGVyXCJ9KSwkZih7ZmFjdG9yeTp7c2tldGNoOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGx0KGx0KHt9LHQpLHtkb206ZS5kb20sY29tcG9uZW50czplLmNvbXBvbmVudHN9KX19LHNjaGVtYTpbRW8oXCJkb21cIix7dGFnOlwiZGl2XCIsc3R5bGVzOntwb3NpdGlvbjpcImZpeGVkXCIsbGVmdDpcIjBweFwiLHRvcDpcIjBweFwiLHJpZ2h0OlwiMHB4XCIsYm90dG9tOlwiMHB4XCJ9fSksRW8oXCJjb21wb25lbnRzXCIsW10pXSxuYW1lOlwiYmxvY2tlclwifSldKSxPRT1DbCh7bmFtZTpcIk1vZGFsRGlhbG9nXCIsY29uZmlnRmllbGRzOlNFKCkscGFydEZpZWxkczpDRSgpLGZhY3Rvcnk6ZnVuY3Rpb24oYSx0LGUscil7dmFyIG4saT1nYygpLG89SXIoXCJtb2RhbC1ldmVudHNcIiksdT1sdChsdCh7fSxhLmV2ZW50T3JkZXIpLCgobj17fSlbR2koKV09W29dLmNvbmNhdChhLmV2ZW50T3JkZXJbXCJhbGxveS5zeXN0ZW0uYXR0YWNoZWRcIl18fFtdKSxuKSk7cmV0dXJue3VpZDphLnVpZCxkb206YS5kb20sY29tcG9uZW50czp0LGFwaXM6e3Nob3c6ZnVuY3Rpb24odCl7aS5zZXQodCk7dmFyIGU9YS5sYXp5U2luayh0KS5nZXRPckRpZSgpLG49ci5ibG9ja2VyKCksbz1lLmdldFN5c3RlbSgpLmJ1aWxkKGx0KGx0KHt9LG4pLHtjb21wb25lbnRzOm4uY29tcG9uZW50cy5jb25jYXQoW0V1KHQpXSksYmVoYXZpb3VyczplYyhbVmcuY29uZmlnKHt9KSxtbShcImRpYWxvZy1ibG9ja2VyLWV2ZW50c1wiLFtBcihiaSgpLGZ1bmN0aW9uKCl7RmcuZm9jdXNJbih0KX0pXSldKX0pKTtOcyhlLG8pLEZnLmZvY3VzSW4odCl9LGhpZGU6ZnVuY3Rpb24oZSl7aS5jbGVhcigpLFl0KGUuZWxlbWVudCkuZWFjaChmdW5jdGlvbih0KXtlLmdldFN5c3RlbSgpLmdldEJ5RG9tKHQpLmVhY2goZnVuY3Rpb24odCl7VnModCl9KX0pfSxnZXRCb2R5OmZ1bmN0aW9uKHQpe3JldHVybiBnbCh0LGEsXCJib2R5XCIpfSxnZXRGb290ZXI6ZnVuY3Rpb24odCl7cmV0dXJuIGdsKHQsYSxcImZvb3RlclwiKX0sc2V0SWRsZTpmdW5jdGlvbih0KXtmTy51bmJsb2NrKHQpfSxzZXRCdXN5OmZ1bmN0aW9uKHQsZSl7Zk8uYmxvY2sodCxlKX19LGV2ZW50T3JkZXI6dSxkb21Nb2RpZmljYXRpb246e2F0dHJpYnV0ZXM6e3JvbGU6XCJkaWFsb2dcIixcImFyaWEtbW9kYWxcIjpcInRydWVcIn19LGJlaGF2aW91cnM6ZWwoYS5tb2RhbEJlaGF2aW91cnMsW1JnLmNvbmZpZyh7fSksRmcuY29uZmlnKHttb2RlOlwiY3ljbGljXCIsb25FbnRlcjphLm9uRXhlY3V0ZSxvbkVzY2FwZTphLm9uRXNjYXBlLHVzZVRhYnN0b3BBdDphLnVzZVRhYnN0b3BBdH0pLGZPLmNvbmZpZyh7Z2V0Um9vdDppLmdldH0pLG1tKG8sW291KGZ1bmN0aW9uKHQpe3ZhciBlLG4sbyxyPXQuZWxlbWVudCxpPWdsKHQsYSxcInRpdGxlXCIpLmVsZW1lbnQsdT11ZShyLFwiaWRcIikuZm9sZChmdW5jdGlvbigpe3ZhciB0PUlyKFwiZGlhbG9nLWxhYmVsXCIpO3JldHVybiBvZShpLFwiaWRcIix0KSx0fSxoKTtvZShyLFwiYXJpYS1sYWJlbGxlZGJ5XCIsdSksZT10LmVsZW1lbnQsbj1nbCh0LGEsXCJib2R5XCIpLmVsZW1lbnQsbz12dC5mcm9tKGllKGUsXCJpZFwiKSkuZm9sZChmdW5jdGlvbigpe3ZhciB0PUlyKFwiZGlhbG9nLWRlc2NyaWJlXCIpO3JldHVybiBvZShuLFwiaWRcIix0KSx0fSxoKSxvZShlLFwiYXJpYS1kZXNjcmliZWRieVwiLG8pfSldKV0pfX0sYXBpczp7c2hvdzpmdW5jdGlvbih0LGUpe3Quc2hvdyhlKX0saGlkZTpmdW5jdGlvbih0LGUpe3QuaGlkZShlKX0sZ2V0Qm9keTpmdW5jdGlvbih0LGUpe3JldHVybiB0LmdldEJvZHkoZSl9LGdldEZvb3RlcjpmdW5jdGlvbih0LGUpe3JldHVybiB0LmdldEZvb3RlcihlKX0sc2V0QnVzeTpmdW5jdGlvbih0LGUsbil7dC5zZXRCdXN5KGUsbil9LHNldElkbGU6ZnVuY3Rpb24odCxlKXt0LnNldElkbGUoZSl9fX0pLF9FPSRvKFtwbyhcInR5cGVcIikscG8oXCJuYW1lXCIpXS5jb25jYXQoemgpKSxURT1ucixFRT1bYXIoXCJuYW1lXCIsXCJuYW1lXCIsV24oZnVuY3Rpb24oKXtyZXR1cm4gSXIoXCJidXR0b24tbmFtZVwiKX0pLGVyKSxDbyhcImljb25cIiksTW8oXCJhbGlnblwiLFwiZW5kXCIsW1wic3RhcnRcIixcImVuZFwiXSksRm8oXCJwcmltYXJ5XCIsITEpLEZvKFwiZGlzYWJsZWRcIiwhMSldLERFPVYoVihbXSxFRSwhMCksW3BvKFwidGV4dFwiKV0sITEpLEFFPVYoW2hvKFwidHlwZVwiLFtcInN1Ym1pdFwiLFwiY2FuY2VsXCIsXCJjdXN0b21cIl0pXSxERSwhMCksQkU9bG8oXCJ0eXBlXCIse3N1Ym1pdDpBRSxjYW5jZWw6QUUsY3VzdG9tOkFFLG1lbnU6VihbaG8oXCJ0eXBlXCIsW1wibWVudVwiXSksQ28oXCJ0ZXh0XCIpLENvKFwidG9vbHRpcFwiKSxDbyhcImljb25cIikseG8oXCJpdGVtc1wiLF9FKV0sRUUsITApfSksTUU9W3BvKFwidHlwZVwiKSxwbyhcInRleHRcIiksaG8oXCJsZXZlbFwiLFtcImluZm9cIixcIndhcm5cIixcImVycm9yXCIsXCJzdWNjZXNzXCJdKSxwbyhcImljb25cIiksRW8oXCJ1cmxcIixcIlwiKV0sRkU9JG8oTUUpLElFPVtwbyhcInR5cGVcIikscG8oXCJ0ZXh0XCIpLEZvKFwiZGlzYWJsZWRcIiwhMSksRm8oXCJwcmltYXJ5XCIsITEpLGFyKFwibmFtZVwiLFwibmFtZVwiLFduKGZ1bmN0aW9uKCl7cmV0dXJuIElyKFwiYnV0dG9uLW5hbWVcIil9KSxlciksQ28oXCJpY29uXCIpLEZvKFwiYm9yZGVybGVzc1wiLCExKV0sUkU9JG8oSUUpLE5FPVtwbyhcInR5cGVcIikscG8oXCJuYW1lXCIpLHBvKFwibGFiZWxcIiksRm8oXCJkaXNhYmxlZFwiLCExKV0sUEU9JG8oTkUpLFZFPW5yLEhFPVtwbyhcInR5cGVcIikscG8oXCJuYW1lXCIpXSxMRT1IRS5jb25jYXQoW0NvKFwibGFiZWxcIildKSx6RT1MRS5jb25jYXQoW0VvKFwiY29sdW1uc1wiLFwiYXV0b1wiKV0pLFVFPSRvKHpFKSxqRT1RbyhbcG8oXCJ2YWx1ZVwiKSxwbyhcInRleHRcIikscG8oXCJpY29uXCIpXSksV0U9JG8oTEUpLEdFPWVyLFhFPSRvKExFKSxZRT1lcixxRT1IRS5jb25jYXQoW0JvKFwidGFnXCIsXCJ0ZXh0YXJlYVwiKSxwbyhcInNjcmlwdElkXCIpLHBvKFwic2NyaXB0VXJsXCIpLERvKFwic2V0dGluZ3NcIix2b2lkIDAsaXIpXSksS0U9SEUuY29uY2F0KFtCbyhcInRhZ1wiLFwidGV4dGFyZWFcIiksdm8oXCJpbml0XCIpXSksSkU9aW8oZnVuY3Rpb24odCl7cmV0dXJuIGFvKFwiY3VzdG9tZWRpdG9yLm9sZFwiLHRvKEtFKSx0KS5vclRodW5rKGZ1bmN0aW9uKCl7cmV0dXJuIGFvKFwiY3VzdG9tZWRpdG9yLm5ld1wiLHRvKHFFKSx0KX0pfSksJEU9ZXIsUUU9JG8oTEUpLFpFPWVvKEpvKSx0RD1bcG8oXCJ0eXBlXCIpLHBvKFwiaHRtbFwiKSxNbyhcInByZXNldHNcIixcInByZXNlbnRhdGlvblwiLFtcInByZXNlbnRhdGlvblwiLFwiZG9jdW1lbnRcIl0pXSxlRD0kbyh0RCksbkQ9TEUuY29uY2F0KFtGbyhcInNhbmRib3hlZFwiLCEwKV0pLG9EPSRvKG5EKSxyRD1lcixpRD1MRS5jb25jYXQoW2dvKFwiY3VycmVudFN0YXRlXCIsJG8oW21vKFwiYmxvYlwiKSxwbyhcInVybFwiKV0pKV0pLHVEPSRvKGlEKSxhRD1MRS5jb25jYXQoW0NvKFwiaW5wdXRNb2RlXCIpLENvKFwicGxhY2Vob2xkZXJcIiksRm8oXCJtYXhpbWl6ZWRcIiwhMSksRm8oXCJkaXNhYmxlZFwiLCExKV0pLGNEPSRvKGFEKSxzRD1lcixsRD1bcG8oXCJ0ZXh0XCIpLHBvKFwidmFsdWVcIildLGZEPVtwbyhcInRleHRcIikseG8oXCJpdGVtc1wiLCh3RT1SdChmdW5jdGlvbigpe3JldHVybiBkRH0pLHtleHRyYWN0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHdFKCkuZXh0cmFjdCh0LGUpfSx0b1N0cmluZzpmdW5jdGlvbigpe3JldHVybiB3RSgpLnRvU3RyaW5nKCl9fSkpXSxkRD1ubyhbJG8obEQpLCRvKGZEKV0pLG1EPUxFLmNvbmNhdChbeG8oXCJpdGVtc1wiLGREKSxGbyhcImRpc2FibGVkXCIsITEpXSksZ0Q9JG8obUQpLHBEPWVyLGhEPUxFLmNvbmNhdChbeW8oXCJpdGVtc1wiLFtwbyhcInRleHRcIikscG8oXCJ2YWx1ZVwiKV0pLEFvKFwic2l6ZVwiLDEpLEZvKFwiZGlzYWJsZWRcIiwhMSldKSx2RD0kbyhoRCksYkQ9ZXIseUQ9TEUuY29uY2F0KFtGbyhcImNvbnN0cmFpblwiLCEwKSxGbyhcImRpc2FibGVkXCIsITEpXSkseEQ9JG8oeUQpLHdEPSRvKFtwbyhcIndpZHRoXCIpLHBvKFwiaGVpZ2h0XCIpXSksU0Q9W3BvKFwidHlwZVwiKSx4byhcImhlYWRlclwiLGVyKSx4byhcImNlbGxzXCIsZW8oZXIpKV0sa0Q9JG8oU0QpLENEPUxFLmNvbmNhdChbQ28oXCJwbGFjZWhvbGRlclwiKSxGbyhcIm1heGltaXplZFwiLCExKSxGbyhcImRpc2FibGVkXCIsITEpXSksT0Q9JG8oQ0QpLF9EPWVyLFREPUxFLmNvbmNhdChbTW8oXCJmaWxldHlwZVwiLFwiZmlsZVwiLFtcImltYWdlXCIsXCJtZWRpYVwiLFwiZmlsZVwiXSksRW8oXCJkaXNhYmxlZFwiLCExKV0pLEVEPSRvKFREKSxERD0kbyhbcG8oXCJ2YWx1ZVwiKSxFbyhcIm1ldGFcIix7fSldKSxBRD1abihmdW5jdGlvbigpe3JldHVybiBybyhcInR5cGVcIix7YWxlcnRiYW5uZXI6RkUsYmFyOiRvKChuPWRFKFwiYmFyXCIpLFtwbyhcInR5cGVcIiksbl0pKSxidXR0b246UkUsY2hlY2tib3g6UEUsY29sb3JpbnB1dDpXRSxjb2xvcnBpY2tlcjpYRSxkcm9wem9uZTpRRSxncmlkOiRvKCh0PWRFKFwiZ3JpZFwiKSxbcG8oXCJ0eXBlXCIpLGdvKFwiY29sdW1uc1wiLHRyKSx0XSkpLGlmcmFtZTpvRCxpbnB1dDpjRCxsaXN0Ym94OmdELHNlbGVjdGJveDp2RCxzaXplaW5wdXQ6eEQsdGV4dGFyZWE6T0QsdXJsaW5wdXQ6RUQsY3VzdG9tZWRpdG9yOkpFLGh0bWxwYW5lbDplRCxpbWFnZXRvb2xzOnVELGNvbGxlY3Rpb246VUUsbGFiZWw6JG8oKGU9ZEUoXCJsYWJlbFwiKSxbcG8oXCJ0eXBlXCIpLHBvKFwibGFiZWxcIiksZV0pKSx0YWJsZTprRCxwYW5lbDpNRH0pO3ZhciB0LGUsbn0pLEJEPVtwbyhcInR5cGVcIiksRW8oXCJjbGFzc2VzXCIsW10pLHhvKFwiaXRlbXNcIixBRCldLE1EPSRvKEJEKSxGRD1bYXIoXCJuYW1lXCIsXCJuYW1lXCIsV24oZnVuY3Rpb24oKXtyZXR1cm4gSXIoXCJ0YWItbmFtZVwiKX0pLGVyKSxwbyhcInRpdGxlXCIpLHhvKFwiaXRlbXNcIixBRCldLElEPVtwbyhcInR5cGVcIikseW8oXCJ0YWJzXCIsRkQpXSxSRD0kbyhJRCksTkQ9REUsUEQ9QkUsVkQ9JG8oW3BvKFwidGl0bGVcIiksZ28oXCJib2R5XCIscm8oXCJ0eXBlXCIse3BhbmVsOk1ELHRhYnBhbmVsOlJEfSkpLEJvKFwic2l6ZVwiLFwibm9ybWFsXCIpLHhvKFwiYnV0dG9uc1wiLFBEKSxFbyhcImluaXRpYWxEYXRhXCIse30pLElvKFwib25BY3Rpb25cIixzdCksSW8oXCJvbkNoYW5nZVwiLHN0KSxJbyhcIm9uU3VibWl0XCIsc3QpLElvKFwib25DbG9zZVwiLHN0KSxJbyhcIm9uQ2FuY2VsXCIsc3QpLEVvKFwib25UYWJDaGFuZ2VcIixzdCldKSxIRD0kbyhWKFtobyhcInR5cGVcIixbXCJjYW5jZWxcIixcImN1c3RvbVwiXSldLE5ELCEwKSksTEQ9JG8oW3BvKFwidGl0bGVcIikscG8oXCJ1cmxcIiksa28oXCJoZWlnaHRcIiksa28oXCJ3aWR0aFwiKSxfbyhcImJ1dHRvbnNcIixIRCksSW8oXCJvbkFjdGlvblwiLHN0KSxJbyhcIm9uQ2FuY2VsXCIsc3QpLElvKFwib25DbG9zZVwiLHN0KSxJbyhcIm9uTWVzc2FnZVwiLHN0KV0pLHpEPWZ1bmN0aW9uKHQpe3JldHVybiB4KHQpP1t0XS5jb25jYXQoSChaKHQpLHpEKSk6Yyh0KT9IKHQsekQpOltdfSxVRD17Y2hlY2tib3g6VkUsY29sb3JpbnB1dDpHRSxjb2xvcnBpY2tlcjpZRSxkcm9wem9uZTpaRSxpbnB1dDpzRCxpZnJhbWU6ckQsc2l6ZWlucHV0OndELHNlbGVjdGJveDpiRCxsaXN0Ym94OnBELHNpemU6d0QsdGV4dGFyZWE6X0QsdXJsaW5wdXQ6REQsY3VzdG9tZWRpdG9yOiRFLGNvbGxlY3Rpb246akUsdG9nZ2xlbWVudWl0ZW06VEV9LGpEPXtvcGVuOmZ1bmN0aW9uKHQsZSl7dmFyIG49Z0UoZSk7cmV0dXJuIHQobi5pbnRlcm5hbERpYWxvZyxuLmluaXRpYWxEYXRhLG4uZGF0YVZhbGlkYXRvcil9LG9wZW5Vcmw6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdChjbyhhbyhcImRpYWxvZ1wiLExELGUpKSl9LHJlZGlhbDpnRX0sV0Q9a2woe25hbWU6XCJUYWJCdXR0b25cIixjb25maWdGaWVsZHM6W0VvKFwidWlkXCIsdm9pZCAwKSxtbyhcInZhbHVlXCIpLGFyKFwiZG9tXCIsXCJkb21cIixZbihmdW5jdGlvbigpe3JldHVybnthdHRyaWJ1dGVzOntyb2xlOlwidGFiXCIsaWQ6SXIoXCJhcmlhXCIpLFwiYXJpYS1zZWxlY3RlZFwiOlwiZmFsc2VcIn19fSksWm8oKSksd28oXCJhY3Rpb25cIiksRW8oXCJkb21Nb2RpZmljYXRpb25cIix7fSksWnMoXCJ0YWJCdXR0b25CZWhhdmlvdXJzXCIsW1ZnLEZnLERmXSksbW8oXCJ2aWV3XCIpXSxmYWN0b3J5OmZ1bmN0aW9uKHQsZSl7cmV0dXJue3VpZDp0LnVpZCxkb206dC5kb20sY29tcG9uZW50czp0LmNvbXBvbmVudHMsZXZlbnRzOlNtKHQuYWN0aW9uKSxiZWhhdmlvdXJzOmVsKHQudGFiQnV0dG9uQmVoYXZpb3VycyxbVmcuY29uZmlnKHt9KSxGZy5jb25maWcoe21vZGU6XCJleGVjdXRpb25cIix1c2VTcGFjZTohMCx1c2VFbnRlcjohMH0pLERmLmNvbmZpZyh7c3RvcmU6e21vZGU6XCJtZW1vcnlcIixpbml0aWFsVmFsdWU6dC52YWx1ZX19KV0pLGRvbU1vZGlmaWNhdGlvbjp0LmRvbU1vZGlmaWNhdGlvbn19fSksR0Q9cnQoW21vKFwidGFic1wiKSxtbyhcImRvbVwiKSxFbyhcImNsaWNrVG9EaXNtaXNzXCIsITEpLFpzKFwidGFiYmFyQmVoYXZpb3Vyc1wiLFtoZCxGZ10pLHF1KFtcInRhYkNsYXNzXCIsXCJzZWxlY3RlZENsYXNzXCJdKV0pLFhEPXJ0KFtaZih7ZmFjdG9yeTpXRCxuYW1lOlwidGFic1wiLHVuaXQ6XCJ0YWJcIixvdmVycmlkZXM6ZnVuY3Rpb24obyl7cmV0dXJue2FjdGlvbjpmdW5jdGlvbih0KXt2YXIgZT10LmdldFN5c3RlbSgpLmdldEJ5VWlkKG8udWlkKS5nZXRPckRpZSgpLG49aGQuaXNIaWdobGlnaHRlZChlLHQpOyhuJiZvLmNsaWNrVG9EaXNtaXNzP2Z1bmN0aW9uKHQsZSl7aGQuZGVoaWdobGlnaHQodCxlKSxicih0LFFpKCkse3RhYmJhcjp0LGJ1dHRvbjplfSl9Om4/c3Q6ZnVuY3Rpb24odCxlKXtoZC5oaWdobGlnaHQodCxlKSxicih0LCRpKCkse3RhYmJhcjp0LGJ1dHRvbjplfSl9KShlLHQpfSxkb21Nb2RpZmljYXRpb246e2NsYXNzZXM6W28ubWFya2Vycy50YWJDbGFzc119fX19KV0pLFlEPUNsKHtuYW1lOlwiVGFiYmFyXCIsY29uZmlnRmllbGRzOkdEKCkscGFydEZpZWxkczpYRCgpLGZhY3Rvcnk6ZnVuY3Rpb24odCxlLG4sbyl7cmV0dXJue3VpZDp0LnVpZCxkb206dC5kb20sY29tcG9uZW50czplLFwiZGVidWcuc2tldGNoZXJcIjpcIlRhYmJhclwiLGRvbU1vZGlmaWNhdGlvbjp7YXR0cmlidXRlczp7cm9sZTpcInRhYmxpc3RcIn19LGJlaGF2aW91cnM6ZWwodC50YWJiYXJCZWhhdmlvdXJzLFtoZC5jb25maWcoe2hpZ2hsaWdodENsYXNzOnQubWFya2Vycy5zZWxlY3RlZENsYXNzLGl0ZW1DbGFzczp0Lm1hcmtlcnMudGFiQ2xhc3Msb25IaWdobGlnaHQ6ZnVuY3Rpb24odCxlKXtvZShlLmVsZW1lbnQsXCJhcmlhLXNlbGVjdGVkXCIsXCJ0cnVlXCIpfSxvbkRlaGlnaGxpZ2h0OmZ1bmN0aW9uKHQsZSl7b2UoZS5lbGVtZW50LFwiYXJpYS1zZWxlY3RlZFwiLFwiZmFsc2VcIil9fSksRmcuY29uZmlnKHttb2RlOlwiZmxvd1wiLGdldEluaXRpYWw6ZnVuY3Rpb24odCl7cmV0dXJuIGhkLmdldEhpZ2hsaWdodGVkKHQpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50fSl9LHNlbGVjdG9yOlwiLlwiK3QubWFya2Vycy50YWJDbGFzcyxleGVjdXRlT25Nb3ZlOiEwfSldKX19fSkscUQ9a2woe25hbWU6XCJUYWJ2aWV3XCIsY29uZmlnRmllbGRzOltacyhcInRhYnZpZXdCZWhhdmlvdXJzXCIsW1JnXSldLGZhY3Rvcnk6ZnVuY3Rpb24odCxlKXtyZXR1cm57dWlkOnQudWlkLGRvbTp0LmRvbSxiZWhhdmlvdXJzOmVsKHQudGFidmlld0JlaGF2aW91cnMsW1JnLmNvbmZpZyh7fSldKSxkb21Nb2RpZmljYXRpb246e2F0dHJpYnV0ZXM6e3JvbGU6XCJ0YWJwYW5lbFwifX19fX0pLEtEPXJ0KFtFbyhcInNlbGVjdEZpcnN0XCIsITApLEp1KFwib25DaGFuZ2VUYWJcIiksSnUoXCJvbkRpc21pc3NUYWJcIiksRW8oXCJ0YWJzXCIsW10pLFpzKFwidGFiU2VjdGlvbkJlaGF2aW91cnNcIixbXSldKSxKRD1ydChbSmYoe2ZhY3Rvcnk6WUQsc2NoZW1hOlttbyhcImRvbVwiKSxibyhcIm1hcmtlcnNcIixbbW8oXCJ0YWJDbGFzc1wiKSxtbyhcInNlbGVjdGVkQ2xhc3NcIildKV0sbmFtZTpcInRhYmJhclwiLGRlZmF1bHRzOmZ1bmN0aW9uKHQpe3JldHVybnt0YWJzOnQudGFic319fSksSmYoe2ZhY3Rvcnk6cUQsbmFtZTpcInRhYnZpZXdcIn0pXSksJEQ9Q2woe25hbWU6XCJUYWJTZWN0aW9uXCIsY29uZmlnRmllbGRzOktEKCkscGFydEZpZWxkczpKRCgpLGZhY3Rvcnk6ZnVuY3Rpb24oaSx0LGUsbil7ZnVuY3Rpb24gbyh0LGUpe21sKHQsaSxcInRhYmJhclwiKS5lYWNoKGZ1bmN0aW9uKHQpe2UodCkuZWFjaCh5cil9KX1yZXR1cm57dWlkOmkudWlkLGRvbTppLmRvbSxjb21wb25lbnRzOnQsYmVoYXZpb3Vyczp0bChpLnRhYlNlY3Rpb25CZWhhdmlvdXJzKSxldmVudHM6bnUoZnQoW2kuc2VsZWN0Rmlyc3Q/W291KGZ1bmN0aW9uKHQsZSl7byh0LGhkLmdldEZpcnN0KX0pXTpbXSxbQ3IoJGkoKSxmdW5jdGlvbih0LGUpe3ZhciBvPWUuZXZlbnQuYnV0dG9uLHI9RGYuZ2V0VmFsdWUobyk7bWwobyxpLFwidGFidmlld1wiKS5lYWNoKGZ1bmN0aW9uKG4pe04oaS50YWJzLGZ1bmN0aW9uKHQpe3JldHVybiB0LnZhbHVlPT09cn0pLmVhY2goZnVuY3Rpb24odCl7dmFyIGU9dC52aWV3KCk7dWUoby5lbGVtZW50LFwiaWRcIikuZWFjaChmdW5jdGlvbih0KXtvZShuLmVsZW1lbnQsXCJhcmlhLWxhYmVsbGVkYnlcIix0KX0pLFJnLnNldChuLGUpLGkub25DaGFuZ2VUYWIobixvLGUpfSl9KX0pLENyKFFpKCksZnVuY3Rpb24odCxlKXt2YXIgbj1lLmV2ZW50LmJ1dHRvbjtpLm9uRGlzbWlzc1RhYih0LG4pfSldXSkpLGFwaXM6e2dldFZpZXdJdGVtczpmdW5jdGlvbih0KXtyZXR1cm4gbWwodCxpLFwidGFidmlld1wiKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIFJnLmNvbnRlbnRzKHQpfSkuZ2V0T3IoW10pfSxzaG93VGFiOmZ1bmN0aW9uKHQsbil7byh0LGZ1bmN0aW9uKGUpe3JldHVybiBOKGhkLmdldENhbmRpZGF0ZXMoZSksZnVuY3Rpb24odCl7cmV0dXJuIERmLmdldFZhbHVlKHQpPT09bn0pLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4haGQuaXNIaWdobGlnaHRlZChlLHQpfSl9KX19fX0sYXBpczp7Z2V0Vmlld0l0ZW1zOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuZ2V0Vmlld0l0ZW1zKGUpfSxzaG93VGFiOmZ1bmN0aW9uKHQsZSxuKXt0LnNob3dUYWIoZSxuKX19fSksUUQ9XCJzZW5kLWRhdGEtdG8tc2VjdGlvblwiLFpEPVwic2VuZC1kYXRhLXRvLXZpZXdcIix0QT1JcihcInVwZGF0ZS1kaWFsb2dcIiksZUE9SXIoXCJ1cGRhdGUtdGl0bGVcIiksbkE9SXIoXCJ1cGRhdGUtYm9keVwiKSxvQT1JcihcInVwZGF0ZS1mb290ZXJcIiksckE9SXIoXCJib2R5LXNlbmQtbWVzc2FnZVwiKTtmdW5jdGlvbiBpQSh0KXtyZXR1cm4oaUE9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0pKHQpfWZ1bmN0aW9uIHVBKHQsZSl7cmV0dXJuKHVBPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5fX3Byb3RvX189ZSx0fSkodCxlKX1mdW5jdGlvbiBhQSh0LGUsbil7cmV0dXJuKGFBPWZ1bmN0aW9uKCl7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFJlZmxlY3QmJlJlZmxlY3QuY29uc3RydWN0JiYhUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSl7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgUHJveHkpcmV0dXJuIDE7dHJ5e3JldHVybiBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbixbXSxmdW5jdGlvbigpe30pKSwxfWNhdGNoKHQpe3JldHVybn19fSgpP1JlZmxlY3QuY29uc3RydWN0OmZ1bmN0aW9uKHQsZSxuKXt2YXIgbz1bbnVsbF07by5wdXNoLmFwcGx5KG8sZSk7dmFyIHI9bmV3KEZ1bmN0aW9uLmJpbmQuYXBwbHkodCxvKSk7cmV0dXJuIG4mJnVBKHIsbi5wcm90b3R5cGUpLHJ9KS5hcHBseShudWxsLGFyZ3VtZW50cyl9ZnVuY3Rpb24gY0EodCl7cmV0dXJuIGZ1bmN0aW9uKHQpe2lmKEFycmF5LmlzQXJyYXkodCkpcmV0dXJuIHNBKHQpfSh0KXx8ZnVuY3Rpb24oKXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZudWxsIT10W1N5bWJvbC5pdGVyYXRvcl18fG51bGwhPXRbXCJAQGl0ZXJhdG9yXCJdKXJldHVybiBBcnJheS5mcm9tKHQpfSgpfHxmdW5jdGlvbih0KXtpZih0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgdClyZXR1cm4gc0EodCx2b2lkIDApO3ZhciBlPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KS5zbGljZSg4LC0xKTtyZXR1cm5cIk1hcFwiPT09KGU9XCJPYmplY3RcIj09PWUmJnQuY29uc3RydWN0b3I/dC5jb25zdHJ1Y3Rvci5uYW1lOmUpfHxcIlNldFwiPT09ZT9BcnJheS5mcm9tKHQpOlwiQXJndW1lbnRzXCI9PT1lfHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChlKT9zQSh0LHZvaWQgMCk6dm9pZCAwfX0odCl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIil9KCl9ZnVuY3Rpb24gc0EodCxlKXsobnVsbD09ZXx8ZT50Lmxlbmd0aCkmJihlPXQubGVuZ3RoKTtmb3IodmFyIG49MCxvPW5ldyBBcnJheShlKTtuPGU7bisrKW9bbl09dFtuXTtyZXR1cm4gb312YXIgbEEsZkE9T2JqZWN0Lmhhc093blByb3BlcnR5LGRBPU9iamVjdC5zZXRQcm90b3R5cGVPZixtQT1PYmplY3QuaXNGcm96ZW4sZ0E9T2JqZWN0LmdldFByb3RvdHlwZU9mLHBBPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IsaEE9T2JqZWN0LmZyZWV6ZSx2QT1PYmplY3Quc2VhbCxiQT1PYmplY3QuY3JlYXRlLHlBPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBSZWZsZWN0JiZSZWZsZWN0LHhBPXlBLmFwcGx5fHxmdW5jdGlvbih0LGUsbil7cmV0dXJuIHQuYXBwbHkoZSxuKX0saEE9aEF8fGZ1bmN0aW9uKHQpe3JldHVybiB0fSx2QT12QXx8ZnVuY3Rpb24odCl7cmV0dXJuIHR9LHdBPXlBLmNvbnN0cnVjdHx8ZnVuY3Rpb24odCxlKXtyZXR1cm4gYUEodCxjQShlKSl9LFNBPU1BKEFycmF5LnByb3RvdHlwZS5mb3JFYWNoKSxrQT1NQShBcnJheS5wcm90b3R5cGUucG9wKSxDQT1NQShBcnJheS5wcm90b3R5cGUucHVzaCksT0E9TUEoU3RyaW5nLnByb3RvdHlwZS50b0xvd2VyQ2FzZSksX0E9TUEoU3RyaW5nLnByb3RvdHlwZS5tYXRjaCksVEE9TUEoU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlKSxFQT1NQShTdHJpbmcucHJvdG90eXBlLmluZGV4T2YpLERBPU1BKFN0cmluZy5wcm90b3R5cGUudHJpbSksQUE9TUEoUmVnRXhwLnByb3RvdHlwZS50ZXN0KSxCQT0obEE9VHlwZUVycm9yLGZ1bmN0aW9uKCl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsZT1uZXcgQXJyYXkodCksbj0wO248dDtuKyspZVtuXT1hcmd1bWVudHNbbl07cmV0dXJuIHdBKGxBLGUpfSk7ZnVuY3Rpb24gTUEocil7cmV0dXJuIGZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KDE8ZT9lLTE6MCksbz0xO288ZTtvKyspbltvLTFdPWFyZ3VtZW50c1tvXTtyZXR1cm4geEEocix0LG4pfX1mdW5jdGlvbiBGQSh0LGUpe2RBJiZkQSh0LG51bGwpO2Zvcih2YXIgbj1lLmxlbmd0aDtuLS07KXt2YXIgbyxyPWVbbl07XCJzdHJpbmdcIiE9dHlwZW9mIHJ8fChvPU9BKHIpKSE9PXImJihtQShlKXx8KGVbbl09bykscj1vKSx0W3JdPSEwfXJldHVybiB0fWZ1bmN0aW9uIElBKHQpe3ZhciBlLG49YkEobnVsbCk7Zm9yKGUgaW4gdCl4QShmQSx0LFtlXSkmJihuW2VdPXRbZV0pO3JldHVybiBufWZ1bmN0aW9uIFJBKHQsZSl7Zm9yKDtudWxsIT09dDspe3ZhciBuPXBBKHQsZSk7aWYobil7aWYobi5nZXQpcmV0dXJuIE1BKG4uZ2V0KTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLnZhbHVlKXJldHVybiBNQShuLnZhbHVlKX10PWdBKHQpfXJldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gY29uc29sZS53YXJuKFwiZmFsbGJhY2sgdmFsdWUgZm9yXCIsdCksbnVsbH19dmFyIE5BPWhBKFtcImFcIixcImFiYnJcIixcImFjcm9ueW1cIixcImFkZHJlc3NcIixcImFyZWFcIixcImFydGljbGVcIixcImFzaWRlXCIsXCJhdWRpb1wiLFwiYlwiLFwiYmRpXCIsXCJiZG9cIixcImJpZ1wiLFwiYmxpbmtcIixcImJsb2NrcXVvdGVcIixcImJvZHlcIixcImJyXCIsXCJidXR0b25cIixcImNhbnZhc1wiLFwiY2FwdGlvblwiLFwiY2VudGVyXCIsXCJjaXRlXCIsXCJjb2RlXCIsXCJjb2xcIixcImNvbGdyb3VwXCIsXCJjb250ZW50XCIsXCJkYXRhXCIsXCJkYXRhbGlzdFwiLFwiZGRcIixcImRlY29yYXRvclwiLFwiZGVsXCIsXCJkZXRhaWxzXCIsXCJkZm5cIixcImRpYWxvZ1wiLFwiZGlyXCIsXCJkaXZcIixcImRsXCIsXCJkdFwiLFwiZWxlbWVudFwiLFwiZW1cIixcImZpZWxkc2V0XCIsXCJmaWdjYXB0aW9uXCIsXCJmaWd1cmVcIixcImZvbnRcIixcImZvb3RlclwiLFwiZm9ybVwiLFwiaDFcIixcImgyXCIsXCJoM1wiLFwiaDRcIixcImg1XCIsXCJoNlwiLFwiaGVhZFwiLFwiaGVhZGVyXCIsXCJoZ3JvdXBcIixcImhyXCIsXCJodG1sXCIsXCJpXCIsXCJpbWdcIixcImlucHV0XCIsXCJpbnNcIixcImtiZFwiLFwibGFiZWxcIixcImxlZ2VuZFwiLFwibGlcIixcIm1haW5cIixcIm1hcFwiLFwibWFya1wiLFwibWFycXVlZVwiLFwibWVudVwiLFwibWVudWl0ZW1cIixcIm1ldGVyXCIsXCJuYXZcIixcIm5vYnJcIixcIm9sXCIsXCJvcHRncm91cFwiLFwib3B0aW9uXCIsXCJvdXRwdXRcIixcInBcIixcInBpY3R1cmVcIixcInByZVwiLFwicHJvZ3Jlc3NcIixcInFcIixcInJwXCIsXCJydFwiLFwicnVieVwiLFwic1wiLFwic2FtcFwiLFwic2VjdGlvblwiLFwic2VsZWN0XCIsXCJzaGFkb3dcIixcInNtYWxsXCIsXCJzb3VyY2VcIixcInNwYWNlclwiLFwic3BhblwiLFwic3RyaWtlXCIsXCJzdHJvbmdcIixcInN0eWxlXCIsXCJzdWJcIixcInN1bW1hcnlcIixcInN1cFwiLFwidGFibGVcIixcInRib2R5XCIsXCJ0ZFwiLFwidGVtcGxhdGVcIixcInRleHRhcmVhXCIsXCJ0Zm9vdFwiLFwidGhcIixcInRoZWFkXCIsXCJ0aW1lXCIsXCJ0clwiLFwidHJhY2tcIixcInR0XCIsXCJ1XCIsXCJ1bFwiLFwidmFyXCIsXCJ2aWRlb1wiLFwid2JyXCJdKSxQQT1oQShbXCJzdmdcIixcImFcIixcImFsdGdseXBoXCIsXCJhbHRnbHlwaGRlZlwiLFwiYWx0Z2x5cGhpdGVtXCIsXCJhbmltYXRlY29sb3JcIixcImFuaW1hdGVtb3Rpb25cIixcImFuaW1hdGV0cmFuc2Zvcm1cIixcImNpcmNsZVwiLFwiY2xpcHBhdGhcIixcImRlZnNcIixcImRlc2NcIixcImVsbGlwc2VcIixcImZpbHRlclwiLFwiZm9udFwiLFwiZ1wiLFwiZ2x5cGhcIixcImdseXBocmVmXCIsXCJoa2VyblwiLFwiaW1hZ2VcIixcImxpbmVcIixcImxpbmVhcmdyYWRpZW50XCIsXCJtYXJrZXJcIixcIm1hc2tcIixcIm1ldGFkYXRhXCIsXCJtcGF0aFwiLFwicGF0aFwiLFwicGF0dGVyblwiLFwicG9seWdvblwiLFwicG9seWxpbmVcIixcInJhZGlhbGdyYWRpZW50XCIsXCJyZWN0XCIsXCJzdG9wXCIsXCJzdHlsZVwiLFwic3dpdGNoXCIsXCJzeW1ib2xcIixcInRleHRcIixcInRleHRwYXRoXCIsXCJ0aXRsZVwiLFwidHJlZlwiLFwidHNwYW5cIixcInZpZXdcIixcInZrZXJuXCJdKSxWQT1oQShbXCJmZUJsZW5kXCIsXCJmZUNvbG9yTWF0cml4XCIsXCJmZUNvbXBvbmVudFRyYW5zZmVyXCIsXCJmZUNvbXBvc2l0ZVwiLFwiZmVDb252b2x2ZU1hdHJpeFwiLFwiZmVEaWZmdXNlTGlnaHRpbmdcIixcImZlRGlzcGxhY2VtZW50TWFwXCIsXCJmZURpc3RhbnRMaWdodFwiLFwiZmVGbG9vZFwiLFwiZmVGdW5jQVwiLFwiZmVGdW5jQlwiLFwiZmVGdW5jR1wiLFwiZmVGdW5jUlwiLFwiZmVHYXVzc2lhbkJsdXJcIixcImZlSW1hZ2VcIixcImZlTWVyZ2VcIixcImZlTWVyZ2VOb2RlXCIsXCJmZU1vcnBob2xvZ3lcIixcImZlT2Zmc2V0XCIsXCJmZVBvaW50TGlnaHRcIixcImZlU3BlY3VsYXJMaWdodGluZ1wiLFwiZmVTcG90TGlnaHRcIixcImZlVGlsZVwiLFwiZmVUdXJidWxlbmNlXCJdKSxIQT1oQShbXCJhbmltYXRlXCIsXCJjb2xvci1wcm9maWxlXCIsXCJjdXJzb3JcIixcImRpc2NhcmRcIixcImZlZHJvcHNoYWRvd1wiLFwiZm9udC1mYWNlXCIsXCJmb250LWZhY2UtZm9ybWF0XCIsXCJmb250LWZhY2UtbmFtZVwiLFwiZm9udC1mYWNlLXNyY1wiLFwiZm9udC1mYWNlLXVyaVwiLFwiZm9yZWlnbm9iamVjdFwiLFwiaGF0Y2hcIixcImhhdGNocGF0aFwiLFwibWVzaFwiLFwibWVzaGdyYWRpZW50XCIsXCJtZXNocGF0Y2hcIixcIm1lc2hyb3dcIixcIm1pc3NpbmctZ2x5cGhcIixcInNjcmlwdFwiLFwic2V0XCIsXCJzb2xpZGNvbG9yXCIsXCJ1bmtub3duXCIsXCJ1c2VcIl0pLExBPWhBKFtcIm1hdGhcIixcIm1lbmNsb3NlXCIsXCJtZXJyb3JcIixcIm1mZW5jZWRcIixcIm1mcmFjXCIsXCJtZ2x5cGhcIixcIm1pXCIsXCJtbGFiZWxlZHRyXCIsXCJtbXVsdGlzY3JpcHRzXCIsXCJtblwiLFwibW9cIixcIm1vdmVyXCIsXCJtcGFkZGVkXCIsXCJtcGhhbnRvbVwiLFwibXJvb3RcIixcIm1yb3dcIixcIm1zXCIsXCJtc3BhY2VcIixcIm1zcXJ0XCIsXCJtc3R5bGVcIixcIm1zdWJcIixcIm1zdXBcIixcIm1zdWJzdXBcIixcIm10YWJsZVwiLFwibXRkXCIsXCJtdGV4dFwiLFwibXRyXCIsXCJtdW5kZXJcIixcIm11bmRlcm92ZXJcIl0pLHpBPWhBKFtcIm1hY3Rpb25cIixcIm1hbGlnbmdyb3VwXCIsXCJtYWxpZ25tYXJrXCIsXCJtbG9uZ2RpdlwiLFwibXNjYXJyaWVzXCIsXCJtc2NhcnJ5XCIsXCJtc2dyb3VwXCIsXCJtc3RhY2tcIixcIm1zbGluZVwiLFwibXNyb3dcIixcInNlbWFudGljc1wiLFwiYW5ub3RhdGlvblwiLFwiYW5ub3RhdGlvbi14bWxcIixcIm1wcmVzY3JpcHRzXCIsXCJub25lXCJdKSxVQT1oQShbXCIjdGV4dFwiXSksakE9aEEoW1wiYWNjZXB0XCIsXCJhY3Rpb25cIixcImFsaWduXCIsXCJhbHRcIixcImF1dG9jYXBpdGFsaXplXCIsXCJhdXRvY29tcGxldGVcIixcImF1dG9waWN0dXJlaW5waWN0dXJlXCIsXCJhdXRvcGxheVwiLFwiYmFja2dyb3VuZFwiLFwiYmdjb2xvclwiLFwiYm9yZGVyXCIsXCJjYXB0dXJlXCIsXCJjZWxscGFkZGluZ1wiLFwiY2VsbHNwYWNpbmdcIixcImNoZWNrZWRcIixcImNpdGVcIixcImNsYXNzXCIsXCJjbGVhclwiLFwiY29sb3JcIixcImNvbHNcIixcImNvbHNwYW5cIixcImNvbnRyb2xzXCIsXCJjb250cm9sc2xpc3RcIixcImNvb3Jkc1wiLFwiY3Jvc3NvcmlnaW5cIixcImRhdGV0aW1lXCIsXCJkZWNvZGluZ1wiLFwiZGVmYXVsdFwiLFwiZGlyXCIsXCJkaXNhYmxlZFwiLFwiZGlzYWJsZXBpY3R1cmVpbnBpY3R1cmVcIixcImRpc2FibGVyZW1vdGVwbGF5YmFja1wiLFwiZG93bmxvYWRcIixcImRyYWdnYWJsZVwiLFwiZW5jdHlwZVwiLFwiZW50ZXJrZXloaW50XCIsXCJmYWNlXCIsXCJmb3JcIixcImhlYWRlcnNcIixcImhlaWdodFwiLFwiaGlkZGVuXCIsXCJoaWdoXCIsXCJocmVmXCIsXCJocmVmbGFuZ1wiLFwiaWRcIixcImlucHV0bW9kZVwiLFwiaW50ZWdyaXR5XCIsXCJpc21hcFwiLFwia2luZFwiLFwibGFiZWxcIixcImxhbmdcIixcImxpc3RcIixcImxvYWRpbmdcIixcImxvb3BcIixcImxvd1wiLFwibWF4XCIsXCJtYXhsZW5ndGhcIixcIm1lZGlhXCIsXCJtZXRob2RcIixcIm1pblwiLFwibWlubGVuZ3RoXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcIm5hbWVcIixcIm5vbmNlXCIsXCJub3NoYWRlXCIsXCJub3ZhbGlkYXRlXCIsXCJub3dyYXBcIixcIm9wZW5cIixcIm9wdGltdW1cIixcInBhdHRlcm5cIixcInBsYWNlaG9sZGVyXCIsXCJwbGF5c2lubGluZVwiLFwicG9zdGVyXCIsXCJwcmVsb2FkXCIsXCJwdWJkYXRlXCIsXCJyYWRpb2dyb3VwXCIsXCJyZWFkb25seVwiLFwicmVsXCIsXCJyZXF1aXJlZFwiLFwicmV2XCIsXCJyZXZlcnNlZFwiLFwicm9sZVwiLFwicm93c1wiLFwicm93c3BhblwiLFwic3BlbGxjaGVja1wiLFwic2NvcGVcIixcInNlbGVjdGVkXCIsXCJzaGFwZVwiLFwic2l6ZVwiLFwic2l6ZXNcIixcInNwYW5cIixcInNyY2xhbmdcIixcInN0YXJ0XCIsXCJzcmNcIixcInNyY3NldFwiLFwic3RlcFwiLFwic3R5bGVcIixcInN1bW1hcnlcIixcInRhYmluZGV4XCIsXCJ0aXRsZVwiLFwidHJhbnNsYXRlXCIsXCJ0eXBlXCIsXCJ1c2VtYXBcIixcInZhbGlnblwiLFwidmFsdWVcIixcIndpZHRoXCIsXCJ4bWxuc1wiLFwic2xvdFwiXSksV0E9aEEoW1wiYWNjZW50LWhlaWdodFwiLFwiYWNjdW11bGF0ZVwiLFwiYWRkaXRpdmVcIixcImFsaWdubWVudC1iYXNlbGluZVwiLFwiYXNjZW50XCIsXCJhdHRyaWJ1dGVuYW1lXCIsXCJhdHRyaWJ1dGV0eXBlXCIsXCJhemltdXRoXCIsXCJiYXNlZnJlcXVlbmN5XCIsXCJiYXNlbGluZS1zaGlmdFwiLFwiYmVnaW5cIixcImJpYXNcIixcImJ5XCIsXCJjbGFzc1wiLFwiY2xpcFwiLFwiY2xpcHBhdGh1bml0c1wiLFwiY2xpcC1wYXRoXCIsXCJjbGlwLXJ1bGVcIixcImNvbG9yXCIsXCJjb2xvci1pbnRlcnBvbGF0aW9uXCIsXCJjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnNcIixcImNvbG9yLXByb2ZpbGVcIixcImNvbG9yLXJlbmRlcmluZ1wiLFwiY3hcIixcImN5XCIsXCJkXCIsXCJkeFwiLFwiZHlcIixcImRpZmZ1c2Vjb25zdGFudFwiLFwiZGlyZWN0aW9uXCIsXCJkaXNwbGF5XCIsXCJkaXZpc29yXCIsXCJkdXJcIixcImVkZ2Vtb2RlXCIsXCJlbGV2YXRpb25cIixcImVuZFwiLFwiZmlsbFwiLFwiZmlsbC1vcGFjaXR5XCIsXCJmaWxsLXJ1bGVcIixcImZpbHRlclwiLFwiZmlsdGVydW5pdHNcIixcImZsb29kLWNvbG9yXCIsXCJmbG9vZC1vcGFjaXR5XCIsXCJmb250LWZhbWlseVwiLFwiZm9udC1zaXplXCIsXCJmb250LXNpemUtYWRqdXN0XCIsXCJmb250LXN0cmV0Y2hcIixcImZvbnQtc3R5bGVcIixcImZvbnQtdmFyaWFudFwiLFwiZm9udC13ZWlnaHRcIixcImZ4XCIsXCJmeVwiLFwiZzFcIixcImcyXCIsXCJnbHlwaC1uYW1lXCIsXCJnbHlwaHJlZlwiLFwiZ3JhZGllbnR1bml0c1wiLFwiZ3JhZGllbnR0cmFuc2Zvcm1cIixcImhlaWdodFwiLFwiaHJlZlwiLFwiaWRcIixcImltYWdlLXJlbmRlcmluZ1wiLFwiaW5cIixcImluMlwiLFwia1wiLFwiazFcIixcImsyXCIsXCJrM1wiLFwiazRcIixcImtlcm5pbmdcIixcImtleXBvaW50c1wiLFwia2V5c3BsaW5lc1wiLFwia2V5dGltZXNcIixcImxhbmdcIixcImxlbmd0aGFkanVzdFwiLFwibGV0dGVyLXNwYWNpbmdcIixcImtlcm5lbG1hdHJpeFwiLFwia2VybmVsdW5pdGxlbmd0aFwiLFwibGlnaHRpbmctY29sb3JcIixcImxvY2FsXCIsXCJtYXJrZXItZW5kXCIsXCJtYXJrZXItbWlkXCIsXCJtYXJrZXItc3RhcnRcIixcIm1hcmtlcmhlaWdodFwiLFwibWFya2VydW5pdHNcIixcIm1hcmtlcndpZHRoXCIsXCJtYXNrY29udGVudHVuaXRzXCIsXCJtYXNrdW5pdHNcIixcIm1heFwiLFwibWFza1wiLFwibWVkaWFcIixcIm1ldGhvZFwiLFwibW9kZVwiLFwibWluXCIsXCJuYW1lXCIsXCJudW1vY3RhdmVzXCIsXCJvZmZzZXRcIixcIm9wZXJhdG9yXCIsXCJvcGFjaXR5XCIsXCJvcmRlclwiLFwib3JpZW50XCIsXCJvcmllbnRhdGlvblwiLFwib3JpZ2luXCIsXCJvdmVyZmxvd1wiLFwicGFpbnQtb3JkZXJcIixcInBhdGhcIixcInBhdGhsZW5ndGhcIixcInBhdHRlcm5jb250ZW50dW5pdHNcIixcInBhdHRlcm50cmFuc2Zvcm1cIixcInBhdHRlcm51bml0c1wiLFwicG9pbnRzXCIsXCJwcmVzZXJ2ZWFscGhhXCIsXCJwcmVzZXJ2ZWFzcGVjdHJhdGlvXCIsXCJwcmltaXRpdmV1bml0c1wiLFwiclwiLFwicnhcIixcInJ5XCIsXCJyYWRpdXNcIixcInJlZnhcIixcInJlZnlcIixcInJlcGVhdGNvdW50XCIsXCJyZXBlYXRkdXJcIixcInJlc3RhcnRcIixcInJlc3VsdFwiLFwicm90YXRlXCIsXCJzY2FsZVwiLFwic2VlZFwiLFwic2hhcGUtcmVuZGVyaW5nXCIsXCJzcGVjdWxhcmNvbnN0YW50XCIsXCJzcGVjdWxhcmV4cG9uZW50XCIsXCJzcHJlYWRtZXRob2RcIixcInN0YXJ0b2Zmc2V0XCIsXCJzdGRkZXZpYXRpb25cIixcInN0aXRjaHRpbGVzXCIsXCJzdG9wLWNvbG9yXCIsXCJzdG9wLW9wYWNpdHlcIixcInN0cm9rZS1kYXNoYXJyYXlcIixcInN0cm9rZS1kYXNob2Zmc2V0XCIsXCJzdHJva2UtbGluZWNhcFwiLFwic3Ryb2tlLWxpbmVqb2luXCIsXCJzdHJva2UtbWl0ZXJsaW1pdFwiLFwic3Ryb2tlLW9wYWNpdHlcIixcInN0cm9rZVwiLFwic3Ryb2tlLXdpZHRoXCIsXCJzdHlsZVwiLFwic3VyZmFjZXNjYWxlXCIsXCJzeXN0ZW1sYW5ndWFnZVwiLFwidGFiaW5kZXhcIixcInRhcmdldHhcIixcInRhcmdldHlcIixcInRyYW5zZm9ybVwiLFwidHJhbnNmb3JtLW9yaWdpblwiLFwidGV4dC1hbmNob3JcIixcInRleHQtZGVjb3JhdGlvblwiLFwidGV4dC1yZW5kZXJpbmdcIixcInRleHRsZW5ndGhcIixcInR5cGVcIixcInUxXCIsXCJ1MlwiLFwidW5pY29kZVwiLFwidmFsdWVzXCIsXCJ2aWV3Ym94XCIsXCJ2aXNpYmlsaXR5XCIsXCJ2ZXJzaW9uXCIsXCJ2ZXJ0LWFkdi15XCIsXCJ2ZXJ0LW9yaWdpbi14XCIsXCJ2ZXJ0LW9yaWdpbi15XCIsXCJ3aWR0aFwiLFwid29yZC1zcGFjaW5nXCIsXCJ3cmFwXCIsXCJ3cml0aW5nLW1vZGVcIixcInhjaGFubmVsc2VsZWN0b3JcIixcInljaGFubmVsc2VsZWN0b3JcIixcInhcIixcIngxXCIsXCJ4MlwiLFwieG1sbnNcIixcInlcIixcInkxXCIsXCJ5MlwiLFwielwiLFwiem9vbWFuZHBhblwiXSksR0E9aEEoW1wiYWNjZW50XCIsXCJhY2NlbnR1bmRlclwiLFwiYWxpZ25cIixcImJldmVsbGVkXCIsXCJjbG9zZVwiLFwiY29sdW1uc2FsaWduXCIsXCJjb2x1bW5saW5lc1wiLFwiY29sdW1uc3BhblwiLFwiZGVub21hbGlnblwiLFwiZGVwdGhcIixcImRpclwiLFwiZGlzcGxheVwiLFwiZGlzcGxheXN0eWxlXCIsXCJlbmNvZGluZ1wiLFwiZmVuY2VcIixcImZyYW1lXCIsXCJoZWlnaHRcIixcImhyZWZcIixcImlkXCIsXCJsYXJnZW9wXCIsXCJsZW5ndGhcIixcImxpbmV0aGlja25lc3NcIixcImxzcGFjZVwiLFwibHF1b3RlXCIsXCJtYXRoYmFja2dyb3VuZFwiLFwibWF0aGNvbG9yXCIsXCJtYXRoc2l6ZVwiLFwibWF0aHZhcmlhbnRcIixcIm1heHNpemVcIixcIm1pbnNpemVcIixcIm1vdmFibGVsaW1pdHNcIixcIm5vdGF0aW9uXCIsXCJudW1hbGlnblwiLFwib3BlblwiLFwicm93YWxpZ25cIixcInJvd2xpbmVzXCIsXCJyb3dzcGFjaW5nXCIsXCJyb3dzcGFuXCIsXCJyc3BhY2VcIixcInJxdW90ZVwiLFwic2NyaXB0bGV2ZWxcIixcInNjcmlwdG1pbnNpemVcIixcInNjcmlwdHNpemVtdWx0aXBsaWVyXCIsXCJzZWxlY3Rpb25cIixcInNlcGFyYXRvclwiLFwic2VwYXJhdG9yc1wiLFwic3RyZXRjaHlcIixcInN1YnNjcmlwdHNoaWZ0XCIsXCJzdXBzY3JpcHRzaGlmdFwiLFwic3ltbWV0cmljXCIsXCJ2b2Zmc2V0XCIsXCJ3aWR0aFwiLFwieG1sbnNcIl0pLFhBPWhBKFtcInhsaW5rOmhyZWZcIixcInhtbDppZFwiLFwieGxpbms6dGl0bGVcIixcInhtbDpzcGFjZVwiLFwieG1sbnM6eGxpbmtcIl0pLFlBPXZBKC9cXHtcXHtbXFx3XFxXXSp8W1xcd1xcV10qXFx9XFx9L2dtKSxxQT12QSgvPCVbXFx3XFxXXSp8W1xcd1xcV10qJT4vZ20pLEtBPXZBKC9eZGF0YS1bXFwtXFx3LlxcdTAwQjctXFx1RkZGRl0vKSxKQT12QSgvXmFyaWEtW1xcLVxcd10rJC8pLCRBPXZBKC9eKD86KD86KD86ZnxodCl0cHM/fG1haWx0b3x0ZWx8Y2FsbHRvfGNpZHx4bXBwKTp8W15hLXpdfFthLXorLlxcLV0rKD86W15hLXorLlxcLTpdfCQpKS9pKSxRQT12QSgvXig/OlxcdytzY3JpcHR8ZGF0YSk6L2kpLFpBPXZBKC9bXFx1MDAwMC1cXHUwMDIwXFx1MDBBMFxcdTE2ODBcXHUxODBFXFx1MjAwMC1cXHUyMDI5XFx1MjA1RlxcdTMwMDBdL2cpLHRCPXZBKC9eaHRtbCQvaSk7ZnVuY3Rpb24gZUIodCxlKXtyZXR1cm57ZG9tOnt0YWc6XCJkaXZcIixzdHlsZXM6e2Rpc3BsYXk6XCJub25lXCJ9LGNsYXNzZXM6W1widG94LWRpYWxvZ19faGVhZGVyXCJdfSxjb21wb25lbnRzOlt0LGVdfX1mdW5jdGlvbiBuQih0LGUpe3JldHVybiBPRS5wYXJ0cy5jbG9zZShmcC5za2V0Y2goe2RvbTp7dGFnOlwiYnV0dG9uXCIsY2xhc3NlczpbXCJ0b3gtYnV0dG9uXCIsXCJ0b3gtYnV0dG9uLS1pY29uXCIsXCJ0b3gtYnV0dG9uLS1uYWtlZFwiXSxhdHRyaWJ1dGVzOnt0eXBlOlwiYnV0dG9uXCIsXCJhcmlhLWxhYmVsXCI6ZS50cmFuc2xhdGUoXCJDbG9zZVwiKX19LGFjdGlvbjp0LGJ1dHRvbkJlaGF2aW91cnM6ZWMoW3B5LmNvbmZpZyh7fSldKX0pKX1mdW5jdGlvbiBvQigpe3JldHVybiBPRS5wYXJ0cy50aXRsZSh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1kaWFsb2dfX3RpdGxlXCJdLGlubmVySHRtbDpcIlwiLHN0eWxlczp7ZGlzcGxheTpcIm5vbmVcIn19fSl9ZnVuY3Rpb24gckIodCxlKXtyZXR1cm4gT0UucGFydHMuYm9keSh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1kaWFsb2dfX2JvZHlcIl19LGNvbXBvbmVudHM6W3tkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWRpYWxvZ19fYm9keS1jb250ZW50XCJdfSxjb21wb25lbnRzOlt7ZG9tOnhDKFwiPHA+XCIrKG49ZS50cmFuc2xhdGUodCksX0IoKS5zYW5pdGl6ZShuKSkrXCI8L3A+XCIpfV19XX0pO3ZhciBufWZ1bmN0aW9uIGlCKHQpe3JldHVybiBPRS5wYXJ0cy5mb290ZXIoe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtZGlhbG9nX19mb290ZXJcIl19LGNvbXBvbmVudHM6dH0pfWZ1bmN0aW9uIHVCKHQsZSl7cmV0dXJuW2x5LnNrZXRjaCh7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1kaWFsb2dfX2Zvb3Rlci1zdGFydFwiXX0sY29tcG9uZW50czp0fSksbHkuc2tldGNoKHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWRpYWxvZ19fZm9vdGVyLWVuZFwiXX0sY29tcG9uZW50czplfSldfWZ1bmN0aW9uIGFCKGUpe3ZhciB0LG49XCJ0b3gtZGlhbG9nXCIsbz1uK1wiLXdyYXBcIixyPW8rXCJfX2JhY2tkcm9wXCIsaT1uK1wiX19kaXNhYmxlLXNjcm9sbFwiO3JldHVybiBPRS5za2V0Y2goe2xhenlTaW5rOmUubGF6eVNpbmssb25Fc2NhcGU6ZnVuY3Rpb24odCl7cmV0dXJuIGUub25Fc2NhcGUodCksdnQuc29tZSghMCl9LHVzZVRhYnN0b3BBdDpmdW5jdGlvbih0KXtyZXR1cm4hcDAodCl9LGRvbTp7dGFnOlwiZGl2XCIsY2xhc3Nlczpbbl0uY29uY2F0KGUuZXh0cmFDbGFzc2VzKSxzdHlsZXM6bHQoe3Bvc2l0aW9uOlwicmVsYXRpdmVcIn0sZS5leHRyYVN0eWxlcyl9LGNvbXBvbmVudHM6VihbZS5oZWFkZXIsZS5ib2R5XSxlLmZvb3Rlci50b0FycmF5KCksITApLHBhcnRzOntibG9ja2VyOntkb206eEMoJzxkaXYgY2xhc3M9XCInK28rJ1wiPjwvZGl2PicpLGNvbXBvbmVudHM6W3tkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6VEI/W3IscitcIi0tb3BhcXVlXCJdOltyXX19XX19LGRyYWdCbG9ja0NsYXNzOm8sbW9kYWxCZWhhdmlvdXJzOmVjKFYoW1ZnLmNvbmZpZyh7fSksbW0oXCJkaWFsb2ctZXZlbnRzXCIsZS5kaWFsb2dFdmVudHMuY29uY2F0KFtBcihiaSgpLGZ1bmN0aW9uKHQsZSl7RmcuZm9jdXNJbih0KX0pXSkpLG1tKFwic2Nyb2xsLWxvY2tcIixbb3UoZnVuY3Rpb24oKXtZcihibigpLGkpfSkscnUoZnVuY3Rpb24oKXtxcihibigpLGkpfSldKV0sZS5leHRyYUJlaGF2aW91cnMsITApKSxldmVudE9yZGVyOmx0KCgodD17fSlbSWkoKV09W1wiZGlhbG9nLWV2ZW50c1wiXSx0W0dpKCldPVtcInNjcm9sbC1sb2NrXCIsXCJkaWFsb2ctZXZlbnRzXCIsXCJhbGxveS5iYXNlLmJlaGF2aW91clwiXSx0W1hpKCldPVtcImFsbG95LmJhc2UuYmVoYXZpb3VyXCIsXCJkaWFsb2ctZXZlbnRzXCIsXCJzY3JvbGwtbG9ja1wiXSx0KSxlLmV2ZW50T3JkZXIpfSl9ZnVuY3Rpb24gY0IodCl7cmV0dXJuIGZwLnNrZXRjaCh7ZG9tOnt0YWc6XCJidXR0b25cIixjbGFzc2VzOltcInRveC1idXR0b25cIixcInRveC1idXR0b24tLWljb25cIixcInRveC1idXR0b24tLW5ha2VkXCJdLGF0dHJpYnV0ZXM6e3R5cGU6XCJidXR0b25cIixcImFyaWEtbGFiZWxcIjp0LnRyYW5zbGF0ZShcIkNsb3NlXCIpLHRpdGxlOnQudHJhbnNsYXRlKFwiQ2xvc2VcIil9fSxjb21wb25lbnRzOltYbShcImNsb3NlXCIse3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWljb25cIl19LHQuaWNvbnMpXSxhY3Rpb246ZnVuY3Rpb24odCl7dnIodCx3eSl9fSl9ZnVuY3Rpb24gc0IodCxlLG4pe2Z1bmN0aW9uIG8odCl7cmV0dXJuW3JpKG4udHJhbnNsYXRlKHQudGl0bGUpKV19cmV0dXJue2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtZGlhbG9nX190aXRsZVwiXSxhdHRyaWJ1dGVzOmx0KHt9LGUubWFwKGZ1bmN0aW9uKHQpe3JldHVybntpZDp0fX0pLmdldE9yKHt9KSl9LGNvbXBvbmVudHM6byh0KSxiZWhhdmlvdXJzOmVjKFtrXy5jb25maWcoe2NoYW5uZWw6ZUEscmVuZGVyQ29tcG9uZW50czpvfSldKX19ZnVuY3Rpb24gbEIoKXtyZXR1cm57ZG9tOnhDKCc8ZGl2IGNsYXNzPVwidG94LWRpYWxvZ19fZHJhZ2hhbmRsZVwiPjwvZGl2PicpfX1mdW5jdGlvbiBmQih0LGUpe3JldHVybiBuPXt0aXRsZTplLnNoYXJlZC5wcm92aWRlcnMudHJhbnNsYXRlKHQpLGRyYWdnYWJsZTplLmRpYWxvZy5pc0RyYWdnYWJsZU1vZGFsKCl9LG89ZS5zaGFyZWQucHJvdmlkZXJzLHI9T0UucGFydHMudGl0bGUoc0Iobix2dC5ub25lKCksbykpLGk9T0UucGFydHMuZHJhZ2hhbmRsZShsQigpKSx1PU9FLnBhcnRzLmNsb3NlKGNCKG8pKSxhPVtyXS5jb25jYXQobi5kcmFnZ2FibGU/W2ldOltdKS5jb25jYXQoW3VdKSxseS5za2V0Y2goe2RvbTp4QygnPGRpdiBjbGFzcz1cInRveC1kaWFsb2dfX2hlYWRlclwiPjwvZGl2PicpLGNvbXBvbmVudHM6YX0pO3ZhciBuLG8scixpLHUsYX1mdW5jdGlvbiBkQih0LGUsbil7cmV0dXJue2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtZGlhbG9nX19idXN5LXNwaW5uZXJcIl0sYXR0cmlidXRlczp7XCJhcmlhLWxhYmVsXCI6bi50cmFuc2xhdGUodCl9LHN0eWxlczp7bGVmdDpcIjBweFwiLHJpZ2h0OlwiMHB4XCIsYm90dG9tOlwiMHB4XCIsdG9wOlwiMHB4XCIscG9zaXRpb246XCJhYnNvbHV0ZVwifX0sYmVoYXZpb3VyczplLGNvbXBvbmVudHM6W3tkb206eEMoJzxkaXYgY2xhc3M9XCJ0b3gtc3Bpbm5lclwiPjxkaXY+PC9kaXY+PGRpdj48L2Rpdj48ZGl2PjwvZGl2PjwvZGl2PicpfV19fWZ1bmN0aW9uIG1CKHQsbyxlKXtyZXR1cm57b25DbG9zZTpmdW5jdGlvbigpe3JldHVybiBlLmNsb3NlV2luZG93KCl9LG9uQmxvY2s6ZnVuY3Rpb24obil7T0Uuc2V0QnVzeSh0KCksZnVuY3Rpb24odCxlKXtyZXR1cm4gZEIobi5tZXNzYWdlLGUsbyl9KX0sb25VbmJsb2NrOmZ1bmN0aW9uKCl7T0Uuc2V0SWRsZSh0KCkpfX19ZnVuY3Rpb24gZ0IodCxlLG4sbyl7dmFyIHI7cmV0dXJuIFR1KGFCKGx0KGx0KHt9LHQpLHtsYXp5U2luazpvLnNoYXJlZC5nZXRTaW5rLGV4dHJhQmVoYXZpb3VyczpWKFtrXy5jb25maWcoe2NoYW5uZWw6dEEsdXBkYXRlU3RhdGU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdnQuc29tZShlKX0saW5pdGlhbERhdGE6ZX0pLHBTKHt9KV0sdC5leHRyYUJlaGF2aW91cnMsITApLG9uRXNjYXBlOmZ1bmN0aW9uKHQpe3ZyKHQsd3kpfSxkaWFsb2dFdmVudHM6bixldmVudE9yZGVyOigocj17fSlbRmkoKV09W2tfLm5hbWUoKSxpYy5uYW1lKCldLHJbR2koKV09W1wic2Nyb2xsLWxvY2tcIixrXy5uYW1lKCksXCJtZXNzYWdlc1wiLFwiZGlhbG9nLWV2ZW50c1wiLFwiYWxsb3kuYmFzZS5iZWhhdmlvdXJcIl0scltYaSgpXT1bXCJhbGxveS5iYXNlLmJlaGF2aW91clwiLFwiZGlhbG9nLWV2ZW50c1wiLFwibWVzc2FnZXNcIixrXy5uYW1lKCksXCJzY3JvbGwtbG9ja1wiXSxyKX0pKSl9ZnVuY3Rpb24gcEIodCl7cmV0dXJuIEIodCxmdW5jdGlvbih0KXtyZXR1cm5cIm1lbnVcIj09PXQudHlwZT8obj1CKChlPXQpLml0ZW1zLGZ1bmN0aW9uKHQpe3ZhciBlPVBvKCExKTtyZXR1cm4gbHQobHQoe30sdCkse3N0b3JhZ2U6ZX0pfSksbHQobHQoe30sZSkse2l0ZW1zOm59KSk6dDt2YXIgZSxufSl9ZnVuY3Rpb24gaEIodCl7cmV0dXJuIFIodCxmdW5jdGlvbih0LGUpe3JldHVyblwibWVudVwiIT09ZS50eXBlP3Q6UihlLml0ZW1zLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRbZS5uYW1lXT1lLnN0b3JhZ2UsdH0sdCl9LHt9KX1mdW5jdGlvbiB2Qih0LG4pe3JldHVybltFcihiaSgpLGcwKSx0KHh5LGZ1bmN0aW9uKHQsZSl7bi5vbkNsb3NlKCksZS5vbkNsb3NlKCl9KSx0KHd5LGZ1bmN0aW9uKHQsZSxuLG8pe2Uub25DYW5jZWwodCksdnIobyx4eSl9KSxDcihPeSxmdW5jdGlvbih0LGUpe3JldHVybiBuLm9uVW5ibG9jaygpfSksQ3IoQ3ksZnVuY3Rpb24odCxlKXtyZXR1cm4gbi5vbkJsb2NrKGUuZXZlbnQpfSldfWZ1bmN0aW9uIGJCKHQsZSl7ZnVuY3Rpb24gbih0LGUpe3JldHVybiBseS5za2V0Y2goe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtZGlhbG9nX19mb290ZXItXCIrdF19LGNvbXBvbmVudHM6QihlLGZ1bmN0aW9uKHQpe3JldHVybiB0Lm1lbWVudG8uYXNTcGVjKCl9KX0pfXZhciBvPU0oZS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuZm9vdGVyQnV0dG9uc30pLmdldE9yKFtdKSxmdW5jdGlvbih0KXtyZXR1cm5cInN0YXJ0XCI9PT10LmFsaWdufSk7cmV0dXJuW24oXCJzdGFydFwiLG8ucGFzcyksbihcImVuZFwiLG8uZmFpbCldfWZ1bmN0aW9uIHlCKHQsbil7cmV0dXJue2RvbTp4QygnPGRpdiBjbGFzcz1cInRveC1kaWFsb2dfX2Zvb3RlclwiPjwvZGl2PicpLGNvbXBvbmVudHM6W10sYmVoYXZpb3VyczplYyhba18uY29uZmlnKHtjaGFubmVsOm9BLGluaXRpYWxEYXRhOnQsdXBkYXRlU3RhdGU6ZnVuY3Rpb24odCxlKXt2YXIgcj1CKGUuYnV0dG9ucyxmdW5jdGlvbih0KXt2YXIgZT1IbShRMCh0LHQudHlwZSxuKSk7cmV0dXJue25hbWU6dC5uYW1lLGFsaWduOnQuYWxpZ24sbWVtZW50bzplfX0pO3JldHVybiB2dC5zb21lKHtsb29rdXBCeU5hbWU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gbj10LG89ZSxOKHIsZnVuY3Rpb24odCl7cmV0dXJuIHQubmFtZT09PW99KS5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiB0Lm1lbWVudG8uZ2V0T3B0KG4pfSk7dmFyIG4sb30sZm9vdGVyQnV0dG9uczpyfSl9LHJlbmRlckNvbXBvbmVudHM6YkJ9KV0pfX1mdW5jdGlvbiB4Qih0LGUpe3JldHVybiBPRS5wYXJ0cy5mb290ZXIoeUIodCxlKSl9ZnVuY3Rpb24gd0IoZSxuKXtpZihlLmdldFJvb3QoKS5nZXRTeXN0ZW0oKS5pc0Nvbm5lY3RlZCgpKXt2YXIgbz1jZC5nZXRDdXJyZW50KGUuZ2V0Rm9ybVdyYXBwZXIoKSkuZ2V0T3IoZS5nZXRGb3JtV3JhcHBlcigpKTtyZXR1cm4gblMuZ2V0RmllbGQobyxuKS5mb2xkKGZ1bmN0aW9uKCl7dmFyIHQ9ZS5nZXRGb290ZXIoKTtyZXR1cm4ga18uZ2V0U3RhdGUodCkuZ2V0KCkuYmluZChmdW5jdGlvbih0KXtyZXR1cm4gdC5sb29rdXBCeU5hbWUobyxuKX0pfSxmdW5jdGlvbih0KXtyZXR1cm4gdnQuc29tZSh0KX0pfXJldHVybiB2dC5ub25lKCl9ZnVuY3Rpb24gU0IoYyxvLHMpe2Z1bmN0aW9uIHQodCl7dmFyIGU9Yy5nZXRSb290KCk7ZS5nZXRTeXN0ZW0oKS5pc0Nvbm5lY3RlZCgpJiZ0KGUpfXZhciBsPXtnZXREYXRhOmZ1bmN0aW9uKCl7dmFyIHQ9Yy5nZXRSb290KCksZT10LmdldFN5c3RlbSgpLmlzQ29ubmVjdGVkKCk/Yy5nZXRGb3JtV3JhcHBlcigpOnQsbj1EZi5nZXRWYWx1ZShlKSxvPWR0KHMsZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0KCl9KTtyZXR1cm4gbHQobHQoe30sbiksbyl9LHNldERhdGE6ZnVuY3Rpb24oYSl7dChmdW5jdGlvbih0KXt2YXIgZSxuLG89bC5nZXREYXRhKCkscj1sdChsdCh7fSxvKSxhKSxpPShlPXIsbj1jLmdldFJvb3QoKSxrXy5nZXRTdGF0ZShuKS5nZXQoKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIGNvKGFvKFwiZGF0YVwiLHQuZGF0YVZhbGlkYXRvcixlKSl9KS5nZXRPcihlKSksdT1jLmdldEZvcm1XcmFwcGVyKCk7RGYuc2V0VmFsdWUodSxpKSxKKHMsZnVuY3Rpb24odCxlKXtUdChyLGUpJiZ0LnNldChyW2VdKX0pfSl9LGRpc2FibGU6ZnVuY3Rpb24odCl7d0IoYyx0KS5lYWNoKGdkLmRpc2FibGUpfSxlbmFibGU6ZnVuY3Rpb24odCl7d0IoYyx0KS5lYWNoKGdkLmVuYWJsZSl9LGZvY3VzOmZ1bmN0aW9uKHQpe3dCKGMsdCkuZWFjaChWZy5mb2N1cyl9LGJsb2NrOmZ1bmN0aW9uKGUpe2lmKCF5KGUpKXRocm93IG5ldyBFcnJvcihcIlRoZSBkaWFsb2dJbnN0YW5jZUFQSS5ibG9jayBmdW5jdGlvbiBzaG91bGQgYmUgcGFzc2VkIGEgYmxvY2tpbmcgbWVzc2FnZSBvZiB0eXBlIHN0cmluZyBhcyBhbiBhcmd1bWVudFwiKTt0KGZ1bmN0aW9uKHQpe2JyKHQsQ3kse21lc3NhZ2U6ZX0pfSl9LHVuYmxvY2s6ZnVuY3Rpb24oKXt0KGZ1bmN0aW9uKHQpe3ZyKHQsT3kpfSl9LHNob3dUYWI6ZnVuY3Rpb24obil7dChmdW5jdGlvbih0KXt2YXIgZT1jLmdldEJvZHkoKTtrXy5nZXRTdGF0ZShlKS5nZXQoKS5leGlzdHMoZnVuY3Rpb24odCl7cmV0dXJuIHQuaXNUYWJQYW5lbCgpfSkmJmNkLmdldEN1cnJlbnQoZSkuZWFjaChmdW5jdGlvbih0KXskRC5zaG93VGFiKHQsbil9KX0pfSxyZWRpYWw6ZnVuY3Rpb24obil7dChmdW5jdGlvbih0KXt2YXIgZT1vKG4pO3QuZ2V0U3lzdGVtKCkuYnJvYWRjYXN0T24oW3RBXSxlKSx0LmdldFN5c3RlbSgpLmJyb2FkY2FzdE9uKFtlQV0sZS5pbnRlcm5hbERpYWxvZyksdC5nZXRTeXN0ZW0oKS5icm9hZGNhc3RPbihbbkFdLGUuaW50ZXJuYWxEaWFsb2cpLHQuZ2V0U3lzdGVtKCkuYnJvYWRjYXN0T24oW29BXSxlLmludGVybmFsRGlhbG9nKSxsLnNldERhdGEoZS5pbml0aWFsRGF0YSl9KX0sY2xvc2U6ZnVuY3Rpb24oKXt0KGZ1bmN0aW9uKHQpe3ZyKHQseHkpfSl9fTtyZXR1cm4gbH1mdW5jdGlvbiBrQih0KXtyZXR1cm4geCh0KSYmLTEhPT1NQi5pbmRleE9mKHQubWNlQWN0aW9uKX1mdW5jdGlvbiBDQihvLHQscixlKXt2YXIgbixpLHUsYT1mQihvLnRpdGxlLGUpLGM9KGk9e2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtZGlhbG9nX19jb250ZW50LWpzXCJdfSxjb21wb25lbnRzOlt7ZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltcInRveC1kaWFsb2dfX2JvZHktaWZyYW1lXCJdfSxjb21wb25lbnRzOltkMCh7ZG9tOnt0YWc6XCJpZnJhbWVcIixhdHRyaWJ1dGVzOntzcmM6by51cmx9fSxiZWhhdmlvdXJzOmVjKFtweS5jb25maWcoe30pLFZnLmNvbmZpZyh7fSldKX0pXX1dLGJlaGF2aW91cnM6ZWMoW0ZnLmNvbmZpZyh7bW9kZTpcImFjeWNsaWNcIix1c2VUYWJzdG9wQXQ6TyhwMCl9KV0pfSxPRS5wYXJ0cy5ib2R5KGkpKSxzPW8uYnV0dG9ucy5iaW5kKGZ1bmN0aW9uKHQpe3JldHVybiAwPT09dC5sZW5ndGg/dnQubm9uZSgpOnZ0LnNvbWUoeEIoe2J1dHRvbnM6dH0sZSkpfSksbD1FQihmdW5jdGlvbigpe3JldHVybiB2fSxtQihmdW5jdGlvbigpe3JldHVybiBofSxlLnNoYXJlZC5wcm92aWRlcnMsdCkpLGY9bHQobHQoe30sby5oZWlnaHQuZm9sZChmdW5jdGlvbigpe3JldHVybnt9fSxmdW5jdGlvbih0KXtyZXR1cm57aGVpZ2h0OnQrXCJweFwiLFwibWF4LWhlaWdodFwiOnQrXCJweFwifX0pKSxvLndpZHRoLmZvbGQoZnVuY3Rpb24oKXtyZXR1cm57fX0sZnVuY3Rpb24odCl7cmV0dXJue3dpZHRoOnQrXCJweFwiLFwibWF4LXdpZHRoXCI6dCtcInB4XCJ9fSkpLGQ9by53aWR0aC5pc05vbmUoKSYmby5oZWlnaHQuaXNOb25lKCk/W1widG94LWRpYWxvZy0td2lkdGgtbGdcIl06W10sbT1uZXcgQkIoby51cmwse2Jhc2VfdXJpOm5ldyBCQih3aW5kb3cubG9jYXRpb24uaHJlZil9KSxnPW0ucHJvdG9jb2wrXCI6Ly9cIittLmhvc3QrKG0ucG9ydD9cIjpcIittLnBvcnQ6XCJcIikscD1tYygpLGg9Z0Ioe2hlYWRlcjphLGJvZHk6Yyxmb290ZXI6cyxleHRyYUNsYXNzZXM6ZCxleHRyYUJlaGF2aW91cnM6W21tKFwibWVzc2FnZXNcIixbb3UoZnVuY3Rpb24oKXt2YXIgdD1wYyhNdC5mcm9tRG9tKHdpbmRvdyksXCJtZXNzYWdlXCIsZnVuY3Rpb24odCl7dmFyIGUsbjttLmlzU2FtZU9yaWdpbihuZXcgQkIodC5yYXcub3JpZ2luKSkmJihrQihlPXQucmF3LmRhdGEpP2Z1bmN0aW9uKHQsZSxuKXtzd2l0Y2gobi5tY2VBY3Rpb24pe2Nhc2VcImluc2VydENvbnRlbnRcIjp0Lmluc2VydENvbnRlbnQobi5jb250ZW50KTticmVhaztjYXNlXCJzZXRDb250ZW50XCI6dC5zZXRDb250ZW50KG4uY29udGVudCk7YnJlYWs7Y2FzZVwiZXhlY0NvbW1hbmRcIjp2YXIgbz0hIXcobi51aSkmJm4udWk7dC5leGVjQ29tbWFuZChuLmNtZCxvLG4udmFsdWUpO2JyZWFrO2Nhc2VcImNsb3NlXCI6ZS5jbG9zZSgpO2JyZWFrO2Nhc2VcImJsb2NrXCI6ZS5ibG9jayhuLm1lc3NhZ2UpO2JyZWFrO2Nhc2VcInVuYmxvY2tcIjplLnVuYmxvY2soKX19KHIsdixlKToha0Iobj1lKSYmeChuKSYmVHQobixcIm1jZUFjdGlvblwiKSYmby5vbk1lc3NhZ2UodixlKSl9KTtwLnNldCh0KX0pLHJ1KHAuY2xlYXIpXSksaWMuY29uZmlnKHtjaGFubmVsczooKG49e30pW3JBXT17b25SZWNlaXZlOmZ1bmN0aW9uKHQsZSl7SXUodC5lbGVtZW50LFwiaWZyYW1lXCIpLmVhY2goZnVuY3Rpb24odCl7dC5kb20uY29udGVudFdpbmRvdy5wb3N0TWVzc2FnZShlLGcpfSl9fSxuKX0pXSxleHRyYVN0eWxlczpmfSxvLGwsZSksdj17YmxvY2s6ZnVuY3Rpb24oZSl7aWYoIXkoZSkpdGhyb3cgbmV3IEVycm9yKFwiVGhlIHVybERpYWxvZ0luc3RhbmNlQVBJLmJsb2NrIGZ1bmN0aW9uIHNob3VsZCBiZSBwYXNzZWQgYSBibG9ja2luZyBtZXNzYWdlIG9mIHR5cGUgc3RyaW5nIGFzIGFuIGFyZ3VtZW50XCIpO2IoZnVuY3Rpb24odCl7YnIodCxDeSx7bWVzc2FnZTplfSl9KX0sdW5ibG9jazpmdW5jdGlvbigpe2IoZnVuY3Rpb24odCl7dnIodCxPeSl9KX0sY2xvc2U6ZnVuY3Rpb24oKXtiKGZ1bmN0aW9uKHQpe3ZyKHQseHkpfSl9LHNlbmRNZXNzYWdlOmZ1bmN0aW9uKGUpe2IoZnVuY3Rpb24odCl7dC5nZXRTeXN0ZW0oKS5icm9hZGNhc3RPbihbckFdLGUpfSl9fTtmdW5jdGlvbiBiKHQpe3UuZ2V0U3lzdGVtKCkuaXNDb25uZWN0ZWQoKSYmdCh1KX1yZXR1cm57ZGlhbG9nOnU9aCxpbnN0YW5jZUFwaTp2fX1mdW5jdGlvbiBPQih0KXtmdW5jdGlvbiBvKHQseSl7cmV0dXJuIGpELm9wZW4oZnVuY3Rpb24odCxlLG4pe3ZhciBvLHIsaSx1LGEsYyxzLGwsZixkLG0sZyxwLGgsdj1lLGI9KHI9e3JlZGlhbDpqRC5yZWRpYWwsY2xvc2VXaW5kb3c6ZnVuY3Rpb24oKXtPRS5oaWRlKGIuZGlhbG9nKSx5KGIuaW5zdGFuY2VBcGkpfX0saT1SLGM9ZkIoKG89e2RhdGFWYWxpZGF0b3I6bixpbml0aWFsRGF0YTp2LGludGVybmFsRGlhbG9nOnR9KS5pbnRlcm5hbERpYWxvZy50aXRsZSxpKSx1PWksYT14RSh7Ym9keTpvLmludGVybmFsRGlhbG9nLmJvZHl9LHZ0Lm5vbmUoKSx1LCExKSxzPU9FLnBhcnRzLmJvZHkoYSksbD1wQihvLmludGVybmFsRGlhbG9nLmJ1dHRvbnMpLGY9aEIobCksZD14Qih7YnV0dG9uczpsfSxpKSxtPURCKGZ1bmN0aW9uKCl7cmV0dXJuIGh9LG1CKGZ1bmN0aW9uKCl7cmV0dXJuIHB9LGkuc2hhcmVkLnByb3ZpZGVycyxyKSxpLnNoYXJlZC5nZXRTaW5rKSxnPWZ1bmN0aW9uKCl7c3dpdGNoKG8uaW50ZXJuYWxEaWFsb2cuc2l6ZSl7Y2FzZVwibGFyZ2VcIjpyZXR1cm5bXCJ0b3gtZGlhbG9nLS13aWR0aC1sZ1wiXTtjYXNlXCJtZWRpdW1cIjpyZXR1cm5bXCJ0b3gtZGlhbG9nLS13aWR0aC1tZFwiXTtkZWZhdWx0OnJldHVybltdfX0oKSxwPWdCKHtoZWFkZXI6Yyxib2R5OnMsZm9vdGVyOnZ0LnNvbWUoZCksZXh0cmFDbGFzc2VzOmcsZXh0cmFCZWhhdmlvdXJzOltdLGV4dHJhU3R5bGVzOnt9fSxvLG0saSksaD1TQih7Z2V0Um9vdDpydChwKSxnZXRCb2R5OmZ1bmN0aW9uKCl7cmV0dXJuIE9FLmdldEJvZHkocCl9LGdldEZvb3RlcjpmdW5jdGlvbigpe3JldHVybiBPRS5nZXRGb290ZXIocCl9LGdldEZvcm1XcmFwcGVyOmZ1bmN0aW9uKCl7dmFyIHQ9T0UuZ2V0Qm9keShwKTtyZXR1cm4gY2QuZ2V0Q3VycmVudCh0KS5nZXRPcih0KX19LHIucmVkaWFsLGYpLHtkaWFsb2c6cCxpbnN0YW5jZUFwaTpofSk7cmV0dXJuIE9FLnNob3coYi5kaWFsb2cpLGIuaW5zdGFuY2VBcGkuc2V0RGF0YSh2KSxiLmluc3RhbmNlQXBpfSx0KX1mdW5jdGlvbiByKHQsTSxGLEkpe3JldHVybiBqRC5vcGVuKGZ1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiBvKCl7cmV0dXJuIEUub24oZnVuY3Rpb24odCl7dXAucmVwb3NpdGlvbih0KSxqMS5yZWZyZXNoKHQpfSl9dmFyIHIsaSx1LGEsYyxzLGwsZixkLG0sZyxwLGgsdixiLHkseCx3LFMsayxDLE8sXyxUPWNvKGFvKFwiZGF0YVwiLG4sZSkpLEU9Z2MoKSxEPVIuc2hhcmVkLmhlYWRlci5pc1Bvc2l0aW9uZWRBdFRvcCgpLEE9KGk9e2RhdGFWYWxpZGF0b3I6bixpbml0aWFsRGF0YTpULGludGVybmFsRGlhbG9nOnR9LHU9e3JlZGlhbDpqRC5yZWRpYWwsY2xvc2VXaW5kb3c6ZnVuY3Rpb24oKXtFLm9uKHVwLmhpZGUpLE4ub2ZmKFwiUmVzaXplRWRpdG9yXCIsbyksRS5jbGVhcigpLEYoQS5pbnN0YW5jZUFwaSl9fSxhPVIsYz1JLHY9SXIoXCJkaWFsb2ctbGFiZWxcIiksYj1JcihcImRpYWxvZy1jb250ZW50XCIpLHk9SG0oKGY9e3RpdGxlOmkuaW50ZXJuYWxEaWFsb2cudGl0bGUsZHJhZ2dhYmxlOiEwfSxkPXYsbT1hLnNoYXJlZC5wcm92aWRlcnMsbHkuc2tldGNoKHtkb206eEMoJzxkaXYgY2xhc3M9XCJ0b3gtZGlhbG9nX19oZWFkZXJcIj48L2Rpdj4nKSxjb21wb25lbnRzOltzQihmLHZ0LnNvbWUoZCksbSksbEIoKSxjQihtKV0sY29udGFpbmVyQmVoYXZpb3VyczplYyhbYUUuY29uZmlnKHttb2RlOlwibW91c2VcIixibG9ja2VyQ2xhc3M6XCJibG9ja2VyXCIsZ2V0VGFyZ2V0OmZ1bmN0aW9uKHQpe3JldHVybiBSdSh0LCdbcm9sZT1cImRpYWxvZ1wiXScpLmdldE9yRGllKCl9LHNuYXBzOntnZXRTbmFwUG9pbnRzOmZ1bmN0aW9uKCl7cmV0dXJuW119LGxlZnRBdHRyOlwiZGF0YS1kcmFnLWxlZnRcIix0b3BBdHRyOlwiZGF0YS1kcmFnLXRvcFwifX0pXSl9KSkpLHg9SG0oKGc9e2JvZHk6aS5pbnRlcm5hbERpYWxvZy5ib2R5fSxwPWEsaD1jLHhFKGcsdnQuc29tZShiKSxwLGgpKSksdz1wQihpLmludGVybmFsRGlhbG9nLmJ1dHRvbnMpLFM9aEIodyksaz1IbShBQih7YnV0dG9uczp3fSxhKSksQz1EQihmdW5jdGlvbigpe3JldHVybiBffSx7b25CbG9jazpmdW5jdGlvbihuKXtmTy5ibG9jayhPLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGRCKG4ubWVzc2FnZSxlLGEuc2hhcmVkLnByb3ZpZGVycyl9KX0sb25VbmJsb2NrOmZ1bmN0aW9uKCl7Zk8udW5ibG9jayhPKX0sb25DbG9zZTpmdW5jdGlvbigpe3JldHVybiB1LmNsb3NlV2luZG93KCl9fSxhLnNoYXJlZC5nZXRTaW5rKSxPPVR1KHtkb206e3RhZzpcImRpdlwiLGNsYXNzZXM6W1widG94LWRpYWxvZ1wiLFwidG94LWRpYWxvZy1pbmxpbmVcIl0sYXR0cmlidXRlczooKHM9e3JvbGU6XCJkaWFsb2dcIn0pW1wiYXJpYS1sYWJlbGxlZGJ5XCJdPXYsc1tcImFyaWEtZGVzY3JpYmVkYnlcIl09YixzKX0sZXZlbnRPcmRlcjooKGw9e30pW0ZpKCldPVtrXy5uYW1lKCksaWMubmFtZSgpXSxsW0lpKCldPVtcImV4ZWN1dGUtb24tZm9ybVwiXSxsW0dpKCldPVtcInJlZmxlY3RpbmdcIixcImV4ZWN1dGUtb24tZm9ybVwiXSxsKSxiZWhhdmlvdXJzOmVjKFtGZy5jb25maWcoe21vZGU6XCJjeWNsaWNcIixvbkVzY2FwZTpmdW5jdGlvbih0KXtyZXR1cm4gdnIodCx4eSksdnQuc29tZSghMCl9LHVzZVRhYnN0b3BBdDpmdW5jdGlvbih0KXtyZXR1cm4hcDAodCkmJihcImJ1dHRvblwiIT09RnQodCl8fFwiZGlzYWJsZWRcIiE9PWllKHQsXCJkaXNhYmxlZFwiKSl9fSksa18uY29uZmlnKHtjaGFubmVsOnRBLHVwZGF0ZVN0YXRlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZ0LnNvbWUoZSl9LGluaXRpYWxEYXRhOml9KSxWZy5jb25maWcoe30pLG1tKFwiZXhlY3V0ZS1vbi1mb3JtXCIsQy5jb25jYXQoW0FyKGJpKCksZnVuY3Rpb24odCxlKXtGZy5mb2N1c0luKHQpfSldKSksZk8uY29uZmlnKHtnZXRSb290OmZ1bmN0aW9uKCl7cmV0dXJuIHZ0LnNvbWUoTyl9fSksUmcuY29uZmlnKHt9KSxwUyh7fSldKSxjb21wb25lbnRzOlt5LmFzU3BlYygpLHguYXNTcGVjKCksay5hc1NwZWMoKV19KSxfPVNCKHtnZXRSb290OnJ0KE8pLGdldEZvb3RlcjpmdW5jdGlvbigpe3JldHVybiBrLmdldChPKX0sZ2V0Qm9keTpmdW5jdGlvbigpe3JldHVybiB4LmdldChPKX0sZ2V0Rm9ybVdyYXBwZXI6ZnVuY3Rpb24oKXt2YXIgdD14LmdldChPKTtyZXR1cm4gY2QuZ2V0Q3VycmVudCh0KS5nZXRPcih0KX19LHUucmVkaWFsLFMpLHtkaWFsb2c6TyxpbnN0YW5jZUFwaTpffSksQj1UdSh1cC5za2V0Y2gobHQobHQoe2xhenlTaW5rOlIuc2hhcmVkLmdldFNpbmssZG9tOnt0YWc6XCJkaXZcIixjbGFzc2VzOltdfSxmaXJlRGlzbWlzc2FsRXZlbnRJbnN0ZWFkOnt9fSxEP3t9OntmaXJlUmVwb3NpdGlvbkV2ZW50SW5zdGVhZDp7fX0pLHtpbmxpbmVCZWhhdmlvdXJzOmVjKFYoW21tKFwid2luZG93LW1hbmFnZXItaW5saW5lLWV2ZW50c1wiLFtDcihZaSgpLGZ1bmN0aW9uKHQsZSl7dnIoQS5kaWFsb2csd3kpfSldKV0sKHI9TixQJiZEP1tdOltqMS5jb25maWcoe2NvbnRleHR1YWw6e2xhenlDb250ZXh0OmZ1bmN0aW9uKCl7cmV0dXJuIHZ0LnNvbWUoTW4oTXQuZnJvbURvbShyLmdldENvbnRlbnRBcmVhQ29udGFpbmVyKCkpKSl9LGZhZGVJbkNsYXNzOlwidG94LWRpYWxvZy1kb2NrLWZhZGVpblwiLGZhZGVPdXRDbGFzczpcInRveC1kaWFsb2ctZG9jay1mYWRlb3V0XCIsdHJhbnNpdGlvbkNsYXNzOlwidG94LWRpYWxvZy1kb2NrLXRyYW5zaXRpb25cIn0sbW9kZXM6W1widG9wXCJdfSldKSwhMCkpLGlzRXh0cmFQYXJ0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIFliKG49ZSxcIi50b3gtYWxlcnQtZGlhbG9nXCIpfHxZYihuLFwiLnRveC1jb25maXJtLWRpYWxvZ1wiKTt2YXIgbn19KSkpO3JldHVybiBFLnNldChCKSx1cC5zaG93V2l0aGluKEIsRXUoQS5kaWFsb2cpLHthbmNob3I6TX0sdnQuc29tZShibigpKSksUCYmRHx8KGoxLnJlZnJlc2goQiksTi5vbihcIlJlc2l6ZUVkaXRvclwiLG8pKSxBLmluc3RhbmNlQXBpLnNldERhdGEoVCksRmcuZm9jdXNJbihBLmRpYWxvZyksQS5pbnN0YW5jZUFwaX0sdCl9dmFyIGMscyxsLGYsUj10LmJhY2tzdGFnZSxOPXQuZWRpdG9yLFA9ZHYoTiksbj0ocz0oYz10KS5iYWNrc3RhZ2Uuc2hhcmVkLHtvcGVuOmZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gbigpe09FLmhpZGUodSksZSgpfXZhciBvPUhtKFEwKHtuYW1lOlwiY2xvc2UtYWxlcnRcIix0ZXh0OlwiT0tcIixwcmltYXJ5OiEwLGFsaWduOlwiZW5kXCIsZGlzYWJsZWQ6ITEsaWNvbjp2dC5ub25lKCl9LFwiY2FuY2VsXCIsYy5iYWNrc3RhZ2UpKSxyPW9CKCksaT1uQihuLHMucHJvdmlkZXJzKSx1PVR1KGFCKHtsYXp5U2luazpmdW5jdGlvbigpe3JldHVybiBzLmdldFNpbmsoKX0saGVhZGVyOmVCKHIsaSksYm9keTpyQih0LHMucHJvdmlkZXJzKSxmb290ZXI6dnQuc29tZShpQih1QihbXSxbby5hc1NwZWMoKV0pKSksb25Fc2NhcGU6bixleHRyYUNsYXNzZXM6W1widG94LWFsZXJ0LWRpYWxvZ1wiXSxleHRyYUJlaGF2aW91cnM6W10sZXh0cmFTdHlsZXM6e30sZGlhbG9nRXZlbnRzOltDcih3eSxuKV0sZXZlbnRPcmRlcjp7fX0pKTtPRS5zaG93KHUpO3ZhciBhPW8uZ2V0KHUpO1ZnLmZvY3VzKGEpfX0pLGk9KGY9KGw9dCkuYmFja3N0YWdlLnNoYXJlZCx7b3BlbjpmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4odCl7T0UuaGlkZShhKSxlKHQpfXZhciBvPUhtKFEwKHtuYW1lOlwieWVzXCIsdGV4dDpcIlllc1wiLHByaW1hcnk6ITAsYWxpZ246XCJlbmRcIixkaXNhYmxlZDohMSxpY29uOnZ0Lm5vbmUoKX0sXCJzdWJtaXRcIixsLmJhY2tzdGFnZSkpLHI9UTAoe25hbWU6XCJub1wiLHRleHQ6XCJOb1wiLHByaW1hcnk6ITEsYWxpZ246XCJlbmRcIixkaXNhYmxlZDohMSxpY29uOnZ0Lm5vbmUoKX0sXCJjYW5jZWxcIixsLmJhY2tzdGFnZSksaT1vQigpLHU9bkIoZnVuY3Rpb24oKXtyZXR1cm4gbighMSl9LGYucHJvdmlkZXJzKSxhPVR1KGFCKHtsYXp5U2luazpmdW5jdGlvbigpe3JldHVybiBmLmdldFNpbmsoKX0saGVhZGVyOmVCKGksdSksYm9keTpyQih0LGYucHJvdmlkZXJzKSxmb290ZXI6dnQuc29tZShpQih1QihbXSxbcixvLmFzU3BlYygpXSkpKSxvbkVzY2FwZTpmdW5jdGlvbigpe3JldHVybiBuKCExKX0sZXh0cmFDbGFzc2VzOltcInRveC1jb25maXJtLWRpYWxvZ1wiXSxleHRyYUJlaGF2aW91cnM6W10sZXh0cmFTdHlsZXM6e30sZGlhbG9nRXZlbnRzOltDcih3eSxmdW5jdGlvbigpe3JldHVybiBuKCExKX0pLENyKGt5LGZ1bmN0aW9uKCl7cmV0dXJuIG4oITApfSldLGV2ZW50T3JkZXI6e319KSk7T0Uuc2hvdyhhKTt2YXIgYz1vLmdldChhKTtWZy5mb2N1cyhjKX19KTtyZXR1cm57b3BlbjpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHZvaWQgMCE9PWUmJlwidG9vbGJhclwiPT09ZS5pbmxpbmU/cih0LFIuc2hhcmVkLmFuY2hvcnMuaW5saW5lRGlhbG9nKCksbixlLmFyaWFBdHRycyk6dm9pZCAwIT09ZSYmXCJjdXJzb3JcIj09PWUuaW5saW5lP3IodCxSLnNoYXJlZC5hbmNob3JzLmN1cnNvcigpLG4sZS5hcmlhQXR0cnMpOm8odCxuKX0sb3BlblVybDpmdW5jdGlvbih0LGUpe3JldHVybiBuPWUsakQub3BlblVybChmdW5jdGlvbih0KXt2YXIgZT1DQih0LHtjbG9zZVdpbmRvdzpmdW5jdGlvbigpe09FLmhpZGUoZS5kaWFsb2cpLG4oZS5pbnN0YW5jZUFwaSl9fSxOLFIpO3JldHVybiBPRS5zaG93KGUuZGlhbG9nKSxlLmluc3RhbmNlQXBpfSx0KTt2YXIgbn0sYWxlcnQ6ZnVuY3Rpb24odCxlKXtuLm9wZW4odCxmdW5jdGlvbigpe2UoKX0pfSxjbG9zZTpmdW5jdGlvbih0KXt0LmNsb3NlKCl9LGNvbmZpcm06ZnVuY3Rpb24odCxlKXtpLm9wZW4odCxmdW5jdGlvbih0KXtlKHQpfSl9fX12YXIgX0I9ZnVuY3Rpb24gZSh0KXtmdW5jdGlvbiBsKHQpe3JldHVybiBlKHQpfXZhciBmPTA8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09dD90OlwidW5kZWZpbmVkXCI9PXR5cGVvZiB3aW5kb3c/bnVsbDp3aW5kb3c7aWYobC52ZXJzaW9uPVwiMi4zLjhcIixsLnJlbW92ZWQ9W10sIWZ8fCFmLmRvY3VtZW50fHw5IT09Zi5kb2N1bWVudC5ub2RlVHlwZSlyZXR1cm4gbC5pc1N1cHBvcnRlZD0hMSxsO3ZhciBuLGQ9Zi5kb2N1bWVudCx1PWYuZG9jdW1lbnQsbT1mLkRvY3VtZW50RnJhZ21lbnQsbz1mLkhUTUxUZW1wbGF0ZUVsZW1lbnQsZz1mLk5vZGUsYT1mLkVsZW1lbnQscj1mLk5vZGVGaWx0ZXIsaT1mLk5hbWVkTm9kZU1hcCxjPXZvaWQgMD09PWk/Zi5OYW1lZE5vZGVNYXB8fGYuTW96TmFtZWRBdHRyTWFwOmkscz1mLkhUTUxGb3JtRWxlbWVudCxwPWYuRE9NUGFyc2VyLGg9Zi50cnVzdGVkVHlwZXMsdj1hLnByb3RvdHlwZSxiPVJBKHYsXCJjbG9uZU5vZGVcIikseT1SQSh2LFwibmV4dFNpYmxpbmdcIikseD1SQSh2LFwiY2hpbGROb2Rlc1wiKSx3PVJBKHYsXCJwYXJlbnROb2RlXCIpO1wiZnVuY3Rpb25cIiE9dHlwZW9mIG98fChuPXUuY3JlYXRlRWxlbWVudChcInRlbXBsYXRlXCIpKS5jb250ZW50JiZuLmNvbnRlbnQub3duZXJEb2N1bWVudCYmKHU9bi5jb250ZW50Lm93bmVyRG9jdW1lbnQpO3ZhciBTPWZ1bmN0aW9uKHQsZSl7aWYoXCJvYmplY3RcIiE9PWlBKHQpfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiB0LmNyZWF0ZVBvbGljeSlyZXR1cm4gbnVsbDt2YXIgbj1udWxsLG89XCJkYXRhLXR0LXBvbGljeS1zdWZmaXhcIixyPVwiZG9tcHVyaWZ5XCIrKChuPWUuY3VycmVudFNjcmlwdCYmZS5jdXJyZW50U2NyaXB0Lmhhc0F0dHJpYnV0ZShvKT9lLmN1cnJlbnRTY3JpcHQuZ2V0QXR0cmlidXRlKG8pOm4pP1wiI1wiK246XCJcIik7dHJ5e3JldHVybiB0LmNyZWF0ZVBvbGljeShyLHtjcmVhdGVIVE1MOmZ1bmN0aW9uKHQpe3JldHVybiB0fX0pfWNhdGNoKHQpe3JldHVybiBjb25zb2xlLndhcm4oXCJUcnVzdGVkVHlwZXMgcG9saWN5IFwiK3IrXCIgY291bGQgbm90IGJlIGNyZWF0ZWQuXCIpLG51bGx9fShoLGQpLGs9Uz9TLmNyZWF0ZUhUTUwoXCJcIik6XCJcIixDPXUsTz1DLmltcGxlbWVudGF0aW9uLF89Qy5jcmVhdGVOb2RlSXRlcmF0b3IsVD1DLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQsRT1DLmdldEVsZW1lbnRzQnlUYWdOYW1lLEQ9ZC5pbXBvcnROb2RlLEE9e307dHJ5e0E9SUEodSkuZG9jdW1lbnRNb2RlP3UuZG9jdW1lbnRNb2RlOnt9fWNhdGNoKHQpe312YXIgQj17fTtmdW5jdGlvbiBNKHQpe3JldHVybiB0IGluc3RhbmNlb2YgUmVnRXhwfHx0IGluc3RhbmNlb2YgRnVuY3Rpb259ZnVuY3Rpb24gRih0KXtTdCYmU3Q9PT10fHwodD1JQSh0PXQmJlwib2JqZWN0XCI9PT1pQSh0KT90Ont9KSxHPVwiQUxMT1dFRF9UQUdTXCJpbiB0P0ZBKHt9LHQuQUxMT1dFRF9UQUdTKTpYLFk9XCJBTExPV0VEX0FUVFJcImluIHQ/RkEoe30sdC5BTExPV0VEX0FUVFIpOnEscHQ9XCJBRERfVVJJX1NBRkVfQVRUUlwiaW4gdD9GQShJQShodCksdC5BRERfVVJJX1NBRkVfQVRUUik6aHQsbXQ9XCJBRERfREFUQV9VUklfVEFHU1wiaW4gdD9GQShJQShndCksdC5BRERfREFUQV9VUklfVEFHUyk6Z3QsZnQ9XCJGT1JCSURfQ09OVEVOVFNcImluIHQ/RkEoe30sdC5GT1JCSURfQ09OVEVOVFMpOmR0LEo9XCJGT1JCSURfVEFHU1wiaW4gdD9GQSh7fSx0LkZPUkJJRF9UQUdTKTp7fSwkPVwiRk9SQklEX0FUVFJcImluIHQ/RkEoe30sdC5GT1JCSURfQVRUUik6e30sST1cIlVTRV9QUk9GSUxFU1wiaW4gdCYmdC5VU0VfUFJPRklMRVMsUT0hMSE9PXQuQUxMT1dfQVJJQV9BVFRSLFo9ITEhPT10LkFMTE9XX0RBVEFfQVRUUix0dD10LkFMTE9XX1VOS05PV05fUFJPVE9DT0xTfHwhMSxldD10LlNBRkVfRk9SX1RFTVBMQVRFU3x8ITEsbnQ9dC5XSE9MRV9ET0NVTUVOVHx8ITEsaXQ9dC5SRVRVUk5fRE9NfHwhMSx1dD10LlJFVFVSTl9ET01fRlJBR01FTlR8fCExLGF0PXQuUkVUVVJOX1RSVVNURURfVFlQRXx8ITEscnQ9dC5GT1JDRV9CT0RZfHwhMSxjdD0hMSE9PXQuU0FOSVRJWkVfRE9NLHN0PSExIT09dC5LRUVQX0NPTlRFTlQsbHQ9dC5JTl9QTEFDRXx8ITEsVz10LkFMTE9XRURfVVJJX1JFR0VYUHx8Vyx4dD10Lk5BTUVTUEFDRXx8eXQsdC5DVVNUT01fRUxFTUVOVF9IQU5ETElORyYmTSh0LkNVU1RPTV9FTEVNRU5UX0hBTkRMSU5HLnRhZ05hbWVDaGVjaykmJihLLnRhZ05hbWVDaGVjaz10LkNVU1RPTV9FTEVNRU5UX0hBTkRMSU5HLnRhZ05hbWVDaGVjayksdC5DVVNUT01fRUxFTUVOVF9IQU5ETElORyYmTSh0LkNVU1RPTV9FTEVNRU5UX0hBTkRMSU5HLmF0dHJpYnV0ZU5hbWVDaGVjaykmJihLLmF0dHJpYnV0ZU5hbWVDaGVjaz10LkNVU1RPTV9FTEVNRU5UX0hBTkRMSU5HLmF0dHJpYnV0ZU5hbWVDaGVjayksdC5DVVNUT01fRUxFTUVOVF9IQU5ETElORyYmXCJib29sZWFuXCI9PXR5cGVvZiB0LkNVU1RPTV9FTEVNRU5UX0hBTkRMSU5HLmFsbG93Q3VzdG9taXplZEJ1aWx0SW5FbGVtZW50cyYmKEsuYWxsb3dDdXN0b21pemVkQnVpbHRJbkVsZW1lbnRzPXQuQ1VTVE9NX0VMRU1FTlRfSEFORExJTkcuYWxsb3dDdXN0b21pemVkQnVpbHRJbkVsZW1lbnRzKSxSPS0xPT09d3QuaW5kZXhPZih0LlBBUlNFUl9NRURJQV9UWVBFKT9cInRleHQvaHRtbFwiOnQuUEFSU0VSX01FRElBX1RZUEUsTj1cImFwcGxpY2F0aW9uL3hodG1sK3htbFwiPT09Uj9mdW5jdGlvbih0KXtyZXR1cm4gdH06T0EsZXQmJihaPSExKSx1dCYmKGl0PSEwKSxJJiYoRz1GQSh7fSxjQShVQSkpLFk9W10sITA9PT1JLmh0bWwmJihGQShHLE5BKSxGQShZLGpBKSksITA9PT1JLnN2ZyYmKEZBKEcsUEEpLEZBKFksV0EpLEZBKFksWEEpKSwhMD09PUkuc3ZnRmlsdGVycyYmKEZBKEcsVkEpLEZBKFksV0EpLEZBKFksWEEpKSwhMD09PUkubWF0aE1sJiYoRkEoRyxMQSksRkEoWSxHQSksRkEoWSxYQSkpKSx0LkFERF9UQUdTJiZGQShHPUc9PT1YP0lBKEcpOkcsdC5BRERfVEFHUyksdC5BRERfQVRUUiYmRkEoWT1ZPT09cT9JQShZKTpZLHQuQUREX0FUVFIpLHQuQUREX1VSSV9TQUZFX0FUVFImJkZBKHB0LHQuQUREX1VSSV9TQUZFX0FUVFIpLHQuRk9SQklEX0NPTlRFTlRTJiZGQShmdD1mdD09PWR0P0lBKGZ0KTpmdCx0LkZPUkJJRF9DT05URU5UUyksc3QmJihHW1wiI3RleHRcIl09ITApLG50JiZGQShHLFtcImh0bWxcIixcImhlYWRcIixcImJvZHlcIl0pLEcudGFibGUmJihGQShHLFtcInRib2R5XCJdKSxkZWxldGUgSi50Ym9keSksaEEmJmhBKHQpLFN0PXQpfWwuaXNTdXBwb3J0ZWQ9XCJmdW5jdGlvblwiPT10eXBlb2YgdyYmTyYmdm9pZCAwIT09Ty5jcmVhdGVIVE1MRG9jdW1lbnQmJjkhPT1BO3ZhciBJLFIsTixQLFY9WUEsSD1xQSxMPUtBLHo9SkEsVT1RQSxqPVpBLFc9JEEsRz1udWxsLFg9RkEoe30sW10uY29uY2F0KGNBKE5BKSxjQShQQSksY0EoVkEpLGNBKExBKSxjQShVQSkpKSxZPW51bGwscT1GQSh7fSxbXS5jb25jYXQoY0EoakEpLGNBKFdBKSxjQShHQSksY0EoWEEpKSksSz1PYmplY3Quc2VhbChPYmplY3QuY3JlYXRlKG51bGwse3RhZ05hbWVDaGVjazp7d3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiExLGVudW1lcmFibGU6ITAsdmFsdWU6bnVsbH0sYXR0cmlidXRlTmFtZUNoZWNrOnt3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITEsZW51bWVyYWJsZTohMCx2YWx1ZTpudWxsfSxhbGxvd0N1c3RvbWl6ZWRCdWlsdEluRWxlbWVudHM6e3dyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMSxlbnVtZXJhYmxlOiEwLHZhbHVlOiExfX0pKSxKPW51bGwsJD1udWxsLFE9ITAsWj0hMCx0dD0hMSxldD0hMSxudD0hMSxvdD0hMSxydD0hMSxpdD0hMSx1dD0hMSxhdD0hMSxjdD0hMCxzdD0hMCxsdD0hMSxmdD1udWxsLGR0PUZBKHt9LFtcImFubm90YXRpb24teG1sXCIsXCJhdWRpb1wiLFwiY29sZ3JvdXBcIixcImRlc2NcIixcImZvcmVpZ25vYmplY3RcIixcImhlYWRcIixcImlmcmFtZVwiLFwibWF0aFwiLFwibWlcIixcIm1uXCIsXCJtb1wiLFwibXNcIixcIm10ZXh0XCIsXCJub2VtYmVkXCIsXCJub2ZyYW1lc1wiLFwibm9zY3JpcHRcIixcInBsYWludGV4dFwiLFwic2NyaXB0XCIsXCJzdHlsZVwiLFwic3ZnXCIsXCJ0ZW1wbGF0ZVwiLFwidGhlYWRcIixcInRpdGxlXCIsXCJ2aWRlb1wiLFwieG1wXCJdKSxtdD1udWxsLGd0PUZBKHt9LFtcImF1ZGlvXCIsXCJ2aWRlb1wiLFwiaW1nXCIsXCJzb3VyY2VcIixcImltYWdlXCIsXCJ0cmFja1wiXSkscHQ9bnVsbCxodD1GQSh7fSxbXCJhbHRcIixcImNsYXNzXCIsXCJmb3JcIixcImlkXCIsXCJsYWJlbFwiLFwibmFtZVwiLFwicGF0dGVyblwiLFwicGxhY2Vob2xkZXJcIixcInJvbGVcIixcInN1bW1hcnlcIixcInRpdGxlXCIsXCJ2YWx1ZVwiLFwic3R5bGVcIixcInhtbG5zXCJdKSx2dD1cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixidD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIseXQ9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIseHQ9eXQsd3Q9W1wiYXBwbGljYXRpb24veGh0bWwreG1sXCIsXCJ0ZXh0L2h0bWxcIl0sU3Q9bnVsbCxrdD11LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIpLEN0PUZBKHt9LFtcIm1pXCIsXCJtb1wiLFwibW5cIixcIm1zXCIsXCJtdGV4dFwiXSksT3Q9RkEoe30sW1wiZm9yZWlnbm9iamVjdFwiLFwiZGVzY1wiLFwidGl0bGVcIixcImFubm90YXRpb24teG1sXCJdKSxfdD1GQSh7fSxbXCJ0aXRsZVwiLFwic3R5bGVcIixcImZvbnRcIixcImFcIixcInNjcmlwdFwiXSksVHQ9RkEoe30sUEEpO0ZBKFR0LFZBKSxGQShUdCxIQSk7dmFyIEV0PUZBKHt9LExBKTtmdW5jdGlvbiBEdChlKXtDQShsLnJlbW92ZWQse2VsZW1lbnQ6ZX0pO3RyeXtlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZSl9Y2F0Y2godCl7dHJ5e2Uub3V0ZXJIVE1MPWt9Y2F0Y2godCl7ZS5yZW1vdmUoKX19fWZ1bmN0aW9uIEF0KHQsZSl7dHJ5e0NBKGwucmVtb3ZlZCx7YXR0cmlidXRlOmUuZ2V0QXR0cmlidXRlTm9kZSh0KSxmcm9tOmV9KX1jYXRjaCh0KXtDQShsLnJlbW92ZWQse2F0dHJpYnV0ZTpudWxsLGZyb206ZX0pfWlmKGUucmVtb3ZlQXR0cmlidXRlKHQpLFwiaXNcIj09PXQmJiFZW3RdKWlmKGl0fHx1dCl0cnl7RHQoZSl9Y2F0Y2godCl7fWVsc2UgdHJ5e2Uuc2V0QXR0cmlidXRlKHQsXCJcIil9Y2F0Y2godCl7fX1mdW5jdGlvbiBCdCh0KXt2YXIgZSxuLG87cnQ/dD1cIjxyZW1vdmU+PC9yZW1vdmU+XCIrdDpvPShuPV9BKHQsL15bXFxyXFxuXFx0IF0rLykpJiZuWzBdLFwiYXBwbGljYXRpb24veGh0bWwreG1sXCI9PT1SJiYodD0nPGh0bWwgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI+PGhlYWQ+PC9oZWFkPjxib2R5PicrdCtcIjwvYm9keT48L2h0bWw+XCIpO3ZhciByPVM/Uy5jcmVhdGVIVE1MKHQpOnQ7aWYoeHQ9PT15dCl0cnl7ZT0obmV3IHApLnBhcnNlRnJvbVN0cmluZyhyLFIpfWNhdGNoKHQpe31pZighZXx8IWUuZG9jdW1lbnRFbGVtZW50KXtlPU8uY3JlYXRlRG9jdW1lbnQoeHQsXCJ0ZW1wbGF0ZVwiLG51bGwpO3RyeXtlLmRvY3VtZW50RWxlbWVudC5pbm5lckhUTUw9UD9cIlwiOnJ9Y2F0Y2godCl7fX12YXIgaT1lLmJvZHl8fGUuZG9jdW1lbnRFbGVtZW50O3JldHVybiB0JiZvJiZpLmluc2VydEJlZm9yZSh1LmNyZWF0ZVRleHROb2RlKG8pLGkuY2hpbGROb2Rlc1swXXx8bnVsbCkseHQ9PT15dD9FLmNhbGwoZSxudD9cImh0bWxcIjpcImJvZHlcIilbMF06bnQ/ZS5kb2N1bWVudEVsZW1lbnQ6aX1mdW5jdGlvbiBNdCh0KXtyZXR1cm4gXy5jYWxsKHQub3duZXJEb2N1bWVudHx8dCx0LHIuU0hPV19FTEVNRU5UfHIuU0hPV19DT01NRU5UfHIuU0hPV19URVhULG51bGwsITEpfWZ1bmN0aW9uIEZ0KHQpe3JldHVyblwib2JqZWN0XCI9PT1pQShnKT90IGluc3RhbmNlb2YgZzp0JiZcIm9iamVjdFwiPT09aUEodCkmJlwibnVtYmVyXCI9PXR5cGVvZiB0Lm5vZGVUeXBlJiZcInN0cmluZ1wiPT10eXBlb2YgdC5ub2RlTmFtZX1mdW5jdGlvbiBJdCh0LGUsbil7Qlt0XSYmU0EoQlt0XSxmdW5jdGlvbih0KXt0LmNhbGwobCxlLG4sU3QpfSl9ZnVuY3Rpb24gUnQodCl7dmFyIGU7aWYoSXQoXCJiZWZvcmVTYW5pdGl6ZUVsZW1lbnRzXCIsdCxudWxsKSx0IGluc3RhbmNlb2YgcyYmKFwic3RyaW5nXCIhPXR5cGVvZiB0Lm5vZGVOYW1lfHxcInN0cmluZ1wiIT10eXBlb2YgdC50ZXh0Q29udGVudHx8XCJmdW5jdGlvblwiIT10eXBlb2YgdC5yZW1vdmVDaGlsZHx8ISh0LmF0dHJpYnV0ZXMgaW5zdGFuY2VvZiBjKXx8XCJmdW5jdGlvblwiIT10eXBlb2YgdC5yZW1vdmVBdHRyaWJ1dGV8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQuc2V0QXR0cmlidXRlfHxcInN0cmluZ1wiIT10eXBlb2YgdC5uYW1lc3BhY2VVUkl8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQuaW5zZXJ0QmVmb3JlKSlyZXR1cm4gRHQodCksMTtpZihBQSgvW1xcdTAwODAtXFx1RkZGRl0vLHQubm9kZU5hbWUpKXJldHVybiBEdCh0KSwxO3ZhciBuPU4odC5ub2RlTmFtZSk7aWYoSXQoXCJ1cG9uU2FuaXRpemVFbGVtZW50XCIsdCx7dGFnTmFtZTpuLGFsbG93ZWRUYWdzOkd9KSx0Lmhhc0NoaWxkTm9kZXMoKSYmIUZ0KHQuZmlyc3RFbGVtZW50Q2hpbGQpJiYoIUZ0KHQuY29udGVudCl8fCFGdCh0LmNvbnRlbnQuZmlyc3RFbGVtZW50Q2hpbGQpKSYmQUEoLzxbL1xcd10vZyx0LmlubmVySFRNTCkmJkFBKC88Wy9cXHddL2csdC50ZXh0Q29udGVudCkpcmV0dXJuIER0KHQpLDE7aWYoXCJzZWxlY3RcIj09PW4mJkFBKC88dGVtcGxhdGUvaSx0LmlubmVySFRNTCkpcmV0dXJuIER0KHQpLDE7aWYoR1tuXSYmIUpbbl0pcmV0dXJuIHQgaW5zdGFuY2VvZiBhJiYhZnVuY3Rpb24odCl7dmFyIGU9dyh0KTtlJiZlLnRhZ05hbWV8fChlPXtuYW1lc3BhY2VVUkk6eXQsdGFnTmFtZTpcInRlbXBsYXRlXCJ9KTt2YXIgbj1PQSh0LnRhZ05hbWUpLG89T0EoZS50YWdOYW1lKTtyZXR1cm4gdC5uYW1lc3BhY2VVUkk9PT1idD9lLm5hbWVzcGFjZVVSST09PXl0P1wic3ZnXCI9PT1uOmUubmFtZXNwYWNlVVJJPT09dnQ/XCJzdmdcIj09PW4mJihcImFubm90YXRpb24teG1sXCI9PT1vfHxDdFtvXSk6Qm9vbGVhbihUdFtuXSk6dC5uYW1lc3BhY2VVUkk9PT12dD9lLm5hbWVzcGFjZVVSST09PXl0P1wibWF0aFwiPT09bjplLm5hbWVzcGFjZVVSST09PWJ0P1wibWF0aFwiPT09biYmT3Rbb106Qm9vbGVhbihFdFtuXSk6dC5uYW1lc3BhY2VVUkk9PT15dCYmKGUubmFtZXNwYWNlVVJJIT09YnR8fE90W29dKSYmKGUubmFtZXNwYWNlVVJJIT09dnR8fEN0W29dKSYmIUV0W25dJiYoX3Rbbl18fCFUdFtuXSl9KHQpfHwoXCJub3NjcmlwdFwiPT09bnx8XCJub2VtYmVkXCI9PT1uKSYmQUEoLzxcXC9ubyhzY3JpcHR8ZW1iZWQpL2ksdC5pbm5lckhUTUwpPyhEdCh0KSwxKTooZXQmJjM9PT10Lm5vZGVUeXBlJiYoZT10LnRleHRDb250ZW50LGU9VEEoZSxWLFwiIFwiKSxlPVRBKGUsSCxcIiBcIiksdC50ZXh0Q29udGVudCE9PWUmJihDQShsLnJlbW92ZWQse2VsZW1lbnQ6dC5jbG9uZU5vZGUoKX0pLHQudGV4dENvbnRlbnQ9ZSkpLEl0KFwiYWZ0ZXJTYW5pdGl6ZUVsZW1lbnRzXCIsdCxudWxsKSwwKTtpZighSltuXSYmVnQobikpe2lmKEsudGFnTmFtZUNoZWNrIGluc3RhbmNlb2YgUmVnRXhwJiZBQShLLnRhZ05hbWVDaGVjayxuKSlyZXR1cm47aWYoSy50YWdOYW1lQ2hlY2sgaW5zdGFuY2VvZiBGdW5jdGlvbiYmSy50YWdOYW1lQ2hlY2sobikpcmV0dXJufWlmKHN0JiYhZnRbbl0pe3ZhciBvPXcodCl8fHQucGFyZW50Tm9kZSxyPXgodCl8fHQuY2hpbGROb2RlcztpZihyJiZvKWZvcih2YXIgaT1yLmxlbmd0aC0xOzA8PWk7LS1pKW8uaW5zZXJ0QmVmb3JlKGIocltpXSwhMCkseSh0KSl9cmV0dXJuIER0KHQpLDF9ZnVuY3Rpb24gTnQodCxlLG4pe2lmKGN0JiYoXCJpZFwiPT09ZXx8XCJuYW1lXCI9PT1lKSYmKG4gaW4gdXx8biBpbiBrdCkpcmV0dXJuITE7aWYoKCFafHwkW2VdfHwhQUEoTCxlKSkmJighUXx8IUFBKHosZSkpKWlmKCFZW2VdfHwkW2VdKXtpZighKFZ0KHQpJiYoSy50YWdOYW1lQ2hlY2sgaW5zdGFuY2VvZiBSZWdFeHAmJkFBKEsudGFnTmFtZUNoZWNrLHQpfHxLLnRhZ05hbWVDaGVjayBpbnN0YW5jZW9mIEZ1bmN0aW9uJiZLLnRhZ05hbWVDaGVjayh0KSkmJihLLmF0dHJpYnV0ZU5hbWVDaGVjayBpbnN0YW5jZW9mIFJlZ0V4cCYmQUEoSy5hdHRyaWJ1dGVOYW1lQ2hlY2ssZSl8fEsuYXR0cmlidXRlTmFtZUNoZWNrIGluc3RhbmNlb2YgRnVuY3Rpb24mJksuYXR0cmlidXRlTmFtZUNoZWNrKGUpKXx8XCJpc1wiPT09ZSYmSy5hbGxvd0N1c3RvbWl6ZWRCdWlsdEluRWxlbWVudHMmJihLLnRhZ05hbWVDaGVjayBpbnN0YW5jZW9mIFJlZ0V4cCYmQUEoSy50YWdOYW1lQ2hlY2ssbil8fEsudGFnTmFtZUNoZWNrIGluc3RhbmNlb2YgRnVuY3Rpb24mJksudGFnTmFtZUNoZWNrKG4pKSkpcmV0dXJuITF9ZWxzZSBpZighcHRbZV0mJiFBQShXLFRBKG4saixcIlwiKSkmJihcInNyY1wiIT09ZSYmXCJ4bGluazpocmVmXCIhPT1lJiZcImhyZWZcIiE9PWV8fFwic2NyaXB0XCI9PT10fHwwIT09RUEobixcImRhdGE6XCIpfHwhbXRbdF0pJiYoIXR0fHxBQShVLFRBKG4saixcIlwiKSkpJiZuKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIFB0KHQpe0l0KFwiYmVmb3JlU2FuaXRpemVBdHRyaWJ1dGVzXCIsdCxudWxsKTt2YXIgZT10LmF0dHJpYnV0ZXM7aWYoZSl7Zm9yKHZhciBuPXthdHRyTmFtZTpcIlwiLGF0dHJWYWx1ZTpcIlwiLGtlZXBBdHRyOiEwLGFsbG93ZWRBdHRyaWJ1dGVzOll9LG89ZS5sZW5ndGg7by0tOyl7dmFyIHIsaT0ocj1lW29dKS5uYW1lLHU9ci5uYW1lc3BhY2VVUkksYT1cInZhbHVlXCI9PT1pP3IudmFsdWU6REEoci52YWx1ZSksYz1OKGkpO2lmKG4uYXR0ck5hbWU9YyxuLmF0dHJWYWx1ZT1hLG4ua2VlcEF0dHI9ITAsbi5mb3JjZUtlZXBBdHRyPXZvaWQgMCxJdChcInVwb25TYW5pdGl6ZUF0dHJpYnV0ZVwiLHQsbiksYT1uLmF0dHJWYWx1ZSwhbi5mb3JjZUtlZXBBdHRyJiYoQXQoaSx0KSxuLmtlZXBBdHRyKSlpZihBQSgvXFwvPi9pLGEpKUF0KGksdCk7ZWxzZSBpZihldCYmKGE9VEEoYSxWLFwiIFwiKSxhPVRBKGEsSCxcIiBcIikpLE50KE4odC5ub2RlTmFtZSksYyxhKSl0cnl7dT90LnNldEF0dHJpYnV0ZU5TKHUsaSxhKTp0LnNldEF0dHJpYnV0ZShpLGEpLGtBKGwucmVtb3ZlZCl9Y2F0Y2godCl7fX1JdChcImFmdGVyU2FuaXRpemVBdHRyaWJ1dGVzXCIsdCxudWxsKX19RkEoRXQsekEpO3ZhciBWdD1mdW5jdGlvbih0KXtyZXR1cm4gMDx0LmluZGV4T2YoXCItXCIpfTtyZXR1cm4gbC5zYW5pdGl6ZT1mdW5jdGlvbih0LGUpe3ZhciBuLG8scixpLHU7aWYoXCJzdHJpbmdcIiE9dHlwZW9mKHQ9KFA9IXQpP1wiXFx4M2MhLS1cXHgzZVwiOnQpJiYhRnQodCkpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQudG9TdHJpbmcpdGhyb3cgQkEoXCJ0b1N0cmluZyBpcyBub3QgYSBmdW5jdGlvblwiKTtpZihcInN0cmluZ1wiIT10eXBlb2YodD10LnRvU3RyaW5nKCkpKXRocm93IEJBKFwiZGlydHkgaXMgbm90IGEgc3RyaW5nLCBhYm9ydGluZ1wiKX1pZighbC5pc1N1cHBvcnRlZCl7aWYoXCJvYmplY3RcIj09PWlBKGYudG9TdGF0aWNIVE1MKXx8XCJmdW5jdGlvblwiPT10eXBlb2YgZi50b1N0YXRpY0hUTUwpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXJldHVybiBmLnRvU3RhdGljSFRNTCh0KTtpZihGdCh0KSlyZXR1cm4gZi50b1N0YXRpY0hUTUwodC5vdXRlckhUTUwpfXJldHVybiB0fWlmKG90fHxGKGUpLGwucmVtb3ZlZD1bXSxsdD1cInN0cmluZ1wiIT10eXBlb2YgdCYmbHQpe2lmKHQubm9kZU5hbWUpe3ZhciBhPU4odC5ub2RlTmFtZSk7aWYoIUdbYV18fEpbYV0pdGhyb3cgQkEoXCJyb290IG5vZGUgaXMgZm9yYmlkZGVuIGFuZCBjYW5ub3QgYmUgc2FuaXRpemVkIGluLXBsYWNlXCIpfX1lbHNlIGlmKHQgaW5zdGFuY2VvZiBnKTE9PT0obz0obj1CdChcIlxceDNjIS0tLS1cXHgzZVwiKSkub3duZXJEb2N1bWVudC5pbXBvcnROb2RlKHQsITApKS5ub2RlVHlwZSYmXCJCT0RZXCI9PT1vLm5vZGVOYW1lfHxcIkhUTUxcIj09PW8ubm9kZU5hbWU/bj1vOm4uYXBwZW5kQ2hpbGQobyk7ZWxzZXtpZighaXQmJiFldCYmIW50JiYtMT09PXQuaW5kZXhPZihcIjxcIikpcmV0dXJuIFMmJmF0P1MuY3JlYXRlSFRNTCh0KTp0O2lmKCEobj1CdCh0KSkpcmV0dXJuIGl0P251bGw6YXQ/azpcIlwifW4mJnJ0JiZEdChuLmZpcnN0Q2hpbGQpO2Zvcih2YXIgYz1NdChsdD90Om4pO3I9Yy5uZXh0Tm9kZSgpOykzPT09ci5ub2RlVHlwZSYmcj09PWl8fFJ0KHIpfHwoci5jb250ZW50IGluc3RhbmNlb2YgbSYmZnVuY3Rpb24gdChlKXt2YXIgbixvPU10KGUpO2ZvcihJdChcImJlZm9yZVNhbml0aXplU2hhZG93RE9NXCIsZSxudWxsKTtuPW8ubmV4dE5vZGUoKTspSXQoXCJ1cG9uU2FuaXRpemVTaGFkb3dOb2RlXCIsbixudWxsKSxSdChuKXx8KG4uY29udGVudCBpbnN0YW5jZW9mIG0mJnQobi5jb250ZW50KSxQdChuKSk7SXQoXCJhZnRlclNhbml0aXplU2hhZG93RE9NXCIsZSxudWxsKX0oci5jb250ZW50KSxQdChyKSxpPXIpO2lmKGk9bnVsbCxsdClyZXR1cm4gdDtpZihpdCl7aWYodXQpZm9yKHU9VC5jYWxsKG4ub3duZXJEb2N1bWVudCk7bi5maXJzdENoaWxkOyl1LmFwcGVuZENoaWxkKG4uZmlyc3RDaGlsZCk7ZWxzZSB1PW47cmV0dXJuIFkuc2hhZG93cm9vdD9ELmNhbGwoZCx1LCEwKTp1fXZhciBzPW50P24ub3V0ZXJIVE1MOm4uaW5uZXJIVE1MO3JldHVybiBudCYmR1tcIiFkb2N0eXBlXCJdJiZuLm93bmVyRG9jdW1lbnQmJm4ub3duZXJEb2N1bWVudC5kb2N0eXBlJiZuLm93bmVyRG9jdW1lbnQuZG9jdHlwZS5uYW1lJiZBQSh0QixuLm93bmVyRG9jdW1lbnQuZG9jdHlwZS5uYW1lKSYmKHM9XCI8IURPQ1RZUEUgXCIrbi5vd25lckRvY3VtZW50LmRvY3R5cGUubmFtZStcIj5cXG5cIitzKSxldCYmKHM9VEEocyxWLFwiIFwiKSxzPVRBKHMsSCxcIiBcIikpLFMmJmF0P1MuY3JlYXRlSFRNTChzKTpzfSxsLnNldENvbmZpZz1mdW5jdGlvbih0KXtGKHQpLG90PSEwfSxsLmNsZWFyQ29uZmlnPWZ1bmN0aW9uKCl7U3Q9bnVsbCxvdD0hMX0sbC5pc1ZhbGlkQXR0cmlidXRlPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gU3R8fEYoe30pLE50KE4odCksTihlKSxuKX0sbC5hZGRIb29rPWZ1bmN0aW9uKHQsZSl7XCJmdW5jdGlvblwiPT10eXBlb2YgZSYmKEJbdF09Qlt0XXx8W10sQ0EoQlt0XSxlKSl9LGwucmVtb3ZlSG9vaz1mdW5jdGlvbih0KXtpZihCW3RdKXJldHVybiBrQShCW3RdKX0sbC5yZW1vdmVIb29rcz1mdW5jdGlvbih0KXtCW3RdJiYoQlt0XT1bXSl9LGwucmVtb3ZlQWxsSG9va3M9ZnVuY3Rpb24oKXtCPXt9fSxsfSgpLFRCPWViLmRldmljZVR5cGUuaXNUb3VjaCgpLEVCPWZ1bmN0aW9uKHUsdCl7ZnVuY3Rpb24gZSh0LGkpe3JldHVybiBDcih0LGZ1bmN0aW9uKG4sbyl7dmFyIGUscjtlPW4scj1mdW5jdGlvbih0LGUpe2kodSgpLHQsby5ldmVudCxuKX0sa18uZ2V0U3RhdGUoZSkuZ2V0KCkuZWFjaChmdW5jdGlvbih0KXtyKHQsZSl9KX0pfXJldHVybiBWKFYoW10sdkIoZSx0KSwhMCksW2UoU3ksZnVuY3Rpb24odCxlLG4pe2Uub25BY3Rpb24odCx7bmFtZTpuLm5hbWV9KX0pXSwhMSl9LERCPWZ1bmN0aW9uKHUsdCxjKXtmdW5jdGlvbiBlKHQsaSl7cmV0dXJuIENyKHQsZnVuY3Rpb24obixvKXt2YXIgZSxyO2U9bixyPWZ1bmN0aW9uKHQsZSl7aSh1KCksdCxvLmV2ZW50LG4pfSxrXy5nZXRTdGF0ZShlKS5nZXQoKS5lYWNoKGZ1bmN0aW9uKHQpe3IodC5pbnRlcm5hbERpYWxvZyxlKX0pfSl9cmV0dXJuIFYoVihbXSx2QihlLHQpLCEwKSxbZShreSxmdW5jdGlvbih0LGUpe3JldHVybiBlLm9uU3VibWl0KHQpfSksZSh5eSxmdW5jdGlvbih0LGUsbil7ZS5vbkNoYW5nZSh0LHtuYW1lOm4ubmFtZX0pfSksZShTeSxmdW5jdGlvbih0LGUsbixvKXtmdW5jdGlvbiByKCl7cmV0dXJuIEZnLmZvY3VzSW4obyl9ZnVuY3Rpb24gaSh0KXtyZXR1cm4gYWUodCxcImRpc2FibGVkXCIpfHx1ZSh0LFwiYXJpYS1kaXNhYmxlZFwiKS5leGlzdHMoZnVuY3Rpb24odCl7cmV0dXJuXCJ0cnVlXCI9PT10fSl9dmFyIHU9Z24oby5lbGVtZW50KSxhPU9hKHUpO2Uub25BY3Rpb24odCx7bmFtZTpuLm5hbWUsdmFsdWU6bi52YWx1ZX0pLE9hKHUpLmZvbGQocixmdW5jdGlvbihlKXtpKGUpfHxhLmV4aXN0cyhmdW5jdGlvbih0KXtyZXR1cm4gVXQoZSx0KSYmaSh0KX0pP3IoKTpjKCkudG9PcHRpb25hbCgpLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4hVXQodC5lbGVtZW50LGUpfSkuZWFjaChyKX0pfSksZShfeSxmdW5jdGlvbih0LGUsbil7ZS5vblRhYkNoYW5nZSh0LHtuZXdUYWJOYW1lOm4ubmFtZSxvbGRUYWJOYW1lOm4ub2xkTmFtZX0pfSkscnUoZnVuY3Rpb24odCl7dmFyIGU9dSgpO0RmLnNldFZhbHVlKHQsZS5nZXREYXRhKCkpfSldLCExKX0sQUI9eUIsQkI9dGlueW1jZS51dGlsLlRvb2xzLnJlc29sdmUoXCJ0aW55bWNlLnV0aWwuVVJJXCIpLE1CPVtcImluc2VydENvbnRlbnRcIixcInNldENvbnRlbnRcIixcImV4ZWNDb21tYW5kXCIsXCJjbG9zZVwiLFwiYmxvY2tcIixcInVuYmxvY2tcIl07by5hZGQoXCJzaWx2ZXJcIixmdW5jdGlvbih0KXt2YXIgZT1mRSh0KSxuPWUudWlNb3RoZXJzaGlwLG89ZS5iYWNrc3RhZ2Uscj1lLnJlbmRlclVJLGk9ZS5nZXRVaTtyZXR1cm4gdXkodCxvLnNoYXJlZCkse3JlbmRlclVJOnIsZ2V0V2luZG93TWFuYWdlckltcGw6cnQoT0Ioe2VkaXRvcjp0LGJhY2tzdGFnZTpvfSkpLGdldE5vdGlmaWNhdGlvbk1hbmFnZXJJbXBsOmZ1bmN0aW9uKCl7cmV0dXJuIHU9dCxyPW4sbD17YmFja3N0YWdlOm99LmJhY2tzdGFnZS5zaGFyZWQse29wZW46ZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBuKCl7ZSgpLHVwLmhpZGUoYyl9dmFyIG89IXQuY2xvc2VCdXR0b24mJnQudGltZW91dCYmKDA8dC50aW1lb3V0fHx0LnRpbWVvdXQ8MCksYT1UdShocC5za2V0Y2goe3RleHQ6dC50ZXh0LGxldmVsOnd0KFtcInN1Y2Nlc3NcIixcImVycm9yXCIsXCJ3YXJuaW5nXCIsXCJ3YXJuXCIsXCJpbmZvXCJdLHQudHlwZSk/dC50eXBlOnZvaWQgMCxwcm9ncmVzczohMD09PXQucHJvZ3Jlc3NCYXIsaWNvbjp2dC5mcm9tKHQuaWNvbiksY2xvc2VCdXR0b246IW8sb25BY3Rpb246bixpY29uUHJvdmlkZXI6bC5wcm92aWRlcnMuaWNvbnMsdHJhbnNsYXRpb25Qcm92aWRlcjpsLnByb3ZpZGVycy50cmFuc2xhdGV9KSksYz1UdSh1cC5za2V0Y2gobHQoe2RvbTp7dGFnOlwiZGl2XCIsY2xhc3NlczpbXCJ0b3gtbm90aWZpY2F0aW9ucy1jb250YWluZXJcIl19LGxhenlTaW5rOmwuZ2V0U2luayxmaXJlRGlzbWlzc2FsRXZlbnRJbnN0ZWFkOnt9fSxsLmhlYWRlci5pc1Bvc2l0aW9uZWRBdFRvcCgpP3t9OntmaXJlUmVwb3NpdGlvbkV2ZW50SW5zdGVhZDp7fX0pKSk7ZnVuY3Rpb24gcygpe3ZhciB0PU1uKE10LmZyb21Eb20odS5nZXRDb250ZW50QXJlYUNvbnRhaW5lcigpKSksZT1GbigpLG49V2EoZS54LHQueCx0LnJpZ2h0KSxvPVdhKGUueSx0LnksdC5ib3R0b20pLHI9TWF0aC5tYXgodC5yaWdodCxlLnJpZ2h0KSxpPU1hdGgubWF4KHQuYm90dG9tLGUuYm90dG9tKTtyZXR1cm4gdnQuc29tZShCbihuLG8sci1uLGktbykpfXJldHVybiByLmFkZChjKSwwPHQudGltZW91dCYmbHAuc2V0VGltZW91dChmdW5jdGlvbigpe24oKX0sdC50aW1lb3V0KSx7Y2xvc2U6bixtb3ZlVG86ZnVuY3Rpb24odCxlKXt1cC5zaG93QXQoYyxFdShhKSx7YW5jaG9yOnt0eXBlOlwibWFrZXNoaWZ0XCIseDp0LHk6ZX19KX0sbW92ZVJlbDpmdW5jdGlvbih0LGUpe3ZhciBuLG8scixpPUV1KGEpLHU9e21heEhlaWdodEZ1bmN0aW9uOk5jKCl9O1wiYmFubmVyXCIhPT1lJiZrKHQpPyhuPWZ1bmN0aW9uKCl7c3dpdGNoKGUpe2Nhc2VcImJjLWJjXCI6cmV0dXJuIHNwO2Nhc2VcInRjLXRjXCI6cmV0dXJuIGNwO2Nhc2VcInRjLWJjXCI6cmV0dXJuIEphO2RlZmF1bHQ6cmV0dXJuICRhfX0oKSxvPXt0eXBlOlwibm9kZVwiLHJvb3Q6Ym4oKSxub2RlOnZ0LnNvbWUoTXQuZnJvbURvbSh0KSksb3ZlcnJpZGVzOnUsbGF5b3V0czp7b25SdGw6ZnVuY3Rpb24oKXtyZXR1cm5bbl19LG9uTHRyOmZ1bmN0aW9uKCl7cmV0dXJuW25dfX19LHVwLnNob3dXaXRoaW5Cb3VuZHMoYyxpLHthbmNob3I6b30scykpOihyPWx0KGx0KHt9LGwuYW5jaG9ycy5iYW5uZXIoKSkse292ZXJyaWRlczp1fSksdXAuc2hvd1dpdGhpbkJvdW5kcyhjLGkse2FuY2hvcjpyfSxzKSl9LHRleHQ6ZnVuY3Rpb24odCl7aHAudXBkYXRlVGV4dChhLHQpfSxzZXR0aW5nczp0LGdldEVsOmZ1bmN0aW9uKCl7cmV0dXJuIGEuZWxlbWVudC5kb219LHByb2dyZXNzQmFyOnt2YWx1ZTpmdW5jdGlvbih0KXtocC51cGRhdGVQcm9ncmVzcyhhLHQpfX19fSxjbG9zZTpmdW5jdGlvbih0KXt0LmNsb3NlKCl9LHJlcG9zaXRpb246ZnVuY3Rpb24obil7MDxuLmxlbmd0aCYmU3QobixmdW5jdGlvbih0LGUpezA9PT1lP3QubW92ZVJlbChudWxsLFwiYmFubmVyXCIpOnQubW92ZVJlbChuW2UtMV0uZ2V0RWwoKSxcImJjLXRjXCIpfSl9LGdldEFyZ3M6ZnVuY3Rpb24odCl7cmV0dXJuIHQuc2V0dGluZ3N9fTt2YXIgdSxyLGx9LHVpOmkoKX19KX0oKTsiXSwibmFtZXMiOlsidCIsIm8iLCJuIiwiX3R5cGVvZiIsImUiLCJBcnJheSIsInByb3RvdHlwZSIsImlzUHJvdG90eXBlT2YiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJTdHJpbmciLCJnIiwiZiIsImMiLCJsZW5ndGgiLCJzdCIsInIiLCJhcmd1bWVudHMiLCJhcHBseSIsInJ0IiwiaCIsInYiLCJ5IiwieCIsImIiLCJ3IiwiRSIsImsiLCJTIiwidSIsIkMiLCJjb25jYXQiLCJPIiwiXyIsIkVycm9yIiwiVCIsIkQiLCJ0aW55bWNlIiwidXRpbCIsIlRvb2xzIiwicmVzb2x2ZSIsImx0IiwiT2JqZWN0IiwiYXNzaWduIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiQSIsImluZGV4T2YiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIlYiLCJpIiwic2xpY2UiLCJhIiwiZm9sZCIsImlzU29tZSIsImlzTm9uZSIsImdldE9yIiwiZ2V0T3JUaHVuayIsInMiLCJnZXRPckRpZSIsImdldE9yTnVsbCIsImdldE9yVW5kZWZpbmVkIiwib3IiLCJvclRodW5rIiwibWFwIiwiZWFjaCIsImJpbmQiLCJleGlzdHMiLCJmb3JhbGwiLCJmaWx0ZXIiLCJ0b0FycmF5IiwidG9TdHJpbmciLCJsIiwieXQiLCJkIiwibSIsInB1c2giLCJwIiwiYnQiLCJCIiwiTSIsInBhc3MiLCJmYWlsIiwiRiIsIkkiLCJSIiwiU3QiLCJOIiwidnQiLCJzb21lIiwibm9uZSIsIlAiLCJmdCIsInh0IiwiSCIsIkwiLCJ6IiwicmV2ZXJzZSIsIlUiLCJ3dCIsImoiLCJXIiwiRyIsInNvcnQiLCJYIiwiWSIsInEiLCJLIiwiSiIsIkN0IiwiZHQiLCJfdCIsIiQiLCJRIiwiWiIsInR0IiwiVHQiLCJmcm9tIiwiZXQiLCJtdCIsIm50Iiwib3QiLCJpdCIsInN1YnN0ciIsInV0IiwiYXQiLCJjdCIsInN0eWxlIiwiZ2V0UHJvcGVydHlWYWx1ZSIsImd0IiwiZG9tIiwicHQiLCJodCIsImt0Iiwia2V5cyIsIk90IiwiRXQiLCJEdCIsIkF0IiwiQnQiLCJyZXBsYWNlIiwiTXQiLCJmcm9tSHRtbCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImlubmVySFRNTCIsImhhc0NoaWxkTm9kZXMiLCJjaGlsZE5vZGVzIiwiY29uc29sZSIsImVycm9yIiwiZnJvbVRhZyIsImZyb21UZXh0IiwiY3JlYXRlVGV4dE5vZGUiLCJmcm9tRG9tIiwiZnJvbVBvaW50IiwiZWxlbWVudEZyb21Qb2ludCIsIkZ0Iiwibm9kZU5hbWUiLCJ0b0xvd2VyQ2FzZSIsIkl0Iiwibm9kZVR5cGUiLCJSdCIsIk50Iiwic2VhcmNoIiwiUHQiLCJWdCIsIndpbmRvdyIsIm1hdGNoTWVkaWEiLCJtYXRjaGVzIiwiSHQiLCJtc01hdGNoZXNTZWxlY3RvciIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIkx0IiwiY2hpbGRFbGVtZW50Q291bnQiLCJ6dCIsIlV0IiwibG4iLCJicm93c2VyIiwiaXNJRSIsIk5vZGUiLCJET0NVTUVOVF9QT1NJVElPTl9DT05UQUlORURfQlkiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsImNvbnRhaW5zIiwianQiLCJvd25lckRvY3VtZW50IiwiV3QiLCJZZSIsIkd0IiwiZG9jdW1lbnRFbGVtZW50IiwiWHQiLCJkZWZhdWx0VmlldyIsIll0IiwicGFyZW50Tm9kZSIsInF0Iiwib2Zmc2V0UGFyZW50IiwiS3QiLCJKdCIsIiR0IiwiZWxlbWVudCIsIm9mZnNldCIsIlF0IiwiWnQiLCJxZSIsImhvc3QiLCJ0ZSIsImJvZHkiLCJlZSIsIm5lIiwic2V0QXR0cmlidXRlIiwib2UiLCJyZSIsImllIiwiZ2V0QXR0cmlidXRlIiwidWUiLCJhZSIsImhhc0F0dHJpYnV0ZSIsImNlIiwicmVtb3ZlQXR0cmlidXRlIiwic2UiLCJzZXRQcm9wZXJ0eSIsImxlIiwicmVtb3ZlUHJvcGVydHkiLCJmZSIsImRlIiwibWUiLCJnZSIsImdldENvbXB1dGVkU3R5bGUiLCJ2biIsInhuIiwicGUiLCJoZSIsInZlIiwiYmUiLCJvZmZzZXRXaWR0aCIsInllIiwicGFyc2VGbG9hdCIsInBhcnNlSW50IiwiaXNOYU4iLCJzZXQiLCJtYXRjaCIsImdldCIsImdldE91dGVyIiwiYWdncmVnYXRlIiwibWF4IiwieGUiLCJ3biIsIndlIiwiU2UiLCJrZSIsImtuIiwib2Zmc2V0TGVmdCIsIm9mZnNldFRvcCIsInBhZ2VZT2Zmc2V0Iiwic2Nyb2xsVG9wIiwicGFnZVhPZmZzZXQiLCJzY3JvbGxMZWZ0IiwiY2xpZW50VG9wIiwiY2xpZW50TGVmdCIsIkNuIiwidHJhbnNsYXRlIiwiQ2UiLCJPbiIsIk9lIiwiX2UiLCJzdG9wUHJvcGFnYXRpb24iLCJwcmV2ZW50RGVmYXVsdCIsInRhcmdldCIsIm1uIiwiR2UiLCJobiIsImNvbXBvc2VkIiwiY29tcG9zZWRQYXRoIiwiY2xpZW50WCIsImNsaWVudFkiLCJzdG9wIiwicHJldmVudCIsImtpbGwiLCJyYXciLCJUZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJ1bmJpbmQiLCJfbiIsIkVlIiwiaW5zZXJ0QmVmb3JlIiwiRGUiLCJuZXh0U2libGluZyIsIlRuIiwiQWUiLCJCZSIsIk1lIiwidGV4dENvbnRlbnQiLCJFbiIsIkZlIiwiSWUiLCJSZSIsInNjcm9sbFRvIiwiTmUiLCJ3aWR0aCIsImhlaWdodCIsInJpZ2h0IiwiYm90dG9tIiwiUGUiLCJpc0ZpcmVmb3giLCJ2aXN1YWxWaWV3cG9ydCIsImNsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0IiwibGVmdCIsInRvcCIsIk1hdGgiLCJwYWdlTGVmdCIsInBhZ2VUb3AiLCJWZSIsIkFuIiwib3duZXIiLCJEbiIsIkhlIiwiQm4iLCJGdW5jdGlvbiIsIkxlIiwiS2UiLCJ6ZSIsImN1cnJlbnQiLCJ2ZXJzaW9uIiwiaXNFZGdlIiwiaXNDaHJvbWUiLCJpc09wZXJhIiwiWmUiLCJpc1NhZmFyaSIsIlVlIiwiaXNXaW5kb3dzIiwibm4iLCJpc2lPUyIsImlzQW5kcm9pZCIsIm9uIiwiaXNPU1giLCJpc0xpbnV4IiwiaXNTb2xhcmlzIiwicm4iLCJpc0ZyZWVCU0QiLCJ1biIsImlzQ2hyb21lT1MiLCJhbiIsImplIiwiV2UiLCJYZSIsIm1ham9yIiwibWlub3IiLCJKZSIsIm51IiwiZGV0ZWN0IiwidGVzdCIsIk51bWJlciIsInVua25vd24iLCIkZSIsIlFlIiwiYnJvd3NlcnMiLCJ2ZXJzaW9uUmVnZXhlcyIsImJyYW5kIiwib3NlcyIsInRuIiwiZW4iLCJjbiIsInNuIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwidXNlckFnZW50RGF0YSIsImJyYW5kcyIsIm9zIiwiZGV2aWNlVHlwZSIsImlzaVBhZCIsImlzaVBob25lIiwiaXNUYWJsZXQiLCJpc1Bob25lIiwiaXNUb3VjaCIsImlzV2ViVmlldyIsImlzRGVza3RvcCIsImZuIiwiZG4iLCJFbGVtZW50IiwiYXR0YWNoU2hhZG93IiwiZ2V0Um9vdE5vZGUiLCJnbiIsInBuIiwic2hhZG93Um9vdCIsImJuIiwieW4iLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJvZmZzZXRIZWlnaHQiLCJTbiIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJhcHBlbmRDaGlsZCIsInJlbW92ZUNoaWxkIiwidmlldyIsImZyZWV6ZSIsIl9fcHJvdG9fXyIsImZyYW1lRWxlbWVudCIsIk1uIiwiRm4iLCJJbiIsImlzVmFsdWUiLCJpc0Vycm9yIiwibWFwRXJyb3IiLCJ0b09wdGlvbmFsIiwiUm4iLCJObiIsInZhbHVlIiwiZnJvbU9wdGlvbiIsIlBuIiwic3R5cGUiLCJzZXJyb3IiLCJzdmFsdWUiLCJWbiIsIlZhbHVlIiwiSG4iLCJMbiIsInRhZyIsImtleSIsIm5ld0tleSIsInByZXNlbmNlIiwicHJvcCIsInpuIiwiaW5zdGFudGlhdG9yIiwiVW4iLCJqbiIsInByb2Nlc3MiLCJXbiIsIkduIiwiWG4iLCJZbiIsInFuIiwiSlNPTiIsInN0cmluZ2lmeSIsIktuIiwiem8iLCJwYXRoIiwiZ2V0RXJyb3JJbmZvIiwiSm4iLCJleHRyYWN0Iiwiam8iLCIkbiIsIlFuIiwiTG8iLCJXbyIsIllvIiwiWm4iLCJ0byIsIiRvIiwiam9pbiIsImVvIiwiS28iLCJubyIsIm9vIiwicm8iLCJpbyIsInVvIiwiVW8iLCJhbyIsIkhvIiwiR28iLCJpbnB1dCIsImVycm9ycyIsImNvIiwidXIiLCJzbyIsImxvIiwiZm8iLCJtbyIsImFyIiwiWm8iLCJnbyIsInBvIiwiZXIiLCJobyIsInZvIiwiYm8iLCJ5byIsIlFvIiwieG8iLCJ3byIsIlNvIiwia28iLCJ0ciIsIkNvIiwiT28iLCJfbyIsIlRvIiwiRW8iLCJEbyIsIkFvIiwiQm8iLCJNbyIsIkZvIiwibnIiLCJJbyIsIlJvIiwiTm8iLCJQbyIsIlZvIiwibG9nIiwiY29uc3RydWN0b3JzIiwicGFyYW1zIiwiWG8iLCJxbyIsInZhbHVlcyIsIkpvIiwicnIiLCJldmVyeSIsImlyIiwiY3IiLCJzciIsImxyIiwiZnIiLCJkciIsIm1yIiwiZ3IiLCJldmVudCIsInByIiwiYWkiLCJociIsInZyIiwiZXUiLCJiciIsInlyIiwiSWkiLCJ4ciIsIndyIiwiZ2V0U3lzdGVtIiwidHJpZ2dlckV2ZW50IiwiU3IiLCJhYm9ydCIsImtyIiwicnVuIiwiQ3IiLCJPciIsIl9yIiwiVHIiLCJwYXJ0VWlkcyIsImdldEJ5VWlkIiwiRXIiLCJnZXRCeURvbSIsIkRyIiwiY3V0IiwiQXIiLCJCciIsIk1yIiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsIkZyIiwiY2xvbmVOb2RlIiwiSXIiLCJEYXRlIiwiZ2V0VGltZSIsImZsb29yIiwicmFuZG9tIiwic3UiLCJSciIsIm11IiwiTnIiLCJ3YXJuIiwiZGVidWdJbmZvIiwidHJpZ2dlckZvY3VzIiwidHJpZ2dlckVzY2FwZSIsImJyb2FkY2FzdCIsImJyb2FkY2FzdE9uIiwiYnJvYWRjYXN0RXZlbnQiLCJidWlsZCIsImFkZFRvV29ybGQiLCJyZW1vdmVGcm9tV29ybGQiLCJhZGRUb0d1aSIsInJlbW92ZUZyb21HdWkiLCJpc0Nvbm5lY3RlZCIsIlByIiwic3Vic3RyaW5nIiwic3BsaXQiLCJ0b0Z1bmN0aW9uQW5ub3RhdGlvbiIsInBhcmFtZXRlcnMiLCJidSIsIlZyIiwieXUiLCJIciIsImdldEFwaXMiLCJMciIsInpyIiwiY2xhc3NlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZXMiLCJVciIsImNIYW5kbGVyIiwianIiLCJoYW5kbGVyIiwiV3IiLCJjYW4iLCJHciIsIlhyIiwiY2xhc3NMaXN0IiwiWXIiLCJhZGQiLCJxciIsInJlbW92ZSIsIktyIiwiSnIiLCIkciIsIlFyIiwiWnIiLCJ0aSIsInh1IiwibGlzdCIsImRhdGEiLCJiZWhhdmlvdXJzIiwiY29uZmlnIiwic3RhdGUiLCJpbml0IiwiZWkiLCJ1aWQiLCJkb21DaGlsZHJlbiIsImNvbXBvbmVudHMiLCJkb21Nb2RpZmljYXRpb24iLCJtb2RpZmljYXRpb24iLCJleGhpYml0IiwibmkiLCJldmVudHMiLCJldmVudE9yZGVyIiwiaGFuZGxlcnMiLCJTdSIsIm9pIiwiaHUiLCJUdSIsImN1IiwidnUiLCJDdSIsImlubmVySHRtbCIsImd1IiwiaGFzQ29uZmlndXJlZCIsInNwZWMiLCJyZWFkU3RhdGUiLCJhcGlzIiwiY29ubmVjdCIsImRpc2Nvbm5lY3QiLCJzeW5jQ29tcG9uZW50cyIsInJpIiwiT3UiLCJib3RoRXJyb3JzIiwiZmlyc3RFcnJvciIsInNlY29uZEVycm9yIiwiYm90aFZhbHVlcyIsImlpIiwidWkiLCJjaSIsInNpIiwibGkiLCJmaSIsImRpIiwibWkiLCJnaSIsInBpIiwiaGkiLCJ2aSIsImJpIiwieWkiLCJ4aSIsIndpIiwiU2kiLCJraSIsIkNpIiwiT2kiLCJfaSIsIlRpIiwiRWkiLCJEaSIsInRhcCIsIkFpIiwiQmkiLCJNaSIsIkZpIiwiUmkiLCJOaSIsIlBpIiwiVmkiLCJIaSIsIkxpIiwiemkiLCJVaSIsImppIiwiV2kiLCJHaSIsIlhpIiwiWWkiLCJxaSIsIktpIiwiSmkiLCIkaSIsIlFpIiwiWmkiLCJ0dSIsIm91IiwicnUiLCJpdSIsInV1IiwiYXUiLCJvcmlnaW5hdG9yIiwibHUiLCJmdSIsImR1IiwiZGVmaW5lUHJvcGVydHkiLCJ3cml0YWJsZSIsInB1Iiwid3UiLCJwdXJwb3NlIiwia3UiLCJfdSIsIkV1IiwiRHUiLCJBdSIsIkJ1IiwiTXUiLCJGdSIsIkl1IiwicXVlcnlTZWxlY3RvciIsIlJ1IiwiTnUiLCJpZCIsImxpbmsiLCJ1bmxpbmsiLCJQdSIsIlZ1IiwiSHUiLCJMdSIsInp1IiwiVXUiLCJOT1JNQUwiLCJXdSIsIkxPR0dJTkciLCJsb2dFdmVudEN1dCIsIm91dGNvbWUiLCJsb2dFdmVudFN0b3BwZWQiLCJsb2dOb1BhcmVudCIsImxvZ0V2ZW50Tm9IYW5kbGVycyIsImxvZ0V2ZW50UmVzcG9uc2UiLCJ3cml0ZSIsInRpbWUiLCJzZXF1ZW5jZSIsIlNUT1AiLCJqdSIsIkd1IiwiWHUiLCJZdSIsInF1IiwiS3UiLCJzdGFjayIsIkp1IiwiJHUiLCJRdSIsIlp1IiwidGEiLCJlYSIsIm5hIiwiYnViYmxlIiwiZGlyZWN0aW9uIiwicGxhY2VtZW50IiwicmVzdHJpY3Rpb24iLCJsYWJlbCIsImFsd2F5c0ZpdCIsIm9hIiwicmEiLCJpYSIsInVhIiwiYWEiLCJjYSIsInNhIiwibGEiLCJlYXN0IiwiVWEiLCJHYSIsImZhIiwid2VzdCIsImphIiwiZGEiLCJYYSIsIllhIiwicWEiLCJLYSIsIiRhIiwiSmEiLCJtYSIsImdhIiwicGEiLCJoYSIsInZhIiwiYmEiLCJ5YSIsInhhIiwibmMiLCJmaWVsZHMiLCJhY3RpdmUiLCJleHRyYSIsInRjIiwid2EiLCJvYyIsImJyYW5jaEtleSIsImJyYW5jaGVzIiwiU2EiLCJrYSIsImZvY3VzIiwiQ2EiLCJhY3RpdmVFbGVtZW50IiwiT2EiLCJfYSIsIlRhIiwiRWEiLCJwb3NpdGlvbiIsIkRhIiwiQWEiLCJyZWN0IiwiQmEiLCJNYSIsIkZhIiwiSWEiLCJSYSIsInNvdXRoZWFzdCIsInNvdXRod2VzdCIsIm5vcnRoZWFzdCIsIm5vcnRod2VzdCIsInNvdXRoIiwibm9ydGgiLCJOYSIsIlBhIiwiVmEiLCJIYSIsIkxhIiwiemEiLCJXYSIsIm1pbiIsIlFhIiwiY2hhbm5lbHMiLCJ1bml2ZXJzYWwiLCJzY2hlbWEiLCJvblJlY2VpdmUiLCJaYSIsInJldm9rZSIsImNvbmZpZ0FzUmF3IiwiaW5pdGlhbENvbmZpZyIsImVjIiwicmMiLCJpYyIsInVjIiwidXNlRml4ZWQiLCJhYyIsInJlbGF0aXZlIiwiZml4ZWQiLCJjYyIsInNjIiwiRGMiLCJsYyIsIm9yaWdpbkluQm91bmRzIiwic2l6ZUluQm91bmRzIiwidmlzaWJsZVciLCJ2aXNpYmxlSCIsIm1heFdpZHRoIiwibWF4SGVpZ2h0IiwiY2xhc3Nlc09uIiwib2ZmIiwiY2xhc3Nlc09mZiIsImxheW91dCIsInRlc3RZIiwiQWMiLCJmaXQiLCJub2ZpdCIsImZjIiwiY2xlYXIiLCJpc1NldCIsImRjIiwiZGVzdHJveSIsIm1jIiwiZ2MiLCJwYyIsIkJjIiwiaGMiLCJ2YyIsInBzZXVkb0VsZW1lbnQiLCJGYyIsInByb3BlcnR5TmFtZSIsInR5cGUiLCJjbGVhclRpbWVvdXQiLCJJYyIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsInNldFRpbWVvdXQiLCJiYyIsIm1vZGUiLCJ0b0ZpeGVkIiwieWMiLCJwcmVmZXJlbmNlIiwiYm91bmRzIiwieGMiLCJ3YyIsIlNjIiwiVmMiLCJpbnNldE5vcnRoZWFzdCIsImluc2V0Tm9ydGh3ZXN0IiwiaW5zZXROb3J0aCIsImluc2V0U291dGhlYXN0IiwiaW5zZXRTb3V0aHdlc3QiLCJpbnNldFNvdXRoIiwiaW5zZXRFYXN0IiwiaW5zZXRXZXN0Iiwia2MiLCJDYyIsIkxjIiwiT2MiLCJfYyIsIlRjIiwiRWMiLCJNYyIsIlJjIiwiTmMiLCJQYyIsIm9yaWdpbiIsInRyYW5zaXRpb24iLCJsYXN0UGxhY2VtZW50IiwibWF4SGVpZ2h0RnVuY3Rpb24iLCJtYXhXaWR0aEZ1bmN0aW9uIiwiSGMiLCJ6YyIsIkJvdHRvbVRvVG9wIiwiVWMiLCJqYyIsImxheW91dHMiLCJvbkx0ciIsIm9uUnRsIiwib25Cb3R0b21MdHIiLCJvbkJvdHRvbVJ0bCIsIldjIiwiR2MiLCJYYyIsIlljIiwicWMiLCJyb290IiwiYXMiLCJLYyIsInVzIiwicG9pbnQiLCJKYyIsInNob3dBYm92ZSIsImFuY2hvckJveCIsIm92ZXJyaWRlcyIsInBsYWNlciIsIiRjIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydEJlZm9yZSIsInNldFN0YXJ0Iiwic2V0U3RhcnRBZnRlciIsInNldEVuZEJlZm9yZSIsInNldEVuZCIsInNldEVuZEFmdGVyIiwiUWMiLCJaYyIsInRzIiwic3RhcnRDb250YWluZXIiLCJzdGFydE9mZnNldCIsImVuZENvbnRhaW5lciIsImVuZE9mZnNldCIsImVzIiwiZG9tUmFuZ2UiLCJsdHIiLCJydGwiLCJleGFjdCIsImNvbGxhcHNlZCIsImdzIiwiVG9wVG9Cb3R0b20iLCJucyIsImhvdHNwb3QiLCJycyIsImlzIiwic2NyZWVuIiwiYWJzb2x1dGUiLCJjcyIsIm5vZGUiLCJzcyIsInN0YXJ0Iiwic29mZnNldCIsImZpbmlzaCIsImZvZmZzZXQiLCJscyIsImJlZm9yZSIsImFmdGVyIiwiZnMiLCJkcyIsIm1zIiwiZXhhY3RGcm9tUmFuZ2UiLCJnZXRXaW4iLCJyYW5nZSIsInBzIiwiZWYiLCJnZXRPcHRpb24iLCJocyIsInRyaW0iLCJuZiIsInZzIiwicXVlcnlTZWxlY3RvckFsbCIsImJzIiwicmFuZ2VDb3VudCIsImdldFJhbmdlQXQiLCJ5cyIsImFuY2hvck5vZGUiLCJmb2N1c05vZGUiLCJhbmNob3JPZmZzZXQiLCJmb2N1c09mZnNldCIsInhzIiwiZ2V0Q2xpZW50UmVjdHMiLCJ3cyIsIlNzIiwia3MiLCJnZXRTZWxlY3Rpb24iLCJDcyIsIk9zIiwiX3MiLCJUcyIsInJmIiwiRXMiLCJEcyIsIkFzIiwiQnMiLCJNcyIsIkZzIiwiSXMiLCJScyIsImRmIiwibWYiLCJOcyIsImdmIiwiUHMiLCJWcyIsIkhzIiwiTHMiLCJwZiIsInpzIiwiVXMiLCJnZXRBdHRhY2hQb2ludCIsImpzIiwib25PcGVuIiwiV3MiLCJvbkNsb3NlIiwiR3MiLCJpc09wZW4iLCJYcyIsIlNmIiwieWYiLCJiZiIsImlzUGFydE9mIiwiaXNFeHRyYVBhcnQiLCJmaXJlRXZlbnRJbnN0ZWFkIiwiY2xvc2UiLCJZcyIsImtmIiwieGYiLCJkb1JlcG9zaXRpb24iLCJxcyIsInN0b3JlIiwibWFuYWdlciIsIm9uTG9hZCIsIktzIiwib25VbmxvYWQiLCJKcyIsImlzTm90U2V0IiwiJHMiLCJkYXRhQnlWYWx1ZSIsImRhdGFCeVRleHQiLCJsb29rdXAiLCJ1cGRhdGUiLCJRcyIsInNldFZhbHVlIiwib25TZXRWYWx1ZSIsIlpzIiwidGwiLCJkdW1wIiwiZWwiLCJubCIsIm9sIiwicmwiLCJpbCIsInVsIiwiZGVmYXVsdHMiLCJhbCIsIm5kIiwicG5hbWUiLCJ2YWxpZGF0ZWQiLCJjbCIsInVpVHlwZSIsIlBmIiwic2wiLCJ0ZCIsImxsIiwiZmwiLCJSZiIsImZhY3RvcnkiLCJza2V0Y2giLCJwYXJ0cyIsIk5mIiwiaW50ZXJuYWxzIiwiZXh0ZXJuYWxzIiwiZGwiLCJyZXF1aXJlZCIsInVzZWQiLCJJZiIsIm1sIiwiZ2wiLCJwbCIsImhsIiwidmwiLCJibCIsInlsIiwieGwiLCJ3bCIsIlNsIiwicmQiLCJrbCIsImV4dHJhQXBpcyIsImNvbmZpZ0ZpZWxkcyIsIkNsIiwidWQiLCJwYXJ0RmllbGRzIiwiT2wiLCJfbCIsImRpc2FibGVkIiwibGQiLCJmZCIsIlRsIiwidXNlTmF0aXZlIiwic2QiLCJFbCIsIkRsIiwiaGlnaGxpZ2h0Q2xhc3MiLCJvbkRlaGlnaGxpZ2h0IiwiQWwiLCJZbCIsIm9uSGlnaGxpZ2h0IiwiQmwiLCJpdGVtQ2xhc3MiLCJNbCIsIkZsIiwiSWwiLCJSbCIsIk5sIiwid2hpY2giLCJQbCIsIlZsIiwic2hpZnRLZXkiLCJIbCIsImN0cmxLZXkiLCJMbCIsImNsYXNzaWZpY2F0aW9uIiwiemwiLCJwcmV2Rm9jdXMiLCJuZXdGb2N1cyIsIlVsIiwiamwiLCJoZCIsImdldEhpZ2hsaWdodGVkIiwiaGlnaGxpZ2h0IiwiV2wiLCJsZiIsIkdsIiwiZmYiLCJnZXRNb2RlIiwiY2xvYWtWaXNpYmlsaXR5QXR0ciIsIlhsIiwicWwiLCJLbCIsIkpsIiwiJGwiLCJRbCIsIlpsIiwidGYiLCJub2RlVmFsdWUiLCJvZiIsInVmIiwic2VsZWN0aW9uIiwic3VibWVudSIsIml0ZW0iLCJtYWtlc2hpZnQiLCJhZiIsImNmIiwic2YiLCJhbmNob3IiLCJnZXRCb3VuZHMiLCJwb3NpdGlvbldpdGhpbiIsInBvc2l0aW9uV2l0aGluQm91bmRzIiwicmVzZXQiLCJoZiIsImNsb2FrIiwiZGVjbG9hayIsIm9wZW4iLCJvcGVuV2hpbGVDbG9ha2VkIiwiZ2V0U3RhdGUiLCJzZXRDb250ZW50IiwidmYiLCJ3ZiIsIkNmIiwiZ2V0VmFsdWUiLCJPZiIsInJlc2V0T25Eb20iLCJfZiIsIm1lbW9yeSIsImRhdGFzZXQiLCJtYW51YWwiLCJUZiIsImdldERhdGFLZXkiLCJnZXRGYWxsYmFja0VudHJ5IiwiaW5pdGlhbFZhbHVlIiwiRWYiLCJEZiIsInNldFZhbHVlRnJvbSIsIkFmIiwiQmYiLCJNZiIsIkZmIiwic2luZ2xlIiwibXVsdGlwbGUiLCJwcmVwcm9jZXNzIiwiVmYiLCJleHRlcm5hbCIsIm9wdGlvbmFsIiwiZ3JvdXAiLCJIZiIsIkxmIiwiemYiLCJVZiIsImpmIiwiV2YiLCJHZiIsIlhmIiwiWWYiLCJxZiIsIktmIiwiSmYiLCIkZiIsIlFmIiwiWmYiLCJlZCIsImFzTmFtZWRQYXJ0IiwiYXNDb21tb24iLCJvcmlnaW5hbCIsIm9kIiwiZ2VuZXJhdGUiLCJnZW5lcmF0ZU9uZSIsInNjaGVtYXMiLCJuYW1lcyIsInN1YnN0aXR1dGVzIiwiZGVmYXVsdFVpZHMiLCJkZWZhdWx0VWlkc1NjaGVtYSIsImdldEFsbFBhcnRzIiwiZ2V0QWxsUGFydE5hbWVzIiwiZ2V0UGFydCIsImdldFBhcnRPckRpZSIsImdldFBhcnRzIiwiZ2V0UGFydHNPckRpZSIsImFkIiwiZ2V0Q3VycmVudCIsImZpbmQiLCJjZCIsImRpc2FibGVDbGFzcyIsIm9uRGlzYWJsZWQiLCJvbkVuYWJsZWQiLCJkZCIsImVuYWJsZSIsImRpc2FibGUiLCJpc0Rpc2FibGVkIiwibWQiLCJnZCIsInBkIiwiZGVoaWdobGlnaHRBbGwiLCJkZWhpZ2hsaWdodCIsImhpZ2hsaWdodEZpcnN0IiwiaGlnaGxpZ2h0TGFzdCIsImhpZ2hsaWdodEF0IiwiaGlnaGxpZ2h0QnkiLCJpc0hpZ2hsaWdodGVkIiwiZ2V0Rmlyc3QiLCJnZXRMYXN0IiwiZ2V0UHJldmlvdXMiLCJnZXROZXh0IiwiZ2V0Q2FuZGlkYXRlcyIsInZkIiwiYmQiLCJ5ZCIsInhkIiwid2QiLCJTZCIsImtkIiwiQ2QiLCJPZCIsIl9kIiwiVGQiLCJwcm9jZXNzS2V5IiwidG9FdmVudHMiLCJmb2N1c0luc2lkZSIsIk9uRm9jdXNNb2RlIiwiT25FbnRlck9yU3BhY2VNb2RlIiwiRWQiLCJ2aXNpYmlsaXR5U2VsZWN0b3IiLCJzZWxlY3RvciIsImZpcnN0VGFic3RvcCIsImZvY3VzTWFuYWdlciIsInVzZVRhYnN0b3BBdCIsImN5Y2xpYyIsIm9uRXNjYXBlIiwib25FbnRlciIsIkRkIiwiQWQiLCJCZCIsImV4ZWN1dGUiLCJNZCIsIm51bVJvd3MiLCJudW1Db2x1bW5zIiwic2V0R3JpZFNpemUiLCJnZXROdW1Sb3dzIiwiZ2V0TnVtQ29sdW1ucyIsIkZkIiwidGciLCJJZCIsIlJkIiwiTmQiLCJQZCIsIlZkIiwiaW5kZXgiLCJjYW5kaWRhdGVzIiwiSGQiLCJMZCIsInJvdyIsImNvbHVtbiIsInpkIiwiVWQiLCJqZCIsIldkIiwiaW5pdFNpemUiLCJHZCIsImNhcHR1cmVUYWIiLCJYZCIsIllkIiwicWQiLCJnZXRJbml0aWFsIiwiS2QiLCJKZCIsIiRkIiwiZXhlY3V0ZU9uTW92ZSIsIlFkIiwiWmQiLCJyb3dJbmRleCIsImNvbHVtbkluZGV4IiwiY2VsbCIsInRtIiwiZW0iLCJubSIsIm9tIiwicm0iLCJwcmV2aW91c1NlbGVjdG9yIiwic2VsZWN0b3JzIiwiaW0iLCJjeWNsZXMiLCJ1bSIsImFtIiwiY20iLCJzbSIsImxtIiwiZm0iLCJJZyIsImRtIiwibW0iLCJnbSIsImlnbm9yZSIsIm9uRm9jdXMiLCJwbSIsImFyaWEiLCJobSIsInRvZ2dsZUNsYXNzIiwidm0iLCJZbSIsImJtIiwieW0iLCJ4bSIsInNlbGVjdGVkIiwid20iLCJTbSIsImttIiwiVmciLCJpc0ZvY3VzZWQiLCJVZyIsIkNtIiwiamciLCJPbSIsIl9tIiwiVG0iLCJFbSIsIkRtIiwiYXAiLCJBbSIsIkJtIiwiTW0iLCJGbSIsIkltIiwiUm0iLCJjcCIsInNwIiwiTm0iLCJQbSIsIlZtIiwiSG0iLCJnZXRPcHQiLCJhc1NwZWMiLCJMbSIsImdwIiwiem0iLCJkcCIsImlzUnRsIiwiVW0iLCJqbSIsIldtIiwiR20iLCJtcCIsIlhtIiwiT25BcGlNb2RlIiwicW0iLCJLbSIsIm1lbnUiLCJKbSIsIiRtIiwiUW0iLCJ1c2VTcGFjZSIsInVzZUVudGVyIiwidXNlRG93biIsInVzZUNvbnRyb2xFbnRlciIsIlptIiwiZmxhdGdyaWQiLCJlZyIsIm5nIiwib2ciLCJyZyIsImlnIiwidWciLCJhZyIsImNnIiwic2ciLCJsZyIsImZnIiwiYWxsb3dWZXJ0aWNhbCIsImRnIiwibWciLCJnZyIsInBnIiwiaGciLCJ2ZyIsImJnIiwieWciLCJ4ZyIsIndnIiwibW92ZU9uVGFiIiwiU2ciLCJrZyIsIkNnIiwib25TcGFjZSIsIm9uU2hpZnRFbnRlciIsIm9uU2hpZnRUYWIiLCJvblRhYiIsIm9uVXAiLCJvbkRvd24iLCJvbkxlZnQiLCJvblJpZ2h0Iiwic3RvcFNwYWNlS2V5dXAiLCJmb2N1c0luIiwiT2ciLCJfZyIsIlRnIiwiRWciLCJEZyIsIkFnIiwiQmciLCJNZyIsIkZnIiwiYWN5Y2xpYyIsImZsb3ciLCJtYXRyaXgiLCJleGVjdXRpb24iLCJzcGVjaWFsIiwic2VuZEZvY3VzSW4iLCJSZyIsImFwcGVuZCIsInByZXBlbmQiLCJyZXBsYWNlQXQiLCJyZXBsYWNlQnkiLCJjb250ZW50cyIsIk5nIiwiYmx1ciIsIlBnIiwidGFiaW5kZXgiLCJzdG9wTW91c2Vkb3duIiwiSGciLCJ0b2dnbGUiLCJpc09uIiwiTGciLCJ0b2dnbGVPbkV4ZWN1dGUiLCJ6ZyIsInByZXNzZWQiLCJzeW5jV2l0aEV4cGFuZGVkIiwiY2hlY2tlZCIsImV4cGFuZGVkIiwiV2ciLCJHZyIsIlhnIiwicm9sZSIsInRvZ2dsaW5nIiwiaGFzU3VibWVudSIsIml0ZW1CZWhhdmlvdXJzIiwiaWdub3JlRm9jdXMiLCJZZyIsInFnIiwiS2ciLCJKZyIsIndpZGdldCIsImF1dG9mb2N1cyIsInNldFNvdXJjZSIsIndpZGdldEJlaGF2aW91cnMiLCJzZXBhcmF0b3IiLCIkZyIsImJ1aWxkZXIiLCJ1bml0IiwiZmFrZUZvY3VzIiwibWFya2VycyIsIlFnIiwiZ3JpZCIsInJvd1NlbGVjdG9yIiwiWmciLCJ0cCIsIm1lbnVCZWhhdmlvdXJzIiwic2VsZWN0ZWRJdGVtIiwibW92ZW1lbnQiLCJlcCIsIm5wIiwic2V0TWVudUJ1aWx0Iiwic2V0Q29udGVudHMiLCJleHBhbmQiLCJyZWZyZXNoIiwiY29sbGFwc2UiLCJsb29rdXBNZW51IiwibG9va3VwSXRlbSIsIm90aGVyTWVudXMiLCJnZXRQcmltYXJ5IiwiZ2V0TWVudXMiLCJpc0NsZWFyIiwiZ2V0VHJpZ2dlcmluZ1BhdGgiLCJ0cmlnZ2VyZWRNZW51IiwidHJpZ2dlcmluZ0l0ZW0iLCJ0cmlnZ2VyaW5nUGF0aCIsIm9wIiwicnAiLCJpcCIsImNvbGxhcHNlTWVudSIsImhpZ2hsaWdodFByaW1hcnkiLCJyZXBvc2l0aW9uTWVudXMiLCJwcmltYXJ5IiwibWVudXMiLCJuYk1lbnUiLCJpdGVtcyIsImV4cGFuc2lvbnMiLCJiYWNrZ3JvdW5kTWVudSIsInN0YXlJbkRvbSIsIkhpZ2hsaWdodFN1Ym1lbnUiLCJvbk9wZW5TdWJtZW51Iiwib25Db2xsYXBzZU1lbnUiLCJnZXRTb3VyY2UiLCJIaWdobGlnaHRQYXJlbnQiLCJvbkV4ZWN1dGUiLCJvbk9wZW5NZW51IiwiaGlnaGxpZ2h0SW1tZWRpYXRlbHkiLCJuYXZpZ2F0ZU9uSG92ZXIiLCJvbkhvdmVyIiwib25SZXBvc2l0aW9uTWVudSIsInRtZW51QmVoYXZpb3VycyIsInNlbGVjdGVkTWVudSIsInRpZXJlZERhdGEiLCJzaW5nbGVEYXRhIiwiY29sbGFwc2VJdGVtIiwibWV0YSIsInRleHQiLCJ1cCIsImxhenlTaW5rIiwic2hvd0F0Iiwic2hvd1dpdGhpbiIsInNob3dXaXRoaW5Cb3VuZHMiLCJzaG93TWVudUF0Iiwic2hvd01lbnVXaXRoaW5Cb3VuZHMiLCJoaWRlIiwiZ2V0Q29udGVudCIsInJlcG9zaXRpb24iLCJpbmxpbmVCZWhhdmlvdXJzIiwiZ2V0UmVsYXRlZCIsIm9uU2hvdyIsIm9uSGlkZSIsImZpcmVEaXNtaXNzYWxFdmVudEluc3RlYWQiLCJmaXJlUmVwb3NpdGlvbkV2ZW50SW5zdGVhZCIsImxwIiwiZnAiLCJhY3Rpb24iLCJidXR0b25CZWhhdmlvdXJzIiwiaW5kZW50Iiwib3V0ZGVudCIsInBwIiwic3VjY2VzcyIsImVyciIsIndhcm5pbmciLCJpbmZvIiwiaHAiLCJ0cmFuc2xhdGlvblByb3ZpZGVyIiwicHJvZ3Jlc3MiLCJ1cGRhdGVQcm9ncmVzcyIsInVwZGF0ZVRleHQiLCJpY29uIiwibGV2ZWwiLCJpY29uUHJvdmlkZXIiLCJvbkFjdGlvbiIsImNsb3NlQnV0dG9uIiwidnAiLCJjYW5jZWwiLCJ0aHJvdHRsZSIsImJwIiwiQXAiLCJpc0Jsb2NrIiwiZ2V0Q29udGVudEVkaXRhYmxlIiwiYmFja3dhcmRzIiwieXAiLCJCcCIsImdldE5vZGUiLCJnZXREb2MiLCJleHRyYWN0Q29udGVudHMiLCJpbnNlcnROb2RlIiwibm9ybWFsaXplIiwic2V0Q3Vyc29yTG9jYXRpb24iLCJ4cCIsIndwIiwiU3AiLCJrcCIsImdldFBhcmVudCIsImdldFJvb3QiLCJjaGFyQXQiLCJjbG9uZVJhbmdlIiwiY29udGFpbmVyIiwibGFzdEluZGV4T2YiLCJ0cmlnZ2VyQ2hhciIsImNyZWF0ZVJuZyIsInNlbGVjdE5vZGUiLCJDcCIsIk9wIiwiSHAiLCJfcCIsInpwIiwiVHAiLCJnZXRSbmciLCJsb29rdXBCeUNoYXIiLCJtaW5DaGFycyIsIklwIiwiTXAiLCJhbGwiLCJmZXRjaCIsIm1heFJlc3VsdHMiLCJ0aGVuIiwibWF0Y2hUZXh0IiwiY29sdW1ucyIsImhpZ2hsaWdodE9uIiwibG9va3VwRGF0YSIsImNvbnRleHQiLCJFcCIsIkRwIiwiRnAiLCJScCIsIk5wIiwiUHAiLCJWcCIsIkxwIiwiVXAiLCJqcCIsIldwIiwiR3AiLCJYcCIsIllwIiwiY29udGV4dGZvcm1idXR0b24iLCJjb250ZXh0Zm9ybXRvZ2dsZWJ1dHRvbiIsInFwIiwiS3AiLCJKcCIsIl9oIiwia2giLCIkcCIsImhhc0ljb25zIiwidGllcmVkTWVudSIsIlFwIiwiWnAiLCJ0aCIsImVoIiwibmgiLCJvaCIsInJoIiwiaWgiLCJ1aCIsIkloIiwiYWgiLCJhYnMiLCJjZWlsIiwiY2giLCJKaCIsInNoIiwiZ2V0UGFyYW0iLCJnZXRFbGVtZW50IiwibGgiLCJudiIsIkRPTSIsImdldFN0eWxlIiwiZmgiLCJkaCIsIm1oIiwiZ2giLCJwaCIsImhoIiwicnYiLCJ2aCIsIkNMT1NFX09OX0VYRUNVVEUiLCJCVUJCTEVfVE9fU0FOREJPWCIsImJoIiwieWgiLCJ4aCIsIndoIiwiU2giLCJDaCIsIk9oIiwibm9ybWFsIiwiY29sb3IiLCJUaCIsIkVoIiwiRGgiLCJBaCIsIkJoIiwiTWgiLCJGaCIsIlJoIiwiTmgiLCJQaCIsIlZoIiwiSGgiLCJjYXJkaW1hZ2UiLCJjYXJkdGV4dCIsImNhcmRjb250YWluZXIiLCJMaCIsInpoIiwiVWgiLCJqaCIsIldoIiwiR2giLCJpbnNlcnR0YWJsZSIsImNvbG9yc3dhdGNoIiwiWGgiLCJZaCIsInFoIiwiS2giLCIkaCIsIlFoIiwiWmgiLCJoaWRlQWxsRXhjbHVzaXZlIiwic2V0Q29tcG9uZW50cyIsImdldFRvb2x0aXAiLCJ0diIsImNsZWFyVG9vbHRpcCIsImNsZWFyVGltZXIiLCJyZXNldFRpbWVyIiwiaXNTaG93aW5nIiwidG9vbHRpcERvbSIsInRvb2x0aXBDb21wb25lbnRzIiwic2V0VG9vbHRpcCIsImRlbGF5IiwiZXYiLCJvdiIsIml2IiwidXYiLCJhdXRvIiwiYXYiLCJjdiIsImlubGluZSIsInN2IiwibHYiLCJmdiIsImR2IiwibXYiLCJvdXRlckNvbnRhaW5lciIsIm1vdGhlcnNoaXAiLCJ1aU1vdGhlcnNoaXAiLCJLdiIsInJlYWRvbmx5IiwiZ3YiLCJpc1JlYWRPbmx5Iiwic2V0TW9kZSIsInB2IiwiSnYiLCJodiIsImdldEFwaSIsInZ2Iiwib25TZXR1cCIsImJ2IiwieXYiLCJ0YiIsIm9wdENvbXBvbmVudHMiLCJadiIsInRyaWdnZXJzU3VibWVudSIsInh2Iiwid3YiLCJTdiIsImt2IiwiQ3YiLCJPdiIsImViIiwibWFjIiwiYWx0IiwiY3RybCIsInNoaWZ0IiwiYWNjZXNzIiwiX3YiLCJUdiIsInRpdGxlIiwiRXYiLCJwcmVzZXRzIiwiYXJpYUxhYmVsIiwiaWNvbkNvbnRlbnQiLCJpY29ucyIsImNoZWNrTWFyayIsImh0bWxDb250ZW50Iiwic2hvcnRjdXRDb250ZW50IiwiY2FyZXQiLCJEdiIsImdldFNpbmsiLCJBdiIsImVuY29kZSIsIlJlZ0V4cCIsIkJ2IiwiTXYiLCJyYiIsImliIiwiRnYiLCJ0b1VwcGVyQ2FzZSIsIkl2IiwicmVkIiwiZ3JlZW4iLCJibHVlIiwiUnYiLCJhbHBoYSIsIk52IiwiUHYiLCJodWUiLCJzYXR1cmF0aW9uIiwiYWIiLCJ1YiIsImNiIiwiVnYiLCJleGVjIiwiSHYiLCJMdiIsInNiIiwibGIiLCJ6diIsIlV2IiwiZmlyZSIsImp2IiwiV3YiLCJyb3VuZCIsIkd2IiwiWHYiLCJnZXRDb250ZXh0IiwiY2xlYXJSZWN0IiwiZmlsbFN0eWxlIiwiZmlsbFJlY3QiLCJnZXRJbWFnZURhdGEiLCJmbG9hdGluZyIsInNsaWRpbmciLCJzY3JvbGxpbmciLCJZdiIsInF2IiwiJHYiLCJRdiIsIm5iIiwiYWxpZ24iLCJ2YWxpZ24iLCJzcmMiLCJjYXJkVGV4dCIsIm9iIiwiZmIiLCJkYiIsIm1iIiwiZ2IiLCJwYiIsIkJiIiwiaGIiLCJNYiIsInZiIiwic3FydCIsImJiIiwieWIiLCJJYiIsImV4ZWNDb21tYW5kIiwiRmIiLCJ4YiIsIkFiIiwid2IiLCJTYiIsInNldEljb25GaWxsIiwia2IiLCJyZWdpc3RyeSIsImFkZFNwbGl0QnV0dG9uIiwidG9vbHRpcCIsInNlbGVjdCIsImdldFBhcmVudHMiLCJnZXRTdGFydCIsIm9uSXRlbUFjdGlvbiIsIkNiIiwiYWRkTmVzdGVkTWVudUl0ZW0iLCJnZXRTdWJtZW51SXRlbXMiLCJmYW5jeXR5cGUiLCJPYiIsIlJiIiwiX2IiLCJUYiIsIkViIiwiRGIiLCJzcGxpY2UiLCJnZXRJdGVtIiwicGFyc2UiLCJ1bnNoaWZ0IiwicG9wIiwic2V0SXRlbSIsIndpbmRvd01hbmFnZXIiLCJzaXplIiwiYnV0dG9ucyIsImluaXRpYWxEYXRhIiwiY29sb3JwaWNrZXIiLCJvblN1Ym1pdCIsImdldERhdGEiLCJhbGVydCIsIm9uQ2FuY2VsIiwic2hvcnRjdXQiLCJzZXRBY3RpdmUiLCJpc0FjdGl2ZSIsInNldERpc2FibGVkIiwiTmIiLCJQYiIsIlZiIiwiY29sIiwiaW5pdERhdGEiLCJhbGxvd0N1c3RvbUNvbG9ycyIsImNvbG9yaW5wdXQiLCJoYXNDdXN0b21Db2xvcnMiLCJjb2xvcnMiLCJnZXRDb2xvcnMiLCJnZXRDb2xvckNvbHMiLCJzaGFyZWQiLCJwcm92aWRlcnMiLCJIYiIsIkxiIiwiemIiLCJVYiIsImpiIiwiV2IiLCJHYiIsIlhiIiwiWWIiLCJxYiIsInNjaGVkdWxlIiwiS2IiLCJ0b3VjaGVzIiwiSmIiLCIkYiIsInN0b3BCYWNrc3BhY2UiLCJmaXJlSWZSZWFkeSIsIlFiIiwiWmIiLCJpc1N0b3BwZWQiLCJpc0N1dCIsImF5IiwiY29tcGxldGUiLCJkZXNjSGFuZGxlciIsInN0b3BwZWQiLCJyZXN1bWUiLCJ0eSIsInVucmVnaXN0ZXJJZCIsInJlZ2lzdGVySWQiLCJmaWx0ZXJCeVR5cGUiLCJyZWdpc3RlciIsInVucmVnaXN0ZXIiLCJnZXRCeUlkIiwiZXkiLCJzeSIsIm55IiwidnkiLCJteSIsIm95IiwicnkiLCJzZWxlY3RPbkZvY3VzIiwic2V0U2VsZWN0aW9uUmFuZ2UiLCJpeSIsImlucHV0QXR0cmlidXRlcyIsImlucHV0U3R5bGVzIiwiaW5wdXRDbGFzc2VzIiwiQ29udGVudEZvY3VzIiwiVWlGb2N1cyIsInV5IiwiZ2V0QWxsIiwicG9wdXBzIiwidHJpZ2dlckNoYXJzIiwibWF0Y2hMZW5ndGgiLCJyZWxvYWQiLCJnZXRCb2R5Iiwib25LZXlwcmVzcyIsImNhbmNlbElmTmVjZXNzYXJ5IiwiaXNNZW51T3BlbiIsImlzUHJvY2Vzc2luZ0FjdGlvbiIsImdldFZpZXciLCJoYXNQbHVnaW4iLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJjeSIsImx5IiwiY29udGFpbmVyQmVoYXZpb3VycyIsImZ5IiwiZHkiLCJkaXNwbGF5IiwiZmllbGRCZWhhdmlvdXJzIiwiZmllbGQiLCJwcmVmaXgiLCJnZXRGaWVsZCIsImdldExhYmVsIiwiZ3kiLCJ0YWJBdHRyIiwicHkiLCJoeSIsImJ5IiwieXkiLCJ4eSIsInd5IiwiU3kiLCJreSIsIkN5IiwiT3kiLCJfeSIsIlR5IiwiRXkiLCJEeSIsImlucHV0QmVoYXZpb3VycyIsIkF5IiwiQnkiLCJleHBvcnRzIiwiTXkiLCJGeSIsIlh5IiwiSXkiLCJpbnZhbGlkQ2xhc3MiLCJub3RpZnkiLCJnZXRDb250YWluZXIiLCJ2YWxpZEh0bWwiLCJvblZhbGlkIiwiUnkiLCJvbkludmFsaWQiLCJOeSIsInZhbGlkYXRvciIsIkd5IiwidmFsaWRhdGUiLCJQeSIsIm9uVmFsaWRhdGUiLCJUeXBlRXJyb3IiLCJfc3RhdGUiLCJfaGFuZGxlZCIsIl92YWx1ZSIsIl9kZWZlcnJlZHMiLCJfaW1tZWRpYXRlRm4iLCJvbkZ1bGZpbGxlZCIsIm9uUmVqZWN0ZWQiLCJwcm9taXNlIiwiX3VuaGFuZGxlZFJlamVjdGlvbkZuIiwiZ2xvYmFsVGhpcyIsImdsb2JhbCIsInNlbGYiLCJyZWplY3QiLCJyYWNlIiwic2V0SW1tZWRpYXRlIiwiX3NldEltbWVkaWF0ZUZuIiwiX3NldFVuaGFuZGxlZFJlamVjdGlvbkZuIiwiUHJvbWlzZSIsImJvbHRFeHBvcnQiLCJFcGhveENvbnRhY3RXcmFwcGVyIiwiVnkiLCJIeSIsIkx5IiwienkiLCJpc1JlYWR5IiwiVXkiLCJwdXJlIiwiankiLCJ0b1Byb21pc2UiLCJhbm9uQmluZCIsInRvTGF6eSIsInRvQ2FjaGVkIiwiV3kiLCJZeSIsIm1hcmtWYWxpZCIsIm1hcmtJbnZhbGlkIiwicXVlcnkiLCJpc0ludmFsaWQiLCJxeSIsIm9uRXZlbnQiLCJ2YWxpZGF0ZU9uTG9hZCIsIkt5IiwidmFsaWRhdGlvbiIsIkp5IiwiZ2V0Q291cGxlZCIsImdldE9yQ3JlYXRlIiwiJHkiLCJvdGhlcnMiLCJReSIsIlp5IiwidHgiLCJnZXRIb3RzcG90IiwiZ2V0QW5jaG9yT3ZlcnJpZGVzIiwiZXgiLCJtdyIsIkhpZ2hsaWdodEZpcnN0IiwibngiLCJveCIsInJ4Iiwic2FuZGJveENsYXNzZXMiLCJzYW5kYm94QmVoYXZpb3VycyIsIm1hdGNoV2lkdGgiLCJ1c2VNaW5XaWR0aCIsIml4IiwidXgiLCJheCIsIm1vZGVsIiwiZWRnZUFjdGlvbnMiLCJtb3VzZUlzRG93biIsImN4Iiwic3giLCJtaW5YIiwibHgiLCJtaW5ZIiwiZngiLCJkeCIsIm14IiwibWF4WCIsImd4IiwibWF4WSIsInB4IiwiaHgiLCJ2eCIsImJ4IiwieXgiLCJ4eCIsInd4IiwiU3giLCJzdGVwU2l6ZSIsImt4Iiwic25hcFRvR3JpZCIsIkN4Iiwic25hcFN0YXJ0IiwiT3giLCJyb3VuZGVkIiwiX3giLCJUeCIsIkV4IiwiRHgiLCJBeCIsIkJ4IiwiTXgiLCJGeCIsIkF3IiwiSXgiLCJSeCIsIk54IiwiUHgiLCJzdGVwIiwic25hcCIsImhhc01pbkVkZ2UiLCJoYXNNYXhFZGdlIiwibWluQm91bmQiLCJtYXhCb3VuZCIsInNjcmVlblJhbmdlIiwiVngiLCJtYXhPZmZzZXQiLCJjZW50ZXJNaW5FZGdlIiwiY2VudGVyTWF4RWRnZSIsIkh4IiwiTHgiLCJCdyIsInp4IiwiVXgiLCJqeCIsIld4IiwiR3giLCJYeCIsIll4IiwicXgiLCJLeCIsIkp4IiwiJHgiLCJtaW5PZmZzZXQiLCJReCIsIlp4IiwidDAiLCJlMCIsIm4wIiwibzAiLCJyMCIsImkwIiwidTAiLCJ1UyIsImlTIiwib1MiLCJyUyIsIlF3IiwiaGV4IiwiblMiLCJkZXNjcmlwdGlvbiIsImZvcm1CZWhhdmlvdXJzIiwidXBkYXRlSGV4IiwiYTAiLCJzZXRIdWUiLCJwYWxldHRlUmdiYSIsInBhbGV0dGVIdWUiLCJvblZhbGlkSGV4Iiwib25JbnZhbGlkSGV4IiwiJHciLCJzcGVjdHJ1bSIsInRodW1iIiwiZ2V0SW5pdGlhbFZhbHVlIiwib25DaGFuZ2UiLCJ0UyIsIm9uSW5pdCIsInNsaWRlckJlaGF2aW91cnMiLCJzZXRUaHVtYiIsIlp3IiwiY3JlYXRlTGluZWFyR3JhZGllbnQiLCJhZGRDb2xvclN0b3AiLCJjMCIsInNTIiwiczAiLCJsMCIsImRhdGFUcmFuc2ZlciIsImZpbGVzIiwiZlMiLCJleHBsb2RlIiwiZ2V0U2V0dGluZyIsImFjY2VwdCIsInBTIiwiYXciLCJjbGljayIsImYwIiwib3V0bGluZSIsImQwIiwiaFMiLCJ2UyIsImNTIiwibTAiLCJnMCIsInAwIiwiaDAiLCJ4UyIsInYwIiwieVMiLCJkcmF3SW1hZ2UiLCJiMCIsIm5hdHVyYWxXaWR0aCIsInkwIiwibmF0dXJhbEhlaWdodCIsIngwIiwiSFRNTENhbnZhc0VsZW1lbnQiLCJ0b0Jsb2IiLCJ0b0RhdGFVUkwiLCJhdG9iIiwiY2hhckNvZGVBdCIsIlVpbnQ4QXJyYXkiLCJCbG9iIiwidzAiLCJnZXRUeXBlIiwidG9CYXNlNjQiLCJ0b0FkanVzdGVkQmxvYiIsInRvQWRqdXN0ZWREYXRhVVJMIiwidG9BZGp1c3RlZEJhc2U2NCIsInRvQ2FudmFzIiwiUzAiLCJrMCIsIkZpbGVSZWFkZXIiLCJvbmxvYWRlbmQiLCJyZXN1bHQiLCJyZWFkQXNEYXRhVVJMIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwiSW1hZ2UiLCJ3UyIsIkMwIiwiTzAiLCJfMCIsIlQwIiwia1MiLCJFMCIsIkQwIiwicG93IiwiQTAiLCJDUyIsIkIwIiwiVFMiLCJNMCIsIkVTIiwiRjAiLCJPUyIsIkkwIiwiX1MiLCJSMCIsIk1TIiwiTjAiLCJCUyIsIlAwIiwiVjAiLCJIMCIsIkwwIiwiejAiLCJodyIsImRyb3Bkb3duQmVoYXZpb3VycyIsInZ3IiwiTlMiLCJQUyIsIlJTIiwibW91c2Vkb3duIiwiVTAiLCJqMCIsIkhTIiwibWVudUl0ZW1zIiwiVzAiLCJHMCIsIlgwIiwiWTAiLCJxMCIsIkswIiwiYm9yZGVybGVzcyIsIkowIiwiJDAiLCJRMCIsInN0b3JhZ2UiLCJaMCIsIm9uTG9ja2VkQ2hhbmdlIiwidHciLCJldyIsIm53Iiwib3ciLCJpc0ZpZWxkMSIsIlVTIiwibG9jayIsImZpZWxkMSIsImZpZWxkMiIsImZpZWxkMU5hbWUiLCJmaWVsZDJOYW1lIiwibG9ja2VkIiwibG9ja0NsYXNzIiwicmVtIiwiY291cGxlZEZpZWxkQmVoYXZpb3VycyIsImdldEZpZWxkMSIsImdldEZpZWxkMiIsImdldExvY2siLCJydyIsIllTIiwialMiLCJ0cmFuc2Zvcm0iLCJ0cmFuc2Zvcm1BcHBseSIsInN3YXAiLCJiYWNrIiwidGVtcFRyYW5zZm9ybSIsIm9uQ2hvb3NlIiwiZ2V0UmVjdCIsIkZTIiwiaGlkZUNyb3AiLCJjb25zdHJhaW4iLCJEUyIsInNob3dDcm9wIiwiZ2V0TWVhc3VyZW1lbnRzIiwibWVtQ29udGFpbmVyIiwiZ2V0QXBwbHlCdXR0b24iLCJpdyIsImNoYW5nZWRUb3VjaGVzIiwiSGlnaGxpZ2h0Tm9uZSIsInV3IiwiY3ciLCJzdyIsImx3IiwiZnciLCJkdyIsImd3IiwicHciLCJzYW5kYm94IiwidW5zZWxlY3RhYmxlIiwiYnciLCJ5dyIsInh3Iiwid3ciLCJTdyIsImt3IiwiQ3ciLCJPdyIsIl93IiwiVHciLCJFdyIsIkR3IiwiZ2V0VmFsdWVGcm9tRXZlbnQiLCJNdyIsIkZ3IiwiSXciLCJSdyIsIk53IiwiUHciLCJzZXRUb01pbiIsInNldFRvTWF4IiwiZmluZFZhbHVlT2ZPZmZzZXQiLCJmaW5kUG9zaXRpb25PZlZhbHVlIiwic2V0UG9zaXRpb25Gcm9tVmFsdWUiLCJnZXRTcGVjdHJ1bSIsImdldExlZnRFZGdlIiwiZ2V0UmlnaHRFZGdlIiwiVnciLCJIdyIsIkx3IiwienciLCJVdyIsImp3IiwiZ2V0VG9wRWRnZSIsImdldEJvdHRvbUVkZ2UiLCJXdyIsIkd3IiwiWHciLCJZdyIsInF3IiwiS3ciLCJKdyIsIm9uRHJhZ1N0YXJ0Iiwib25EcmFnRW5kIiwicmVzZXRUb01pbiIsInJlc2V0VG9NYXgiLCJlUyIsInJlY29yZCIsImFTIiwibFMiLCJkUyIsIm1TIiwicG9zdHByb2Nlc3MiLCJnUyIsImJTIiwicmV2b2tlT2JqZWN0VVJMIiwiU1MiLCJwdXRJbWFnZURhdGEiLCJBUyIsIlBJIiwic2luIiwiY29zIiwicm90YXRlIiwic2NhbGUiLCJJUyIsIlZTIiwiTFMiLCJ6UyIsInVuZG8iLCJyZWRvIiwiem9vbSIsIldTIiwiR1MiLCJYUyIsImZvcm1BY3Rpb25FdmVudCIsInNhdmVTdGF0ZSIsInFTIiwiS1MiLCJKUyIsIiRTIiwic2Nyb2xsV2lkdGgiLCJzY3JvbGxIZWlnaHQiLCJidXR0b24iLCJzY3JlZW5YIiwic2NyZWVuWSIsIm9wYWNpdHkiLCJjdXJzb3IiLCJkZWx0YVgiLCJkZWx0YVkiLCJkcmFnIiwiZ2V0RWxlbWVudEJ5SWQiLCJoYW5kbGUiLCJRUyIsIlpTIiwidGsiLCJlayIsImRlbHRhVyIsImRlbHRhSCIsImNsYW1wIiwieE11bCIsInlNdWwiLCJrZXlDb2RlIiwiTEVGVCIsIlJJR0hUIiwiVVAiLCJET1dOIiwiRU5URVIiLCJTUEFDRUJBUiIsInRvZ2dsZVZpc2liaWxpdHkiLCJzZXRDbGFtcFJlY3QiLCJzZXRSZWN0IiwiZ2V0SW5uZXJSZWN0Iiwic2V0SW5uZXJSZWN0Iiwic2V0Vmlld1BvcnRSZWN0IiwibmsiLCJyZW1vdmVkIiwiY2FuVW5kbyIsImNhblJlZG8iLCJ1cmwiLCJibG9iIiwiZ2V0QmxvYlN0YXRlIiwic2V0QmxvYlN0YXRlIiwiYWRkQmxvYlN0YXRlIiwiZ2V0VGVtcFN0YXRlIiwidXBkYXRlVGVtcFN0YXRlIiwiYWRkVGVtcFN0YXRlIiwiYXBwbHlUZW1wU3RhdGUiLCJkZXN0cm95VGVtcFN0YXRlIiwiZ2V0SGlzdG9yeVN0YXRlcyIsInVuZG9FbmFibGVkIiwicmVkb0VuYWJsZWQiLCJvayIsInVwZGF0ZUJ1dHRvblVuZG9TdGF0ZXMiLCJjdXJyZW50U3RhdGUiLCJ1cGRhdGVTcmMiLCJpbmZsYXRlIiwicmsiLCJpayIsImhlYWRlciIsImNlbGxzIiwidWsiLCJtdWx0aWxpbmUiLCJwbGFjZWhvbGRlciIsImlucHV0TW9kZSIsImlucHV0bW9kZSIsImNsYXNzbmFtZSIsImZsZXgiLCJtYXhpbWl6ZWQiLCJhayIsInRpbWVyIiwic2V0VGltZXIiLCJjayIsInMxIiwic2siLCJsayIsImF0dGFjaCIsImZrIiwiZGsiLCJtayIsImdrIiwiYWRkVG9IaXN0b3J5IiwiZmlsZXR5cGUiLCJtMSIsImRpc21pc3NPbkJsdXIiLCJ2MSIsInJlc3BvbnNlVGltZSIsImdldExpbmtJbmZvcm1hdGlvbiIsImdldEhpc3RvcnkiLCJ0YXJnZXRzIiwiYW5jaG9yVG9wIiwiYW5jaG9yQm90dG9tIiwiaDEiLCJ0eXBlYWhlYWRCZWhhdmlvdXJzIiwiZ2V0VmFsaWRhdGlvbkhhbmRsZXIiLCJwMSIsInN0YXR1cyIsIm1lc3NhZ2UiLCJnZXREaXNwbGF5VGV4dCIsInNlbGVjdHNPdmVyIiwicG9wdWxhdGVGcm9tQnJvd3NlIiwib3BlbkNsYXNzIiwib25JdGVtRXhlY3V0ZSIsImdldFVybFBpY2tlciIsImZpZWxkbmFtZSIsInBrIiwiaGsiLCJpbnRlcnByZXRlciIsIngxIiwidmsiLCJnZXRDb250ZW50QXJlYUNvbnRhaW5lciIsImlubGluZURpYWxvZyIsIncxIiwiYmFubmVyIiwiYmsiLCJrMSIsImZvcm1hdHRlciIsImN1c3RvbUZvcm1hdHMiLCJmb3JtYXRzIiwiaGFzIiwiZm9ybWF0IiwiUzEiLCJ5ayIsImlzU2VsZWN0ZWQiLCJnZXRTdHlsZVByZXZpZXciLCJ4ayIsImdldFN0eWxlSXRlbXMiLCJ3ayIsImNvbnRlbnRFZGl0YWJsZSIsIlNrIiwia2siLCJpbm5lclRleHQiLCJDayIsIkpDIiwiT2siLCJfayIsIlRrIiwiRWsiLCJEayIsIkMxIiwiQWsiLCJCayIsIk1rIiwiRTEiLCJTeW50YXhFcnJvciIsIkZrIiwiSWsiLCJSayIsIk5rIiwibWFrZU1hcCIsIlBrIiwiVmsiLCJIayIsIlQxIiwiTGsiLCJpc1Bvc2l0aW9uZWRBdFRvcCIsImdldERvY2tpbmdNb2RlIiwic2V0RG9ja2luZ01vZGUiLCJ5MSIsImFuY2hvcnMiLCJ1cmxpbnB1dCIsInN0eWxlc2VsZWN0IiwiZ2V0RmxhdHRlbmVkS2V5cyIsImNvbG9yUGlja2VyIiwiZGlhbG9nIiwiaXNEcmFnZ2FibGVNb2RhbCIsImlzQ29udGV4dE1lbnVPcGVuIiwic2V0Q29udGV4dE1lbnVTdGF0ZSIsImJsb2NrIiwicGFyc2VTdHlsZSIsImdldENzc1RleHQiLCJ6ayIsIlVrIiwiamsiLCJ0cmFuc2l0aW9uQ2xhc3MiLCJmYWRlT3V0Q2xhc3MiLCJmYWRlSW5DbGFzcyIsIldrIiwiR2siLCJYayIsImdldEluaXRpYWxQb3MiLCJZayIsImNsZWFySW5pdGlhbFBvcyIsIkgxIiwicWsiLCJnZXRNb2RlcyIsInNldEluaXRpYWxQb3MiLCJLayIsInNldERvY2tlZCIsIm9uVW5kb2NrZWQiLCJKayIsIm9uRG9ja2VkIiwiJGsiLCJjb250ZXh0dWFsIiwibGF6eUNvbnRleHQiLCJpc1Zpc2libGUiLCJzZXRWaXNpYmxlIiwiUWsiLCJpc0RvY2tlZCIsIkwxIiwiWmsiLCJqMSIsInRDIiwiZUMiLCJHMSIsIm5DIiwiWDEiLCJZMSIsIm9DIiwiVzEiLCJvblNob3duIiwib25IaWRkZW4iLCJsYXp5Vmlld3BvcnQiLCJtb2RlcyIsInJDIiwiJDEiLCJpQyIsImdldEFuaW1hdGlvblJvb3QiLCJ1QyIsImRpbWVuc2lvbiIsInByb3BlcnR5IiwiYUMiLCJnZXREaW1lbnNpb24iLCJjQyIsInNocmlua2luZ0NsYXNzIiwiZ3Jvd2luZ0NsYXNzIiwic0MiLCJjbG9zZWRDbGFzcyIsImxDIiwiZkMiLCJzZXRDb2xsYXBzZWQiLCJvblN0YXJ0U2hyaW5rIiwib25TaHJ1bmsiLCJkQyIsIm1DIiwic2V0RXhwYW5kZWQiLCJvblN0YXJ0R3JvdyIsImdDIiwicEMiLCJoQyIsInZDIiwiYkMiLCJ1TyIsImFPIiwic2xvdCIsInZpc2libGUiLCJzbG90QmVoYXZpb3VycyIsImhpZGVBbGxTbG90cyIsInlDIiwibk8iLCJpc0dyb3dpbmciLCJoYXNHcm93biIsImdldFNsb3ROYW1lcyIsInhDIiwid0MiLCJTQyIsImVkaXRvck1hbmFnZXIiLCJpZnJhbWVFbGVtZW50IiwiZk8iLCJoYXNGb2N1cyIsInVuYmxvY2siLCJjb21tYW5kIiwic2V0RWRpdG9yVGltZW91dCIsImtDIiwid2l0aGluIiwid2l0aGluV2lkdGgiLCJDQyIsImxlbiIsIk9DIiwiX0MiLCJOMSIsInNldEdyb3VwcyIsIlRDIiwiYnVpbHRHcm91cHMiLCJFQyIsInRvb2xiYXIiLCJEQyIsInBPIiwiQUMiLCJCQyIsIk1DIiwib3ZlcmZsb3dHcm91cHMiLCJiTyIsIkZDIiwiUUMiLCJ0b2dnbGVHcm93IiwiSUMiLCJ3TyIsIml0ZW1TZWxlY3RvciIsInRncm91cEJlaGF2aW91cnMiLCJSQyIsIk5DIiwiaW5pdEdyb3VwcyIsIlBDIiwiY3ljbGljS2V5aW5nIiwic3BsaXRUb29sYmFyQmVoYXZpb3VycyIsIlZDIiwiZ3JvdXBzIiwidG9vbGJhckJlaGF2aW91cnMiLCJIQyIsIkxDIiwiSU8iLCJtZW51YmFyIiwiZ2V0SXRlbXMiLCJ6QyIsIl9za2luTG9hZGVkIiwiaW5pdGlhbGl6ZWQiLCJVQyIsImxvYWQiLCJ1bmxvYWQiLCJqQyIsImRvY3VtZW50QmFzZVVSSSIsInRvQWJzb2x1dGUiLCJiYXNlVVJMIiwiY29udGVudENTUyIsInN0eWxlU2hlZXRMb2FkZXIiLCJXQyIsImZvcm1hdENoYW5nZWQiLCJvbmNlIiwiR0MiLCJYQyIsInVuZG9NYW5hZ2VyIiwidHJhbnNhY3QiLCJZQyIsInFDIiwiaXNTZWxlY3RlZEZvciIsImdldFByZXZpZXdGb3IiLCJ2YWxpZGF0ZUl0ZW1zIiwiZ2V0RmV0Y2giLCJnZXRDdXJyZW50VmFsdWUiLCJzaG91bGRIaWRlIiwiS0MiLCJnZXRDb21wb25lbnQiLCJPMSIsIl8xIiwiJEMiLCJnZXRTbG90IiwiaGlkZVNsb3QiLCJzaG93U2xvdCIsIlpDIiwidDEiLCJlMSIsIm4xIiwibzEiLCJyMSIsImkxIiwib3B0aW9ucyIsInNlbGVjdENsYXNzZXMiLCJzZWxlY3RBdHRyaWJ1dGVzIiwic2VsZWN0QmVoYXZpb3VycyIsInUxIiwic3RyZWFtIiwic3RyZWFtcyIsInNldHVwIiwiY2FuY2VsRXZlbnQiLCJhMSIsImMxIiwib25TdHJlYW0iLCJzdG9wRXZlbnQiLCJsMSIsImYxIiwiZDEiLCJwcmV2aWV3aW5nIiwiZzEiLCJiaW5kRnV0dXJlIiwiYmluZFJlc3VsdCIsIm1hcFJlc3VsdCIsImZvbGRSZXN1bHQiLCJ3aXRoVGltZW91dCIsImIxIiwiYmFyIiwiY29sbGVjdGlvbiIsImVuY29kZUFsbFJhdyIsImFsZXJ0YmFubmVyIiwiaWNvblRvb2x0aXAiLCJ0ZXh0YXJlYSIsImlmcmFtZSIsInNhbmRib3hlZCIsImNvbnRlbnRXaW5kb3ciLCJzb3VyY2UiLCJjaGVja2JveCIsImRyb3B6b25lIiwibGlzdGJveCIsInNlbGVjdGJveCIsInNpemVpbnB1dCIsImN1c3RvbWVkaXRvciIsInNjcmlwdElkIiwic2NyaXB0VXJsIiwic2V0dGluZ3MiLCJodG1scGFuZWwiLCJodG1sIiwiaW1hZ2V0b29scyIsInRhYmxlIiwicGFuZWwiLCJ2YWxpZ25DZW50cmUiLCJhbGlnbkNlbnRyZSIsImFsaWduTGVmdCIsImFsaWduUmlnaHQiLCJEMSIsIkExIiwiQjEiLCJNMSIsIkYxIiwic2hlbGwiLCJsaXN0QmVoYXZpb3VycyIsInNldEl0ZW1zIiwibWFrZUl0ZW0iLCJzZXR1cEl0ZW0iLCJJMSIsIlIxIiwiUDEiLCJWMSIsImdldEJlaGF2aW91cnMiLCJ6MSIsInNldE1vZGVzIiwiVTEiLCJxMSIsImlubmVySGVpZ2h0IiwiZWxtIiwiSzEiLCJKMSIsIlExIiwiWjEiLCJzZXRNZW51cyIsImJhY2tzdGFnZSIsInRPIiwiaXNFeHBhbmRlZCIsImdyb3ciLCJzaHJpbmsiLCJpbW1lZGlhdGVTaHJpbmsiLCJoYXNTaHJ1bmsiLCJpc0NvbGxhcHNlZCIsImlzU2hyaW5raW5nIiwiaXNUcmFuc2l0aW9uaW5nIiwiZGlzYWJsZVRyYW5zaXRpb25zIiwiZU8iLCJvbkdyb3duIiwib08iLCJyTyIsImlPIiwiY08iLCJzTyIsImxPIiwiaXNCbG9ja2VkIiwib25CbG9jayIsImJsb2NrV2l0aCIsIm9uVW5ibG9jayIsImRPIiwibU8iLCJnTyIsImhPIiwidk8iLCJ0b2dnbGVkQ2xhc3MiLCJ0b29sYmFyU2FuZGJveCIsImdldFRvb2xiYXIiLCJ5TyIsInhPIiwiU08iLCJnZXRPdmVyZmxvd0JvdW5kcyIsIm92ZXJmbG93VG9nZ2xlZENsYXNzIiwib3ZlcmZsb3ciLCJvdmVyZmxvd0dyb3VwIiwiZ2V0T3ZlcmZsb3ciLCJrTyIsIkNPIiwib25DbG9zZWQiLCJvbk9wZW5lZCIsIk9PIiwiX08iLCJUTyIsIkVPIiwibW9yZURyYXdlckRhdGEiLCJsYXp5SGVhZGVyIiwibGF6eVRvb2xiYXIiLCJsYXp5TW9yZUJ1dHRvbiIsIkRPIiwiZWRpdG9yIiwic3RpY2t5Iiwic2hhcmVkQmFja3N0YWdlIiwiQU8iLCJCTyIsIk1PIiwiRk8iLCJnZXRTb2NrZXQiLCJzZXRTaWRlYmFyIiwidG9nZ2xlU2lkZWJhciIsIndoaWNoU2lkZWJhciIsImdldEhlYWRlciIsInNldFRvb2xiYXIiLCJzZXRUb29sYmFycyIsInJlZnJlc2hUb29sYmFyIiwidG9nZ2xlVG9vbGJhckRyYXdlciIsImlzVG9vbGJhckRyYXdlclRvZ2dsZWQiLCJnZXRUaHJvYmJlciIsImZvY3VzVG9vbGJhciIsInNldE1lbnViYXIiLCJmb2N1c01lbnViYXIiLCJmaWxlIiwiZWRpdCIsImluc2VydCIsInRvb2xzIiwiaGVscCIsIlJPIiwiTk8iLCJQTyIsIlNlbWlDb2xvbiIsIlZPIiwidl8iLCJjYW5BcHBseSIsIkhPIiwiTE8iLCJxdWVyeUNvbW1hbmRWYWx1ZSIsIm1hdGNoT3B0IiwiYl8iLCJmb250Iiwiek8iLCJ4XyIsInlfIiwiU3BhY2UiLCJVTyIsImNsb3Nlc3QiLCJqTyIsIldPIiwiR08iLCJYTyIsIllPIiwicU8iLCJUXyIsImtfIiwiY2hhbm5lbCIsInJlbmRlckNvbXBvbmVudHMiLCJLTyIsImJ1dHRvbkFwaSIsInRvb2xiYXJCdXR0b25CZWhhdmlvdXJzIiwiSk8iLCIkTyIsImFsbG93VG9vbGJhckdyb3VwcyIsIkZfIiwiUU8iLCJaTyIsInRfIiwiZV8iLCJuXyIsInNob3ciLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwidXBkYXRlTW9kZSIsInJlcG9zaXRpb25Qb3B1cHMiLCJvXyIsInBvcyIsInJfIiwiaV8iLCJ1XyIsImFfIiwiY18iLCJzXyIsImxhc3RFbGVtZW50IiwiaXNSZXBvc2l0aW9uIiwibF8iLCJwcmVkaWNhdGUiLCJjb250ZXh0VG9vbGJhcnMiLCJjb250ZXh0Rm9ybXMiLCJmXyIsImVsZW0iLCJ0b29sYmFycyIsImluTm9kZVNjb3BlIiwiaW5FZGl0b3JTY29wZSIsImRfIiwibGF1bmNoIiwic2NvcGUiLCJmb3JtcyIsImxvb2t1cFRhYmxlIiwiZm9ybU5hdmlnYXRvcnMiLCJtXyIsInNob3J0Y3V0cyIsIkxfIiwiel8iLCJYXyIsInNpbmsiLCJHXyIsIldfIiwiVV8iLCJmb3J3YXJkQ29udGVudHMiLCJqXyIsIkhfIiwiVl8iLCJ0b29sYmFyS2V5IiwiZ18iLCJwXyIsImhfIiwic21hbGwiLCJtZWRpdW0iLCJsYXJnZSIsIndfIiwidXBkYXRlU3RhdGUiLCJTXyIsIkNfIiwiT18iLCJfXyIsInNwbGl0RHJvcGRvd25CZWhhdmlvdXJzIiwiRV8iLCJEXyIsIkFfIiwiQl8iLCJ0b2dnbGVidXR0b24iLCJtZW51YnV0dG9uIiwic3BsaXRidXR0b24iLCJhcnJvdyIsInNldEljb25TdHJva2UiLCJncm91cHRvb2xiYXJidXR0b24iLCJzdHlsZVNlbGVjdEJ1dHRvbiIsImZvbnRzaXplU2VsZWN0QnV0dG9uIiwiZm9udFNlbGVjdEJ1dHRvbiIsImZvcm1hdEJ1dHRvbiIsImFsaWduTWVudUJ1dHRvbiIsIk1fIiwiZm9udHNpemVzZWxlY3QiLCJmb250c2VsZWN0IiwiZm9ybWF0c2VsZWN0IiwiSV8iLCJSXyIsIk5fIiwicmVuZGVyIiwidGFyZ2V0Tm9kZSIsImlubmVyV2lkdGgiLCJzaWRlYmFyIiwiYWRkQ29tbWFuZCIsImFkZFF1ZXJ5VmFsdWVIYW5kbGVyIiwiaWZyYW1lQ29udGFpbmVyIiwiZWRpdG9yQ29udGFpbmVyIiwiYXBpIiwiUF8iLCJub2RlQ2hhbmdlZCIsImluaXRWYWx1ZSIsImZpbmRQcmltYXJ5IiwiY29tbWFuZHMiLCJhc1NwZWNzIiwiaW5zZXQiLCJZXyIsInVuc3VwcG9ydGVkTGVuZ3RoIiwiZW1wdHkiLCJxXyIsIktfIiwiSl8iLCJnZXRPcHRpb25zIiwiaGFzaCIsIndhdGNoZXIiLCJzZXRDdXJyZW50IiwiYWRkTWVudUJ1dHRvbiIsIm9uVG9vbGJhclNldHVwIiwib25NZW51U2V0dXAiLCIkXyIsIlFfIiwiYWRkVG9nZ2xlQnV0dG9uIiwiYWRkQnV0dG9uIiwiWl8iLCJ0VCIsImFkZFRvZ2dsZU1lbnVJdGVtIiwiaGFzVmlzdWFsIiwiZVQiLCJjbWQiLCJhZGRNZW51SXRlbSIsInF1ZXJ5Q29tbWFuZFN0YXRlIiwiTFQiLCJjdXN0b21Db2RlIiwiY29kZSIsImN1c3RvbVZhbHVlIiwiblQiLCJvVCIsInJUIiwicGFnZVgiLCJwYWdlWSIsImdldFBvcyIsInpUIiwiaVQiLCJ1VCIsImpUIiwiVVQiLCJzZXRSbmciLCJhVCIsImNUIiwic1QiLCJsVCIsIldUIiwiZlQiLCJwb2ludGVyVHlwZSIsImRUIiwibVQiLCJjb250ZXh0TWVudXMiLCJHVCIsImdUIiwicFQiLCJoVCIsInZUIiwiYlQiLCJ5VCIsInhUIiwid1QiLCJZVCIsInFUIiwiS1QiLCJTVCIsIk5hTiIsImtUIiwibGVmdEF0dHIiLCJ0b3BBdHRyIiwibXVzdFNuYXAiLCJKVCIsIiRUIiwiY29vcmQiLCJvdXRwdXQiLCJDVCIsInNlbnNvciIsIk9UIiwiWlQiLCJfVCIsIlRUIiwiRVQiLCJEVCIsImdldFN0YXJ0RGF0YSIsImdldFRhcmdldCIsInJlcG9zaXRpb25UYXJnZXQiLCJzbmFwcyIsIm9uU2Vuc29yIiwib25EcmFnIiwiQVQiLCJvbkRyb3AiLCJCVCIsInNldFN0YXJ0RGF0YSIsIk1UIiwiZHJvcCIsImRlbGF5RHJvcCIsImZvcmNlRHJvcCIsIm1vdmUiLCJuRSIsImJsb2NrZXJDbGFzcyIsIkZUIiwickUiLCJJVCIsImFFIiwiUlQiLCJnZXRTbmFwUG9pbnRzIiwiTlQiLCJ0b3VjaHN0YXJ0IiwiUFQiLCJzbmFwVG8iLCJvdGhlckNlbGxzIiwidXBPckxlZnRDZWxscyIsImRvd25PclJpZ2h0Q2VsbHMiLCJWVCIsIkhUIiwiWFQiLCJkZWx0YXMiLCJRVCIsInRFIiwiZUUiLCJnZXREZWx0YSIsIm9FIiwiaUUiLCJ1RSIsIm1vdXNlIiwidG91Y2giLCJtb3VzZU9yVG91Y2giLCJkcmFnZ2VyIiwiY0UiLCJCb3RoIiwic0UiLCJsRSIsImRlbGltaXRlciIsImlzRGVmYXVsdFByZXZlbnRlZCIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwicGFyZW50cyIsImNvdW50Iiwid29yZHMiLCJjaGFyYWN0ZXJzIiwid29yZENvdW50IiwiTm9uZSIsIlZlcnRpY2FsIiwiZkUiLCJkaXIiLCJzb2NrZXQiLCJ0aHJvYmJlciIsInZpc2liaWxpdHkiLCJib3JkZXIiLCJhZGRRdWVyeVN0YXRlSGFuZGxlciIsInJlbmRlclVJIiwic2lkZWJhcnMiLCJhZGRHcm91cFRvb2xiYXJCdXR0b24iLCJnZXRVaSIsImJyb2FkY2FzdEFsbCIsInJlbGF0ZWRUYXJnZXQiLCJkRSIsIkFEIiwibUUiLCJnRSIsImludGVybmFsRGlhbG9nIiwiVkQiLCJkYXRhVmFsaWRhdG9yIiwiekQiLCJVRCIsInBFIiwiaEUiLCJ2RSIsImJFIiwieUUiLCJ0YWJzIiwiUUQiLCJaRCIsImV4dHJhRXZlbnRzIiwiJEQiLCJzaG93VGFiIiwic2VsZWN0Rmlyc3QiLCJvbkNoYW5nZVRhYiIsIm9sZE5hbWUiLCJ0YWJiYXIiLCJZRCIsInRhYkNsYXNzIiwic2VsZWN0ZWRDbGFzcyIsInRhYmJhckJlaGF2aW91cnMiLCJ0YWJ2aWV3IiwidGFiU2VjdGlvbkJlaGF2aW91cnMiLCJnZXRWaWV3SXRlbXMiLCJ4RSIsIm5BIiwiaXNUYWJQYW5lbCIsIndFIiwiU0UiLCJrRSIsIkNFIiwiZHJhZ0Jsb2NrQ2xhc3MiLCJnZXREcmFnQm91bmRzIiwiT0UiLCJibG9ja2VyIiwiZ2V0Rm9vdGVyIiwic2V0SWRsZSIsInNldEJ1c3kiLCJtb2RhbEJlaGF2aW91cnMiLCJfRSIsIlRFIiwiRUUiLCJERSIsIkFFIiwiQkUiLCJzdWJtaXQiLCJjdXN0b20iLCJNRSIsIkZFIiwiSUUiLCJSRSIsIk5FIiwiUEUiLCJWRSIsIkhFIiwiTEUiLCJ6RSIsIlVFIiwiakUiLCJXRSIsIkdFIiwiWEUiLCJZRSIsInFFIiwiS0UiLCJKRSIsIiRFIiwiUUUiLCJaRSIsInREIiwiZUQiLCJuRCIsIm9EIiwickQiLCJpRCIsInVEIiwiYUQiLCJjRCIsInNEIiwibEQiLCJmRCIsImREIiwibUQiLCJnRCIsInBEIiwiaEQiLCJ2RCIsImJEIiwieUQiLCJ4RCIsIndEIiwiU0QiLCJrRCIsIkNEIiwiT0QiLCJfRCIsIlREIiwiRUQiLCJERCIsIk1EIiwiQkQiLCJGRCIsIklEIiwiUkQiLCJORCIsIlBEIiwidGFicGFuZWwiLCJIRCIsIkxEIiwidG9nZ2xlbWVudWl0ZW0iLCJqRCIsIm9wZW5VcmwiLCJyZWRpYWwiLCJXRCIsInRhYkJ1dHRvbkJlaGF2aW91cnMiLCJHRCIsIlhEIiwiY2xpY2tUb0Rpc21pc3MiLCJxRCIsInRhYnZpZXdCZWhhdmlvdXJzIiwiS0QiLCJKRCIsIm9uRGlzbWlzc1RhYiIsInRBIiwiZUEiLCJvQSIsInJBIiwiaUEiLCJTeW1ib2wiLCJpdGVyYXRvciIsInVBIiwic2V0UHJvdG90eXBlT2YiLCJhQSIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJzaGFtIiwiUHJveHkiLCJCb29sZWFuIiwidmFsdWVPZiIsImNBIiwiaXNBcnJheSIsInNBIiwibEEiLCJmQSIsImRBIiwibUEiLCJpc0Zyb3plbiIsImdBIiwiZ2V0UHJvdG90eXBlT2YiLCJwQSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImhBIiwidkEiLCJzZWFsIiwiYkEiLCJjcmVhdGUiLCJ5QSIsInhBIiwid0EiLCJTQSIsIk1BIiwiZm9yRWFjaCIsImtBIiwiQ0EiLCJPQSIsIl9BIiwiVEEiLCJFQSIsIkRBIiwiQUEiLCJCQSIsIkZBIiwiSUEiLCJSQSIsIk5BIiwiUEEiLCJWQSIsIkhBIiwiTEEiLCJ6QSIsIlVBIiwiakEiLCJXQSIsIkdBIiwiWEEiLCJZQSIsInFBIiwiS0EiLCJKQSIsIiRBIiwiUUEiLCJaQSIsInRCIiwiZUIiLCJuQiIsIm9CIiwickIiLCJfQiIsInNhbml0aXplIiwiaUIiLCJmb290ZXIiLCJ1QiIsImFCIiwiZXh0cmFDbGFzc2VzIiwiZXh0cmFTdHlsZXMiLCJUQiIsImRpYWxvZ0V2ZW50cyIsImV4dHJhQmVoYXZpb3VycyIsImNCIiwic0IiLCJsQiIsImZCIiwiZHJhZ2dhYmxlIiwiZHJhZ2hhbmRsZSIsImRCIiwibUIiLCJjbG9zZVdpbmRvdyIsImdCIiwicEIiLCJoQiIsInZCIiwiYkIiLCJtZW1lbnRvIiwiZm9vdGVyQnV0dG9ucyIsInlCIiwibG9va3VwQnlOYW1lIiwieEIiLCJ3QiIsImdldEZvcm1XcmFwcGVyIiwiU0IiLCJzZXREYXRhIiwia0IiLCJNQiIsIm1jZUFjdGlvbiIsIkNCIiwiRUIiLCJCQiIsImJhc2VfdXJpIiwibG9jYXRpb24iLCJocmVmIiwicHJvdG9jb2wiLCJwb3J0IiwiaXNTYW1lT3JpZ2luIiwiaW5zZXJ0Q29udGVudCIsImNvbnRlbnQiLCJvbk1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInNlbmRNZXNzYWdlIiwiaW5zdGFuY2VBcGkiLCJPQiIsIkRCIiwiQUIiLCJhcmlhQXR0cnMiLCJjb25maXJtIiwiaXNTdXBwb3J0ZWQiLCJEb2N1bWVudEZyYWdtZW50IiwiSFRNTFRlbXBsYXRlRWxlbWVudCIsIk5vZGVGaWx0ZXIiLCJOYW1lZE5vZGVNYXAiLCJNb3pOYW1lZEF0dHJNYXAiLCJIVE1MRm9ybUVsZW1lbnQiLCJET01QYXJzZXIiLCJ0cnVzdGVkVHlwZXMiLCJjcmVhdGVQb2xpY3kiLCJjdXJyZW50U2NyaXB0IiwiY3JlYXRlSFRNTCIsImltcGxlbWVudGF0aW9uIiwiY3JlYXRlTm9kZUl0ZXJhdG9yIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJpbXBvcnROb2RlIiwiZG9jdW1lbnRNb2RlIiwiQUxMT1dFRF9UQUdTIiwiQUxMT1dFRF9BVFRSIiwiQUREX1VSSV9TQUZFX0FUVFIiLCJBRERfREFUQV9VUklfVEFHUyIsIkZPUkJJRF9DT05URU5UUyIsIkZPUkJJRF9UQUdTIiwiRk9SQklEX0FUVFIiLCJVU0VfUFJPRklMRVMiLCJBTExPV19BUklBX0FUVFIiLCJBTExPV19EQVRBX0FUVFIiLCJBTExPV19VTktOT1dOX1BST1RPQ09MUyIsIlNBRkVfRk9SX1RFTVBMQVRFUyIsIldIT0xFX0RPQ1VNRU5UIiwiUkVUVVJOX0RPTSIsIlJFVFVSTl9ET01fRlJBR01FTlQiLCJSRVRVUk5fVFJVU1RFRF9UWVBFIiwiRk9SQ0VfQk9EWSIsIlNBTklUSVpFX0RPTSIsIktFRVBfQ09OVEVOVCIsIklOX1BMQUNFIiwiQUxMT1dFRF9VUklfUkVHRVhQIiwiTkFNRVNQQUNFIiwiQ1VTVE9NX0VMRU1FTlRfSEFORExJTkciLCJ0YWdOYW1lQ2hlY2siLCJhdHRyaWJ1dGVOYW1lQ2hlY2siLCJhbGxvd0N1c3RvbWl6ZWRCdWlsdEluRWxlbWVudHMiLCJQQVJTRVJfTUVESUFfVFlQRSIsInN2ZyIsInN2Z0ZpbHRlcnMiLCJtYXRoTWwiLCJBRERfVEFHUyIsIkFERF9BVFRSIiwidGJvZHkiLCJjcmVhdGVIVE1MRG9jdW1lbnQiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwib3V0ZXJIVE1MIiwiYXR0cmlidXRlIiwiZ2V0QXR0cmlidXRlTm9kZSIsInBhcnNlRnJvbVN0cmluZyIsImNyZWF0ZURvY3VtZW50IiwiU0hPV19FTEVNRU5UIiwiU0hPV19DT01NRU5UIiwiU0hPV19URVhUIiwibmFtZXNwYWNlVVJJIiwidGFnTmFtZSIsImFsbG93ZWRUYWdzIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJhdHRyTmFtZSIsImF0dHJWYWx1ZSIsImtlZXBBdHRyIiwiYWxsb3dlZEF0dHJpYnV0ZXMiLCJmb3JjZUtlZXBBdHRyIiwic2V0QXR0cmlidXRlTlMiLCJ0b1N0YXRpY0hUTUwiLCJmaXJzdENoaWxkIiwibmV4dE5vZGUiLCJzaGFkb3dyb290IiwiZG9jdHlwZSIsInNldENvbmZpZyIsImNsZWFyQ29uZmlnIiwiaXNWYWxpZEF0dHJpYnV0ZSIsImFkZEhvb2siLCJyZW1vdmVIb29rIiwicmVtb3ZlSG9va3MiLCJyZW1vdmVBbGxIb29rcyIsIm9uVGFiQ2hhbmdlIiwibmV3VGFiTmFtZSIsIm9sZFRhYk5hbWUiLCJnZXRXaW5kb3dNYW5hZ2VySW1wbCIsImdldE5vdGlmaWNhdGlvbk1hbmFnZXJJbXBsIiwidGltZW91dCIsInByb2dyZXNzQmFyIiwibW92ZVRvIiwibW92ZVJlbCIsImdldEVsIiwiZ2V0QXJncyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/themes/silver/theme.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/themes/silver/theme.min.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/themes/mobile/theme.min.js":
/*!*********************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/themes/mobile/theme.min.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.7 (2022-12-06)\r\n */\n!function () {\n  \"use strict\";\n\n  var _y = function y() {\n    return (_y = Object.assign || function (n) {\n      for (var e, t = 1, o = arguments.length; t < o; t++) for (var r in e = arguments[t]) Object.prototype.hasOwnProperty.call(e, r) && (n[r] = e[r]);\n      return n;\n    }).apply(this, arguments);\n  };\n  function c(n, e) {\n    var t = {};\n    for (r in n) Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);\n    if (null != n && \"function\" == typeof Object.getOwnPropertySymbols) for (var o = 0, r = Object.getOwnPropertySymbols(n); o < r.length; o++) e.indexOf(r[o]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[o]) && (t[r[o]] = n[r[o]]);\n    return t;\n  }\n  function u(n, e, t) {\n    if (t || 2 === arguments.length) for (var o, r = 0, i = e.length; r < i; r++) !o && r in e || ((o = o || Array.prototype.slice.call(e, 0, r))[r] = e[r]);\n    return n.concat(o || Array.prototype.slice.call(e));\n  }\n  function n(o) {\n    return function (n) {\n      return t = _typeof(e = n), (null === e ? \"null\" : \"object\" == t && (Array.prototype.isPrototypeOf(e) || e.constructor && \"Array\" === e.constructor.name) ? \"array\" : \"object\" == t && (String.prototype.isPrototypeOf(e) || e.constructor && \"String\" === e.constructor.name) ? \"string\" : t) === o;\n      var e, t;\n    };\n  }\n  function e(e) {\n    return function (n) {\n      return _typeof(n) === e;\n    };\n  }\n  function t(e) {\n    return function (n) {\n      return e === n;\n    };\n  }\n  function l(n) {\n    return !(null == n);\n  }\n  function Y() {}\n  function i(t, o) {\n    return function () {\n      for (var n = [], e = 0; e < arguments.length; e++) n[e] = arguments[e];\n      return t(o.apply(null, n));\n    };\n  }\n  function w(n) {\n    return function () {\n      return n;\n    };\n  }\n  function K(n) {\n    return n;\n  }\n  function o(n, e) {\n    return n === e;\n  }\n  var r = n(\"string\"),\n    a = n(\"object\"),\n    D = n(\"array\"),\n    s = t(null),\n    d = e(\"boolean\"),\n    f = t(void 0),\n    m = e(\"function\"),\n    g = e(\"number\");\n  function J(o) {\n    for (var r = [], n = 1; n < arguments.length; n++) r[n - 1] = arguments[n];\n    return function () {\n      for (var n = [], e = 0; e < arguments.length; e++) n[e] = arguments[e];\n      var t = r.concat(n);\n      return o.apply(null, t);\n    };\n  }\n  function Q(e) {\n    return function (n) {\n      return !e(n);\n    };\n  }\n  function h(n) {\n    return function () {\n      throw new Error(n);\n    };\n  }\n  function p(n) {\n    return n();\n  }\n  function v() {\n    return b;\n  }\n  var S = w(!1),\n    x = w(!0),\n    b = {\n      fold: function fold(n, e) {\n        return n();\n      },\n      isSome: S,\n      isNone: x,\n      getOr: K,\n      getOrThunk: O,\n      getOrDie: function getOrDie(n) {\n        throw new Error(n || \"error: getOrDie called on none.\");\n      },\n      getOrNull: w(null),\n      getOrUndefined: w(void 0),\n      or: K,\n      orThunk: O,\n      map: v,\n      each: Y,\n      bind: v,\n      exists: S,\n      forall: x,\n      filter: function filter() {\n        return b;\n      },\n      toArray: function toArray() {\n        return [];\n      },\n      toString: w(\"none()\")\n    };\n  function O(n) {\n    return n();\n  }\n  function k(t) {\n    var o,\n      r = !1;\n    return function () {\n      for (var n = [], e = 0; e < arguments.length; e++) n[e] = arguments[e];\n      return r || (r = !0, o = t.apply(null, n)), o;\n    };\n  }\n  function T(n, e) {\n    return -1 < pn.call(n, e);\n  }\n  function C(n, e) {\n    for (var t = 0, o = n.length; t < o; t++) if (e(n[t], t)) return 1;\n  }\n  function Z(n, e) {\n    for (var t = n.length, o = new Array(t), r = 0; r < t; r++) {\n      var i = n[r];\n      o[r] = e(i, r);\n    }\n    return o;\n  }\n  function M(n, e) {\n    for (var t = 0, o = n.length; t < o; t++) e(n[t], t);\n  }\n  function E(n, e) {\n    for (var t = [], o = 0, r = n.length; o < r; o++) {\n      var i = n[o];\n      e(i, o) && t.push(i);\n    }\n    return t;\n  }\n  function _(n, o, r) {\n    return function (n) {\n      for (var e, t = n.length - 1; 0 <= t; t--) e = n[t], r = o(r, e, t);\n    }(n), r;\n  }\n  function R(n, t, o) {\n    return M(n, function (n, e) {\n      o = t(o, n, e);\n    }), o;\n  }\n  function F(n, e) {\n    return function (n, e, t) {\n      for (var o = 0, r = n.length; o < r; o++) {\n        var i = n[o];\n        if (e(i, o)) return mn.some(i);\n        if (t(i, o)) break;\n      }\n      return mn.none();\n    }(n, e, S);\n  }\n  function I(n, e) {\n    for (var t = 0, o = n.length; t < o; t++) if (e(n[t], t)) return mn.some(t);\n    return mn.none();\n  }\n  function V(n) {\n    for (var e = [], t = 0, o = n.length; t < o; ++t) {\n      if (!D(n[t])) throw new Error(\"Arr.flatten item \" + t + \" was not an array, input: \" + n);\n      hn.apply(e, n[t]);\n    }\n    return e;\n  }\n  function B(n, e) {\n    return V(Z(n, e));\n  }\n  function A(n, e) {\n    for (var t = 0, o = n.length; t < o; ++t) if (!0 !== e(n[t], t)) return !1;\n    return !0;\n  }\n  function N(n) {\n    var e = gn.call(n, 0);\n    return e.reverse(), e;\n  }\n  function H(n, e) {\n    return E(n, function (n) {\n      return !T(e, n);\n    });\n  }\n  function P(n) {\n    return [n];\n  }\n  function z(n, e) {\n    for (var t = 0; t < n.length; t++) {\n      var o = e(n[t], t);\n      if (o.isSome()) return o;\n    }\n    return mn.none();\n  }\n  function j(n, e) {\n    var t = String(e).toLowerCase();\n    return F(n, function (n) {\n      return n.search(t);\n    });\n  }\n  function L(n, e) {\n    return -1 !== n.indexOf(e);\n  }\n  function $(e) {\n    return function (n) {\n      return L(n, e);\n    };\n  }\n  function G(n) {\n    return window.matchMedia(n).matches;\n  }\n  function U(n) {\n    return w(\"alloy.\" + n);\n  }\n  function W(n, e) {\n    se(n, n.element, e, {});\n  }\n  function X(n, e, t) {\n    se(n, n.element, e, t);\n  }\n  function q(n) {\n    W(n, Zn());\n  }\n  function nn(n, e, t) {\n    se(n, e, t, {});\n  }\n  function en(n, e) {\n    var t = n.dom;\n    if (1 !== t.nodeType) return !1;\n    var o = t;\n    if (void 0 !== o.matches) return o.matches(e);\n    if (void 0 !== o.msMatchesSelector) return o.msMatchesSelector(e);\n    if (void 0 !== o.webkitMatchesSelector) return o.webkitMatchesSelector(e);\n    if (void 0 !== o.mozMatchesSelector) return o.mozMatchesSelector(e);\n    throw new Error(\"Browser lacks native selectors\");\n  }\n  function tn(n) {\n    return 1 !== n.nodeType && 9 !== n.nodeType && 11 !== n.nodeType || 0 === n.childElementCount;\n  }\n  function on(n, e) {\n    var t = void 0 === e ? document : e.dom;\n    return tn(t) ? [] : Z(t.querySelectorAll(n), fe.fromDom);\n  }\n  function rn(n, e) {\n    var t = void 0 === e ? document : e.dom;\n    return tn(t) ? mn.none() : mn.from(t.querySelector(n)).map(fe.fromDom);\n  }\n  function un(n, e) {\n    return n.dom === e.dom;\n  }\n  function cn() {\n    return vn(0, 0);\n  }\n  function an(n) {\n    function e(n) {\n      return function () {\n        return t === n;\n      };\n    }\n    var t = n.current,\n      o = n.version;\n    return {\n      current: t,\n      version: o,\n      isEdge: e(\"Edge\"),\n      isChrome: e(\"Chrome\"),\n      isIE: e(\"IE\"),\n      isOpera: e(\"Opera\"),\n      isFirefox: e(Sn),\n      isSafari: e(\"Safari\")\n    };\n  }\n  function sn(n) {\n    function e(n) {\n      return function () {\n        return t === n;\n      };\n    }\n    var t = n.current,\n      o = n.version;\n    return {\n      current: t,\n      version: o,\n      isWindows: e(Tn),\n      isiOS: e(\"iOS\"),\n      isAndroid: e(Cn),\n      isOSX: e(\"OSX\"),\n      isLinux: e(\"Linux\"),\n      isSolaris: e(En),\n      isFreeBSD: e(Dn),\n      isChromeOS: e(Mn)\n    };\n  }\n  function fn(n) {\n    if (null == n) throw new Error(\"Node cannot be null or undefined\");\n    return {\n      dom: n\n    };\n  }\n  var ln,\n    dn = function dn(t) {\n      function n() {\n        return r;\n      }\n      function e(n) {\n        return n(t);\n      }\n      var o = w(t),\n        r = {\n          fold: function fold(n, e) {\n            return e(t);\n          },\n          isSome: x,\n          isNone: S,\n          getOr: o,\n          getOrThunk: o,\n          getOrDie: o,\n          getOrNull: o,\n          getOrUndefined: o,\n          or: n,\n          orThunk: n,\n          map: function map(n) {\n            return dn(n(t));\n          },\n          each: function each(n) {\n            n(t);\n          },\n          bind: e,\n          exists: e,\n          forall: e,\n          filter: function filter(n) {\n            return n(t) ? r : b;\n          },\n          toArray: function toArray() {\n            return [t];\n          },\n          toString: function toString() {\n            return \"some(\" + t + \")\";\n          }\n        };\n      return r;\n    },\n    mn = {\n      some: dn,\n      none: v,\n      from: function from(n) {\n        return null == n ? b : dn(n);\n      }\n    },\n    gn = Array.prototype.slice,\n    pn = Array.prototype.indexOf,\n    hn = Array.prototype.push,\n    vn = function vn(n, e) {\n      return {\n        major: n,\n        minor: e\n      };\n    },\n    bn = {\n      nu: vn,\n      detect: function detect(n, e) {\n        var t,\n          o,\n          r = String(e).toLowerCase();\n        return 0 === n.length ? cn() : (o = function (n, e) {\n          for (var t = 0; t < n.length; t++) {\n            var o = n[t];\n            if (o.test(e)) return o;\n          }\n        }(n, t = r)) ? vn(i(1), i(2)) : {\n          major: 0,\n          minor: 0\n        };\n        function i(n) {\n          return Number(t.replace(o, \"$\" + n));\n        }\n      },\n      unknown: cn\n    },\n    yn = (ln = /^\\s+|\\s+$/g, function (n) {\n      return n.replace(ln, \"\");\n    }),\n    xn = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n    wn = {\n      browsers: w([{\n        name: \"Edge\",\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: function search(n) {\n          return L(n, \"edge/\") && L(n, \"chrome\") && L(n, \"safari\") && L(n, \"applewebkit\");\n        }\n      }, {\n        name: \"Chrome\",\n        brand: \"Chromium\",\n        versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/, xn],\n        search: function search(n) {\n          return L(n, \"chrome\") && !L(n, \"chromeframe\");\n        }\n      }, {\n        name: \"IE\",\n        versionRegexes: [/.*?msie\\ ?([0-9]+)\\.([0-9]+).*/, /.*?rv:([0-9]+)\\.([0-9]+).*/],\n        search: function search(n) {\n          return L(n, \"msie\") || L(n, \"trident\");\n        }\n      }, {\n        name: \"Opera\",\n        versionRegexes: [xn, /.*?opera\\/([0-9]+)\\.([0-9]+).*/],\n        search: $(\"opera\")\n      }, {\n        name: \"Firefox\",\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: $(\"firefox\")\n      }, {\n        name: \"Safari\",\n        versionRegexes: [xn, /.*?cpu os ([0-9]+)_([0-9]+).*/],\n        search: function search(n) {\n          return (L(n, \"safari\") || L(n, \"mobile/\")) && L(n, \"applewebkit\");\n        }\n      }]),\n      oses: w([{\n        name: \"Windows\",\n        search: $(\"win\"),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      }, {\n        name: \"iOS\",\n        search: function search(n) {\n          return L(n, \"iphone\") || L(n, \"ipad\");\n        },\n        versionRegexes: [/.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/, /.*cpu os ([0-9]+)_([0-9]+).*/, /.*cpu iphone os ([0-9]+)_([0-9]+).*/]\n      }, {\n        name: \"Android\",\n        search: $(\"android\"),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      }, {\n        name: \"OSX\",\n        search: $(\"mac os x\"),\n        versionRegexes: [/.*?mac\\ os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      }, {\n        name: \"Linux\",\n        search: $(\"linux\"),\n        versionRegexes: []\n      }, {\n        name: \"Solaris\",\n        search: $(\"sunos\"),\n        versionRegexes: []\n      }, {\n        name: \"FreeBSD\",\n        search: $(\"freebsd\"),\n        versionRegexes: []\n      }, {\n        name: \"ChromeOS\",\n        search: $(\"cros\"),\n        versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/]\n      }])\n    },\n    Sn = \"Firefox\",\n    On = function On() {\n      return an({\n        current: void 0,\n        version: bn.unknown()\n      });\n    },\n    kn = an,\n    Tn = (w(\"Edge\"), w(\"Chrome\"), w(\"IE\"), w(\"Opera\"), w(Sn), w(\"Safari\"), \"Windows\"),\n    Cn = \"Android\",\n    En = \"Solaris\",\n    Dn = \"FreeBSD\",\n    Mn = \"ChromeOS\",\n    _n = function _n() {\n      return sn({\n        current: void 0,\n        version: bn.unknown()\n      });\n    },\n    Rn = sn,\n    Fn = (w(Tn), w(\"iOS\"), w(Cn), w(\"Linux\"), w(\"OSX\"), w(En), w(Dn), w(Mn), k(function () {\n      return n = navigator.userAgent, e = mn.from(navigator.userAgentData), t = G, p = wn.browsers(), h = wn.oses(), v = e.bind(function (n) {\n        return o = p, z(n.brands, function (e) {\n          var t = e.brand.toLowerCase();\n          return F(o, function (n) {\n            var e;\n            return t === (null === (e = n.brand) || void 0 === e ? void 0 : e.toLowerCase());\n          }).map(function (n) {\n            return {\n              current: n.name,\n              version: bn.nu(parseInt(e.version, 10), 0)\n            };\n          });\n        });\n        var o;\n      }).orThunk(function () {\n        return j(p, t = n).map(function (n) {\n          var e = bn.detect(n.versionRegexes, t);\n          return {\n            current: n.name,\n            version: e\n          };\n        });\n        var t;\n      }).fold(On, kn), b = j(h, o = n).map(function (n) {\n        var e = bn.detect(n.versionRegexes, o);\n        return {\n          current: n.name,\n          version: e\n        };\n      }).fold(_n, Rn), {\n        browser: v,\n        os: b,\n        deviceType: (i = v, u = n, c = t, a = (r = b).isiOS() && !0 === /ipad/i.test(u), s = r.isiOS() && !a, l = (f = r.isiOS() || r.isAndroid()) || c(\"(pointer:coarse)\"), d = a || !s && f && c(\"(min-device-width:768px)\"), m = s || f && !d, g = i.isSafari() && r.isiOS() && !1 === /safari/i.test(u), {\n          isiPad: w(a),\n          isiPhone: w(s),\n          isTablet: w(d),\n          isPhone: w(m),\n          isTouch: w(l),\n          isAndroid: r.isAndroid,\n          isiOS: r.isiOS,\n          isWebView: w(g),\n          isDesktop: w(!m && !d && !g)\n        })\n      };\n      var n, e, t, o, r, i, u, c, a, s, f, l, d, m, g, p, h, v, b;\n    })),\n    In = w,\n    Vn = In(\"touchstart\"),\n    Bn = In(\"touchmove\"),\n    An = In(\"touchend\"),\n    Nn = In(\"mousedown\"),\n    Hn = In(\"mousemove\"),\n    Pn = In(\"mouseup\"),\n    zn = In(\"mouseover\"),\n    jn = In(\"keydown\"),\n    Ln = In(\"keyup\"),\n    $n = In(\"input\"),\n    Gn = In(\"change\"),\n    Un = In(\"click\"),\n    Wn = In(\"transitionend\"),\n    Xn = In(\"selectstart\"),\n    qn = {\n      tap: U(\"tap\")\n    },\n    Yn = U(\"focus\"),\n    Kn = U(\"blur.post\"),\n    Jn = U(\"paste.post\"),\n    Qn = U(\"receive\"),\n    Zn = U(\"execute\"),\n    ne = U(\"focus.item\"),\n    ee = qn.tap,\n    te = U(\"longpress\"),\n    oe = U(\"system.init\"),\n    re = U(\"system.attached\"),\n    ie = U(\"system.detached\"),\n    ue = U(\"focusmanager.shifted\"),\n    ce = U(\"highlight\"),\n    ae = U(\"dehighlight\"),\n    se = function se(n, e, t, o) {\n      var r = _y({\n        target: e\n      }, o);\n      n.getSystem().triggerEvent(t, e, r);\n    },\n    fe = {\n      fromHtml: function fromHtml(n, e) {\n        var t = (e || document).createElement(\"div\");\n        if (t.innerHTML = n, !t.hasChildNodes() || 1 < t.childNodes.length) throw console.error(\"HTML does not have a single root node\", n), new Error(\"HTML must have a single root node\");\n        return fn(t.childNodes[0]);\n      },\n      fromTag: function fromTag(n, e) {\n        var t = (e || document).createElement(n);\n        return fn(t);\n      },\n      fromText: function fromText(n, e) {\n        var t = (e || document).createTextNode(n);\n        return fn(t);\n      },\n      fromDom: fn,\n      fromPoint: function fromPoint(n, e, t) {\n        return mn.from(n.dom.elementFromPoint(e, t)).map(fn);\n      }\n    };\n  function le(n) {\n    return n.dom.nodeName.toLowerCase();\n  }\n  function de(e) {\n    return function (n) {\n      return n.dom.nodeType === e;\n    };\n  }\n  function me(n) {\n    return fe.fromDom(n.dom.ownerDocument);\n  }\n  function ge(n) {\n    return Ye(n) ? n : me(n);\n  }\n  function pe(n) {\n    return mn.from(n.dom.parentNode).map(fe.fromDom);\n  }\n  function he(n, e) {\n    var t = n.dom.childNodes;\n    return mn.from(t[e]).map(fe.fromDom);\n  }\n  function ve(e, t) {\n    pe(e).each(function (n) {\n      n.dom.insertBefore(t.dom, e.dom);\n    });\n  }\n  function be(n, e) {\n    mn.from(n.dom.nextSibling).map(fe.fromDom).fold(function () {\n      pe(n).each(function (n) {\n        Qe(n, e);\n      });\n    }, function (n) {\n      ve(n, e);\n    });\n  }\n  function ye(e, t) {\n    he(e, 0).fold(function () {\n      Qe(e, t);\n    }, function (n) {\n      e.dom.insertBefore(t.dom, n.dom);\n    });\n  }\n  function xe(e, n) {\n    M(n, function (n) {\n      Qe(e, n);\n    });\n  }\n  function we(n) {\n    n.dom.textContent = \"\", M(Je(n), function (n) {\n      Ze(n);\n    });\n  }\n  function Se(n) {\n    return Ke(n) && l(n.dom.host);\n  }\n  function Oe(n) {\n    return fe.fromDom(n.dom.host);\n  }\n  function ke() {\n    return it(fe.fromDom(document));\n  }\n  function Te(n, e) {\n    Qe(n.element, e.element);\n  }\n  function Ce(e) {\n    var n,\n      t = pe(e.element).bind(function (n) {\n        return e.getSystem().getByDom(n).toOptional();\n      });\n    ut(n = e), Ze(n.element), n.getSystem().removeFromWorld(n), t.each(function (n) {\n      n.syncComponents();\n    });\n  }\n  function Ee(n, e) {\n    for (var t = st(n), o = 0, r = t.length; o < r; o++) {\n      var i = t[o];\n      e(n[i], i);\n    }\n  }\n  function De(n, t) {\n    return lt(n, function (n, e) {\n      return {\n        k: e,\n        v: t(n, e)\n      };\n    });\n  }\n  function Me(n, t) {\n    var o = [];\n    return Ee(n, function (n, e) {\n      o.push(t(n, e));\n    }), o;\n  }\n  function _e(n, e) {\n    return dt(n, e) ? mn.from(n[e]) : mn.none();\n  }\n  function Re(n, e) {\n    return dt(n, e) && void 0 !== n[e] && null !== n[e];\n  }\n  function Fe(n, e, t) {\n    if (!(r(t) || d(t) || g(t))) throw console.error(\"Invalid call to Attribute.set. Key \", e, \":: Value \", t, \":: Element \", n), new Error(\"Attribute value was not simple\");\n    n.setAttribute(e, t + \"\");\n  }\n  function Ie(n, e, t) {\n    Fe(n.dom, e, t);\n  }\n  function Ve(n, e) {\n    var t = n.dom;\n    Ee(e, function (n, e) {\n      Fe(t, e, n);\n    });\n  }\n  function Be(n, e) {\n    var t = n.dom.getAttribute(e);\n    return null === t ? void 0 : t;\n  }\n  function Ae(n, e) {\n    return mn.from(Be(n, e));\n  }\n  function Ne(n, e) {\n    var t = n.dom;\n    return !(!t || !t.hasAttribute) && t.hasAttribute(e);\n  }\n  function He(n, e) {\n    n.dom.removeAttribute(e);\n  }\n  function Pe(n, e) {\n    var t = Be(n, e);\n    return void 0 === t || \"\" === t ? [] : t.split(\" \");\n  }\n  function ze(n) {\n    return void 0 !== n.dom.classList;\n  }\n  function je(n, e) {\n    var t, o, r;\n    ze(n) ? n.dom.classList.add(e) : (o = e, r = Pe(t = n, \"class\").concat([o]), Ie(t, \"class\", r.join(\" \")));\n  }\n  function Le(n, e) {\n    var t, o, r, i;\n    ze(n) ? n.dom.classList.remove(e) : (r = e, 0 < (i = E(Pe(o = n, \"class\"), function (n) {\n      return n !== r;\n    })).length ? Ie(o, \"class\", i.join(\" \")) : He(o, \"class\")), 0 === (ze(t = n) ? t.dom.classList : Pe(t, \"class\")).length && He(t, \"class\");\n  }\n  function $e(n, e) {\n    return ze(n) && n.dom.classList.contains(e);\n  }\n  function Ge(n, e, t) {\n    Le(n, t), je(n, e);\n  }\n  \"undefined\" != typeof window || Function(\"return this;\")();\n  var Ue,\n    We,\n    Xe = de(1),\n    qe = de(3),\n    Ye = de(9),\n    Ke = de(11),\n    Je = function Je(n) {\n      return Z(n.dom.childNodes, fe.fromDom);\n    },\n    Qe = function Qe(n, e) {\n      n.dom.appendChild(e.dom);\n    },\n    Ze = function Ze(n) {\n      var e = n.dom;\n      null !== e.parentNode && e.parentNode.removeChild(e);\n    },\n    nt = m(Element.prototype.attachShadow) && m(Node.prototype.getRootNode),\n    et = w(nt),\n    tt = nt ? function (n) {\n      return fe.fromDom(n.dom.getRootNode());\n    } : ge,\n    ot = function ot(n) {\n      return l(n.dom.shadowRoot);\n    },\n    rt = function rt(n) {\n      var e = qe(n) ? n.dom.parentNode : n.dom;\n      if (null == e || null === e.ownerDocument) return !1;\n      var t,\n        o,\n        r = e.ownerDocument,\n        i = fe.fromDom(e),\n        u = tt(i);\n      return (Se(u) ? mn.some(u) : mn.none()).fold(function () {\n        return r.body.contains(e);\n      }, (t = rt, o = Oe, function (n) {\n        return t(o(n));\n      }));\n    },\n    it = function it(n) {\n      var e = n.dom.body;\n      if (null == e) throw new Error(\"Body is not available yet\");\n      return fe.fromDom(e);\n    },\n    ut = function ut(n) {\n      W(n, ie()), M(n.components(), ut);\n    },\n    ct = function ct(n) {\n      M(n.components(), ct), W(n, re());\n    },\n    at = function at(n, e, t) {\n      n.getSystem().addToWorld(e), t(n.element, e.element), rt(n.element) && ct(e), n.syncComponents();\n    },\n    st = Object.keys,\n    ft = Object.hasOwnProperty,\n    lt = function lt(n, o) {\n      var r = {};\n      return Ee(n, function (n, e) {\n        var t = o(n, e);\n        r[t.k] = t.v;\n      }), r;\n    },\n    dt = function dt(n, e) {\n      return ft.call(n, e);\n    },\n    mt = Object.freeze({\n      __proto__: null,\n      toAlpha: function toAlpha(n, e, t) {\n        Ge(n.element, e.alpha, e.omega);\n      },\n      toOmega: function toOmega(n, e, t) {\n        Ge(n.element, e.omega, e.alpha);\n      },\n      isAlpha: function isAlpha(n, e, t) {\n        return $e(n.element, e.alpha);\n      },\n      isOmega: function isOmega(n, e, t) {\n        return $e(n.element, e.omega);\n      },\n      clear: function clear(n, e, t) {\n        Le(n.element, e.alpha), Le(n.element, e.omega);\n      }\n    }),\n    gt = function gt(t) {\n      return {\n        isValue: x,\n        isError: S,\n        getOr: w(t),\n        getOrThunk: w(t),\n        getOrDie: w(t),\n        or: function or(n) {\n          return gt(t);\n        },\n        orThunk: function orThunk(n) {\n          return gt(t);\n        },\n        fold: function fold(n, e) {\n          return e(t);\n        },\n        map: function map(n) {\n          return gt(n(t));\n        },\n        mapError: function mapError(n) {\n          return gt(t);\n        },\n        each: function each(n) {\n          n(t);\n        },\n        bind: function bind(n) {\n          return n(t);\n        },\n        exists: function exists(n) {\n          return n(t);\n        },\n        forall: function forall(n) {\n          return n(t);\n        },\n        toOptional: function toOptional() {\n          return mn.some(t);\n        }\n      };\n    },\n    pt = function pt(t) {\n      return {\n        isValue: S,\n        isError: x,\n        getOr: K,\n        getOrThunk: function getOrThunk(n) {\n          return n();\n        },\n        getOrDie: function getOrDie() {\n          return h(String(t))();\n        },\n        or: K,\n        orThunk: function orThunk(n) {\n          return n();\n        },\n        fold: function fold(n, e) {\n          return n(t);\n        },\n        map: function map(n) {\n          return pt(t);\n        },\n        mapError: function mapError(n) {\n          return pt(n(t));\n        },\n        each: Y,\n        bind: function bind(n) {\n          return pt(t);\n        },\n        exists: S,\n        forall: x,\n        toOptional: mn.none\n      };\n    },\n    ht = {\n      value: gt,\n      error: pt,\n      fromOption: function fromOption(n, e) {\n        return n.fold(function () {\n          return pt(e);\n        }, gt);\n      }\n    };\n  function vt(n, e, t) {\n    return n.stype === Ue.Error ? e(n.serror) : t(n.svalue);\n  }\n  function bt(n) {\n    return {\n      stype: Ue.Value,\n      svalue: n\n    };\n  }\n  function yt(n) {\n    return {\n      stype: Ue.Error,\n      serror: n\n    };\n  }\n  function xt(n, e, t, o) {\n    return {\n      tag: \"field\",\n      key: n,\n      newKey: e,\n      presence: t,\n      prop: o\n    };\n  }\n  function wt(n, e, t) {\n    switch (n.tag) {\n      case \"field\":\n        return e(n.key, n.newKey, n.presence, n.prop);\n      case \"custom\":\n        return t(n.newKey, n.instantiator);\n    }\n  }\n  function St(u) {\n    return function () {\n      for (var n = [], e = 0; e < arguments.length; e++) n[e] = arguments[e];\n      if (0 === n.length) throw new Error(\"Can't merge zero objects\");\n      for (var t = {}, o = 0; o < n.length; o++) {\n        var r,\n          i = n[o];\n        for (r in i) dt(i, r) && (t[r] = u(t[r], i[r]));\n      }\n      return t;\n    };\n  }\n  function Ot() {\n    return {\n      tag: \"required\",\n      process: {}\n    };\n  }\n  function kt(n) {\n    return {\n      tag: \"defaultedThunk\",\n      process: n\n    };\n  }\n  function Tt(n) {\n    return kt(w(n));\n  }\n  function Ct() {\n    return {\n      tag: \"option\",\n      process: {}\n    };\n  }\n  function Et(n) {\n    return {\n      tag: \"mergeWithThunk\",\n      process: n\n    };\n  }\n  function Dt(n) {\n    return a(n) && 100 < st(n).length ? \" removed due to size\" : JSON.stringify(n, null, 2);\n  }\n  function Mt(n, e) {\n    return eo([{\n      path: n,\n      getErrorInfo: e\n    }]);\n  }\n  function _t(t) {\n    return {\n      extract: function extract(e, n) {\n        return oo(t(n), function (n) {\n          return Mt(e, w(n));\n        });\n      },\n      toString: w(\"val\")\n    };\n  }\n  function Rt(n, e, t, o) {\n    return o(_e(n, e).getOrThunk(function () {\n      return t(n);\n    }));\n  }\n  function Ft(e, t, o, r, i) {\n    function u(n) {\n      return i.extract(t.concat([r]), n);\n    }\n    function n(n) {\n      return n.fold(function () {\n        return no(mn.none());\n      }, function (n) {\n        var e = i.extract(t.concat([r]), n);\n        return ro(e, mn.some);\n      });\n    }\n    var c, a, s, f, l, d;\n    switch (e.tag) {\n      case \"required\":\n        return s = t, d = u, _e(f = o, l = r).fold(function () {\n          return n = l, e = f, Mt(s, function () {\n            return 'Could not find valid *required* value for \"' + n + '\" in ' + Dt(e);\n          });\n          var n, e;\n        }, d);\n      case \"defaultedThunk\":\n        return Rt(o, r, e.process, u);\n      case \"option\":\n        return n(_e(o, r));\n      case \"defaultedOptionThunk\":\n        return a = e.process, n(_e(c = o, r).map(function (n) {\n          return !0 === n ? a(c) : n;\n        }));\n      case \"mergeWithThunk\":\n        return Rt(o, r, w({}), function (n) {\n          return u(co(e.process(o), n));\n        });\n    }\n  }\n  function It(n) {\n    var s = lo(n),\n      f = _(n, function (t, n) {\n        return wt(n, function (n) {\n          var e;\n          return co(t, ((e = {})[n] = !0, e));\n        }, w(t));\n      }, {});\n    return {\n      extract: function extract(n, e) {\n        var t,\n          o,\n          r,\n          i,\n          u,\n          c,\n          a = E(d(e) ? [] : st((r = l, i = o = {}, u = function u(n, e) {\n            i[e] = n;\n          }, c = Y, Ee(e, function (n, e) {\n            (r(n, e) ? u : c)(n, e);\n          }), o)), function (n) {\n            return !Re(f, n);\n          });\n        return 0 === a.length ? s.extract(n, e) : (t = a, Mt(n, function () {\n          return \"There are unsupported fields: [\" + t.join(\", \") + \"] specified\";\n        }));\n      },\n      toString: s.toString\n    };\n  }\n  function Vt(c, a) {\n    return {\n      extract: function extract(t, o) {\n        var r,\n          n,\n          i,\n          e = st(o),\n          u = (i = _t(c), r = t, n = Z(e, function (n, e) {\n            return i.extract(r.concat([\"[\" + e + \"]\"]), n);\n          }), so(n));\n        return to(u, function (n) {\n          var e = Z(n, function (n) {\n            return xt(n, n, Ot(), a);\n          });\n          return lo(e).extract(t, o);\n        });\n      },\n      toString: function toString() {\n        return \"setOf(\" + a.toString() + \")\";\n      }\n    };\n  }\n  function Bt(e, c) {\n    return {\n      extract: function extract(i, u) {\n        return _e(u, e).fold(function () {\n          return n = e, Mt(i, function () {\n            return 'Choice schema did not contain choice key: \"' + n + '\"';\n          });\n          var n;\n        }, function (n) {\n          return t = i, e = u, _e(o = c, r = n).fold(function () {\n            return n = o, e = r, Mt(t, function () {\n              return 'The chosen schema: \"' + e + '\" did not exist in branches: ' + Dt(n);\n            });\n            var n, e;\n          }, function (n) {\n            return n.extract(t.concat([\"branch: \" + r]), e);\n          });\n          var t, e, o, r;\n        });\n      },\n      toString: function toString() {\n        return \"chooseOn(\" + e + \"). Possible values: \" + st(c);\n      }\n    };\n  }\n  function At(e) {\n    return _t(function (n) {\n      return e(n).fold(eo, no);\n    });\n  }\n  function Nt(e, n) {\n    return Vt(function (n) {\n      return e(n).fold(yt, bt);\n    }, n);\n  }\n  function Ht(n, e, t) {\n    return Zt((r = e.extract([n], o = t), io(r, function (n) {\n      return {\n        input: o,\n        errors: n\n      };\n    })));\n    var o, r;\n  }\n  function Pt(n) {\n    return n.fold(function (n) {\n      throw new Error(po(n));\n    }, K);\n  }\n  function zt(n, e, t) {\n    return Pt(Ht(n, e, t));\n  }\n  function jt(n, e) {\n    return Bt(n, De(e, lo));\n  }\n  function Lt(n) {\n    return ho(n, n, Ot(), mo());\n  }\n  function $t(n, e) {\n    return ho(n, n, Ot(), e);\n  }\n  function Gt(n, e) {\n    return ho(n, n, Ot(), lo(e));\n  }\n  function Ut(n) {\n    return ho(n, n, Ct(), mo());\n  }\n  function Wt(n, e) {\n    return ho(n, n, Ct(), e);\n  }\n  function Xt(n, e) {\n    return Wt(n, lo(e));\n  }\n  function qt(n, e) {\n    return Wt(n, It(e));\n  }\n  function Yt(n, e) {\n    return ho(n, n, Tt(e), mo());\n  }\n  function Kt(n, e, t) {\n    return ho(n, n, Tt(e), t);\n  }\n  (We = Ue = {})[We.Error = 0] = \"Error\", We[We.Value = 1] = \"Value\";\n  function Jt(u) {\n    if (!D(u)) throw new Error(\"cases must be an array\");\n    if (0 === u.length) throw new Error(\"there must be at least one case\");\n    var c = [],\n      t = {};\n    return M(u, function (n, o) {\n      var e = st(n);\n      if (1 !== e.length) throw new Error(\"one and only one name per case\");\n      var r = e[0],\n        i = n[r];\n      if (void 0 !== t[r]) throw new Error(\"duplicate key detected:\" + r);\n      if (\"cata\" === r) throw new Error(\"cannot have a case named cata (sorry)\");\n      if (!D(i)) throw new Error(\"case arguments must be an array\");\n      c.push(r), t[r] = function () {\n        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];\n        var e = t.length;\n        if (e !== i.length) throw new Error(\"Wrong number of arguments to case \" + r + \". Expected \" + i.length + \" (\" + i + \"), got \" + e);\n        return {\n          fold: function fold() {\n            for (var n = [], e = 0; e < arguments.length; e++) n[e] = arguments[e];\n            if (n.length !== u.length) throw new Error(\"Wrong number of arguments to fold. Expected \" + u.length + \", got \" + n.length);\n            return n[o].apply(null, t);\n          },\n          match: function match(n) {\n            var e = st(n);\n            if (c.length !== e.length) throw new Error(\"Wrong number of arguments to match. Expected: \" + c.join(\",\") + \"\\nActual: \" + e.join(\",\"));\n            if (!A(c, function (n) {\n              return T(e, n);\n            })) throw new Error(\"Not all branches were specified when using match. Specified: \" + e.join(\", \") + \"\\nRequired: \" + c.join(\", \"));\n            return n[r].apply(null, t);\n          },\n          log: function log(n) {\n            console.log(n, {\n              constructors: c,\n              constructor: r,\n              params: t\n            });\n          }\n        };\n      };\n    }), t;\n  }\n  var Qt,\n    Zt = function Zt(n) {\n      return vt(n, ht.error, ht.value);\n    },\n    no = bt,\n    eo = yt,\n    to = function to(n, e) {\n      return n.stype === Ue.Value ? e(n.svalue) : n;\n    },\n    oo = function oo(n, e) {\n      return n.stype === Ue.Error ? e(n.serror) : n;\n    },\n    ro = function ro(n, e) {\n      return n.stype === Ue.Value ? {\n        stype: Ue.Value,\n        svalue: e(n.svalue)\n      } : n;\n    },\n    io = function io(n, e) {\n      return n.stype === Ue.Error ? {\n        stype: Ue.Error,\n        serror: e(n.serror)\n      } : n;\n    },\n    uo = vt,\n    co = St(function (n, e) {\n      return a(n) && a(e) ? co(n, e) : e;\n    }),\n    ao = St(function (n, e) {\n      return e;\n    }),\n    so = function so(n) {\n      var e,\n        t,\n        o = (e = [], t = [], M(n, function (n) {\n          vt(n, function (n) {\n            return t.push(n);\n          }, function (n) {\n            return e.push(n);\n          });\n        }), {\n          values: e,\n          errors: t\n        });\n      return 0 < o.errors.length ? i(eo, V)(o.errors) : no(o.values);\n    },\n    fo = _t(no),\n    lo = function lo(t) {\n      return {\n        extract: function extract(i, u) {\n          for (var c = {}, a = [], n = 0, e = t; n < e.length; n++) wt(e[n], function (n, e, t, o) {\n            var r = Ft(t, i, u, n, o);\n            uo(r, function (n) {\n              a.push.apply(a, n);\n            }, function (n) {\n              c[e] = n;\n            });\n          }, function (n, e) {\n            c[n] = e(u);\n          });\n          return 0 < a.length ? eo(a) : no(c);\n        },\n        toString: function toString() {\n          return \"obj{\\n\" + Z(t, function (n) {\n            return wt(n, function (n, e, t, o) {\n              return n + \" -> \" + o.toString();\n            }, function (n, e) {\n              return \"state(\" + n + \")\";\n            });\n          }).join(\"\\n\") + \"}\";\n        }\n      };\n    },\n    mo = w(fo),\n    go = (Qt = m, _t(function (n) {\n      var e = _typeof(n);\n      return Qt(n) ? no(n) : eo(\"Expected type: function but got: \" + e);\n    })),\n    po = function po(n) {\n      return \"Errors: \\n\" + Z(10 < (e = n.errors).length ? e.slice(0, 10).concat([{\n        path: [],\n        getErrorInfo: w(\"... (only showing first ten failures)\")\n      }]) : e, function (n) {\n        return \"Failed path: (\" + n.path.join(\" > \") + \")\\n\" + n.getErrorInfo();\n      }).join(\"\\n\") + \"\\n\\nInput object: \" + Dt(n.input);\n      var e;\n    },\n    ho = xt,\n    vo = function vo(n, e) {\n      return {\n        tag: \"custom\",\n        newKey: n,\n        instantiator: e\n      };\n    },\n    bo = [Lt(\"alpha\"), Lt(\"omega\")];\n  function yo(n, e) {\n    return (t = {})[n] = e, t;\n    var t;\n  }\n  function xo(n) {\n    return e = {}, M(n, function (n) {\n      e[n.key] = n.value;\n    }), e;\n    var e;\n  }\n  function wo(n, e, t) {\n    return void 0 === t && (t = o), n.exists(function (n) {\n      return t(n, e);\n    });\n  }\n  function So(n) {\n    for (var e = [], t = function t(n) {\n        e.push(n);\n      }, o = 0; o < n.length; o++) n[o].each(t);\n    return e;\n  }\n  function Oo(n) {\n    return m(n) ? n : S;\n  }\n  function ko(n, e) {\n    return un(n.element, e.event.target);\n  }\n  function To(n) {\n    if (!Re(n, \"can\") && !Re(n, \"abort\") && !Re(n, \"run\")) throw new Error(\"EventHandler defined by: \" + JSON.stringify(n, null, 2) + \" does not have can, abort, or run!\");\n    return _y(_y({}, Xo), n);\n  }\n  function Co(n, e) {\n    return {\n      key: n,\n      value: To({\n        abort: e\n      })\n    };\n  }\n  function Eo(n, e) {\n    return {\n      key: n,\n      value: To({\n        run: e\n      })\n    };\n  }\n  function Do(n, t, o) {\n    return {\n      key: n,\n      value: To({\n        run: function run(n, e) {\n          t.apply(void 0, [n, e].concat(o));\n        }\n      })\n    };\n  }\n  function Mo(n) {\n    return function (t) {\n      return {\n        key: n,\n        value: To({\n          run: function run(n, e) {\n            ko(n, e) && t(n, e);\n          }\n        })\n      };\n    };\n  }\n  function _o(n, e, t) {\n    var i,\n      o,\n      r = e.partUids[t];\n    return o = r, Eo(i = n, function (n, r) {\n      n.getSystem().getByUid(o).each(function (n) {\n        var e = n.element,\n          t = i,\n          o = r;\n        n.getSystem().triggerEvent(t, e, o.event);\n      });\n    });\n  }\n  function Ro(n) {\n    return Eo(n, function (n, e) {\n      e.cut();\n    });\n  }\n  function Fo(n, e) {\n    var t = n.toString(),\n      o = t.indexOf(\")\") + 1,\n      r = t.indexOf(\"(\"),\n      i = t.substring(r + 1, o - 1).split(/,\\s*/);\n    return n.toFunctionAnnotation = function () {\n      return {\n        name: e,\n        parameters: Zo(i)\n      };\n    }, n;\n  }\n  function Io(n) {\n    return {\n      classes: f(n.classes) ? [] : n.classes,\n      attributes: f(n.attributes) ? {} : n.attributes,\n      styles: f(n.styles) ? {} : n.styles\n    };\n  }\n  function Vo(t, o, r) {\n    return Jo(function (n, e) {\n      r(n, t, o);\n    });\n  }\n  function Bo(n) {\n    return {\n      key: n,\n      value: void 0\n    };\n  }\n  function Ao(n) {\n    var e = zt(\"Creating behaviour: \" + n.name, rr, n),\n      t = e.fields,\n      o = e.name,\n      r = e.active,\n      i = e.apis,\n      u = e.extra,\n      c = e.state,\n      a = It(t),\n      s = Xt(o, [qt(\"config\", t)]);\n    return nr(a, s, o, r, i, u, c);\n  }\n  function No(n) {\n    var e = n;\n    return {\n      get: function get() {\n        return e;\n      },\n      set: function set(n) {\n        e = n;\n      }\n    };\n  }\n  function Ho(n) {\n    return n.dom.focus();\n  }\n  function Po(n) {\n    return n.dom.blur();\n  }\n  function zo(n) {\n    return void 0 === n && (n = fe.fromDom(document)), mn.from(n.dom.activeElement).map(fe.fromDom);\n  }\n  function jo(e) {\n    return zo(tt(e)).filter(function (n) {\n      return e.dom.contains(n.dom);\n    });\n  }\n  function Lo(n) {\n    return n.dom.innerHTML;\n  }\n  function $o(n) {\n    if (Se(n)) return \"#shadow-root\";\n    var e = fe.fromDom(n.dom.cloneNode(!1)),\n      t = fe.fromTag(\"div\"),\n      o = fe.fromDom(e.dom.cloneNode(!0));\n    return Qe(t, o), Lo(t);\n  }\n  Jt([{\n    bothErrors: [\"error1\", \"error2\"]\n  }, {\n    firstError: [\"error1\", \"value2\"]\n  }, {\n    secondError: [\"value1\", \"error2\"]\n  }, {\n    bothValues: [\"value1\", \"value2\"]\n  }]);\n  var Go,\n    Uo,\n    Wo,\n    Xo = {\n      can: x,\n      abort: S,\n      run: Y\n    },\n    qo = xo,\n    Yo = Mo(re()),\n    Ko = Mo(ie()),\n    Jo = Mo(oe()),\n    Qo = (Go = Zn(), function (n) {\n      return Eo(Go, n);\n    }),\n    Zo = function Zo(n) {\n      return Z(n, function (n) {\n        return 0, e = n.length - \"/*\".length, n.length >= \"/*\".length && \"/*\" === n.substr(e, e + \"/*\".length) ? n.substring(0, n.length - \"/*\".length) : n;\n        var e;\n      });\n    },\n    nr = function nr(t, n, l, i, e, o, r) {\n      function u(n) {\n        return Re(n, l) ? n[l]() : mn.none();\n      }\n      var c = De(e, function (n, e) {\n          return r = l, t = function t(_t2) {\n            for (var n = [], e = 1; e < arguments.length; e++) n[e - 1] = arguments[e];\n            var o = [_t2].concat(n);\n            return _t2.config({\n              name: w(r)\n            }).fold(function () {\n              throw new Error(\"We could not find any behaviour configuration for: \" + r + \". Using API: \" + u);\n            }, function (n) {\n              var e = Array.prototype.slice.call(o, 1);\n              return i.apply(void 0, [_t2, n.config, n.state].concat(e));\n            });\n          }, o = u = e, c = (i = n).toString(), a = c.indexOf(\")\") + 1, s = c.indexOf(\"(\"), f = c.substring(s + 1, a - 1).split(/,\\s*/), t.toFunctionAnnotation = function () {\n            return {\n              name: o,\n              parameters: Zo(f.slice(0, 1).concat(f.slice(3)))\n            };\n          }, t;\n          var r, i, u, t, o, c, a, s, f;\n        }),\n        a = De(o, Fo),\n        s = _y(_y(_y({}, a), c), {\n          revoke: J(Bo, l),\n          config: function config(n) {\n            var e = zt(l + \"-config\", t, n);\n            return {\n              key: l,\n              value: {\n                config: e,\n                me: s,\n                configAsRaw: k(function () {\n                  return zt(l + \"-config\", t, n);\n                }),\n                initialConfig: n,\n                state: r\n              }\n            };\n          },\n          schema: w(n),\n          exhibit: function exhibit(n, t) {\n            return e = u(n), o = _e(i, \"exhibit\"), r = function r(n, e) {\n              return e(t, n.config, n.state);\n            }, (e.isSome() && o.isSome() ? mn.some(r(e.getOrDie(), o.getOrDie())) : mn.none()).getOrThunk(function () {\n              return Io({});\n            });\n            var e, o, r;\n          },\n          name: w(l),\n          handlers: function handlers(n) {\n            return u(n).map(function (n) {\n              return _e(i, \"events\").getOr(function () {\n                return {};\n              })(n.config, n.state);\n            }).getOr({});\n          }\n        });\n      return s;\n    },\n    er = {\n      init: function init() {\n        return tr({\n          readState: w(\"No State required\")\n        });\n      }\n    },\n    tr = function tr(n) {\n      return n;\n    },\n    or = xo,\n    rr = It([Lt(\"fields\"), Lt(\"name\"), Yt(\"active\", {}), Yt(\"apis\", {}), Yt(\"state\", er), Yt(\"extra\", {})]),\n    ir = It([Lt(\"branchKey\"), Lt(\"branches\"), Lt(\"name\"), Yt(\"active\", {}), Yt(\"apis\", {}), Yt(\"state\", er), Yt(\"extra\", {})]),\n    ur = w(void 0),\n    cr = Ao({\n      fields: bo,\n      name: \"swapping\",\n      apis: mt\n    }),\n    ar = tinymce.util.Tools.resolve(\"tinymce.dom.DOMUtils\"),\n    sr = tinymce.util.Tools.resolve(\"tinymce.ThemeManager\"),\n    fr = [{\n      title: \"Headings\",\n      items: [{\n        title: \"Heading 1\",\n        format: \"h1\"\n      }, {\n        title: \"Heading 2\",\n        format: \"h2\"\n      }, {\n        title: \"Heading 3\",\n        format: \"h3\"\n      }, {\n        title: \"Heading 4\",\n        format: \"h4\"\n      }, {\n        title: \"Heading 5\",\n        format: \"h5\"\n      }, {\n        title: \"Heading 6\",\n        format: \"h6\"\n      }]\n    }, {\n      title: \"Inline\",\n      items: [{\n        title: \"Bold\",\n        icon: \"bold\",\n        format: \"bold\"\n      }, {\n        title: \"Italic\",\n        icon: \"italic\",\n        format: \"italic\"\n      }, {\n        title: \"Underline\",\n        icon: \"underline\",\n        format: \"underline\"\n      }, {\n        title: \"Strikethrough\",\n        icon: \"strikethrough\",\n        format: \"strikethrough\"\n      }, {\n        title: \"Superscript\",\n        icon: \"superscript\",\n        format: \"superscript\"\n      }, {\n        title: \"Subscript\",\n        icon: \"subscript\",\n        format: \"subscript\"\n      }, {\n        title: \"Code\",\n        icon: \"code\",\n        format: \"code\"\n      }]\n    }, {\n      title: \"Blocks\",\n      items: [{\n        title: \"Paragraph\",\n        format: \"p\"\n      }, {\n        title: \"Blockquote\",\n        format: \"blockquote\"\n      }, {\n        title: \"Div\",\n        format: \"div\"\n      }, {\n        title: \"Pre\",\n        format: \"pre\"\n      }]\n    }, {\n      title: \"Alignment\",\n      items: [{\n        title: \"Left\",\n        icon: \"alignleft\",\n        format: \"alignleft\"\n      }, {\n        title: \"Center\",\n        icon: \"aligncenter\",\n        format: \"aligncenter\"\n      }, {\n        title: \"Right\",\n        icon: \"alignright\",\n        format: \"alignright\"\n      }, {\n        title: \"Justify\",\n        icon: \"alignjustify\",\n        format: \"alignjustify\"\n      }]\n    }],\n    lr = [\"undo\", \"bold\", \"italic\", \"link\", \"image\", \"bullist\", \"styleselect\"],\n    dr = \"formatChanged\",\n    mr = \"orientationChanged\",\n    gr = \"dropupDismissed\",\n    pr = Object.freeze({\n      __proto__: null,\n      events: function events(o) {\n        return qo([Eo(Qn(), function (r, n) {\n          var e,\n            i = o.channels,\n            t = st(i),\n            u = n;\n          M((e = u).universal ? t : E(t, function (n) {\n            return T(e.channels, n);\n          }), function (n) {\n            var e = i[n],\n              t = e.schema,\n              o = zt(\"channel[\" + n + \"] data\\nReceiver: \" + $o(r.element), t, u.data);\n            e.onReceive(r, o);\n          });\n        })]);\n      }\n    }),\n    hr = \"unknown\";\n  function vr(e, n, t) {\n    var o, r, i, u;\n    switch (_e(br.get(), e).orThunk(function () {\n      return z(st(br.get()), function (n) {\n        return -1 < e.indexOf(n) ? mn.some(br.get()[n]) : mn.none();\n      });\n    }).getOr(Uo.NORMAL)) {\n      case Uo.NORMAL:\n        return t(xr());\n      case Uo.LOGGING:\n        var c = (o = e, r = n, i = [], u = new Date().getTime(), {\n            logEventCut: function logEventCut(n, e, t) {\n              i.push({\n                outcome: \"cut\",\n                target: e,\n                purpose: t\n              });\n            },\n            logEventStopped: function logEventStopped(n, e, t) {\n              i.push({\n                outcome: \"stopped\",\n                target: e,\n                purpose: t\n              });\n            },\n            logNoParent: function logNoParent(n, e, t) {\n              i.push({\n                outcome: \"no-parent\",\n                target: e,\n                purpose: t\n              });\n            },\n            logEventNoHandlers: function logEventNoHandlers(n, e) {\n              i.push({\n                outcome: \"no-handlers-left\",\n                target: e\n              });\n            },\n            logEventResponse: function logEventResponse(n, e, t) {\n              i.push({\n                outcome: \"response\",\n                purpose: t,\n                target: e\n              });\n            },\n            write: function write() {\n              var n = new Date().getTime();\n              T([\"mousemove\", \"mouseover\", \"mouseout\", oe()], o) || console.log(o, {\n                event: o,\n                time: n - u,\n                target: r.dom,\n                sequence: Z(i, function (n) {\n                  return T([\"cut\", \"stopped\", \"response\"], n.outcome) ? \"{\" + n.purpose + \"} \" + n.outcome + \" at (\" + $o(n.target) + \")\" : n.outcome;\n                })\n              });\n            }\n          }),\n          a = t(c);\n        return c.write(), a;\n      case Uo.STOP:\n        return !0;\n    }\n  }\n  (Wo = Uo = {})[Wo.STOP = 0] = \"STOP\", Wo[Wo.NORMAL = 1] = \"NORMAL\", Wo[Wo.LOGGING = 2] = \"LOGGING\";\n  var br = No({}),\n    yr = [\"alloy/data/Fields\", \"alloy/debugging/Debugging\"],\n    xr = w({\n      logEventCut: Y,\n      logEventStopped: Y,\n      logNoParent: Y,\n      logEventNoHandlers: Y,\n      logEventResponse: Y,\n      write: Y\n    }),\n    wr = w([Lt(\"menu\"), Lt(\"selectedMenu\")]),\n    Sr = w([Lt(\"item\"), Lt(\"selectedItem\")]);\n  function Or(n, e, t) {\n    return void 0 !== (o = new Error()).stack && F(o.stack.split(\"\\n\"), function (e) {\n      return 0 < e.indexOf(\"alloy\") && !C(yr, function (n) {\n        return -1 < e.indexOf(n);\n      });\n    }).getOr(hr), ho(e, e, t, At(function (t) {\n      return ht.value(function () {\n        for (var n = [], e = 0; e < arguments.length; e++) n[e] = arguments[e];\n        return t.apply(void 0, n);\n      });\n    }));\n    var o;\n  }\n  function kr(n) {\n    return Or(0, n, Tt(Y));\n  }\n  function Tr(n) {\n    return Or(0, n, Tt(mn.none));\n  }\n  function Cr(n) {\n    return Or(0, n, Ot());\n  }\n  function Er(n) {\n    return Or(0, n, Ot());\n  }\n  function Dr(n, e) {\n    return vo(n, w(e));\n  }\n  function Mr(n) {\n    return vo(n, K);\n  }\n  function _r(n, e, t) {\n    var o = e.aria;\n    o.update(n, o, t.get());\n  }\n  function Rr(e, n, t) {\n    n.toggleClass.each(function (n) {\n      (t.get() ? je : Le)(e.element, n);\n    });\n  }\n  function Fr(n, e, t) {\n    Qr(n, e, t, !t.get());\n  }\n  function Ir(n, e, t) {\n    t.set(!0), Rr(n, e, t), _r(n, e, t);\n  }\n  function Vr(n, e, t) {\n    t.set(!1), Rr(n, e, t), _r(n, e, t);\n  }\n  function Br(n, e, t) {\n    Qr(n, e, t, e.selected);\n  }\n  function Ar(t, o) {\n    return ti.config({\n      channels: yo(dr, {\n        onReceive: function onReceive(n, e) {\n          e.command === t && o(n, e.state);\n        }\n      })\n    });\n  }\n  function Nr(n) {\n    return ti.config({\n      channels: yo(mr, {\n        onReceive: n\n      })\n    });\n  }\n  function Hr(n, e) {\n    return {\n      key: n,\n      value: {\n        onReceive: e\n      }\n    };\n  }\n  function Pr() {\n    function n(n, e) {\n      e.stop(), q(n);\n    }\n    return [Eo(Un(), n), Eo(ee(), n), Ro(Vn()), Ro(Nn())];\n  }\n  function zr(n, e) {\n    e.ignore || (Ho(n.element), e.onFocus(n));\n  }\n  function jr(n) {\n    return void 0 !== n.style && m(n.style.getPropertyValue);\n  }\n  function Lr(n, e, t) {\n    if (!r(t)) throw console.error(\"Invalid call to CSS.set. Property \", e, \":: Value \", t, \":: Element \", n), new Error(\"CSS value must be a string: \" + t);\n    jr(n) && n.style.setProperty(e, t);\n  }\n  function $r(n, e, t) {\n    Lr(n.dom, e, t);\n  }\n  function Gr(n, e) {\n    var t = n.dom;\n    Ee(e, function (n, e) {\n      Lr(t, e, n);\n    });\n  }\n  function Ur(n, e) {\n    var t = n.dom,\n      o = window.getComputedStyle(t).getPropertyValue(e);\n    return \"\" !== o || rt(n) ? o : li(t, e);\n  }\n  function Wr(n, e) {\n    var t = n.dom,\n      o = li(t, e);\n    return mn.from(o).filter(function (n) {\n      return 0 < n.length;\n    });\n  }\n  function Xr(n, e) {\n    var t,\n      o = e;\n    jr(t = n.dom) && t.style.removeProperty(o), wo(Ae(n, \"style\").map(yn), \"\") && He(n, \"style\");\n  }\n  function qr(n) {\n    return n.dom.offsetWidth;\n  }\n  function Yr(o, r) {\n    function n(n) {\n      var e = r(n);\n      if (e <= 0 || null === e) {\n        var t = Ur(n, o);\n        return parseFloat(t) || 0;\n      }\n      return e;\n    }\n    function i(r, n) {\n      return R(n, function (n, e) {\n        var t = Ur(r, e),\n          o = void 0 === t ? 0 : parseInt(t, 10);\n        return isNaN(o) ? n : n + o;\n      }, 0);\n    }\n    return {\n      set: function set(n, e) {\n        if (!g(e) && !e.match(/^[0-9]+$/)) throw new Error(o + \".set accepts only positive integer values. Value was \" + e);\n        var t = n.dom;\n        jr(t) && (t.style[o] = e + \"px\");\n      },\n      get: n,\n      getOuter: n,\n      aggregate: i,\n      max: function max(n, e, t) {\n        var o = i(n, t);\n        return o < e ? e - o : 0;\n      }\n    };\n  }\n  function Kr(n) {\n    return di.get(n);\n  }\n  function Jr(n, e) {\n    return on(e, n);\n  }\n  w(lo(Sr().concat(wr())));\n  function Qr(n, e, t, o) {\n    (o ? Ir : Vr)(n, e, t);\n  }\n  function Zr(n, e, t) {\n    Ie(n.element, \"aria-expanded\", t);\n  }\n  var ni = w(lo(Sr())),\n    ei = w(Gt(\"initSize\", [Lt(\"numColumns\"), Lt(\"numRows\")])),\n    ti = Ao({\n      fields: [$t(\"channels\", Nt(ht.value, It([Cr(\"onReceive\"), Yt(\"schema\", mo())])))],\n      name: \"receiving\",\n      active: pr\n    }),\n    oi = Object.freeze({\n      __proto__: null,\n      onLoad: Br,\n      toggle: Fr,\n      isOn: function isOn(n, e, t) {\n        return t.get();\n      },\n      on: Ir,\n      off: Vr,\n      set: Qr\n    }),\n    ri = Object.freeze({\n      __proto__: null,\n      exhibit: function exhibit() {\n        return Io({});\n      },\n      events: function events(n, e) {\n        var t,\n          o,\n          r,\n          i = (t = n, o = e, r = Fr, Qo(function (n) {\n            r(n, t, o);\n          })),\n          u = Vo(n, e, Br);\n        return qo(V([n.toggleOnExecute ? [i] : [], [u]]));\n      }\n    }),\n    ii = Ao({\n      fields: [Yt(\"selected\", !1), Ut(\"toggleClass\"), Yt(\"toggleOnExecute\", !0), Kt(\"aria\", {\n        mode: \"none\"\n      }, jt(\"mode\", {\n        pressed: [Yt(\"syncWithExpanded\", !1), Dr(\"update\", function (n, e, t) {\n          Ie(n.element, \"aria-pressed\", t), e.syncWithExpanded && Zr(n, 0, t);\n        })],\n        checked: [Dr(\"update\", function (n, e, t) {\n          Ie(n.element, \"aria-checked\", t);\n        })],\n        expanded: [Dr(\"update\", Zr)],\n        selected: [Dr(\"update\", function (n, e, t) {\n          Ie(n.element, \"aria-selected\", t);\n        })],\n        none: [Dr(\"update\", Y)]\n      }))],\n      name: \"toggling\",\n      active: ri,\n      apis: oi,\n      state: {\n        init: function init() {\n          var e = No(!1);\n          return {\n            get: function get() {\n              return e.get();\n            },\n            set: function set(n) {\n              return e.set(n);\n            },\n            clear: function clear() {\n              return e.set(!1);\n            },\n            readState: function readState() {\n              return e.get();\n            }\n          };\n        }\n      }\n    }),\n    ui = \"tinymce-mobile\",\n    ci = function ci(n) {\n      return ui + \"-\" + n;\n    },\n    ai = Object.freeze({\n      __proto__: null,\n      focus: zr,\n      blur: function blur(n, e) {\n        e.ignore || Po(n.element);\n      },\n      isFocused: function isFocused(n) {\n        return e = n.element, t = tt(e).dom, e.dom === t.activeElement;\n        var e, t;\n      }\n    }),\n    si = Object.freeze({\n      __proto__: null,\n      exhibit: function exhibit(n, e) {\n        return Io(e.ignore ? {} : {\n          attributes: {\n            tabindex: \"-1\"\n          }\n        });\n      },\n      events: function events(t) {\n        return qo([Eo(Yn(), function (n, e) {\n          zr(n, t), e.stop();\n        })].concat(t.stopMousedown ? [Eo(Nn(), function (n, e) {\n          e.event.prevent();\n        })] : []));\n      }\n    }),\n    fi = Ao({\n      fields: [kr(\"onFocus\"), Yt(\"stopMousedown\", !1), Yt(\"ignore\", !1)],\n      name: \"focusing\",\n      active: si,\n      apis: ai\n    }),\n    li = function li(n, e) {\n      return jr(n) ? n.style.getPropertyValue(e) : \"\";\n    },\n    di = Yr(\"height\", function (n) {\n      var e = n.dom;\n      return rt(n) ? e.getBoundingClientRect().height : e.offsetHeight;\n    });\n  function mi(n, e, t, o, r) {\n    return n(t, o) ? mn.some(t) : m(r) && r(t) ? mn.none() : e(t, o, r);\n  }\n  function gi(n, e, t) {\n    for (var o = n.dom, r = m(t) ? t : S; o.parentNode;) {\n      var o = o.parentNode,\n        i = fe.fromDom(o);\n      if (e(i)) return mn.some(i);\n      if (r(i)) break;\n    }\n    return mn.none();\n  }\n  function pi(n, e, t) {\n    return gi(n, function (n) {\n      return en(n, e);\n    }, t);\n  }\n  function hi(n, e) {\n    return rn(e, n);\n  }\n  function vi(n, e, t) {\n    return mi(en, pi, n, e, t);\n  }\n  function bi(n, e, t) {\n    var o = N(n.slice(0, e)),\n      r = N(n.slice(e + 1));\n    return F(o.concat(r), t);\n  }\n  function yi(n, e, t) {\n    return F(N(n.slice(0, e)), t);\n  }\n  function xi(n, e, t) {\n    var o = n.slice(0, e);\n    return F(n.slice(e + 1).concat(o), t);\n  }\n  function wi(n, e, t) {\n    return F(n.slice(e + 1), t);\n  }\n  function Si(t) {\n    return function (n) {\n      var e = n.raw;\n      return T(t, e.which);\n    };\n  }\n  function Oi(n) {\n    return function (e) {\n      return A(n, function (n) {\n        return n(e);\n      });\n    };\n  }\n  function ki(n) {\n    return !0 === n.raw.shiftKey;\n  }\n  function Ti(n) {\n    return !0 === n.raw.ctrlKey;\n  }\n  function Ci(n, e) {\n    return {\n      matches: n,\n      classification: e\n    };\n  }\n  function Ei(n, e, t, o) {\n    var r = n + e;\n    return o < r ? t : r < t ? o : r;\n  }\n  function Di(n, e, t) {\n    return Math.min(Math.max(n, e), t);\n  }\n  function Mi(t, o, n, r) {\n    M(Jr(t.element, \".\" + o.highlightClass), function (e) {\n      C(r, function (n) {\n        return n.element === e;\n      }) || (Le(e, o.highlightClass), t.getSystem().getByDom(e).each(function (n) {\n        o.onDehighlight(t, n), W(n, ae());\n      }));\n    });\n  }\n  function _i(n, e, t, o) {\n    Mi(n, e, 0, [o]), Bi(0, e, 0, o) || (je(o.element, e.highlightClass), e.onHighlight(n, o), W(o, ce()));\n  }\n  function Ri(t, e, n, o) {\n    var r = Jr(t.element, \".\" + e.itemClass);\n    return I(r, function (n) {\n      return $e(n, e.highlightClass);\n    }).bind(function (n) {\n      var e = Ei(n, o, 0, r.length - 1);\n      return t.getSystem().getByDom(r[e]).toOptional();\n    });\n  }\n  function Fi(n, e, t) {\n    e.exists(function (e) {\n      return t.exists(function (n) {\n        return un(n, e);\n      });\n    }) || X(n, ue(), {\n      prevFocus: e,\n      newFocus: t\n    });\n  }\n  function Ii() {\n    function o(n) {\n      return jo(n.element);\n    }\n    return {\n      get: o,\n      set: function set(n, e) {\n        var t = o(n);\n        n.getSystem().triggerFocus(e, n.element), Fi(n, t, o(n));\n      }\n    };\n  }\n  function Vi() {\n    function r(n) {\n      return Qi.getHighlighted(n).map(function (n) {\n        return n.element;\n      });\n    }\n    return {\n      get: r,\n      set: function set(e, n) {\n        var t = r(e);\n        e.getSystem().getByDom(n).fold(Y, function (n) {\n          Qi.highlight(e, n);\n        });\n        var o = r(e);\n        Fi(e, t, o);\n      }\n    };\n  }\n  function Bi(n, e, t, o) {\n    return $e(o.element, e.highlightClass);\n  }\n  function Ai(e, n, t) {\n    return hi(e.element, \".\" + n.itemClass).bind(function (n) {\n      return e.getSystem().getByDom(n).toOptional();\n    });\n  }\n  function Ni(e, n, t) {\n    var o = Jr(e.element, \".\" + n.itemClass);\n    return (0 < o.length ? mn.some(o[o.length - 1]) : mn.none()).bind(function (n) {\n      return e.getSystem().getByDom(n).toOptional();\n    });\n  }\n  function Hi(e, n, t) {\n    return So(Z(Jr(e.element, \".\" + n.itemClass), function (n) {\n      return e.getSystem().getByDom(n).toOptional();\n    }));\n  }\n  var Pi,\n    zi,\n    ji = [8],\n    Li = [9],\n    $i = [13],\n    Gi = [27],\n    Ui = [32],\n    Wi = [37],\n    Xi = [38],\n    qi = [39],\n    Yi = [40],\n    Ki = Q(ki),\n    Ji = Object.freeze({\n      __proto__: null,\n      dehighlightAll: function dehighlightAll(n, e, t) {\n        return Mi(n, e, 0, []);\n      },\n      dehighlight: function dehighlight(n, e, t, o) {\n        Bi(0, e, 0, o) && (Le(o.element, e.highlightClass), e.onDehighlight(n, o), W(o, ae()));\n      },\n      highlight: _i,\n      highlightFirst: function highlightFirst(e, t, n) {\n        Ai(e, t).each(function (n) {\n          _i(e, t, 0, n);\n        });\n      },\n      highlightLast: function highlightLast(e, t, n) {\n        Ni(e, t).each(function (n) {\n          _i(e, t, 0, n);\n        });\n      },\n      highlightAt: function highlightAt(e, t, n, o) {\n        var r, i, u;\n        i = o, u = Jr((r = e).element, \".\" + t.itemClass), mn.from(u[i]).fold(function () {\n          return ht.error(new Error(\"No element found with index \" + i));\n        }, r.getSystem().getByDom).fold(function (n) {\n          throw n;\n        }, function (n) {\n          _i(e, t, 0, n);\n        });\n      },\n      highlightBy: function highlightBy(e, t, n, o) {\n        F(Hi(e, t), o).each(function (n) {\n          _i(e, t, 0, n);\n        });\n      },\n      isHighlighted: Bi,\n      getHighlighted: function getHighlighted(e, n, t) {\n        return hi(e.element, \".\" + n.highlightClass).bind(function (n) {\n          return e.getSystem().getByDom(n).toOptional();\n        });\n      },\n      getFirst: Ai,\n      getLast: Ni,\n      getPrevious: function getPrevious(n, e, t) {\n        return Ri(n, e, 0, -1);\n      },\n      getNext: function getNext(n, e, t) {\n        return Ri(n, e, 0, 1);\n      },\n      getCandidates: Hi\n    }),\n    Qi = Ao({\n      fields: [Lt(\"highlightClass\"), Lt(\"itemClass\"), kr(\"onHighlight\"), kr(\"onDehighlight\")],\n      name: \"highlighting\",\n      apis: Ji\n    });\n  function Zi(n, e, t, o, c) {\n    function a(e, t, n, o, r) {\n      var i = n(e, t, o, r),\n        u = t.event;\n      return F(i, function (n) {\n        return n.matches(u);\n      }).map(function (n) {\n        return n.classification;\n      }).bind(function (n) {\n        return n(e, t, o, r);\n      });\n    }\n    var r = {\n      schema: function schema() {\n        return n.concat([Yt(\"focusManager\", Ii()), Kt(\"focusInside\", \"onFocus\", At(function (n) {\n          return T([\"onFocus\", \"onEnterOrSpace\", \"onApi\"], n) ? ht.value(n) : ht.error(\"Invalid value for focusInside\");\n        })), Dr(\"handler\", r), Dr(\"state\", e), Dr(\"sendFocusIn\", c)]);\n      },\n      processKey: a,\n      toEvents: function toEvents(i, u) {\n        var n = i.focusInside !== Pi.OnFocusMode ? mn.none() : c(i).map(function (t) {\n            return Eo(Yn(), function (n, e) {\n              t(n, i, u), e.stop();\n            });\n          }),\n          e = [Eo(jn(), function (o, r) {\n            a(o, r, t, i, u).fold(function () {\n              var e = o,\n                t = r,\n                n = Si(Ui.concat($i))(t.event);\n              i.focusInside === Pi.OnEnterOrSpaceMode && n && ko(e, t) && c(i).each(function (n) {\n                n(e, i, u), t.stop();\n              });\n            }, function (n) {\n              r.stop();\n            });\n          }), Eo(Ln(), function (n, e) {\n            a(n, e, o, i, u).each(function (n) {\n              e.stop();\n            });\n          })];\n        return qo(n.toArray().concat(e));\n      }\n    };\n    return r;\n  }\n  function nu(n) {\n    function c(n, e) {\n      return 0 < Kr(n.visibilitySelector.bind(function (n) {\n        return vi(e, n);\n      }).getOr(e));\n    }\n    function e(e, t, n) {\n      var o = t,\n        r = E(Jr(e.element, o.selector), function (n) {\n          return c(o, n);\n        });\n      mn.from(r[o.firstTabstop]).each(function (n) {\n        t.focusManager.set(e, n);\n      });\n    }\n    function o(t, n, r, i) {\n      var e,\n        u = Jr(t.element, r.selector);\n      return (e = r).focusManager.get(t).bind(function (n) {\n        return vi(n, e.selector);\n      }).bind(function (n) {\n        return I(u, J(un, n)).bind(function (n) {\n          return e = t, o = r, i(u, n, function (n) {\n            return c(e = o, t = n) && e.useTabstopAt(t);\n            var e, t;\n          }).fold(function () {\n            return o.cyclic ? mn.some(!0) : mn.none();\n          }, function (n) {\n            return o.focusManager.set(e, n), mn.some(!0);\n          });\n          var e, o;\n        });\n      });\n    }\n    var t = [Ut(\"onEscape\"), Ut(\"onEnter\"), Yt(\"selector\", '[data-alloy-tabstop=\"true\"]:not(:disabled)'), Yt(\"firstTabstop\", 0), Yt(\"useTabstopAt\", x), Ut(\"visibilitySelector\")].concat([n]),\n      r = w([Ci(Oi([ki, Si(Li)]), function (n, e, t) {\n        return o(n, 0, t, t.cyclic ? bi : yi);\n      }), Ci(Si(Li), function (n, e, t) {\n        return o(n, 0, t, t.cyclic ? xi : wi);\n      }), Ci(Si(Gi), function (e, t, n) {\n        return n.onEscape.bind(function (n) {\n          return n(e, t);\n        });\n      }), Ci(Oi([Ki, Si($i)]), function (e, t, n) {\n        return n.onEnter.bind(function (n) {\n          return n(e, t);\n        });\n      })]),\n      i = w([]);\n    return Zi(t, er.init, r, i, function () {\n      return mn.some(e);\n    });\n  }\n  function eu(n) {\n    return \"input\" === le(n) && \"radio\" !== Be(n, \"type\") || \"textarea\" === le(n);\n  }\n  function tu(n, e, t) {\n    return eu(t) && Si(Ui)(e.event) ? mn.none() : (nn(n, t, Zn()), mn.some(!0));\n  }\n  function ou(n, e) {\n    return mn.some(!0);\n  }\n  function ru(n, e, t) {\n    return t.execute(n, e, n.element);\n  }\n  function iu(n) {\n    function e() {\n      return t.get().each(n);\n    }\n    var t = No(mn.none());\n    return {\n      clear: function clear() {\n        e(), t.set(mn.none());\n      },\n      isSet: function isSet() {\n        return t.get().isSome();\n      },\n      get: function get() {\n        return t.get();\n      },\n      set: function set(n) {\n        e(), t.set(mn.some(n));\n      }\n    };\n  }\n  function uu() {\n    var e = iu(function (n) {\n      return n.destroy();\n    });\n    return _y(_y({}, e), {\n      run: function run(n) {\n        return e.get().each(n);\n      }\n    });\n  }\n  function cu() {\n    var e = iu(Y);\n    return _y(_y({}, e), {\n      on: function on(n) {\n        return e.get().each(n);\n      }\n    });\n  }\n  function au() {\n    var t = cu();\n    return tr({\n      readState: function readState() {\n        return t.get().map(function (n) {\n          return {\n            numRows: String(n.numRows),\n            numColumns: String(n.numColumns)\n          };\n        }).getOr({\n          numRows: \"?\",\n          numColumns: \"?\"\n        });\n      },\n      setGridSize: function setGridSize(n, e) {\n        t.set({\n          numRows: n,\n          numColumns: e\n        });\n      },\n      getNumRows: function getNumRows() {\n        return t.get().map(function (n) {\n          return n.numRows;\n        });\n      },\n      getNumColumns: function getNumColumns() {\n        return t.get().map(function (n) {\n          return n.numColumns;\n        });\n      }\n    });\n  }\n  function su(e, t) {\n    return function (n) {\n      return \"rtl\" === cc(n) ? t : e;\n    };\n  }\n  function fu(i) {\n    return function (n, e, t, o) {\n      var r = i(n.element);\n      return ac(r, n, e, t, o);\n    };\n  }\n  function lu(n, e) {\n    return fu(su(n, e));\n  }\n  function du(n, e) {\n    return fu(su(e, n));\n  }\n  function mu(r) {\n    return function (n, e, t, o) {\n      return ac(r, n, e, t, o);\n    };\n  }\n  function gu(n) {\n    return !((e = n.dom).offsetWidth <= 0 && e.offsetHeight <= 0);\n    var e;\n  }\n  function pu(n, e, t) {\n    var o,\n      r = E(Jr(n, t), gu);\n    return I(o = r, function (n) {\n      return un(n, e);\n    }).map(function (n) {\n      return {\n        index: n,\n        candidates: o\n      };\n    });\n  }\n  function hu(n, e) {\n    return I(n, function (n) {\n      return un(e, n);\n    });\n  }\n  function vu(t, n, o, e) {\n    return e(Math.floor(n / o), n % o).bind(function (n) {\n      var e = n.row * o + n.column;\n      return 0 <= e && e < t.length ? mn.some(t[e]) : mn.none();\n    });\n  }\n  function bu(r, n, i, u, c) {\n    return vu(r, n, u, function (n, e) {\n      var t = n === i - 1 ? r.length - n * u : u,\n        o = Ei(e, c, 0, t - 1);\n      return mn.some({\n        row: n,\n        column: o\n      });\n    });\n  }\n  function yu(r, n, i, u, c) {\n    return vu(r, n, u, function (n, e) {\n      var t = Ei(n, c, 0, i - 1),\n        o = Di(e, 0, (t === i - 1 ? r.length - t * u : u) - 1);\n      return mn.some({\n        row: t,\n        column: o\n      });\n    });\n  }\n  function xu(e, t, n) {\n    hi(e.element, t.selector).each(function (n) {\n      t.focusManager.set(e, n);\n    });\n  }\n  function wu(r) {\n    return function (n, e, t, o) {\n      return pu(n, e, t.selector).bind(function (n) {\n        return r(n.candidates, n.index, o.getNumRows().getOr(t.initSize.numRows), o.getNumColumns().getOr(t.initSize.numColumns));\n      });\n    };\n  }\n  function Su(n, e, t) {\n    return t.captureTab ? mn.some(!0) : mn.none();\n  }\n  function Ou(n, e, t, i) {\n    var u = function u(n, e, t) {\n      var o,\n        r = Ei(e, i, 0, t.length - 1);\n      return r === n ? mn.none() : \"button\" === le(o = t[r]) && \"disabled\" === Be(o, \"disabled\") ? u(n, r, t) : mn.from(t[r]);\n    };\n    return pu(n, t, e).bind(function (n) {\n      var e = n.index,\n        t = n.candidates;\n      return u(e, e, t);\n    });\n  }\n  function ku(e, t, o) {\n    return (r = o).focusManager.get(e).bind(function (n) {\n      return vi(n, r.selector);\n    }).bind(function (n) {\n      return o.execute(e, t, n);\n    });\n    var r;\n  }\n  function Tu(e, t, n) {\n    t.getInitial(e).orThunk(function () {\n      return hi(e.element, t.selector);\n    }).each(function (n) {\n      t.focusManager.set(e, n);\n    });\n  }\n  function Cu(n, e, t) {\n    return Ou(n, t.selector, e, -1);\n  }\n  function Eu(n, e, t) {\n    return Ou(n, t.selector, e, 1);\n  }\n  function Du(r) {\n    return function (n, e, t, o) {\n      return r(n, e, t, o).bind(function () {\n        return t.executeOnMove ? ku(n, e, t) : mn.some(!0);\n      });\n    };\n  }\n  function Mu(n, e, t) {\n    return t.onEscape(n, e);\n  }\n  function _u(n, e, t) {\n    return mn.from(n[e]).bind(function (n) {\n      return mn.from(n[t]).map(function (n) {\n        return {\n          rowIndex: e,\n          columnIndex: t,\n          cell: n\n        };\n      });\n    });\n  }\n  function Ru(n, e, t, o) {\n    return _u(n, e, Ei(t, o, 0, n[e].length - 1));\n  }\n  function Fu(n, e, t, o) {\n    var r = Ei(t, o, 0, n.length - 1);\n    return _u(n, r, Di(e, 0, n[r].length - 1));\n  }\n  function Iu(n, e, t, o) {\n    return _u(n, e, Di(t + o, 0, n[e].length - 1));\n  }\n  function Vu(n, e, t, o) {\n    var r = Di(t + o, 0, n.length - 1);\n    return _u(n, r, Di(e, 0, n[r].length - 1));\n  }\n  function Bu(e, t, n) {\n    t.previousSelector(e).orThunk(function () {\n      var n = t.selectors;\n      return hi(e.element, n.cell);\n    }).each(function (n) {\n      t.focusManager.set(e, n);\n    });\n  }\n  function Au(n, o) {\n    return function (e, t, i) {\n      var u = i.cycles ? n : o;\n      return vi(t, i.selectors.row).bind(function (n) {\n        return hu(Jr(n, i.selectors.cell), t).bind(function (o) {\n          var r = Jr(e, i.selectors.row);\n          return hu(r, n).bind(function (n) {\n            var e,\n              t = (e = i, Z(r, function (n) {\n                return Jr(n, e.selectors.cell);\n              }));\n            return u(t, n, o).map(function (n) {\n              return n.cell;\n            });\n          });\n        });\n      });\n    };\n  }\n  function Nu(e, t, o) {\n    return o.focusManager.get(e).bind(function (n) {\n      return o.execute(e, t, n);\n    });\n  }\n  function Hu(e, t, n) {\n    hi(e.element, t.selector).each(function (n) {\n      t.focusManager.set(e, n);\n    });\n  }\n  function Pu(n, e, t) {\n    return Ou(n, t.selector, e, -1);\n  }\n  function zu(n, e, t) {\n    return Ou(n, t.selector, e, 1);\n  }\n  function ju(o, n) {\n    return e = o, t = {}, r = Z(n, function (n) {\n      return e = n.name(), t = \"Cannot configure \" + n.name() + \" for \" + o, ho(e, e, Ct(), _t(function (n) {\n        return eo(\"The field: \" + e + \" is forbidden. \" + t);\n      }));\n      var e, t;\n    }).concat([vo(\"dump\", K)]), Kt(e, t, lo(r));\n    var e, t, r;\n  }\n  function Lu(n, e) {\n    return _y(_y({}, or(e)), n.dump);\n  }\n  function $u(n) {\n    return dt(n, \"uiType\");\n  }\n  function Gu(n) {\n    var e = new Date().getTime();\n    return n + \"_\" + Math.floor(1e9 * Math.random()) + ++Kc + String(e);\n  }\n  function Uu(n) {\n    function e(n) {\n      return n.name;\n    }\n    return n.fold(e, e, e, e);\n  }\n  function Wu(t, o) {\n    return function (n) {\n      var e = zt(\"Converting part type\", o, n);\n      return t(e);\n    };\n  }\n  (zi = Pi = Pi || {}).OnFocusMode = \"onFocus\", zi.OnEnterOrSpaceMode = \"onEnterOrSpace\", zi.OnApiMode = \"onApi\";\n  var Xu,\n    qu,\n    Yu,\n    Ku,\n    Ju,\n    Qu,\n    Zu,\n    nc,\n    ec,\n    tc,\n    oc = nu(vo(\"cyclic\", S)),\n    rc = nu(vo(\"cyclic\", x)),\n    ic = Zi([Yt(\"execute\", tu), Yt(\"useSpace\", !1), Yt(\"useEnter\", !0), Yt(\"useControlEnter\", !1), Yt(\"useDown\", !1)], er.init, function (n, e, t, o) {\n      var r = t.useSpace && !eu(n.element) ? Ui : [],\n        i = t.useEnter ? $i : [],\n        u = t.useDown ? Yi : [];\n      return [Ci(Si(r.concat(i).concat(u)), ru)].concat(t.useControlEnter ? [Ci(Oi([Ti, Si($i)]), ru)] : []);\n    }, function (n, e, t, o) {\n      return t.useSpace && !eu(n.element) ? [Ci(Si(Ui), ou)] : [];\n    }, function () {\n      return mn.none();\n    }),\n    uc = Object.freeze({\n      __proto__: null,\n      flatgrid: au,\n      init: function init(n) {\n        return n.state(n);\n      }\n    }),\n    cc = function cc(n) {\n      return \"rtl\" === Ur(n, \"direction\") ? \"rtl\" : \"ltr\";\n    },\n    ac = function ac(e, t, n, o, r) {\n      return o.focusManager.get(t).bind(function (n) {\n        return e(t.element, n, o, r);\n      }).map(function (n) {\n        return o.focusManager.set(t, n), !0;\n      });\n    },\n    sc = mu,\n    fc = mu,\n    lc = mu,\n    dc = wu(function (n, e, t, o) {\n      return bu(n, e, t, o, -1);\n    }),\n    mc = wu(function (n, e, t, o) {\n      return bu(n, e, t, o, 1);\n    }),\n    gc = wu(function (n, e, t, o) {\n      return yu(n, e, t, o, -1);\n    }),\n    pc = wu(function (n, e, t, o) {\n      return yu(n, e, t, o, 1);\n    }),\n    hc = Zi([Lt(\"selector\"), Yt(\"execute\", tu), Tr(\"onEscape\"), Yt(\"captureTab\", !1), ei()], au, w([Ci(Si(Wi), lu(dc, mc)), Ci(Si(qi), du(dc, mc)), Ci(Si(Xi), sc(gc)), Ci(Si(Yi), fc(pc)), Ci(Oi([ki, Si(Li)]), Su), Ci(Oi([Ki, Si(Li)]), Su), Ci(Si(Gi), function (n, e, t) {\n      return t.onEscape(n, e);\n    }), Ci(Si(Ui.concat($i)), function (e, t, o, n) {\n      return (r = o).focusManager.get(e).bind(function (n) {\n        return vi(n, r.selector);\n      }).bind(function (n) {\n        return o.execute(e, t, n);\n      });\n      var r;\n    })]), w([Ci(Si(Ui), ou)]), function () {\n      return mn.some(xu);\n    }),\n    vc = [Lt(\"selector\"), Yt(\"getInitial\", mn.none), Yt(\"execute\", tu), Tr(\"onEscape\"), Yt(\"executeOnMove\", !1), Yt(\"allowVertical\", !0)],\n    bc = w([Ci(Si(Ui), ou)]),\n    yc = Zi(vc, er.init, function (n, e, t, o) {\n      var r = Wi.concat(t.allowVertical ? Xi : []),\n        i = qi.concat(t.allowVertical ? Yi : []);\n      return [Ci(Si(r), Du(lu(Cu, Eu))), Ci(Si(i), Du(du(Cu, Eu))), Ci(Si($i), ku), Ci(Si(Ui), ku), Ci(Si(Gi), Mu)];\n    }, bc, function () {\n      return mn.some(Tu);\n    }),\n    xc = [Gt(\"selectors\", [Lt(\"row\"), Lt(\"cell\")]), Yt(\"cycles\", !0), Yt(\"previousSelector\", mn.none), Yt(\"execute\", tu)],\n    wc = Au(function (n, e, t) {\n      return Ru(n, e, t, -1);\n    }, function (n, e, t) {\n      return Iu(n, e, t, -1);\n    }),\n    Sc = Au(function (n, e, t) {\n      return Ru(n, e, t, 1);\n    }, function (n, e, t) {\n      return Iu(n, e, t, 1);\n    }),\n    Oc = Au(function (n, e, t) {\n      return Fu(n, t, e, -1);\n    }, function (n, e, t) {\n      return Vu(n, t, e, -1);\n    }),\n    kc = Au(function (n, e, t) {\n      return Fu(n, t, e, 1);\n    }, function (n, e, t) {\n      return Vu(n, t, e, 1);\n    }),\n    Tc = w([Ci(Si(Wi), lu(wc, Sc)), Ci(Si(qi), du(wc, Sc)), Ci(Si(Xi), sc(Oc)), Ci(Si(Yi), fc(kc)), Ci(Si(Ui.concat($i)), function (e, t, o) {\n      return jo(e.element).bind(function (n) {\n        return o.execute(e, t, n);\n      });\n    })]),\n    Cc = w([Ci(Si(Ui), ou)]),\n    Ec = Zi(xc, er.init, Tc, Cc, function () {\n      return mn.some(Bu);\n    }),\n    Dc = [Lt(\"selector\"), Yt(\"execute\", tu), Yt(\"moveOnTab\", !1)],\n    Mc = w([Ci(Si(Xi), lc(Pu)), Ci(Si(Yi), lc(zu)), Ci(Oi([ki, Si(Li)]), function (n, e, t, o) {\n      return t.moveOnTab ? lc(Pu)(n, e, t, o) : mn.none();\n    }), Ci(Oi([Ki, Si(Li)]), function (n, e, t, o) {\n      return t.moveOnTab ? lc(zu)(n, e, t, o) : mn.none();\n    }), Ci(Si($i), Nu), Ci(Si(Ui), Nu)]),\n    _c = w([Ci(Si(Ui), ou)]),\n    Rc = Zi(Dc, er.init, Mc, _c, function () {\n      return mn.some(Hu);\n    }),\n    Fc = Zi([Tr(\"onSpace\"), Tr(\"onEnter\"), Tr(\"onShiftEnter\"), Tr(\"onLeft\"), Tr(\"onRight\"), Tr(\"onTab\"), Tr(\"onShiftTab\"), Tr(\"onUp\"), Tr(\"onDown\"), Tr(\"onEscape\"), Yt(\"stopSpaceKeyup\", !1), Ut(\"focusIn\")], er.init, function (n, e, t) {\n      return [Ci(Si(Ui), t.onSpace), Ci(Oi([Ki, Si($i)]), t.onEnter), Ci(Oi([ki, Si($i)]), t.onShiftEnter), Ci(Oi([ki, Si(Li)]), t.onShiftTab), Ci(Oi([Ki, Si(Li)]), t.onTab), Ci(Si(Xi), t.onUp), Ci(Si(Yi), t.onDown), Ci(Si(Wi), t.onLeft), Ci(Si(qi), t.onRight), Ci(Si(Ui), t.onSpace), Ci(Si(Gi), t.onEscape)];\n    }, function (n, e, t) {\n      return t.stopSpaceKeyup ? [Ci(Si(Ui), ou)] : [];\n    }, function (n) {\n      return n.focusIn;\n    }),\n    Ic = oc.schema(),\n    Vc = rc.schema(),\n    Bc = yc.schema(),\n    Ac = hc.schema(),\n    Nc = Ec.schema(),\n    Hc = ic.schema(),\n    Pc = Rc.schema(),\n    zc = Fc.schema(),\n    jc = (qu = jt((tc = zt(\"Creating behaviour: \" + (Xu = {\n      branchKey: \"mode\",\n      branches: Object.freeze({\n        __proto__: null,\n        acyclic: Ic,\n        cyclic: Vc,\n        flow: Bc,\n        flatgrid: Ac,\n        matrix: Nc,\n        execution: Hc,\n        menu: Pc,\n        special: zc\n      }),\n      name: \"keying\",\n      active: {\n        events: function events(n, e) {\n          return n.handler.toEvents(n, e);\n        }\n      },\n      apis: {\n        focusIn: function focusIn(e, t, o) {\n          t.sendFocusIn(t).fold(function () {\n            e.getSystem().triggerFocus(e.element, e.element);\n          }, function (n) {\n            n(e, t, o);\n          });\n        },\n        setGridSize: function setGridSize(n, e, t, o, r) {\n          Re(t, \"setGridSize\") ? t.setGridSize(o, r) : console.error(\"Layout does not support setGridSize\");\n        }\n      },\n      state: uc\n    }).name, ir, Xu)).branchKey, tc.branches), Yu = tc.name, Ku = tc.active, Ju = tc.apis, Qu = tc.extra, Zu = tc.state, ec = Xt(Yu, [Wt(\"config\", nc = qu)]), nr(nc, ec, Yu, Ku, Ju, Qu, Zu)),\n    Lc = ju,\n    $c = Lu,\n    Gc = \"placeholder\",\n    Uc = Jt([{\n      single: [\"required\", \"valueThunk\"]\n    }, {\n      multiple: [\"required\", \"valueThunks\"]\n    }]),\n    Wc = function Wc(r, i, u, c) {\n      return n = r, t = c, ($u(e = u) && e.uiType === Gc ? (a = e, s = t, (o = n).exists(function (n) {\n        return n !== a.owner;\n      }) ? Uc.single(!0, w(a)) : _e(s, a.name).fold(function () {\n        throw new Error(\"Unknown placeholder component: \" + a.name + \"\\nKnown: [\" + st(s) + \"]\\nNamespace: \" + o.getOr(\"none\") + \"\\nSpec: \" + JSON.stringify(a, null, 2));\n      }, function (n) {\n        return n.replace();\n      })) : Uc.single(!1, w(e))).fold(function (n, e) {\n        var t = $u(u) ? e(i, u.config, u.validated) : e(i),\n          o = B(_e(t, \"components\").getOr([]), function (n) {\n            return Wc(r, i, n, c);\n          });\n        return [_y(_y({}, t), {\n          components: o\n        })];\n      }, function (n, e) {\n        if ($u(u)) {\n          var t = e(i, u.config, u.validated);\n          return u.validated.preprocess.getOr(K)(t);\n        }\n        return e(i);\n      });\n      var n, e, t, o, a, s;\n    },\n    Xc = Uc.single,\n    qc = Uc.multiple,\n    Yc = w(Gc),\n    Kc = 0,\n    Jc = Jt([{\n      required: [\"data\"]\n    }, {\n      external: [\"data\"]\n    }, {\n      optional: [\"data\"]\n    }, {\n      group: [\"data\"]\n    }]),\n    Qc = Yt(\"factory\", {\n      sketch: K\n    }),\n    Zc = Yt(\"schema\", []),\n    na = Lt(\"name\"),\n    ea = ho(\"pname\", \"pname\", kt(function (n) {\n      return \"<alloy.\" + Gu(n.name) + \">\";\n    }), mo()),\n    ta = vo(\"schema\", function () {\n      return [Ut(\"preprocess\")];\n    }),\n    oa = Yt(\"defaults\", w({})),\n    ra = Yt(\"overrides\", w({})),\n    ia = lo([Qc, Zc, na, ea, oa, ra]),\n    ua = lo([Qc, Zc, na, oa, ra]),\n    ca = lo([Qc, Zc, na, ea, oa, ra]),\n    aa = lo([Qc, ta, na, Lt(\"unit\"), ea, oa, ra]),\n    sa = Wu(Jc.required, ia);\n  function fa(n, e, t, o) {\n    return co(e.defaults(n, t, o), t, {\n      uid: n.partUids[e.name]\n    }, e.overrides(n, t, o));\n  }\n  function la(n, e, t) {\n    return o = e, r = {}, i = {}, M(t, function (n) {\n      n.fold(function (o) {\n        r[o.pname] = Xc(!0, function (n, e, t) {\n          return o.factory.sketch(fa(n, o, e, t));\n        });\n      }, function (n) {\n        var e = o.parts[n.name];\n        i[n.name] = w(n.factory.sketch(fa(o, n, e[zs()]), e));\n      }, function (o) {\n        r[o.pname] = Xc(!1, function (n, e, t) {\n          return o.factory.sketch(fa(n, o, e, t));\n        });\n      }, function (o) {\n        r[o.pname] = qc(!0, function (e, n, t) {\n          return Z(e[o.name], function (n) {\n            return o.factory.sketch(co(o.defaults(e, n, t), n, o.overrides(e, n)));\n          });\n        });\n      });\n    }), {\n      internals: w(r),\n      externals: w(i)\n    };\n    var o, r, i;\n  }\n  function da(n, e, t) {\n    return o = mn.some(n), i = (r = e).components, s = De(t, function (n, e) {\n      return o = n, r = !1, {\n        name: w(t = e),\n        required: function required() {\n          return o.fold(function (n, e) {\n            return n;\n          }, function (n, e) {\n            return n;\n          });\n        },\n        used: function used() {\n          return r;\n        },\n        replace: function replace() {\n          if (r) throw new Error(\"Trying to use the same placeholder more than once: \" + t);\n          return r = !0, o;\n        }\n      };\n      var t, o, r;\n    }), u = o, c = r, a = s, f = B(i, function (n) {\n      return Wc(u, c, n, a);\n    }), Ee(s, function (n) {\n      if (!1 === n.used() && n.required()) throw new Error(\"Placeholder: \" + n.name() + \" was not found in components list\\nNamespace: \" + o.getOr(\"none\") + \"\\nComponents: \" + JSON.stringify(r.components, null, 2));\n    }), f;\n    var o, r, i, u, c, a, s, f;\n  }\n  function ma(n, e, t) {\n    var o = e.partUids[t];\n    return n.getSystem().getByUid(o).toOptional();\n  }\n  function ga(n, e, t) {\n    return ma(n, e, t).getOrDie(\"Could not find part: \" + t);\n  }\n  function pa(o) {\n    return ho(\"partUids\", \"partUids\", Et(function (n) {\n      return e = n.uid, t = Z(o, Uu), xo(Z(t, function (n) {\n        return {\n          key: n,\n          value: e + \"-\" + n\n        };\n      }));\n      var e, t;\n    }), mo());\n  }\n  function ha(n) {\n    return yo(Ls, n);\n  }\n  function va(o) {\n    return n = function n(_n2) {\n      for (var e = [], t = 1; t < arguments.length; t++) e[t - 1] = arguments[t];\n      return o.apply(void 0, u([_n2.getApis(), _n2], e, !1));\n    }, t = (e = o.toString()).indexOf(\")\") + 1, r = e.indexOf(\"(\"), i = e.substring(r + 1, t - 1).split(/,\\s*/), n.toFunctionAnnotation = function () {\n      return {\n        name: \"OVERRIDE\",\n        parameters: Zo(i.slice(1))\n      };\n    }, n;\n    var n, e, t, r, i;\n  }\n  function ba(n) {\n    var e = Xe(n) ? n.dom[Ws] : null;\n    return mn.from(e);\n  }\n  function ya(n, e, t, o, r) {\n    var i;\n    return zt(n + \" [SpecSchema]\", It((i = r, (0 < o.length ? [Gt(\"parts\", o)] : []).concat([Lt(\"uid\"), Yt(\"dom\", {}), Yt(\"components\", []), Mr(\"originalSpec\"), Yt(\"debug.sketcher\", {})]).concat(i)).concat(e)), t);\n  }\n  function xa(n, e, t, o, r) {\n    var i = Ys(r),\n      u = ya(n, e, i, B(t, function (n) {\n        return n.fold(mn.none, mn.some, mn.none, mn.none).map(function (n) {\n          return Gt(n.name, n.schema.concat([Mr(zs())]));\n        }).toArray();\n      }), [pa(t)]),\n      c = la(0, u, t);\n    return o(u, da(n, u, c.internals()), i, c.externals());\n  }\n  function wa(n) {\n    var r = zt(\"Sketcher for \" + n.name, Ks, n),\n      e = De(r.apis, va),\n      t = De(r.extraApis, Fo);\n    return _y(_y({\n      name: r.name,\n      configFields: r.configFields,\n      sketch: function sketch(n) {\n        return e = r.name, t = r.configFields, (0, r.factory)(ya(e, t, o = Ys(n), [], []), o);\n        var e, t, o;\n      }\n    }, e), t);\n  }\n  function Sa(n) {\n    var r,\n      e,\n      i,\n      t = zt(\"Sketcher for \" + n.name, Js, n),\n      o = (r = t.name, e = t.partFields, i = {}, M(e, function (n) {\n        n.fold(mn.some, mn.none, mn.some, mn.some).each(function (t) {\n          var o = js(r, t.pname);\n          i[t.name] = function (n) {\n            var e = zt(\"Part: \" + t.name + \" in \" + r, lo(t.schema), n);\n            return _y(_y({}, o), {\n              config: n,\n              validated: e\n            });\n          };\n        });\n      }), i),\n      u = De(t.apis, va),\n      c = De(t.extraApis, Fo);\n    return _y(_y({\n      name: t.name,\n      partFields: t.partFields,\n      configFields: t.configFields,\n      sketch: function sketch(n) {\n        return xa(t.name, t.configFields, t.partFields, t.factory, n);\n      },\n      parts: o\n    }, u), c);\n  }\n  function Oa(n) {\n    var r,\n      e,\n      t,\n      o,\n      i,\n      u,\n      c = (r = {\n        prefix: ui\n      }, n.replace(/\\$\\{([^{}]*)\\}/g, function (n, e) {\n        var t,\n          o = r[e];\n        return \"string\" == (t = _typeof(o)) || \"number\" == t ? o.toString() : n;\n      }));\n    return e = fe.fromHtml(c), t = Je(e), o = R(void 0 !== e.dom.attributes ? e.dom.attributes : [], function (n, e) {\n      var t;\n      return \"class\" === e.name ? n : _y(_y({}, n), ((t = {})[e.name] = e.value, t));\n    }, {}), i = Array.prototype.slice.call(e.dom.classList, 0), u = 0 === t.length ? {} : {\n      innerHtml: Lo(e)\n    }, _y({\n      tag: le(e),\n      classes: i,\n      attributes: o\n    }, u);\n  }\n  function ka(n) {\n    return {\n      dom: Oa(n)\n    };\n  }\n  function Ta(n) {\n    return or([ii.config({\n      toggleClass: ci(\"toolbar-button-selected\"),\n      toggleOnExecute: !1,\n      aria: {\n        mode: \"pressed\"\n      }\n    }), Ar(n, function (n, e) {\n      (e ? ii.on : ii.off)(n);\n    })]);\n  }\n  function Ca(n, e, t, o) {\n    var r = Ta(t);\n    return nf(e, o, r, n);\n  }\n  function Ea(n, e) {\n    var t = e.ui.registry.getAll().icons;\n    return mn.from(t[n]).fold(function () {\n      return Oa('<span class=\"${prefix}-toolbar-button ${prefix}-toolbar-group-item ${prefix}-icon-' + n + ' ${prefix}-icon\"></span>');\n    }, function (n) {\n      return Oa('<span class=\"${prefix}-toolbar-button ${prefix}-toolbar-group-item\">' + n + \"</span>\");\n    });\n  }\n  function Da(e) {\n    return Hs({\n      name: e + \"-edge\",\n      overrides: function overrides(n) {\n        return n.model.manager.edgeActions[e].fold(function () {\n          return {};\n        }, function (o) {\n          return {\n            events: qo([Do(Vn(), function (n, e, t) {\n              return o(n, t);\n            }, [n]), Do(Nn(), function (n, e, t) {\n              return o(n, t);\n            }, [n]), Do(Hn(), function (n, e, t) {\n              t.mouseIsDown.get() && o(n, t);\n            }, [n])])\n          };\n        });\n      }\n    });\n  }\n  function Ma(n, e, t) {\n    e.store.manager.onLoad(n, e, t);\n  }\n  function _a(n, e, t) {\n    e.store.manager.onUnload(n, e, t);\n  }\n  function Ra() {\n    var n = No(null);\n    return tr({\n      set: n.set,\n      get: n.get,\n      isNotSet: function isNotSet() {\n        return null === n.get();\n      },\n      clear: function clear() {\n        n.set(null);\n      },\n      readState: function readState() {\n        return {\n          mode: \"memory\",\n          value: n.get()\n        };\n      }\n    });\n  }\n  function Fa() {\n    var i = No({}),\n      u = No({});\n    return tr({\n      readState: function readState() {\n        return {\n          mode: \"dataset\",\n          dataByValue: i.get(),\n          dataByText: u.get()\n        };\n      },\n      lookup: function lookup(n) {\n        return _e(i.get(), n).orThunk(function () {\n          return _e(u.get(), n);\n        });\n      },\n      update: function update(n) {\n        var e = i.get(),\n          t = u.get(),\n          o = {},\n          r = {};\n        M(n, function (e) {\n          _e(o[e.value] = e, \"meta\").each(function (n) {\n            _e(n, \"text\").each(function (n) {\n              r[n] = e;\n            });\n          });\n        }), i.set(_y(_y({}, e), o)), u.set(_y(_y({}, t), r));\n      },\n      clear: function clear() {\n        i.set({}), u.set({});\n      }\n    });\n  }\n  function Ia(n, e, t, o) {\n    var r = e.store;\n    t.update([o]), r.setValue(n, o), e.onSetValue(n, o);\n  }\n  function Va(n, e) {\n    return vf.set(n, e);\n  }\n  function Ba(n) {\n    return vf.get(n);\n  }\n  function Aa(n) {\n    var e = n.event.raw;\n    return -1 === e.type.indexOf(\"touch\") ? void 0 !== e.clientX ? mn.some(e).map(function (n) {\n      return yf(n.clientX, n.clientY);\n    }) : mn.none() : void 0 !== e.touches && 1 === e.touches.length ? mn.some(e.touches[0]).map(function (n) {\n      return yf(n.clientX, n.clientY);\n    }) : mn.none();\n  }\n  function Na(n) {\n    return n.model.minX;\n  }\n  function Ha(n) {\n    return n.model.minY;\n  }\n  function Pa(n) {\n    return n.model.minX - 1;\n  }\n  function za(n) {\n    return n.model.minY - 1;\n  }\n  function ja(n) {\n    return n.model.maxX;\n  }\n  function La(n) {\n    return n.model.maxY;\n  }\n  function $a(n) {\n    return n.model.maxX + 1;\n  }\n  function Ga(n) {\n    return n.model.maxY + 1;\n  }\n  function Ua(n, e, t) {\n    return e(n) - t(n);\n  }\n  function Wa(n) {\n    return Ua(n, ja, Na);\n  }\n  function Xa(n) {\n    return Ua(n, La, Ha);\n  }\n  function qa(n) {\n    return Wa(n) / 2;\n  }\n  function Ya(n) {\n    return Xa(n) / 2;\n  }\n  function Ka(n) {\n    return n.stepSize;\n  }\n  function Ja(n) {\n    return n.snapToGrid;\n  }\n  function Qa(n) {\n    return n.snapStart;\n  }\n  function Za(n) {\n    return n.rounded;\n  }\n  function ns(n, e) {\n    return void 0 !== n[e + \"-edge\"];\n  }\n  function es(n) {\n    return ns(n, \"left\");\n  }\n  function ts(n) {\n    return ns(n, \"right\");\n  }\n  function os(n) {\n    return ns(n, \"top\");\n  }\n  function rs(n) {\n    return ns(n, \"bottom\");\n  }\n  function is(n) {\n    return n.model.value.get();\n  }\n  function us(n, e) {\n    return {\n      x: n,\n      y: e\n    };\n  }\n  function cs(n, e) {\n    X(n, xf(), {\n      value: e\n    });\n  }\n  function as(n, e, t, o) {\n    return n < e ? n : t < n ? t : n === e ? e - 1 : Math.max(e, n - o);\n  }\n  function ss(n, e, t, o) {\n    return t < n ? n : n < e ? e : n === t ? t + 1 : Math.min(t, n + o);\n  }\n  function fs(n, e, t) {\n    return Math.max(e, Math.min(t, n));\n  }\n  function ls(n) {\n    var e = n.min,\n      t = n.max,\n      o = n.range,\n      r = n.value,\n      i = n.step,\n      u = n.snap,\n      c = n.snapStart,\n      a = n.rounded,\n      s = n.hasMinEdge,\n      f = n.hasMaxEdge,\n      l = n.minBound,\n      d = n.maxBound,\n      m = n.screenRange,\n      g = s ? e - 1 : e,\n      p = f ? t + 1 : t;\n    if (r < l) return g;\n    if (d < r) return p;\n    var h,\n      v,\n      b,\n      y,\n      x,\n      w = fs((x = l, Math.min(d, Math.max(r, x)) - x) / m * o + e, g, p);\n    return u && e <= w && w <= t ? (h = w, v = e, b = t, y = i, c.fold(function () {\n      var n = Math.round((h - v) / y) * y;\n      return fs(v + n, v - 1, b + 1);\n    }, function (n) {\n      var e = Math.round((h - n) % y / y),\n        t = Math.floor((h - n) / y),\n        o = Math.floor((b - n) / y),\n        r = Math.min(o, t + e);\n      return Math.max(n, n + r * y);\n    })) : a ? Math.round(w) : w;\n  }\n  function ds(n) {\n    var e = n.min,\n      t = n.max,\n      o = n.range,\n      r = n.value,\n      i = n.hasMinEdge,\n      u = n.hasMaxEdge,\n      c = n.maxBound,\n      a = n.maxOffset,\n      s = n.centerMinEdge,\n      f = n.centerMaxEdge;\n    return r < e ? i ? 0 : s : t < r ? u ? c : f : (r - e) / o * a;\n  }\n  function ms(n) {\n    return n.element.dom.getBoundingClientRect();\n  }\n  function gs(n) {\n    return ms(n)[wf];\n  }\n  function ps(n) {\n    return ms(n).right;\n  }\n  function hs(n) {\n    return ms(n).top;\n  }\n  function vs(n) {\n    return ms(n).bottom;\n  }\n  function bs(n) {\n    return ms(n).width;\n  }\n  function ys(n) {\n    return ms(n).height;\n  }\n  function xs(n, e) {\n    var t = ms(n),\n      o = ms(e);\n    return (t[wf] + t.right) / 2 - o[wf];\n  }\n  function ws(n, e) {\n    var t = ms(n),\n      o = ms(e);\n    return (t.top + t.bottom) / 2 - o.top;\n  }\n  function Ss(n, e) {\n    X(n, xf(), {\n      value: e\n    });\n  }\n  function Os(n, e, t) {\n    return ls({\n      min: Na(e),\n      max: ja(e),\n      range: Wa(e),\n      value: t,\n      step: Ka(e),\n      snap: Ja(e),\n      snapStart: Qa(e),\n      rounded: Za(e),\n      hasMinEdge: es(e),\n      hasMaxEdge: ts(e),\n      minBound: gs(n),\n      maxBound: ps(n),\n      screenRange: bs(n)\n    });\n  }\n  function ks(r) {\n    return function (n, e) {\n      return Ss(n, {\n        x: o = (0 < r ? ss : as)(is(t = e).x, Na(t), ja(t), Ka(t))\n      }), mn.some(o).map(x);\n      var t, o;\n    };\n  }\n  function Ts(n, e, t, o, r, i) {\n    var u,\n      c,\n      a,\n      s,\n      f,\n      l,\n      d,\n      m,\n      g = (c = i, a = t, s = o, f = r, l = bs(u = e), d = s.bind(function (n) {\n        return mn.some(xs(n, u));\n      }).getOr(0), m = f.bind(function (n) {\n        return mn.some(xs(n, u));\n      }).getOr(l), ds({\n        min: Na(c),\n        max: ja(c),\n        range: Wa(c),\n        value: a,\n        hasMinEdge: es(c),\n        hasMaxEdge: ts(c),\n        minBound: gs(u),\n        minOffset: 0,\n        maxBound: ps(u),\n        maxOffset: l,\n        centerMinEdge: d,\n        centerMaxEdge: m\n      }));\n    return gs(e) - gs(n) + g;\n  }\n  function Cs(n, e) {\n    X(n, xf(), {\n      value: e\n    });\n  }\n  function Es(n, e, t) {\n    return ls({\n      min: Ha(e),\n      max: La(e),\n      range: Xa(e),\n      value: t,\n      step: Ka(e),\n      snap: Ja(e),\n      snapStart: Qa(e),\n      rounded: Za(e),\n      hasMinEdge: os(e),\n      hasMaxEdge: rs(e),\n      minBound: hs(n),\n      maxBound: vs(n),\n      screenRange: ys(n)\n    });\n  }\n  function Ds(r) {\n    return function (n, e) {\n      return Cs(n, {\n        y: o = (0 < r ? ss : as)(is(t = e).y, Ha(t), La(t), Ka(t))\n      }), mn.some(o).map(x);\n      var t, o;\n    };\n  }\n  function Ms(n, e, t, o, r, i) {\n    var u,\n      c,\n      a,\n      s,\n      f,\n      l,\n      d,\n      m,\n      g = (c = i, a = t, s = o, f = r, l = ys(u = e), d = s.bind(function (n) {\n        return mn.some(ws(n, u));\n      }).getOr(0), m = f.bind(function (n) {\n        return mn.some(ws(n, u));\n      }).getOr(l), ds({\n        min: Ha(c),\n        max: La(c),\n        range: Xa(c),\n        value: a,\n        hasMinEdge: os(c),\n        hasMaxEdge: rs(c),\n        minBound: hs(u),\n        minOffset: 0,\n        maxBound: vs(u),\n        maxOffset: l,\n        centerMinEdge: d,\n        centerMaxEdge: m\n      }));\n    return hs(e) - hs(n) + g;\n  }\n  function _s(n, e) {\n    X(n, xf(), {\n      value: e\n    });\n  }\n  function Rs(n, e) {\n    return {\n      x: n,\n      y: e\n    };\n  }\n  function Fs(u, c) {\n    return function (n, e) {\n      return o = e, r = 0 < u ? ss : as, _s(n, Rs(i = (t = c) ? is(o).x : r(is(o).x, Na(o), ja(o), Ka(o)), t ? r(is(o).y, Ha(o), La(o), Ka(o)) : is(o).y)), mn.some(i).map(x);\n      var t, o, r, i;\n    };\n  }\n  function Is(e, t, o, n) {\n    return nf(t, function () {\n      var n = o();\n      e.setContextToolbar([{\n        label: t + \" group\",\n        items: n\n      }]);\n    }, {}, n);\n  }\n  function Vs(n, o) {\n    var e = {\n      onChange: function onChange(n, e, t) {\n        o.undoManager.transact(function () {\n          o.formatter.apply(\"forecolor\", {\n            value: t\n          }), o.nodeChanged();\n        });\n      },\n      getInitialValue: w(-1)\n    };\n    return Is(n, \"color-levels\", function () {\n      return [(r = e, $f.sketch({\n        dom: Oa('<div class=\"${prefix}-slider ${prefix}-hue-slider-container\"></div>'),\n        components: [$f.parts[\"left-edge\"](ka('<div class=\"${prefix}-hue-slider-black\"></div>')), $f.parts.spectrum({\n          dom: Oa('<div class=\"${prefix}-slider-gradient-container\"></div>'),\n          components: [ka('<div class=\"${prefix}-slider-gradient\"></div>')],\n          behaviours: or([ii.config({\n            toggleClass: ci(\"thumb-active\")\n          })])\n        }), $f.parts[\"right-edge\"](ka('<div class=\"${prefix}-hue-slider-white\"></div>')), $f.parts.thumb({\n          dom: Oa('<div class=\"${prefix}-slider-thumb\"></div>'),\n          behaviours: or([ii.config({\n            toggleClass: ci(\"thumb-active\")\n          })])\n        })],\n        onChange: function onChange(n, e, t) {\n          var o = i(t.x());\n          $r(e.element, \"background-color\", o), r.onChange(n, e, o);\n        },\n        onDragStart: function onDragStart(n, e) {\n          ii.on(e);\n        },\n        onDragEnd: function onDragEnd(n, e) {\n          ii.off(e);\n        },\n        onInit: function onInit(n, e, t, o) {\n          var r = i(o.x());\n          $r(e.element, \"background-color\", r);\n        },\n        stepSize: 10,\n        model: {\n          mode: \"x\",\n          minX: 0,\n          maxX: 360,\n          getInitialValue: function getInitialValue() {\n            return {\n              x: r.getInitialValue()\n            };\n          }\n        },\n        sliderBehaviours: or([Nr($f.refresh)])\n      }))];\n      function i(n) {\n        return n < 0 ? \"black\" : 360 < n ? \"white\" : \"hsl(\" + n + \", 100%, 50%)\";\n      }\n      var r;\n    }, o);\n  }\n  function Bs(n) {\n    var e,\n      t,\n      o = n.selection.getStart(),\n      r = fe.fromDom(o),\n      i = fe.fromDom(n.getBody()),\n      u = (e = function e(n) {\n        return un(i, n);\n      }, (Xe(t = r) ? mn.some(t) : pe(t).filter(Xe)).map(function (n) {\n        return mi(function (n, e) {\n          return e(n);\n        }, gi, n, function (n) {\n          return Wr(n, \"font-size\").isSome();\n        }, e).bind(function (n) {\n          return Wr(n, \"font-size\");\n        }).getOrThunk(function () {\n          return Ur(n, \"font-size\");\n        });\n      }).getOr(\"\"));\n    return F(Gf, function (n) {\n      return u === n;\n    }).getOr(\"medium\");\n  }\n  function As(n) {\n    return [ka('<span class=\"${prefix}-toolbar-button ${prefix}-icon-small-font ${prefix}-icon\"></span>'), (e = {\n      onChange: n.onChange,\n      sizes: Xf,\n      category: \"font\",\n      getInitialValue: n.getInitialValue\n    }, r = zt(\"SizeSlider\", Wf, e), $f.sketch({\n      dom: {\n        tag: \"div\",\n        classes: [ci(\"slider-\" + r.category + \"-size-container\"), ci(\"slider\"), ci(\"slider-size-container\")]\n      },\n      onChange: function onChange(n, e, t) {\n        var o = t.x();\n        0 <= o && o < r.sizes.length && r.onChange(o);\n      },\n      onDragStart: function onDragStart(n, e) {\n        ii.on(e);\n      },\n      onDragEnd: function onDragEnd(n, e) {\n        ii.off(e);\n      },\n      model: {\n        mode: \"x\",\n        minX: 0,\n        maxX: r.sizes.length - 1,\n        getInitialValue: function getInitialValue() {\n          return {\n            x: r.getInitialValue()\n          };\n        }\n      },\n      stepSize: 1,\n      snapToGrid: !0,\n      sliderBehaviours: or([Nr($f.refresh)]),\n      components: [$f.parts.spectrum({\n        dom: Oa('<div class=\"${prefix}-slider-size-container\"></div>'),\n        components: [ka('<div class=\"${prefix}-slider-size-line\"></div>')]\n      }), $f.parts.thumb({\n        dom: Oa('<div class=\"${prefix}-slider-thumb\"></div>'),\n        behaviours: or([ii.config({\n          toggleClass: ci(\"thumb-active\")\n        })])\n      })]\n    })), ka('<span class=\"${prefix}-toolbar-button ${prefix}-icon-large-font ${prefix}-icon\"></span>')];\n    var e, r;\n  }\n  function Ns(n) {\n    var e = void 0 !== n.uid && Re(n, \"uid\") ? n.uid : qs(\"memento\");\n    return {\n      get: function get(n) {\n        return n.getSystem().getByUid(e).getOrDie();\n      },\n      getOpt: function getOpt(n) {\n        return n.getSystem().getByUid(e).toOptional();\n      },\n      asSpec: function asSpec() {\n        return _y(_y({}, n), {\n          uid: e\n        });\n      }\n    };\n  }\n  Wu(Jc.external, ua);\n  var Hs = Wu(Jc.optional, ca),\n    Ps = Wu(Jc.group, aa),\n    zs = w(\"entirety\"),\n    js = function js(n, e) {\n      return {\n        uiType: Yc(),\n        owner: n,\n        name: e\n      };\n    },\n    Ls = Gu(\"alloy-premade\"),\n    $s = w(\"alloy-id-\"),\n    Gs = w(\"data-alloy-id\"),\n    Us = $s(),\n    Ws = Gs(),\n    Xs = function Xs(n, e) {\n      Object.defineProperty(n.dom, Ws, {\n        value: e,\n        writable: !0\n      });\n    },\n    qs = Gu,\n    Ys = function Ys(n) {\n      return dt(n, \"uid\") ? n : _y(_y({}, n), {\n        uid: qs(\"uid\")\n      });\n    },\n    Ks = It([Lt(\"name\"), Lt(\"factory\"), Lt(\"configFields\"), Yt(\"apis\", {}), Yt(\"extraApis\", {})]),\n    Js = It([Lt(\"name\"), Lt(\"factory\"), Lt(\"configFields\"), Lt(\"partFields\"), Yt(\"apis\", {}), Yt(\"extraApis\", {})]),\n    Qs = wa({\n      name: \"Button\",\n      factory: function factory(n) {\n        function t(e) {\n          return _e(n.dom, \"attributes\").bind(function (n) {\n            return _e(n, e);\n          });\n        }\n        var e,\n          o = (e = n.action, qo(V([e.map(function (t) {\n            return Qo(function (n, e) {\n              t(n), e.stop();\n            });\n          }).toArray(), Pr()]))),\n          r = n.dom.tag;\n        return {\n          uid: n.uid,\n          dom: n.dom,\n          components: n.components,\n          events: o,\n          behaviours: $c(n.buttonBehaviours, [fi.config({}), jc.config({\n            mode: \"execution\",\n            useSpace: !0,\n            useEnter: !0\n          })]),\n          domModification: {\n            attributes: function () {\n              if (\"button\" !== r) return {\n                role: t(\"role\").getOr(\"button\")\n              };\n              var n = t(\"type\").getOr(\"button\"),\n                e = t(\"role\").map(function (n) {\n                  return {\n                    role: n\n                  };\n                }).getOr({});\n              return _y({\n                type: n\n              }, e);\n            }()\n          },\n          eventOrder: n.eventOrder\n        };\n      },\n      configFields: [Yt(\"uid\", void 0), Lt(\"dom\"), Yt(\"components\", []), Lc(\"buttonBehaviours\", [fi, jc]), Ut(\"action\"), Ut(\"role\"), Yt(\"eventOrder\", {})]\n    }),\n    Zs = Ao({\n      fields: [],\n      name: \"unselecting\",\n      active: Object.freeze({\n        __proto__: null,\n        events: function events() {\n          return qo([Co(Xn(), x)]);\n        },\n        exhibit: function exhibit() {\n          return Io({\n            styles: {\n              \"-webkit-user-select\": \"none\",\n              \"user-select\": \"none\",\n              \"-ms-user-select\": \"none\",\n              \"-moz-user-select\": \"-moz-none\"\n            },\n            attributes: {\n              unselectable: \"on\"\n            }\n          });\n        }\n      })\n    }),\n    nf = function nf(n, e, t, o) {\n      return Qs.sketch({\n        dom: Ea(n, o),\n        action: e,\n        buttonBehaviours: co(or([Zs.config({})]), t)\n      });\n    },\n    ef = Hs({\n      schema: [Lt(\"dom\")],\n      name: \"label\"\n    }),\n    tf = Da(\"top-left\"),\n    of = Da(\"top\"),\n    rf = Da(\"top-right\"),\n    uf = Da(\"right\"),\n    cf = Da(\"bottom-right\"),\n    af = Da(\"bottom\"),\n    sf = Da(\"bottom-left\"),\n    ff = [ef, Da(\"left\"), uf, of, af, tf, rf, sf, cf, sa({\n      name: \"thumb\",\n      defaults: w({\n        dom: {\n          styles: {\n            position: \"absolute\"\n          }\n        }\n      }),\n      overrides: function overrides(n) {\n        return {\n          events: qo([_o(Vn(), n, \"spectrum\"), _o(Bn(), n, \"spectrum\"), _o(An(), n, \"spectrum\"), _o(Nn(), n, \"spectrum\"), _o(Hn(), n, \"spectrum\"), _o(Pn(), n, \"spectrum\")])\n        };\n      }\n    }), sa({\n      schema: [vo(\"mouseIsDown\", function () {\n        return No(!1);\n      })],\n      name: \"spectrum\",\n      overrides: function overrides(t) {\n        function o(e, n) {\n          return r.getValueFromEvent(n).map(function (n) {\n            return r.setValueFrom(e, t, n);\n          });\n        }\n        var r = t.model.manager;\n        return {\n          behaviours: or([jc.config({\n            mode: \"special\",\n            onLeft: function onLeft(n) {\n              return r.onLeft(n, t);\n            },\n            onRight: function onRight(n) {\n              return r.onRight(n, t);\n            },\n            onUp: function onUp(n) {\n              return r.onUp(n, t);\n            },\n            onDown: function onDown(n) {\n              return r.onDown(n, t);\n            }\n          }), fi.config({})]),\n          events: qo([Eo(Vn(), o), Eo(Bn(), o), Eo(Nn(), o), Eo(Hn(), function (n, e) {\n            t.mouseIsDown.get() && o(n, e);\n          })])\n        };\n      }\n    })],\n    lf = Object.freeze({\n      __proto__: null,\n      onLoad: Ma,\n      onUnload: _a,\n      setValue: function setValue(n, e, t, o) {\n        e.store.manager.setValue(n, e, t, o);\n      },\n      getValue: function getValue(n, e, t) {\n        return e.store.manager.getValue(n, e, t);\n      },\n      getState: function getState(n, e, t) {\n        return t;\n      }\n    }),\n    df = Object.freeze({\n      __proto__: null,\n      events: function events(t, o) {\n        var n = t.resetOnDom ? [Yo(function (n, e) {\n          Ma(n, t, o);\n        }), Ko(function (n, e) {\n          _a(n, t, o);\n        })] : [Vo(t, o, Ma)];\n        return qo(n);\n      }\n    }),\n    mf = Object.freeze({\n      __proto__: null,\n      memory: Ra,\n      dataset: Fa,\n      manual: function manual() {\n        return tr({\n          readState: Y\n        });\n      },\n      init: function init(n) {\n        return n.store.manager.state(n);\n      }\n    }),\n    gf = [Ut(\"initialValue\"), Lt(\"getFallbackEntry\"), Lt(\"getDataKey\"), Lt(\"setValue\"), Dr(\"manager\", {\n      setValue: Ia,\n      getValue: function getValue(n, e, t) {\n        var o = e.store,\n          r = o.getDataKey(n);\n        return t.lookup(r).getOrThunk(function () {\n          return o.getFallbackEntry(r);\n        });\n      },\n      onLoad: function onLoad(e, t, o) {\n        t.store.initialValue.each(function (n) {\n          Ia(e, t, o, n);\n        });\n      },\n      onUnload: function onUnload(n, e, t) {\n        t.clear();\n      },\n      state: Fa\n    })],\n    pf = [Lt(\"getValue\"), Yt(\"setValue\", Y), Ut(\"initialValue\"), Dr(\"manager\", {\n      setValue: function setValue(n, e, t, o) {\n        e.store.setValue(n, o), e.onSetValue(n, o);\n      },\n      getValue: function getValue(n, e, t) {\n        return e.store.getValue(n);\n      },\n      onLoad: function onLoad(e, t, n) {\n        t.store.initialValue.each(function (n) {\n          t.store.setValue(e, n);\n        });\n      },\n      onUnload: Y,\n      state: er.init\n    })],\n    hf = Ao({\n      fields: [Kt(\"store\", {\n        mode: \"memory\"\n      }, jt(\"mode\", {\n        memory: [Ut(\"initialValue\"), Dr(\"manager\", {\n          setValue: function setValue(n, e, t, o) {\n            t.set(o), e.onSetValue(n, o);\n          },\n          getValue: function getValue(n, e, t) {\n            return t.get();\n          },\n          onLoad: function onLoad(n, e, t) {\n            e.store.initialValue.each(function (n) {\n              t.isNotSet() && t.set(n);\n            });\n          },\n          onUnload: function onUnload(n, e, t) {\n            t.clear();\n          },\n          state: Ra\n        })],\n        manual: pf,\n        dataset: gf\n      })), kr(\"onSetValue\"), Yt(\"resetOnDom\", !1)],\n      name: \"representing\",\n      active: df,\n      apis: lf,\n      extra: {\n        setValueFrom: function setValueFrom(n, e) {\n          var t = hf.getValue(e);\n          hf.setValue(n, t);\n        }\n      },\n      state: mf\n    }),\n    vf = Yr(\"width\", function (n) {\n      return n.dom.offsetWidth;\n    }),\n    bf = function bf(t, o) {\n      return {\n        left: t,\n        top: o,\n        translate: function translate(n, e) {\n          return bf(t + n, o + e);\n        }\n      };\n    },\n    yf = bf,\n    xf = w(\"slider.change.value\"),\n    wf = \"left\",\n    Sf = ks(-1),\n    Of = ks(1),\n    kf = mn.none,\n    Tf = mn.none,\n    Cf = {\n      \"top-left\": mn.none(),\n      top: mn.none(),\n      \"top-right\": mn.none(),\n      right: mn.some(function (n, e) {\n        cs(n, {\n          x: $a(e)\n        });\n      }),\n      \"bottom-right\": mn.none(),\n      bottom: mn.none(),\n      \"bottom-left\": mn.none(),\n      left: mn.some(function (n, e) {\n        cs(n, {\n          x: Pa(e)\n        });\n      })\n    },\n    Ef = Object.freeze({\n      __proto__: null,\n      setValueFrom: function setValueFrom(n, e, t) {\n        var o = Os(n, e, t);\n        return Ss(n, {\n          x: o\n        }), o;\n      },\n      setToMin: function setToMin(n, e) {\n        Ss(n, {\n          x: Na(e)\n        });\n      },\n      setToMax: function setToMax(n, e) {\n        Ss(n, {\n          x: ja(e)\n        });\n      },\n      findValueOfOffset: Os,\n      getValueFromEvent: function getValueFromEvent(n) {\n        return Aa(n).map(function (n) {\n          return n.left;\n        });\n      },\n      findPositionOfValue: Ts,\n      setPositionFromValue: function setPositionFromValue(n, e, t, o) {\n        var r = is(t),\n          i = Ts(n, o.getSpectrum(n), r.x, o.getLeftEdge(n), o.getRightEdge(n), t),\n          u = Ba(e.element) / 2;\n        $r(e.element, \"left\", i - u + \"px\");\n      },\n      onLeft: Sf,\n      onRight: Of,\n      onUp: kf,\n      onDown: Tf,\n      edgeActions: Cf\n    }),\n    Df = mn.none,\n    Mf = mn.none,\n    _f = Ds(-1),\n    Rf = Ds(1),\n    Ff = {\n      \"top-left\": mn.none(),\n      top: mn.some(function (n, e) {\n        cs(n, {\n          y: za(e)\n        });\n      }),\n      \"top-right\": mn.none(),\n      right: mn.none(),\n      \"bottom-right\": mn.none(),\n      bottom: mn.some(function (n, e) {\n        cs(n, {\n          y: Ga(e)\n        });\n      }),\n      \"bottom-left\": mn.none(),\n      left: mn.none()\n    },\n    If = Object.freeze({\n      __proto__: null,\n      setValueFrom: function setValueFrom(n, e, t) {\n        var o = Es(n, e, t);\n        return Cs(n, {\n          y: o\n        }), o;\n      },\n      setToMin: function setToMin(n, e) {\n        Cs(n, {\n          y: Ha(e)\n        });\n      },\n      setToMax: function setToMax(n, e) {\n        Cs(n, {\n          y: La(e)\n        });\n      },\n      findValueOfOffset: Es,\n      getValueFromEvent: function getValueFromEvent(n) {\n        return Aa(n).map(function (n) {\n          return n.top;\n        });\n      },\n      findPositionOfValue: Ms,\n      setPositionFromValue: function setPositionFromValue(n, e, t, o) {\n        var r = is(t),\n          i = Ms(n, o.getSpectrum(n), r.y, o.getTopEdge(n), o.getBottomEdge(n), t),\n          u = Kr(e.element) / 2;\n        $r(e.element, \"top\", i - u + \"px\");\n      },\n      onLeft: Df,\n      onRight: Mf,\n      onUp: _f,\n      onDown: Rf,\n      edgeActions: Ff\n    }),\n    Vf = Aa,\n    Bf = Fs(-1, !1),\n    Af = Fs(1, !1),\n    Nf = Fs(-1, !0),\n    Hf = Fs(1, !0),\n    Pf = {\n      \"top-left\": mn.some(function (n, e) {\n        cs(n, us(Pa(e), za(e)));\n      }),\n      top: mn.some(function (n, e) {\n        cs(n, us(qa(e), za(e)));\n      }),\n      \"top-right\": mn.some(function (n, e) {\n        cs(n, us($a(e), za(e)));\n      }),\n      right: mn.some(function (n, e) {\n        cs(n, us($a(e), Ya(e)));\n      }),\n      \"bottom-right\": mn.some(function (n, e) {\n        cs(n, us($a(e), Ga(e)));\n      }),\n      bottom: mn.some(function (n, e) {\n        cs(n, us(qa(e), Ga(e)));\n      }),\n      \"bottom-left\": mn.some(function (n, e) {\n        cs(n, us(Pa(e), Ga(e)));\n      }),\n      left: mn.some(function (n, e) {\n        cs(n, us(Pa(e), Ya(e)));\n      })\n    },\n    zf = Object.freeze({\n      __proto__: null,\n      setValueFrom: function setValueFrom(n, e, t) {\n        var o = Rs(Os(n, e, t.left), Es(n, e, t.top));\n        return _s(n, o), o;\n      },\n      setToMin: function setToMin(n, e) {\n        _s(n, Rs(Na(e), Ha(e)));\n      },\n      setToMax: function setToMax(n, e) {\n        _s(n, Rs(ja(e), La(e)));\n      },\n      getValueFromEvent: Vf,\n      setPositionFromValue: function setPositionFromValue(n, e, t, o) {\n        var r = is(t),\n          i = Ts(n, o.getSpectrum(n), r.x, o.getLeftEdge(n), o.getRightEdge(n), t),\n          u = Ms(n, o.getSpectrum(n), r.y, o.getTopEdge(n), o.getBottomEdge(n), t),\n          c = Ba(e.element) / 2,\n          a = Kr(e.element) / 2;\n        $r(e.element, \"left\", i - c + \"px\"), $r(e.element, \"top\", u - a + \"px\");\n      },\n      onLeft: Bf,\n      onRight: Af,\n      onUp: Nf,\n      onDown: Hf,\n      edgeActions: Pf\n    }),\n    jf = [Yt(\"stepSize\", 1), Yt(\"onChange\", Y), Yt(\"onChoose\", Y), Yt(\"onInit\", Y), Yt(\"onDragStart\", Y), Yt(\"onDragEnd\", Y), Yt(\"snapToGrid\", !1), Yt(\"rounded\", !0), Ut(\"snapStart\"), $t(\"model\", jt(\"mode\", {\n      x: [Yt(\"minX\", 0), Yt(\"maxX\", 100), vo(\"value\", function (n) {\n        return No(n.mode.minX);\n      }), Lt(\"getInitialValue\"), Dr(\"manager\", Ef)],\n      y: [Yt(\"minY\", 0), Yt(\"maxY\", 100), vo(\"value\", function (n) {\n        return No(n.mode.minY);\n      }), Lt(\"getInitialValue\"), Dr(\"manager\", If)],\n      xy: [Yt(\"minX\", 0), Yt(\"maxX\", 100), Yt(\"minY\", 0), Yt(\"maxY\", 100), vo(\"value\", function (n) {\n        return No({\n          x: n.mode.minX,\n          y: n.mode.minY\n        });\n      }), Lt(\"getInitialValue\"), Dr(\"manager\", zf)]\n    })), ju(\"sliderBehaviours\", [jc, hf]), vo(\"mouseIsDown\", function () {\n      return No(!1);\n    })],\n    Lf = w(\"mouse.released\"),\n    $f = Sa({\n      name: \"Slider\",\n      configFields: jf,\n      partFields: ff,\n      factory: function factory(i, n, e, t) {\n        function u(n) {\n          return ga(n, i, \"thumb\");\n        }\n        function c(n) {\n          return ga(n, i, \"spectrum\");\n        }\n        function o(n) {\n          return ma(n, i, \"left-edge\");\n        }\n        function r(n) {\n          return ma(n, i, \"right-edge\");\n        }\n        function a(n) {\n          return ma(n, i, \"top-edge\");\n        }\n        function s(n) {\n          return ma(n, i, \"bottom-edge\");\n        }\n        function f(n, e) {\n          v.setPositionFromValue(n, e, i, {\n            getLeftEdge: o,\n            getRightEdge: r,\n            getTopEdge: a,\n            getBottomEdge: s,\n            getSpectrum: c\n          });\n        }\n        function l(n, e) {\n          h.value.set(e), f(n, u(n));\n        }\n        function d(t) {\n          var n = i.mouseIsDown.get();\n          i.mouseIsDown.set(!1), n && ma(t, i, \"thumb\").each(function (n) {\n            var e = h.value.get();\n            i.onChoose(t, n, e);\n          });\n        }\n        function m(n, e) {\n          e.stop(), i.mouseIsDown.set(!0), i.onDragStart(n, u(n));\n        }\n        function g(n, e) {\n          e.stop(), i.onDragEnd(n, u(n)), d(n);\n        }\n        var p,\n          h = i.model,\n          v = h.manager;\n        return {\n          uid: i.uid,\n          dom: i.dom,\n          components: n,\n          behaviours: Lu(i.sliderBehaviours, [jc.config({\n            mode: \"special\",\n            focusIn: function focusIn(n) {\n              return ma(n, i, \"spectrum\").map(jc.focusIn).map(x);\n            }\n          }), hf.config({\n            store: {\n              mode: \"manual\",\n              getValue: function getValue(n) {\n                return h.value.get();\n              }\n            }\n          }), ti.config({\n            channels: ((p = {})[Lf()] = {\n              onReceive: d\n            }, p)\n          })]),\n          events: qo([Eo(xf(), function (n, e) {\n            !function (n, e) {\n              l(n, e);\n              var t = u(n);\n              i.onChange(n, t, e), mn.some(!0);\n            }(n, e.event.value);\n          }), Yo(function (n, e) {\n            var t = h.getInitialValue();\n            h.value.set(t);\n            var o = u(n);\n            f(n, o);\n            var r = c(n);\n            i.onInit(n, o, r, h.value.get());\n          }), Eo(Vn(), m), Eo(An(), g), Eo(Nn(), m), Eo(Pn(), g)]),\n          apis: {\n            resetToMin: function resetToMin(n) {\n              v.setToMin(n, i);\n            },\n            resetToMax: function resetToMax(n) {\n              v.setToMax(n, i);\n            },\n            setValue: l,\n            refresh: f\n          },\n          domModification: {\n            styles: {\n              position: \"relative\"\n            }\n          }\n        };\n      },\n      apis: {\n        setValue: function setValue(n, e, t) {\n          n.setValue(e, t);\n        },\n        resetToMin: function resetToMin(n, e) {\n          n.resetToMin(e);\n        },\n        resetToMax: function resetToMax(n, e) {\n          n.resetToMax(e);\n        },\n        refresh: function refresh(n, e) {\n          n.refresh(e);\n        }\n      }\n    }),\n    Gf = [\"9px\", \"10px\", \"11px\", \"12px\", \"14px\", \"16px\", \"18px\", \"20px\", \"24px\", \"32px\", \"36px\"],\n    Uf = w(Gf),\n    Wf = It([Lt(\"getInitialValue\"), Lt(\"onChange\"), Lt(\"category\"), Lt(\"sizes\")]),\n    Xf = Uf(),\n    qf = {},\n    Yf = {\n      exports: qf\n    };\n  function Kf(u) {\n    var e = Ns({\n      dom: {\n        tag: \"input\",\n        attributes: {\n          accept: \"image/*\",\n          type: \"file\",\n          title: \"\"\n        },\n        styles: {\n          visibility: \"hidden\",\n          position: \"absolute\"\n        }\n      },\n      events: qo([Ro(Un()), Eo(Gn(), function (n, e) {\n        var t = e.event.raw,\n          o = t.target.files || t.dataTransfer.files;\n        mn.from(o[0]).each(function (n) {\n          var r,\n            t,\n            i = u;\n          r = n, t = r, new Jl(function (n) {\n            var e = new FileReader();\n            e.onloadend = function () {\n              n(e.result);\n            }, e.readAsDataURL(t);\n          }).then(function (n) {\n            return n.split(\",\")[1];\n          }).then(function (o) {\n            i.undoManager.transact(function () {\n              var n = i.editorUpload.blobCache,\n                e = n.create(Gu(\"mceu\"), r, o);\n              n.add(e);\n              var t = i.dom.createHTML(\"img\", {\n                src: e.blobUri()\n              });\n              i.insertContent(t);\n            });\n          });\n        });\n      })])\n    });\n    return Qs.sketch({\n      dom: Ea(\"image\", u),\n      components: [e.asSpec()],\n      action: function action(n) {\n        e.get(n).element.dom.click();\n      }\n    });\n  }\n  function Jf(n) {\n    return n.dom.textContent;\n  }\n  function Qf(n) {\n    return 0 < n.length;\n  }\n  function Zf(n) {\n    return null == n ? \"\" : n;\n  }\n  function nl(t, u) {\n    u.url.toOptional().filter(Qf).fold(function () {\n      var e = t;\n      u.link.bind(K).each(function (n) {\n        e.execCommand(\"unlink\");\n      });\n    }, function (r) {\n      var n,\n        e,\n        i = (n = u, (e = {}).href = r, n.title.toOptional().filter(Qf).each(function (n) {\n          e.title = n;\n        }), n.target.toOptional().filter(Qf).each(function (n) {\n          e.target = n;\n        }), e);\n      u.link.bind(K).fold(function () {\n        var n = u.text.toOptional().filter(Qf).getOr(r);\n        t.insertContent(t.dom.createHTML(\"a\", i, t.dom.encode(n)));\n      }, function (e) {\n        var t,\n          o,\n          n = (t = e, o = r, u.text.toOptional().filter(Qf).fold(function () {\n            return Be(n = t, \"href\") === Jf(n) ? mn.some(o) : mn.none();\n            var n;\n          }, mn.some));\n        Ve(e, i), n.each(function (n) {\n          e.dom.textContent = n;\n        });\n      });\n    });\n  }\n  function el(n, e) {\n    var t, o;\n    return {\n      key: n,\n      value: {\n        config: {},\n        me: (t = n, o = qo(e), Ao({\n          fields: [Lt(\"enabled\")],\n          name: t,\n          active: {\n            events: w(o)\n          }\n        })),\n        configAsRaw: w({}),\n        initialConfig: {},\n        state: er\n      }\n    };\n  }\n  function tl(n) {\n    return n.dom.value;\n  }\n  function ol(n, e) {\n    if (void 0 === e) throw new Error(\"Value.set was undefined\");\n    n.dom.value = e;\n  }\n  function rl(n, e) {\n    var t = Ns(rd.sketch({\n        inputAttributes: {\n          placeholder: cd.translate(e)\n        },\n        onSetValue: function onSetValue(n, e) {\n          W(n, $n());\n        },\n        inputBehaviours: or([ed.config({\n          find: mn.some\n        }), ud.config({}), jc.config({\n          mode: \"execution\"\n        })]),\n        selectOnFocus: !1\n      })),\n      o = Ns(Qs.sketch({\n        dom: Oa('<button class=\"${prefix}-input-container-x ${prefix}-icon-cancel-circle ${prefix}-icon\"></button>'),\n        action: function action(n) {\n          var e = t.get(n);\n          hf.setValue(e, \"\");\n        }\n      }));\n    return {\n      name: n,\n      spec: td.sketch({\n        dom: Oa('<div class=\"${prefix}-input-container\"></div>'),\n        components: [t.asSpec(), o.asSpec()],\n        containerBehaviours: or([ii.config({\n          toggleClass: ci(\"input-container-empty\")\n        }), ed.config({\n          find: function find(n) {\n            return mn.some(t.get(n));\n          }\n        }), el(\"input-clearing\", [Eo($n(), function (n) {\n          var e = t.get(n);\n          (0 < hf.getValue(e).length ? ii.off : ii.on)(n);\n        })])])\n      })\n    };\n  }\n  function il(n, e, t) {\n    (e.disabled() ? sd : fd)(n, e);\n  }\n  function ul(n, e) {\n    return !0 === e.useNative && T(ad, le(n.element));\n  }\n  function cl(n, e) {\n    return ul(n, e) ? Ne(n.element, \"disabled\") : \"true\" === Be(n.element, \"aria-disabled\");\n  }\n  function al(n) {\n    return \"<alloy.field.\" + n + \">\";\n  }\n  function sl(o, r) {\n    return Ca(r, \"link\", \"link\", function () {\n      var n,\n        e,\n        t = hd(o, r);\n      o.setContextToolbar(t), n = r, e = function e() {\n        o.focusToolbar();\n      }, (Zl.os.isAndroid() ? function (n, e) {\n        var t = e.selection.getRng();\n        n(), e.selection.setRng(t);\n      } : p)(e, n), Ql(r).each(function (n) {\n        r.selection.select(n.dom);\n      });\n    });\n  }\n  function fl(e) {\n    function t(n) {\n      return \"The component must be in a context to execute: \" + n + (e ? \"\\n\" + $o(e().element) + \" is not in context.\" : \"\");\n    }\n    function n(n) {\n      return function () {\n        throw new Error(t(n));\n      };\n    }\n    function o(n) {\n      return function () {\n        console.warn(t(n));\n      };\n    }\n    return {\n      debugInfo: w(\"fake\"),\n      triggerEvent: o(\"triggerEvent\"),\n      triggerFocus: o(\"triggerFocus\"),\n      triggerEscape: o(\"triggerEscape\"),\n      broadcast: o(\"broadcast\"),\n      broadcastOn: o(\"broadcastOn\"),\n      broadcastEvent: o(\"broadcastEvent\"),\n      build: n(\"build\"),\n      addToWorld: n(\"addToWorld\"),\n      removeFromWorld: n(\"removeFromWorld\"),\n      addToGui: n(\"addToGui\"),\n      removeFromGui: n(\"removeFromGui\"),\n      getByUid: n(\"getByUid\"),\n      getByDom: n(\"getByDom\"),\n      isConnected: S\n    };\n  }\n  function ll(n, r) {\n    var i = {};\n    return Ee(n, function (n, o) {\n      Ee(n, function (n, e) {\n        var t = _e(i, e).getOr([]);\n        i[e] = t.concat([r(o, n)]);\n      });\n    }), i;\n  }\n  function dl(n) {\n    return n.cHandler;\n  }\n  function ml(n, e) {\n    return {\n      name: n,\n      handler: e\n    };\n  }\n  function gl(n, e, t) {\n    var o = e[t];\n    return o ? function (u, c, n, a) {\n      try {\n        var e = (t = function t(n, e) {\n          var t = n[c],\n            o = e[c],\n            r = a.indexOf(t),\n            i = a.indexOf(o);\n          if (-1 === r) throw new Error(\"The ordering for \" + u + \" does not have an entry for \" + t + \".\\nOrder specified: \" + JSON.stringify(a, null, 2));\n          if (-1 === i) throw new Error(\"The ordering for \" + u + \" does not have an entry for \" + o + \".\\nOrder specified: \" + JSON.stringify(a, null, 2));\n          return r < i ? -1 : i < r ? 1 : 0;\n        }, (o = gn.call(n, 0)).sort(t), o);\n        return ht.value(e);\n      } catch (n) {\n        return ht.error([n]);\n      }\n      var t, o;\n    }(\"Event: \" + t, \"name\", n, o).map(function (n) {\n      var t,\n        e,\n        o,\n        r,\n        i = Z(n, function (n) {\n          return n.handler;\n        });\n      return {\n        can: function can() {\n          for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];\n          return R(e, function (n, e) {\n            return n && e.can.apply(void 0, t);\n          }, !0);\n        },\n        abort: (o = e = t = i, r = function r(n) {\n          return n.abort;\n        }, function () {\n          for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];\n          return R(o, function (n, e) {\n            return n || r(e).apply(void 0, t);\n          }, !1);\n        }),\n        run: function run() {\n          for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];\n          M(t, function (n) {\n            n.run.apply(void 0, e);\n          });\n        }\n      };\n    }) : ht.error([\"The event (\" + t + ') has more than one behaviour that listens to it.\\nWhen this occurs, you must specify an event ordering for the behaviours in your spec (e.g. [ \"listing\", \"toggling\" ]).\\nThe behaviours that can trigger it are: ' + JSON.stringify(Z(n, function (n) {\n      return n.name;\n    }), null, 2)]);\n  }\n  function pl(e, n) {\n    M(n, function (n) {\n      je(e, n);\n    });\n  }\n  function hl(e, n) {\n    M(n, function (n) {\n      Le(e, n);\n    });\n  }\n  function vl(n) {\n    var t,\n      e,\n      o,\n      r,\n      i = (t = _e(n, \"behaviours\").getOr({}), B(st(t), function (n) {\n        var e = t[n];\n        return l(e) ? [e.me] : [];\n      }));\n    return e = n, r = Z(o = i, function (n) {\n      return Xt(n.name(), [Lt(\"config\"), Yt(\"state\", er)]);\n    }), {\n      list: o,\n      data: De(Ht(\"component.behaviours\", lo(r), e.behaviours).fold(function (n) {\n        throw new Error(po(n) + \"\\nComplete spec:\\n\" + JSON.stringify(e, null, 2));\n      }, K), function (n) {\n        return w(n.map(function (n) {\n          return {\n            config: n.config,\n            state: n.state.init(n.config)\n          };\n        }));\n      })\n    };\n  }\n  function bl(n, e, t) {\n    var o,\n      r,\n      i = _y(_y({}, (o = n).dom), {\n        uid: o.uid,\n        domChildren: Z(o.components, function (n) {\n          return n.element;\n        })\n      }),\n      u = n.domModification.fold(function () {\n        return Io({});\n      }, Io),\n      c = 0 < e.length ? function (e, n, t, o) {\n        var r = _y({}, n);\n        function i(n) {\n          return _(n, function (n, e) {\n            return _y(_y({}, e.modification), n);\n          }, {});\n        }\n        M(t, function (n) {\n          r[n.name()] = n.exhibit(e, o);\n        });\n        var u = ll(r, function (n, e) {\n          return {\n            name: n,\n            modification: e\n          };\n        });\n        return Io({\n          classes: _(u.classes, function (n, e) {\n            return e.modification.concat(n);\n          }, []),\n          attributes: i(u.attributes),\n          styles: i(u.styles)\n        });\n      }(t, {\n        \"alloy.base.modification\": u\n      }, e, i) : u;\n    return _y(_y({}, r = i), {\n      attributes: _y(_y({}, r.attributes), c.attributes),\n      styles: _y(_y({}, r.styles), c.styles),\n      classes: r.classes.concat(c.classes)\n    });\n  }\n  function yl(n, e, t) {\n    var o,\n      r,\n      i,\n      u,\n      c,\n      a = {\n        \"alloy.base.behaviour\": n.events\n      },\n      s = n.eventOrder;\n    return r = t, i = e, o = ll(_y(_y({}, a), (u = r, c = {}, M(i, function (n) {\n      c[n.name()] = n.handlers(u);\n    }), c)), ml), wd(o, s).getOrDie();\n  }\n  function xl(t) {\n    function n() {\n      return f;\n    }\n    var e = No(xd),\n      o = Pt(Ht(\"custom.definition\", Od, t)),\n      r = vl(t),\n      i = r.list,\n      u = r.data,\n      c = function (n) {\n        var c = fe.fromTag(n.tag);\n        Ve(c, n.attributes), pl(c, n.classes), Gr(c, n.styles), n.innerHtml.each(function (n) {\n          return t = n, i = me(e = c).dom, xe(u = fe.fromDom(i.createDocumentFragment()), (o = t, (r = (i || document).createElement(\"div\")).innerHTML = o, Je(fe.fromDom(r)))), we(e), void Qe(e, u);\n          var e, t, o, r, i, u;\n        });\n        var e = n.domChildren;\n        return xe(c, e), n.value.each(function (n) {\n          ol(c, n);\n        }), n.uid, Xs(c, n.uid), c;\n      }(bl(o, i, u)),\n      a = yl(o, i, u),\n      s = No(o.components),\n      f = {\n        uid: t.uid,\n        getSystem: e.get,\n        config: function config(n) {\n          var e = u;\n          return (m(e[n.name()]) ? e[n.name()] : function () {\n            throw new Error(\"Could not find \" + n.name() + \" in \" + JSON.stringify(t, null, 2));\n          })();\n        },\n        hasConfigured: function hasConfigured(n) {\n          return m(u[n.name()]);\n        },\n        spec: t,\n        readState: function readState(n) {\n          return u[n]().map(function (n) {\n            return n.state.readState();\n          }).getOr(\"not enabled\");\n        },\n        getApis: function getApis() {\n          return o.apis;\n        },\n        connect: function connect(n) {\n          e.set(n);\n        },\n        disconnect: function disconnect() {\n          e.set(fl(n));\n        },\n        element: c,\n        syncComponents: function syncComponents() {\n          var n = B(Je(c), function (n) {\n            return e.get().getByDom(n).fold(function () {\n              return [];\n            }, P);\n          });\n          s.set(n);\n        },\n        components: s.get,\n        events: a\n      };\n    return f;\n  }\n  function wl(n) {\n    return function (n) {\n      var e = zt(\"external.component\", It([Lt(\"element\"), Ut(\"uid\")]), n),\n        t = No(fl()),\n        o = e.uid.getOrThunk(function () {\n          return qs(\"external\");\n        });\n      Xs(e.element, o);\n      var r = {\n        uid: o,\n        getSystem: t.get,\n        config: mn.none,\n        hasConfigured: S,\n        connect: function connect(n) {\n          t.set(n);\n        },\n        disconnect: function disconnect() {\n          t.set(fl(function () {\n            return r;\n          }));\n        },\n        getApis: function getApis() {\n          return {};\n        },\n        element: e.element,\n        spec: n,\n        readState: w(\"No state\"),\n        syncComponents: Y,\n        components: w([]),\n        events: {}\n      };\n      return ha(r);\n    }({\n      element: fe.fromText(n)\n    });\n  }\n  function Sl(n) {\n    (jo(n.element).isNone() || fi.isFocused(n)) && (fi.isFocused(n) || fi.focus(n), X(n, Ed, {\n      item: n\n    }));\n  }\n  function Ol(n) {\n    X(n, Dd, {\n      item: n\n    });\n  }\n  function kl(n, e, t, o) {\n    var r = n.getSystem().build(o);\n    at(n, r, t);\n  }\n  function Tl(n, e, t, o) {\n    F(zd(n), function (n) {\n      return un(o.element, n.element);\n    }).each(Ce);\n  }\n  function Cl(e, n, t, r, o) {\n    var i = zd(e);\n    return mn.from(i[r]).map(function (n) {\n      return Tl(e, 0, 0, n), o.each(function (n) {\n        kl(e, 0, function (n, e) {\n          var t,\n            o = e;\n          he(t = n, r).fold(function () {\n            Qe(t, o);\n          }, function (n) {\n            ve(n, o);\n          });\n        }, n);\n      }), n;\n    });\n  }\n  function El(n, e, t, o) {\n    return _e(e.routes, o.start).bind(function (n) {\n      return _e(n, o.destination);\n    });\n  }\n  function Dl(t, o, n) {\n    var e,\n      r,\n      i = n;\n    qd(e = t, r = o).bind(function (n) {\n      return Xd(e, r, i, n);\n    }).each(function (n) {\n      var e = n.transition;\n      Le(t.element, e.transitionClass), He(t.element, o.destinationAttr);\n    });\n  }\n  function Ml(n, e, t, o) {\n    Dl(n, e, t), Ne(n.element, e.stateAttr) && Be(n.element, e.stateAttr) !== o && e.onFinish(n, o), Ie(n.element, e.stateAttr, o);\n  }\n  function _l(n) {\n    je(n, Qd);\n  }\n  function Rl(n) {\n    Le(n, Qd);\n  }\n  function Fl(n) {\n    return _e(n, \"format\").getOr(n.title);\n  }\n  function Il(n) {\n    return Re(n, \"items\") ? (r = co((e = n, t = [\"items\"], o = {}, Ee(e, function (n, e) {\n      T(t, e) || (o[e] = n);\n    }), o), {\n      menu: !0\n    }), i = tm(e.items), {\n      item: r,\n      menus: co(i.menus, yo(e.title, i.items)),\n      expansions: co(i.expansions, yo(e.title, e.title))\n    }) : {\n      item: n,\n      menus: {},\n      expansions: {}\n    };\n    var t, o, e, r, i;\n  }\n  function Vl(t, n, o) {\n    var e,\n      _r2,\n      i,\n      u,\n      c,\n      a,\n      s,\n      f,\n      l,\n      d,\n      m,\n      g = (e = t, i = (_r2 = function r(n) {\n        return B(n, function (n) {\n          return void 0 === n.items ? !Re(n, \"format\") || e.formatter.canApply(n.format) ? [n] : [] : 0 < _r2(n.items).length ? [n] : [];\n        });\n      })(n), tm(i));\n    return c = (u = {\n      formats: g,\n      handle: function handle(n, e) {\n        t.undoManager.transact(function () {\n          ii.isOn(n) ? t.formatter.remove(e) : t.formatter.apply(e);\n        }), o();\n      }\n    }).formats, a = function a() {\n      return m;\n    }, s = em(\"Styles\", [].concat(Z(c.items, function (n) {\n      return nm(Fl(n), n.title, n.isSelected(), n.getPreview(), Re(c.expansions, Fl(n)));\n    })), a, !1), f = De(c.menus, function (n, e) {\n      var t = Z(n, function (n) {\n        return nm(Fl(n), n.title, void 0 !== n.isSelected && n.isSelected(), void 0 !== n.getPreview ? n.getPreview() : \"\", Re(c.expansions, Fl(n)));\n      });\n      return em(e, t, a, !0);\n    }), l = co(f, yo(\"styles\", s)), d = {\n      tmenu: Wd.tieredData(\"styles\", l, c.expansions)\n    }, (m = Ns(Wd.sketch({\n      dom: {\n        tag: \"div\",\n        classes: [ci(\"styles-menu\")]\n      },\n      components: [],\n      fakeFocus: !0,\n      stayInDom: !0,\n      onExecute: function onExecute(n, e) {\n        var t = hf.getValue(e);\n        return u.handle(e, t.value), mn.none();\n      },\n      onEscape: function onEscape() {\n        return mn.none();\n      },\n      onOpenMenu: function onOpenMenu(n, e) {\n        var t = Ba(n.element);\n        Va(e.element, t), Jd.jumpTo(e, \"current\");\n      },\n      onOpenSubmenu: function onOpenSubmenu(n, e, t) {\n        var o = Ba(n.element),\n          r = pi(e.element, '[role=\"menu\"]').getOrDie(\"hacky\"),\n          i = n.getSystem().getByDom(r).getOrDie();\n        Va(t.element, o), Jd.progressTo(i, \"before\"), Jd.jumpTo(t, \"after\"), Jd.progressTo(t, \"current\");\n      },\n      onCollapseMenu: function onCollapseMenu(n, e, t) {\n        var o = pi(e.element, '[role=\"menu\"]').getOrDie(\"hacky\"),\n          r = n.getSystem().getByDom(o).getOrDie();\n        Jd.progressTo(r, \"after\"), Jd.progressTo(t, \"current\");\n      },\n      navigateOnHover: !1,\n      highlightImmediately: !0,\n      data: d.tmenu,\n      markers: {\n        backgroundMenu: ci(\"styles-background-menu\"),\n        menu: ci(\"styles-menu\"),\n        selectedMenu: ci(\"styles-selected-menu\"),\n        item: ci(\"styles-item\"),\n        selectedItem: ci(\"styles-selected-item\")\n      }\n    }))).asSpec();\n  }\n  function Bl(n) {\n    var e = n.replace(/\\|/g, \" \").trim();\n    return 0 < e.length ? e.split(/\\s+/) : [];\n  }\n  function Al(e, r) {\n    function n(t) {\n      return function () {\n        return nf(e = t, function () {\n          n.execCommand(e);\n        }, {}, n = r);\n        var n, e;\n      };\n    }\n    function t(o) {\n      return function () {\n        return n = r, t = Ta(e = o), nf(e, function () {\n          n.execCommand(e);\n        }, t, n);\n        var n, e, t;\n      };\n    }\n    function o(n, e, t) {\n      return function () {\n        return Ca(r, n, e, t);\n      };\n    }\n    function i() {\n      return Vl(r, b, function () {\n        r.fire(\"scrollIntoView\");\n      });\n    }\n    function u(n, e) {\n      return {\n        isSupported: function isSupported() {\n          var e = r.ui.registry.getAll().buttons;\n          return n.forall(function (n) {\n            return Re(e, n);\n          });\n        },\n        sketch: e\n      };\n    }\n    var c,\n      _a2,\n      s = n(\"undo\"),\n      f = n(\"redo\"),\n      l = t(\"bold\"),\n      d = t(\"italic\"),\n      m = t(\"underline\"),\n      g = n(\"removeformat\"),\n      p = o(\"unlink\", \"link\", function () {\n        r.execCommand(\"unlink\", null, !1);\n      }),\n      h = o(\"unordered-list\", \"ul\", function () {\n        r.execCommand(\"InsertUnorderedList\", null, !1);\n      }),\n      v = o(\"ordered-list\", \"ol\", function () {\n        r.execCommand(\"InsertOrderedList\", null, !1);\n      }),\n      b = (_a2 = function a(n) {\n        return Z(n, function (n) {\n          if (Re(n, \"items\")) {\n            var e = _a2(n.items);\n            return co(co(n, {\n              isSelected: S,\n              getPreview: w(\"\")\n            }), {\n              items: e\n            });\n          }\n          return Re(n, \"format\") ? co(n, {\n            isSelected: y(n.format),\n            getPreview: x(n.format)\n          }) : (o = Gu((t = n).title), r = co(t, {\n            format: o,\n            isSelected: y(o),\n            getPreview: x(o)\n          }), c.formatter.register(o, r), r);\n          var t, o, r;\n        });\n      })((c = r).getParam(\"style_formats\", fr, \"array\"));\n    function y(n) {\n      return function () {\n        return c.formatter.match(n);\n      };\n    }\n    function x(n) {\n      return function () {\n        return c.formatter.getCssText(n);\n      };\n    }\n    return {\n      undo: u(mn.none(), s),\n      redo: u(mn.none(), f),\n      bold: u(mn.none(), l),\n      italic: u(mn.none(), d),\n      underline: u(mn.none(), m),\n      removeformat: u(mn.none(), g),\n      link: u(mn.none(), function () {\n        return sl(e, r);\n      }),\n      unlink: u(mn.none(), p),\n      image: u(mn.none(), function () {\n        return Kf(r);\n      }),\n      bullist: u(mn.some(\"bullist\"), h),\n      numlist: u(mn.some(\"numlist\"), v),\n      fontsizeselect: u(mn.none(), function () {\n        return n = {\n          onChange: function onChange(n) {\n            var o;\n            o = t, mn.from(Gf[n]).each(function (n) {\n              var e,\n                t = n;\n              Bs(e = o) !== t && e.execCommand(\"fontSize\", !1, t);\n            });\n          },\n          getInitialValue: function getInitialValue() {\n            return e = Bs(t), I(Gf, function (n) {\n              return n === e;\n            }).getOr(2);\n            var e;\n          }\n        }, Is(e, \"font-size\", function () {\n          return As(n);\n        }, t = r);\n        var t, n;\n      }),\n      forecolor: u(mn.none(), function () {\n        return Vs(e, r);\n      }),\n      styleselect: u(mn.none(), function () {\n        return nf(\"style-formats\", function (n) {\n          r.fire(\"toReading\"), e.dropup.appear(i, ii.on, n);\n        }, or([ii.config({\n          toggleClass: ci(\"toolbar-button-selected\"),\n          toggleOnExecute: !1,\n          aria: {\n            mode: \"pressed\"\n          }\n        }), ti.config({\n          channels: xo([Hr(mr, ii.off), Hr(gr, ii.off)])\n        })]), r);\n      })\n    };\n  }\n  function Nl(n) {\n    function e() {\n      return n.stopPropagation();\n    }\n    function t() {\n      return n.preventDefault();\n    }\n    var o = i(t, e);\n    return {\n      target: fe.fromDom(function (n) {\n        if (et() && l(n.target)) {\n          var e = fe.fromDom(n.target);\n          if (Xe(e) && ot(e) && n.composed && n.composedPath) {\n            var t = n.composedPath();\n            if (t) return 0 < (o = t).length ? mn.some(o[0]) : mn.none();\n          }\n        }\n        var o;\n        return mn.from(n.target);\n      }(n).getOr(n.target)),\n      x: n.clientX,\n      y: n.clientY,\n      stop: e,\n      prevent: t,\n      kill: o,\n      raw: n\n    };\n  }\n  function Hl(n, e, t, o, r) {\n    var i,\n      u,\n      c = (i = t, u = o, function (n) {\n        i(n) && u(Nl(n));\n      });\n    return n.dom.addEventListener(e, c, r), {\n      unbind: J(rm, n, e, c, r)\n    };\n  }\n  function Pl(n, e, t) {\n    return Hl(n, e, im, t, !1);\n  }\n  function zl(n, e, t) {\n    return Hl(n, e, im, t, !0);\n  }\n  function jl(n) {\n    return {\n      isPortrait: w(n.matchMedia(\"(orientation: portrait)\").matches)\n    };\n  }\n  function Ll(o, e) {\n    var n = fe.fromDom(o),\n      r = null,\n      t = Pl(n, \"orientationchange\", function () {\n        um.clearInterval(r);\n        var n = jl(o);\n        e.onChange(n), i(function () {\n          e.onReady(n);\n        });\n      }),\n      i = function i(n) {\n        um.clearInterval(r);\n        var e = o.innerHeight,\n          t = 0;\n        r = um.setInterval(function () {\n          e !== o.innerHeight ? (um.clearInterval(r), n(mn.some(o.innerHeight))) : 20 < t && (um.clearInterval(r), n(mn.none())), t++;\n        }, 50);\n      };\n    return {\n      onAdjustment: i,\n      destroy: function destroy() {\n        t.unbind();\n      }\n    };\n  }\n  function $l(n, e, t) {\n    var o,\n      r = n.document.createRange(),\n      i = r;\n    return e.fold(function (n) {\n      i.setStartBefore(n.dom);\n    }, function (n, e) {\n      i.setStart(n.dom, e);\n    }, function (n) {\n      i.setStartAfter(n.dom);\n    }), o = r, t.fold(function (n) {\n      o.setEndBefore(n.dom);\n    }, function (n, e) {\n      o.setEnd(n.dom, e);\n    }, function (n) {\n      o.setEndAfter(n.dom);\n    }), r;\n  }\n  function Gl(n, e, t, o, r) {\n    var i = n.document.createRange();\n    return i.setStart(e.dom, t), i.setEnd(o.dom, r), i;\n  }\n  function Ul(n) {\n    return {\n      left: n.left,\n      top: n.top,\n      right: n.right,\n      bottom: n.bottom,\n      width: n.width,\n      height: n.height\n    };\n  }\n  function Wl(n, e, t) {\n    return e(fe.fromDom(t.startContainer), t.startOffset, fe.fromDom(t.endContainer), t.endOffset);\n  }\n  function Xl(n, e) {\n    var r,\n      t,\n      o,\n      i = (r = n, e.match({\n        domRange: function domRange(n) {\n          return {\n            ltr: w(n),\n            rtl: mn.none\n          };\n        },\n        relative: function relative(n, e) {\n          return {\n            ltr: k(function () {\n              return $l(r, n, e);\n            }),\n            rtl: k(function () {\n              return mn.some($l(r, e, n));\n            })\n          };\n        },\n        exact: function exact(n, e, t, o) {\n          return {\n            ltr: k(function () {\n              return Gl(r, n, e, t, o);\n            }),\n            rtl: k(function () {\n              return mn.some(Gl(r, t, o, n, e));\n            })\n          };\n        }\n      }));\n    return (o = (t = i).ltr()).collapsed ? t.rtl().filter(function (n) {\n      return !1 === n.collapsed;\n    }).map(function (n) {\n      return cm.rtl(fe.fromDom(n.endContainer), n.endOffset, fe.fromDom(n.startContainer), n.startOffset);\n    }).getOrThunk(function () {\n      return Wl(0, cm.ltr, o);\n    }) : Wl(0, cm.ltr, o);\n  }\n  !function () {\n    var n = this,\n      e = function e() {\n        var n,\n          e,\n          t,\n          o = {\n            exports: {}\n          };\n        function r() {}\n        function i(n) {\n          if (\"object\" != _typeof(this)) throw new TypeError(\"Promises must be constructed via new\");\n          if (\"function\" != typeof n) throw new TypeError(\"not a function\");\n          this._state = 0, this._handled = !1, this._value = void 0, this._deferreds = [], l(n, this);\n        }\n        function u(t, o) {\n          for (; 3 === t._state;) t = t._value;\n          0 !== t._state ? (t._handled = !0, i._immediateFn(function () {\n            var n,\n              e = 1 === t._state ? o.onFulfilled : o.onRejected;\n            if (null !== e) {\n              try {\n                n = e(t._value);\n              } catch (n) {\n                return void a(o.promise, n);\n              }\n              c(o.promise, n);\n            } else (1 === t._state ? c : a)(o.promise, t._value);\n          })) : t._deferreds.push(o);\n        }\n        function c(e, n) {\n          try {\n            if (n === e) throw new TypeError(\"A promise cannot be resolved with itself.\");\n            if (n && (\"object\" == _typeof(n) || \"function\" == typeof n)) {\n              var t = n.then;\n              if (n instanceof i) return e._state = 3, e._value = n, void s(e);\n              if (\"function\" == typeof t) return void l((o = t, r = n, function () {\n                o.apply(r, arguments);\n              }), e);\n            }\n            e._state = 1, e._value = n, s(e);\n          } catch (n) {\n            a(e, n);\n          }\n          var o, r;\n        }\n        function a(n, e) {\n          n._state = 2, n._value = e, s(n);\n        }\n        function s(n) {\n          2 === n._state && 0 === n._deferreds.length && i._immediateFn(function () {\n            n._handled || i._unhandledRejectionFn(n._value);\n          });\n          for (var e = 0, t = n._deferreds.length; e < t; e++) u(n, n._deferreds[e]);\n          n._deferreds = null;\n        }\n        function f(n, e, t) {\n          this.onFulfilled = \"function\" == typeof n ? n : null, this.onRejected = \"function\" == typeof e ? e : null, this.promise = t;\n        }\n        function l(n, e) {\n          var t = !1;\n          try {\n            n(function (n) {\n              t || (t = !0, c(e, n));\n            }, function (n) {\n              t || (t = !0, a(e, n));\n            });\n          } catch (n) {\n            if (t) return;\n            t = !0, a(e, n);\n          }\n        }\n        n = o, e = \"undefined\" != typeof globalThis ? globalThis : \"undefined\" != typeof window ? window : \"undefined\" != typeof __webpack_require__.g ? __webpack_require__.g : \"undefined\" != typeof self ? self : {}, t = setTimeout, i.prototype[\"catch\"] = function (n) {\n          return this.then(null, n);\n        }, i.prototype.then = function (n, e) {\n          var t = new this.constructor(r);\n          return u(this, new f(n, e, t)), t;\n        }, i.all = function (n) {\n          var c = Array.prototype.slice.call(n);\n          return new i(function (r, i) {\n            if (0 === c.length) return r([]);\n            for (var u = c.length, n = 0; n < c.length; n++) !function e(t, n) {\n              try {\n                if (n && (\"object\" == _typeof(n) || \"function\" == typeof n)) {\n                  var o = n.then;\n                  if (\"function\" == typeof o) return o.call(n, function (n) {\n                    e(t, n);\n                  }, i), 0;\n                }\n                c[t] = n, 0 == --u && r(c);\n              } catch (n) {\n                i(n);\n              }\n            }(n, c[n]);\n          });\n        }, i.resolve = function (e) {\n          return e && \"object\" == _typeof(e) && e.constructor === i ? e : new i(function (n) {\n            n(e);\n          });\n        }, i.reject = function (t) {\n          return new i(function (n, e) {\n            e(t);\n          });\n        }, i.race = function (r) {\n          return new i(function (n, e) {\n            for (var t = 0, o = r.length; t < o; t++) r[t].then(n, e);\n          });\n        }, i._immediateFn = \"function\" == typeof setImmediate ? function (n) {\n          setImmediate(n);\n        } : function (n) {\n          t(n, 0);\n        }, i._unhandledRejectionFn = function (n) {\n          \"undefined\" != typeof console && console && console.warn(\"Possible Unhandled Promise Rejection:\", n);\n        }, i._setImmediateFn = function (n) {\n          i._immediateFn = n;\n        }, i._setUnhandledRejectionFn = function (n) {\n          i._unhandledRejectionFn = n;\n        }, n.exports ? n.exports = i : e.Promise || (e.Promise = i);\n        var d = o.exports;\n        return {\n          boltExport: (\"undefined\" != typeof window ? window : Function(\"return this;\")()).Promise || d\n        };\n      };\n    \"object\" == _typeof(qf) && void 0 !== Yf ? Yf.exports = e() : (n = \"undefined\" != typeof globalThis ? globalThis : n || self).EphoxContactWrapper = e();\n  }();\n  function ql(r, n) {\n    return {\n      uid: r.uid,\n      dom: r.dom,\n      components: n,\n      behaviours: Lu(r.formBehaviours, [hf.config({\n        store: {\n          mode: \"manual\",\n          getValue: function getValue(n) {\n            var e,\n              t,\n              o = (e = r, t = n.getSystem(), De(e.partUids, function (n, e) {\n                return w(t.getByUid(n));\n              }));\n            return De(o, function (n, o) {\n              return n().bind(function (n) {\n                var e = ed.getCurrent(n),\n                  t = new Error(\"Cannot find a current component to extract the value from for form part '\" + o + \"': \" + $o(n.element));\n                return e.fold(function () {\n                  return ht.error(t);\n                }, ht.value);\n              }).map(hf.getValue);\n            });\n          },\n          setValue: function setValue(t, n) {\n            Ee(n, function (e, n) {\n              ma(t, r, n).each(function (n) {\n                ed.getCurrent(n).each(function (n) {\n                  hf.setValue(n, e);\n                });\n              });\n            });\n          }\n        }\n      })]),\n      apis: {\n        getField: function getField(n, e) {\n          return ma(n, r, e).bind(ed.getCurrent);\n        }\n      }\n    };\n  }\n  function Yl(n) {\n    return \"prepared\" === n.type ? mn.some(n.menu) : mn.none();\n  }\n  var Kl,\n    Jl = Yf.exports.boltExport,\n    Ql = function Ql(n) {\n      return vi(fe.fromDom(n.selection.getStart()), \"a\");\n    },\n    Zl = Fn(),\n    nd = Object.freeze({\n      __proto__: null,\n      getCurrent: function getCurrent(n, e, t) {\n        return e.find(n);\n      }\n    }),\n    ed = Ao({\n      fields: [Lt(\"find\")],\n      name: \"composing\",\n      apis: nd\n    }),\n    td = wa({\n      name: \"Container\",\n      factory: function factory(n) {\n        var e = n.dom,\n          t = e.attributes,\n          o = c(e, [\"attributes\"]);\n        return {\n          uid: n.uid,\n          dom: _y({\n            tag: \"div\",\n            attributes: _y({\n              role: \"presentation\"\n            }, t)\n          }, o),\n          components: n.components,\n          behaviours: n.containerBehaviours.dump,\n          events: n.events,\n          domModification: n.domModification,\n          eventOrder: n.eventOrder\n        };\n      },\n      configFields: [Yt(\"components\", []), ju(\"containerBehaviours\", []), Yt(\"events\", {}), Yt(\"domModification\", {}), Yt(\"eventOrder\", {})]\n    }),\n    od = wa({\n      name: \"DataField\",\n      factory: function factory(t) {\n        return {\n          uid: t.uid,\n          dom: t.dom,\n          behaviours: $c(t.dataBehaviours, [hf.config({\n            store: {\n              mode: \"memory\",\n              initialValue: t.getInitialValue()\n            }\n          }), ed.config({\n            find: mn.some\n          })]),\n          events: qo([Yo(function (n, e) {\n            hf.setValue(n, t.getInitialValue());\n          })])\n        };\n      },\n      configFields: [Lt(\"uid\"), Lt(\"dom\"), Lt(\"getInitialValue\"), Lc(\"dataBehaviours\", [hf, ed])]\n    }),\n    rd = wa({\n      name: \"Input\",\n      configFields: w([Ut(\"data\"), Yt(\"inputAttributes\", {}), Yt(\"inputStyles\", {}), Yt(\"tag\", \"input\"), Yt(\"inputClasses\", []), kr(\"onSetValue\"), Yt(\"styles\", {}), Yt(\"eventOrder\", {}), ju(\"inputBehaviours\", [hf, fi]), Yt(\"selectOnFocus\", !0)])(),\n      factory: function factory(n, e) {\n        return {\n          uid: n.uid,\n          dom: {\n            tag: (o = n).tag,\n            attributes: _y({\n              type: \"text\"\n            }, o.inputAttributes),\n            styles: o.inputStyles,\n            classes: o.inputClasses\n          },\n          components: [],\n          behaviours: (t = n, _y(_y({}, or([fi.config({\n            onFocus: t.selectOnFocus ? function (n) {\n              var e = n.element,\n                t = tl(e);\n              e.dom.setSelectionRange(0, t.length);\n            } : Y\n          })])), Lu(t.inputBehaviours, [hf.config({\n            store: _y(_y({\n              mode: \"manual\"\n            }, t.data.map(function (n) {\n              return {\n                initialValue: n\n              };\n            }).getOr({})), {\n              getValue: function getValue(n) {\n                return tl(n.element);\n              },\n              setValue: function setValue(n, e) {\n                tl(n.element) !== e && ol(n.element, e);\n              }\n            }),\n            onSetValue: t.onSetValue\n          })]))),\n          eventOrder: n.eventOrder\n        };\n        var t, o;\n      }\n    }),\n    id = Object.freeze({\n      __proto__: null,\n      exhibit: function exhibit(n, e) {\n        return Io({\n          attributes: xo([{\n            key: e.tabAttr,\n            value: \"true\"\n          }])\n        });\n      }\n    }),\n    ud = Ao({\n      fields: [Yt(\"tabAttr\", \"data-alloy-tabstop\")],\n      name: \"tabstopping\",\n      active: id\n    }),\n    cd = tinymce.util.Tools.resolve(\"tinymce.util.I18n\"),\n    ad = [\"input\", \"button\", \"textarea\", \"select\"],\n    sd = function sd(e, n, t) {\n      n.disableClass.each(function (n) {\n        je(e.element, n);\n      }), (ul(e, n) ? function (n) {\n        Ie(n.element, \"disabled\", \"disabled\");\n      } : function (n) {\n        Ie(n.element, \"aria-disabled\", \"true\");\n      })(e), n.onDisabled(e);\n    },\n    fd = function fd(e, n, t) {\n      n.disableClass.each(function (n) {\n        Le(e.element, n);\n      }), (ul(e, n) ? function (n) {\n        He(n.element, \"disabled\");\n      } : function (n) {\n        Ie(n.element, \"aria-disabled\", \"false\");\n      })(e), n.onEnabled(e);\n    },\n    ld = Object.freeze({\n      __proto__: null,\n      enable: fd,\n      disable: sd,\n      isDisabled: cl,\n      onLoad: il,\n      set: function set(n, e, t, o) {\n        (o ? sd : fd)(n, e);\n      }\n    }),\n    dd = Object.freeze({\n      __proto__: null,\n      exhibit: function exhibit(n, e) {\n        return Io({\n          classes: e.disabled() ? e.disableClass.toArray() : []\n        });\n      },\n      events: function events(t, n) {\n        return qo([Co(Zn(), function (n, e) {\n          return cl(n, t);\n        }), Vo(t, n, il)]);\n      }\n    }),\n    md = Ao({\n      fields: [Kt(\"disabled\", S, go), Yt(\"useNative\", !0), Ut(\"disableClass\"), kr(\"onDisabled\"), kr(\"onEnabled\")],\n      name: \"disabling\",\n      active: dd,\n      apis: ld\n    }),\n    gd = [ju(\"formBehaviours\", [hf])],\n    pd = (va(function (n, e, t) {\n      return n.getField(e, t);\n    }), function (n) {\n      var r,\n        e = {\n          field: function field(n, e) {\n            return r.push(n), t = al(n), o = e, {\n              uiType: Yc(),\n              owner: \"form\",\n              name: t,\n              config: o,\n              validated: {}\n            };\n            var t, o;\n          },\n          record: w(r = [])\n        },\n        t = n(e),\n        o = Z(e.record(), function (n) {\n          return sa({\n            name: n,\n            pname: al(n)\n          });\n        });\n      return xa(\"form\", gd, o, ql, t);\n    }),\n    hd = k(function (o, r) {\n      return [{\n        label: \"the link group\",\n        items: [(n = {\n          fields: [rl(\"url\", \"Type or paste URL\"), rl(\"text\", \"Link text\"), rl(\"title\", \"Link title\"), rl(\"target\", \"Link target\"), {\n            name: \"link\",\n            spec: od.sketch({\n              dom: {\n                tag: \"span\",\n                styles: {\n                  display: \"none\"\n                }\n              },\n              getInitialValue: function getInitialValue() {\n                return mn.none();\n              }\n            })\n          }],\n          maxFieldIndex: [\"url\", \"text\", \"title\", \"target\"].length - 1,\n          getInitialValue: function getInitialValue() {\n            return mn.some(Ql(n = r).fold(function () {\n              return {\n                url: \"\",\n                text: n.selection.getContent({\n                  format: \"text\"\n                }),\n                title: \"\",\n                target: \"\",\n                link: mn.none()\n              };\n            }, function (n) {\n              return t = Jf(e = n), o = Be(e, \"href\"), r = Be(e, \"title\"), i = Be(e, \"target\"), {\n                url: Zf(o),\n                text: t !== o ? Zf(t) : \"\",\n                title: Zf(r),\n                target: Zf(i),\n                link: mn.some(e)\n              };\n              var e, t, o, r, i;\n            }));\n            var n;\n          },\n          onExecute: function onExecute(n, e) {\n            var t = hf.getValue(n);\n            nl(r, t), o.restoreToolbar(), r.focus();\n          }\n        }, a = \"navigateEvent\", s = zt(\"SerialisedDialog\", lo([Lt(\"fields\"), Yt(\"maxFieldIndex\", n.fields.length - 1), Lt(\"onExecute\"), Lt(\"getInitialValue\"), vo(\"state\", function () {\n          return {\n            dialogSwipeState: cu(),\n            currentScreen: No(0)\n          };\n        })]), n), f = Ns(pd(function (t) {\n          return {\n            dom: Oa('<div class=\"${prefix}-serialised-dialog\"></div>'),\n            components: [td.sketch({\n              dom: Oa('<div class=\"${prefix}-serialised-dialog-chain\" style=\"left: 0px; position: absolute;\"></div>'),\n              components: Z(s.fields, function (n, e) {\n                return e <= s.maxFieldIndex ? td.sketch({\n                  dom: Oa('<div class=\"${prefix}-serialised-dialog-screen\"></div>'),\n                  components: [i(-1, \"previous\", 0 < e), t.field(n.name, n.spec), i(1, \"next\", e < s.maxFieldIndex)]\n                }) : t.field(n.name, n.spec);\n              })\n            })],\n            formBehaviours: or([Nr(function (n, e) {\n              var t = e;\n              hi(n.element, \".\" + ci(\"serialised-dialog-chain\")).each(function (n) {\n                $r(n, \"left\", -s.state.currentScreen.get() * t.width + \"px\");\n              });\n            }), jc.config({\n              mode: \"special\",\n              focusIn: function focusIn(n, e) {\n                c(n);\n              },\n              onTab: function onTab(n, e) {\n                return u(n, 1), mn.some(!0);\n              },\n              onShiftTab: function onShiftTab(n, e) {\n                return u(n, -1), mn.some(!0);\n              }\n            }), el(\"form-events\", [Yo(function (e, n) {\n              s.state.currentScreen.set(0), s.state.dialogSwipeState.clear();\n              var t = l.get(e);\n              Qi.highlightFirst(t), s.getInitialValue(e).each(function (n) {\n                hf.setValue(e, n);\n              });\n            }), Qo(s.onExecute), Eo(Wn(), function (n, e) {\n              \"left\" === e.event.raw.propertyName && c(n);\n            }), Eo(a, function (n, e) {\n              u(n, e.event.direction);\n            })])])\n          };\n        })), l = Ns({\n          dom: Oa('<div class=\"${prefix}-dot-container\"></div>'),\n          behaviours: or([Qi.config({\n            highlightClass: ci(\"dot-active\"),\n            itemClass: ci(\"dot-item\")\n          })]),\n          components: B(s.fields, function (n, e) {\n            return e <= s.maxFieldIndex ? [ka('<div class=\"${prefix}-dot-item ${prefix}-icon-full-dot ${prefix}-icon\"></div>')] : [];\n          })\n        }), {\n          dom: Oa('<div class=\"${prefix}-serializer-wrapper\"></div>'),\n          components: [f.asSpec(), l.asSpec()],\n          behaviours: or([jc.config({\n            mode: \"special\",\n            focusIn: function focusIn(n) {\n              var e = f.get(n);\n              jc.focusIn(e);\n            }\n          }), el(\"serializer-wrapper-events\", [Eo(Vn(), function (n, e) {\n            var t = e.event;\n            s.state.dialogSwipeState.set({\n              xValue: t.raw.touches[0].clientX,\n              points: []\n            });\n          }), Eo(Bn(), function (n, e) {\n            var t = e.event;\n            s.state.dialogSwipeState.on(function (n) {\n              e.event.prevent(), s.state.dialogSwipeState.set(function (n, e) {\n                if (e === n.xValue) return n;\n                var t = 0 < e - n.xValue ? 1 : -1,\n                  o = {\n                    direction: t,\n                    xValue: e\n                  };\n                return {\n                  xValue: e,\n                  points: (0 === n.points.length ? [] : n.points[n.points.length - 1].direction === t ? n.points.slice(0, n.points.length - 1) : n.points).concat([o])\n                };\n              }(n, t.raw.touches[0].clientX));\n            });\n          }), Eo(An(), function (n, e) {\n            s.state.dialogSwipeState.on(function (t) {\n              u(f.get(n), -1 * function () {\n                if (0 === t.points.length) return 0;\n                var n = t.points[0].direction,\n                  e = t.points[t.points.length - 1].direction;\n                return -1 === n && -1 === e ? -1 : 1 === n && 1 === e ? 1 : 0;\n              }());\n            });\n          })])])\n        })]\n      }];\n      function i(e, n, t) {\n        return Qs.sketch({\n          dom: Oa('<span class=\"${prefix}-icon-' + n + ' ${prefix}-icon\"></span>'),\n          action: function action(n) {\n            X(n, a, {\n              direction: e\n            });\n          },\n          buttonBehaviours: or([md.config({\n            disableClass: ci(\"toolbar-navigation-disabled\"),\n            disabled: function disabled() {\n              return !t;\n            }\n          })])\n        });\n      }\n      function u(n, r) {\n        var i = Jr(n.element, \".\" + ci(\"serialised-dialog-screen\"));\n        hi(n.element, \".\" + ci(\"serialised-dialog-chain\")).each(function (o) {\n          0 <= s.state.currentScreen.get() + r && s.state.currentScreen.get() + r < i.length && (Wr(o, \"left\").each(function (n) {\n            var e = parseInt(n, 10),\n              t = Ba(i[0]);\n            $r(o, \"left\", e - r * t + \"px\");\n          }), s.state.currentScreen.set(s.state.currentScreen.get() + r));\n        });\n      }\n      function c(o) {\n        var n = Jr(o.element, \"input\");\n        mn.from(n[s.state.currentScreen.get()]).each(function (n) {\n          o.getSystem().getByDom(n).each(function (n) {\n            var e = o,\n              t = n.element;\n            e.getSystem().triggerFocus(t, e.element);\n          });\n        });\n        var e = l.get(o);\n        Qi.highlightAt(e, s.state.currentScreen.get());\n      }\n      var n, a, s, f, l;\n    }),\n    vd = qo([{\n      key: Yn(),\n      value: To({\n        can: function can(n, e) {\n          var t,\n            o = e.event,\n            r = o.originator,\n            i = o.target;\n          return !(un(t = r, n.element) && !un(t, i) && (console.warn(Yn() + \" did not get interpreted by the desired target. \\nOriginator: \" + $o(r) + \"\\nTarget: \" + $o(i) + \"\\nCheck the \" + Yn() + \" event handlers\"), 1));\n        }\n      })\n    }]),\n    bd = Object.freeze({\n      __proto__: null,\n      events: vd\n    }),\n    yd = K,\n    xd = fl(),\n    wd = function wd(n, c) {\n      var e,\n        t,\n        o,\n        r,\n        i,\n        u,\n        a = Me(n, function (r, u) {\n          return (1 === r.length ? ht.value(r[0].handler) : gl(r, c, u)).map(function (n) {\n            var e,\n              i,\n              t = (i = m(e = n) ? {\n                can: x,\n                abort: S,\n                run: e\n              } : e, function (n, e) {\n                for (var t = [], o = 2; o < arguments.length; o++) t[o - 2] = arguments[o];\n                var r = [n, e].concat(t);\n                i.abort.apply(void 0, r) ? e.stop() : i.can.apply(void 0, r) && i.run.apply(void 0, r);\n              }),\n              o = 1 < r.length ? E(c[u], function (e) {\n                return C(r, function (n) {\n                  return n.name === e;\n                });\n              }).join(\" > \") : r[0].name;\n            return yo(u, {\n              handler: t,\n              purpose: o\n            });\n          });\n        });\n      return e = {}, t = [], o = [], M(a, function (n) {\n        n.fold(function (n) {\n          t.push(n);\n        }, function (n) {\n          o.push(n);\n        });\n      }), 0 < (u = {\n        errors: t,\n        values: o\n      }).errors.length ? ht.error(V(u.errors)) : (i = e, 0 === (r = u.values).length ? ht.value(i) : ht.value(co(i, ao.apply(void 0, r))));\n    },\n    Sd = \"alloy.base.behaviour\",\n    Od = lo([ho(\"dom\", \"dom\", Ot(), lo([Lt(\"tag\"), Yt(\"styles\", {}), Yt(\"classes\", []), Yt(\"attributes\", {}), Ut(\"value\"), Ut(\"innerHtml\")])), Lt(\"components\"), Lt(\"uid\"), Yt(\"events\", {}), Yt(\"apis\", {}), ho(\"eventOrder\", \"eventOrder\", ((Kl = {})[Zn()] = [\"disabling\", Sd, \"toggling\", \"typeaheadevents\"], Kl[Yn()] = [Sd, \"focusing\", \"keying\"], Kl[oe()] = [Sd, \"disabling\", \"toggling\", \"representing\"], Kl[$n()] = [Sd, \"representing\", \"streaming\", \"invalidating\"], Kl[ie()] = [Sd, \"representing\", \"item-events\", \"tooltipping\"], Kl[Nn()] = [\"focusing\", Sd, \"item-type-events\"], Kl[Vn()] = [\"focusing\", Sd, \"item-type-events\"], Kl[zn()] = [\"item-type-events\", \"tooltipping\"], Kl[Qn()] = [\"receiving\", \"reflecting\", \"tooltipping\"], Et(w(Kl))), mo()), Ut(\"domModification\")]),\n    kd = qs,\n    Td = function Td(u) {\n      return _e(u, Ls).getOrThunk(function () {\n        var n,\n          e,\n          t,\n          o,\n          r,\n          i = dt(u, \"uid\") ? u : _y({\n            uid: kd(\"\")\n          }, u);\n        return n = yd(i), e = n.events, t = c(n, [\"events\"]), o = Z(_e(t, \"components\").getOr([]), Td), r = _y(_y({}, t), {\n          events: _y(_y({}, bd), e),\n          components: o\n        }), ht.value(xl(r)).getOrDie();\n      });\n    },\n    Cd = ha,\n    Ed = \"alloy.item-hover\",\n    Dd = \"alloy.item-focus\",\n    Md = w(Ed),\n    _d = w(Dd),\n    Rd = [Lt(\"data\"), Lt(\"components\"), Lt(\"dom\"), Yt(\"hasSubmenu\", !1), Ut(\"toggling\"), Lc(\"itemBehaviours\", [ii, fi, jc, hf]), Yt(\"ignoreFocus\", !1), Yt(\"domModification\", {}), Dr(\"builder\", function (n) {\n      return {\n        dom: n.dom,\n        domModification: _y(_y({}, n.domModification), {\n          attributes: _y(_y(_y({\n            role: n.toggling.isSome() ? \"menuitemcheckbox\" : \"menuitem\"\n          }, n.domModification.attributes), {\n            \"aria-haspopup\": n.hasSubmenu\n          }), n.hasSubmenu ? {\n            \"aria-expanded\": !1\n          } : {})\n        }),\n        behaviours: $c(n.itemBehaviours, [n.toggling.fold(ii.revoke, function (n) {\n          return ii.config(_y({\n            aria: {\n              mode: \"checked\"\n            }\n          }, n));\n        }), fi.config({\n          ignore: n.ignoreFocus,\n          stopMousedown: n.ignoreFocus,\n          onFocus: function onFocus(n) {\n            Ol(n);\n          }\n        }), jc.config({\n          mode: \"execution\"\n        }), hf.config({\n          store: {\n            mode: \"memory\",\n            initialValue: n.data\n          }\n        }), el(\"item-type-events\", u(u([], Pr(), !0), [Eo(zn(), Sl), Eo(ne(), fi.focus)], !1))]),\n        components: n.components,\n        eventOrder: n.eventOrder\n      };\n    }), Yt(\"eventOrder\", {})],\n    Fd = [Lt(\"dom\"), Lt(\"components\"), Dr(\"builder\", function (n) {\n      return {\n        dom: n.dom,\n        components: n.components,\n        events: qo([Eo(ne(), function (n, e) {\n          e.stop();\n        })])\n      };\n    })],\n    Id = w(\"item-widget\"),\n    Vd = w([sa({\n      name: \"widget\",\n      overrides: function overrides(e) {\n        return {\n          behaviours: or([hf.config({\n            store: {\n              mode: \"manual\",\n              getValue: function getValue(n) {\n                return e.data;\n              },\n              setValue: Y\n            }\n          })])\n        };\n      }\n    })]),\n    Bd = jt(\"type\", {\n      widget: [Lt(\"uid\"), Lt(\"data\"), Lt(\"components\"), Lt(\"dom\"), Yt(\"autofocus\", !1), Yt(\"ignoreFocus\", !1), Lc(\"widgetBehaviours\", [hf, fi, jc]), Yt(\"domModification\", {}), pa(Vd()), Dr(\"builder\", function (t) {\n        function o(n) {\n          return ma(n, t, \"widget\").map(function (n) {\n            return jc.focusIn(n), n;\n          });\n        }\n        function n(n, e) {\n          return eu(e.event.target) || t.autofocus && e.setSource(n.element), mn.none();\n        }\n        var e = la(Id(), t, Vd()),\n          r = da(Id(), t, e.internals());\n        return {\n          dom: t.dom,\n          components: r,\n          domModification: t.domModification,\n          events: qo([Qo(function (n, e) {\n            o(n).each(function (n) {\n              e.stop();\n            });\n          }), Eo(zn(), Sl), Eo(ne(), function (n, e) {\n            t.autofocus ? o(n) : fi.focus(n);\n          })]),\n          behaviours: $c(t.widgetBehaviours, [hf.config({\n            store: {\n              mode: \"memory\",\n              initialValue: t.data\n            }\n          }), fi.config({\n            ignore: t.ignoreFocus,\n            onFocus: function onFocus(n) {\n              Ol(n);\n            }\n          }), jc.config({\n            mode: \"special\",\n            focusIn: t.autofocus ? function (n) {\n              o(n);\n            } : ur(),\n            onLeft: n,\n            onRight: n,\n            onEscape: function onEscape(n, e) {\n              return fi.isFocused(n) || t.autofocus ? (t.autofocus && e.setSource(n.element), mn.none()) : (fi.focus(n), mn.some(!0));\n            }\n          })])\n        };\n      })],\n      item: Rd,\n      separator: Fd\n    }),\n    Ad = w([Ps({\n      factory: {\n        sketch: function sketch(n) {\n          var e = zt(\"menu.spec item\", Bd, n);\n          return e.builder(e);\n        }\n      },\n      name: \"items\",\n      unit: \"item\",\n      defaults: function defaults(n, e) {\n        return dt(e, \"uid\") ? e : _y(_y({}, e), {\n          uid: qs(\"item\")\n        });\n      },\n      overrides: function overrides(n, e) {\n        return {\n          type: e.type,\n          ignoreFocus: n.fakeFocus,\n          domModification: {\n            classes: [n.markers.item]\n          }\n        };\n      }\n    })]),\n    Nd = w([Lt(\"value\"), Lt(\"items\"), Lt(\"dom\"), Lt(\"components\"), Yt(\"eventOrder\", {}), ju(\"menuBehaviours\", [Qi, hf, ed, jc]), Kt(\"movement\", {\n      mode: \"menu\",\n      moveOnTab: !0\n    }, jt(\"mode\", {\n      grid: [ei(), Dr(\"config\", function (n, e) {\n        return {\n          mode: \"flatgrid\",\n          selector: \".\" + n.markers.item,\n          initSize: {\n            numColumns: e.initSize.numColumns,\n            numRows: e.initSize.numRows\n          },\n          focusManager: n.focusManager\n        };\n      })],\n      matrix: [Dr(\"config\", function (n, e) {\n        return {\n          mode: \"matrix\",\n          selectors: {\n            row: e.rowSelector,\n            cell: \".\" + n.markers.item\n          },\n          focusManager: n.focusManager\n        };\n      }), Lt(\"rowSelector\")],\n      menu: [Yt(\"moveOnTab\", !0), Dr(\"config\", function (n, e) {\n        return {\n          mode: \"menu\",\n          selector: \".\" + n.markers.item,\n          moveOnTab: e.moveOnTab,\n          focusManager: n.focusManager\n        };\n      })]\n    })), $t(\"markers\", ni()), Yt(\"fakeFocus\", !1), Yt(\"focusManager\", Ii()), kr(\"onHighlight\")]),\n    Hd = w(\"alloy.menu-focus\"),\n    Pd = Sa({\n      name: \"Menu\",\n      configFields: Nd(),\n      partFields: Ad(),\n      factory: function factory(n, e, t, o) {\n        return {\n          uid: n.uid,\n          dom: n.dom,\n          markers: n.markers,\n          behaviours: Lu(n.menuBehaviours, [Qi.config({\n            highlightClass: n.markers.selectedItem,\n            itemClass: n.markers.item,\n            onHighlight: n.onHighlight\n          }), hf.config({\n            store: {\n              mode: \"memory\",\n              initialValue: n.value\n            }\n          }), ed.config({\n            find: mn.some\n          }), jc.config(n.movement.config(n, n.movement))]),\n          events: qo([Eo(_d(), function (e, t) {\n            var n = t.event;\n            e.getSystem().getByDom(n.target).each(function (n) {\n              Qi.highlight(e, n), t.stop(), X(e, Hd(), {\n                menu: e,\n                item: n\n              });\n            });\n          }), Eo(Md(), function (n, e) {\n            var t = e.event.item;\n            Qi.highlight(n, t);\n          })]),\n          components: e,\n          eventOrder: n.eventOrder,\n          domModification: {\n            attributes: {\n              role: \"menu\"\n            }\n          }\n        };\n      }\n    }),\n    zd = function zd(n, e) {\n      return n.components();\n    },\n    jd = Ao({\n      fields: [],\n      name: \"replacing\",\n      apis: Object.freeze({\n        __proto__: null,\n        append: function append(n, e, t, o) {\n          kl(n, 0, Qe, o);\n        },\n        prepend: function prepend(n, e, t, o) {\n          kl(n, 0, ye, o);\n        },\n        remove: Tl,\n        replaceAt: Cl,\n        replaceBy: function replaceBy(e, n, t, o, r) {\n          return I(zd(e), o).bind(function (n) {\n            return Cl(e, 0, 0, n, r);\n          });\n        },\n        set: function set(i, n, e, u) {\n          var t, o, r, c;\n          t = function t() {\n            var e,\n              n,\n              t,\n              o,\n              r = Z(u, i.getSystem().build);\n            n = r, o = (e = i).components(), M((t = e).components(), function (n) {\n              return Ze(n.element);\n            }), we(t.element), t.syncComponents(), M(H(o, n), function (n) {\n              ut(n), e.getSystem().removeFromWorld(n);\n            }), M(n, function (n) {\n              n.getSystem().isConnected() ? Te(e, n) : (e.getSystem().addToWorld(n), Te(e, n), rt(e.element) && ct(n)), e.syncComponents();\n            });\n          }, o = i.element, r = tt(o), c = zo(r).bind(function (e) {\n            function n(n) {\n              return un(e, n);\n            }\n            var r, _i2;\n            return n(o) ? mn.some(o) : (r = n, (_i2 = function i(n) {\n              for (var e = 0; e < n.childNodes.length; e++) {\n                var t = fe.fromDom(n.childNodes[e]);\n                if (r(t)) return mn.some(t);\n                var o = _i2(n.childNodes[e]);\n                if (o.isSome()) return o;\n              }\n              return mn.none();\n            })(o.dom));\n          }), t(o), c.each(function (e) {\n            zo(r).filter(function (n) {\n              return un(n, e);\n            }).fold(function () {\n              Ho(e);\n            }, Y);\n          });\n        },\n        contents: zd\n      })\n    }),\n    Ld = function Ld(t, o, r, n) {\n      return _e(r, n).bind(function (n) {\n        return _e(t, n).bind(function (n) {\n          var e = Ld(t, o, r, n);\n          return mn.some([n].concat(e));\n        });\n      }).getOr([]);\n    },\n    $d = function $d() {\n      function c(u) {\n        return function (n) {\n          for (var e = st(n), t = 0, o = e.length; t < o; t++) {\n            var r = e[t],\n              i = n[r];\n            if (i === u) return mn.some(i);\n          }\n          return mn.none();\n        }(i.get());\n      }\n      function a(n) {\n        return e(n).bind(Yl);\n      }\n      function t(n) {\n        return _e(i.get(), n);\n      }\n      var i = No({}),\n        u = No({}),\n        s = No({}),\n        f = cu(),\n        l = No({}),\n        e = function e(n) {\n          return _e(u.get(), n);\n        };\n      return {\n        setMenuBuilt: function setMenuBuilt(n, e) {\n          var t;\n          u.set(_y(_y({}, u.get()), ((t = {})[n] = {\n            type: \"prepared\",\n            menu: e\n          }, t)));\n        },\n        setContents: function setContents(n, e, t, o) {\n          f.set(n), i.set(t), u.set(e), l.set(o);\n          var r = function (n, e) {\n            var t = {};\n            Ee(n, function (n, e) {\n              M(n, function (n) {\n                t[n] = e;\n              });\n            });\n            var o = e,\n              r = lt(e, function (n, e) {\n                return {\n                  k: n,\n                  v: e\n                };\n              }),\n              i = De(r, function (n, e) {\n                return [e].concat(Ld(t, o, r, e));\n              });\n            return De(t, function (n) {\n              return _e(i, n).getOr([n]);\n            });\n          }(o, t);\n          s.set(r);\n        },\n        expand: function expand(t) {\n          return _e(i.get(), t).map(function (n) {\n            var e = _e(s.get(), t).getOr([]);\n            return [n].concat(e);\n          });\n        },\n        refresh: function refresh(n) {\n          return _e(s.get(), n);\n        },\n        collapse: function collapse(n) {\n          return _e(s.get(), n).bind(function (n) {\n            return 1 < n.length ? mn.some(n.slice(1)) : mn.none();\n          });\n        },\n        lookupMenu: e,\n        lookupItem: t,\n        otherMenus: function otherMenus(n) {\n          var e = l.get();\n          return H(st(e), n);\n        },\n        getPrimary: function getPrimary() {\n          return f.get().bind(a);\n        },\n        getMenus: function getMenus() {\n          return u.get();\n        },\n        clear: function clear() {\n          i.set({}), u.set({}), s.set({}), f.clear();\n        },\n        isClear: function isClear() {\n          return f.get().isNone();\n        },\n        getTriggeringPath: function getTriggeringPath(n, u) {\n          var e = E(t(n).toArray(), function (n) {\n            return a(n).isSome();\n          });\n          return _e(s.get(), n).bind(function (n) {\n            var i = N(e.concat(n));\n            return function (n) {\n              for (var e = [], t = 0; t < n.length; t++) {\n                var o = n[t];\n                if (!o.isSome()) return mn.none();\n                e.push(o.getOrDie());\n              }\n              return mn.some(e);\n            }(B(i, function (n, e) {\n              return t = n, o = u, r = i.slice(0, e + 1), a(t).bind(function (e) {\n                return c(t).bind(function (n) {\n                  return o(n).map(function (n) {\n                    return {\n                      triggeredMenu: e,\n                      triggeringItem: n,\n                      triggeringPath: r\n                    };\n                  });\n                });\n              }).fold(function () {\n                return wo(f.get(), n) ? [] : [mn.none()];\n              }, function (n) {\n                return [mn.some(n)];\n              });\n              var t, o, r;\n            }));\n          });\n        }\n      };\n    },\n    Gd = Yl,\n    Ud = w(\"collapse-item\"),\n    Wd = wa({\n      name: \"TieredMenu\",\n      configFields: [Er(\"onExecute\"), Er(\"onEscape\"), Cr(\"onOpenMenu\"), Cr(\"onOpenSubmenu\"), kr(\"onRepositionMenu\"), kr(\"onCollapseMenu\"), Yt(\"highlightImmediately\", !0), Gt(\"data\", [Lt(\"primary\"), Lt(\"menus\"), Lt(\"expansions\")]), Yt(\"fakeFocus\", !1), kr(\"onHighlight\"), kr(\"onHover\"), Gt(\"markers\", [Lt(\"backgroundMenu\")].concat(wr()).concat(Sr())), Lt(\"dom\"), Yt(\"navigateOnHover\", !0), Yt(\"stayInDom\", !1), ju(\"tmenuBehaviours\", [jc, Qi, ed, jd]), Yt(\"eventOrder\", {})],\n      apis: {\n        collapseMenu: function collapseMenu(n, e) {\n          n.collapseMenu(e);\n        },\n        highlightPrimary: function highlightPrimary(n, e) {\n          n.highlightPrimary(e);\n        },\n        repositionMenus: function repositionMenus(n, e) {\n          n.repositionMenus(e);\n        }\n      },\n      factory: function factory(c, n) {\n        function t(n) {\n          var o,\n            r,\n            e = (o = n, r = c.data.primary, De(c.data.menus, function (n, e) {\n              function t() {\n                return Pd.sketch(_y(_y({}, n), {\n                  value: e,\n                  markers: c.markers,\n                  fakeFocus: c.fakeFocus,\n                  onHighlight: c.onHighlight,\n                  focusManager: (c.fakeFocus ? Vi : Ii)()\n                }));\n              }\n              return e === r ? {\n                type: \"prepared\",\n                menu: o.getSystem().build(t())\n              } : {\n                type: \"notbuilt\",\n                nbMenu: t\n              };\n            })),\n            t = De(c.data.menus, function (n, e) {\n              return B(n.items, function (n) {\n                return \"separator\" === n.type ? [] : [n.data.value];\n              });\n            });\n          return m.setContents(c.data.primary, e, c.data.expansions, t), m.getPrimary();\n        }\n        function a(n) {\n          return hf.getValue(n).value;\n        }\n        function i(e, n) {\n          Qi.highlight(e, n), Qi.getHighlighted(n).orThunk(function () {\n            return Qi.getFirst(n);\n          }).each(function (n) {\n            nn(e, n.element, ne());\n          });\n        }\n        function u(e, n) {\n          return So(Z(n, function (n) {\n            return e.lookupMenu(n).bind(function (n) {\n              return \"prepared\" === n.type ? mn.some(n.menu) : mn.none();\n            });\n          }));\n        }\n        function s(e, n, t) {\n          M(u(n, n.otherMenus(t)), function (n) {\n            hl(n.element, [c.markers.backgroundMenu]), c.stayInDom || jd.remove(e, n);\n          });\n        }\n        function f(n, o) {\n          var e;\n          Ee((e = n, r.get().getOrThunk(function () {\n            var t = {};\n            return M(E(Jr(e.element, \".\" + c.markers.item), function (n) {\n              return \"true\" === Be(n, \"aria-haspopup\");\n            }), function (n) {\n              e.getSystem().getByDom(n).each(function (n) {\n                var e = a(n);\n                t[e] = n;\n              });\n            }), r.set(t), t;\n          })), function (n, e) {\n            var t = T(o, e);\n            Ie(n.element, \"aria-expanded\", t);\n          });\n        }\n        function l(t, o, r) {\n          return mn.from(r[0]).bind(function (n) {\n            return o.lookupMenu(n).bind(function (n) {\n              if (\"notbuilt\" === n.type) return mn.none();\n              var e = n.menu;\n              return M(u(o, r.slice(1)), function (n) {\n                je(n.element, c.markers.backgroundMenu);\n              }), rt(e.element) || jd.append(t, Cd(e)), hl(e.element, [c.markers.backgroundMenu]), i(t, e), s(t, o, r), mn.some(e);\n            });\n          });\n        }\n        var d,\n          e,\n          r = cu(),\n          m = $d();\n        function g(r, i, u) {\n          if (void 0 === u && (u = d.HighlightSubmenu), i.hasConfigured(md) && md.isDisabled(i)) return mn.some(i);\n          var n = a(i);\n          return m.expand(n).bind(function (o) {\n            return f(r, o), mn.from(o[0]).bind(function (t) {\n              return m.lookupMenu(t).bind(function (n) {\n                var e = function (n, e, t) {\n                  if (\"notbuilt\" !== t.type) return t.menu;\n                  var o = n.getSystem().build(t.nbMenu());\n                  return m.setMenuBuilt(e, o), o;\n                }(r, t, n);\n                return rt(e.element) || jd.append(r, Cd(e)), c.onOpenSubmenu(r, i, e, N(o)), u === d.HighlightSubmenu ? (Qi.highlightFirst(e), l(r, m, o)) : (Qi.dehighlightAll(e), mn.some(i));\n              });\n            });\n          });\n        }\n        function o(e, t) {\n          var n = a(t);\n          return m.collapse(n).bind(function (n) {\n            return f(e, n), l(e, m, n).map(function (n) {\n              return c.onCollapseMenu(e, t, n), n;\n            });\n          });\n        }\n        function p(t) {\n          return function (e, n) {\n            return vi(n.getSource(), \".\" + c.markers.item).bind(function (n) {\n              return e.getSystem().getByDom(n).toOptional().bind(function (n) {\n                return t(e, n).map(x);\n              });\n            });\n          };\n        }\n        function h(n) {\n          return Qi.getHighlighted(n).bind(Qi.getHighlighted);\n        }\n        (e = d = {})[e.HighlightSubmenu = 0] = \"HighlightSubmenu\", e[e.HighlightParent = 1] = \"HighlightParent\";\n        var v = qo([Eo(Hd(), function (t, o) {\n            var n = o.event.item;\n            m.lookupItem(a(n)).each(function () {\n              var n = o.event.menu;\n              Qi.highlight(t, n);\n              var e = a(o.event.item);\n              m.refresh(e).each(function (n) {\n                return s(t, m, n);\n              });\n            });\n          }), Qo(function (e, n) {\n            var t = n.event.target;\n            e.getSystem().getByDom(t).each(function (n) {\n              0 === a(n).indexOf(\"collapse-item\") && o(e, n), g(e, n, d.HighlightSubmenu).fold(function () {\n                c.onExecute(e, n);\n              }, Y);\n            });\n          }), Yo(function (e, n) {\n            t(e).each(function (n) {\n              jd.append(e, Cd(n)), c.onOpenMenu(e, n), c.highlightImmediately && i(e, n);\n            });\n          })].concat(c.navigateOnHover ? [Eo(Md(), function (n, e) {\n            var t = e.event.item,\n              o = n,\n              r = a(t);\n            m.refresh(r).bind(function (n) {\n              return f(o, n), l(o, m, n);\n            }), g(n, t, d.HighlightParent), c.onHover(n, t);\n          })] : [])),\n          b = {\n            collapseMenu: function collapseMenu(e) {\n              h(e).each(function (n) {\n                o(e, n);\n              });\n            },\n            highlightPrimary: function highlightPrimary(e) {\n              m.getPrimary().each(function (n) {\n                i(e, n);\n              });\n            },\n            repositionMenus: function repositionMenus(o) {\n              m.getPrimary().bind(function (e) {\n                return h(o).bind(function (n) {\n                  var e = a(n),\n                    t = So(Z(Me(m.getMenus(), K), Gd));\n                  return m.getTriggeringPath(e, function (n) {\n                    return e = n, z(t, function (n) {\n                      return n.getSystem().isConnected() ? F(Qi.getCandidates(n), function (n) {\n                        return a(n) === e;\n                      }) : mn.none();\n                    });\n                    var e;\n                  });\n                }).map(function (n) {\n                  return {\n                    primary: e,\n                    triggeringPath: n\n                  };\n                });\n              }).fold(function () {\n                mn.from(o.components()[0]).filter(function (n) {\n                  return \"menu\" === Be(n.element, \"role\");\n                }).each(function (n) {\n                  c.onRepositionMenu(o, n, []);\n                });\n              }, function (n) {\n                var e = n.primary,\n                  t = n.triggeringPath;\n                c.onRepositionMenu(o, e, t);\n              });\n            }\n          };\n        return {\n          uid: c.uid,\n          dom: c.dom,\n          markers: c.markers,\n          behaviours: Lu(c.tmenuBehaviours, [jc.config({\n            mode: \"special\",\n            onRight: p(function (n, e) {\n              return eu(e.element) ? mn.none() : g(n, e, d.HighlightSubmenu);\n            }),\n            onLeft: p(function (n, e) {\n              return eu(e.element) ? mn.none() : o(n, e);\n            }),\n            onEscape: p(function (n, e) {\n              return o(n, e).orThunk(function () {\n                return c.onEscape(n, e).map(function () {\n                  return n;\n                });\n              });\n            }),\n            focusIn: function focusIn(e, n) {\n              m.getPrimary().each(function (n) {\n                nn(e, n.element, ne());\n              });\n            }\n          }), Qi.config({\n            highlightClass: c.markers.selectedMenu,\n            itemClass: c.markers.menu\n          }), ed.config({\n            find: function find(n) {\n              return Qi.getHighlighted(n);\n            }\n          }), jd.config({})]),\n          eventOrder: c.eventOrder,\n          apis: b,\n          events: v\n        };\n      },\n      extraApis: {\n        tieredData: function tieredData(n, e, t) {\n          return {\n            primary: n,\n            menus: e,\n            expansions: t\n          };\n        },\n        singleData: function singleData(n, e) {\n          return {\n            primary: n,\n            menus: yo(n, e),\n            expansions: {}\n          };\n        },\n        collapseItem: function collapseItem(n) {\n          return {\n            value: Gu(Ud()),\n            meta: {\n              text: n\n            }\n          };\n        }\n      }\n    }),\n    Xd = function Xd(n, e, t, o) {\n      return El(0, e, 0, o).bind(function (e) {\n        return e.transition.map(function (n) {\n          return {\n            transition: n,\n            route: e\n          };\n        });\n      });\n    },\n    qd = function qd(e, t, n) {\n      return Ae(e.element, t.destinationAttr).map(function (n) {\n        return {\n          start: Be(e.element, t.stateAttr),\n          destination: n\n        };\n      });\n    },\n    Yd = Object.freeze({\n      __proto__: null,\n      findRoute: El,\n      disableTransition: Dl,\n      getCurrentRoute: qd,\n      jumpTo: Ml,\n      progressTo: function progressTo(t, o, r, i) {\n        var e,\n          u = o;\n        Ne((e = t).element, u.destinationAttr) && (Ae(e.element, u.destinationAttr).each(function (n) {\n          Ie(e.element, u.stateAttr, n);\n        }), He(e.element, u.destinationAttr));\n        var n,\n          c = (n = i, {\n            start: Be(t.element, o.stateAttr),\n            destination: n\n          });\n        Xd(t, o, r, c).fold(function () {\n          Ml(t, o, r, i);\n        }, function (n) {\n          Dl(t, o, r);\n          var e = n.transition;\n          je(t.element, e.transitionClass), Ie(t.element, o.destinationAttr, i);\n        });\n      },\n      getState: function getState(n, e, t) {\n        return Ae(n.element, e.stateAttr);\n      }\n    }),\n    Kd = Object.freeze({\n      __proto__: null,\n      events: function events(r, i) {\n        return qo([Eo(Wn(), function (t, n) {\n          var o = n.event.raw;\n          qd(t, r).each(function (e) {\n            El(0, r, 0, e).each(function (n) {\n              n.transition.each(function (n) {\n                o.propertyName === n.property && (Ml(t, r, i, e.destination), r.onTransition(t, e));\n              });\n            });\n          });\n        }), Yo(function (n, e) {\n          Ml(n, r, i, r.initialState);\n        })]);\n      }\n    }),\n    Jd = Ao({\n      fields: [Yt(\"destinationAttr\", \"data-transitioning-destination\"), Yt(\"stateAttr\", \"data-transitioning-state\"), Lt(\"initialState\"), kr(\"onTransition\"), kr(\"onFinish\"), $t(\"routes\", Nt(ht.value, Nt(ht.value, It([qt(\"transition\", [Lt(\"property\"), Lt(\"transitionClass\")])]))))],\n      name: \"transitioning\",\n      active: Kd,\n      apis: Yd,\n      extra: {\n        createRoutes: function createRoutes(n) {\n          var o = {};\n          return Ee(n, function (n, e) {\n            var t = e.split(\"<->\");\n            o[t[0]] = yo(t[1], n), o[t[1]] = yo(t[0], n);\n          }), o;\n        },\n        createBistate: function createBistate(n, e, t) {\n          return xo([{\n            key: n,\n            value: yo(e, t)\n          }, {\n            key: e,\n            value: yo(n, t)\n          }]);\n        },\n        createTristate: function createTristate(n, e, t, o) {\n          return xo([{\n            key: n,\n            value: xo([{\n              key: e,\n              value: o\n            }, {\n              key: t,\n              value: o\n            }])\n          }, {\n            key: e,\n            value: xo([{\n              key: n,\n              value: o\n            }, {\n              key: t,\n              value: o\n            }])\n          }, {\n            key: t,\n            value: xo([{\n              key: n,\n              value: o\n            }, {\n              key: e,\n              value: o\n            }])\n          }]);\n        }\n      }\n    }),\n    Qd = ci(\"scrollable\"),\n    Zd = Qd,\n    nm = function nm(n, e, t, o, r) {\n      return {\n        data: {\n          value: n,\n          text: e\n        },\n        type: \"item\",\n        dom: {\n          tag: \"div\",\n          classes: r ? [ci(\"styles-item-is-menu\")] : []\n        },\n        toggling: {\n          toggleOnExecute: !1,\n          toggleClass: ci(\"format-matches\"),\n          selected: t\n        },\n        itemBehaviours: or(r ? [] : [Ar(n, function (n, e) {\n          (e ? ii.on : ii.off)(n);\n        })]),\n        components: [{\n          dom: {\n            tag: \"div\",\n            attributes: {\n              style: o\n            },\n            innerHtml: e\n          }\n        }]\n      };\n    },\n    em = function em(n, e, t, o) {\n      return {\n        value: n,\n        dom: {\n          tag: \"div\"\n        },\n        components: [Qs.sketch({\n          dom: {\n            tag: \"div\",\n            classes: [ci(\"styles-collapser\")]\n          },\n          components: o ? [{\n            dom: {\n              tag: \"span\",\n              classes: [ci(\"styles-collapse-icon\")]\n            }\n          }, wl(n)] : [wl(n)],\n          action: function action(n) {\n            var e;\n            o && (e = t().get(n), Wd.collapseMenu(e));\n          }\n        }), {\n          dom: {\n            tag: \"div\",\n            classes: [ci(\"styles-menu-items-container\")]\n          },\n          components: [Pd.parts.items({})],\n          behaviours: or([el(\"adhoc-scrollable-menu\", [Yo(function (n, e) {\n            $r(n.element, \"overflow-y\", \"auto\"), $r(n.element, \"-webkit-overflow-scrolling\", \"touch\"), _l(n.element);\n          }), Ko(function (n) {\n            Xr(n.element, \"overflow-y\"), Xr(n.element, \"-webkit-overflow-scrolling\"), Rl(n.element);\n          })])])\n        }],\n        items: e,\n        menuBehaviours: or([Jd.config({\n          initialState: \"after\",\n          routes: Jd.createTristate(\"before\", \"current\", \"after\", {\n            transition: {\n              property: \"transform\",\n              transitionClass: \"transitioning\"\n            }\n          })\n        })])\n      };\n    },\n    tm = function tm(n) {\n      return _(n, function (n, e) {\n        var t = Il(e);\n        return {\n          menus: co(n.menus, t.menus),\n          items: [t.item].concat(n.items),\n          expansions: co(n.expansions, t.expansions)\n        };\n      }, {\n        menus: {},\n        expansions: {},\n        items: []\n      });\n    },\n    om = function om(n) {\n      return B(n, function (n) {\n        return (D(n) ? om : Bl)(n);\n      });\n    },\n    rm = function rm(n, e, t, o) {\n      n.dom.removeEventListener(e, t, o);\n    },\n    im = x,\n    um = tinymce.util.Tools.resolve(\"tinymce.util.Delay\"),\n    cm = Jt([{\n      ltr: [\"start\", \"soffset\", \"finish\", \"foffset\"]\n    }, {\n      rtl: [\"start\", \"soffset\", \"finish\", \"foffset\"]\n    }]);\n  function am(n, e) {\n    var t = le(n);\n    return \"input\" === t ? mg.after(n) : T([\"br\", \"img\"], t) ? 0 === e ? mg.before(n) : mg.after(n) : mg.on(n, e);\n  }\n  function sm(n) {\n    return mn.from(n.getSelection());\n  }\n  function fm(n, e, t, o, r) {\n    var i = Gl(n, e, t, o, r);\n    sm(n).each(function (n) {\n      n.removeAllRanges(), n.addRange(i);\n    });\n  }\n  function lm(n, e, t, o, r) {\n    var i,\n      u,\n      c,\n      a,\n      s,\n      f = (i = o, u = r, c = am(e, t), a = am(i, u), pg.relative(c, a));\n    Xl(s = n, f).match({\n      ltr: function ltr(n, e, t, o) {\n        fm(s, n, e, t, o);\n      },\n      rtl: function rtl(r, i, u, c) {\n        sm(s).each(function (n) {\n          if (n.setBaseAndExtent) n.setBaseAndExtent(r.dom, i, u.dom, c);else if (n.extend) try {\n            t = u, o = c, (e = n).collapse(r.dom, i), e.extend(t.dom, o);\n          } catch (n) {\n            fm(s, u, c, r, i);\n          } else fm(s, u, c, r, i);\n          var e, t, o;\n        });\n      }\n    });\n  }\n  function dm(n) {\n    if (0 < n.rangeCount) {\n      var e = n.getRangeAt(0),\n        t = n.getRangeAt(n.rangeCount - 1);\n      return mn.some(fg(fe.fromDom(e.startContainer), e.startOffset, fe.fromDom(t.endContainer), t.endOffset));\n    }\n    return mn.none();\n  }\n  function mm(n) {\n    if (null === n.anchorNode || null === n.focusNode) return dm(n);\n    var e,\n      t,\n      o,\n      r,\n      i,\n      u,\n      c,\n      a,\n      s,\n      f,\n      l,\n      d = fe.fromDom(n.anchorNode),\n      m = fe.fromDom(n.focusNode);\n    return e = d, t = n.anchorOffset, o = m, r = n.focusOffset, u = t, c = o, a = r, (s = me(i = e).dom.createRange()).setStart(i.dom, u), s.setEnd(c.dom, a), f = s, l = un(e, o) && t === r, f.collapsed && !l ? mn.some(fg(d, n.anchorOffset, m, n.focusOffset)) : dm(n);\n  }\n  function gm(n) {\n    return sm(n).filter(function (n) {\n      return 0 < n.rangeCount;\n    }).bind(mm);\n  }\n  function pm(n, e) {\n    var i,\n      t,\n      o,\n      r = (t = Xl(i = n, e).match({\n        ltr: function ltr(n, e, t, o) {\n          var r = i.document.createRange();\n          return r.setStart(n.dom, e), r.setEnd(t.dom, o), r;\n        },\n        rtl: function rtl(n, e, t, o) {\n          var r = i.document.createRange();\n          return r.setStart(t.dom, o), r.setEnd(n.dom, e), r;\n        }\n      })).getClientRects();\n    return 0 < (o = 0 < r.length ? r[0] : t.getBoundingClientRect()).width || 0 < o.height ? mn.some(o).map(Ul) : mn.none();\n  }\n  function hm(n) {\n    return mn.from(n.dom.contentWindow);\n  }\n  function vm(n) {\n    return hm(n).bind(gm);\n  }\n  function bm(n) {\n    return n.getFrame();\n  }\n  function ym(n, e, t, o) {\n    return n[t].getOrThunk(function () {\n      return function (n) {\n        return Pl(e, o, n);\n      };\n    });\n  }\n  function xm(c) {\n    var a = bm(c);\n    return mn.some(fe.fromDom(a.dom.contentWindow.document.body)).bind(function (u) {\n      return mn.some(fe.fromDom(a.dom.contentWindow.document)).bind(function (i) {\n        return hm(a).map(function (r) {\n          var n = fe.fromDom(i.dom.documentElement),\n            e = c.getCursorBox.getOrThunk(function () {\n              return function () {\n                return gm(r).map(function (n) {\n                  return pg.exact(n.start, n.soffset, n.finish, n.foffset);\n                }).bind(function (n) {\n                  return pm(r, n).orThunk(function () {\n                    return gm(r).filter(function (n) {\n                      return un(n.start, n.finish) && n.soffset === n.foffset;\n                    }).bind(function (n) {\n                      var e = n.start.dom.getBoundingClientRect();\n                      return 0 < e.width || 0 < e.height ? mn.some(e) : mn.none();\n                    });\n                  });\n                });\n              };\n            }),\n            t = c.setSelection.getOrThunk(function () {\n              return function (n, e, t, o) {\n                lm(r, n, e, t, o);\n              };\n            }),\n            o = c.clearSelection.getOrThunk(function () {\n              return function () {\n                sm(r).each(function (n) {\n                  return n.removeAllRanges();\n                });\n              };\n            });\n          return {\n            body: u,\n            doc: i,\n            win: r,\n            html: n,\n            getSelection: J(vm, a),\n            setSelection: t,\n            clearSelection: o,\n            frame: a,\n            onKeyup: ym(c, i, \"onKeyup\", \"keyup\"),\n            onNodeChanged: ym(c, i, \"onNodeChanged\", \"SelectionChange\"),\n            onDomChanged: c.onDomChanged,\n            onScrollToCursor: c.onScrollToCursor,\n            onScrollToElement: c.onScrollToElement,\n            onToReading: c.onToReading,\n            onToEditing: c.onToEditing,\n            onToolbarScrollStart: c.onToolbarScrollStart,\n            onTouchContent: c.onTouchContent,\n            onTapContent: c.onTapContent,\n            onTouchToolstrip: c.onTouchToolstrip,\n            getCursorBox: e\n          };\n        });\n      });\n    });\n  }\n  function wm() {\n    var e = rn(\"head\").getOrDie(),\n      n = rn('meta[name=\"viewport\"]').getOrThunk(function () {\n        var n = fe.fromTag(\"meta\");\n        return Ie(n, \"name\", \"viewport\"), Qe(e, n), n;\n      }),\n      t = Be(n, \"content\");\n    return {\n      maximize: function maximize() {\n        Ie(n, \"content\", \"width=device-width, initial-scale=1.0, user-scalable=no, maximum-scale=1.0\");\n      },\n      restore: function restore() {\n        null != t && 0 < t.length ? Ie(n, \"content\", t) : Ie(n, \"content\", \"user-scalable=yes\");\n      }\n    };\n  }\n  function Sm(n, e) {\n    function t(o) {\n      return function (n) {\n        var e = Be(n, \"style\"),\n          t = void 0 === e ? \"no-styles\" : e.trim();\n        t === o || (Ie(n, vg, t), Ie(n, \"style\", o));\n      };\n    }\n    var o,\n      r,\n      i = (r = function r(n) {\n        return en(n, \"*\");\n      }, E(function (n, e) {\n        for (var t = m(e) ? e : S, o = n.dom, r = []; null !== o.parentNode && void 0 !== o.parentNode;) {\n          var i = o.parentNode,\n            u = fe.fromDom(i);\n          if (r.push(u), !0 === t(u)) break;\n          o = i;\n        }\n        return r;\n      }(n, void 0), r)),\n      u = B(i, function (n) {\n        return e = function e(n) {\n          return en(n, \"*\");\n        }, E(pe(t = n).map(Je).map(function (n) {\n          return E(n, function (n) {\n            return !un(t, n);\n          });\n        }).getOr([]), e);\n        var e, t;\n      }),\n      c = void 0 !== (o = Ur(e, \"background-color\")) && \"\" !== o ? \"background-color:\" + o + \"!important\" : \"background-color:rgb(255,255,255)!important;\";\n    M(u, t(\"display:none!important;\")), M(i, t(bg + yg + c)), t((!0 === xg ? \"\" : bg) + yg + c)(n);\n  }\n  function Om() {\n    M(on(\"[\" + vg + \"]\"), function (n) {\n      var e = Be(n, vg);\n      \"no-styles\" !== e ? Ie(n, \"style\", e) : He(n, \"style\"), He(n, vg);\n    });\n  }\n  function km(n) {\n    var e = n.raw;\n    return void 0 === e.touches || 1 !== e.touches.length ? mn.none() : mn.some(e.touches[0]);\n  }\n  function Tm(t) {\n    var o,\n      r,\n      u = cu(),\n      i = No(!1),\n      c = (o = function o(n) {\n        t.triggerEvent(te(), n), i.set(!0);\n      }, r = null, {\n        cancel: function cancel() {\n          null !== r && (clearTimeout(r), r = null);\n        },\n        schedule: function schedule() {\n          for (var n = [], e = 0; e < arguments.length; e++) n[e] = arguments[e];\n          r = setTimeout(function () {\n            o.apply(null, n), r = null;\n          }, 400);\n        }\n      }),\n      a = xo([{\n        key: Vn(),\n        value: function value(t) {\n          return km(t).each(function (n) {\n            c.cancel();\n            var e = {\n              x: n.clientX,\n              y: n.clientY,\n              target: t.target\n            };\n            c.schedule(t), i.set(!1), u.set(e);\n          }), mn.none();\n        }\n      }, {\n        key: Bn(),\n        value: function value(n) {\n          return c.cancel(), km(n).each(function (i) {\n            u.on(function (n) {\n              var e = i,\n                t = n,\n                o = Math.abs(e.clientX - t.x),\n                r = Math.abs(e.clientY - t.y);\n              (5 < o || 5 < r) && u.clear();\n            });\n          }), mn.none();\n        }\n      }, {\n        key: An(),\n        value: function value(e) {\n          return c.cancel(), u.get().filter(function (n) {\n            return un(n.target, e.target);\n          }).map(function (n) {\n            return i.get() ? (e.prevent(), !1) : t.triggerEvent(ee(), e);\n          });\n        }\n      }]);\n    return {\n      fireIfReady: function fireIfReady(e, n) {\n        return _e(a, n).bind(function (n) {\n          return n(e);\n        });\n      }\n    };\n  }\n  function Cm(t) {\n    var e = Tm({\n      triggerEvent: function triggerEvent(n, e) {\n        t.onTapContent(e);\n      }\n    });\n    return {\n      fireTouchstart: function fireTouchstart(n) {\n        e.fireIfReady(n, \"touchstart\");\n      },\n      onTouchend: function onTouchend() {\n        return Pl(t.body, \"touchend\", function (n) {\n          e.fireIfReady(n, \"touchend\");\n        });\n      },\n      onTouchmove: function onTouchmove() {\n        return Pl(t.body, \"touchmove\", function (n) {\n          e.fireIfReady(n, \"touchmove\");\n        });\n      }\n    };\n  }\n  function Em(n, e) {\n    var t = parseInt(Be(n, e), 10);\n    return isNaN(t) ? 0 : t;\n  }\n  function Dm(n) {\n    return _y(_y({}, n), {\n      width: 2\n    });\n  }\n  function Mm(n) {\n    return {\n      left: n.left,\n      top: n.top,\n      right: n.right,\n      bottom: n.bottom,\n      width: n.width,\n      height: n.height\n    };\n  }\n  function _m(n) {\n    var e = n.getSelection();\n    return void 0 !== e && 0 < e.rangeCount ? function (o) {\n      if (o.collapsed) {\n        var r = fe.fromDom(o.startContainer);\n        return pe(r).bind(function (n) {\n          var e,\n            t = pg.exact(r, o.startOffset, n, \"img\" === le(e = n) ? 1 : lg.getOption(e).fold(function () {\n              return Je(e).length;\n            }, function (n) {\n              return n.length;\n            }));\n          return pm(o.startContainer.ownerDocument.defaultView, t).map(Dm).map(P);\n        }).getOr([]);\n      }\n      return Z(o.getClientRects(), Mm);\n    }(e.getRangeAt(0)) : [];\n  }\n  function Rm(n, e) {\n    Ie(n, Sg, e);\n  }\n  function Fm(n) {\n    return {\n      top: n.top,\n      bottom: n.top + n.height\n    };\n  }\n  function Im(o, r) {\n    var i = fe.fromDom(r.document.body),\n      n = Pl(fe.fromDom(o), \"resize\", function () {\n        var n, e, t;\n        n = o, e = Em(i, Sg), ((t = n.innerHeight) < e ? mn.some(e - t) : mn.none()).each(function (t) {\n          var n;\n          (0 < (n = _m(r)).length ? mn.some(n[0]).map(Fm) : mn.none()).each(function (n) {\n            var e = n.top > r.innerHeight || n.bottom > r.innerHeight ? Math.min(t, n.bottom - r.innerHeight + 50) : 0;\n            0 !== e && r.scrollTo(r.pageXOffset, r.pageYOffset + e);\n          });\n        }), Rm(i, o.innerHeight);\n      });\n    return Rm(i, o.innerHeight), {\n      toEditing: function toEditing() {\n        !function (n) {\n          n.focus();\n          var e = fe.fromDom(n.document.body);\n          (zo().exists(function (n) {\n            return T([\"input\", \"textarea\"], le(n));\n          }) ? function (n) {\n            um.setTimeout(function () {\n              n();\n            }, 0);\n          } : p)(function () {\n            zo().each(Po), Ho(e);\n          });\n        }(r);\n      },\n      destroy: function destroy() {\n        n.unbind();\n      }\n    };\n  }\n  function Vm(t, o) {\n    function r() {\n      s(i) || (clearTimeout(i), i = null);\n    }\n    var i = null;\n    return {\n      cancel: r,\n      throttle: function throttle() {\n        for (var n = [], e = 0; e < arguments.length; e++) n[e] = arguments[e];\n        r(), i = setTimeout(function () {\n          i = null, t.apply(null, n);\n        }, o);\n      }\n    };\n  }\n  function Bm(n) {\n    var t,\n      o,\n      e = Ns(td.sketch({\n        dom: Oa('<div aria-hidden=\"true\" class=\"${prefix}-mask-tap-icon\"></div>'),\n        containerBehaviours: or([ii.config({\n          toggleClass: ci(\"mask-tap-icon-selected\"),\n          toggleOnExecute: !1\n        })])\n      })),\n      r = (t = n, o = null, {\n        cancel: function cancel() {\n          s(o) || (clearTimeout(o), o = null);\n        },\n        throttle: function throttle() {\n          for (var n = [], e = 0; e < arguments.length; e++) n[e] = arguments[e];\n          s(o) && (o = setTimeout(function () {\n            o = null, t.apply(null, n);\n          }, 200));\n        }\n      });\n    return td.sketch({\n      dom: Oa('<div class=\"${prefix}-disabled-mask\"></div>'),\n      components: [td.sketch({\n        dom: Oa('<div class=\"${prefix}-content-container\"></div>'),\n        components: [Qs.sketch({\n          dom: Oa('<div class=\"${prefix}-content-tap-section\"></div>'),\n          components: [e.asSpec()],\n          action: function action(n) {\n            r.throttle();\n          },\n          buttonBehaviours: or([ii.config({\n            toggleClass: ci(\"mask-tap-icon-selected\")\n          })])\n        })]\n      })]\n    });\n  }\n  function Am(n) {\n    var e = zt(\"Getting AndroidWebapp schema\", kg, n);\n    $r(e.toolstrip, \"width\", \"100%\");\n    var t = Td(Bm(function () {\n      e.setReadOnly(e.readOnlyOnInit()), c.enter();\n    }, e.translate));\n    e.alloy.add(t);\n    var o = {\n      show: function show() {\n        e.alloy.add(t);\n      },\n      hide: function hide() {\n        e.alloy.remove(t);\n      }\n    };\n    Qe(e.container, t.element);\n    var s,\n      r,\n      i,\n      u,\n      f,\n      c = (s = e, r = o, i = wm(), u = uu(), f = uu(), {\n        enter: function enter() {\n          r.hide(), je(s.container, ci(\"fullscreen-maximized\")), je(s.container, ci(\"android-maximized\")), i.maximize(), je(s.body, ci(\"android-scroll-reload\")), u.set(Im(s.win, hg(s.editor).getOrDie(\"no\"))), xm(s.editor).each(function (n) {\n            function e(n) {\n              return !un(n.start, n.finish) || n.soffset !== n.foffset;\n            }\n            function t() {\n              var n = o.doc.dom.hasFocus() && o.getSelection().exists(e);\n              i.getByDom(r).each(!0 === (n || zo(c).filter(function (n) {\n                return \"input\" === le(n);\n              }).exists(function (n) {\n                return n.dom.selectionStart !== n.dom.selectionEnd;\n              })) ? ii.on : ii.off);\n            }\n            var o, r, i, u, c, a;\n            Sm(s.container, n.body), f.set((o = n, r = s.toolstrip, i = s.alloy, u = Cm(o), c = me(r), a = [Pl(o.body, \"touchstart\", function (n) {\n              o.onTouchContent(), u.fireTouchstart(n);\n            }), u.onTouchmove(), u.onTouchend(), Pl(r, \"touchstart\", function (n) {\n              o.onTouchToolstrip();\n            }), o.onToReading(function () {\n              Po(o.body);\n            }), o.onToEditing(Y), o.onScrollToCursor(function (n) {\n              n.preventDefault(), o.getCursorBox().each(function (n) {\n                var e = o.win,\n                  t = n.top > e.innerHeight || n.bottom > e.innerHeight ? n.bottom - e.innerHeight + 50 : 0;\n                0 != t && e.scrollTo(e.pageXOffset, e.pageYOffset + t);\n              });\n            })].concat(1 == wg ? [] : [Pl(fe.fromDom(o.win), \"blur\", function () {\n              i.getByDom(r).each(ii.off);\n            }), Pl(c, \"select\", t), Pl(o.doc, \"selectionchange\", t)]), {\n              destroy: function destroy() {\n                M(a, function (n) {\n                  n.unbind();\n                });\n              }\n            }));\n          });\n        },\n        exit: function exit() {\n          i.restore(), r.show(), Le(s.container, ci(\"fullscreen-maximized\")), Le(s.container, ci(\"android-maximized\")), Om(), Le(s.body, ci(\"android-scroll-reload\")), f.clear(), u.clear();\n        }\n      });\n    return {\n      setReadOnly: e.setReadOnly,\n      refreshStructure: Y,\n      enter: c.enter,\n      exit: c.exit,\n      destroy: Y\n    };\n  }\n  function Nm(n) {\n    return \"true\" === Be(n, Rg) ? 0 < n.dom.scrollLeft || function (n) {\n      n.dom.scrollLeft = 1;\n      var e = 0 !== n.dom.scrollLeft;\n      return n.dom.scrollLeft = 0, e;\n    }(n) : 0 < n.dom.scrollTop || function (n) {\n      n.dom.scrollTop = 1;\n      var e = 0 !== n.dom.scrollTop;\n      return n.dom.scrollTop = 0, e;\n    }(n);\n  }\n  function Hm() {\n    function e(n) {\n      var e = !0 === n.scrollable ? \"${prefix}-toolbar-scrollable-group\" : \"\";\n      return {\n        dom: Oa('<div aria-label=\"' + n.label + '\" class=\"${prefix}-toolbar-group ' + e + '\"></div>'),\n        tgroupBehaviours: or([el(\"adhoc-scrollable-toolbar\", !0 === n.scrollable ? [Jo(function (n, e) {\n          $r(n.element, \"overflow-x\", \"auto\"), Ie(n.element, Rg, \"true\"), _l(n.element);\n        })] : [])]),\n        components: [td.sketch({\n          components: [_g.parts.items({})]\n        })],\n        markers: {\n          itemSelector: \".\" + ci(\"toolbar-group-item\")\n        },\n        items: n.items\n      };\n    }\n    function t() {\n      Eg.setGroups(o, r.get()), ii.off(o);\n    }\n    var o = Td(Eg.sketch({\n        dom: Oa('<div class=\"${prefix}-toolbar\"></div>'),\n        components: [Eg.parts.groups({})],\n        toolbarBehaviours: or([ii.config({\n          toggleClass: ci(\"context-toolbar\"),\n          toggleOnExecute: !1,\n          aria: {\n            mode: \"none\"\n          }\n        }), jc.config({\n          mode: \"cyclic\"\n        })]),\n        shell: !0\n      })),\n      n = Td(td.sketch({\n        dom: {\n          classes: [ci(\"toolstrip\")]\n        },\n        components: [Cd(o)],\n        containerBehaviours: or([ii.config({\n          toggleClass: ci(\"android-selection-context-toolbar\"),\n          toggleOnExecute: !1\n        })])\n      })),\n      r = No([]);\n    return {\n      wrapper: n,\n      toolbar: o,\n      createGroups: function createGroups(n) {\n        return Z(n, i(_g.sketch, e));\n      },\n      setGroups: function setGroups(n) {\n        r.set(n), t();\n      },\n      setContextToolbar: function setContextToolbar(n) {\n        ii.on(o), Eg.setGroups(o, n);\n      },\n      restoreToolbar: function restoreToolbar() {\n        ii.isOn(o) && t();\n      },\n      refresh: function refresh() {},\n      focus: function focus() {\n        jc.focusIn(o);\n      }\n    };\n  }\n  function Pm(n) {\n    return Td(Qs.sketch({\n      dom: Oa('<div class=\"${prefix}-mask-edit-icon ${prefix}-icon\"></div>'),\n      action: function action() {\n        n.run(function (n) {\n          n.setReadOnly(!1);\n        });\n      }\n    }));\n  }\n  function zm() {\n    return Td(td.sketch({\n      dom: Oa('<div class=\"${prefix}-editor-socket\"></div>'),\n      components: [],\n      containerBehaviours: or([jd.config({})])\n    }));\n  }\n  function jm(n, e, t, o) {\n    (!0 === t ? cr.toAlpha : cr.toOmega)(o), (t ? function (n, e) {\n      jd.append(n, Cd(e));\n    } : function (n, e) {\n      jd.remove(n, e);\n    })(n, e);\n  }\n  function Lm(e, n) {\n    return n.getAnimationRoot.fold(function () {\n      return e.element;\n    }, function (n) {\n      return n(e);\n    });\n  }\n  function $m(n) {\n    return n.dimension.property;\n  }\n  function Gm(n, e) {\n    return n.dimension.getDimension(e);\n  }\n  function Um(n, e) {\n    hl(Lm(n, e), [e.shrinkingClass, e.growingClass]);\n  }\n  function Wm(n, e) {\n    Le(n.element, e.openClass), je(n.element, e.closedClass), $r(n.element, $m(e), \"0px\"), qr(n.element);\n  }\n  function Xm(n, e) {\n    Le(n.element, e.closedClass), je(n.element, e.openClass), Xr(n.element, $m(e));\n  }\n  function qm(n, e, t, o) {\n    t.setCollapsed(), $r(n.element, $m(e), Gm(e, n.element)), qr(n.element), Um(n, e), Wm(n, e), e.onStartShrink(n), e.onShrunk(n);\n  }\n  function Ym(n, e, t) {\n    var o = Gm(e, n.element);\n    (\"0px\" === o ? qm : function (n, e, t, o) {\n      var r = o.getOrThunk(function () {\n        return Gm(e, n.element);\n      });\n      t.setCollapsed(), $r(n.element, $m(e), r), qr(n.element);\n      var i = Lm(n, e);\n      Le(i, e.growingClass), je(i, e.shrinkingClass), Wm(n, e), e.onStartShrink(n);\n    })(n, e, t, mn.some(o));\n  }\n  function Km(n, e, t) {\n    var o = Lm(n, e),\n      r = $e(o, e.shrinkingClass),\n      i = Gm(e, n.element);\n    Xm(n, e);\n    var u = Gm(e, n.element);\n    (r ? function () {\n      $r(n.element, $m(e), i), qr(n.element);\n    } : function () {\n      Wm(n, e);\n    })(), Le(o, e.shrinkingClass), je(o, e.growingClass), Xm(n, e), $r(n.element, $m(e), u), t.setExpanded(), e.onStartGrow(n);\n  }\n  function Jm(n, e, t) {\n    return !0 === $e(Lm(n, e), e.growingClass);\n  }\n  function Qm(n, e, t) {\n    return !0 === $e(Lm(n, e), e.shrinkingClass);\n  }\n  function Zm(e, t) {\n    var o = Td(td.sketch({\n        dom: {\n          tag: \"div\",\n          classes: [ci(\"dropup\")]\n        },\n        components: [],\n        containerBehaviours: or([jd.config({}), Vg.config({\n          closedClass: ci(\"dropup-closed\"),\n          openClass: ci(\"dropup-open\"),\n          shrinkingClass: ci(\"dropup-shrinking\"),\n          growingClass: ci(\"dropup-growing\"),\n          dimension: {\n            property: \"height\"\n          },\n          onShrunk: function onShrunk(n) {\n            e(), t(), jd.set(n, []);\n          },\n          onGrown: function onGrown(n) {\n            e(), t();\n          }\n        }), Nr(function (n, e) {\n          r(Y);\n        })])\n      })),\n      r = function r(n) {\n        window.requestAnimationFrame(function () {\n          n(), Vg.shrink(o);\n        });\n      };\n    return {\n      appear: function appear(n, e, t) {\n        !0 === Vg.hasShrunk(o) && !1 === Vg.isTransitioning(o) && window.requestAnimationFrame(function () {\n          e(t), jd.set(o, [n()]), Vg.grow(o);\n        });\n      },\n      disappear: r,\n      component: o,\n      element: o.element\n    };\n  }\n  function ng() {\n    return Fn().browser.isFirefox();\n  }\n  function eg(e, n) {\n    var t,\n      o,\n      r,\n      i,\n      u = _y({\n        stopBackspace: !0\n      }, n),\n      c = Tm(u),\n      a = Z([\"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\", \"gesturestart\", \"mousedown\", \"mouseup\", \"mouseover\", \"mousemove\", \"mouseout\", \"click\"].concat([\"selectstart\", \"input\", \"contextmenu\", \"change\", \"transitionend\", \"transitioncancel\", \"drag\", \"dragstart\", \"dragend\", \"dragenter\", \"dragleave\", \"dragover\", \"drop\", \"keyup\"]), function (n) {\n        return Pl(e, n, function (e) {\n          c.fireIfReady(e, n).each(function (n) {\n            n && e.kill();\n          }), u.triggerEvent(n, e) && e.kill();\n        });\n      }),\n      s = cu(),\n      f = Pl(e, \"paste\", function (e) {\n        c.fireIfReady(e, \"paste\").each(function (n) {\n          n && e.kill();\n        }), u.triggerEvent(\"paste\", e) && e.kill(), s.set(setTimeout(function () {\n          u.triggerEvent(Jn(), e);\n        }, 0));\n      }),\n      l = Pl(e, \"keydown\", function (n) {\n        var e;\n        u.triggerEvent(\"keydown\", n) ? n.kill() : !u.stopBackspace || (e = n).raw.which !== ji[0] || T([\"input\", \"textarea\"], le(e.target)) || vi(e.target, '[contenteditable=\"true\"]', void 0).isSome() || n.prevent();\n      }),\n      d = (t = e, o = function o(n) {\n        u.triggerEvent(\"focusin\", n) && n.kill();\n      }, ng() ? zl(t, \"focus\", o) : Pl(t, \"focusin\", o)),\n      m = cu(),\n      g = (r = e, i = function i(n) {\n        u.triggerEvent(\"focusout\", n) && n.kill(), m.set(setTimeout(function () {\n          u.triggerEvent(Kn(), n);\n        }, 0));\n      }, ng() ? zl(r, \"blur\", i) : Pl(r, \"focusout\", i));\n    return {\n      unbind: function unbind() {\n        M(a, function (n) {\n          n.unbind();\n        }), l.unbind(), d.unbind(), g.unbind(), f.unbind(), s.on(clearTimeout), m.on(clearTimeout);\n      }\n    };\n  }\n  function tg(n, e) {\n    return No(_e(n, \"target\").getOr(e));\n  }\n  function og(n, o, e, t, r, i) {\n    var u,\n      c,\n      a = n(o, t),\n      s = (u = No(!1), c = No(!1), {\n        stop: function stop() {\n          u.set(!0);\n        },\n        cut: function cut() {\n          c.set(!0);\n        },\n        isStopped: u.get,\n        isCut: c.get,\n        event: e,\n        setSource: r.set,\n        getSource: r.get\n      });\n    return a.fold(function () {\n      return i.logEventNoHandlers(o, t), Bg.complete();\n    }, function (e) {\n      var t = e.descHandler;\n      return dl(t)(s), s.isStopped() ? (i.logEventStopped(o, e.element, t.purpose), Bg.stopped()) : s.isCut() ? (i.logEventCut(o, e.element, t.purpose), Bg.complete()) : pe(e.element).fold(function () {\n        return i.logNoParent(o, e.element, t.purpose), Bg.complete();\n      }, function (n) {\n        return i.logEventResponse(o, e.element, t.purpose), Bg.resume(n);\n      });\n    });\n  }\n  function rg() {\n    var u = {};\n    return {\n      registerId: function registerId(r, i, n) {\n        Ee(n, function (n, e) {\n          var t,\n            o = void 0 !== u[e] ? u[e] : {};\n          o[i] = {\n            cHandler: J.apply(void 0, [(t = n).handler].concat(r)),\n            purpose: t.purpose\n          }, u[e] = o;\n        });\n      },\n      unregisterId: function unregisterId(t) {\n        Ee(u, function (n, e) {\n          dt(n, t) && delete n[t];\n        });\n      },\n      filterByType: function filterByType(n) {\n        return _e(u, n).map(function (n) {\n          return Me(n, function (n, e) {\n            return {\n              id: e,\n              descHandler: n\n            };\n          });\n        }).getOr([]);\n      },\n      find: function find(r, n, c) {\n        return _e(u, n).bind(function (o) {\n          return e = r, t = (n = function n(_n3) {\n            return e = o, ba(t = _n3).bind(function (n) {\n              return _e(e, n);\n            }).map(function (n) {\n              return {\n                element: t,\n                descHandler: n\n              };\n            });\n            var e, t;\n          })(i = c), u = Oo(e), t.orThunk(function () {\n            return u(i) ? mn.none() : function (n) {\n              for (var e = i.dom, t = Oo(u); e.parentNode;) {\n                var e = e.parentNode,\n                  o = fe.fromDom(e),\n                  r = n(o);\n                if (r.isSome()) return r;\n                if (t(o)) break;\n              }\n              return mn.none();\n            }(n);\n          });\n          var i, n, e, t, u;\n        });\n      }\n    };\n  }\n  function ig() {\n    function r(n) {\n      ba(n.element).each(function (n) {\n        delete u[n], i.unregisterId(n);\n      });\n    }\n    var i = rg(),\n      u = {};\n    return {\n      find: function find(n, e, t) {\n        return i.find(n, e, t);\n      },\n      filter: function filter(n) {\n        return i.filterByType(n);\n      },\n      register: function register(n) {\n        var t,\n          o = ba((t = n).element).getOrThunk(function () {\n            return n = t.element, e = Gu(Us + \"uid-\"), Xs(n, e), e;\n            var n, e;\n          });\n        Re(u, o) && function (n) {\n          var e = u[o];\n          if (e !== n) throw new Error('The tagId \"' + o + '\" is already used by: ' + $o(e.element) + \"\\nCannot use it for: \" + $o(n.element) + \"\\nThe conflicting element is\" + (rt(e.element) ? \" \" : \" not \") + \"already in the DOM\");\n          r(n);\n        }(n), i.registerId([n], o, n.events), u[o] = n;\n      },\n      unregister: r,\n      getById: function getById(n) {\n        return _e(u, n);\n      }\n    };\n  }\n  cm.ltr, cm.rtl;\n  function ug(n, e, t, o, r) {\n    var i = tg(t, o);\n    return Ag(n, e, t, o, i, r);\n  }\n  var cg,\n    ag,\n    sg,\n    fg = function fg(n, e, t, o) {\n      return {\n        start: n,\n        soffset: e,\n        finish: t,\n        foffset: o\n      };\n    },\n    lg = (cg = qe, {\n      get: function get(n) {\n        if (!cg(n)) throw new Error(\"Can only get text value of a text node\");\n        return ag(n).getOr(\"\");\n      },\n      getOption: ag = function ag(n) {\n        return cg(n) ? mn.from(n.dom.nodeValue) : mn.none();\n      },\n      set: function set(n, e) {\n        if (!cg(n)) throw new Error(\"Can only set raw text value of a text node\");\n        n.dom.nodeValue = e;\n      }\n    }),\n    dg = Jt([{\n      before: [\"element\"]\n    }, {\n      on: [\"element\", \"offset\"]\n    }, {\n      after: [\"element\"]\n    }]),\n    mg = {\n      before: dg.before,\n      on: dg.on,\n      after: dg.after,\n      cata: function cata(n, e, t, o) {\n        return n.fold(e, t, o);\n      },\n      getStart: function getStart(n) {\n        return n.fold(K, K, K);\n      }\n    },\n    gg = Jt([{\n      domRange: [\"rng\"]\n    }, {\n      relative: [\"startSitu\", \"finishSitu\"]\n    }, {\n      exact: [\"start\", \"soffset\", \"finish\", \"foffset\"]\n    }]),\n    pg = {\n      domRange: gg.domRange,\n      relative: gg.relative,\n      exact: gg.exact,\n      exactFromRange: function exactFromRange(n) {\n        return gg.exact(n.start, n.soffset, n.finish, n.foffset);\n      },\n      getWin: function getWin(n) {\n        var e = n.match({\n          domRange: function domRange(n) {\n            return fe.fromDom(n.startContainer);\n          },\n          relative: function relative(n, e) {\n            return mg.getStart(n);\n          },\n          exact: function exact(n, e, t, o) {\n            return n;\n          }\n        });\n        return fe.fromDom(ge(e).dom.defaultView);\n      },\n      range: fg\n    },\n    hg = (sg = hm, function (e) {\n      return e.getWin.getOrThunk(function () {\n        var n = bm(e);\n        return function () {\n          return sg(n);\n        };\n      })();\n    }),\n    vg = \"data-ephox-mobile-fullscreen-style\",\n    bg = \"position:absolute!important;\",\n    yg = \"top:0!important;left:0!important;margin:0!important;padding:0!important;width:100%!important;height:100%!important;overflow:visible!important;\",\n    xg = Fn().os.isAndroid(),\n    wg = 6 <= Fn().os.version.major,\n    Sg = \"data-\" + ci(\"last-outer-height\"),\n    Og = w({\n      unbind: Y\n    }),\n    kg = lo([Gt(\"editor\", [Lt(\"getFrame\"), Ut(\"getBody\"), Ut(\"getDoc\"), Ut(\"getWin\"), Ut(\"getSelection\"), Ut(\"setSelection\"), Ut(\"clearSelection\"), Ut(\"cursorSaver\"), Ut(\"onKeyup\"), Ut(\"onNodeChanged\"), Ut(\"getCursorBox\"), Lt(\"onDomChanged\"), Yt(\"onTouchContent\", Y), Yt(\"onTapContent\", Y), Yt(\"onTouchToolstrip\", Y), Yt(\"onScrollToCursor\", Og), Yt(\"onScrollToElement\", Og), Yt(\"onToEditing\", Og), Yt(\"onToReading\", Og), Yt(\"onToolbarScrollStart\", K)]), Lt(\"socket\"), Lt(\"toolstrip\"), Lt(\"dropup\"), Lt(\"toolbar\"), Lt(\"container\"), Lt(\"alloy\"), vo(\"win\", function (n) {\n      return me(n.socket).dom.defaultView;\n    }), vo(\"body\", function (n) {\n      return fe.fromDom(n.socket.dom.ownerDocument.body);\n    }), Yt(\"translate\", K), Yt(\"setReadOnly\", Y), Yt(\"readOnlyOnInit\", x)]),\n    Tg = w([Lt(\"dom\"), Yt(\"shell\", !0), ju(\"toolbarBehaviours\", [jd])]),\n    Cg = w([Hs({\n      name: \"groups\",\n      overrides: function overrides() {\n        return {\n          behaviours: or([jd.config({})])\n        };\n      }\n    })]),\n    Eg = Sa({\n      name: \"Toolbar\",\n      configFields: Tg(),\n      partFields: Cg(),\n      factory: function factory(o, n, e, t) {\n        var r = o.shell ? {\n          behaviours: [jd.config({})],\n          components: []\n        } : {\n          behaviours: [],\n          components: n\n        };\n        return {\n          uid: o.uid,\n          dom: o.dom,\n          components: r.components,\n          behaviours: Lu(o.toolbarBehaviours, r.behaviours),\n          apis: {\n            setGroups: function setGroups(n, e) {\n              var t;\n              t = n, (o.shell ? mn.some(t) : ma(t, o, \"groups\")).fold(function () {\n                throw console.error(\"Toolbar was defined to not be a shell, but no groups container was specified in components\"), new Error(\"Toolbar was defined to not be a shell, but no groups container was specified in components\");\n              }, function (n) {\n                jd.set(n, e);\n              });\n            }\n          },\n          domModification: {\n            attributes: {\n              role: \"group\"\n            }\n          }\n        };\n      },\n      apis: {\n        setGroups: function setGroups(n, e, t) {\n          n.setGroups(e, t);\n        }\n      }\n    }),\n    Dg = w([Lt(\"items\"), Gt(\"markers\", Z([\"itemSelector\"], Lt)), ju(\"tgroupBehaviours\", [jc])]),\n    Mg = w([Ps({\n      name: \"items\",\n      unit: \"item\"\n    })]),\n    _g = Sa({\n      name: \"ToolbarGroup\",\n      configFields: Dg(),\n      partFields: Mg(),\n      factory: function factory(n, e, t, o) {\n        return {\n          uid: n.uid,\n          dom: n.dom,\n          components: e,\n          behaviours: Lu(n.tgroupBehaviours, [jc.config({\n            mode: \"flow\",\n            selector: n.markers.itemSelector\n          })]),\n          domModification: {\n            attributes: {\n              role: \"toolbar\"\n            }\n          }\n        };\n      }\n    }),\n    Rg = \"data-\" + ci(\"horizontal-scroll\"),\n    Fg = Object.freeze({\n      __proto__: null,\n      refresh: function refresh(n, e, t) {\n        var o;\n        t.isExpanded() && (Xr(n.element, $m(e)), o = Gm(e, n.element), $r(n.element, $m(e), o));\n      },\n      grow: function grow(n, e, t) {\n        t.isExpanded() || Km(n, e, t);\n      },\n      shrink: function shrink(n, e, t) {\n        t.isExpanded() && Ym(n, e, t);\n      },\n      immediateShrink: function immediateShrink(n, e, t) {\n        t.isExpanded() && qm(n, e, t);\n      },\n      hasGrown: function hasGrown(n, e, t) {\n        return t.isExpanded();\n      },\n      hasShrunk: function hasShrunk(n, e, t) {\n        return t.isCollapsed();\n      },\n      isGrowing: Jm,\n      isShrinking: Qm,\n      isTransitioning: function isTransitioning(n, e, t) {\n        return Jm(n, e) || Qm(n, e);\n      },\n      toggleGrow: function toggleGrow(n, e, t) {\n        (t.isExpanded() ? Ym : Km)(n, e, t);\n      },\n      disableTransitions: Um\n    }),\n    Ig = Object.freeze({\n      __proto__: null,\n      exhibit: function exhibit(n, e, t) {\n        return Io(e.expanded ? {\n          classes: [e.openClass],\n          styles: {}\n        } : {\n          classes: [e.closedClass],\n          styles: yo(e.dimension.property, \"0px\")\n        });\n      },\n      events: function events(t, o) {\n        return qo([Mo(Wn())(function (n, e) {\n          e.event.raw.propertyName === t.dimension.property && (Um(n, t), o.isExpanded() && Xr(n.element, t.dimension.property), (o.isExpanded() ? t.onGrown : t.onShrunk)(n));\n        })]);\n      }\n    }),\n    Vg = Ao({\n      fields: [Lt(\"closedClass\"), Lt(\"openClass\"), Lt(\"shrinkingClass\"), Lt(\"growingClass\"), Ut(\"getAnimationRoot\"), kr(\"onShrunk\"), kr(\"onStartShrink\"), kr(\"onGrown\"), kr(\"onStartGrow\"), Yt(\"expanded\", !1), $t(\"dimension\", jt(\"property\", {\n        width: [Dr(\"property\", \"width\"), Dr(\"getDimension\", function (n) {\n          return Ba(n) + \"px\";\n        })],\n        height: [Dr(\"property\", \"height\"), Dr(\"getDimension\", function (n) {\n          return Kr(n) + \"px\";\n        })]\n      }))],\n      name: \"sliding\",\n      active: Ig,\n      apis: Fg,\n      state: Object.freeze({\n        __proto__: null,\n        init: function init(n) {\n          var e = No(n.expanded);\n          return tr({\n            isExpanded: function isExpanded() {\n              return !0 === e.get();\n            },\n            isCollapsed: function isCollapsed() {\n              return !1 === e.get();\n            },\n            setCollapsed: J(e.set, !1),\n            setExpanded: J(e.set, !0),\n            readState: function readState() {\n              return \"expanded: \" + e.get();\n            }\n          });\n        }\n      })\n    }),\n    Bg = Jt([{\n      stopped: []\n    }, {\n      resume: [\"element\"]\n    }, {\n      complete: []\n    }]),\n    Ag = function Ag(e, t, o, n, r, i) {\n      return og(e, t, o, n, r, i).fold(x, function (n) {\n        return Ag(e, t, o, n, r, i);\n      }, S);\n    },\n    Ng = function Ng(t) {\n      function o(e) {\n        return pe(t.element).fold(x, function (n) {\n          return un(e, n);\n        });\n      }\n      function s(n, e) {\n        return i.find(o, n, e);\n      }\n      function r(e) {\n        M(i.filter(Qn()), function (n) {\n          dl(n.descHandler)(e);\n        });\n      }\n      var i = ig(),\n        n = eg(t.element, {\n          triggerEvent: function triggerEvent(e, t) {\n            return vr(e, t.target, function (n) {\n              return ug(s, e, t, t.target, n);\n            });\n          }\n        }),\n        u = {\n          debugInfo: w(\"real\"),\n          triggerEvent: function triggerEvent(e, t, o) {\n            vr(e, t, function (n) {\n              return ug(s, e, o, t, n);\n            });\n          },\n          triggerFocus: function triggerFocus(c, a) {\n            ba(c).fold(function () {\n              Ho(c);\n            }, function (n) {\n              vr(Yn(), c, function (n) {\n                var e,\n                  t,\n                  o = s,\n                  r = Yn(),\n                  i = n,\n                  u = tg(e = {\n                    originator: a,\n                    kill: Y,\n                    prevent: Y,\n                    target: c\n                  }, t = c);\n                return og(o, r, e, t, u, i), !1;\n              });\n            });\n          },\n          triggerEscape: function triggerEscape(n, e) {\n            u.triggerEvent(\"keydown\", n.element, e.event);\n          },\n          getByUid: function getByUid(n) {\n            return g(n);\n          },\n          getByDom: function getByDom(n) {\n            return p(n);\n          },\n          build: Td,\n          addToGui: function addToGui(n) {\n            a(n);\n          },\n          removeFromGui: function removeFromGui(n) {\n            f(n);\n          },\n          addToWorld: function addToWorld(n) {\n            e(n);\n          },\n          removeFromWorld: function removeFromWorld(n) {\n            c(n);\n          },\n          broadcast: function broadcast(n) {\n            l(n);\n          },\n          broadcastOn: function broadcastOn(n, e) {\n            d(n, e);\n          },\n          broadcastEvent: function broadcastEvent(n, e) {\n            m(n, e);\n          },\n          isConnected: x\n        },\n        e = function e(n) {\n          n.connect(u), qe(n.element) || (i.register(n), M(n.components(), e), u.triggerEvent(oe(), n.element, {\n            target: n.element\n          }));\n        },\n        c = function c(n) {\n          qe(n.element) || (M(n.components(), c), i.unregister(n)), n.disconnect();\n        },\n        a = function a(n) {\n          at(t, n, Qe);\n        },\n        f = function f(n) {\n          Ce(n);\n        },\n        l = function l(n) {\n          r({\n            universal: !0,\n            data: n\n          });\n        },\n        d = function d(n, e) {\n          r({\n            universal: !1,\n            channels: n,\n            data: e\n          });\n        },\n        m = function m(n, e) {\n          var t,\n            o,\n            r = i.filter(n);\n          return o = {\n            stop: function stop() {\n              t.set(!0);\n            },\n            cut: Y,\n            isStopped: (t = No(!1)).get,\n            isCut: S,\n            event: e,\n            setSource: h(\"Cannot set source of a broadcasted event\"),\n            getSource: h(\"Cannot get source of a broadcasted event\")\n          }, M(r, function (n) {\n            dl(n.descHandler)(o);\n          }), o.isStopped();\n        },\n        g = function g(n) {\n          return i.getById(n).fold(function () {\n            return ht.error(new Error('Could not find component with uid: \"' + n + '\" in system.'));\n          }, ht.value);\n        },\n        p = function p(n) {\n          var e = ba(n).getOr(\"not found\");\n          return g(e);\n        };\n      return e(t), {\n        root: t,\n        element: t.element,\n        destroy: function destroy() {\n          n.unbind(), Ze(t.element);\n        },\n        add: a,\n        remove: f,\n        getByUid: g,\n        getByDom: p,\n        addToWorld: e,\n        removeFromWorld: c,\n        broadcast: l,\n        broadcastOn: d,\n        broadcastEvent: m\n      };\n    },\n    Hg = ci(\"readonly-mode\"),\n    Pg = ci(\"edit-mode\");\n  function zg(n) {\n    var e = Td(td.sketch({\n      dom: {\n        classes: [ci(\"outer-container\")].concat(n.classes)\n      },\n      containerBehaviours: or([cr.config({\n        alpha: Hg,\n        omega: Pg\n      })])\n    }));\n    return Ng(e);\n  }\n  function jg(n, e) {\n    var t = fe.fromTag(\"input\");\n    Gr(t, {\n      opacity: \"0\",\n      position: \"absolute\",\n      top: \"-1000px\",\n      left: \"-1000px\"\n    }), Qe(n, t), Ho(t), e(t), Ze(t);\n  }\n  function Lg(n) {\n    var e,\n      t,\n      o = n.getSelection();\n    0 < o.rangeCount && (e = o.getRangeAt(0), (t = n.document.createRange()).setStart(e.startContainer, e.startOffset), t.setEnd(e.endContainer, e.endOffset), o.removeAllRanges(), o.addRange(t));\n  }\n  function $g(n, e) {\n    zo().each(function (n) {\n      un(n, e) || Po(n);\n    }), n.focus(), Ho(fe.fromDom(n.document.body)), Lg(n);\n  }\n  function Gg(n, e, t, o) {\n    function r() {\n      $g(e, o);\n    }\n    var i = Pl(t, \"keydown\", function (n) {\n      T([\"input\", \"textarea\"], le(n.target)) || r();\n    });\n    return {\n      toReading: function toReading() {\n        jg(n, Po);\n      },\n      toEditing: r,\n      onToolbarTouch: Y,\n      destroy: function destroy() {\n        i.unbind();\n      }\n    };\n  }\n  function Ug(n) {\n    setTimeout(function () {\n      throw n;\n    }, 0);\n  }\n  function Wg(n) {\n    var o,\n      r,\n      e = jl(n).isPortrait(),\n      t = (o = n.screen.width, r = n.screen.height, z([{\n        width: 320,\n        height: 480,\n        keyboard: {\n          portrait: 300,\n          landscape: 240\n        }\n      }, {\n        width: 320,\n        height: 568,\n        keyboard: {\n          portrait: 300,\n          landscape: 240\n        }\n      }, {\n        width: 375,\n        height: 667,\n        keyboard: {\n          portrait: 305,\n          landscape: 240\n        }\n      }, {\n        width: 414,\n        height: 736,\n        keyboard: {\n          portrait: 320,\n          landscape: 240\n        }\n      }, {\n        width: 768,\n        height: 1024,\n        keyboard: {\n          portrait: 320,\n          landscape: 400\n        }\n      }, {\n        width: 1024,\n        height: 1366,\n        keyboard: {\n          portrait: 380,\n          landscape: 460\n        }\n      }], function (n) {\n        return e = o <= n.width && r <= n.height, t = n.keyboard, e ? mn.some(t) : mn.none();\n        var e, t;\n      }).getOr({\n        portrait: r / 5,\n        landscape: o / 4\n      })),\n      i = e ? t.portrait : t.landscape;\n    return (e ? n.screen.height : n.screen.width) - n.innerHeight > i ? 0 : i;\n  }\n  function Xg(n, e) {\n    var t = me(n).dom.defaultView;\n    return Kr(n) + Kr(e) - Wg(t);\n  }\n  function qg(n, e, t) {\n    var o = Xg(e, t);\n    $r(n, \"padding-bottom\", Kr(e) + Kr(t) - o + \"px\");\n  }\n  function Yg(n) {\n    return Em(n, lp);\n  }\n  function Kg(n, e) {\n    var t = Be(n, dp);\n    return fp.fixed(n, t, e);\n  }\n  function Jg(n, e) {\n    return fp.scroller(n, e);\n  }\n  function Qg(n) {\n    var e = Yg(n);\n    return (\"true\" === Be(n, mp) ? Jg : Kg)(n, e);\n  }\n  function Zg(n, e, t) {\n    var o = me(n).dom.defaultView.innerHeight;\n    return Ie(n, gp, o + \"px\"), o - e - t;\n  }\n  function np(n) {\n    var e = Wr(n, \"top\").getOr(\"0\");\n    return parseInt(e, 10);\n  }\n  function ep(n) {\n    return parseInt(n.dom.scrollTop, 10);\n  }\n  function tp(r, i) {\n    return ap(function (n) {\n      var e = J(ep, r);\n      Ie(r, hp, e());\n      var t = Math.abs(i - e()),\n        o = Math.ceil(t / 10);\n      pp.animate(e, i, o, function (n, e) {\n        Em(r, hp) !== r.dom.scrollTop ? e(r.dom.scrollTop) : (r.dom.scrollTop = n, Ie(r, hp, n));\n      }, function () {\n        r.dom.scrollTop = i, Ie(r, hp, i), n(i);\n      }, 10);\n    });\n  }\n  function op(n, e) {\n    $r(n, \"top\", e + Yg(n) + \"px\");\n  }\n  var rp,\n    ip = function ip(n) {\n      function o(n) {\n        r() ? i(n) : e.push(n);\n      }\n      var t = mn.none(),\n        e = [],\n        r = function r() {\n          return t.isSome();\n        },\n        i = function i(e) {\n          t.each(function (n) {\n            setTimeout(function () {\n              e(n);\n            }, 0);\n          });\n        };\n      return n(function (n) {\n        r() || (t = mn.some(n), M(e, i), e = []);\n      }), {\n        get: o,\n        map: function map(t) {\n          return ip(function (e) {\n            o(function (n) {\n              e(t(n));\n            });\n          });\n        },\n        isReady: r\n      };\n    },\n    up = {\n      nu: ip,\n      pure: function pure(e) {\n        return ip(function (n) {\n          n(e);\n        });\n      }\n    },\n    cp = function cp(t) {\n      function n(n) {\n        t().then(n, Ug);\n      }\n      return {\n        map: function map(n) {\n          return cp(function () {\n            return t().then(n);\n          });\n        },\n        bind: function bind(e) {\n          return cp(function () {\n            return t().then(function (n) {\n              return e(n).toPromise();\n            });\n          });\n        },\n        anonBind: function anonBind(n) {\n          return cp(function () {\n            return t().then(function () {\n              return n.toPromise();\n            });\n          });\n        },\n        toLazy: function toLazy() {\n          return up.nu(n);\n        },\n        toCached: function toCached() {\n          var n = null;\n          return cp(function () {\n            return n = null === n ? t() : n;\n          });\n        },\n        toPromise: t,\n        get: n\n      };\n    },\n    ap = function ap(n) {\n      return cp(function () {\n        return new Jl(n);\n      });\n    },\n    sp = function sp(n) {\n      return cp(function () {\n        return Jl.resolve(n);\n      });\n    },\n    fp = Jt([{\n      fixed: [\"element\", \"property\", \"offsetY\"]\n    }, {\n      scroller: [\"element\", \"offsetY\"]\n    }]),\n    lp = \"data-\" + ci(\"position-y-fixed\"),\n    dp = \"data-\" + ci(\"y-property\"),\n    mp = \"data-\" + ci(\"scrolling\"),\n    gp = \"data-\" + ci(\"last-window-height\"),\n    pp = (rp = null, {\n      animate: function animate(r, i, u, c, e, n) {\n        function a(n) {\n          s = !0, e(n);\n        }\n        var s = !1;\n        function f(n) {\n          um.clearInterval(rp), a(n);\n        }\n        um.clearInterval(rp), rp = um.setInterval(function () {\n          var t = r(),\n            n = t,\n            e = i,\n            o = u;\n          (Math.abs(n - e) <= o ? mn.none() : n < e ? mn.some(n + o) : mn.some(n - o)).fold(function () {\n            um.clearInterval(rp), a(i);\n          }, function (n) {\n            var e;\n            c(n, f), s || ((e = r()) !== n || Math.abs(e - i) > Math.abs(t - i)) && (um.clearInterval(rp), a(i));\n          });\n        }, n);\n      }\n    }),\n    hp = \"data-\" + ci(\"last-scroll-top\");\n  function vp(n, l) {\n    return n.fold(function (n, e, t) {\n      return $r(n, e, l + (o = t) + \"px\"), sp(o);\n      var o;\n    }, function (n, e) {\n      return r = l + (o = e), i = Wr(t = n, \"top\").getOr(o), u = r - parseInt(i, 10), c = t.dom.scrollTop + u, a = t, s = c, f = r, ap(function (n) {\n        var e = J(ep, a);\n        pp.animate(e, s, 15, function (n) {\n          a.dom.scrollTop = n, $r(a, \"top\", np(a) + 15 + \"px\");\n        }, function () {\n          a.dom.scrollTop = s, $r(a, \"top\", f + \"px\"), n(s);\n        }, 10);\n      });\n      var t, o, r, i, u, c, a, s, f;\n    });\n  }\n  function bp(n, e) {\n    var u,\n      t = Z(Jr(n, \"[\" + lp + \"]\"), Qg),\n      o = Z(t, function (n) {\n        return vp(n, e);\n      });\n    return u = o, ap(function (o) {\n      var r = [],\n        i = 0;\n      0 === u.length ? o([]) : M(u, function (n, e) {\n        var t;\n        n.get((t = e, function (n) {\n          r[t] = n, ++i >= u.length && o(r);\n        }));\n      });\n    });\n  }\n  function yp(n) {\n    var o,\n      r,\n      i,\n      u,\n      e,\n      t,\n      c,\n      a,\n      s,\n      f,\n      l,\n      d,\n      m,\n      g,\n      p,\n      h,\n      v,\n      b,\n      y,\n      x = n.cWin,\n      w = n.ceBody,\n      S = n.socket,\n      O = n.toolstrip,\n      k = n.contentElement,\n      T = n.keyboardType,\n      C = n.outerWindow,\n      E = n.dropup,\n      D = n.outerBody,\n      M = (r = w, i = O, u = E, m = me(o = S).dom.defaultView, d = Be(l = i, \"style\"), Gr(l, {\n        position: \"absolute\",\n        top: \"0px\"\n      }), Ie(l, lp, \"0px\"), Ie(l, dp, \"top\"), g = {\n        restore: function restore() {\n          Ie(l, \"style\", d || \"\"), He(l, lp), He(l, dp);\n        }\n      }, p = Kr(i), h = Kr(u), a = Zg(o, c = p, h), f = Be(s = o, \"style\"), _l(s), Gr(s, {\n        position: \"absolute\",\n        height: a + \"px\",\n        width: \"100%\",\n        top: c + \"px\"\n      }), Ie(s, lp, c + \"px\"), Ie(s, mp, \"true\"), Ie(s, dp, \"top\"), v = {\n        restore: function restore() {\n          Rl(s), Ie(s, \"style\", f || \"\"), He(s, lp), He(s, mp), He(s, dp);\n        }\n      }, t = Be(e = u, \"style\"), Gr(e, {\n        position: \"absolute\",\n        bottom: \"0px\"\n      }), Ie(e, lp, \"0px\"), Ie(e, dp, \"bottom\"), b = {\n        restore: function restore() {\n          Ie(e, \"style\", t || \"\"), He(e, lp), He(e, dp);\n        }\n      }, y = !0, qg(r, o, u), {\n        setViewportOffset: function setViewportOffset(n) {\n          Ie(o, lp, n + \"px\"), I();\n        },\n        isExpanding: F,\n        isShrinking: Q(F),\n        refresh: I,\n        restore: function restore() {\n          y = !1, g.restore(), v.restore(), b.restore();\n        }\n      }),\n      _ = T(D, x, ke(), k),\n      R = Ll(C, {\n        onChange: Y,\n        onReady: M.refresh\n      });\n    function F() {\n      var n = m.innerHeight;\n      return Em(o, gp) < n;\n    }\n    function I() {\n      var n, e, t;\n      y && (n = Kr(i), e = Kr(u), t = Zg(o, n, e), Ie(o, lp, n + \"px\"), $r(o, \"height\", t + \"px\"), qg(r, o, u));\n    }\n    R.onAdjustment(function () {\n      M.refresh();\n    });\n    function V() {\n      q.clear();\n    }\n    var B,\n      A,\n      N,\n      H,\n      P,\n      z,\n      j,\n      L,\n      $,\n      G,\n      U,\n      W = Pl(fe.fromDom(C), \"resize\", function () {\n        M.isExpanding() && M.refresh();\n      }),\n      X = (B = O, A = S, N = D, H = C, P = M, z = x, j = function j(n) {\n        return t = A, o = n, r = me(e = B).dom.defaultView, ap(function (n) {\n          op(e, o), op(t, o), r.scrollTo(0, o), n(o);\n        });\n        var e, t, o, r;\n      }, L = No(up.pure({})), $ = {\n        start: function start(e) {\n          var n = up.nu(function (n) {\n            return j(e).get(n);\n          });\n          L.set(n);\n        },\n        idle: function idle(n) {\n          L.get().get(function () {\n            n();\n          });\n        }\n      }, G = Vm(function () {\n        $.idle(function () {\n          bp(N, H.pageYOffset).get(function () {\n            var n = _m(z);\n            mn.from(n[0]).bind(function (n) {\n              var e = n.top - A.dom.scrollTop;\n              return e > H.innerHeight + 5 || e < -5 ? mn.some({\n                top: e,\n                bottom: e + n.height\n              }) : mn.none();\n            }).each(function (n) {\n              A.dom.scrollTop = A.dom.scrollTop + n.top;\n            }), $.start(0), P.refresh();\n          });\n        });\n      }, 1e3), U = Pl(fe.fromDom(H), \"scroll\", function () {\n        H.pageYOffset < 0 || G.throttle();\n      }), bp(N, H.pageYOffset).get(K), {\n        unbind: U.unbind\n      }),\n      q = function (e, t) {\n        var n = e.document,\n          o = fe.fromTag(\"div\");\n        function r(n) {\n          var e = fe.fromTag(\"span\");\n          return pl(e, [ci(\"layer-editor\"), ci(\"unfocused-selection\")]), Gr(e, {\n            left: n.left + \"px\",\n            top: n.top + \"px\",\n            width: n.width + \"px\",\n            height: n.height + \"px\"\n          }), e;\n        }\n        je(o, ci(\"unfocused-selections\")), Qe(fe.fromDom(n.documentElement), o);\n        var i = Pl(o, \"touchstart\", function (n) {\n            n.prevent(), $g(e, t), u();\n          }),\n          u = function u() {\n            we(o);\n          };\n        return {\n          update: function update() {\n            u();\n            var n = Z(_m(e), r);\n            xe(o, n);\n          },\n          isActive: function isActive() {\n            return 0 < Je(o).length;\n          },\n          destroy: function destroy() {\n            i.unbind(), Ze(o);\n          },\n          clear: u\n        };\n      }(x, k);\n    return {\n      toEditing: function toEditing() {\n        _.toEditing(), V();\n      },\n      toReading: function toReading() {\n        _.toReading();\n      },\n      onToolbarTouch: function onToolbarTouch(n) {\n        _.onToolbarTouch();\n      },\n      refreshSelection: function refreshSelection() {\n        q.isActive() && q.update();\n      },\n      clearSelection: V,\n      highlightSelection: function highlightSelection() {\n        q.update();\n      },\n      scrollIntoView: function scrollIntoView(n, e) {\n        var t,\n          o = x,\n          r = n,\n          i = e,\n          u = Xg(t = S, E),\n          c = J(Lg, o);\n        u < r || u < i ? tp(t, t.dom.scrollTop - u + i).get(c) : r < 0 && tp(t, t.dom.scrollTop + r).get(c);\n      },\n      updateToolbarPadding: Y,\n      setViewportOffset: function setViewportOffset(n) {\n        var i, u;\n        M.setViewportOffset(n), i = S, u = n, ap(function (n) {\n          function e(n) {\n            $r(i, \"top\", n + \"px\");\n          }\n          var t = J(np, i),\n            o = Math.abs(u - t()),\n            r = Math.ceil(o / 10);\n          pp.animate(t, u, r, e, function () {\n            e(u), n(u);\n          }, 10);\n        }).get(K);\n      },\n      syncHeight: function syncHeight() {\n        $r(k, \"height\", k.dom.contentWindow.document.body.scrollHeight + \"px\");\n      },\n      refreshStructure: M.refresh,\n      destroy: function destroy() {\n        M.restore(), R.destroy(), X.unbind(), W.unbind(), _.destroy(), q.destroy(), jg(ke(), Po);\n      }\n    };\n  }\n  function xp(g, n) {\n    var p = wm(),\n      h = cu(),\n      v = cu(),\n      b = uu(),\n      y = uu();\n    return {\n      enter: function enter() {\n        n.hide();\n        var m = fe.fromDom(document);\n        xm(g.editor).each(function (n) {\n          var e, t, o, r, i, u, c, a;\n          function s() {\n            o.run(function (n) {\n              n.refreshSelection();\n            });\n          }\n          function f(n, e) {\n            var t = n - i.dom.scrollTop;\n            o.run(function (n) {\n              n.scrollIntoView(t, t + e);\n            });\n          }\n          function l() {\n            o.run(function (n) {\n              n.clearSelection();\n            });\n          }\n          function d() {\n            t.getCursorBox().each(function (n) {\n              f(n.top, n.height);\n            }), o.run(function (n) {\n              n.syncHeight();\n            });\n          }\n          h.set({\n            socketHeight: Wr(g.socket, \"height\"),\n            iframeHeight: Wr(n.frame, \"height\"),\n            outerScroll: document.body.scrollTop\n          }), v.set({\n            exclusives: (e = \".\" + Zd, Pl(m, \"touchmove\", function (n) {\n              vi(n.target, e).filter(Nm).fold(function () {\n                n.prevent();\n              }, Y);\n            }))\n          }), je(g.container, ci(\"fullscreen-maximized\")), Sm(g.container, n.body), p.maximize(), $r(g.socket, \"overflow\", \"scroll\"), $r(g.socket, \"-webkit-overflow-scrolling\", \"touch\"), Ho(n.body), b.set(yp({\n            cWin: n.win,\n            ceBody: n.body,\n            socket: g.socket,\n            toolstrip: g.toolstrip,\n            dropup: g.dropup.element,\n            contentElement: n.frame,\n            outerBody: g.body,\n            outerWindow: g.win,\n            keyboardType: Gg\n          })), b.run(function (n) {\n            n.syncHeight();\n          }), y.set((t = n, o = b, r = g.toolstrip, i = g.socket, g.dropup, u = Cm(t), c = Vm(d, 300), a = [t.onKeyup(function () {\n            l(), c.throttle();\n          }), t.onNodeChanged(s), t.onDomChanged(c.throttle), t.onDomChanged(s), t.onScrollToCursor(function (n) {\n            n.preventDefault(), c.throttle();\n          }), t.onScrollToElement(function (n) {\n            n.element, f(o, i);\n          }), t.onToEditing(function () {\n            o.run(function (n) {\n              n.toEditing();\n            });\n          }), t.onToReading(function () {\n            o.run(function (n) {\n              n.toReading();\n            });\n          }), Pl(t.doc, \"touchend\", function (n) {\n            un(t.html, n.target) || un(t.body, n.target);\n          }), Pl(r, \"transitionend\", function (n) {\n            var e;\n            \"height\" === n.raw.propertyName && (e = Kr(r), o.run(function (n) {\n              n.setViewportOffset(e);\n            }), s(), d());\n          }), zl(r, \"touchstart\", function (n) {\n            var e;\n            o.run(function (n) {\n              n.highlightSelection();\n            }), e = n, o.run(function (n) {\n              n.onToolbarTouch(e);\n            }), t.onTouchToolstrip();\n          }), Pl(t.body, \"touchstart\", function (n) {\n            l(), t.onTouchContent(), u.fireTouchstart(n);\n          }), u.onTouchmove(), u.onTouchend(), Pl(t.body, \"click\", function (n) {\n            n.kill();\n          }), Pl(r, \"touchmove\", function () {\n            t.onToolbarScrollStart();\n          })], {\n            destroy: function destroy() {\n              M(a, function (n) {\n                n.unbind();\n              });\n            }\n          }));\n        });\n      },\n      refreshStructure: function refreshStructure() {\n        b.run(function (n) {\n          n.refreshStructure();\n        });\n      },\n      exit: function exit() {\n        p.restore(), y.clear(), b.clear(), n.show(), h.on(function (n) {\n          n.socketHeight.each(function (n) {\n            $r(g.socket, \"height\", n);\n          }), n.iframeHeight.each(function (n) {\n            $r(g.editor.getFrame(), \"height\", n);\n          }), document.body.scrollTop = n.scrollTop;\n        }), h.clear(), v.on(function (n) {\n          n.exclusives.unbind();\n        }), v.clear(), Le(g.container, ci(\"fullscreen-maximized\")), Om(), Rl(g.toolbar), Xr(g.socket, \"overflow\"), Xr(g.socket, \"-webkit-overflow-scrolling\"), Po(g.editor.getFrame()), xm(g.editor).each(function (n) {\n          n.clearSelection();\n        });\n      }\n    };\n  }\n  function wp(n, e, t) {\n    n.system.broadcastOn([dr], {\n      command: e,\n      state: t\n    });\n  }\n  function Sp(e) {\n    return function () {\n      function n() {\n        e._skinLoaded = !0, e.fire(\"SkinLoaded\");\n      }\n      e.initialized ? n() : e.on(\"init\", n);\n    };\n  }\n  var Op = tinymce.util.Tools.resolve(\"tinymce.EditorManager\"),\n    kp = \"toReading\",\n    Tp = \"toEditing\";\n  sr.add(\"mobile\", function (E) {\n    return {\n      getNotificationManagerImpl: function getNotificationManagerImpl() {\n        return {\n          open: w({\n            progressBar: {\n              value: Y\n            },\n            close: Y,\n            text: Y,\n            getEl: w(null),\n            moveTo: Y,\n            moveRel: Y,\n            settings: {}\n          }),\n          close: Y,\n          reposition: Y,\n          getArgs: w({})\n        };\n      },\n      renderUI: function renderUI() {\n        var n,\n          e,\n          t = E.getElement(),\n          o = {\n            content: (n = mn.from(E.getParam(\"skin_url\")).getOrThunk(function () {\n              return Op.baseURL + \"/skins/ui/oxide\";\n            })) + \"/content.mobile.min.css\",\n            ui: n + \"/skin.mobile.min.css\"\n          };\n        function r() {\n          E.fire(\"ScrollIntoView\");\n        }\n        !1 === E.getParam(\"skin\") == 0 ? (e = ar.DOM.styleSheetLoader, E.contentCSS.push(o.content), e.load(o.ui, Sp(E)), E.on(\"remove\", function () {\n          return e.unload(o.ui);\n        })) : Sp(E)();\n        var i,\n          u,\n          c,\n          a,\n          s,\n          f,\n          l,\n          d,\n          m,\n          g,\n          p,\n          h,\n          v,\n          b,\n          y,\n          x,\n          w = Fn().os.isAndroid() ? (i = r, u = zg({\n            classes: [ci(\"android-container\")]\n          }), c = Hm(), a = uu(), s = Pm(a), f = zm(), l = Zm(Y, i), u.add(c.wrapper), u.add(f), u.add(l.component), {\n            system: u,\n            element: u.element,\n            init: function init(n) {\n              a.set(Am(n));\n            },\n            exit: function exit() {\n              a.run(function (n) {\n                n.exit(), jd.remove(f, s);\n              });\n            },\n            setToolbarGroups: function setToolbarGroups(n) {\n              var e = c.createGroups(n);\n              c.setGroups(e);\n            },\n            setContextToolbar: function setContextToolbar(n) {\n              var e = c.createGroups(n);\n              c.setContextToolbar(e);\n            },\n            focusToolbar: function focusToolbar() {\n              c.focus();\n            },\n            restoreToolbar: function restoreToolbar() {\n              c.restoreToolbar();\n            },\n            updateMode: function updateMode(n) {\n              jm(f, s, n, u.root);\n            },\n            socket: f,\n            dropup: l\n          }) : (m = r, g = zg({\n            classes: [ci(\"ios-container\")]\n          }), p = Hm(), h = uu(), v = Pm(h), b = zm(), y = Zm(function () {\n            h.run(function (n) {\n              n.refreshStructure();\n            });\n          }, m), g.add(p.wrapper), g.add(b), g.add(y.component), {\n            system: g,\n            element: g.element,\n            init: function init(r) {\n              h.set(function () {\n                var n = zt(\"Getting IosWebapp schema\", kg, r);\n                $r(n.toolstrip, \"width\", \"100%\"), $r(n.container, \"position\", \"relative\");\n                var e = Td(Bm(function () {\n                  n.setReadOnly(n.readOnlyOnInit()), o.enter();\n                }, n.translate));\n                n.alloy.add(e);\n                var t = {\n                    show: function show() {\n                      n.alloy.add(e);\n                    },\n                    hide: function hide() {\n                      n.alloy.remove(e);\n                    }\n                  },\n                  o = xp(n, t);\n                return {\n                  setReadOnly: n.setReadOnly,\n                  refreshStructure: o.refreshStructure,\n                  enter: o.enter,\n                  exit: o.exit,\n                  destroy: Y\n                };\n              }());\n            },\n            exit: function exit() {\n              h.run(function (n) {\n                jd.remove(b, v), n.exit();\n              });\n            },\n            setToolbarGroups: function setToolbarGroups(n) {\n              var e = p.createGroups(n);\n              p.setGroups(e);\n            },\n            setContextToolbar: function setContextToolbar(n) {\n              var e = p.createGroups(n);\n              p.setContextToolbar(e);\n            },\n            focusToolbar: function focusToolbar() {\n              p.focus();\n            },\n            restoreToolbar: function restoreToolbar() {\n              p.restoreToolbar();\n            },\n            updateMode: function updateMode(n) {\n              jm(b, v, n, g.root);\n            },\n            socket: b,\n            dropup: y\n          }),\n          S = fe.fromDom(t);\n        function O(n, e, t, o) {\n          !1 === o && E.selection.collapse();\n          var r,\n            i,\n            u,\n            c = (r = e, i = t, {\n              readOnly: (u = n.get()).backToMask.concat(r.get()),\n              main: u.backToMask.concat(i.get())\n            });\n          w.setToolbarGroups(!0 === o ? c.readOnly : c.main), E.setMode(!0 === o ? \"readonly\" : \"design\"), E.fire(!0 === o ? kp : Tp), w.updateMode(o);\n        }\n        function k(n, e) {\n          return E.on(n, e), {\n            unbind: function unbind() {\n              E.off(n);\n            }\n          };\n        }\n        d = w.system, be(S, (x = d).element), M(Je(x.element), function (n) {\n          x.getByDom(n).each(ct);\n        });\n        var T = t.ownerDocument.defaultView,\n          C = Ll(T, {\n            onChange: function onChange() {\n              var n, e, t;\n              w.system.broadcastOn([mr], {\n                width: (n = T, e = Fn().os.isiOS(), t = jl(n).isPortrait(), e && !t ? n.screen.height : n.screen.width)\n              });\n            },\n            onReady: Y\n          });\n        return E.on(\"init\", function () {\n          w.init({\n            editor: {\n              getFrame: function getFrame() {\n                return fe.fromDom(E.contentAreaContainer.querySelector(\"iframe\"));\n              },\n              onDomChanged: function onDomChanged() {\n                return {\n                  unbind: Y\n                };\n              },\n              onToReading: function onToReading(n) {\n                return k(kp, n);\n              },\n              onToEditing: function onToEditing(n) {\n                return k(Tp, n);\n              },\n              onScrollToCursor: function onScrollToCursor(e) {\n                return E.on(\"ScrollIntoView\", function (n) {\n                  e(n);\n                }), {\n                  unbind: function unbind() {\n                    E.off(\"ScrollIntoView\"), C.destroy();\n                  }\n                };\n              },\n              onTouchToolstrip: function onTouchToolstrip() {\n                i();\n              },\n              onTouchContent: function onTouchContent() {\n                jo(fe.fromDom(E.editorContainer.querySelector(\".\" + ci(\"toolbar\")))).bind(function (n) {\n                  return w.system.getByDom(n).toOptional();\n                }).each(q), w.restoreToolbar(), i();\n              },\n              onTapContent: function onTapContent(n) {\n                var e = n.target;\n                \"img\" === le(e) ? (E.selection.select(e.dom), n.kill()) : \"a\" === le(e) && w.system.getByDom(fe.fromDom(E.editorContainer)).each(function (n) {\n                  cr.isAlpha(n) && function (n) {\n                    var e = document.createElement(\"a\");\n                    e.target = \"_blank\", e.href = n.href, e.rel = \"noreferrer noopener\";\n                    var t = document.createEvent(\"MouseEvents\");\n                    t.initMouseEvent(\"click\", !0, !0, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), document.body.appendChild(e), e.dispatchEvent(t), document.body.removeChild(e);\n                  }(e.dom);\n                });\n              }\n            },\n            container: fe.fromDom(E.editorContainer),\n            socket: fe.fromDom(E.contentAreaContainer),\n            toolstrip: fe.fromDom(E.editorContainer.querySelector(\".\" + ci(\"toolstrip\"))),\n            toolbar: fe.fromDom(E.editorContainer.querySelector(\".\" + ci(\"toolbar\"))),\n            dropup: w.dropup,\n            alloy: w.system,\n            translate: Y,\n            setReadOnly: function setReadOnly(n) {\n              O(d, l, f, n);\n            },\n            readOnlyOnInit: function readOnlyOnInit() {\n              return !1;\n            }\n          });\n          var t,\n            n,\n            o,\n            r,\n            e,\n            i = function i() {\n              w.dropup.disappear(function () {\n                w.system.broadcastOn([gr], {});\n              });\n            },\n            u = {\n              label: \"The first group\",\n              scrollable: !1,\n              items: [nf(\"back\", function () {\n                E.selection.collapse(), w.exit();\n              }, {}, E)]\n            },\n            c = {\n              label: \"Back to read only\",\n              scrollable: !1,\n              items: [nf(\"readonly-back\", function () {\n                O(d, l, f, !0);\n              }, {}, E)]\n            },\n            a = Al(w, E),\n            s = {\n              label: \"The extra group\",\n              scrollable: !1,\n              items: []\n            },\n            f = No([{\n              label: \"the action group\",\n              scrollable: !0,\n              items: (t = a, e = E.getParam(\"toolbar\", lr, \"array\"), n = (D(e) ? om : Bl)(e), o = {}, B(n, function (n) {\n                var e = !Re(o, n) && Re(t, n) && t[n].isSupported() ? [t[n].sketch()] : [];\n                return o[n] = !0, e;\n              }))\n            }, s]),\n            l = No([{\n              label: \"The read only mode group\",\n              scrollable: !0,\n              items: []\n            }, s]),\n            d = No({\n              backToMask: [u],\n              backToReadOnly: [c]\n            }),\n            m = w;\n          M(st((r = E).formatter.get()), function (e) {\n            r.formatter.formatChanged(e, function (n) {\n              wp(m, e, n);\n            });\n          }), M([\"ul\", \"ol\"], function (t) {\n            r.selection.selectorChanged(t, function (n, e) {\n              wp(m, t, n);\n            });\n          });\n        }), E.on(\"remove\", function () {\n          w.exit();\n        }), E.on(\"detach\", function () {\n          var e = w.system;\n          M(Je(e.element), function (n) {\n            e.getByDom(n).each(ut);\n          }), Ze(e.element), w.system.destroy();\n        }), {\n          iframeContainer: w.socket.element.dom,\n          editorContainer: w.element.dom\n        };\n      }\n    };\n  });\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/themes/mobile/theme.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/themes/mobile/theme.min.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;
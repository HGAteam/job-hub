/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/documentation/general/datatables/advanced.js":
/*!**************************************************************************************!*\
  !*** ./resources/assets/core/js/custom/documentation/general/datatables/advanced.js ***!
  \**************************************************************************************/
/***/ (() => {

eval("\n\n// Class definition\nvar KTDatatablesAdvanced = function () {\n  // Private functions\n\n  var _initExample1 = function _initExample1() {\n    var status = {\n      1: {\n        \"title\": \"Pending\",\n        \"state\": \"primary\"\n      },\n      2: {\n        \"title\": \"Delivered\",\n        \"state\": \"danger\"\n      },\n      3: {\n        \"title\": \"Canceled\",\n        \"state\": \"primary\"\n      },\n      4: {\n        \"title\": \"Success\",\n        \"state\": \"success\"\n      },\n      5: {\n        \"title\": \"Info\",\n        \"state\": \"info\"\n      },\n      6: {\n        \"title\": \"Danger\",\n        \"state\": \"danger\"\n      },\n      7: {\n        \"title\": \"Warning\",\n        \"state\": \"warning\"\n      }\n    };\n    $(\"#kt_datatable_example_1\").DataTable({\n      \"columnDefs\": [{\n        // The `data` parameter refers to the data for the cell (defined by the\n        // `data` option, which defaults to the column being worked with, in\n        // this case `data: 0`.\n        \"render\": function render(data, type, row) {\n          var index = KTUtil.getRandomInt(1, 7);\n          return data + '<span class=\"ms-2 badge badge-light-' + status[index]['state'] + ' fw-bold\">' + status[index]['title'] + '</span>';\n        },\n        \"targets\": 1\n      }]\n    });\n  };\n  var _initExample2 = function _initExample2() {\n    $(\"#kt_datatable_example_2\").DataTable({\n      \"columnDefs\": [{\n        \"visible\": false,\n        \"targets\": -1\n      }]\n    });\n  };\n  var _initExample3 = function _initExample3() {\n    var groupColumn = 2;\n    var table = $('#kt_datatable_example_3').DataTable({\n      \"columnDefs\": [{\n        \"visible\": false,\n        \"targets\": groupColumn\n      }],\n      \"order\": [[groupColumn, 'asc']],\n      \"displayLength\": 25,\n      \"drawCallback\": function drawCallback(settings) {\n        var api = this.api();\n        var rows = api.rows({\n          page: 'current'\n        }).nodes();\n        var last = null;\n        api.column(groupColumn, {\n          page: 'current'\n        }).data().each(function (group, i) {\n          if (last !== group) {\n            $(rows).eq(i).before('<tr class=\"group fs-5 fw-bolder\"><td colspan=\"5\">' + group + '</td></tr>');\n            last = group;\n          }\n        });\n      }\n    });\n\n    // Order by the grouping\n    $('#kt_datatable_example_3 tbody').on('click', 'tr.group', function () {\n      var currentOrder = table.order()[0];\n      if (currentOrder[0] === groupColumn && currentOrder[1] === 'asc') {\n        table.order([groupColumn, 'desc']).draw();\n      } else {\n        table.order([groupColumn, 'asc']).draw();\n      }\n    });\n  };\n  var _initExample4 = function _initExample4() {\n    $(\"#kt_datatable_example_4\").DataTable({\n      \"footerCallback\": function footerCallback(row, data, start, end, display) {\n        var api = this.api(),\n          data;\n\n        // Remove the formatting to get integer data for summation\n        var intVal = function intVal(i) {\n          return typeof i === \"string\" ? i.replace(/[\\$,]/g, \"\") * 1 : typeof i === \"number\" ? i : 0;\n        };\n\n        // Total over all pages\n        var total = api.column(4).data().reduce(function (a, b) {\n          return intVal(a) + intVal(b);\n        }, 0);\n\n        // Total over this page\n        var pageTotal = api.column(4, {\n          page: \"current\"\n        }).data().reduce(function (a, b) {\n          return intVal(a) + intVal(b);\n        }, 0);\n\n        // Update footer\n        $(api.column(4).footer()).html(\"$\" + pageTotal + \" ( $\" + total + \" total)\");\n      }\n    });\n  };\n  var _initExample5 = function _initExample5() {\n    $(\"#kt_datatable_example_5\").DataTable({\n      \"language\": {\n        \"lengthMenu\": \"Show _MENU_\"\n      },\n      \"dom\": \"<'row'\" + \"<'col-sm-6 d-flex align-items-center justify-conten-start'l>\" + \"<'col-sm-6 d-flex align-items-center justify-content-end'f>\" + \">\" + \"<'table-responsive'tr>\" + \"<'row'\" + \"<'col-sm-12 col-md-5 d-flex align-items-center justify-content-center justify-content-md-start'i>\" + \"<'col-sm-12 col-md-7 d-flex align-items-center justify-content-center justify-content-md-end'p>\" + \">\"\n    });\n  };\n  var _initExample6 = function _initExample6() {\n    var status = {\n      1: {\n        \"title\": \"Pending\",\n        \"state\": \"primary\"\n      },\n      2: {\n        \"title\": \"Delivered\",\n        \"state\": \"danger\"\n      },\n      3: {\n        \"title\": \"Canceled\",\n        \"state\": \"primary\"\n      },\n      4: {\n        \"title\": \"Success\",\n        \"state\": \"success\"\n      },\n      5: {\n        \"title\": \"Info\",\n        \"state\": \"info\"\n      },\n      6: {\n        \"title\": \"Danger\",\n        \"state\": \"danger\"\n      },\n      7: {\n        \"title\": \"Warning\",\n        \"state\": \"warning\"\n      }\n    };\n    $(\"#kt_datatable_example_6\").DataTable({\n      responsive: true,\n      columnDefs: [{\n        // The `data` parameter refers to the data for the cell (defined by the\n        // `data` option, which defaults to the column being worked with, in\n        // this case `data: 0`.\n        \"render\": function render(data, type, row) {\n          var index = KTUtil.getRandomInt(1, 7);\n          return data + '<span class=\"ms-2 badge badge-light-' + status[index]['state'] + ' fw-bold\">' + status[index]['title'] + '</span>';\n        },\n        \"targets\": 1\n      }]\n    });\n  };\n  var _initExample7 = function _initExample7() {\n    $(\"#kt_datatable_example_7\").DataTable({\n      select: true\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      _initExample1();\n      _initExample2();\n      _initExample3();\n      _initExample4();\n      _initExample5();\n      _initExample6();\n      _initExample7();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTDatatablesAdvanced.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/datatables/advanced.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/documentation/general/datatables/advanced.js"]();
/******/ 	
/******/ })()
;